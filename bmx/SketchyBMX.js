
var Module;
if (typeof Module === 'undefined') Module = eval('(function() { try { return Module || {} } catch(e) { return {} } })()');
if (!Module.expectedDataFileDownloads) {
  Module.expectedDataFileDownloads = 0;
  Module.finishedDataFileDownloads = 0;
}
Module.expectedDataFileDownloads++;
(function() {
    function fetchRemotePackage(packageName, callback, errback) {
      var xhr = new XMLHttpRequest();
      xhr.open('GET', packageName, true);
      xhr.responseType = 'arraybuffer';
      xhr.onprogress = function(event) {
        var url = packageName;
        if (event.loaded && event.total) {
          if (!xhr.addedTotal) {
            xhr.addedTotal = true;
            if (!Module.dataFileDownloads) Module.dataFileDownloads = {};
            Module.dataFileDownloads[url] = {
              loaded: event.loaded,
              total: event.total
            };
          } else {
            Module.dataFileDownloads[url].loaded = event.loaded;
          }
          var total = 0;
          var loaded = 0;
          var num = 0;
          for (var download in Module.dataFileDownloads) {
          var data = Module.dataFileDownloads[download];
            total += data.total;
            loaded += data.loaded;
            num++;
          }
          total = Math.ceil(total * Module.expectedDataFileDownloads/num);
          if (Module['setStatus']) Module['setStatus']('Downloading data... (' + loaded + '/' + total + ')');
        } else if (!Module.dataFileDownloads) {
          if (Module['setStatus']) Module['setStatus']('Downloading data...');
        }
      };
      xhr.onload = function(event) {
        var packageData = xhr.response;
        callback(packageData);
      };
      xhr.send(null);
    };
    function handleError(error) {
      console.error('package error:', error);
    };
      var fetched = null, fetchedCallback = null;
      fetchRemotePackage('SketchyBMX.data', function(data) {
        if (fetchedCallback) {
          fetchedCallback(data);
          fetchedCallback = null;
        } else {
          fetched = data;
        }
      }, handleError);
  function runWithFS() {
function assert(check, msg) {
  if (!check) throw msg + new Error().stack;
}
    function DataRequest(start, end, crunched, audio) {
      this.start = start;
      this.end = end;
      this.crunched = crunched;
      this.audio = audio;
    }
    DataRequest.prototype = {
      requests: {},
      open: function(mode, name) {
        this.name = name;
        this.requests[name] = this;
        Module['addRunDependency']('fp ' + this.name);
      },
      send: function() {},
      onload: function() {
        var byteArray = this.byteArray.subarray(this.start, this.end);
          this.finish(byteArray);
      },
      finish: function(byteArray) {
        var that = this;
        Module['FS_createPreloadedFile'](this.name, null, byteArray, true, true, function() {
          Module['removeRunDependency']('fp ' + that.name);
        }, function() {
          if (that.audio) {
            Module['removeRunDependency']('fp ' + that.name); // workaround for chromium bug 124926 (still no audio with this, but at least we don't hang)
          } else {
            Module.printErr('Preloading file ' + that.name + ' failed');
          }
        }, false, true); // canOwn this data in the filesystem, it is a slide into the heap that will never change
        this.requests[this.name] = null;
      },
    };
      new DataRequest(0, 647, 0, 0).open('GET', '/BasicFragShader.fsh');
    new DataRequest(647, 1143, 0, 0).open('GET', '/BasicLineFragShader.fsh');
    new DataRequest(1143, 1755, 0, 0).open('GET', '/BasicLineVertShader.vsh');
    new DataRequest(1755, 2685, 0, 0).open('GET', '/BasicVertShader.vsh');
    new DataRequest(2685, 3000, 0, 0).open('GET', '/ModelForShadowFragShader.fsh');
    new DataRequest(3000, 3349, 0, 0).open('GET', '/ModelForShadowVertShader.vsh');
    new DataRequest(3349, 5786, 0, 0).open('GET', '/ModelFragShader.fsh');
    new DataRequest(5786, 7572, 0, 0).open('GET', '/ModelVertShader.vsh');
    new DataRequest(7572, 10651, 0, 0).open('GET', '/SkinnedModelForShadowVertShader.vsh');
    new DataRequest(10651, 11937, 0, 0).open('GET', '/SkinnedModelFragShader.fsh');
    new DataRequest(11937, 17156, 0, 0).open('GET', '/SkinnedModelVertShader.vsh');
    new DataRequest(17156, 23304, 0, 0).open('GET', '/.DS_Store');
    new DataRequest(23304, 592558, 0, 0).open('GET', '/BikeBiNormals.pod');
    new DataRequest(592558, 618042, 0, 0).open('GET', '/Park.pod');
    new DataRequest(618042, 722607, 0, 0).open('GET', '/Rider.pod');
    new DataRequest(722607, 885348, 0, 0).open('GET', '/RiderBiNormals.pod');
    new DataRequest(885348, 1249537, 0, 0).open('GET', '/SketchyBMX.pod');
    new DataRequest(1249537, 1256683, 0, 0).open('GET', '/Spine.pod');
    new DataRequest(1256683, 1305608, 0, 0).open('GET', '/BikeUVMap.png');
    new DataRequest(1305608, 7334211, 0, 0).open('GET', '/ParkUVMap.png');
    new DataRequest(7334211, 9336888, 0, 0).open('GET', '/RiderUVMap.png');
    var PACKAGE_PATH;
    if (typeof window === 'object') {
      PACKAGE_PATH = window['encodeURIComponent'](window.location.pathname.toString().substring(0, window.location.pathname.toString().lastIndexOf('/')) + '/');
    } else {
      // worker
      PACKAGE_PATH = encodeURIComponent(location.pathname.toString().substring(0, location.pathname.toString().lastIndexOf('/')) + '/');
    }
    var PACKAGE_NAME = 'SketchyBMX.data';
    var REMOTE_PACKAGE_NAME = 'SketchyBMX.data';
    var PACKAGE_UUID = '6864d566-26be-4d46-807b-c3594da6fec8';
    function processPackageData(arrayBuffer) {
      Module.finishedDataFileDownloads++;
      assert(arrayBuffer, 'Loading data file failed.');
      var byteArray = new Uint8Array(arrayBuffer);
      var curr;
      // copy the entire loaded file into a spot in the heap. Files will refer to slices in that. They cannot be freed though.
      var ptr = Module['_malloc'](byteArray.length);
      Module['HEAPU8'].set(byteArray, ptr);
      DataRequest.prototype.byteArray = Module['HEAPU8'].subarray(ptr, ptr+byteArray.length);
          DataRequest.prototype.requests["/BasicFragShader.fsh"].onload();
          DataRequest.prototype.requests["/BasicLineFragShader.fsh"].onload();
          DataRequest.prototype.requests["/BasicLineVertShader.vsh"].onload();
          DataRequest.prototype.requests["/BasicVertShader.vsh"].onload();
          DataRequest.prototype.requests["/ModelForShadowFragShader.fsh"].onload();
          DataRequest.prototype.requests["/ModelForShadowVertShader.vsh"].onload();
          DataRequest.prototype.requests["/ModelFragShader.fsh"].onload();
          DataRequest.prototype.requests["/ModelVertShader.vsh"].onload();
          DataRequest.prototype.requests["/SkinnedModelForShadowVertShader.vsh"].onload();
          DataRequest.prototype.requests["/SkinnedModelFragShader.fsh"].onload();
          DataRequest.prototype.requests["/SkinnedModelVertShader.vsh"].onload();
          DataRequest.prototype.requests["/.DS_Store"].onload();
          DataRequest.prototype.requests["/BikeBiNormals.pod"].onload();
          DataRequest.prototype.requests["/Park.pod"].onload();
          DataRequest.prototype.requests["/Rider.pod"].onload();
          DataRequest.prototype.requests["/RiderBiNormals.pod"].onload();
          DataRequest.prototype.requests["/SketchyBMX.pod"].onload();
          DataRequest.prototype.requests["/Spine.pod"].onload();
          DataRequest.prototype.requests["/BikeUVMap.png"].onload();
          DataRequest.prototype.requests["/ParkUVMap.png"].onload();
          DataRequest.prototype.requests["/RiderUVMap.png"].onload();
          Module['removeRunDependency']('datafile_SketchyBMX.data');
    };
    Module['addRunDependency']('datafile_SketchyBMX.data');
    if (!Module.preloadResults) Module.preloadResults = {};
      Module.preloadResults[PACKAGE_NAME] = {fromCache: false};
      if (fetched) {
        processPackageData(fetched);
        fetched = null;
      } else {
        fetchedCallback = processPackageData;
      }
  }
  if (Module['calledRun']) {
    runWithFS();
  } else {
    if (!Module['preRun']) Module['preRun'] = [];
    Module["preRun"].push(runWithFS); // FS is not initialized yet, wait for it
  }
})();
// Note: For maximum-speed code, see "Optimizing Code" on the Emscripten wiki, https://github.com/kripken/emscripten/wiki/Optimizing-Code
// Note: Some Emscripten settings may limit the speed of the generated code.
// The Module object: Our interface to the outside world. We import
// and export values on it, and do the work to get that through
// closure compiler if necessary. There are various ways Module can be used:
// 1. Not defined. We create it here
// 2. A function parameter, function(Module) { ..generated code.. }
// 3. pre-run appended it, var Module = {}; ..generated code..
// 4. External script tag defines var Module.
// We need to do an eval in order to handle the closure compiler
// case, where this code here is minified but Module was defined
// elsewhere (e.g. case 4 above). We also need to check if Module
// already exists (e.g. case 3 above).
// Note that if you want to run closure, and also to use Module
// after the generated code, you will need to define   var Module = {};
// before the code. Then that object will be used in the code, and you
// can continue to use Module afterwards as well.
var Module;
if (!Module) Module = eval('(function() { try { return Module || {} } catch(e) { return {} } })()');
// Sometimes an existing Module object exists with properties
// meant to overwrite the default module functionality. Here
// we collect those properties and reapply _after_ we configure
// the current environment's defaults to avoid having to be so
// defensive during initialization.
var moduleOverrides = {};
for (var key in Module) {
  if (Module.hasOwnProperty(key)) {
    moduleOverrides[key] = Module[key];
  }
}
// The environment setup code below is customized to use Module.
// *** Environment setup code ***
var ENVIRONMENT_IS_NODE = typeof process === 'object' && typeof require === 'function';
var ENVIRONMENT_IS_WEB = typeof window === 'object';
var ENVIRONMENT_IS_WORKER = typeof importScripts === 'function';
var ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;
if (ENVIRONMENT_IS_NODE) {
  // Expose functionality in the same simple way that the shells work
  // Note that we pollute the global namespace here, otherwise we break in node
  Module['print'] = function print(x) {
    process['stdout'].write(x + '\n');
  };
  Module['printErr'] = function printErr(x) {
    process['stderr'].write(x + '\n');
  };
  var nodeFS = require('fs');
  var nodePath = require('path');
  Module['read'] = function read(filename, binary) {
    filename = nodePath['normalize'](filename);
    var ret = nodeFS['readFileSync'](filename);
    // The path is absolute if the normalized version is the same as the resolved.
    if (!ret && filename != nodePath['resolve'](filename)) {
      filename = path.join(__dirname, '..', 'src', filename);
      ret = nodeFS['readFileSync'](filename);
    }
    if (ret && !binary) ret = ret.toString();
    return ret;
  };
  Module['readBinary'] = function readBinary(filename) { return Module['read'](filename, true) };
  Module['load'] = function load(f) {
    globalEval(read(f));
  };
  Module['arguments'] = process['argv'].slice(2);
  module['exports'] = Module;
}
else if (ENVIRONMENT_IS_SHELL) {
  Module['print'] = print;
  if (typeof printErr != 'undefined') Module['printErr'] = printErr; // not present in v8 or older sm
  if (typeof read != 'undefined') {
    Module['read'] = read;
  } else {
    Module['read'] = function read() { throw 'no read() available (jsc?)' };
  }
  Module['readBinary'] = function readBinary(f) {
    return read(f, 'binary');
  };
  if (typeof scriptArgs != 'undefined') {
    Module['arguments'] = scriptArgs;
  } else if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }
  this['Module'] = Module;
  eval("if (typeof gc === 'function' && gc.toString().indexOf('[native code]') > 0) var gc = undefined"); // wipe out the SpiderMonkey shell 'gc' function, which can confuse closure (uses it as a minified name, and it is then initted to a non-falsey value unexpectedly)
}
else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {
  Module['read'] = function read(url) {
    var xhr = new XMLHttpRequest();
    xhr.open('GET', url, false);
    xhr.send(null);
    return xhr.responseText;
  };
  if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }
  if (typeof console !== 'undefined') {
    Module['print'] = function print(x) {
      console.log(x);
    };
    Module['printErr'] = function printErr(x) {
      console.log(x);
    };
  } else {
    // Probably a worker, and without console.log. We can do very little here...
    var TRY_USE_DUMP = false;
    Module['print'] = (TRY_USE_DUMP && (typeof(dump) !== "undefined") ? (function(x) {
      dump(x);
    }) : (function(x) {
      // self.postMessage(x); // enable this if you want stdout to be sent as messages
    }));
  }
  if (ENVIRONMENT_IS_WEB) {
    this['Module'] = Module;
  } else {
    Module['load'] = importScripts;
  }
}
else {
  // Unreachable because SHELL is dependant on the others
  throw 'Unknown runtime environment. Where are we?';
}
function globalEval(x) {
  eval.call(null, x);
}
if (!Module['load'] == 'undefined' && Module['read']) {
  Module['load'] = function load(f) {
    globalEval(Module['read'](f));
  };
}
if (!Module['print']) {
  Module['print'] = function(){};
}
if (!Module['printErr']) {
  Module['printErr'] = Module['print'];
}
if (!Module['arguments']) {
  Module['arguments'] = [];
}
// *** Environment setup code ***
// Closure helpers
Module.print = Module['print'];
Module.printErr = Module['printErr'];
// Callbacks
Module['preRun'] = [];
Module['postRun'] = [];
// Merge back in the overrides
for (var key in moduleOverrides) {
  if (moduleOverrides.hasOwnProperty(key)) {
    Module[key] = moduleOverrides[key];
  }
}
// === Auto-generated preamble library stuff ===
//========================================
// Runtime code shared with compiler
//========================================
var Runtime = {
  stackSave: function () {
    return STACKTOP;
  },
  stackRestore: function (stackTop) {
    STACKTOP = stackTop;
  },
  forceAlign: function (target, quantum) {
    quantum = quantum || 4;
    if (quantum == 1) return target;
    if (isNumber(target) && isNumber(quantum)) {
      return Math.ceil(target/quantum)*quantum;
    } else if (isNumber(quantum) && isPowerOfTwo(quantum)) {
      return '(((' +target + ')+' + (quantum-1) + ')&' + -quantum + ')';
    }
    return 'Math.ceil((' + target + ')/' + quantum + ')*' + quantum;
  },
  isNumberType: function (type) {
    return type in Runtime.INT_TYPES || type in Runtime.FLOAT_TYPES;
  },
  isPointerType: function isPointerType(type) {
  return type[type.length-1] == '*';
},
  isStructType: function isStructType(type) {
  if (isPointerType(type)) return false;
  if (isArrayType(type)) return true;
  if (/<?{ ?[^}]* ?}>?/.test(type)) return true; // { i32, i8 } etc. - anonymous struct types
  // See comment in isStructPointerType()
  return type[0] == '%';
},
  INT_TYPES: {"i1":0,"i8":0,"i16":0,"i32":0,"i64":0},
  FLOAT_TYPES: {"float":0,"double":0},
  or64: function (x, y) {
    var l = (x | 0) | (y | 0);
    var h = (Math.round(x / 4294967296) | Math.round(y / 4294967296)) * 4294967296;
    return l + h;
  },
  and64: function (x, y) {
    var l = (x | 0) & (y | 0);
    var h = (Math.round(x / 4294967296) & Math.round(y / 4294967296)) * 4294967296;
    return l + h;
  },
  xor64: function (x, y) {
    var l = (x | 0) ^ (y | 0);
    var h = (Math.round(x / 4294967296) ^ Math.round(y / 4294967296)) * 4294967296;
    return l + h;
  },
  getNativeTypeSize: function (type) {
    switch (type) {
      case 'i1': case 'i8': return 1;
      case 'i16': return 2;
      case 'i32': return 4;
      case 'i64': return 8;
      case 'float': return 4;
      case 'double': return 8;
      default: {
        if (type[type.length-1] === '*') {
          return Runtime.QUANTUM_SIZE; // A pointer
        } else if (type[0] === 'i') {
          var bits = parseInt(type.substr(1));
          assert(bits % 8 === 0);
          return bits/8;
        } else {
          return 0;
        }
      }
    }
  },
  getNativeFieldSize: function (type) {
    return Math.max(Runtime.getNativeTypeSize(type), Runtime.QUANTUM_SIZE);
  },
  dedup: function dedup(items, ident) {
  var seen = {};
  if (ident) {
    return items.filter(function(item) {
      if (seen[item[ident]]) return false;
      seen[item[ident]] = true;
      return true;
    });
  } else {
    return items.filter(function(item) {
      if (seen[item]) return false;
      seen[item] = true;
      return true;
    });
  }
},
  set: function set() {
  var args = typeof arguments[0] === 'object' ? arguments[0] : arguments;
  var ret = {};
  for (var i = 0; i < args.length; i++) {
    ret[args[i]] = 0;
  }
  return ret;
},
  STACK_ALIGN: 8,
  getAlignSize: function (type, size, vararg) {
    // we align i64s and doubles on 64-bit boundaries, unlike x86
    if (vararg) return 8;
    if (!vararg && (type == 'i64' || type == 'double')) return 8;
    if (!type) return Math.min(size, 8); // align structures internally to 64 bits
    return Math.min(size || (type ? Runtime.getNativeFieldSize(type) : 0), Runtime.QUANTUM_SIZE);
  },
  calculateStructAlignment: function calculateStructAlignment(type) {
    type.flatSize = 0;
    type.alignSize = 0;
    var diffs = [];
    var prev = -1;
    var index = 0;
    type.flatIndexes = type.fields.map(function(field) {
      index++;
      var size, alignSize;
      if (Runtime.isNumberType(field) || Runtime.isPointerType(field)) {
        size = Runtime.getNativeTypeSize(field); // pack char; char; in structs, also char[X]s.
        alignSize = Runtime.getAlignSize(field, size);
      } else if (Runtime.isStructType(field)) {
        if (field[1] === '0') {
          // this is [0 x something]. When inside another structure like here, it must be at the end,
          // and it adds no size
          // XXX this happens in java-nbody for example... assert(index === type.fields.length, 'zero-length in the middle!');
          size = 0;
          if (Types.types[field]) {
            alignSize = Runtime.getAlignSize(null, Types.types[field].alignSize);
          } else {
            alignSize = type.alignSize || QUANTUM_SIZE;
          }
        } else {
          size = Types.types[field].flatSize;
          alignSize = Runtime.getAlignSize(null, Types.types[field].alignSize);
        }
      } else if (field[0] == 'b') {
        // bN, large number field, like a [N x i8]
        size = field.substr(1)|0;
        alignSize = 1;
      } else if (field[0] === '<') {
        // vector type
        size = alignSize = Types.types[field].flatSize; // fully aligned
      } else if (field[0] === 'i') {
        // illegal integer field, that could not be legalized because it is an internal structure field
        // it is ok to have such fields, if we just use them as markers of field size and nothing more complex
        size = alignSize = parseInt(field.substr(1))/8;
        assert(size % 1 === 0, 'cannot handle non-byte-size field ' + field);
      } else {
        assert(false, 'invalid type for calculateStructAlignment');
      }
      if (type.packed) alignSize = 1;
      type.alignSize = Math.max(type.alignSize, alignSize);
      var curr = Runtime.alignMemory(type.flatSize, alignSize); // if necessary, place this on aligned memory
      type.flatSize = curr + size;
      if (prev >= 0) {
        diffs.push(curr-prev);
      }
      prev = curr;
      return curr;
    });
    if (type.name_ && type.name_[0] === '[') {
      // arrays have 2 elements, so we get the proper difference. then we scale here. that way we avoid
      // allocating a potentially huge array for [999999 x i8] etc.
      type.flatSize = parseInt(type.name_.substr(1))*type.flatSize/2;
    }
    type.flatSize = Runtime.alignMemory(type.flatSize, type.alignSize);
    if (diffs.length == 0) {
      type.flatFactor = type.flatSize;
    } else if (Runtime.dedup(diffs).length == 1) {
      type.flatFactor = diffs[0];
    }
    type.needsFlattening = (type.flatFactor != 1);
    return type.flatIndexes;
  },
  generateStructInfo: function (struct, typeName, offset) {
    var type, alignment;
    if (typeName) {
      offset = offset || 0;
      type = (typeof Types === 'undefined' ? Runtime.typeInfo : Types.types)[typeName];
      if (!type) return null;
      if (type.fields.length != struct.length) {
        printErr('Number of named fields must match the type for ' + typeName + ': possibly duplicate struct names. Cannot return structInfo');
        return null;
      }
      alignment = type.flatIndexes;
    } else {
      var type = { fields: struct.map(function(item) { return item[0] }) };
      alignment = Runtime.calculateStructAlignment(type);
    }
    var ret = {
      __size__: type.flatSize
    };
    if (typeName) {
      struct.forEach(function(item, i) {
        if (typeof item === 'string') {
          ret[item] = alignment[i] + offset;
        } else {
          // embedded struct
          var key;
          for (var k in item) key = k;
          ret[key] = Runtime.generateStructInfo(item[key], type.fields[i], alignment[i]);
        }
      });
    } else {
      struct.forEach(function(item, i) {
        ret[item[1]] = alignment[i];
      });
    }
    return ret;
  },
  dynCall: function (sig, ptr, args) {
    if (args && args.length) {
      if (!args.splice) args = Array.prototype.slice.call(args);
      args.splice(0, 0, ptr);
      return Module['dynCall_' + sig].apply(null, args);
    } else {
      return Module['dynCall_' + sig].call(null, ptr);
    }
  },
  functionPointers: [],
  addFunction: function (func) {
    for (var i = 0; i < Runtime.functionPointers.length; i++) {
      if (!Runtime.functionPointers[i]) {
        Runtime.functionPointers[i] = func;
        return 2*(1 + i);
      }
    }
    throw 'Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS.';
  },
  removeFunction: function (index) {
    Runtime.functionPointers[(index-2)/2] = null;
  },
  getAsmConst: function (code, numArgs) {
    // code is a constant string on the heap, so we can cache these
    if (!Runtime.asmConstCache) Runtime.asmConstCache = {};
    var func = Runtime.asmConstCache[code];
    if (func) return func;
    var args = [];
    for (var i = 0; i < numArgs; i++) {
      args.push(String.fromCharCode(36) + i); // $0, $1 etc
    }
    return Runtime.asmConstCache[code] = eval('(function(' + args.join(',') + '){ ' + Pointer_stringify(code) + ' })'); // new Function does not allow upvars in node
  },
  warnOnce: function (text) {
    if (!Runtime.warnOnce.shown) Runtime.warnOnce.shown = {};
    if (!Runtime.warnOnce.shown[text]) {
      Runtime.warnOnce.shown[text] = 1;
      Module.printErr(text);
    }
  },
  funcWrappers: {},
  getFuncWrapper: function (func, sig) {
    assert(sig);
    if (!Runtime.funcWrappers[func]) {
      Runtime.funcWrappers[func] = function dynCall_wrapper() {
        return Runtime.dynCall(sig, func, arguments);
      };
    }
    return Runtime.funcWrappers[func];
  },
  UTF8Processor: function () {
    var buffer = [];
    var needed = 0;
    this.processCChar = function (code) {
      code = code & 0xFF;
      if (buffer.length == 0) {
        if ((code & 0x80) == 0x00) {        // 0xxxxxxx
          return String.fromCharCode(code);
        }
        buffer.push(code);
        if ((code & 0xE0) == 0xC0) {        // 110xxxxx
          needed = 1;
        } else if ((code & 0xF0) == 0xE0) { // 1110xxxx
          needed = 2;
        } else {                            // 11110xxx
          needed = 3;
        }
        return '';
      }
      if (needed) {
        buffer.push(code);
        needed--;
        if (needed > 0) return '';
      }
      var c1 = buffer[0];
      var c2 = buffer[1];
      var c3 = buffer[2];
      var c4 = buffer[3];
      var ret;
      if (buffer.length == 2) {
        ret = String.fromCharCode(((c1 & 0x1F) << 6)  | (c2 & 0x3F));
      } else if (buffer.length == 3) {
        ret = String.fromCharCode(((c1 & 0x0F) << 12) | ((c2 & 0x3F) << 6)  | (c3 & 0x3F));
      } else {
        // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae
        var codePoint = ((c1 & 0x07) << 18) | ((c2 & 0x3F) << 12) |
                        ((c3 & 0x3F) << 6)  | (c4 & 0x3F);
        ret = String.fromCharCode(
          Math.floor((codePoint - 0x10000) / 0x400) + 0xD800,
          (codePoint - 0x10000) % 0x400 + 0xDC00);
      }
      buffer.length = 0;
      return ret;
    }
    this.processJSString = function processJSString(string) {
      string = unescape(encodeURIComponent(string));
      var ret = [];
      for (var i = 0; i < string.length; i++) {
        ret.push(string.charCodeAt(i));
      }
      return ret;
    }
  },
  stackAlloc: function (size) { var ret = STACKTOP;STACKTOP = (STACKTOP + size)|0;STACKTOP = (((STACKTOP)+7)&-8); return ret; },
  staticAlloc: function (size) { var ret = STATICTOP;STATICTOP = (STATICTOP + size)|0;STATICTOP = (((STATICTOP)+7)&-8); return ret; },
  dynamicAlloc: function (size) { var ret = DYNAMICTOP;DYNAMICTOP = (DYNAMICTOP + size)|0;DYNAMICTOP = (((DYNAMICTOP)+7)&-8); if (DYNAMICTOP >= TOTAL_MEMORY) enlargeMemory();; return ret; },
  alignMemory: function (size,quantum) { var ret = size = Math.ceil((size)/(quantum ? quantum : 8))*(quantum ? quantum : 8); return ret; },
  makeBigInt: function (low,high,unsigned) { var ret = (unsigned ? ((+((low>>>0)))+((+((high>>>0)))*(+4294967296))) : ((+((low>>>0)))+((+((high|0)))*(+4294967296)))); return ret; },
  GLOBAL_BASE: 8,
  QUANTUM_SIZE: 4,
  __dummy__: 0
}
//========================================
// Runtime essentials
//========================================
var __THREW__ = 0; // Used in checking for thrown exceptions.
var ABORT = false; // whether we are quitting the application. no code should run after this. set in exit() and abort()
var EXITSTATUS = 0;
var undef = 0;
// tempInt is used for 32-bit signed values or smaller. tempBigInt is used
// for 32-bit unsigned values or more than 32 bits. TODO: audit all uses of tempInt
var tempValue, tempInt, tempBigInt, tempInt2, tempBigInt2, tempPair, tempBigIntI, tempBigIntR, tempBigIntS, tempBigIntP, tempBigIntD, tempDouble, tempFloat;
var tempI64, tempI64b;
var tempRet0, tempRet1, tempRet2, tempRet3, tempRet4, tempRet5, tempRet6, tempRet7, tempRet8, tempRet9;
function assert(condition, text) {
  if (!condition) {
    abort('Assertion failed: ' + text);
  }
}
var globalScope = this;
// C calling interface. A convenient way to call C functions (in C files, or
// defined with extern "C").
//
// Note: LLVM optimizations can inline and remove functions, after which you will not be
//       able to call them. Closure can also do so. To avoid that, add your function to
//       the exports using something like
//
//         -s EXPORTED_FUNCTIONS='["_main", "_myfunc"]'
//
// @param ident      The name of the C function (note that C++ functions will be name-mangled - use extern "C")
// @param returnType The return type of the function, one of the JS types 'number', 'string' or 'array' (use 'number' for any C pointer, and
//                   'array' for JavaScript arrays and typed arrays; note that arrays are 8-bit).
// @param argTypes   An array of the types of arguments for the function (if there are no arguments, this can be ommitted). Types are as in returnType,
//                   except that 'array' is not possible (there is no way for us to know the length of the array)
// @param args       An array of the arguments to the function, as native JS values (as in returnType)
//                   Note that string arguments will be stored on the stack (the JS string will become a C string on the stack).
// @return           The return value, as a native JS value (as in returnType)
function ccall(ident, returnType, argTypes, args) {
  return ccallFunc(getCFunc(ident), returnType, argTypes, args);
}
Module["ccall"] = ccall;
// Returns the C function with a specified identifier (for C++, you need to do manual name mangling)
function getCFunc(ident) {
  try {
    var func = Module['_' + ident]; // closure exported function
    if (!func) func = eval('_' + ident); // explicit lookup
  } catch(e) {
  }
  assert(func, 'Cannot call unknown function ' + ident + ' (perhaps LLVM optimizations or closure removed it?)');
  return func;
}
// Internal function that does a C call using a function, not an identifier
function ccallFunc(func, returnType, argTypes, args) {
  var stack = 0;
  function toC(value, type) {
    if (type == 'string') {
      if (value === null || value === undefined || value === 0) return 0; // null string
      value = intArrayFromString(value);
      type = 'array';
    }
    if (type == 'array') {
      if (!stack) stack = Runtime.stackSave();
      var ret = Runtime.stackAlloc(value.length);
      writeArrayToMemory(value, ret);
      return ret;
    }
    return value;
  }
  function fromC(value, type) {
    if (type == 'string') {
      return Pointer_stringify(value);
    }
    assert(type != 'array');
    return value;
  }
  var i = 0;
  var cArgs = args ? args.map(function(arg) {
    return toC(arg, argTypes[i++]);
  }) : [];
  var ret = fromC(func.apply(null, cArgs), returnType);
  if (stack) Runtime.stackRestore(stack);
  return ret;
}
// Returns a native JS wrapper for a C function. This is similar to ccall, but
// returns a function you can call repeatedly in a normal way. For example:
//
//   var my_function = cwrap('my_c_function', 'number', ['number', 'number']);
//   alert(my_function(5, 22));
//   alert(my_function(99, 12));
//
function cwrap(ident, returnType, argTypes) {
  var func = getCFunc(ident);
  return function() {
    return ccallFunc(func, returnType, argTypes, Array.prototype.slice.call(arguments));
  }
}
Module["cwrap"] = cwrap;
// Sets a value in memory in a dynamic way at run-time. Uses the
// type data. This is the same as makeSetValue, except that
// makeSetValue is done at compile-time and generates the needed
// code then, whereas this function picks the right code at
// run-time.
// Note that setValue and getValue only do *aligned* writes and reads!
// Note that ccall uses JS types as for defining types, while setValue and
// getValue need LLVM types ('i8', 'i32') - this is a lower-level operation
function setValue(ptr, value, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': HEAP8[(ptr)]=value; break;
      case 'i8': HEAP8[(ptr)]=value; break;
      case 'i16': HEAP16[((ptr)>>1)]=value; break;
      case 'i32': HEAP32[((ptr)>>2)]=value; break;
      case 'i64': (tempI64 = [value>>>0,(tempDouble=value,(+(Math_abs(tempDouble))) >= (+1) ? (tempDouble > (+0) ? ((Math_min((+(Math_floor((tempDouble)/(+4294967296)))), (+4294967295)))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/(+4294967296))))))>>>0) : 0)],HEAP32[((ptr)>>2)]=tempI64[0],HEAP32[(((ptr)+(4))>>2)]=tempI64[1]); break;
      case 'float': HEAPF32[((ptr)>>2)]=value; break;
      case 'double': HEAPF64[((ptr)>>3)]=value; break;
      default: abort('invalid type for setValue: ' + type);
    }
}
Module['setValue'] = setValue;
// Parallel to setValue.
function getValue(ptr, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': return HEAP8[(ptr)];
      case 'i8': return HEAP8[(ptr)];
      case 'i16': return HEAP16[((ptr)>>1)];
      case 'i32': return HEAP32[((ptr)>>2)];
      case 'i64': return HEAP32[((ptr)>>2)];
      case 'float': return HEAPF32[((ptr)>>2)];
      case 'double': return HEAPF64[((ptr)>>3)];
      default: abort('invalid type for setValue: ' + type);
    }
  return null;
}
Module['getValue'] = getValue;
var ALLOC_NORMAL = 0; // Tries to use _malloc()
var ALLOC_STACK = 1; // Lives for the duration of the current function call
var ALLOC_STATIC = 2; // Cannot be freed
var ALLOC_DYNAMIC = 3; // Cannot be freed except through sbrk
var ALLOC_NONE = 4; // Do not allocate
Module['ALLOC_NORMAL'] = ALLOC_NORMAL;
Module['ALLOC_STACK'] = ALLOC_STACK;
Module['ALLOC_STATIC'] = ALLOC_STATIC;
Module['ALLOC_DYNAMIC'] = ALLOC_DYNAMIC;
Module['ALLOC_NONE'] = ALLOC_NONE;
// allocate(): This is for internal use. You can use it yourself as well, but the interface
//             is a little tricky (see docs right below). The reason is that it is optimized
//             for multiple syntaxes to save space in generated code. So you should
//             normally not use allocate(), and instead allocate memory using _malloc(),
//             initialize it with setValue(), and so forth.
// @slab: An array of data, or a number. If a number, then the size of the block to allocate,
//        in *bytes* (note that this is sometimes confusing: the next parameter does not
//        affect this!)
// @types: Either an array of types, one for each byte (or 0 if no type at that position),
//         or a single type which is used for the entire block. This only matters if there
//         is initial data - if @slab is a number, then this does not matter at all and is
//         ignored.
// @allocator: How to allocate memory, see ALLOC_*
function allocate(slab, types, allocator, ptr) {
  var zeroinit, size;
  if (typeof slab === 'number') {
    zeroinit = true;
    size = slab;
  } else {
    zeroinit = false;
    size = slab.length;
  }
  var singleType = typeof types === 'string' ? types : null;
  var ret;
  if (allocator == ALLOC_NONE) {
    ret = ptr;
  } else {
    ret = [_malloc, Runtime.stackAlloc, Runtime.staticAlloc, Runtime.dynamicAlloc][allocator === undefined ? ALLOC_STATIC : allocator](Math.max(size, singleType ? 1 : types.length));
  }
  if (zeroinit) {
    var ptr = ret, stop;
    assert((ret & 3) == 0);
    stop = ret + (size & ~3);
    for (; ptr < stop; ptr += 4) {
      HEAP32[((ptr)>>2)]=0;
    }
    stop = ret + size;
    while (ptr < stop) {
      HEAP8[((ptr++)|0)]=0;
    }
    return ret;
  }
  if (singleType === 'i8') {
    if (slab.subarray || slab.slice) {
      HEAPU8.set(slab, ret);
    } else {
      HEAPU8.set(new Uint8Array(slab), ret);
    }
    return ret;
  }
  var i = 0, type, typeSize, previousType;
  while (i < size) {
    var curr = slab[i];
    if (typeof curr === 'function') {
      curr = Runtime.getFunctionIndex(curr);
    }
    type = singleType || types[i];
    if (type === 0) {
      i++;
      continue;
    }
    if (type == 'i64') type = 'i32'; // special case: we have one i32 here, and one i32 later
    setValue(ret+i, curr, type);
    // no need to look up size unless type changes, so cache it
    if (previousType !== type) {
      typeSize = Runtime.getNativeTypeSize(type);
      previousType = type;
    }
    i += typeSize;
  }
  return ret;
}
Module['allocate'] = allocate;
function Pointer_stringify(ptr, /* optional */ length) {
  // TODO: use TextDecoder
  // Find the length, and check for UTF while doing so
  var hasUtf = false;
  var t;
  var i = 0;
  while (1) {
    t = HEAPU8[(((ptr)+(i))|0)];
    if (t >= 128) hasUtf = true;
    else if (t == 0 && !length) break;
    i++;
    if (length && i == length) break;
  }
  if (!length) length = i;
  var ret = '';
  if (!hasUtf) {
    var MAX_CHUNK = 1024; // split up into chunks, because .apply on a huge string can overflow the stack
    var curr;
    while (length > 0) {
      curr = String.fromCharCode.apply(String, HEAPU8.subarray(ptr, ptr + Math.min(length, MAX_CHUNK)));
      ret = ret ? ret + curr : curr;
      ptr += MAX_CHUNK;
      length -= MAX_CHUNK;
    }
    return ret;
  }
  var utf8 = new Runtime.UTF8Processor();
  for (i = 0; i < length; i++) {
    t = HEAPU8[(((ptr)+(i))|0)];
    ret += utf8.processCChar(t);
  }
  return ret;
}
Module['Pointer_stringify'] = Pointer_stringify;
// Given a pointer 'ptr' to a null-terminated UTF16LE-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.
function UTF16ToString(ptr) {
  var i = 0;
  var str = '';
  while (1) {
    var codeUnit = HEAP16[(((ptr)+(i*2))>>1)];
    if (codeUnit == 0)
      return str;
    ++i;
    // fromCharCode constructs a character from a UTF-16 code unit, so we can pass the UTF16 string right through.
    str += String.fromCharCode(codeUnit);
  }
}
Module['UTF16ToString'] = UTF16ToString;
// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF16LE form. The copy will require at most (str.length*2+1)*2 bytes of space in the HEAP.
function stringToUTF16(str, outPtr) {
  for(var i = 0; i < str.length; ++i) {
    // charCodeAt returns a UTF-16 encoded code unit, so it can be directly written to the HEAP.
    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate
    HEAP16[(((outPtr)+(i*2))>>1)]=codeUnit;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP16[(((outPtr)+(str.length*2))>>1)]=0;
}
Module['stringToUTF16'] = stringToUTF16;
// Given a pointer 'ptr' to a null-terminated UTF32LE-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.
function UTF32ToString(ptr) {
  var i = 0;
  var str = '';
  while (1) {
    var utf32 = HEAP32[(((ptr)+(i*4))>>2)];
    if (utf32 == 0)
      return str;
    ++i;
    // Gotcha: fromCharCode constructs a character from a UTF-16 encoded code (pair), not from a Unicode code point! So encode the code point to UTF-16 for constructing.
    if (utf32 >= 0x10000) {
      var ch = utf32 - 0x10000;
      str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));
    } else {
      str += String.fromCharCode(utf32);
    }
  }
}
Module['UTF32ToString'] = UTF32ToString;
// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF32LE form. The copy will require at most (str.length+1)*4 bytes of space in the HEAP,
// but can use less, since str.length does not return the number of characters in the string, but the number of UTF-16 code units in the string.
function stringToUTF32(str, outPtr) {
  var iChar = 0;
  for(var iCodeUnit = 0; iCodeUnit < str.length; ++iCodeUnit) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.
    var codeUnit = str.charCodeAt(iCodeUnit); // possibly a lead surrogate
    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) {
      var trailSurrogate = str.charCodeAt(++iCodeUnit);
      codeUnit = 0x10000 + ((codeUnit & 0x3FF) << 10) | (trailSurrogate & 0x3FF);
    }
    HEAP32[(((outPtr)+(iChar*4))>>2)]=codeUnit;
    ++iChar;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP32[(((outPtr)+(iChar*4))>>2)]=0;
}
Module['stringToUTF32'] = stringToUTF32;
function demangle(func) {
  try {
    // Special-case the entry point, since its name differs from other name mangling.
    if (func == 'Object._main' || func == '_main') {
      return 'main()';
    }
    if (typeof func === 'number') func = Pointer_stringify(func);
    if (func[0] !== '_') return func;
    if (func[1] !== '_') return func; // C function
    if (func[2] !== 'Z') return func;
    switch (func[3]) {
      case 'n': return 'operator new()';
      case 'd': return 'operator delete()';
    }
    var i = 3;
    // params, etc.
    var basicTypes = {
      'v': 'void',
      'b': 'bool',
      'c': 'char',
      's': 'short',
      'i': 'int',
      'l': 'long',
      'f': 'float',
      'd': 'double',
      'w': 'wchar_t',
      'a': 'signed char',
      'h': 'unsigned char',
      't': 'unsigned short',
      'j': 'unsigned int',
      'm': 'unsigned long',
      'x': 'long long',
      'y': 'unsigned long long',
      'z': '...'
    };
    function dump(x) {
      //return;
      if (x) Module.print(x);
      Module.print(func);
      var pre = '';
      for (var a = 0; a < i; a++) pre += ' ';
      Module.print (pre + '^');
    }
    var subs = [];
    function parseNested() {
      i++;
      if (func[i] === 'K') i++; // ignore const
      var parts = [];
      while (func[i] !== 'E') {
        if (func[i] === 'S') { // substitution
          i++;
          var next = func.indexOf('_', i);
          var num = func.substring(i, next) || 0;
          parts.push(subs[num] || '?');
          i = next+1;
          continue;
        }
        if (func[i] === 'C') { // constructor
          parts.push(parts[parts.length-1]);
          i += 2;
          continue;
        }
        var size = parseInt(func.substr(i));
        var pre = size.toString().length;
        if (!size || !pre) { i--; break; } // counter i++ below us
        var curr = func.substr(i + pre, size);
        parts.push(curr);
        subs.push(curr);
        i += pre + size;
      }
      i++; // skip E
      return parts;
    }
    var first = true;
    function parse(rawList, limit, allowVoid) { // main parser
      limit = limit || Infinity;
      var ret = '', list = [];
      function flushList() {
        return '(' + list.join(', ') + ')';
      }
      var name;
      if (func[i] === 'N') {
        // namespaced N-E
        name = parseNested().join('::');
        limit--;
        if (limit === 0) return rawList ? [name] : name;
      } else {
        // not namespaced
        if (func[i] === 'K' || (first && func[i] === 'L')) i++; // ignore const and first 'L'
        var size = parseInt(func.substr(i));
        if (size) {
          var pre = size.toString().length;
          name = func.substr(i + pre, size);
          i += pre + size;
        }
      }
      first = false;
      if (func[i] === 'I') {
        i++;
        var iList = parse(true);
        var iRet = parse(true, 1, true);
        ret += iRet[0] + ' ' + name + '<' + iList.join(', ') + '>';
      } else {
        ret = name;
      }
      paramLoop: while (i < func.length && limit-- > 0) {
        //dump('paramLoop');
        var c = func[i++];
        if (c in basicTypes) {
          list.push(basicTypes[c]);
        } else {
          switch (c) {
            case 'P': list.push(parse(true, 1, true)[0] + '*'); break; // pointer
            case 'R': list.push(parse(true, 1, true)[0] + '&'); break; // reference
            case 'L': { // literal
              i++; // skip basic type
              var end = func.indexOf('E', i);
              var size = end - i;
              list.push(func.substr(i, size));
              i += size + 2; // size + 'EE'
              break;
            }
            case 'A': { // array
              var size = parseInt(func.substr(i));
              i += size.toString().length;
              if (func[i] !== '_') throw '?';
              i++; // skip _
              list.push(parse(true, 1, true)[0] + ' [' + size + ']');
              break;
            }
            case 'E': break paramLoop;
            default: ret += '?' + c; break paramLoop;
          }
        }
      }
      if (!allowVoid && list.length === 1 && list[0] === 'void') list = []; // avoid (void)
      return rawList ? list : ret + flushList();
    }
    return parse();
  } catch(e) {
    return func;
  }
}
function demangleAll(text) {
  return text.replace(/__Z[\w\d_]+/g, function(x) { var y = demangle(x); return x === y ? x : (x + ' [' + y + ']') });
}
function stackTrace() {
  var stack = new Error().stack;
  return stack ? demangleAll(stack) : '(no stack trace available)'; // Stack trace is not available at least on IE10 and Safari 6.
}
// Memory management
var PAGE_SIZE = 4096;
function alignMemoryPage(x) {
  return (x+4095)&-4096;
}
var HEAP;
var HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;
var STATIC_BASE = 0, STATICTOP = 0, staticSealed = false; // static area
var STACK_BASE = 0, STACKTOP = 0, STACK_MAX = 0; // stack area
var DYNAMIC_BASE = 0, DYNAMICTOP = 0; // dynamic area handled by sbrk
function enlargeMemory() {
  abort('Cannot enlarge memory arrays in asm.js. Either (1) compile with -s TOTAL_MEMORY=X with X higher than the current value ' + TOTAL_MEMORY + ', or (2) set Module.TOTAL_MEMORY before the program runs.');
}
var TOTAL_STACK = Module['TOTAL_STACK'] || 5242880;
var TOTAL_MEMORY = Module['TOTAL_MEMORY'] || 268435456;
var FAST_MEMORY = Module['FAST_MEMORY'] || 2097152;
var totalMemory = 4096;
while (totalMemory < TOTAL_MEMORY || totalMemory < 2*TOTAL_STACK) {
  if (totalMemory < 16*1024*1024) {
    totalMemory *= 2;
  } else {
    totalMemory += 16*1024*1024
  }
}
if (totalMemory !== TOTAL_MEMORY) {
  Module.printErr('increasing TOTAL_MEMORY to ' + totalMemory + ' to be more reasonable');
  TOTAL_MEMORY = totalMemory;
}
// Initialize the runtime's memory
// check for full engine support (use string 'subarray' to avoid closure compiler confusion)
assert(typeof Int32Array !== 'undefined' && typeof Float64Array !== 'undefined' && !!(new Int32Array(1)['subarray']) && !!(new Int32Array(1)['set']),
       'Cannot fallback to non-typed array case: Code is too specialized');
var buffer = new ArrayBuffer(TOTAL_MEMORY);
HEAP8 = new Int8Array(buffer);
HEAP16 = new Int16Array(buffer);
HEAP32 = new Int32Array(buffer);
HEAPU8 = new Uint8Array(buffer);
HEAPU16 = new Uint16Array(buffer);
HEAPU32 = new Uint32Array(buffer);
HEAPF32 = new Float32Array(buffer);
HEAPF64 = new Float64Array(buffer);
// Endianness check (note: assumes compiler arch was little-endian)
HEAP32[0] = 255;
assert(HEAPU8[0] === 255 && HEAPU8[3] === 0, 'Typed arrays 2 must be run on a little-endian system');
Module['HEAP'] = HEAP;
Module['HEAP8'] = HEAP8;
Module['HEAP16'] = HEAP16;
Module['HEAP32'] = HEAP32;
Module['HEAPU8'] = HEAPU8;
Module['HEAPU16'] = HEAPU16;
Module['HEAPU32'] = HEAPU32;
Module['HEAPF32'] = HEAPF32;
Module['HEAPF64'] = HEAPF64;
function callRuntimeCallbacks(callbacks) {
  while(callbacks.length > 0) {
    var callback = callbacks.shift();
    if (typeof callback == 'function') {
      callback();
      continue;
    }
    var func = callback.func;
    if (typeof func === 'number') {
      if (callback.arg === undefined) {
        Runtime.dynCall('v', func);
      } else {
        Runtime.dynCall('vi', func, [callback.arg]);
      }
    } else {
      func(callback.arg === undefined ? null : callback.arg);
    }
  }
}
var __ATPRERUN__  = []; // functions called before the runtime is initialized
var __ATINIT__    = []; // functions called during startup
var __ATMAIN__    = []; // functions called when main() is to be run
var __ATEXIT__    = []; // functions called during shutdown
var __ATPOSTRUN__ = []; // functions called after the runtime has exited
var runtimeInitialized = false;
function preRun() {
  // compatibility - merge in anything from Module['preRun'] at this time
  if (Module['preRun']) {
    if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];
    while (Module['preRun'].length) {
      addOnPreRun(Module['preRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPRERUN__);
}
function ensureInitRuntime() {
  if (runtimeInitialized) return;
  runtimeInitialized = true;
  callRuntimeCallbacks(__ATINIT__);
}
function preMain() {
  callRuntimeCallbacks(__ATMAIN__);
}
function exitRuntime() {
  callRuntimeCallbacks(__ATEXIT__);
}
function postRun() {
  // compatibility - merge in anything from Module['postRun'] at this time
  if (Module['postRun']) {
    if (typeof Module['postRun'] == 'function') Module['postRun'] = [Module['postRun']];
    while (Module['postRun'].length) {
      addOnPostRun(Module['postRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPOSTRUN__);
}
function addOnPreRun(cb) {
  __ATPRERUN__.unshift(cb);
}
Module['addOnPreRun'] = Module.addOnPreRun = addOnPreRun;
function addOnInit(cb) {
  __ATINIT__.unshift(cb);
}
Module['addOnInit'] = Module.addOnInit = addOnInit;
function addOnPreMain(cb) {
  __ATMAIN__.unshift(cb);
}
Module['addOnPreMain'] = Module.addOnPreMain = addOnPreMain;
function addOnExit(cb) {
  __ATEXIT__.unshift(cb);
}
Module['addOnExit'] = Module.addOnExit = addOnExit;
function addOnPostRun(cb) {
  __ATPOSTRUN__.unshift(cb);
}
Module['addOnPostRun'] = Module.addOnPostRun = addOnPostRun;
// Tools
// This processes a JS string into a C-line array of numbers, 0-terminated.
// For LLVM-originating strings, see parser.js:parseLLVMString function
function intArrayFromString(stringy, dontAddNull, length /* optional */) {
  var ret = (new Runtime.UTF8Processor()).processJSString(stringy);
  if (length) {
    ret.length = length;
  }
  if (!dontAddNull) {
    ret.push(0);
  }
  return ret;
}
Module['intArrayFromString'] = intArrayFromString;
function intArrayToString(array) {
  var ret = [];
  for (var i = 0; i < array.length; i++) {
    var chr = array[i];
    if (chr > 0xFF) {
      chr &= 0xFF;
    }
    ret.push(String.fromCharCode(chr));
  }
  return ret.join('');
}
Module['intArrayToString'] = intArrayToString;
// Write a Javascript array to somewhere in the heap
function writeStringToMemory(string, buffer, dontAddNull) {
  var array = intArrayFromString(string, dontAddNull);
  var i = 0;
  while (i < array.length) {
    var chr = array[i];
    HEAP8[(((buffer)+(i))|0)]=chr;
    i = i + 1;
  }
}
Module['writeStringToMemory'] = writeStringToMemory;
function writeArrayToMemory(array, buffer) {
  for (var i = 0; i < array.length; i++) {
    HEAP8[(((buffer)+(i))|0)]=array[i];
  }
}
Module['writeArrayToMemory'] = writeArrayToMemory;
function writeAsciiToMemory(str, buffer, dontAddNull) {
  for (var i = 0; i < str.length; i++) {
    HEAP8[(((buffer)+(i))|0)]=str.charCodeAt(i);
  }
  if (!dontAddNull) HEAP8[(((buffer)+(str.length))|0)]=0;
}
Module['writeAsciiToMemory'] = writeAsciiToMemory;
function unSign(value, bits, ignore, sig) {
  if (value >= 0) {
    return value;
  }
  return bits <= 32 ? 2*Math.abs(1 << (bits-1)) + value // Need some trickery, since if bits == 32, we are right at the limit of the bits JS uses in bitshifts
                    : Math.pow(2, bits)         + value;
}
function reSign(value, bits, ignore, sig) {
  if (value <= 0) {
    return value;
  }
  var half = bits <= 32 ? Math.abs(1 << (bits-1)) // abs is needed if bits == 32
                        : Math.pow(2, bits-1);
  if (value >= half && (bits <= 32 || value > half)) { // for huge values, we can hit the precision limit and always get true here. so don't do that
                                                       // but, in general there is no perfect solution here. With 64-bit ints, we get rounding and errors
                                                       // TODO: In i64 mode 1, resign the two parts separately and safely
    value = -2*half + value; // Cannot bitshift half, as it may be at the limit of the bits JS uses in bitshifts
  }
  return value;
}
if (!Math['imul']) Math['imul'] = function imul(a, b) {
  var ah  = a >>> 16;
  var al = a & 0xffff;
  var bh  = b >>> 16;
  var bl = b & 0xffff;
  return (al*bl + ((ah*bl + al*bh) << 16))|0;
};
Math.imul = Math['imul'];
var Math_abs = Math.abs;
var Math_cos = Math.cos;
var Math_sin = Math.sin;
var Math_tan = Math.tan;
var Math_acos = Math.acos;
var Math_asin = Math.asin;
var Math_atan = Math.atan;
var Math_atan2 = Math.atan2;
var Math_exp = Math.exp;
var Math_log = Math.log;
var Math_sqrt = Math.sqrt;
var Math_ceil = Math.ceil;
var Math_floor = Math.floor;
var Math_pow = Math.pow;
var Math_imul = Math.imul;
var Math_fround = Math.fround;
var Math_min = Math.min;
// A counter of dependencies for calling run(). If we need to
// do asynchronous work before running, increment this and
// decrement it. Incrementing must happen in a place like
// PRE_RUN_ADDITIONS (used by emcc to add file preloading).
// Note that you can add dependencies in preRun, even though
// it happens right before run - run will be postponed until
// the dependencies are met.
var runDependencies = 0;
var runDependencyWatcher = null;
var dependenciesFulfilled = null; // overridden to take different actions when all run dependencies are fulfilled
function addRunDependency(id) {
  runDependencies++;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
}
Module['addRunDependency'] = addRunDependency;
function removeRunDependency(id) {
  runDependencies--;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
  if (runDependencies == 0) {
    if (runDependencyWatcher !== null) {
      clearInterval(runDependencyWatcher);
      runDependencyWatcher = null;
    }
    if (dependenciesFulfilled) {
      var callback = dependenciesFulfilled;
      dependenciesFulfilled = null;
      callback(); // can add another dependenciesFulfilled
    }
  }
}
Module['removeRunDependency'] = removeRunDependency;
Module["preloadedImages"] = {}; // maps url to image data
Module["preloadedAudios"] = {}; // maps url to audio data
var memoryInitializer = null;
// === Body ===
STATIC_BASE = 8;
STATICTOP = STATIC_BASE + 55544;
var _stdout;
var _stdout=_stdout=allocate([0,0,0,0,0,0,0,0], "i8", ALLOC_STATIC);
var _stdin;
var _stdin=_stdin=allocate([0,0,0,0,0,0,0,0], "i8", ALLOC_STATIC);
var _stderr;
var _stderr=_stderr=allocate([0,0,0,0,0,0,0,0], "i8", ALLOC_STATIC);
/* global initializers */ __ATINIT__.push({ func: function() { runPostSets() } },{ func: function() { __GLOBAL__I_a() } },{ func: function() { __GLOBAL__I_a376() } },{ func: function() { __GLOBAL__I_a812() } },{ func: function() { __GLOBAL__I_a1039() } },{ func: function() { __GLOBAL__I_a1878() } });
var ___fsmu8;
var ___dso_handle;
var ___dso_handle=___dso_handle=allocate([0,0,0,0,0,0,0,0], "i8", ALLOC_STATIC);
var __ZTVN10__cxxabiv120__si_class_type_infoE;
__ZTVN10__cxxabiv120__si_class_type_infoE=allocate([0,0,0,0,8,185,0,0,64,3,0,0,182,1,0,0,192,0,0,0,26,1,0,0,26,0,0,0,50,0,0,0,64,0,0,0,72,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_STATIC);
var __ZTVN10__cxxabiv117__class_type_infoE;
__ZTVN10__cxxabiv117__class_type_infoE=allocate([0,0,0,0,24,185,0,0,64,3,0,0,52,3,0,0,192,0,0,0,26,1,0,0,26,0,0,0,48,0,0,0,16,0,0,0,108,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_STATIC);
var __ZN13OpenGLManagerC1EPKc;
var __ZN22BikeAndRiderControllerC1ERK9btVector3;
var __ZN5RiderC1ERK9btVector3;
var __ZN9SkateParkC1Ev;
var __ZN4BikeC1ERK9btVector3;
var __ZN13CPVRTModelPODC1Ev;
var __ZN13CPVRTModelPODD1Ev;
var __ZN17CPVRTResourceFileC1EPKcj;
var __ZN11CPVRTStringC1EPKcj;
var __ZN11CPVRTStringC1Ev;
var __ZN11CPVRTStringD1Ev;
var __ZN8PVRTVec3C1ERK8PVRTVec4;
var __ZN8PVRTMat3C1ERK8PVRTMat4;
var __ZN22SphereTriangleDetectorC1EP13btSphereShapeP15btTriangleShapef;
var __ZN10btBoxShapeC1ERK9btVector3;
var __ZN22btBvhTriangleMeshShapeC1EP23btStridingMeshInterfacebb;
var __ZN14btCapsuleShapeC1Eff;
var __ZN15btCapsuleShapeXC1Eff;
var __ZN18btConvexPolyhedronC1Ev;
var __ZN16btCylinderShapeXC1ERK9btVector3;
var __ZN14btOptimizedBvhC1Ev;
var __ZN26btTriangleIndexVertexArrayC1EiPiiiPfi;
var __ZN12btAxisSweep3C1ERK9btVector3S2_tP22btOverlappingPairCacheb;
var __ZN6btDbvtC1Ev;
var __ZN6btDbvtD1Ev;
var __ZN16btDbvtBroadphaseC1EP22btOverlappingPairCache;
var __ZN28btHashedOverlappingPairCacheC1Ev;
var __ZN26btBoxBoxCollisionAlgorithmC1EP20btPersistentManifoldRK36btCollisionAlgorithmConstructionInfoPK24btCollisionObjectWrapperS7_;
var __ZN16btBoxBoxDetectorC1EPK10btBoxShapeS2_;
var __ZN21btCollisionDispatcherC1EP24btCollisionConfiguration;
var __ZN28btCompoundCollisionAlgorithmC1ERK36btCollisionAlgorithmConstructionInfoPK24btCollisionObjectWrapperS5_b;
var __ZN33btConvexConcaveCollisionAlgorithmC1ERK36btCollisionAlgorithmConstructionInfoPK24btCollisionObjectWrapperS5_b;
var __ZN23btConvexConvexAlgorithm10CreateFuncC1EP22btVoronoiSimplexSolverP30btConvexPenetrationDepthSolver;
var __ZN31btConvexPlaneCollisionAlgorithmC1EP20btPersistentManifoldRK36btCollisionAlgorithmConstructionInfoPK24btCollisionObjectWrapperS7_bii;
var __ZN31btDefaultCollisionConfigurationC1ERK34btDefaultCollisionConstructionInfo;
var __ZN16btEmptyAlgorithmC1ERK36btCollisionAlgorithmConstructionInfo;
var __ZN16btManifoldResultC1EPK24btCollisionObjectWrapperS2_;
var __ZN25btSimulationIslandManagerC1Ev;
var __ZN32btSphereSphereCollisionAlgorithmC1EP20btPersistentManifoldRK36btCollisionAlgorithmConstructionInfoPK24btCollisionObjectWrapperS7_;
var __ZN34btSphereTriangleCollisionAlgorithmC1EP20btPersistentManifoldRK36btCollisionAlgorithmConstructionInfoPK24btCollisionObjectWrapperS7_b;
var __ZN11btUnionFindD1Ev;
var __ZN11btUnionFindC1Ev;
var __ZN27btContinuousConvexCollisionC1EPK13btConvexShapeS2_P22btVoronoiSimplexSolverP30btConvexPenetrationDepthSolver;
var __ZN27btContinuousConvexCollisionC1EPK13btConvexShapePK18btStaticPlaneShape;
var __ZN15btGjkConvexCastC1EPK13btConvexShapeS2_P22btVoronoiSimplexSolver;
var __ZN17btGjkPairDetectorC1EPK13btConvexShapeS2_P22btVoronoiSimplexSolverP30btConvexPenetrationDepthSolver;
var __ZN17btGjkPairDetectorC1EPK13btConvexShapeS2_iiffP22btVoronoiSimplexSolverP30btConvexPenetrationDepthSolver;
var __ZN22btSubsimplexConvexCastC1EPK13btConvexShapeS2_P22btVoronoiSimplexSolver;
var __ZN21btConeTwistConstraintC1ER11btRigidBodyS1_RK11btTransformS4_;
var __ZN23btGeneric6DofConstraintC1ER11btRigidBodyS1_RK11btTransformS4_b;
var __ZN29btGeneric6DofSpringConstraintC1ER11btRigidBodyS1_RK11btTransformS4_b;
var __ZN17btHingeConstraintC1ER11btRigidBodyS1_RK9btVector3S4_S4_S4_b;
var __ZN17btHingeConstraintC1ER11btRigidBodyS1_RK11btTransformS4_b;
var __ZN23btPoint2PointConstraintC1ER11btRigidBodyS1_RK9btVector3S4_;
var __ZN35btSequentialImpulseConstraintSolverC1Ev;
var __ZN23btDiscreteDynamicsWorldC1EP12btDispatcherP21btBroadphaseInterfaceP18btConstraintSolverP24btCollisionConfiguration;
var __ZN11btRigidBodyC1ERKNS_27btRigidBodyConstructionInfoE;
var __ZNSt13runtime_errorC1EPKc;
var __ZNSt13runtime_errorD1Ev;
var __ZNSt12length_errorD1Ev;
var __ZNSt3__16localeC1Ev;
var __ZNSt3__16localeC1ERKS0_;
var __ZNSt3__16localeD1Ev;
var __ZNSt8bad_castC1Ev;
var __ZNSt8bad_castD1Ev;
/* memory initializer */ allocateconcat([9,181,250,201,16,174,203,136,95,239,93,79,70,244,108,14,109,217,63,205,116,194,14,140,243,90,18,67,234,65,35,2,193,108,112,193,216,119,65,128,151,54,215,71,142,45,230,6,165,0,181,197,188,27,132,132,113,65,138,26,104,90,187,91,67,119,232,152,90,108,217,217,21,45,79,30,12,54,126,95,39,27,45,156,62,0,28,221,185,152,0,18,160,131,49,83,139,174,98,144,146,181,83,209,221,244,197,22,196,239,244,87,239,194,167,148,246,217,150,213,174,7,188,233,183,28,141,168,156,49,222,107,133,42,239,42,202,107,121,237,211,112,72,172,248,93,27,111,225,70,42,46,102,222,54,225,127,197,7,160,84,232,84,99,77,243,101,34,2,178,243,229,27,169,194,164,48,132,145,103,41,159,160,38,228,197,174,184,253,222,159,249,214,243,204,58,207,232,253,123,128,169,107,188,153,178,90,253,178,159,9,62,171,132,56,127,44,28,36,176,53,7,21,241,30,42,70,50,7,49,119,115,72,112,225,180,81,107,208,245,122,70,131,54,99,93,178,119,203,250,215,78,210,225,230,15,249,204,181,204,224,215,132,141,175,150,18,74,182,141,35,11,157,160,112,200,132,187,65,137,3,35,93,70,26,56,108,7,49,21,63,196,40,14,14,133,103,79,152,66,126,84,169,3,85,121,250,192,76,98,203,129,129,56,197,31,152,35,244,94,179,14,167,157,170,21,150,220,229,84,0,27,252,79,49,90,215,98,98,153,206,121,83,216,73,225,79,23,80,250,126,86,123,215,45,149,98,204,28,212,45,141,138,19,52,150,187,82,31,187,232,145,6,160,217,208,94,126,243,236,71,101,194,173,108,72,145,110,117,83,160,47,58,18,54,232,35,9,7,169,8,36,84,106,17,63,101,43,150,167,121,228,143,188,72,165,164,145,27,102,189,138,42,39,242,203,188,224,235,208,141,161,192,253,222,98,217,230,239,35,20,188,225,189,13,167,208,252,38,138,131,63,63,145,178,126,112,208,36,185,105,203,21,248,66,230,70,59,91,253,119,122,220,101,107,181,197,126,90,244,238,83,9,55,247,72,56,118,184,9,174,177,161,18,159,240,138,63,204,51,147,36,253,114,0,0,0,0,1,194,106,55,3,132,212,110,2,70,190,89,7,9,168,220,6,203,194,235,4,141,124,178,5,79,22,133,14,19,81,184,15,209,59,143,13,151,133,214,12,85,239,225,9,26,249,100,8,216,147,83,10,158,45,10,11,92,71,61,28,38,163,112,29,228,201,71,31,162,119,30,30,96,29,41,27,47,11,172,26,237,97,155,24,171,223,194,25,105,181,245,18,53,242,200,19,247,152,255,17,177,38,166,16,115,76,145,21,60,90,20,20,254,48,35,22,184,142,122,23,122,228,77,56,77,70,224,57,143,44,215,59,201,146,142,58,11,248,185,63,68,238,60,62,134,132,11,60,192,58,82,61,2,80,101,54,94,23,88,55,156,125,111,53,218,195,54,52,24,169,1,49,87,191,132,48,149,213,179,50,211,107,234,51,17,1,221,36,107,229,144,37,169,143,167,39,239,49,254,38,45,91,201,35,98,77,76,34,160,39,123,32,230,153,34,33,36,243,21,42,120,180,40,43,186,222,31,41,252,96,70,40,62,10,113,45,113,28,244,44,179,118,195,46,245,200,154,47,55,162,173,112,154,141,192,113,88,231,247,115,30,89,174,114,220,51,153,119,147,37,28,118,81,79,43,116,23,241,114,117,213,155,69,126,137,220,120,127,75,182,79,125,13,8,22,124,207,98,33,121,128,116,164,120,66,30,147,122,4,160,202,123,198,202,253,108,188,46,176,109,126,68,135,111,56,250,222,110,250,144,233,107,181,134,108,106,119,236,91,104,49,82,2,105,243,56,53,98,175,127,8,99,109,21,63,97,43,171,102,96,233,193,81,101,166,215,212,100,100,189,227,102,34,3,186,103,224,105,141,72,215,203,32,73,21,161,23,75,83,31,78,74,145,117,121,79,222,99,252,78,28,9,203,76,90,183,146,77,152,221,165,70,196,154,152,71,6,240,175,69,64,78,246,68,130,36,193,65,205,50,68,64,15,88,115,66,73,230,42,67,139,140,29,84,241,104,80,85,51,2,103,87,117,188,62,86,183,214,9,83,248,192,140,82,58,170,187,80,124,20,226,81,190,126,213,90,226,57,232,91,32,83,223,89,102,237,134,88,164,135,177,93,235,145,52,92,41,251,3,94,111,69,90,95,173,47,109,225,53,27,128,224,247,113,183,226,177,207,238,227,115,165,217,230,60,179,92,231,254,217,107,229,184,103,50,228,122,13,5,239,38,74,56,238,228,32,15,236,162,158,86,237,96,244,97,232,47,226,228,233,237,136,211,235,171,54,138,234,105,92,189,253,19,184,240,252,209,210,199,254,151,108,158,255,85,6,169,250,26,16,44,251,216,122,27,249,158,196,66,248,92,174,117,243,0,233,72,242,194,131,127,240,132,61,38,241,70,87,17,244,9,65,148,245,203,43,163,247,141,149,250,246,79,255,205,217,120,93,96,216,186,55,87,218,252,137,14,219,62,227,57,222,113,245,188,223,179,159,139,221,245,33,210,220,55,75,229,215,107,12,216,214,169,102,239,212,239,216,182,213,45,178,129,208,98,164,4,209,160,206,51,211,230,112,106,210,36,26,93,197,94,254,16,196,156,148,39,198,218,42,126,199,24,64,73,194,87,86,204,195,149,60,251,193,211,130,162,192,17,232,149,203,77,175,168,202,143,197,159,200,201,123,198,201,11,17,241,204,68,7,116,205,134,109,67,207,192,211,26,206,2,185,45,145,175,150,64,144,109,252,119,146,43,66,46,147,233,40,25,150,166,62,156,151,100,84,171,149,34,234,242,148,224,128,197,159,188,199,248,158,126,173,207,156,56,19,150,157,250,121,161,152,181,111,36,153,119,5,19,155,49,187,74,154,243,209,125,141,137,53,48,140,75,95,7,142,13,225,94,143,207,139,105,138,128,157,236,139,66,247,219,137,4,73,130,136,198,35,181,131,154,100,136,130,88,14,191,128,30,176,230,129,220,218,209,132,147,204,84,133,81,166,99,135,23,24,58,134,213,114,13,169,226,208,160,168,32,186,151,170,102,4,206,171,164,110,249,174,235,120,124,175,41,18,75,173,111,172,18,172,173,198,37,167,241,129,24,166,51,235,47,164,117,85,118,165,183,63,65,160,248,41,196,161,58,67,243,163,124,253,170,162,190,151,157,181,196,115,208,180,6,25,231,182,64,167,190,183,130,205,137,178,205,219,12,179,15,177,59,177,73,15,98,176,139,101,85,187,215,34,104,186,21,72,95,184,83,246,6,185,145,156,49,188,222,138,180,189,28,224,131,191,90,94,218,190,152,52,237,0,0,0,0,184,188,103,101,170,9,200,139,18,181,175,238,143,98,151,87,55,222,240,50,37,107,95,220,157,215,56,185,197,180,40,239,125,8,79,138,111,189,224,100,215,1,135,1,74,214,191,184,242,106,216,221,224,223,119,51,88,99,16,86,80,25,87,159,232,165,48,250,250,16,159,20,66,172,248,113,223,123,192,200,103,199,167,173,117,114,8,67,205,206,111,38,149,173,127,112,45,17,24,21,63,164,183,251,135,24,208,158,26,207,232,39,162,115,143,66,176,198,32,172,8,122,71,201,160,50,175,62,24,142,200,91,10,59,103,181,178,135,0,208,47,80,56,105,151,236,95,12,133,89,240,226,61,229,151,135,101,134,135,209,221,58,224,180,207,143,79,90,119,51,40,63,234,228,16,134,82,88,119,227,64,237,216,13,248,81,191,104,240,43,248,161,72,151,159,196,90,34,48,42,226,158,87,79,127,73,111,246,199,245,8,147,213,64,167,125,109,252,192,24,53,159,208,78,141,35,183,43,159,150,24,197,39,42,127,160,186,253,71,25,2,65,32,124,16,244,143,146,168,72,232,247,155,20,88,61,35,168,63,88,49,29,144,182,137,161,247,211,20,118,207,106,172,202,168,15,190,127,7,225,6,195,96,132,94,160,112,210,230,28,23,183,244,169,184,89,76,21,223,60,209,194,231,133,105,126,128,224,123,203,47,14,195,119,72,107,203,13,15,162,115,177,104,199,97,4,199,41,217,184,160,76,68,111,152,245,252,211,255,144,238,102,80,126,86,218,55,27,14,185,39,77,182,5,64,40,164,176,239,198,28,12,136,163,129,219,176,26,57,103,215,127,43,210,120,145,147,110,31,244,59,38,247,3,131,154,144,102,145,47,63,136,41,147,88,237,180,68,96,84,12,248,7,49,30,77,168,223,166,241,207,186,254,146,223,236,70,46,184,137,84,155,23,103,236,39,112,2,113,240,72,187,201,76,47,222,219,249,128,48,99,69,231,85,107,63,160,156,211,131,199,249,193,54,104,23,121,138,15,114,228,93,55,203,92,225,80,174,78,84,255,64,246,232,152,37,174,139,136,115,22,55,239,22,4,130,64,248,188,62,39,157,33,233,31,36,153,85,120,65,139,224,215,175,51,92,176,202,237,89,182,59,85,229,209,94,71,80,126,176,255,236,25,213,98,59,33,108,218,135,70,9,200,50,233,231,112,142,142,130,40,237,158,212,144,81,249,177,130,228,86,95,58,88,49,58,167,143,9,131,31,51,110,230,13,134,193,8,181,58,166,109,189,64,225,164,5,252,134,193,23,73,41,47,175,245,78,74,50,34,118,243,138,158,17,150,152,43,190,120,32,151,217,29,120,244,201,75,192,72,174,46,210,253,1,192,106,65,102,165,247,150,94,28,79,42,57,121,93,159,150,151,229,35,241,242,77,107,25,5,245,215,126,96,231,98,209,142,95,222,182,235,194,9,142,82,122,181,233,55,104,0,70,217,208,188,33,188,136,223,49,234,48,99,86,143,34,214,249,97,154,106,158,4,7,189,166,189,191,1,193,216,173,180,110,54,21,8,9,83,29,114,78,154,165,206,41,255,183,123,134,17,15,199,225,116,146,16,217,205,42,172,190,168,56,25,17,70,128,165,118,35,216,198,102,117,96,122,1,16,114,207,174,254,202,115,201,155,87,164,241,34,239,24,150,71,253,173,57,169,69,17,94,204,118,77,238,6,206,241,137,99,220,68,38,141,100,248,65,232,249,47,121,81,65,147,30,52,83,38,177,218,235,154,214,191,179,249,198,233,11,69,161,140,25,240,14,98,161,76,105,7,60,155,81,190,132,39,54,219,150,146,153,53,46,46,254,80,38,84,185,153,158,232,222,252,140,93,113,18,52,225,22,119,169,54,46,206,17,138,73,171,3,63,230,69,187,131,129,32,227,224,145,118,91,92,246,19,73,233,89,253,241,85,62,152,108,130,6,33,212,62,97,68,198,139,206,170,126,55,169,207,214,127,65,56,110,195,38,93,124,118,137,179,196,202,238,214,89,29,214,111,225,161,177,10,243,20,30,228,75,168,121,129,19,203,105,215,171,119,14,178,185,194,161,92,1,126,198,57,156,169,254,128,36,21,153,229,54,160,54,11,142,28,81,110,134,102,22,167,62,218,113,194,44,111,222,44,148,211,185,73,9,4,129,240,177,184,230,149,163,13,73,123,27,177,46,30,67,210,62,72,251,110,89,45,233,219,246,195,81,103,145,166,204,176,169,31,116,12,206,122,102,185,97,148,222,5,6,241,114,101,108,101,97,115,101,32,112,114,101,100,105,99,116,105,118,101,32,99,111,110,116,97,99,116,32,109,97,110,105,102,111,108,100,115,0,0,0,0,74,117,108,0,0,0,0,0,74,117,110,0,0,0,0,0,98,116,82,105,103,105,100,66,111,100,121,70,108,111,97,116,68,97,116,97,0,0,0,0,66,105,107,101,66,105,78,111,114,109,97,108,115,46,112,111,100,0,0,0,0,0,0,0,99,111,110,118,101,120,83,119,101,101,112,84,101,115,116,0,65,112,114,0,0,0,0,0,77,97,114,0,0,0,0,0,100,101,98,117,103,68,114,97,119,87,111,114,108,100,0,0,70,101,98,0,0,0,0,0,74,97,110,0,0,0,0,0,98,116,84,121,112,101,100,67,111,110,115,116,114,97,105,110,116,68,97,116,97,0,0,0,68,101,99,101,109,98,101,114,0,0,0,0,0,0,0,0,115,111,108,118,101,71,114,111,117,112,67,97,99,104,101,70,114,105,101,110,100,108,121,83,101,116,117,112,0,0,0,0,98,116,80,111,105,110,116,50,80,111,105,110,116,67,111,110,115,116,114,97,105,110,116,70,108,111,97,116,68,97,116,97,0,0,0,0,0,0,0,0,78,111,118,101,109,98,101,114,0,0,0,0,0,0,0,0,117,110,115,117,112,112,111,114,116,101,100,32,108,111,99,97,108,101,32,102,111,114,32,115,116,97,110,100,97,114,100,32,105,110,112,117,116,0,0,0,98,116,72,105,110,103,101,67,111,110,115,116,114,97,105,110,116,70,108,111,97,116,68,97,116,97,0,0,0,0,0,0,73,110,116,101,114,108,97,99,101,32,104,97,110,100,108,105,110,103,32,115,104,111,117,108,100,32,98,101,32,116,117,114,110,101,100,32,111,110,32,119,104,101,110,32,117,115,105,110,103,32,112,110,103,95,114,101,97,100,95,105,109,97,103,101,0,0,0,0,0,0,0,0,40,69,82,82,79,82,58,32,85,110,107,110,111,119,110,32,69,114,114,111,114,32,69,110,117,109,41,0,0,0,0,0,116,82,78,83,32,109,117,115,116,32,98,101,32,97,102,116,101,114,0,0,0,0,0,0,79,99,116,111,98,101,114,0,114,111,119,95,115,105,122,101,32,62,32,48,0,0,0,0,105,110,118,97,108,105,100,32,99,111,100,101,32,108,101,110,103,116,104,115,32,115,101,116,0,0,0,0,0,0,0,0,98,116,71,101,110,101,114,105,99,54,68,111,102,83,112,114,105,110,103,67,111,110,115,116,114,97,105,110,116,68,97,116,97,0,0,0,0,0,0,0,98,116,71,101,110,101,114,105,99,54,68,111,102,67,111,110,115,116,114,97,105,110,116,68,97,116,97,0,0,0,0,0,83,101,112,116,101,109,98,101,114,0,0,0,0,0,0,0,68,79,87,78,32,117,110,107,110,111,119,110,58,37,117,10,0,0,0,0,0,0,0,0,98,116,67,111,110,101,84,119,105,115,116,67,111,110,115,116,114,97,105,110,116,68,97,116,97,0,0,0,0,0,0,0,99,114,101,97,116,101,80,114,101,100,105,99,116,105,118,101,67,111,110,116,97,99,116,115,0,0,0,0,0,0,0,0,65,117,103,117,115,116,0,0,74,117,108,121,0,0,0,0,99,111,110,118,101,120,83,119,101,101,112,67,111,109,112,111,117,110,100,0,0,0,0,0,74,117,110,101,0,0,0,0,77,97,121,0,0,0,0,0,65,112,114,105,108,0,0,0,77,97,114,99,104,0,0,0,70,101,98,114,117,97,114,121,0,0,0,0,0,0,0,0,74,97,110,117,97,114,121,0,49,46,54,46,54,0,0,0,105,110,116,101,114,110,97,108,32,115,101,113,117,101,110,116,105,97,108,32,114,111,119,32,115,105,122,101,32,99,97,108,99,117,108,97,116,105,111,110,32,101,114,114,111,114,0,0,71,76,95,73,78,86,65,76,73,68,95,79,80,69,82,65,84,73,79,78,0,0,0,0,105,103,110,111,114,101,100,32,105,110,32,103,114,97,121,115,99,97,108,101,32,80,78,71,0,0,0,0,0,0,0,0,98,97,115,105,99,95,115,116,114,105,110,103,0,0,0,0,112,110,103,95,99,111,108,111,114,95,102,111,114,109,97,116,32,61,61,32,80,78,71,95,67,79,76,79,82,95,84,89,80,69,95,71,82,65,89,32,124,124,32,112,110,103,95,99,111,108,111,114,95,102,111,114,109,97,116,32,61,61,32,80,78,71,95,67,79,76,79,82,95,84,89,80,69,95,82,71,66,95,65,76,80,72,65,32,124,124,32,112,110,103,95,99,111,108,111,114,95,102,111,114,109,97,116,32,61,61,32,80,78,71,95,67,79,76,79,82,95,84,89,80,69,95,71,82,65,89,95,65,76,80,72,65,0,0,0,0,0,0,0,0,116,111,111,32,109,97,110,121,32,108,101,110,103,116,104,32,111,114,32,100,105,115,116,97,110,99,101,32,115,121,109,98,111,108,115,0,0,0,0,0,68,0,0,0,101,0,0,0,99,0,0,0,0,0,0,0,105,115,108,97,110,100,85,110,105,111,110,70,105,110,100,65,110,100,81,117,105,99,107,83,111,114,116,0,0,0,0,0,99,97,108,99,117,108,97,116,101,83,105,109,117,108,97,116,105,111,110,73,115,108,97,110,100,115,0,0,0,0,0,0,78,0,0,0,111,0,0,0,118,0,0,0,0,0,0,0,79,0,0,0,99,0,0,0,116,0,0,0,0,0,0,0,100,105,115,112,97,116,99,104,65,108,108,67,111,108,108,105,115,105,111,110,80,97,105,114,115,0,0,0,0,0,0,0,83,0,0,0,101,0,0,0,112,0,0,0,0,0,0,0,103,97,109,109,97,32,118,97,108,117,101,32,100,111,101,115,32,110,111,116,32,109,97,116,99,104,32,108,105,98,112,110,103,32,101,115,116,105,109,97,116,101,0,0,0,0,0,0,79,118,101,114,102,108,111,119,32,105,110,32,65,65,66,66,44,32,111,98,106,101,99,116,32,114,101,109,111,118,101,100,32,102,114,111,109,32,115,105,109,117,108,97,116,105,111,110,0,0,0,0,0,0,0,0,98,116,67,111,108,108,105,115,105,111,110,79,98,106,101,99,116,70,108,111,97,116,68,97,116,97,0,0,0,0,0,0,65,0,0,0,117,0,0,0,103,0,0,0,0,0,0,0,103,97,109,109,97,32,118,97,108,117,101,32,100,111,101,115,32,110,111,116,32,109,97,116,99,104,32,115,82,71,66,0,74,0,0,0,117,0,0,0,108,0,0,0,0,0,0,0,105,110,99,111,110,115,105,115,116,101,110,116,32,99,104,114,111,109,97,116,105,99,105,116,105,101,115,0,0,0,0,0,85,110,107,110,111,119,110,32,70,114,97,109,101,98,117,102,102,101,114,32,69,114,114,111,114,58,32,37,117,10,0,0,74,0,0,0,117,0,0,0,110,0,0,0,0,0,0,0,104,58,32,0,0,0,0,0,82,105,100,101,114,46,112,111,100,0,0,0,0,0,0,0,77,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,39,58,32,0,0,0,0,0,71,76,95,70,82,65,77,69,66,85,70,70,69,82,95,85,78,83,85,80,80,79,82,84,69,68,0,0,0,0,0,0,98,116,79,112,116,105,109,105,122,101,100,66,118,104,78,111,100,101,68,97,116,97,0,0,65,0,0,0,112,0,0,0,114,0,0,0,0,0,0,0,112,114,111,102,105,108,101,32,39,0,0,0,0,0,0,0,71,76,95,69,88,84,95,100,105,115,99,97,114,100,95,102,114,97,109,101,98,117,102,102,101,114,0,0,0,0,0,0,71,76,95,70,82,65,77,69,66,85,70,70,69,82,95,73,78,67,79,77,80,76,69,84,69,95,77,73,83,83,73,78,71,95,65,84,84,65,67,72,77,69,78,84,0,0,0,0,115,101,113,117,101,110,116,105,97,108,32,114,111,119,32,111,118,101,114,102,108,111,119,0,71,76,95,73,78,86,65,76,73,68,95,86,65,76,85,69,0,0,0,0,0,0,0,0,100,117,112,108,105,99,97,116,101,0,0,0,0,0,0,0,77,0,0,0,97,0,0,0,114,0,0,0,0,0,0,0,99,111,112,121,114,105,103,104,116,32,118,105,111,108,97,116,105,111,110,58,32,101,100,105,116,101,100,32,73,67,67,32,112,114,111,102,105,108,101,32,105,103,110,111,114,101,100,0,117,110,100,101,102,105,110,101,100,0,0,0,0,0,0,0,100,97,116,97,32,33,61,32,78,85,76,76,0,0,0,0,105,110,118,97,108,105,100,32,115,116,111,114,101,100,32,98,108,111,99,107,32,108,101,110,103,116,104,115,0,0,0,0,71,76,95,70,82,65,77,69,66,85,70,70,69,82,95,73,78,67,79,77,80,76,69,84,69,95,65,84,84,65,67,72,77,69,78,84,0,0,0,0,70,0,0,0,101,0,0,0,98,0,0,0,0,0,0,0,111,117,116,45,111,102,45,100,97,116,101,32,115,82,71,66,32,112,114,111,102,105,108,101,32,119,105,116,104,32,110,111,32,115,105,103,110,97,116,117,114,101,0,0,0,0,0,0,73,68,58,37,115,32,103,108,67,104,101,99,107,70,114,97,109,101,98,117,102,102,101,114,83,116,97,116,117,115,40,41,32,61,32,37,115,10,0,0,102,105,108,101,95,100,97,116,97,45,62,100,97,116,97,32,33,61,32,78,85,76,76,0,115,111,108,118,101,67,111,110,115,116,114,97,105,110,116,115,0,0,0,0,0,0,0,0,74,0,0,0,97,0,0,0,110,0,0,0,0,0,0,0,107,110,111,119,110,32,105,110,99,111,114,114,101,99,116,32,115,82,71,66,32,112,114,111,102,105,108,101,0,0,0,0,73,68,58,37,115,32,103,108,71,101,116,69,114,114,111,114,40,41,32,61,32,37,115,10,0,0,0,0,0,0,0,0,84,82,73,65,78,71,76,69,77,69,83,72,0,0,0,0,68,0,0,0,101,0,0,0,99,0,0,0,101,0,0,0,109,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,0,0,0,0,103,97,109,109,97,32,116,97,98,108,101,32,98,101,105,110,103,32,114,101,98,117,105,108,116,0,0,0,0,0,0,0,40,69,82,82,79,82,58,32,85,110,107,110,111,119,110,32,69,114,114,111,114,32,69,110,117,109,41,0,0,0,0,0,112,101,114,102,111,114,109,68,105,115,99,114,101,116,101,67,111,108,108,105,115,105,111,110,68,101,116,101,99,116,105,111,110,0,0,0,0,0,0,0,78,0,0,0,111,0,0,0,118,0,0,0,101,0,0,0,109,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,0,0,0,0,71,76,95,73,78,86,65,76,73,68,95,79,80,69,82,65,84,73,79,78,0,0,0,0,98,116,83,116,114,105,100,105,110,103,77,101,115,104,73,110,116,101,114,102,97,99,101,68,97,116,97,0,0,0,0,0,98,116,73,110,116,73,110,100,101,120,68,97,116,97,0,0,79,0,0,0,99,0,0,0,116,0,0,0,111,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,71,76,95,73,78,86,65,76,73,68,95,86,65,76,85,69,0,0,0,0,0,0,0,0,83,0,0,0,101,0,0,0,112,0,0,0,116,0,0,0,101,0,0,0,109,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,73,110,118,97,108,105,100,32,73,72,68,82,32,100,97,116,97,0,0,0,0,0,0,0,71,76,95,73,78,86,65,76,73,68,95,69,78,85,77,0,65,0,0,0,117,0,0,0,103,0,0,0,117,0,0,0,115,0,0,0,116,0,0,0,0,0,0,0,0,0,0,0,73,110,118,97,108,105,100,32,102,105,108,116,101,114,32,109,101,116,104,111,100,32,105,110,32,73,72,68,82,0,0,0,74,0,0,0,117,0,0,0,108,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,85,110,107,110,111,119,110,32,102,105,108,116,101,114,32,109,101,116,104,111,100,32,105,110,32,73,72,68,82,0,0,0,70,97,105,108,101,100,32,116,111,32,108,105,110,107,58,32,0,0,0,0,0,0,0,0,74,0,0,0,117,0,0,0,110,0,0,0,101,0,0,0,0,0,0,0,0,0,0,0,77,78,71,32,102,101,97,116,117,114,101,115,32,97,114,101,32,110,111,116,32,97,108,108,111,119,101,100,32,105,110,32,97,32,80,78,71,32,100,97,116,97,115,116,114,101,97,109,0,0,0,0,0,0,0,0,102,105,108,101,95,100,97,116,97,32,33,61,32,78,85,76,76,0,0,0,0,0,0,0,98,97,100,32,97,100,97,112,116,105,118,101,32,102,105,108,116,101,114,32,118,97,108,117,101,0,0,0,0,0,0,0,109,105,115,115,105,110,103,32,73,72,68,82,0,0,0,0,71,76,95,73,78,86,65,76,73,68,95,69,78,85,77,0,85,110,107,110,111,119,110,32,99,111,109,112,114,101,115,115,105,111,110,32,109,101,116,104,111,100,32,105,110,32,73,72,68,82,0,0,0,0,0,0,108,105,98,112,110,103,32,101,114,114,111,114,58,32,37,115,0,0,0,0,0,0,0,0,48,0,0,0,0,0,0,0,105,110,118,97,108,105,100,32,98,108,111,99,107,32,116,121,112,101,0,0,0,0,0,0,65,0,0,0,112,0,0,0,114,0,0,0,105,0,0,0,108,0,0,0,0,0,0,0,85,110,107,110,111,119,110,32,105,110,116,101,114,108,97,99,101,32,109,101,116,104,111,100,32,105,110,32,73,72,68,82,0,0,0,0,0,0,0,0,103,108,68,101,108,101,116,101,86,101,114,116,101,120,65,114,114,97,121,115,61,37,117,10,0,0,0,0,0,0,0,0,117,112,100,97,116,101,65,99,116,105,118,97,116,105,111,110,83,116,97,116,101,0,0,0,46,46,47,83,114,99,47,67,108,97,115,115,101,115,47,83,107,97,116,101,80,97,114,107,46,99,112,112,0,0,0,0,77,0,0,0,97,0,0,0,114,0,0,0,99,0,0,0,104,0,0,0,0,0,0,0,73,110,118,97,108,105,100,32,99,111,108,111,114,32,116,121,112,101,47,98,105,116,32,100,101,112,116,104,32,99,111,109,98,105,110,97,116,105,111,110,32,105,110,32,73,72,68,82,0,0,0,0,0,0,0,0,70,0,0,0,101,0,0,0,98,0,0,0,114,0,0,0,117,0,0,0,97,0,0,0,114,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,73,110,118,97,108,105,100,32,99,111,108,111,114,32,116,121,112,101,32,105,110,32,73,72,68,82,0,0,0,0,0,0,77,111,100,101,108,86,105,101,119,0,0,0,0,0,0,0,99,97,108,99,117,108,97,116,101,79,118,101,114,108,97,112,112,105,110,103,80,97,105,114,115,0,0,0,0,0,0,0,74,0,0,0,97,0,0,0,110,0,0,0,117,0,0,0,97,0,0,0,114,0,0,0,121,0,0,0,0,0,0,0,73,110,118,97,108,105,100,32,98,105,116,32,100,101,112,116,104,32,105,110,32,73,72,68,82,0,0,0,0,0,0,0,49,46,50,46,56,0,0,0,80,114,111,106,101,99,116,105,111,110,77,97,116,114,105,120,0,0,0,0,0,0,0,0,70,105,110,100,66,101,116,116,101,114,76,97,110,100,105,110,103,70,114,111,109,80,114,101,100,105,99,116,105,111,110,32,97,105,114,116,105,109,101,58,37,102,32,10,0,0,0,0,98,116,77,101,115,104,80,97,114,116,68,97,116,97,0,0,87,105,100,116,104,32,105,115,32,116,111,111,32,108,97,114,103,101,32,102,111,114,32,108,105,98,112,110,103,32,116,111,32,112,114,111,99,101,115,115,32,112,105,120,101,108,115,0,32,117,115,105,110,103,32,122,115,116,114,101,97,109,0,0,98,116,67,111,108,108,105,115,105,111,110,83,104,97,112,101,68,97,116,97,0,0,0,0,84,101,120,80,114,111,106,101,99,116,105,111,110,77,97,116,114,105,120,0,0,0,0,0,67,97,112,115,117,108,101,88,0,0,0,0,0,0,0,0,80,77,0,0,0,0,0,0,73,110,118,97,108,105,100,32,105,109,97,103,101,32,104,101,105,103,104,116,32,105,110,32,73,72,68,82,0,0,0,0,105,110,115,117,102,102,105,99,105,101,110,116,32,109,101,109,111,114,121,32,116,111,32,114,101,97,100,32,99,104,117,110,107,0,0,0,0,0,0,0,77,97,116,101,114,105,97,108,83,99,97,108,101,0,0,0,98,116,84,114,105,97,110,103,108,101,77,101,115,104,83,104,97,112,101,68,97,116,97,0,65,77,0,0,0,0,0,0,73,110,118,97,108,105,100,32,105,109,97,103,101,32,119,105,100,116,104,32,105,110,32,73,72,68,82,0,0,0,0,0,122,115,116,114,101,97,109,32,117,110,99,108,97,105,109,101,100,0,0,0,0,0,0,0,77,97,116,101,114,105,97,108,66,105,97,115,0,0,0,0,69,114,114,111,114,58,32,84,104,101,32,80,79,68,32,102,105,108,101,32,105,115,32,105,110,32,102,105,120,101,100,32,112,111,105,110,116,32,102,111,114,109,97,116,32,98,117,116,32,116,104,101,32,116,111,111,108,115,32,104,97,118,101,110,39,116,32,98,101,101,110,32,99,111,109,112,105,108,101,100,32,119,105,116,104,32,102,105,120,101,100,32,112,111,105,110,116,32,101,110,97,98,108,101,100,46,10,0,0,0,0,0,73,109,97,103,101,32,104,101,105,103,104,116,32,101,120,99,101,101,100,115,32,117,115,101,114,32,108,105,109,105,116,32,105,110,32,73,72,68,82,0,117,110,107,110,111,119,110,32,99,104,117,110,107,32,101,120,99,101,101,100,115,32,109,101,109,111,114,121,32,108,105,109,105,116,115,0,0,0,0,0,66,111,110,101,77,97,116,114,105,120,65,114,114,97,121,73,84,91,48,93,0,0,0,0,80,0,0,0,77,0,0,0,0,0,0,0,0,0,0,0,73,109,97,103,101,32,119,105,100,116,104,32,101,120,99,101,101,100,115,32,117,115,101,114,32,108,105,109,105,116,32,105,110,32,73,72,68,82,0,0,82,111,119,32,104,97,115,32,116,111,111,32,109,97,110,121,32,98,121,116,101,115,32,116,111,32,97,108,108,111,99,97,116,101,32,105,110,32,109,101,109,111,114,121,0,0,0,0,66,111,110,101,77,97,116,114,105,120,65,114,114,97,121,91,48,93,0,0,0,0,0,0,102,101,114,114,111,114,40,115,116,114,101,97,109,41,32,61,61,32,48,0,0,0,0,0,73,110,118,97,108,105,100,32,97,116,116,101,109,112,116,32,116,111,32,114,101,97,100,32,114,111,119,32,100,97,116,97,0,0,0,0,0,0,0,0,105,110,118,97,108,105,100,0,65,0,0,0,77,0,0,0,0,0,0,0,0,0,0,0,73,109,97,103,101,32,104,101,105,103,104,116,32,105,115,32,122,101,114,111,32,105,110,32,73,72,68,82,0,0,0,0,84,111,111,32,109,117,99,104,32,105,109,97,103,101,32,100,97,116,97,0,0,0,0,0,105,110,102,111,95,112,116,114,32,33,61,32,78,85,76,76,0,0,0,0,0,0,0,0,104,101,97,100,101,114,32,99,114,99,32,109,105,115,109,97,116,99,104,0,0,0,0,0,78,117,109,66,111,110,101,73,110,102,108,117,101,110,99,101,115,0,0,0,0,0,0,0,73,109,97,103,101,32,119,105,100,116,104,32,105,115,32,122,101,114,111,32,105,110,32,73,72,68,82,0,0,0,0,0,105,110,118,97,108,105,100,32,108,111,99,97,116,105,111,110,32,105,110,32,112,110,103,95,115,101,116,95,117,110,107,110,111,119,110,95,99,104,117,110,107,115,0,0,0,0,0,0,69,120,116,114,97,32,99,111,109,112,114,101,115,115,101,100,32,100,97,116,97,0,0,0,86,105,101,119,80,114,111,106,77,97,116,114,105,120,0,0,103,108,66,105,110,100,86,101,114,116,101,120,65,114,114,97,121,61,37,117,10,0,0,0,66,105,107,101,85,86,77,97,112,46,112,110,103,0,0,0,117,112,100,97,116,101,65,99,116,105,111,110,115,0,0,0,87,79,82,76,68,95,78,85,77,95,76,73,71,72,84,83,32,61,61,32,109,111,100,101,108,80,79,68,46,110,78,117,109,76,105,103,104,116,0,0,105,110,116,101,114,110,97,108,32,101,114,114,111,114,32,104,97,110,100,108,105,110,103,32,99,72,82,77,45,62,88,89,90,0,0,0,0,0,0,0,112,110,103,95,115,101,116,95,117,110,107,110,111,119,110,95,99,104,117,110,107,115,32,110,111,119,32,101,120,112,101,99,116,115,32,97,32,118,97,108,105,100,32,108,111,99,97,116,105,111,110,0,0,0,0,0,78,111,116,32,101,110,111,117,103,104,32,105,109,97,103,101,32,100,97,116,97,0,0,0,83,104,105,110,105,110,101,115,115,0,0,0,0,0,0,0,105,110,116,101,114,110,97,108,32,101,114,114,111,114,32,104,97,110,100,108,105,110,103,32,99,72,82,77,32,99,111,101,102,102,105,99,105,101,110,116,115,0,0,0,0,0,0,0,105,110,118,97,108,105,100,32,117,115,101,114,32,116,114,97,110,115,102,111,114,109,32,112,105,120,101,108,32,100,101,112,116,104,0,0,0,0,0,0,76,105,103,104,116,80,111,115,105,116,105,111,110,91,48,93,0,0,0,0,0,0,0,0,117,112,100,97,116,101,65,97,98,98,115,0,0,0,0,0,73,67,67,32,112,114,111,102,105,108,101,32,116,97,103,32,111,117,116,115,105,100,101,32,112,114,111,102,105,108,101,0,105,110,116,101,114,110,97,108,32,114,111,119,32,119,105,100,116,104,32,101,114,114,111,114,0,0,0,0,0,0,0,0,76,105,103,104,116,68,105,114,101,99,116,105,111,110,0,0,98,116,86,101,99,116,111,114,51,68,111,117,98,108,101,68,97,116,97,0,0,0,0,0,67,121,108,105,110,100,101,114,89,0,0,0,0,0,0,0,73,67,67,32,112,114,111,102,105,108,101,32,116,97,103,32,115,116,97,114,116,32,110,111,116,32,97,32,109,117,108,116,105,112,108,101,32,111,102,32,52,0,0,0,0,0,0,0,105,110,116,101,114,110,97,108,32,114,111,119,32,115,105,122,101,32,99,97,108,99,117,108,97,116,105,111,110,32,101,114,114,111,114,0,0,0,0,0,77,111,100,101,108,86,105,101,119,73,84,0,0,0,0,0,67,97,112,115,117,108,101,83,104,97,112,101,0,0,0,0,84,114,105,97,110,103,108,101,0,0,0,0,0,0,0,0,117,110,101,120,112,101,99,116,101,100,32,73,67,67,32,80,67,83,32,101,110,99,111,100,105,110,103,0,0,0,0,0,105,110,116,101,114,110,97,108,32,114,111,119,32,108,111,103,105,99,32,101,114,114,111,114,0,0,0,0,0,0,0,0,77,86,80,77,97,116,114,105,120,0,0,0,0,0,0,0,117,110,114,101,99,111,103,110,105,122,101,100,32,73,67,67,32,112,114,111,102,105,108,101,32,99,108,97,115,115,0,0,105,110,118,97,108,105,100,32,99,104,117,110,107,32,116,121,112,101,0,0,0,0,0,0,115,83,104,97,100,111,119,50,0,0,0,0,0,0,0,0,69,114,114,111,114,58,32,69,110,100,105,97,110,110,101,115,115,32,109,105,115,109,97,116,99,104,32,98,101,116,119,101,101,110,32,116,104,101,32,46,112,111,100,32,102,105,108,101,32,97,110,100,32,116,104,101,32,112,108,97,116,102,111,114,109,46,10,0,0,0,0,0,117,110,101,120,112,101,99,116,101,100,32,78,97,109,101,100,67,111,108,111,114,32,73,67,67,32,112,114,111,102,105,108,101,32,99,108,97,115,115,0,117,110,104,97,110,100,108,101,100,32,99,114,105,116,105,99,97,108,32,99,104,117,110,107,0,0,0,0,0,0,0,0,115,83,104,97,100,111,119,49,0,0,0,0,0,0,0,0,117,110,101,120,112,101,99,116,101,100,32,68,101,118,105,99,101,76,105,110,107,32,73,67,67,32,112,114,111,102,105,108,101,32,99,108,97,115,115,0,102,111,114,99,105,110,103,32,115,97,118,101,32,111,102,32,97,110,32,117,110,104,97,110,100,108,101,100,32,99,104,117,110,107,59,32,112,108,101,97,115,101,32,99,97,108,108,32,112,110,103,95,115,101,116,95,107,101,101,112,95,117,110,107,110,111,119,110,95,99,104,117,110,107,115,0,0,0,0,0,115,83,104,97,100,111,119,48,0,0,0,0,0,0,0,0,115,116,114,101,97,109,32,33,61,32,78,85,76,76,0,0,112,110,103,95,115,116,97,114,116,95,114,101,97,100,95,105,109,97,103,101,47,112,110,103,95,114,101,97,100,95,117,112,100,97,116,101,95,105,110,102,111,58,32,100,117,112,108,105,99,97,116,101,32,99,97,108,108,0,0,0,0,0,0,0,111,117,116,32,111,102,32,112,108,97,99,101,0,0,0,0,105,110,118,97,108,105,100,32,101,109,98,101,100,100,101,100,32,65,98,115,116,114,97,99,116,32,73,67,67,32,112,114,111,102,105,108,101,0,0,0,108,105,98,112,110,103,32,119,97,114,110,105,110,103,58,32,37,115,0,0,0,0,0,0,83,97,118,105,110,103,32,117,110,107,110,111,119,110,32,99,104,117,110,107,58,0,0,0,112,110,103,95,112,116,114,32,33,61,32,78,85,76,76,0,117,110,107,110,111,119,110,32,104,101,97,100,101,114,32,102,108,97,103,115,32,115,101,116,0,0,0,0,0,0,0,0,115,84,101,120,116,117,114,101,0,0,0,0,0,0,0,0,105,110,118,97,108,105,100,32,73,67,67,32,112,114,111,102,105,108,101,32,99,111,108,111,114,32,115,112,97,99,101,0,117,110,107,110,111,119,110,32,99,104,117,110,107,58,32,111,117,116,32,111,102,32,109,101,109,111,114,121,0,0,0,0,101,114,114,111,114,32,105,110,32,117,115,101,114,32,99,104,117,110,107,0,0,0,0,0,69,114,114,111,114,32,102,111,114,58,32,37,115,10,0,0,103,108,71,101,110,86,101,114,116,101,120,65,114,114,97,121,115,61,37,117,10,0,0,0,105,110,116,101,114,110,97,108,83,105,110,103,108,101,83,116,101,112,83,105,109,117,108,97,116,105,111,110,0,0,0,0,108,111,99,97,108,101,32,110,111,116,32,115,117,112,112,111,114,116,101,100,0,0,0,0,71,114,97,121,32,99,111,108,111,114,32,115,112,97,99,101,32,110,111,116,32,112,101,114,109,105,116,116,101,100,32,111,110,32,82,71,66,32,80,78,71,0,0,0,0,0,0,0,116,111,111,32,109,97,110,121,32,117,110,107,110,111,119,110,32,99,104,117,110,107,115,0,98,97,100,32,99,111,109,112,114,101,115,115,105,111,110,32,105,110,102,111,0,0,0,0,35,100,101,102,105,110,101,32,85,83,69,95,83,72,65,68,79,87,95,83,65,77,80,76,69,82,83,0,0,0,0,0,82,71,66,32,99,111,108,111,114,32,115,112,97,99,101,32,110,111,116,32,112,101,114,109,105,116,116,101,100,32,111,110,32,103,114,97,121,115,99,97,108,101,32,80,78,71,0,0,115,80,76,84,32,111,117,116,32,111,102,32,109,101,109,111,114,121,0,0,0,0,0,0,105,110,115,117,102,102,105,99,105,101,110,116,32,109,101,109,111,114,121,0,0,0,0,0,84,104,97,110,107,115,46,10,0,0,0,0,0,0,0,0,37,0,0,0,73,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,32,0,0,0,37,0,0,0,112,0,0,0,0,0,0,0,98,116,81,117,97,110,116,105,122,101,100,66,118,104,70,108,111,97,116,68,97,116,97,0,80,67,83,32,105,108,108,117,109,105,110,97,110,116,32,105,115,32,110,111,116,32,68,53,48,0,0,0,0,0,0,0,112,110,103,95,115,101,116,95,115,80,76,84,58,32,105,110,118,97,108,105,100,32,115,80,76,84,0,0,0,0,0,0,117,110,107,110,111,119,110,32,99,111,109,112,114,101,115,115,105,111,110,32,116,121,112,101,0,0,0,0,0,0,0,0,35,118,101,114,115,105,111,110,32,0,0,0,0,0,0,0,80,114,101,100,105,99,116,105,111,110,32,102,105,110,105,115,104,101,100,58,32,37,105,10,0,0,0,0,0,0,0,0,98,116,86,101,99,116,111,114,51,70,108,111,97,116,68,97,116,97,0,0,0,0,0,0,37,73,58,37,77,58,37,83,32,37,112,0,0,0,0,0,105,110,118,97,108,105,100,32,115,105,103,110,97,116,117,114,101,0,0,0,0,0,0,0,116,111,111,32,109,97,110,121,32,115,80,76,84,32,99,104,117,110,107,115,0,0,0,0,73,110,115,117,102,102,105,99,105,101,110,116,32,109,101,109,111,114,121,32,116,111,32,112,114,111,99,101,115,115,32,116,101,120,116,32,99,104,117,110,107,0,0,0,0,0,0,0,37,102,0,0,0,0,0,0,98,116,67,111,110,118,101,120,73,110,116,101,114,110,97,108,83,104,97,112,101,68,97,116,97,0,0,0,0,0,0,0,37,0,0,0,97,0,0,0,32,0,0,0,37,0,0,0,98,0,0,0,32,0,0,0,37,0,0,0,100,0,0,0,32,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,32,0,0,0,37,0,0,0,89,0,0,0,0,0,0,0,0,0,0,0,105,110,116,101,110,116,32,111,117,116,115,105,100,101,32,100,101,102,105,110,101,100,32,114,97,110,103,101,0,0,0,0,116,82,78,83,32,99,104,117,110,107,32,104,97,115,32,111,117,116,45,111,102,45,114,97,110,103,101,32,115,97,109,112,108,101,115,32,102,111,114,32,98,105,116,95,100,101,112,116,104,0,0,0,0,0,0,0,110,111,32,115,112,97,99,101,32,105,110,32,99,104,117,110,107,32,99,97,99,104,101,0,79,112,101,110,71,76,32,69,83,32,71,76,83,76,32,37,102,0,0,0,0,0,0,0,37,97,32,37,98,32,37,100,32,37,72,58,37,77,58,37,83,32,37,89,0,0,0,0,105,110,118,97,108,105,100,32,114,101,110,100,101,114,105,110,103,32,105,110,116,101,110,116,0,0,0,0,0,0,0,0,73,103,110,111,114,105,110,103,32,105,110,118,97,108,105,100,32,116,105,109,101,32,118,97,108,117,101,0,0,0,0,0,110,111,110,45,112,111,115,105,116,105,118,101,32,104,101,105,103,104,116,0,0,0,0,0,79,112,101,110,71,76,32,69,83,32,71,76,83,76,32,69,83,32,37,102,0,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,0,0,0,0,0,0,0,0,116,97,103,32,99,111,117,110,116,32,116,111,111,32,108,97,114,103,101,0,0,0,0,0,116,101,120,116,32,99,104,117,110,107,58,32,111,117,116,32,111,102,32,109,101,109,111,114,121,0,0,0,0,0,0,0,98,97,100,32,104,101,105,103,104,116,32,102,111,114,109,97,116,0,0,0,0,0,0,0,37,72,58,37,77,58,37,83,0,0,0,0,0,0,0,0,108,101,110,103,116,104,32,100,111,101,115,32,110,111,116,32,109,97,116,99,104,32,112,114,111,102,105,108,101,0,0,0,116,101,120,116,32,99,111,109,112,114,101,115,115,105,111,110,32,109,111,100,101,32,105,115,32,111,117,116,32,111,102,32,114,97,110,103,101,0,0,0,110,111,110,45,112,111,115,105,116,105,118,101,32,119,105,100,116,104,0,0,0,0,0,0,115,116,100,58,58,98,97,100,95,97,108,108,111,99,0,0,79,112,101,110,71,76,77,97,110,97,103,101,114,32,115,101,116,117,112,71,76,32,102,97,105,108,101,100,33,32,37,115,10,0,0,0,0,0,0,0,67,111,117,108,100,32,110,111,116,32,111,112,101,110,32,102,105,108,101,58,32,37,115,10,0,0,0,0,0,0,0,0,32,98,117,116,32,114,117,110,110,105,110,103,32,119,105,116,104,32,0,0,0,0,0,0,112,110,103,95,114,101,97,100,95,117,112,100,97,116,101,95,105,110,102,111,47,112,110,103,95,115,116,97,114,116,95,114,101,97,100,95,105,109,97,103,101,58,32,100,117,112,108,105,99,97,116,101,32,99,97,108,108,0,0,0,0,0,0,0,67,82,67,32,101,114,114,111,114,0,0,0,0,0,0,0,37,0,0,0,109,0,0,0,47,0,0,0,37,0,0,0,100,0,0,0,47,0,0,0,37,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,105,110,118,97,108,105,100,32,108,101,110,103,116,104,0,0,116,111,111,32,109,97,110,121,32,116,101,120,116,32,99,104,117,110,107,115,0,0,0,0,98,97,100,32,119,105,100,116,104,32,102,111,114,109,97,116,0,0,0,0,0,0,0,0,49,46,54,46,54,0,0,0,105,110,118,97,108,105,100,32,119,105,110,100,111,119,32,115,105,122,101,0,0,0,0,0,83,104,97,100,111,119,32,102,114,97,109,101,98,117,102,102,101,114,32,99,114,101,97,116,105,111,110,32,102,97,105,108,101,100,0,0,0,0,0,0,118,101,114,115,105,111,110,0])
.concat([37,109,47,37,100,47,37,121,0,0,0,0,0,0,0,0,116,111,111,32,115,104,111,114,116,0,0,0,0,0,0,0,105,110,118,97,108,105,100,32,117,110,105,116,0,0,0,0,103,108,68,101,108,101,116,101,86,101,114,116,101,120,65,114,114,97,121,115,0,0,0,0,115,116,101,112,83,105,109,117,108,97,116,105,111,110,0,0,115,111,108,118,101,71,114,111,117,112,0,0,0,0,0,0,80,97,114,107,85,86,77,97,112,46,112,110,103,0,0,0,99,72,82,77,32,99,104,117,110,107,32,100,111,101,115,32,110,111,116,32,109,97,116,99,104,32,115,82,71,66,0,0,105,110,118,97,108,105,100,32,100,97,116,97,0,0,0,0,83,107,105,110,110,101,100,77,111,100,101,108,70,111,114,83,104,97,100,111,119,83,104,97,100,101,114,80,114,111,103,114,97,109,32,102,97,105,108,101,100,32,37,115,10,0,0,0,102,0,0,0,97,0,0,0,108,0,0,0,115,0,0,0,101,0,0,0,0,0,0,0,100,117,112,108,105,99,97,116,101,32,115,82,71,66,32,105,110,102,111,114,109,97,116,105,111,110,32,105,103,110,111,114,101,100,0,0,0,0,0,0,117,110,114,101,99,111,103,110,105,122,101,100,32,101,113,117,97,116,105,111,110,32,116,121,112,101,0,0,0,0,0,0,83,107,105,110,110,101,100,77,111,100,101,108,83,104,97,100,101,114,80,114,111,103,114,97,109,32,102,97,105,108,101,100,32,37,115,10,0,0,0,0,80,108,101,97,115,101,32,105,110,99,108,117,100,101,32,97,98,111,118,101,32,105,110,102,111,114,109,97,116,105,111,110,44,32,121,111,117,114,32,80,108,97,116,102,111,114,109,44,32,118,101,114,115,105,111,110,32,111,102,32,79,83,46,10,0,0,0,0,0,0,0,0,37,112,0,0,0,0,0,0,82,105,100,101,114,85,86,77,97,112,46,112,110,103,0,0,102,97,108,115,101,0,0,0,98,116,66,118,104,83,117,98,116,114,101,101,73,110,102,111,68,97,116,97,0,0,0,0,105,110,99,111,110,115,105,115,116,101,110,116,32,114,101,110,100,101,114,105,110,103,32,105,110,116,101,110,116,115,0,0,105,110,118,97,108,105,100,32,112,97,114,97,109,101,116,101,114,32,99,111,117,110,116,0,77,111,100,101,108,70,111,114,83,104,97,100,111,119,83,104,97,100,101,114,80,114,111,103,114,97,109,32,102,97,105,108,101,100,32,37,115,10,0,0,98,116,67,104,97,114,73,110,100,101,120,84,114,105,112,108,101,116,68,97,116,97,0,0,74,117,109,112,105,110,103,32,37,105,10,0,0,0,0,0,116,0,0,0,114,0,0,0,117,0,0,0,101,0,0,0,0,0,0,0,0,0,0,0,105,110,118,97,108,105,100,32,115,82,71,66,32,114,101,110,100,101,114,105,110,103,32,105,110,116,101,110,116,0,0,0,98,116,67,121,108,105,110,100,101,114,83,104,97,112,101,68,97,116,97,0,0,0,0,0,73,110,118,97,108,105,100,32,112,97,108,101,116,116,101,0,105,110,118,97,108,105,100,32,105,110,100,101,120,0,0,0,77,111,100,101,108,83,104,97,100,101,114,80,114,111,103,114,97,109,32,102,97,105,108,101,100,32,37,115,10,0,0,0,98,116,67,97,112,115,117,108,101,83,104,97,112,101,68,97,116,97,0,0,0,0,0,0,116,114,117,101,0,0,0,0,115,82,71,66,0,0,0,0,73,110,118,97,108,105,100,32,112,97,108,101,116,116,101,32,108,101,110,103,116,104,0,0,105,110,118,97,108,105,100,32,119,105,116,104,32,97,108,112,104,97,32,99,104,97,110,110,101,108,0,0,0,0,0,0,66,97,115,105,99,32,76,105,110,101,32,83,104,97,100,101,114,32,102,97,105,108,101,100,32,37,115,10,0,0,0,0,115,80,76,84,32,99,104,117,110,107,32,114,101,113,117,105,114,101,115,32,116,111,111,32,109,117,99,104,32,109,101,109,111,114,121,0,0,0,0,0,58,32,0,0,0,0,0,0,83,107,105,110,110,101,100,77,111,100,101,108,70,111,114,83,104,97,100,111,119,86,101,114,116,83,104,97,100,101,114,46,118,115,104,0,0,0,0,0,65,66,46,80,79,68,46,50,46,48,0,0,0,0,0,0,105,110,116,101,114,110,97,108,32,101,114,114,111,114,32,99,104,101,99,107,105,110,103,32,99,104,114,111,109,97,116,105,99,105,116,105,101,115,0,0,115,80,76,84,32,99,104,117,110,107,32,116,111,111,32,108,111,110,103,0,0,0,0,0,70,97,105,108,101,100,32,116,111,32,99,111,109,112,105,108,101,32,115,104,97,100,101,114,58,32,0,0,0,0,0,0,105,110,66,111,110,101,87,101,105,103,104,116,115,0,0,0,105,110,66,111,110,101,73,110,100,101,120,0,0,0,0,0,105,110,118,97,108,105,100,32,99,104,114,111,109,97,116,105,99,105,116,105,101,115,0,0,77,101,109,111,114,121,32,97,108,108,111,99,97,116,105,111,110,32,102,97,105,108,101,100,32,119,104,105,108,101,32,112,114,111,99,101,115,115,105,110,103,32,115,67,65,76,0,0,115,80,76,84,32,99,104,117,110,107,32,104,97,115,32,98,97,100,32,108,101,110,103,116,104,0,0,0,0,0,0,0,103,108,66,105,110,100,86,101,114,116,101,120,65,114,114,97,121,0,0,0,0,0,0,0,67,97,110,39,116,32,115,101,116,32,98,111,116,104,32,114,101,97,100,95,100,97,116,97,95,102,110,32,97,110,100,32,119,114,105,116,101,95,100,97,116,97,95,102,110,32,105,110,32,116,104,101,32,115,97,109,101,32,115,116,114,117,99,116,117,114,101,0,0,0,0,0,65,112,112,108,105,99,97,116,105,111,110,32,98,117,105,108,116,32,119,105,116,104,32,108,105,98,112,110,103,45,0,0,114,0,0,0,0,0,0,0,105,111,115,95,98,97,115,101,58,58,99,108,101,97,114,0,84,111,111,32,109,97,110,121,32,73,68,65,84,115,32,102,111,117,110,100,0,0,0,0,80,78,71,32,102,105,108,101,32,99,111,114,114,117,112,116,101,100,32,98,121,32,65,83,67,73,73,32,99,111,110,118,101,114,115,105,111,110,0,0,79,117,116,32,111,102,32,109,101,109,111,114,121,0,0,0,100,117,112,108,105,99,97,116,101,0,0,0,0,0,0,0,65,112,112,108,105,99,97,116,105,111,110,32,106,109,112,95,98,117,102,32,115,105,122,101,32,99,104,97,110,103,101,100,0,0,0,0,0,0,0,0,73,110,118,97,108,105,100,32,115,67,65,76,32,104,101,105,103,104,116,0,0,0,0,0,109,97,108,102,111,114,109,101,100,32,115,80,76,84,32,99,104,117,110,107,0,0,0,0,112,110,103,95,99,104,101,99,107,95,115,105,103,40,40,118,111,105,100,42,41,112,110,103,95,100,97,116,97,44,32,56,41,0,0,0,0,0,0,0,117,110,107,110,111,119,110,32,99,111,109,112,114,101,115,115,105,111,110,32,109,101,116,104,111,100,0,0,0,0,0,0,105,110,118,97,108,105,100,32,108,105,116,101,114,97,108,47,108,101,110,103,116,104,32,99,111,100,101,0,0,0,0,0,115,116,100,58,58,98,97,100,95,99,97,115,116,0,0,0,83,107,105,110,110,101,100,77,111,100,101,108,70,114,97,103,83,104,97,100,101,114,46,102,115,104,0,0,0,0,0,0,103,97,109,109,97,32,118,97,108,117,101,32,111,117,116,32,111,102,32,114,97,110,103,101,0,0,0,0,0,0,0,0,105,110,118,97,108,105,100,32,97,102,116,101,114,32,112,110,103,95,115,116,97,114,116,95,114,101,97,100,95,105,109,97,103,101,32,111,114,32,112,110,103,95,114,101,97,100,95,117,112,100,97,116,101,95,105,110,102,111,0,0,0,0,0,0,73,110,118,97,108,105,100,32,115,67,65,76,32,119,105,100,116,104,0,0,0,0,0,0,78,111,32,115,112,97,99,101,32,105,110,32,99,104,117,110,107,32,99,97,99,104,101,32,102,111,114,32,115,80,76,84,0,0,0,0,0,0,0,0,71,76,95,69,88,84,95,115,104,97,100,111,119,95,115,97,109,112,108,101,114,115,0,0,85,110,97,98,108,101,32,116,111,32,115,101,116,32,118,105,100,101,111,32,109,111,100,101,58,32,37,115,10,0,0,0,115,121,110,99,104,114,111,110,105,122,101,77,111,116,105,111,110,83,116,97,116,101,115,0,115,111,108,118,101,71,114,111,117,112,67,97,99,104,101,70,114,105,101,110,100,108,121,73,116,101,114,97,116,105,111,110,115,0,0,0,0,0,0,0,117,110,101,120,112,101,99,116,101,100,32,122,108,105,98,32,114,101,116,117,114,110,0,0,73,110,118,97,108,105,100,32,115,67,65,76,32,117,110,105,116,0,0,0,0,0,0,0,98,97,100,32,107,101,121,119,111,114,100,0,0,0,0,0,83,107,105,110,110,101,100,77,111,100,101,108,86,101,114,116,83,104,97,100,101,114,46,118,115,104,0,0,0,0,0,0,71,76,95,69,88,84,95,100,105,115,99,97,114,100,95,102,114,97,109,101,98,117,102,102,101,114,0,0,0,0,0,0,117,110,115,117,112,112,111,114,116,101,100,32,122,108,105,98,32,118,101,114,115,105,111,110,0,0,0,0,0,0,0,0,112,110,103,95,100,111,95,101,110,99,111,100,101,95,97,108,112,104,97,58,32,117,110,101,120,112,101,99,116,101,100,32,99,97,108,108,0,0,0,0,73,110,115,117,102,102,105,99,105,101,110,116,32,109,101,109,111,114,121,32,102,111,114,32,112,67,65,76,32,112,97,114,97,109,101,116,101,114,0,0,98,97,100,32,99,111,109,112,114,101,115,115,105,111,110,32,109,101,116,104,111,100,0,0,105,110,99,111,114,114,101,99,116,32,108,101,110,103,116,104,32,99,104,101,99,107,0,0,77,111,100,101,108,70,111,114,83,104,97,100,111,119,70,114,97,103,83,104,97,100,101,114,46,102,115,104,0,0,0,0,112,114,111,99,101,115,115,73,115,108,97,110,100,115,0,0,73,102,32,121,111,117,32,99,97,110,32,114,101,112,114,111,100,117,99,101,32,116,104,105,115,44,32,112,108,101,97,115,101,32,101,109,97,105,108,32,98,117,103,115,64,99,111,110,116,105,110,117,111,117,115,112,104,121,115,105,99,115,46,99,111,109,10,0,0,0,0,0,67,0,0,0,0,0,0,0,98,116,81,117,97,110,116,105,122,101,100,66,118,104,78,111,100,101,68,97,116,97,0,0,116,114,117,110,99,97,116,101,100,0,0,0,0,0,0,0,112,110,103,95,100,111,95,113,117,97,110,116,105,122,101,32,114,101,116,117,114,110,101,100,32,114,111,119,98,121,116,101,115,61,48,0,0,0,0,0,73,110,115,117,102,102,105,99,105,101,110,116,32,109,101,109,111,114,121,32,102,111,114,32,112,67,65,76,32,112,97,114,97,109,115,0,0,0,0,0,116,114,117,110,99,97,116,101,100,0,0,0,0,0,0,0,105,110,99,111,114,114,101,99,116,32,100,97,116,97,32,99,104,101,99,107,0,0,0,0,77,111,100,101,108,70,111,114,83,104,97,100,111,119,86,101,114,116,83,104,97,100,101,114,46,118,115,104,0,0,0,0,67,97,108,108,32,116,111,32,78,85,76,76,32,114,101,97,100,32,102,117,110,99,116,105,111,110,0,0,0,0,0,0,98,116,83,104,111,114,116,73,110,116,73,110,100,101,120,84,114,105,112,108,101,116,68,97,116,97,0,0,0,0,0,0,83,80,72,69,82,69,0,0,118,101,99,116,111,114,0,0,105,110,115,117,102,102,105,99,105,101,110,116,32,109,101,109,111,114,121,0,0,0,0,0,112,110,103,95,100,111,95,114,103,98,95,116,111,95,103,114,97,121,32,102,111,117,110,100,32,110,111,110,103,114,97,121,32,112,105,120,101,108,0,0,67,121,108,105,110,100,101,114,88,0,0,0,0,0,0,0,73,110,115,117,102,102,105,99,105,101,110,116,32,109,101,109,111,114,121,32,102,111,114,32,112,67,65,76,32,117,110,105,116,115,0,0,0,0,0,0,111,117,116,32,111,102,32,109,101,109,111,114,121,0,0,0,105,110,118,97,108,105,100,32,100,105,115,116,97,110,99,101,32,116,111,111,32,102,97,114,32,98,97,99,107,0,0,0,105,110,84,101,120,67,111,111,114,100,0,0,0,0,0,0,98,116,68,121,110,97,109,105,99,115,87,111,114,108,100,70,108,111,97,116,68,97,116,97,0,0,0,0,0,0,0,0,66,86,72,84,82,73,65,78,71,76,69,77,69,83,72,0,66,111,120,0,0,0,0,0,37,46,48,76,102,0,0,0,100,97,109,97,103,101,100,32,76,90,32,115,116,114,101,97,109,0,0,0,0,0,0,0,85,110,105,110,105,116,105,97,108,105,122,101,100,32,114,111,119,0,0,0,0,0,0,0,73,110,115,117,102,102,105,99,105,101,110,116,32,109,101,109,111,114,121,32,102,111,114,32,112,67,65,76,32,112,117,114,112,111,115,101,0,0,0,0,101,120,116,114,97,32,99,111,109,112,114,101,115,115,101,100,32,100,97,116,97,0,0,0,105,110,118,97,108,105,100,32,100,105,115,116,97,110,99,101,32,99,111,100,101,0,0,0,77,111,100,101,108,70,114,97,103,83,104,97,100,101,114,46,102,115,104,0,0,0,0,0,112,114,101,100,105,99,116,85,110,99,111,110,115,116,114,97,105,110,116,77,111,116,105,111,110,0,0,0,0,0,0,0,109,111,110,101,121,95,103,101,116,32,101,114,114,111,114,0,98,97,100,32,112,97,114,97,109,101,116,101,114,115,32,116,111,32,122,108,105,98,0,0,78,85,76,76,32,114,111,119,32,98,117,102,102,101,114,0,73,110,118,97,108,105,100,32,102,111,114,109,97,116,32,102,111,114,32,112,67,65,76,32,112,97,114,97,109,101,116,101,114,0,0,0,0,0,0,0,116,111,111,32,115,104,111,114,116,0,0,0,0,0,0,0,105,110,118,97,108,105,100,32,108,105,116,101,114,97,108,47,108,101,110,103,116,104,32,99,111,100,101,0,0,0,0,0,77,111,100,101,108,86,101,114,116,83,104,97,100,101,114,46,118,115,104,0,0,0,0,0,97,112,112,108,121,32,115,112,101,99,117,108,97,116,105,118,101,32,99,111,110,116,97,99,116,32,114,101,115,116,105,116,117,116,105,111,110,0,0,0,77,105,115,115,105,110,103,32,73,72,68,82,32,98,101,102,111,114,101,32,73,68,65,84,0,0,0,0,0,0,0,0,83,97,116,0,0,0,0,0,70,114,105,0,0,0,0,0,105,111,115,116,114,101,97,109,0,0,0,0,0,0,0,0,37,76,102,0,0,0,0,0,105,110,67,111,108,111,114,0,84,104,117,0,0,0,0,0,122,108,105,98,32,73,79,32,101,114,114,111,114,0,0,0,105,110,118,97,108,105,100,32,98,97,99,107,103,114,111,117,110,100,32,103,97,109,109,97,32,116,121,112,101,0,0,0,73,110,118,97,108,105,100,32,112,67,65,76,32,112,97,114,97,109,101,116,101,114,32,99,111,117,110,116,0,0,0,0,116,111,111,32,109,97,110,121,32,112,114,111,102,105,108,101,115,0,0,0,0,0,0,0,87,101,100,0,0,0,0,0,105,110,118,97,108,105,100,32,100,105,115,116,97,110,99,101,115,32,115,101,116,0,0,0,10,0,0,0,0,0,0,0,84,117,101,0,0,0,0,0,114,101,108,97,116,105,118,101,95,112,97,116,104,32,33,61,32,78,85,76,76,0,0,0,67,67,68,32,109,111,116,105,111,110,32,99,108,97,109,112,105,110,103,0,0,0,0,0,77,111,110,0,0,0,0,0,83,117,110,0,0,0,0,0,83,97,116,117,114,100,97,121,0,0,0,0,0,0,0,0,70,114,105,100,97,121,0,0,84,104,117,114,115,100,97,121,0,0,0,0,0,0,0,0,87,101,100,110,101,115,100,97,121,0,0,0,0,0,0,0,84,117,101,115,100,97,121,0,77,111,110,100,97,121,0,0,109,105,115,115,105,110,103,32,76,90,32,100,105,99,116,105,111,110,97,114,121,0,0,0,108,105,98,112,110,103,32,100,111,101,115,32,110,111,116,32,115,117,112,112,111,114,116,32,103,97,109,109,97,43,98,97,99,107,103,114,111,117,110,100,43,114,103,98,95,116,111,95,103,114,97,121,0,0,0,0,73,110,118,97,108,105,100,32,112,67,65,76,32,101,113,117,97,116,105,111,110,32,116,121,112,101,0,0,0,0,0,0,105,110,118,97,108,105,100,32,118,97,108,117,101,115,0,0,83,117,110,100,97,121,0,0,105,110,118,97,108,105,100,32,108,105,116,101,114,97,108,47,108,101,110,103,116,104,115,32,115,101,116,0,0,0,0,0,80,78,71,32,117,110,115,105,103,110,101,100,32,105,110,116,101,103,101,114,32,111,117,116,32,111,102,32,114,97,110,103,101,0,0,0,0,0,0,0,112,110,103,95,115,101,116,95,102,105,108,108,101,114,32,105,115,32,105,110,118,97,108,105,100,32,102,111,114,32,108,111,119,32,98,105,116,32,100,101,112,116,104,32,103,114,97,121,32,111,117,116,112,117,116,0,105,110,116,101,103,114,97,116,101,84,114,97,110,115,102,111,114,109,115,0,0,0,0,0,83,0,0,0,97,0,0,0,116,0,0,0,0,0,0,0,77,111,100,101,108,32,86,66,79,32,99,114,101,97,116,105,111,110,32,102,97,105,108,101,100,33,32,37,115,10,0,0,103,108,68,105,115,99,97,114,100,70,114,97,109,101,98,117,102,102,101,114,69,88,84,0,105,110,116,101,114,110,97,108,32,101,114,114,111,114,58,32,97,114,114,97,121,32,97,108,108,111,99,0,0,0,0,0,70,0,0,0,114,0,0,0,105,0,0,0,0,0,0,0,84,0,0,0,104,0,0,0,117,0,0,0,0,0,0,0,82,101,97,100,32,69,114,114,111,114,0,0,0,0,0,0,87,0,0,0,101,0,0,0,100,0,0,0,0,0,0,0,84,0,0,0,117,0,0,0,101,0,0,0,0,0,0,0,80,111,116,101,110,116,105,97,108,32,111,118,101,114,102,108,111,119,32,105,110,32,112,110,103,95,122,97,108,108,111,99,40,41,0,0,0,0,0,0,77,0,0,0,111,0,0,0,110,0,0,0,0,0,0,0,70,105,108,101,85,116,105,108,115,46,99,112,112,0,0,0,77,105,115,115,105,110,103,32,80,76,84,69,32,98,101,102,111,114,101,32,73,68,65,84,0,0,0,0,0,0,0,0,117,110,115,112,101,99,105,102,105,101,100,32,105,111,115,116,114,101,97,109,95,99,97,116,101,103,111,114,121,32,101,114,114,111,114,0,0,0,0,0,83,0,0,0,117,0,0,0,110,0,0,0,0,0,0,0,66,97,115,105,99,76,105,110,101,70,114,97,103,83,104,97,100,101,114,46,102,115,104,0,83,0,0,0,97,0,0,0,116,0,0,0,117,0,0,0,114,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,78,111,116,32,97,32,80,78,71,32,102,105,108,101,0,0,112,110,103,95,115,101,116,95,102,105,108,108,101,114,58,32,105,110,97,112,112,114,111,112,114,105,97,116,101,32,99,111,108,111,114,32,116,121,112,101,0,0,0,0,0,0,0,0,77,111,100,101,108,32,115,107,105,110,110,101,100,32,86,66,79,32,99,114,101,97,116,105,111,110,32,102,97,105,108,101,100,33,32,37,115,10,0,0,105,110,116,101,114,110,97,108,32,101,114,114,111,114,58,32,97,114,114,97,121,32,114,101,97,108,108,111,99,0,0,0,117,110,101,120,112,101,99,116,101,100,32,101,110,100,32,111,102,32,76,90,32,115,116,114,101,97,109,0,0,0,0,0,76,105,98,112,110,103,32,106,109,112,95,98,117,102,32,115,116,105,108,108,32,97,108,108,111,99,97,116,101,100,0,0,73,110,115,117,102,102,105,99,105,101,110,116,32,109,101,109,111,114,121,32,102,111,114,32,104,73,83,84,32,99,104,117,110,107,32,100,97,116,97,0,98,75,71,68,32,109,117,115,116,32,98,101,32,97,102,116,101,114,0,0,0,0,0,0,112,110,103,95,100,97,116,97,32,33,61,32,78,85,76,76,32,38,38,32,112,110,103,95,100,97,116,97,95,115,105,122,101,32,62,32,56,0,0,0,70,0,0,0,114,0,0,0,105,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,46,46,47,83,114,99,47,67,108,97,115,115,101,115,47,84,101,120,116,117,114,101,76,111,97,100,101,114,47,105,109,97,103,101,46,99,0,0,0,0,46,46,47,83,114,99,47,67,108,97,115,115,101,115,47,84,101,120,116,117,114,101,76,111,97,100,101,114,47,116,101,120,116,117,114,101,46,99,0,0,105,110,118,97,108,105,100,32,99,111,100,101,32,45,45,32,109,105,115,115,105,110,103,32,101,110,100,45,111,102,45,98,108,111,99,107,0,0,0,0,116,101,120,116,117,114,101,95,111,98,106,101,99,116,95,105,100,32,33,61,32,48,0,0,105,110,99,111,114,114,101,99,116,32,104,101,97,100,101,114,32,99,104,101,99,107,0,0,105,110,118,97,108,105,100,32,100,105,115,116,97,110,99,101,32,99,111,100,101,0,0,0,84,0,0,0,104,0,0,0,117,0,0,0,114,0,0,0,115,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,103,108,71,101,110,86,101,114,116,101,120,65,114,114,97,121,115,0,0,0,0,0,0,0,112,114,101,100,105,99,116,105,118,101,32,99,111,110,118,101,120,83,119,101,101,112,84,101,115,116,0,0,0,0,0,0,87,0,0,0,101,0,0,0,100,0,0,0,110,0,0,0,101,0,0,0,115,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,84,0,0,0,117,0,0,0,101,0,0,0,115,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,77,0,0,0,111,0,0,0,110,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,83,0,0,0,117,0,0,0,110,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,105,110,118,97,108,105,100,32,100,105,115,116,97,110,99,101,32,116,111,111,32,102,97,114,32,98,97,99,107,0,0,0,68,101,99,0,0,0,0,0,78,111,118,0,0,0,0,0,82,111,111,116,0,0,0,0,66,97,115,105,99,76,105,110,101,86,101,114,116,83,104,97,100,101,114,46,118,115,104,0,79,99,116,0,0,0,0,0,117,110,101,120,112,101,99,116,101,100,32,122,108,105,98,32,114,101,116,117,114,110,32,99,111,100,101,0,0,0,0,0,82,101,97,100,32,112,97,108,101,116,116,101,32,105,110,100,101,120,32,101,120,99,101,101,100,105,110,103,32,110,117,109,95,112,97,108,101,116,116,101,0,0,0,0,0,0,0,0,73,110,118,97,108,105,100,32,112,97,108,101,116,116,101,32,115,105,122,101,44,32,104,73,83,84,32,97,108,108,111,99,97,116,105,111,110,32,115,107,105,112,112,101,100,0,0,0,104,73,83,84,32,109,117,115,116,32,98,101,32,97,102,116,101,114,0,0,0,0,0,0,83,101,112,0,0,0,0,0,114,97,119,95,105,109,97,103,101,32,33,61,32,78,85,76,76,0,0,0,0,0,0,0,105,110,118,97,108,105,100,32,98,105,116,32,108,101,110,103,116,104,32,114,101,112,101,97,116,0,0,0,0,0,0,0,65,117,103,0,0,0,0,0,85,80,32,117,110,107,110,111,119,110,58,37,117,10,0,0,85,110,97,98,108,101,32,116,111,32,105,110,105,116,105,97,108,105,122,101,32,83,68,76,58,32,37,115,10,0,0,0,119,58,37,100,44,104,58,37,100,10,0,0,0,0,0,0,114,101,108,101,97,115,101,95,114,97,119,95,105,109,97,103,101,95,100,97,116,97,0,0,114,101,97,100,95,101,110,116,105,114,101,95,112,110,103,95,105,109,97,103,101,0,0,0,108,111,97,100,95,116,101,120,116,117,114,101,0,0,0,0,103,101,116,95,114,97,119,95,105,109,97,103,101,95,100,97,116,97,95,102,114,111,109,95,112,110,103,0,0,0,0,0,103,101,116,95,103,108,95,99,111,108,111,114,95,102,111,114,109,97,116,0,0,0,0,0,73,110,105,116,77,111,100,101,108,0,0,0,0,0,0,0,82,101,108,101,97,115,101,70,105,108,101,68,97,116,97,0,71,101,116,70,105,108,101,68,97,116,97,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,49,50,51,52,53,54,55,56,57,0,0,0,0,0,0,48,49,50,51,52,53,54,55,56,57,0,0,0,0,0,0,37,0,0,0,89,0,0,0,45,0,0,0,37,0,0,0,109,0,0,0,45,0,0,0,37,0,0,0,100,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,0,0,0,0,37,0,0,0,73,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,32,0,0,0,37,0,0,0,112,0,0,0,0,0,0,0,37,0,0,0,109,0,0,0,47,0,0,0,37,0,0,0,100,0,0,0,47,0,0,0,37,0,0,0,121,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,37,72,58,37,77,58,37,83,37,72,58,37,77,0,0,0,37,73,58,37,77,58,37,83,32,37,112,0,0,0,0,0,37,89,45,37,109,45,37,100,37,109,47,37,100,47,37,121,37,72,58,37,77,58,37,83,37,0,0,0,0,0,0,0,37,112,0,0,0,0,0,0,6,0,0,0,0,0,0,0,7,0,0,0,6,0,0,0,0,0,0,0,1,0,0,0,9,0,0,0,10,0,0,0,3,0,0,0,4,0,0,0,8,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,176,195,0,0,40,74,0,0,1,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,128,63,0,0,128,63,0,0,128,63,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,168,176,0,0,34,1,0,0,216,0,0,0,66,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,184,176,0,0,128,0,0,0,172,0,0,0,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,200,176,0,0,142,2,0,0,96,0,0,0,204,0,0,0,6,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,216,176,0,0,158,1,0,0,90,0,0,0,100,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,232,176,0,0,212,0,0,0,226,2,0,0,78,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,248,176,0,0,18,1,0,0,84,2,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,177,0,0,22,1,0,0,182,2,0,0,116,0,0,0,58,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,177,0,0,26,0,0,0,12,0,0,0,80,0,0,0,86,0,0,0,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,177,0,0,36,2,0,0,144,0,0,0,176,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,56,177,0,0,192,1,0,0,58,0,0,0,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,72,177,0,0,78,0,0,0,8,2,0,0,166,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,88,177,0,0,202,0,0,0,44,1,0,0,166,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,104,177,0,0,82,1,0,0,54,1,0,0,36,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,120,177,0,0,90,1,0,0,186,1,0,0,14,0,0,0,222,0,0,0,2,0,0,0,68,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,136,177,0,0,108,0,0,0,110,1,0,0,106,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,152,177,0,0,246,1,0,0,56,0,0,0,106,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,168,177,0,0,42,3,0,0,52,2,0,0,34,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,184,177,0,0,174,2,0,0,114,0,0,0,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,200,177,0,0,116,2,0,0,170,1,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,232,177,0,0,74,0,0,0,148,1,0,0,22,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,248,177,0,0,120,2,0,0,28,2,0,0,80,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,178,0,0,222,0,0,0,98,3,0,0,82,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,178,0,0,228,0,0,0,20,0,0,0,254,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,178,0,0,228,0,0,0,44,0,0,0,254,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,178,0,0,34,2,0,0,252,0,0,0,30,3,0,0,4,0,0,0,26,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,178,0,0,252,2,0,0,22,3,0,0,30,3,0,0,2,0,0,0,60,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,178,0,0,26,2,0,0,88,2,0,0,30,3,0,0,10,0,0,0,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,160,178,0,0,88,1,0,0,220,1,0,0,30,3,0,0,16,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,179,0,0,234,2,0,0,20,1,0,0,30,3,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,179,0,0,22,2,0,0,128,1,0,0,30,3,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,179,0,0,98,0,0,0,130,1,0,0,30,3,0,0,6,1,0,0,4,0,0,0,46,0,0,0,8,0,0,0,24,0,0,0,18,0,0,0,6,0,0,0,248,255,255,255,128,179,0,0,42,0,0,0,16,0,0,0,70,0,0,0,28,0,0,0,2,0,0,0,66,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,168,179,0,0,48,3,0,0,250,0,0,0,30,3,0,0,40,0,0,0,6,0,0,0,74,0,0,0,38,0,0,0,20,0,0,0,2,0,0,0,8,0,0,0,248,255,255,255,168,179,0,0,140,0,0,0,230,0,0,0,248,0,0,0,152,0,0,0,120,0,0,0,92,0,0,0,108,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,208,179,0,0,240,0,0,0,98,2,0,0,30,3,0,0,98,0,0,0,86,0,0,0,46,0,0,0,170,0,0,0,214,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,224,179,0,0,244,2,0,0,204,0,0,0,30,3,0,0,90,0,0,0,194,0,0,0,70,0,0,0,224,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,240,179,0,0,54,3,0,0,4,0,0,0,30,3,0,0,52,0,0,0,52,0,0,0,6,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,180,0,0,118,0,0,0,236,0,0,0,30,3,0,0,28,0,0,0,20,0,0,0,84,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,180,0,0,184,2,0,0,142,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,56,180,0,0,72,0,0,0,218,1,0,0,82,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,72,180,0,0,146,0,0,0,42,2,0,0,30,3,0,0,12,0,0,0,10,0,0,0,14,0,0,0,8,0,0,0,12,0,0,0,4,0,0,0,2,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,104,180,0,0,156,1,0,0,232,0,0,0,30,3,0,0,24,0,0,0,26,0,0,0,52,0,0,0,44,0,0,0,50,0,0,0,8,0,0,0,6,0,0,0,34,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,136,180,0,0,100,0,0,0,50,0,0,0,30,3,0,0,28,0,0,0,22,0,0,0,58,0,0,0,62,0,0,0,42,0,0,0,54,0,0,0,48,0,0,0,16,0,0,0,66,0,0,0,56,0,0,0,36,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,168,180,0,0,152,0,0,0,8,0,0,0,30,3,0,0,70,0,0,0,10,0,0,0,78,0,0,0,80,0,0,0,72,0,0,0,44,0,0,0,76,0,0,0,40,0,0,0,84,0,0,0,82,0,0,0,64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,200,180,0,0,234,0,0,0,14,0,0,0,30,3,0,0,8,0,0,0,134,0,0,0,36,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,216,180,0,0,70,0,0,0,200,2,0,0,30,3,0,0,16,0,0,0,162,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,232,180,0,0,28,0,0,0,78,2,0,0,30,3,0,0,2,0,0,0,12,0,0,0,4,0,0,0,4,1,0,0,222,0,0,0,2,0,0,0,240,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,181,0,0,38,3,0,0,204,1,0,0,30,3,0,0,16,0,0,0,6,0,0,0,18,0,0,0,104,0,0,0,14,0,0,0,20,0,0,0,208,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,181,0,0,38,3,0,0,46,0,0,0,30,3,0,0,8,0,0,0,4,0,0,0,22,0,0,0,216,0,0,0,182,0,0,0,12,0,0,0,20,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,72,181,0,0,38,3,0,0,218,0,0,0,30,3,0,0,14,0,0,0,10,0,0,0,24,0,0,0,60,0,0,0,158,0,0,0,10,0,0,0,176,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,104,181,0,0,38,3,0,0,48,2,0,0,30,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,120,181,0,0,170,0,0,0,4,2,0,0,30,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,136,181,0,0,38,3,0,0,242,0,0,0,30,3,0,0,44,0,0,0,26,0,0,0,22,0,0,0,42,0,0,0,24,0,0,0,70,0,0,0,66,0,0,0,12,0,0,0,12,0,0,0,34,0,0,0,34,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,168,181,0,0,44,3,0,0,92,0,0,0,30,3,0,0,52,0,0,0,10,0,0,0,48,0,0,0,82,0,0,0,14,0,0,0,24,0,0,0,90,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,216,181,0,0,208,0,0,0,224,2,0,0,166,0,0,0,148,0,0,0,24,0,0,0,76,0,0,0,78,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,0,0,0,0,0,0,0,232,181,0,0,146,2,0,0,70,1,0,0,56,0,0,0,248,255,255,255,232,181,0,0,124,0,0,0,186,0,0,0,192,255,255,255,192,255,255,255,232,181,0,0,170,2,0,0,176,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,248,181,0,0,38,3,0,0,2,1,0,0,30,3,0,0,14,0,0,0,10,0,0,0,24,0,0,0,60,0,0,0,158,0,0,0,10,0,0,0,176,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,182,0,0,38,3,0,0,28,3,0,0,30,3,0,0,14,0,0,0,10,0,0,0,24,0,0,0,60,0,0,0,158,0,0,0,10,0,0,0,176,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,182,0,0,134,0,0,0,96,2,0,0,238,0,0,0,94,0,0,0,46,0,0,0,36,0,0,0,100,0,0,0,200,0,0,0,40,0,0,0,10,1,0,0,22,0,0,0,72,0,0,0,86,0,0,0,30,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,182,0,0,178,1,0,0,8,3,0,0,120,0,0,0,50,0,0,0,22,0,0,0,140,0,0,0,204,0,0,0,224,0,0,0,80,0,0,0,56,0,0,0,48,0,0,0,22,0,0,0,102,0,0,0,64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,182,0,0,132,2,0,0,152,1,0,0,238,0,0,0,94,0,0,0,2,0,0,0,132,0,0,0,100,0,0,0,200,0,0,0,40,0,0,0,10,0,0,0,22,0,0,0,84,0,0,0,86,0,0,0,56,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,128,182,0,0,180,2,0,0,186,2,0,0,252,255,255,255,252,255,255,255,128,182,0,0,230,1,0,0,176,1,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,152,182,0,0,214,2,0,0,12,3,0,0,252,255,255,255,252,255,255,255,152,182,0,0,118,1,0,0,144,2,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,176,182,0,0,12,1,0,0,54,0,0,0,248,255,255,255,248,255,255,255,176,182,0,0,212,2,0,0,6,3,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,200,182,0,0,104,1,0,0,150,2,0,0,248,255,255,255,248,255,255,255,200,182,0,0,248,1,0,0,150,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,224,182,0,0,152,2,0,0,216,2,0,0,82,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,183,0,0,58,3,0,0,122,0,0,0,82,0,0,0,50,0,0,0,22,0,0,0,140,0,0,0,112,0,0,0,224,0,0,0,80,0,0,0,56,0,0,0,48,0,0,0,22,0,0,0,72,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,183,0,0,254,1,0,0,56,2,0,0,152,0,0,0,94,0,0,0,2,0,0,0,132,0,0,0,38,0,0,0,200,0,0,0,40,0,0,0,10,0,0,0,22,0,0,0,84,0,0,0,96,0,0,0,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,72,183,0,0,18,2,0,0,228,1,0,0,30,3,0,0,138,0,0,0,24,1,0,0,184,0,0,0,86,1,0,0,28,0,0,0,134,0,0,0,74,0,0,0,98,1,0,0,168,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,104,183,0,0,114,1,0,0,162,0,0,0,30,3,0,0,238,0,0,0,246,0,0,0,10,1,0,0,46,1,0,0,54,1,0,0,116,0,0,0,242,0,0,0,216,0,0,0,54,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,136,183,0,0,248,2,0,0,144,1,0,0,30,3,0,0,30,0,0,0,116,0,0,0,34,0,0,0,154,0,0,0,96,1,0,0,22,1,0,0,210,0,0,0,226,0,0,0,74,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,168,183,0,0,238,0,0,0,40,2,0,0,30,3,0,0,192,0,0,0,236,0,0,0,130,0,0,0,38,1,0,0,122,0,0,0,90,0,0,0,136,0,0,0,58,1,0,0,24,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,224,183,0,0,126,2,0,0,36,0,0,0,230,0,0,0,50,0,0,0,22,0,0,0,140,0,0,0,204,0,0,0,224,0,0,0,80,0,0,0,148,0,0,0,186,0,0,0,18,0,0,0,102,0,0,0,64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,240,183,0,0,34,0,0,0,138,0,0,0,8,1,0,0,94,0,0,0,2,0,0,0,132,0,0,0,100,0,0,0,200,0,0,0,40,0,0,0,212,0,0,0,46,0,0,0,6,0,0,0,86,0,0,0,56,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,184,0,0,68,3,0,0,228,2,0,0,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,184,0,0,66,0,0,0,10,0,0,0,30,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,184,0,0,24,2,0,0,76,2,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,184,0,0,188,0,0,0,136,0,0,0,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,80,184,0,0,26,3,0,0,214,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,184,0,0,8,1,0,0,62,1,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,184,0,0,78,1,0,0,100,1,0,0,28,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,184,0,0,96,3,0,0,208,1,0,0,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,152,184,0,0,66,3,0,0,138,1,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,168,184,0,0,206,0,0,0,160,2,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,184,184,0,0,76,0,0,0,196,1,0,0,54,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,200,184,0,0,134,2,0,0,92,2,0,0,60,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,240,184,0,0,8,0,0,0,96,0,0,0,188,0,0,0,244,0,0,0,38,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,248,184,0,0,64,3,0,0,136,2,0,0,192,0,0,0,26,1,0,0,26,0,0,0,4,0,0,0,54,0,0,0,74,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,56,185,0,0,30,0,0,0,144,0,0,0,0,0,0,0,0,0,0,0])
.concat([0,0,0,0,80,185,0,0,52,1,0,0,32,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,88,185,0,0,92,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,104,185,0,0,22,0,0,0,30,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,185,0,0,20,0,0,0,180,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,152,185,0,0,90,3,0,0,72,2,0,0,126,0,0,0,2,0,0,0,78,0,0,0,106,1,0,0,4,0,0,0,2,0,0,0,2,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,168,185,0,0,94,1,0,0,6,0,0,0,44,0,0,0,16,0,0,0,156,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,184,185,0,0,206,2,0,0,254,2,0,0,10,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,200,185,0,0,112,0,0,0,154,1,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,216,185,0,0,74,1,0,0,222,2,0,0,22,0,0,0,8,0,0,0,100,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,232,185,0,0,248,0,0,0,106,2,0,0,6,0,0,0,2,0,0,0,44,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,186,0,0,200,0,0,0,2,2,0,0,88,0,0,0,96,0,0,0,110,0,0,0,88,0,0,0,244,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,186,0,0,100,3,0,0,252,1,0,0,28,0,0,0,4,0,0,0,90,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,186,0,0,86,2,0,0,140,1,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,186,0,0,0,1,0,0,80,2,0,0,10,0,0,0,10,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,80,186,0,0,114,2,0,0,4,3,0,0,50,3,0,0,2,0,0,0,76,1,0,0,12,1,0,0,8,0,0,0,4,0,0,0,16,0,0,0,170,0,0,0,68,0,0,0,86,1,0,0,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,186,0,0,14,1,0,0,124,1,0,0,166,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,186,0,0,68,1,0,0,166,2,0,0,62,0,0,0,36,0,0,0,98,0,0,0,8,0,0,0,68,0,0,0,188,0,0,0,90,0,0,0,180,0,0,0,44,0,0,0,228,0,0,0,134,0,0,0,56,0,0,0,14,1,0,0,22,0,0,0,92,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,186,0,0,168,2,0,0,12,2,0,0,24,0,0,0,12,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,144,186,0,0,122,2,0,0,214,1,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,160,186,0,0,108,2,0,0,66,1,0,0,28,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,176,186,0,0,46,3,0,0,32,2,0,0,80,0,0,0,2,0,0,0,6,0,0,0,178,0,0,0,208,0,0,0,214,0,0,0,100,1,0,0,26,1,0,0,16,1,0,0,106,0,0,0,144,0,0,0,128,0,0,0,66,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,192,186,0,0,76,3,0,0,82,2,0,0,26,0,0,0,6,0,0,0,66,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,208,186,0,0,208,2,0,0,62,0,0,0,106,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,224,186,0,0,204,2,0,0,178,2,0,0,36,0,0,0,166,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,240,186,0,0,32,3,0,0,46,2,0,0,114,0,0,0,154,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,187,0,0,52,0,0,0,10,3,0,0,84,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,187,0,0,180,1,0,0,154,2,0,0,156,0,0,0,96,0,0,0,10,0,0,0,2,0,0,0,12,0,0,0,178,0,0,0,4,0,0,0,10,0,0,0,2,1,0,0,4,0,0,0,12,0,0,0,26,0,0,0,38,0,0,0,20,1,0,0,76,0,0,0,74,0,0,0,60,0,0,0,18,0,0,0,38,0,0,0,24,0,0,0,180,0,0,0,76,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,56,187,0,0,64,1,0,0,64,0,0,0,120,0,0,0,2,0,0,0,94,0,0,0,16,1,0,0,8,0,0,0,8,0,0,0,4,0,0,0,106,0,0,0,58,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,72,187,0,0,128,2,0,0,190,0,0,0,50,3,0,0,2,0,0,0,76,1,0,0,14,1,0,0,8,0,0,0,4,0,0,0,16,0,0,0,2,1,0,0,6,0,0,0,86,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,88,187,0,0,66,2,0,0,200,1,0,0,16,2,0,0,178,0,0,0,52,0,0,0,206,0,0,0,36,3,0,0,176,0,0,0,170,0,0,0,184,0,0,0,254,0,0,0,132,1,0,0,132,0,0,0,2,0,0,0,34,0,0,0,102,0,0,0,56,1,0,0,14,0,0,0,98,0,0,0,40,1,0,0,250,2,0,0,106,0,0,0,150,0,0,0,52,1,0,0,236,0,0,0,198,0,0,0,62,0,0,0,74,0,0,0,82,0,0,0,172,0,0,0,236,1,0,0,250,0,0,0,10,0,0,0,64,0,0,0,24,0,0,0,28,0,0,0,16,0,0,0,62,2,0,0,42,1,0,0,32,0,0,0,24,0,0,0,160,0,0,0,172,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,104,187,0,0,230,2,0,0,198,0,0,0,18,0,0,0,14,0,0,0,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,120,187,0,0,110,0,0,0,44,2,0,0,46,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,152,187,0,0,198,2,0,0,158,2,0,0,114,0,0,0,154,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,168,187,0,0,24,3,0,0,246,2,0,0,70,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,184,187,0,0,254,0,0,0,146,1,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,216,187,0,0,70,3,0,0,236,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,224,187,0,0,188,2,0,0,6,1,0,0,14,0,0,0,138,0,0,0,2,0,0,0,68,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,240,187,0,0,60,2,0,0,224,0,0,0,8,0,0,0,96,0,0,0,10,0,0,0,2,0,0,0,202,0,0,0,190,0,0,0,12,0,0,0,234,0,0,0,2,1,0,0,14,0,0,0,8,0,0,0,32,0,0,0,16,0,0,0,20,1,0,0,46,0,0,0,178,0,0,0,124,0,0,0,242,0,0,0,44,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,188,0,0,104,2,0,0,120,1,0,0,50,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,188,0,0,158,0,0,0,48,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,188,0,0,12,0,0,0,50,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,188,0,0,94,2,0,0,138,2,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,72,188,0,0,164,1,0,0,226,1,0,0,156,0,0,0,96,0,0,0,10,0,0,0,2,0,0,0,12,0,0,0,178,0,0,0,10,0,0,0,10,0,0,0,2,1,0,0,4,0,0,0,12,0,0,0,26,0,0,0,38,0,0,0,20,1,0,0,76,0,0,0,10,0,0,0,60,0,0,0,10,0,0,0,38,0,0,0,24,0,0,0,180,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,88,188,0,0,166,1,0,0,6,2,0,0,82,0,0,0,2,0,0,0,252,0,0,0,162,0,0,0,12,0,0,0,2,0,0,0,18,0,0,0,156,0,0,0,48,0,0,0,52,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,104,188,0,0,72,3,0,0,80,0,0,0,2,0,0,0,64,0,0,0,26,0,0,0,114,0,0,0,46,0,0,0,4,0,0,0,114,0,0,0,118,0,0,0,28,0,0,0,130,0,0,0,72,0,0,0,232,0,0,0,42,0,0,0,148,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,188,0,0,18,0,0,0,60,3,0,0,52,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,144,188,0,0,250,1,0,0,92,3,0,0,50,0,0,0,68,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,160,188,0,0,60,0,0,0,72,1,0,0,10,0,0,0,10,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,168,188,0,0,112,1,0,0,40,3,0,0,2,0,0,0,212,0,0,0,8,0,0,0,178,0,0,0,38,0,0,0,136,0,0,0,200,0,0,0,202,0,0,0,150,0,0,0,196,0,0,0,56,0,0,0,196,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,184,188,0,0,60,1,0,0,102,2,0,0,14,0,0,0,8,0,0,0,2,0,0,0,68,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,200,188,0,0,164,0,0,0,134,1,0,0,8,0,0,0,96,0,0,0,10,0,0,0,2,0,0,0,180,0,0,0,190,0,0,0,12,0,0,0,54,0,0,0,2,1,0,0,14,0,0,0,8,0,0,0,20,0,0,0,78,0,0,0,20,1,0,0,142,0,0,0,178,0,0,0,124,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,216,188,0,0,58,1,0,0,50,2,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,232,188,0,0,38,2,0,0,240,2,0,0,14,0,0,0,0,1,0,0,2,0,0,0,68,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,189,0,0,116,0,0,0,100,2,0,0,2,0,0,0,32,0,0,0,2,0,0,0,68,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,189,0,0,246,0,0,0,238,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,189,0,0,80,1,0,0,78,3,0,0,160,1,0,0,2,0,0,0,10,0,0,0,10,0,0,0,8,0,0,0,10,0,0,0,10,0,0,0,126,0,0,0,100,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,189,0,0,22,0,0,0,86,0,0,0,104,0,0,0,2,0,0,0,48,1,0,0,210,0,0,0,8,0,0,0,6,0,0,0,14,0,0,0,220,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,80,189,0,0,156,2,0,0,210,2,0,0,42,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,189,0,0,32,0,0,0,38,0,0,0,62,3,0,0,160,0,0,0,94,0,0,0,98,0,0,0,72,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,104,189,0,0,88,3,0,0,56,1,0,0,182,0,0,0,68,0,0,0,252,255,255,255,104,189,0,0,50,1,0,0,4,1,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,136,189,0,0,14,3,0,0,230,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,144,189,0,0,42,0,0,0,0,2,0,0,56,0,0,0,210,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,160,189,0,0,30,0,0,0,82,3,0,0,114,0,0,0,154,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,176,189,0,0,16,1,0,0,102,1,0,0,36,0,0,0,10,0,0,0,30,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,192,189,0,0,176,0,0,0,174,1,0,0,6,0,0,0,130,0,0,0,46,0,0,0,148,0,0,0,36,0,0,0,42,0,0,0,146,0,0,0,196,0,0,0,228,0,0,0,202,0,0,0,124,0,0,0,194,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,208,189,0,0,86,3,0,0,68,2,0,0,102,0,0,0,96,0,0,0,10,0,0,0,2,0,0,0,108,0,0,0,178,0,0,0,2,0,0,0,164,0,0,0,80,0,0,0,18,0,0,0,12,0,0,0,28,1,0,0,74,0,0,0,20,1,0,0,60,0,0,0,120,0,0,0,60,0,0,0,160,0,0,0,38,0,0,0,24,0,0,0,180,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,224,189,0,0,40,1,0,0,74,3,0,0,16,2,0,0,178,0,0,0,52,0,0,0,206,0,0,0,196,0,0,0,176,0,0,0,170,0,0,0,28,0,0,0,176,0,0,0,132,1,0,0,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,240,189,0,0,14,2,0,0,0,3,0,0,58,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,190,0,0,206,1,0,0,42,1,0,0,168,0,0,0,96,0,0,0,10,0,0,0,2,0,0,0,12,0,0,0,178,0,0,0,8,0,0,0,36,0,0,0,2,1,0,0,4,0,0,0,12,0,0,0,26,0,0,0,38,0,0,0,20,1,0,0,76,0,0,0,156,0,0,0,60,0,0,0,128,0,0,0,38,0,0,0,114,0,0,0,16,0,0,0,76,0,0,0,134,0,0,0,34,0,0,0,70,0,0,0,50,0,0,0,78,0,0,0,12,0,0,0,2,0,0,0,174,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,190,0,0,216,1,0,0,162,1,0,0,18,0,0,0,32,0,0,0,198,0,0,0,160,0,0,0,18,1,0,0,58,0,0,0,162,0,0,0,168,0,0,0,182,0,0,0,206,0,0,0,216,0,0,0,60,0,0,0,122,0,0,0,28,1,0,0,70,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,190,0,0,24,1,0,0,16,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,190,0,0,84,3,0,0,96,1,0,0,102,0,0,0,96,0,0,0,10,0,0,0,2,0,0,0,108,0,0,0,178,0,0,0,2,0,0,0,6,0,0,0,80,0,0,0,18,0,0,0,12,0,0,0,28,1,0,0,74,0,0,0,20,1,0,0,60,0,0,0,160,0,0,0,60,0,0,0,58,0,0,0,38,0,0,0,24,0,0,0,180,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,80,190,0,0,130,0,0,0,232,2,0,0,34,0,0,0,96,0,0,0,10,0,0,0,2,0,0,0,246,0,0,0,178,0,0,0,6,0,0,0,132,0,0,0,72,1,0,0,10,0,0,0,12,0,0,0,76,0,0,0,54,0,0,0,20,1,0,0,76,0,0,0,104,0,0,0,60,0,0,0,96,0,0,0,38,0,0,0,24,0,0,0,180,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,190,0,0,242,1,0,0,2,3,0,0,22,0,0,0,4,0,0,0,2,0,0,0,10,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,150,0,0,0,164,0,0,0,82,1,0,0,64,0,0,0,118,0,0,0,4,0,0,0,2,0,0,0,2,0,0,0,154,0,0,0,32,0,0,0,4,0,0,0,2,0,0,0,6,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,190,0,0,54,2,0,0,148,2,0,0,14,0,0,0,4,0,0,0,2,0,0,0,30,0,0,0,188,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,120,190,0,0,36,1,0,0,238,2,0,0,14,0,0,0,4,0,0,0,2,0,0,0,30,0,0,0,188,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,136,190,0,0,226,0,0,0,188,1,0,0,10,0,0,0,96,0,0,0,10,0,0,0,2,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,2,1,0,0,14,0,0,0,8,0,0,0,20,0,0,0,78,0,0,0,20,1,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,152,190,0,0,30,2,0,0,74,2,0,0,34,0,0,0,96,0,0,0,10,0,0,0,2,0,0,0,246,0,0,0,178,0,0,0,6,0,0,0,12,0,0,0,72,1,0,0,10,0,0,0,12,0,0,0,76,0,0,0,54,0,0,0,20,1,0,0,76,0,0,0,104,0,0,0,60,0,0,0,96,0,0,0,38,0,0,0,24,0,0,0,180,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,184,190,0,0,102,0,0,0,16,3,0,0,164,0,0,0,96,0,0,0,10,0,0,0,2,0,0,0,12,0,0,0,178,0,0,0,10,0,0,0,252,0,0,0,2,1,0,0,26,0,0,0,4,0,0,0,26,0,0,0,38,0,0,0,20,1,0,0,170,0,0,0,24,0,0,0,60,0,0,0,92,0,0,0,38,0,0,0,24,0,0,0,180,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,208,190,0,0,224,1,0,0,18,3,0,0,10,0,0,0,96,0,0,0,10,0,0,0,2,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,2,1,0,0,10,0,0,0,10,0,0,0,20,0,0,0,78,0,0,0,20,1,0,0,10,0,0,0,10,0,0,0,60,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,224,190,0,0,212,1,0,0,192,2,0,0,92,0,0,0,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,191,0,0,40,0,0,0,46,1,0,0,2,0,0,0,212,0,0,0,8,0,0,0,178,0,0,0,38,0,0,0,136,0,0,0,200,0,0,0,202,0,0,0,150,0,0,0,196,0,0,0,56,0,0,0,196,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,191,0,0,86,0,0,0,130,2,0,0,98,1,0,0,160,0,0,0,8,1,0,0,84,0,0,0,68,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,191,0,0,194,2,0,0,88,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,191,0,0,76,1,0,0,112,2,0,0,124,0,0,0,96,0,0,0,10,0,0,0,2,0,0,0,164,0,0,0,178,0,0,0,14,0,0,0,52,0,0,0,2,1,0,0,2,0,0,0,12,0,0,0,26,0,0,0,38,0,0,0,20,1,0,0,172,0,0,0,136,0,0,0,60,0,0,0,122,0,0,0,38,0,0,0,226,0,0,0,12,0,0,0,76,0,0,0,44,0,0,0,102,0,0,0,186,0,0,0,118,0,0,0,154,0,0,0,172,0,0,0,4,0,0,0,46,0,0,0,0,0,0,0,0,0,0,0,90,78,75,50,50,98,116,66,118,104,84,114,105,97,110,103,108,101,77,101,115,104,83,104,97,112,101,49,57,112,114,111,99,101,115,115,65,108,108,84,114,105,97,110,103,108,101,115,69,80,49,56,98,116,84,114,105,97,110,103,108,101,67,97,108,108,98,97,99,107,82,75,57,98,116,86,101,99,116,111,114,51,83,52,95,69,50,49,77,121,78,111,100,101,79,118,101,114,108,97,112,67,97,108,108,98,97,99,107,0,0,0,90,78,75,49,57,98,116,84,114,105,97,110,103,108,101,77,101,115,104,83,104,97,112,101,49,57,112,114,111,99,101,115,115,65,108,108,84,114,105,97,110,103,108,101,115,69,80,49,56,98,116,84,114,105,97,110,103,108,101,67,97,108,108,98,97,99,107,82,75,57,98,116,86,101,99,116,111,114,51,83,52,95,69,49,54,70,105,108,116,101,114,101,100,67,97,108,108,98,97,99,107,0,0,0,90,78,51,51,98,116,77,105,110,107,111,119,115,107,105,80,101,110,101,116,114,97,116,105,111,110,68,101,112,116,104,83,111,108,118,101,114,49,50,99,97,108,99,80,101,110,68,101,112,116,104,69,82,50,50,98,116,86,111,114,111,110,111,105,83,105,109,112,108,101,120,83,111,108,118,101,114,80,75,49,51,98,116,67,111,110,118,101,120,83,104,97,112,101,83,52,95,82,75,49,49,98,116,84,114,97,110,115,102,111,114,109,83,55,95,82,57,98,116,86,101,99,116,111,114,51,83,57,95,83,57,95,80,49,50,98,116,73,68,101,98,117,103,68,114,97,119,80,49,50,98,116,83,116,97,99,107,65,108,108,111,99,69,50,48,98,116,73,110,116,101,114,109,101,100,105,97,116,101,82,101,115,117,108,116,0,0,0,0,0,0,0,90,78,51,51,98,116,67,111,110,118,101,120,67,111,110,99,97,118,101,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,50,49,99,97,108,99,117,108,97,116,101,84,105,109,101,79,102,73,109,112,97,99,116,69,80,49,55,98,116,67,111,108,108,105,115,105,111,110,79,98,106,101,99,116,83,49,95,82,75,49,54,98,116,68,105,115,112,97,116,99,104,101,114,73,110,102,111,80,49,54,98,116,77,97,110,105,102,111,108,100,82,101,115,117,108,116,69,51,49,76,111,99,97,108,84,114,105,97,110,103,108,101,83,112,104,101,114,101,67,97,115,116,67,97,108,108,98,97,99,107,0,0,0,90,78,50,56,98,116,72,97,115,104,101,100,79,118,101,114,108,97,112,112,105,110,103,80,97,105,114,67,97,99,104,101,51,55,114,101,109,111,118,101,79,118,101,114,108,97,112,112,105,110,103,80,97,105,114,115,67,111,110,116,97,105,110,105,110,103,80,114,111,120,121,69,80,49,55,98,116,66,114,111,97,100,112,104,97,115,101,80,114,111,120,121,80,49,50,98,116,68,105,115,112,97,116,99,104,101,114,69,49,56,82,101,109,111,118,101,80,97,105,114,67,97,108,108,98,97,99,107,0,0,0,0,0,0,0,0,90,78,50,56,98,116,72,97,115,104,101,100,79,118,101,114,108,97,112,112,105,110,103,80,97,105,114,67,97,99,104,101,49,57,99,108,101,97,110,80,114,111,120,121,70,114,111,109,80,97,105,114,115,69,80,49,55,98,116,66,114,111,97,100,112,104,97,115,101,80,114,111,120,121,80,49,50,98,116,68,105,115,112,97,116,99,104,101,114,69,49,55,67,108,101,97,110,80,97,105,114,67,97,108,108,98,97,99,107,0,0,0,90,78,50,51,98,116,67,111,110,118,101,120,67,111,110,118,101,120,65,108,103,111,114,105,116,104,109,49,54,112,114,111,99,101,115,115,67,111,108,108,105,115,105,111,110,69,80,75,50,52,98,116,67,111,108,108,105,115,105,111,110,79,98,106,101,99,116,87,114,97,112,112,101,114,83,50,95,82,75,49,54,98,116,68,105,115,112,97,116,99,104,101,114,73,110,102,111,80,49,54,98,116,77,97,110,105,102,111,108,100,82,101,115,117,108,116,69,50,49,98,116,87,105,116,104,111,117,116,77,97,114,103,105,110,82,101,115,117,108,116,95,48,0,0,90,78,50,51,98,116,67,111,110,118,101,120,67,111,110,118,101,120,65,108,103,111,114,105,116,104,109,49,54,112,114,111,99,101,115,115,67,111,108,108,105,115,105,111,110,69,80,75,50,52,98,116,67,111,108,108,105,115,105,111,110,79,98,106,101,99,116,87,114,97,112,112,101,114,83,50,95,82,75,49,54,98,116,68,105,115,112,97,116,99,104,101,114,73,110,102,111,80,49,54,98,116,77,97,110,105,102,111,108,100,82,101,115,117,108,116,69,49,51,98,116,68,117,109,109,121,82,101,115,117,108,116,0,0,0,0,90,78,50,50,98,116,66,118,104,84,114,105,97,110,103,108,101,77,101,115,104,83,104,97,112,101,49,55,112,101,114,102,111,114,109,67,111,110,118,101,120,99,97,115,116,69,80,49,56,98,116,84,114,105,97,110,103,108,101,67,97,108,108,98,97,99,107,82,75,57,98,116,86,101,99,116,111,114,51,83,52,95,83,52,95,83,52,95,69,50,49,77,121,78,111,100,101,79,118,101,114,108,97,112,67,97,108,108,98,97,99,107,0,0,0,0,0,0,0,0,90,78,50,50,98,116,66,118,104,84,114,105,97,110,103,108,101,77,101,115,104,83,104,97,112,101,49,52,112,101,114,102,111,114,109,82,97,121,99,97,115,116,69,80,49,56,98,116,84,114,105,97,110,103,108,101,67,97,108,108,98,97,99,107,82,75,57,98,116,86,101,99,116,111,114,51,83,52,95,69,50,49,77,121,78,111,100,101,79,118,101,114,108,97,112,67,97,108,108,98,97,99,107,0,90,78,49,54,98,116,67,111,108,108,105,115,105,111,110,87,111,114,108,100,50,53,111,98,106,101,99,116,81,117,101,114,121,83,105,110,103,108,101,73,110,116,101,114,110,97,108,69,80,75,49,51,98,116,67,111,110,118,101,120,83,104,97,112,101,82,75,49,49,98,116,84,114,97,110,115,102,111,114,109,83,53,95,80,75,50,52,98,116,67,111,108,108,105,115,105,111,110,79,98,106,101,99,116,87,114,97,112,112,101,114,82,78,83,95,50,48,67,111,110,118,101,120,82,101,115,117,108,116,67,97,108,108,98,97,99,107,69,102,69,51,50,66,114,105,100,103,101,84,114,105,97,110,103,108,101,67,111,110,118,101,120,99,97,115,116,67,97,108,108,98,97,99,107,95,48,0,0,0,0,0,0,0,0,90,78,49,54,98,116,67,111,108,108,105,115,105,111,110,87,111,114,108,100,50,53,111,98,106,101,99,116,81,117,101,114,121,83,105,110,103,108,101,73,110,116,101,114,110,97,108,69,80,75,49,51,98,116,67,111,110,118,101,120,83,104,97,112,101,82,75,49,49,98,116,84,114,97,110,115,102,111,114,109,83,53,95,80,75,50,52,98,116,67,111,108,108,105,115,105,111,110,79,98,106,101,99,116,87,114,97,112,112,101,114,82,78,83,95,50,48,67,111,110,118,101,120,82,101,115,117,108,116,67,97,108,108,98,97,99,107,69,102,69,51,50,66,114,105,100,103,101,84,114,105,97,110,103,108,101,67,111,110,118,101,120,99,97,115,116,67,97,108,108,98,97,99,107,0,0,90,78,49,54,98,116,67,111,108,108,105,115,105,111,110,87,111,114,108,100,50,53,111,98,106,101,99,116,81,117,101,114,121,83,105,110,103,108,101,73,110,116,101,114,110,97,108,69,80,75,49,51,98,116,67,111,110,118,101,120,83,104,97,112,101,82,75,49,49,98,116,84,114,97,110,115,102,111,114,109,83,53,95,80,75,50,52,98,116,67,111,108,108,105,115,105,111,110,79,98,106,101,99,116,87,114,97,112,112,101,114,82,78,83,95,50,48,67,111,110,118,101,120,82,101,115,117,108,116,67,97,108,108,98,97,99,107,69,102,69,49,52,76,111,99,97,108,73,110,102,111,65,100,100,101,114,95,49,0,0,90,78,49,54,98,116,67,111,108,108,105,115,105,111,110,87,111,114,108,100,50,49,114,97,121,84,101,115,116,83,105,110,103,108,101,73,110,116,101,114,110,97,108,69,82,75,49,49,98,116,84,114,97,110,115,102,111,114,109,83,50,95,80,75,50,52,98,116,67,111,108,108,105,115,105,111,110,79,98,106,101,99,116,87,114,97,112,112,101,114,82,78,83,95,49,55,82,97,121,82,101,115,117,108,116,67,97,108,108,98,97,99,107,69,69,57,82,97,121,84,101,115,116,101,114,95,49,0,90,78,49,54,98,116,67,111,108,108,105,115,105,111,110,87,111,114,108,100,50,49,114,97,121,84,101,115,116,83,105,110,103,108,101,73,110,116,101,114,110,97,108,69,82,75,49,49,98,116,84,114,97,110,115,102,111,114,109,83,50,95,80,75,50,52,98,116,67,111,108,108,105,115,105,111,110,79,98,106,101,99,116,87,114,97,112,112,101,114,82,78,83,95,49,55,82,97,121,82,101,115,117,108,116,67,97,108,108,98,97,99,107,69,69,50,57,66,114,105,100,103,101,84,114,105,97,110,103,108,101,82,97,121,99,97,115,116,67,97,108,108,98,97,99,107,95,48,0,0,0,0,90,78,49,54,98,116,67,111,108,108,105,115,105,111,110,87,111,114,108,100,50,49,114,97,121,84,101,115,116,83,105,110,103,108,101,73,110,116,101,114,110,97,108,69,82,75,49,49,98,116,84,114,97,110,115,102,111,114,109,83,50,95,80,75,50,52,98,116,67,111,108,108,105,115,105,111,110,79,98,106,101,99,116,87,114,97,112,112,101,114,82,78,83,95,49,55,82,97,121,82,101,115,117,108,116,67,97,108,108,98,97,99,107,69,69,50,57,66,114,105,100,103,101,84,114,105,97,110,103,108,101,82,97,121,99,97,115,116,67,97,108,108,98,97,99,107,0,0,0,0,0,0,90,78,49,54,98,116,67,111,108,108,105,115,105,111,110,87,111,114,108,100,50,49,114,97,121,84,101,115,116,83,105,110,103,108,101,73,110,116,101,114,110,97,108,69,82,75,49,49,98,116,84,114,97,110,115,102,111,114,109,83,50,95,80,75,50,52,98,116,67,111,108,108,105,115,105,111,110,79,98,106,101,99,116,87,114,97,112,112,101,114,82,78,83,95,49,55,82,97,121,82,101,115,117,108,116,67,97,108,108,98,97,99,107,69,69,49,53,76,111,99,97,108,73,110,102,111,65,100,100,101,114,50,0,0,0,0,90,78,49,52,98,116,79,112,116,105,109,105,122,101,100,66,118,104,53,98,117,105,108,100,69,80,50,51,98,116,83,116,114,105,100,105,110,103,77,101,115,104,73,110,116,101,114,102,97,99,101,98,82,75,57,98,116,86,101,99,116,111,114,51,83,52,95,69,50,57,81,117,97,110,116,105,122,101,100,78,111,100,101,84,114,105,97,110,103,108,101,67,97,108,108,98,97,99,107,0,0,0,0,0,90,78,49,52,98,116,79,112,116,105,109,105,122,101,100,66,118,104,53,98,117,105,108,100,69,80,50,51,98,116,83,116,114,105,100,105,110,103,77,101,115,104,73,110,116,101,114,102,97,99,101,98,82,75,57,98,116,86,101,99,116,111,114,51,83,52,95,69,50,48,78,111,100,101,84,114,105,97,110,103,108,101,67,97,108,108,98,97,99,107,95,48,0,0,0,0,83,116,57,116,121,112,101,95,105,110,102,111,0,0,0,0,83,116,57,101,120,99,101,112,116,105,111,110,0,0,0,0,83,116,57,98,97,100,95,97,108,108,111,99,0,0,0,0,83,116,56,98,97,100,95,99,97,115,116,0,0,0,0,0,83,116,49,51,114,117,110,116,105,109,101,95,101,114,114,111,114,0,0,0,0,0,0,0,83,116,49,50,108,101,110,103,116,104,95,101,114,114,111,114,0,0,0,0,0,0,0,0,83,116,49,49,108,111,103,105,99,95,101,114,114,111,114,0,78,83,116,51,95,95,49,57,116,105,109,101,95,98,97,115,101,69,0,0,0,0,0,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,112,117,116,73,119,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,112,117,116,73,99,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,103,101,116,73,119,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,103,101,116,73,99,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,78,83,116,51,95,95,49,57,98,97,115,105,99,95,105,111,115,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,57,98,97,115,105,99,95,105,111,115,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,112,117,116,73,119,69,69,0,0,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,112,117,116,73,99,69,69,0,0,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,103,101,116,73,119,69,69,0,0,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,103,101,116,73,99,69,69,0,0,0,78,83,116,51,95,95,49,56,116,105,109,101,95,112,117,116,73,119,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,0,78,83,116,51,95,95,49,56,116,105,109,101,95,112,117,116,73,99,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,0,78,83,116,51,95,95,49,56,116,105,109,101,95,103,101,116,73,119,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,0,78,83,116,51,95,95,49,56,116,105,109,101,95,103,101,116,73,99,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,0,78,83,116,51,95,95,49,56,110,117,109,112,117,110,99,116,73,119,69,69,0,0,0,0,78,83,116,51,95,95,49,56,110,117,109,112,117,110,99,116,73,99,69,69,0,0,0,0,78,83,116,51,95,95,49,56,109,101,115,115,97,103,101,115,73,119,69,69,0,0,0,0,78,83,116,51,95,95,49,56,109,101,115,115,97,103,101,115,73,99,69,69,0,0,0,0,78,83,116,51,95,95,49,56,105,111,115,95,98,97,115,101,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,56,105,111,115,95,98,97,115,101,55,102,97,105,108,117,114,101,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,55,110,117,109,95,112,117,116,73,119,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,55,110,117,109,95,112,117,116,73,99,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,55,110,117,109,95,103,101,116,73,119,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,55,110,117,109,95,103,101,116,73,99,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,55,99,111,108,108,97,116,101,73,119,69,69,0,0,0,0,0,78,83,116,51,95,95,49,55,99,111,108,108,97,116,101,73,99,69,69,0,0,0,0,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,119,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,99,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,68,115,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,0,0,0,0,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,68,105,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,0,0,0,0,0,78,83,116,51,95,95,49,54,108,111,99,97,108,101,53,102,97,99,101,116,69,0,0,0,78,83,116,51,95,95,49,54,108,111,99,97,108,101,53,95,95,105,109,112,69,0,0,0,78,83,116,51,95,95,49,53,99,116,121,112,101,73,119,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,53,99,116,121,112,101,73,99,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,50,48,95,95,116,105,109,101,95,103,101,116,95,99,95,115,116,111,114,97,103,101,73,119,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,50,48,95,95,116,105,109,101,95,103,101,116,95,99,95,115,116,111,114,97,103,101,73,99,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,57,95,95,105,111,115,116,114,101,97,109,95,99,97,116,101,103,111,114,121,69,0,0,0,78,83,116,51,95,95,49,49,56,98,97,115,105,99,95,115,116,114,105,110,103,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,78,83,95,57,97,108,108,111,99,97,116,111,114,73,99,69,69,69,69,0,0,0,0,78,83,116,51,95,95,49,49,55,95,95,119,105,100,101,110,95,102,114,111,109,95,117,116,102,56,73,76,106,51,50,69,69,69,0,0,0,0,0,0,78,83,116,51,95,95,49,49,54,95,95,110,97,114,114,111,119,95,116,111,95,117,116,102,56,73,76,106,51,50,69,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,53,98,97,115,105,99,95,115,116,114,105,110,103,98,117,102,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,78,83,95,57,97,108,108,111,99,97,116,111,114,73,99,69,69,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,53,98,97,115,105,99,95,115,116,114,101,97,109,98,117,102,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,53,98,97,115,105,99,95,115,116,114,101,97,109,98,117,102,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,52,101,114,114,111,114,95,99,97,116,101,103,111,114,121,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,52,98,97,115,105,99,95,105,111,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,78,83,116,51,95,95,49,49,52,95,95,115,104,97,114,101,100,95,99,111,117,110,116,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,52,95,95,110,117,109,95,112,117,116,95,98,97,115,101,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,52,95,95,110,117,109,95,103,101,116,95,98,97,115,101,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,51,109,101,115,115,97,103,101,115,95,98,97,115,101,69,0,78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,111,115,116,114,101,97,109,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,0,0,78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,111,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,0,78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,105,115,116,114,101,97,109,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,0,0,78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,105,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,0,78,83,116,51,95,95,49,49,50,115,121,115,116,101,109,95,101,114,114,111,114,69,0,0,78,83,116,51,95,95,49,49,50,99,111,100,101,99,118,116,95,98,97,115,101,69,0,0,78,83,116,51,95,95,49,49,50,95,95,100,111,95,109,101,115,115,97,103,101,69,0,0,78,83,116,51,95,95,49,49,49,95,95,115,116,100,111,117,116,98,117,102,73,119,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,49,95,95,115,116,100,111,117,116,98,117,102,73,99,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,112,117,116,73,119,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,112,117,116,73,99,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,103,101,116,73,119,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,103,101,116,73,99,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,119,76,98,49])
.concat([69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,119,76,98,48,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,99,76,98,49,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,99,76,98,48,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,95,98,97,115,101,69,0,0,0,0,78,83,116,51,95,95,49,49,48,99,116,121,112,101,95,98,97,115,101,69,0,0,0,0,78,83,116,51,95,95,49,49,48,95,95,116,105,109,101,95,112,117,116,69,0,0,0,0,78,83,116,51,95,95,49,49,48,95,95,115,116,100,105,110,98,117,102,73,119,69,69,0,78,83,116,51,95,95,49,49,48,95,95,115,116,100,105,110,98,117,102,73,99,69,69,0,78,54,98,116,68,98,118,116,56,73,67,111,108,108,105,100,101,69,0,0,0,0,0,0,78,51,54,98,116,68,105,115,99,114,101,116,101,67,111,108,108,105,115,105,111,110,68,101,116,101,99,116,111,114,73,110,116,101,114,102,97,99,101,54,82,101,115,117,108,116,69,0,78,51,52,98,116,83,112,104,101,114,101,84,114,105,97,110,103,108,101,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,49,48,67,114,101,97,116,101,70,117,110,99,69,0,0,0,0,0,0,78,51,51,98,116,67,111,110,118,101,120,67,111,110,99,97,118,101,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,49,55,83,119,97,112,112,101,100,67,114,101,97,116,101,70,117,110,99,69,0,0,0,0,0,0,0,0,78,51,51,98,116,67,111,110,118,101,120,67,111,110,99,97,118,101,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,49,48,67,114,101,97,116,101,70,117,110,99,69,0,0,0,0,0,0,0,78,51,50,98,116,83,112,104,101,114,101,83,112,104,101,114,101,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,49,48,67,114,101,97,116,101,70,117,110,99,69,0,0,0,0,0,0,0,0,78,51,49,98,116,67,111,110,118,101,120,80,108,97,110,101,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,49,48,67,114,101,97,116,101,70,117,110,99,69,0,78,50,56,98,116,67,111,109,112,111,117,110,100,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,49,55,83,119,97,112,112,101,100,67,114,101,97,116,101,70,117,110,99,69,0,0,0,0,0,78,50,56,98,116,67,111,109,112,111,117,110,100,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,49,48,67,114,101,97,116,101,70,117,110,99,69,0,0,0,0,78,50,54,98,116,66,111,120,66,111,120,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,49,48,67,114,101,97,116,101,70,117,110,99,69,0,0,0,0,0,0,78,50,53,98,116,83,105,109,117,108,97,116,105,111,110,73,115,108,97,110,100,77,97,110,97,103,101,114,49,52,73,115,108,97,110,100,67,97,108,108,98,97,99,107,69,0,0,0,78,50,51,98,116,67,111,110,118,101,120,67,111,110,118,101,120,65,108,103,111,114,105,116,104,109,49,48,67,114,101,97,116,101,70,117,110,99,69,0,78,49,54,98,116,69,109,112,116,121,65,108,103,111,114,105,116,104,109,49,48,67,114,101,97,116,101,70,117,110,99,69,0,0,0,0,0,0,0,0,78,49,54,98,116,67,111,108,108,105,115,105,111,110,87,111,114,108,100,50,55,67,108,111,115,101,115,116,67,111,110,118,101,120,82,101,115,117,108,116,67,97,108,108,98,97,99,107,69,0,0,0,0,0,0,0,78,49,54,98,116,67,111,108,108,105,115,105,111,110,87,111,114,108,100,50,52,67,108,111,115,101,115,116,82,97,121,82,101,115,117,108,116,67,97,108,108,98,97,99,107,69,0,0,78,49,54,98,116,67,111,108,108,105,115,105,111,110,87,111,114,108,100,50,49,67,111,110,116,97,99,116,82,101,115,117,108,116,67,97,108,108,98,97,99,107,69,0,0,0,0,0,78,49,54,98,116,67,111,108,108,105,115,105,111,110,87,111,114,108,100,50,48,67,111,110,118,101,120,82,101,115,117,108,116,67,97,108,108,98,97,99,107,69,0,0,0,0,0,0,78,49,54,98,116,67,111,108,108,105,115,105,111,110,87,111,114,108,100,49,55,82,97,121,82,101,115,117,108,116,67,97,108,108,98,97,99,107,69,0,78,49,50,98,116,67,111,110,118,101,120,67,97,115,116,49,48,67,97,115,116,82,101,115,117,108,116,69,0,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,50,49,95,95,118,109,105,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,50,48,95,95,115,105,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,55,95,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,54,95,95,115,104,105,109,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,0,0,0,0,57,83,107,97,116,101,80,97,114,107,0,0,0,0,0,0,55,67,83,111,117,114,99,101,0,0,0,0,0,0,0,0,54,71,76,86,105,101,119,0,53,87,111,114,108,100,0,0,53,82,105,100,101,114,0,0,53,77,111,100,101,108,0,0,52,66,105,107,101,0,0,0,51,54,98,116,68,105,115,99,114,101,116,101,67,111,108,108,105,115,105,111,110,68,101,116,101,99,116,111,114,73,110,116,101,114,102,97,99,101,0,0,51,53,98,116,83,101,113,117,101,110,116,105,97,108,73,109,112,117,108,115,101,67,111,110,115,116,114,97,105,110,116,83,111,108,118,101,114,0,0,0,51,52,98,116,83,112,104,101,114,101,84,114,105,97,110,103,108,101,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,0,0,0,0,51,52,98,116,67,108,111,115,101,115,116,78,111,116,77,101,67,111,110,118,101,120,82,101,115,117,108,116,67,97,108,108,98,97,99,107,0,0,0,0,51,51,98,116,77,105,110,107,111,119,115,107,105,80,101,110,101,116,114,97,116,105,111,110,68,101,112,116,104,83,111,108,118,101,114,0,0,0,0,0,51,51,98,116,67,111,110,118,101,120,67,111,110,99,97,118,101,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,0,0,0,0,0,51,50,98,116,83,112,104,101,114,101,83,112,104,101,114,101,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,0,0,0,0,0,0,51,49,98,116,73,110,116,101,114,110,97,108,84,114,105,97,110,103,108,101,73,110,100,101,120,67,97,108,108,98,97,99,107,0,0,0,0,0,0,0,51,49,98,116,68,101,102,97,117,108,116,67,111,108,108,105,115,105,111,110,67,111,110,102,105,103,117,114,97,116,105,111,110,0,0,0,0,0,0,0,51,49,98,116,67,111,110,118,101,120,80,108,97,110,101,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,0,0,0,0,0,0,0,51,48,98,116,71,106,107,69,112,97,80,101,110,101,116,114,97,116,105,111,110,68,101,112,116,104,83,111,108,118,101,114,0,0,0,0,0,0,0,0,51,48,98,116,67,111,110,118,101,120,80,101,110,101,116,114,97,116,105,111,110,68,101,112,116,104,83,111,108,118,101,114,0,0,0,0,0,0,0,0,51,48,98,116,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,67,114,101,97,116,101,70,117,110,99,0,0,0,0,0,0,0,0,51,48,98,116,65,99,116,105,118,97,116,105,110,103,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,0,0,0,0,0,0,0,0,50,57,98,116,71,101,110,101,114,105,99,54,68,111,102,83,112,114,105,110,103,67,111,110,115,116,114,97,105,110,116,0,50,56,98,116,84,114,105,97,110,103,108,101,67,111,110,118,101,120,99,97,115,116,67,97,108,108,98,97,99,107,0,0,50,56,98,116,72,97,115,104,101,100,79,118,101,114,108,97,112,112,105,110,103,80,97,105,114,67,97,99,104,101,0,0,50,56,98,116,67,111,109,112,111,117,110,100,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,0,0,50,55,98,116,67,111,110,116,105,110,117,111,117,115,67,111,110,118,101,120,67,111,108,108,105,115,105,111,110,0,0,0,50,55,73,110,112,108,97,99,101,83,111,108,118,101,114,73,115,108,97,110,100,67,97,108,108,98,97,99,107,0,0,0,50,54,98,116,84,114,105,97,110,103,108,101,73,110,100,101,120,86,101,114,116,101,120,65,114,114,97,121,0,0,0,0,50,54,98,116,66,111,120,66,111,120,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,0,0,0,0,50,53,98,116,84,114,105,97,110,103,108,101,82,97,121,99,97,115,116,67,97,108,108,98,97,99,107,0,0,0,0,0,50,53,98,116,83,105,109,117,108,97,116,105,111,110,73,115,108,97,110,100,77,97,110,97,103,101,114,0,0,0,0,0,50,53,98,116,79,118,101,114,108,97,112,112,105,110,103,80,97,105,114,67,97,108,108,98,97,99,107,0,0,0,0,0,50,52,98,116,80,101,114,116,117,114,98,101,100,67,111,110,116,97,99,116,82,101,115,117,108,116,0,0,0,0,0,0,50,52,98,116,67,111,110,118,101,120,84,114,105,97,110,103,108,101,67,97,108,108,98,97,99,107,0,0,0,0,0,0,50,52,98,116,67,111,108,108,105,115,105,111,110,67,111,110,102,105,103,117,114,97,116,105,111,110,0,0,0,0,0,0,50,52,98,116,66,114,111,97,100,112,104,97,115,101,65,97,98,98,67,97,108,108,98,97,99,107,0,0,0,0,0,0,50,51,98,116,83,116,114,105,100,105,110,103,77,101,115,104,73,110,116,101,114,102,97,99,101,0,0,0,0,0,0,0,50,51,98,116,80,111,108,121,104,101,100,114,97,108,67,111,110,118,101,120,83,104,97,112,101,0,0,0,0,0,0,0,50,51,98,116,80,111,105,110,116,50,80,111,105,110,116,67,111,110,115,116,114,97,105,110,116,0,0,0,0,0,0,0,50,51,98,116,71,101,110,101,114,105,99,54,68,111,102,67,111,110,115,116,114,97,105,110,116,0,0,0,0,0,0,0,50,51,98,116,68,105,115,99,114,101,116,101,68,121,110,97,109,105,99,115,87,111,114,108,100,0,0,0,0,0,0,0,50,51,98,116,67,111,110,118,101,120,67,111,110,118,101,120,65,108,103,111,114,105,116,104,109,0,0,0,0,0,0,0,50,51,98,116,67,111,108,108,105,115,105,111,110,80,97,105,114,67,97,108,108,98,97,99,107,0,0,0,0,0,0,0,50,51,98,116,66,114,111,97,100,112,104,97,115,101,82,97,121,67,97,108,108,98,97,99,107,0,0,0,0,0,0,0,50,51,98,116,66,114,105,100,103,101,100,77,97,110,105,102,111,108,100,82,101,115,117,108,116,0,0,0,0,0,0,0,50,51,77,121,67,111,110,116,97,99,116,82,101,115,117,108,116,67,97,108,108,98,97,99,107,0,0,0,0,0,0,0,50,50,98,116,83,117,98,115,105,109,112,108,101,120,67,111,110,118,101,120,67,97,115,116,0,0,0,0,0,0,0,0,50,50,98,116,79,118,101,114,108,97,112,112,105,110,103,80,97,105,114,67,97,99,104,101,0,0,0,0,0,0,0,0,50,50,98,116,71,101,110,101,114,105,99,80,111,111,108,65,108,108,111,99,97,116,111,114,0,0,0,0,0,0,0,0,50,50,98,116,67,111,109,112,111,117,110,100,76,101,97,102,67,97,108,108,98,97,99,107,0,0,0,0,0,0,0,0,50,50,98,116,66,118,104,84,114,105,97,110,103,108,101,77,101,115,104,83,104,97,112,101,0,0,0,0,0,0,0,0,50,50,83,112,104,101,114,101,84,114,105,97,110,103,108,101,68,101,116,101,99,116,111,114,0,0,0,0,0,0,0,0,50,50,71,73,77,95,83,84,65,78,68,65,82,68,95,65,76,76,79,67,65,84,79,82,0,0,0,0,0,0,0,0,50,50,66,105,107,101,65,110,100,82,105,100,101,114,67,111,110,116,114,111,108,108,101,114,0,0,0,0,0,0,0,0,50,49,98,116,83,105,110,103,108,101,83,119,101,101,112,67,97,108,108,98,97,99,107,0,50,49,98,116,78,111,100,101,79,118,101,114,108,97,112,67,97,108,108,98,97,99,107,0,50,49,98,116,67,111,110,118,101,120,73,110,116,101,114,110,97,108,83,104,97,112,101,0,50,49,98,116,67,111,110,101,84,119,105,115,116,67,111,110,115,116,114,97,105,110,116,0,50,49,98,116,67,111,108,108,105,115,105,111,110,68,105,115,112,97,116,99,104,101,114,0,50,49,98,116,66,114,111,97,100,112,104,97,115,101,73,110,116,101,114,102,97,99,101,0,50,49,83,117,112,112,111,114,116,86,101,114,116,101,120,67,97,108,108,98,97,99,107,0,50,48,98,116,68,101,102,97,117,108,116,77,111,116,105,111,110,83,116,97,116,101,0,0,50,48,98,116,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,0,0,50,48,98,116,65,120,105,115,83,119,101,101,112,51,73,110,116,101,114,110,97,108,73,116,69,0,0,0,0,0,0,0,50,48,66,114,111,97,100,112,104,97,115,101,65,97,98,98,84,101,115,116,101,114,0,0,49,57,98,116,84,114,105,97,110,103,108,101,77,101,115,104,83,104,97,112,101,0,0,0,49,57,98,116,83,105,110,103,108,101,82,97,121,67,97,108,108,98,97,99,107,0,0,0,49,57,66,114,111,97,100,112,104,97,115,101,82,97,121,84,101,115,116,101,114,0,0,0,49,56,98,116,84,114,105,97,110,103,108,101,67,97,108,108,98,97,99,107,0,0,0,0,49,56,98,116,68,98,118,116,84,114,101,101,67,111,108,108,105,100,101,114,0,0,0,0,49,56,98,116,67,111,110,118,101,120,80,111,108,121,104,101,100,114,111,110,0,0,0,0,49,56,98,116,67,111,110,115,116,114,97,105,110,116,83,111,108,118,101,114,0,0,0,0,49,55,98,116,84,121,112,101,100,67,111,110,115,116,114,97,105,110,116,0,0,0,0,0,49,55,98,116,79,118,101,114,108,97,112,67,97,108,108,98,97,99,107,0,0,0,0,0,49,55,98,116,72,105,110,103,101,67,111,110,115,116,114,97,105,110,116,0,0,0,0,0,49,55,98,116,71,106,107,80,97,105,114,68,101,116,101,99,116,111,114,0,0,0,0,0,49,55,98,116,67,111,108,108,105,115,105,111,110,79,98,106,101,99,116,0,0,0,0,0,49,55,68,101,98,117,103,68,114,97,119,99,97,108,108,98,97,99,107,0,0,0,0,0,49,55,67,80,86,82,84,82,101,115,111,117,114,99,101,70,105,108,101,0,0,0,0,0,49,54,98,116,80,111,105,110,116,67,111,108,108,101,99,116,111,114,0,0,0,0,0,0,49,54,98,116,77,97,110,105,102,111,108,100,82,101,115,117,108,116,0,0,0,0,0,0,49,54,98,116,69,109,112,116,121,65,108,103,111,114,105,116,104,109,0,0,0,0,0,0,49,54,98,116,68,98,118,116,66,114,111,97,100,112,104,97,115,101,0,0,0,0,0,0,49,54,98,116,67,121,108,105,110,100,101,114,83,104,97,112,101,88,0,0,0,0,0,0,49,54,98,116,67,111,108,108,105,115,105,111,110,87,111,114,108,100,0,0,0,0,0,0,49,54,98,116,67,111,108,108,105,115,105,111,110,83,104,97,112,101,0,0,0,0,0,0,49,54,98,116,66,111,120,66,111,120,68,101,116,101,99,116,111,114,0,0,0,0,0,0,49,53,98,116,84,114,105,97,110,103,108,101,83,104,97,112,101,0,0,0,0,0,0,0,49,53,98,116,78,117,108,108,80,97,105,114,67,97,99,104,101,0,0,0,0,0,0,0,49,53,98,116,71,106,107,67,111,110,118,101,120,67,97,115,116,0,0,0,0,0,0,0,49,53,98,116,68,121,110,97,109,105,99,115,87,111,114,108,100,0,0,0,0,0,0,0,49,53,98,116,67,121,108,105,110,100,101,114,83,104,97,112,101,0,0,0,0,0,0,0,49,53,98,116,67,97,112,115,117,108,101,83,104,97,112,101,88,0,0,0,0,0,0,0,49,53,66,117,108,108,101,116,68,101,98,117,103,68,114,97,119,0,0,0,0,0,0,0,49,52,98,116,81,117,97,110,116,105,122,101,100,66,118,104,0,0,0,0,0,0,0,0,49,52,98,116,79,112,116,105,109,105,122,101,100,66,118,104,0,0,0,0,0,0,0,0,49,52,98,116,67,111,110,99,97,118,101,83,104,97,112,101,0,0,0,0,0,0,0,0,49,52,98,116,67,97,112,115,117,108,101,83,104,97,112,101,0,0,0,0,0,0,0,0,49,52,74,111,121,112,97,100,80,114,111,116,111,99,111,108,0,0,0,0,0,0,0,0,49,51,98,116,84,121,112,101,100,79,98,106,101,99,116,0,49,51,98,116,83,112,104,101,114,101,83,104,97,112,101,0,49,51,98,116,77,111,116,105,111,110,83,116,97,116,101,0,49,51,98,116,67,111,110,118,101,120,83,104,97,112,101,0,49,51,67,83,111,117,114,99,101,83,116,114,101,97,109,0,49,50,98,116,73,68,101,98,117,103,68,114,97,119,0,0,49,50,98,116,68,105,115,112,97,116,99,104,101,114,0,0,49,50,98,116,67,111,110,118,101,120,67,97,115,116,0,0,49,50,98,116,65,120,105,115,83,119,101,101,112,51,0,0,49,49,98,116,82,105,103,105,100,66,111,100,121,0,0,0,49,49,67,80,86,82,84,83,116,114,105,110,103,0,0,0,49,48,98,116,66,111,120,83,104,97,112,101,0,0,0,0,0,0,0,0,240,138,0,0,64,188,0,0,0,0,0,0,0,0,0,0,96,139,0,0,248,185,0,0,0,0,0,0,0,0,0,0,200,139,0,0,8,184,0,0,0,0,0,0,0,0,0,0,136,140,0,0,248,188,0,0,0,0,0,0,0,0,0,0,40,141,0,0,56,189,0,0,0,0,0,0,0,0,0,0,176,141,0,0,56,189,0,0,0,0,0,0,0,0,0,0,32,142,0,0,8,184,0,0,0,0,0,0,0,0,0,0,176,142,0,0,8,184,0,0,0,0,0,0,0,0,0,0,56,143,0,0,64,188,0,0,0,0,0,0,0,0,0,0,176,143,0,0,64,188,0,0,0,0,0,0,0,0,0,0,24,144,0,0,96,186,0,0,0,0,0,0,0,0,0,0,208,144,0,0,96,186,0,0,0,0,0,0,0,0,0,0,128,145,0,0,224,184,0,0,0,0,0,0,0,0,0,0,32,146,0,0,0,184,0,0,0,0,0,0,0,0,0,0,160,146,0,0,208,186,0,0,0,0,0,0,0,0,0,0,56,147,0,0,208,186,0,0,0,0,0,0,0,0,0,0,208,147,0,0,232,184,0,0,0,0,0,0,0,0,0,0,88,148,0,0,248,185,0,0,0,0,0,0,0,0,0,0,192,148,0,0,248,185,0,0,0,0,0,0,0,0,0,0,32,149,0,0,0,0,0,0,48,149,0,0,0,0,0,0,64,149,0,0,224,177,0,0,0,0,0,0,0,0,0,0,80,149,0,0,224,177,0,0,0,0,0,0,0,0,0,0,96,149,0,0,224,177,0,0,0,0,0,0,0,0,0,0,120,149,0,0,40,178,0,0,0,0,0,0,0,0,0,0,144,149,0,0,224,177,0,0,0,0,0,0,0,0,0,0,160,149,0,0,200,119,0,0,184,149,0,0,0,0,0,0,2,0,0,0,104,181,0,0,2,0,0,0,40,183,0,0,0,0,0,0,200,119,0,0,0,150,0,0,0,0,0,0,2,0,0,0,104,181,0,0,2,0,0,0,48,183,0,0,0,0,0,0,200,119,0,0,72,150,0,0,0,0,0,0,2,0,0,0,104,181,0,0,2,0,0,0,56,183,0,0,0,0,0,0,200,119,0,0,144,150,0,0,0,0,0,0,2,0,0,0,104,181,0,0,2,0,0,0,64,183,0,0,0,0,0,0,0,0,0,0,216,150,0,0,48,180,0,0,0,0,0,0,0,0,0,0,8,151,0,0,48,180,0,0,0,0,0,0,200,119,0,0,56,151,0,0,0,0,0,0,1,0,0,0,104,182,0,0,0,0,0,0,200,119,0,0,80,151,0,0,0,0,0,0,1,0,0,0,104,182,0,0,0,0,0,0,200,119,0,0,104,151,0,0,0,0,0,0,1,0,0,0,112,182,0,0,0,0,0,0,200,119,0,0,128,151,0,0,0,0,0,0,1,0,0,0,112,182,0,0,0,0,0,0,200,119,0,0,152,151,0,0,0,0,0,0,2,0,0,0,104,181,0,0,2,0,0,0,216,183,0,0,0,8,0,0,200,119,0,0,224,151,0,0,0,0,0,0,2,0,0,0,104,181,0,0,2,0,0,0,216,183,0,0,0,8,0,0,200,119,0,0,40,152,0,0,0,0,0,0,3,0,0,0,104,181,0,0,2,0,0,0,56,178,0,0,2,0,0,0,200,181,0,0,0,8,0,0,200,119,0,0,112,152,0,0,0,0,0,0,3,0,0,0,104,181,0,0,2,0,0,0,56,178,0,0,2,0,0,0,208,181,0,0,0,8,0,0,0,0,0,0,184,152,0,0,104,181,0,0,0,0,0,0,0,0,0,0,208,152,0,0,104,181,0,0,0,0,0,0,200,119,0,0,232,152,0,0,0,0,0,0,2,0,0,0,104,181,0,0,2,0,0,0,120,182,0,0,2,0,0,0,200,119,0,0,0,153,0,0,0,0,0,0,2,0,0,0,104,181,0,0,2,0,0,0,120,182,0,0,2,0,0,0,0,0,0,0,24,153,0,0,0,0,0,0,48,153,0,0,224,182,0,0,0,0,0,0,200,119,0,0,80,153,0,0,0,0,0,0,2,0,0,0,104,181,0,0,2,0,0,0,224,178,0,0,0,0,0,0,200,119,0,0,152,153,0,0,0,0,0,0,2,0,0,0,104,181,0,0,2,0,0,0,248,178,0,0,0,0,0,0,200,119,0,0,224,153,0,0,0,0,0,0,2,0,0,0,104,181,0,0,2,0,0,0,16,179,0,0,0,0,0,0,200,119,0,0,40,154,0,0,0,0,0,0,2,0,0,0,104,181,0,0,2,0,0,0,40,179,0,0,0,0,0,0,0,0,0,0,112,154,0,0,104,181,0,0,0,0,0,0,0,0,0,0,136,154,0,0,104,181,0,0,0,0,0,0,200,119,0,0,160,154,0,0,0,0,0,0,2,0,0,0,104,181,0,0,2,0,0,0,240,182,0,0,2,0,0,0,200,119,0,0,200,154,0,0,0,0,0,0,2,0,0,0,104,181,0,0,2,0,0,0,240,182,0,0,2,0,0,0,200,119,0,0,240,154,0,0,0,0,0,0,2,0,0,0,104,181,0,0,2,0,0,0,240,182,0,0,2,0,0,0,200,119,0,0,24,155,0,0,0,0,0,0,2,0,0,0,104,181,0,0,2,0,0,0,240,182,0,0,2,0,0,0,0,0,0,0,64,155,0,0,96,182,0,0,0,0,0,0,0,0,0,0,88,155,0,0,104,181,0,0,0,0,0,0,200,119,0,0,112,155,0,0,0,0,0,0,2,0,0,0,104,181,0,0,2,0,0,0,208,183,0,0,2,0,0,0,200,119,0,0,136,155,0,0,0,0,0,0,2,0,0,0,104,181,0,0,2,0,0,0,208,183,0,0,2,0,0,0,0,0,0,0,160,155,0,0,0,0,0,0,200,155,0,0,0,0,0,0,240,155,0,0,248,182,0,0,0,0,0,0,0,0,0,0,16,156,0,0,64,182,0,0,0,0,0,0,0,0,0,0,88,156,0,0,72,181,0,0,0,0,0,0,0,0,0,0,128,156,0,0,72,181,0,0,0,0,0,0,0,0,0,0,168,156,0,0,48,182,0,0,0,0,0,0,0,0,0,0,240,156,0,0,0,0,0,0,40,157,0,0,0,0,0,0,96,157,0,0,200,119,0,0,128,157,0,0,3,0,0,0,2,0,0,0,200,182,0,0,2,0,0,0,152,182,0,0,2,8,0,0,0,0,0,0,176,157,0,0,0,0,0,0,208,157,0,0,0,0,0,0,240,157,0,0,0,0,0,0,16,158,0,0,200,119,0,0,40,158,0,0,0,0,0,0,1,0,0,0,192,178,0,0,3,244,255,255,200,119,0,0,88,158,0,0,0,0,0,0,1,0,0,0,208,178,0,0,3,244,255,255,200,119,0,0,136,158,0,0,0,0,0,0,1,0,0,0,192,178,0,0,3,244,255,255,200,119,0,0,184,158,0,0,0,0,0,0,1,0,0,0,208,178,0,0,3,244,255,255,0,0,0,0,232,158,0,0,8,178,0,0,0,0,0,0,0,0,0,0,0,159,0,0,0,0,0,0,24,159,0,0,56,182,0,0,0,0,0,0,0,0,0,0,48,159,0,0,40,182,0,0,0,0,0,0,0,0,0,0,80,159,0,0,48,182,0,0,0,0,0,0,0,0,0,0,112,159,0,0,0,0,0,0,144,159,0,0,0,0,0,0,176,159,0,0,0,0,0,0,208,159,0,0,200,119,0,0,240,159,0,0,0,0,0,0,2,0,0,0,104,181,0,0,2,0,0,0,200,183,0,0,2,0,0,0,200,119,0,0,16,160,0,0,0,0,0,0,2,0,0,0,104,181,0,0,2,0,0,0,200,183,0,0,2,0,0,0,200,119,0,0,48,160,0,0,0,0,0,0,2,0,0,0,104,181,0,0,2,0,0,0,200,183,0,0,2,0,0,0,200,119,0,0,80,160,0,0,0,0,0,0,2,0,0,0,104,181,0,0,2,0,0,0,200,183,0,0,2,0,0,0,0,0,0,0,112,160,0,0,0,0,0,0,136,160,0,0,0,0,0,0,160,160,0,0,0,0,0,0,184,160,0,0,40,182,0,0,0,0,0,0,0,0,0,0,208,160,0,0,48,182,0,0,0,0,0,0,0,0,0,0,232,160,0,0,0,0,0,0,0,161,0,0,0,0,0,0,48,161,0,0,56,186,0,0,0,0,0,0,0,0,0,0,104,161,0,0,56,186,0,0,0,0,0,0,0,0,0,0,168,161,0,0,56,186,0,0,0,0,0,0,0,0,0,0,224,161,0,0,56,186,0,0,0,0,0,0,0,0,0,0,24,162,0,0,56,186,0,0,0,0,0,0,0,0,0,0,72,162,0,0,56,186,0,0,0,0,0,0,0,0,0,0,128,162,0,0,56,186,0,0,0,0,0,0,0,0,0,0,176,162,0,0,56,186,0,0,0,0,0,0,0,0,0,0,224,162,0,0,0,0,0,0,16,163,0,0,56,186,0,0,0,0,0,0,0,0,0,0,56,163,0,0,56,186,0,0,0,0,0,0,0,0,0,0,96,163,0,0,224,184,0,0,0,0,0,0,0,0,0,0,152,163,0,0,232,184,0,0,0,0,0,0,0,0,0,0,200,163,0,0,0,0,0,0,248,163,0,0,0,0,0,0,40,164,0,0,0,0,0,0,80,164,0,0,0,0,0,0,112,164,0,0,24,185,0,0,0,0,0,0,0,0,0,0,152,164,0,0,24,185,0,0,0,0,0,0,0,0,0,0,192,164,0,0,40,185,0,0,0,0,0,0,0,0,0,0,232,164,0,0,216,177,0,0,0,0,0,0,0,0,0,0,16,165,0,0,120,185,0,0,0,0,0,0,0,0,0,0,32,165,0,0,0,0,0,0,48,165,0,0,0,0,0,0,56,165,0,0,168,190,0,0,0,0,0,0,0,0,0,0,64,165,0,0,120,185,0,0,0,0,0,0,0,0,0,0,72,165,0,0,0,0,0,0,80,165,0,0,120,185,0,0,0,0,0,0,0,0,0,0,88,165,0,0,0,0,0,0,128,165,0,0,24,189,0,0,0,0,0,0,0,0,0,0,168,165,0,0,64,186,0,0,0,0,0,0,0,0,0,0,208,165,0,0,184,184,0,0,0,0,0,0,0,0,0,0,248,165,0,0,48,186,0,0,0,0,0,0,0,0,0,0,32,166,0,0,64,186,0,0,0,0,0,0,0,0,0,0,72,166,0,0,64,186,0,0,0,0,0,0,0,0,0,0,112,166,0,0,0,0,0,0,152,166,0,0,16,187,0,0,0,0,0,0,0,0,0,0,192,166,0,0,160,188,0,0,0,0,0,0,0,0,0,0,232,166,0,0,48,186,0,0,0,0,0,0,0,0,0,0,16,167,0,0,0,0,0,0,56,167,0,0,0,0,0,0,96,167,0,0,160,188,0,0,0,0,0,0,0,0,0,0,136,167,0,0,72,187,0,0,0,0,0,0,0,0,0,0,168,167,0,0,248,188,0,0,0,0,0,0,0,0,0,0,200,167,0,0,200,187,0,0,0,0,0,0,0,0,0,0,232,167,0,0,64,186,0,0,0,0,0,0,0,0,0,0,8,168,0,0,0,191,0,0,0,0,0,0,0,0,0,0,40,168,0,0,144,184,0,0,0,0,0,0,0,0,0,0,72,168,0,0,32,187,0,0,0,0,0,0,0,0,0,0,104,168,0,0,64,186,0,0,0,0,0,0,0,0,0,0,136,168,0,0,248,188,0,0,0,0,0,0,0,0,0,0,168,168,0,0,0,0,0,0,200,168,0,0,0,0,0,0,232,168,0,0,160,189,0,0,0,0,0,0,0,0,0,0,8,169,0,0,248,188,0,0,0,0,0,0,0,0,0,0,40,169,0,0,0,0,0,0,72,169,0,0,0,0,0,0,104,169,0,0,0,0,0,0,136,169,0,0,72,188,0,0,0,0,0,0,0,0,0,0,168,169,0,0,32,189,0,0,0,0,0,0,0,0,0,0,200,169,0,0,32,189,0,0,0,0,0,0,0,0,0,0,232,169,0,0,48,190,0,0,0,0,0,0,0,0,0,0,8,170,0,0,64,186,0,0,0,0,0,0,0,0,0,0,40,170,0,0,56,189,0,0,0,0,0,0,0,0,0,0,72,170,0,0,24,187,0,0,0,0,0,0,0,0,0,0,104,170,0,0,160,189,0,0,0,0,0,0,0,0,0,0,136,170,0,0,216,184,0,0,0,0,0,0,0,0,0,0,168,170,0,0,0,191,0,0,0,0,0,0,0,0,0,0,200,170,0,0,232,186,0,0,0,0,0,0,0,0,0,0,232,170,0,0,0,0,0,0,8,171,0,0,0,184,0,0,0,0,0,0,0,0,0,0,40,171,0,0,200,188,0,0,0,0,0,0,0,0,0,0,72,171,0,0,144,185,0,0,0,0,0,0,0,0,0,0,104,171,0,0,216,187,0,0,0,0,0,0,0,0,0,0,136,171,0,0,120,185,0,0,0,0,0,0,0,0,0,0,168,171,0,0,136,187,0,0,0,0,0,0,0,0,0,0,192,171,0,0,0,0,0,0,216,171,0,0,208,190,0,0,0,0,0,0,0,0,0,0,240,171,0,0,32,189,0,0,0,0,0,0,0,0,0,0,8,172,0,0,248,190,0,0,0,0,0,0,0,0,0,0,32,172,0,0,0,0,0,0,56,172,0,0,248,188,0,0,0,0,0,0,0,0,0,0,80,172,0,0,200,190,0,0,0,0,0,0,0,0,0,0,104,172,0,0,0,0,0,0,128,172,0,0,120,188,0,0,0,0,0,0,0,0,0,0,160,172,0,0,0,184,0,0,0,0,0,0,0,0,0,0,184,172,0,0,136,190,0,0,0,0,0,0,0,0,0,0,208,172,0,0,136,187,0,0,0,0,0,0,0,0,0,0,232,172,0,0,0,184,0,0,0,0,0,0,0,0,0,0,0,173,0,0,0,0,0,0,24,173,0,0,0,184,0,0,0,0,0,0,0,0,0,0,48,173,0,0,0,0,0,0,72,173,0,0,200,119,0,0,96,173,0,0,0,0,0,0,1,0,0,0,176,190,0,0,2,4,0,0,0,0,0,0,120,173,0,0,0,0,0,0,144,173,0,0,32,189,0,0,0,0,0,0,0,0,0,0,168,173,0,0,144,185,0,0,0,0,0,0,0,0,0,0,192,173,0,0,200,119,0,0,216,173,0,0,0,0,0,0,2,0,0,0,248,188,0,0,2,0,0,0,248,185,0,0,2,4,0,0,0,0,0,0,240,173,0,0,0,0,0,0,8,174,0,0,8,184,0,0,0,0,0,0,0,0,0,0,32,174,0,0,8,184,0,0,0,0,0,0,0,0,0,0,56,174,0,0,160,188,0,0,0,0,0,0,0,0,0,0,80,174,0,0,120,188,0,0,0,0,0,0,0,0,0,0,104,174,0,0,64,190,0,0,0,0,0,0,0,0,0,0,128,174,0,0,0,0,0,0,152,174,0,0,0,0,0,0,176,174,0,0,144,185,0,0,0,0,0,0,0,0,0,0,200,174,0,0,40,187,0,0,0,0,0,0,0,0,0,0,224,174,0,0,200,187,0,0,0,0,0,0,0,0,0,0,248,174,0,0,0,191,0,0,0,0,0,0,0,0,0,0,16,175,0,0,224,189,0,0,0,0,0,0,0,0,0,0,40,175,0,0,72,188,0,0,0,0,0,0,0,0,0,0,64,175,0,0,152,190,0,0,0,0,0,0,0,0,0,0,88,175,0,0,240,190,0,0,0,0,0,0,0,0,0,0,112,175,0,0,0,0,0,0,136,175,0,0,112,190,0,0,0,0,0,0,0,0,0,0,160,175,0,0,232,189,0,0,0,0,0,0,0,0,0,0,184,175,0,0,72,188,0,0,0,0,0,0,0,0,0,0,208,175,0,0,0,0,0,0,232,175,0,0,0,0,0,0,248,175,0,0,72,188,0,0,0,0,0,0,0,0,0,0,8,176,0,0,0,0,0,0,24,176,0,0,232,189,0,0,0,0,0,0,0,0,0,0,40,176,0,0,72,185,0,0,0,0,0,0,0,0,0,0,56,176,0,0,0,0,0,0,72,176,0,0,0,0,0,0,88,176,0,0,0,0,0,0,104,176,0,0,168,188,0,0,0,0,0,0,0,0,0,0,120,176,0,0,96,189,0,0,0,0,0,0,0,0,0,0,136,176,0,0,0,0,0,0,152,176,0,0,40,187,0,0,0,0,0,0,64,0,0,0,0,0,0,0,200,182,0,0,104,1,0,0,150,2,0,0,192,255,255,255,192,255,255,255,200,182,0,0,248,1,0,0,150,0,0,0,48,49,50,51,52,53,54,55,56,57,97,98,99,100,101,102,65,66,67,68,69,70,120,88,43,45,112,80,105,73,110,78,0,0,0,0,0,0,0,0,218,0,0,0,0,0,0,0,184,215,0,0,0,0,0,0,255,255,255,255,0,0,0,0,190,2,0,0,0,0,0,0,0,0,0,0,197,32,136,191,18,20,19,192,0,0,0,0,0,0,0,0,143,194,133,191,134,56,90,64,0,0,0,0,0,0,128,63,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,63,0,0,0,0,80,0,0,0,0,0,0,0,0,0,0,0,154,153,121,64,154,153,153,191,0,0,0,0,108,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,246,214,0,1,0,0,0,0,211,45,0,0,0,0])
, "i8", ALLOC_NONE, Runtime.GLOBAL_BASE)
var tempDoublePtr = Runtime.alignMemory(allocate(12, "i8", ALLOC_STATIC), 8);
assert(tempDoublePtr % 8 == 0);
function copyTempFloat(ptr) { // functions, because inlining this code increases code size too much
  HEAP8[tempDoublePtr] = HEAP8[ptr];
  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];
  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];
  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];
}
function copyTempDouble(ptr) {
  HEAP8[tempDoublePtr] = HEAP8[ptr];
  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];
  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];
  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];
  HEAP8[tempDoublePtr+4] = HEAP8[ptr+4];
  HEAP8[tempDoublePtr+5] = HEAP8[ptr+5];
  HEAP8[tempDoublePtr+6] = HEAP8[ptr+6];
  HEAP8[tempDoublePtr+7] = HEAP8[ptr+7];
}
  var ERRNO_CODES={EPERM:1,ENOENT:2,ESRCH:3,EINTR:4,EIO:5,ENXIO:6,E2BIG:7,ENOEXEC:8,EBADF:9,ECHILD:10,EAGAIN:11,EWOULDBLOCK:11,ENOMEM:12,EACCES:13,EFAULT:14,ENOTBLK:15,EBUSY:16,EEXIST:17,EXDEV:18,ENODEV:19,ENOTDIR:20,EISDIR:21,EINVAL:22,ENFILE:23,EMFILE:24,ENOTTY:25,ETXTBSY:26,EFBIG:27,ENOSPC:28,ESPIPE:29,EROFS:30,EMLINK:31,EPIPE:32,EDOM:33,ERANGE:34,ENOMSG:42,EIDRM:43,ECHRNG:44,EL2NSYNC:45,EL3HLT:46,EL3RST:47,ELNRNG:48,EUNATCH:49,ENOCSI:50,EL2HLT:51,EDEADLK:35,ENOLCK:37,EBADE:52,EBADR:53,EXFULL:54,ENOANO:55,EBADRQC:56,EBADSLT:57,EDEADLOCK:35,EBFONT:59,ENOSTR:60,ENODATA:61,ETIME:62,ENOSR:63,ENONET:64,ENOPKG:65,EREMOTE:66,ENOLINK:67,EADV:68,ESRMNT:69,ECOMM:70,EPROTO:71,EMULTIHOP:72,EDOTDOT:73,EBADMSG:74,ENOTUNIQ:76,EBADFD:77,EREMCHG:78,ELIBACC:79,ELIBBAD:80,ELIBSCN:81,ELIBMAX:82,ELIBEXEC:83,ENOSYS:38,ENOTEMPTY:39,ENAMETOOLONG:36,ELOOP:40,EOPNOTSUPP:95,EPFNOSUPPORT:96,ECONNRESET:104,ENOBUFS:105,EAFNOSUPPORT:97,EPROTOTYPE:91,ENOTSOCK:88,ENOPROTOOPT:92,ESHUTDOWN:108,ECONNREFUSED:111,EADDRINUSE:98,ECONNABORTED:103,ENETUNREACH:101,ENETDOWN:100,ETIMEDOUT:110,EHOSTDOWN:112,EHOSTUNREACH:113,EINPROGRESS:115,EALREADY:114,EDESTADDRREQ:89,EMSGSIZE:90,EPROTONOSUPPORT:93,ESOCKTNOSUPPORT:94,EADDRNOTAVAIL:99,ENETRESET:102,EISCONN:106,ENOTCONN:107,ETOOMANYREFS:109,EUSERS:87,EDQUOT:122,ESTALE:116,ENOTSUP:95,ENOMEDIUM:123,EILSEQ:84,EOVERFLOW:75,ECANCELED:125,ENOTRECOVERABLE:131,EOWNERDEAD:130,ESTRPIPE:86};
  var ERRNO_MESSAGES={0:"Success",1:"Not super-user",2:"No such file or directory",3:"No such process",4:"Interrupted system call",5:"I/O error",6:"No such device or address",7:"Arg list too long",8:"Exec format error",9:"Bad file number",10:"No children",11:"No more processes",12:"Not enough core",13:"Permission denied",14:"Bad address",15:"Block device required",16:"Mount device busy",17:"File exists",18:"Cross-device link",19:"No such device",20:"Not a directory",21:"Is a directory",22:"Invalid argument",23:"Too many open files in system",24:"Too many open files",25:"Not a typewriter",26:"Text file busy",27:"File too large",28:"No space left on device",29:"Illegal seek",30:"Read only file system",31:"Too many links",32:"Broken pipe",33:"Math arg out of domain of func",34:"Math result not representable",35:"File locking deadlock error",36:"File or path name too long",37:"No record locks available",38:"Function not implemented",39:"Directory not empty",40:"Too many symbolic links",42:"No message of desired type",43:"Identifier removed",44:"Channel number out of range",45:"Level 2 not synchronized",46:"Level 3 halted",47:"Level 3 reset",48:"Link number out of range",49:"Protocol driver not attached",50:"No CSI structure available",51:"Level 2 halted",52:"Invalid exchange",53:"Invalid request descriptor",54:"Exchange full",55:"No anode",56:"Invalid request code",57:"Invalid slot",59:"Bad font file fmt",60:"Device not a stream",61:"No data (for no delay io)",62:"Timer expired",63:"Out of streams resources",64:"Machine is not on the network",65:"Package not installed",66:"The object is remote",67:"The link has been severed",68:"Advertise error",69:"Srmount error",70:"Communication error on send",71:"Protocol error",72:"Multihop attempted",73:"Cross mount point (not really error)",74:"Trying to read unreadable message",75:"Value too large for defined data type",76:"Given log. name not unique",77:"f.d. invalid for this operation",78:"Remote address changed",79:"Can   access a needed shared lib",80:"Accessing a corrupted shared lib",81:".lib section in a.out corrupted",82:"Attempting to link in too many libs",83:"Attempting to exec a shared library",84:"Illegal byte sequence",86:"Streams pipe error",87:"Too many users",88:"Socket operation on non-socket",89:"Destination address required",90:"Message too long",91:"Protocol wrong type for socket",92:"Protocol not available",93:"Unknown protocol",94:"Socket type not supported",95:"Not supported",96:"Protocol family not supported",97:"Address family not supported by protocol family",98:"Address already in use",99:"Address not available",100:"Network interface is not configured",101:"Network is unreachable",102:"Connection reset by network",103:"Connection aborted",104:"Connection reset by peer",105:"No buffer space available",106:"Socket is already connected",107:"Socket is not connected",108:"Can't send after socket shutdown",109:"Too many references",110:"Connection timed out",111:"Connection refused",112:"Host is down",113:"Host is unreachable",114:"Socket already connected",115:"Connection already in progress",116:"Stale file handle",122:"Quota exceeded",123:"No medium (in tape drive)",125:"Operation canceled",130:"Previous owner died",131:"State not recoverable"};
  var ___errno_state=0;function ___setErrNo(value) {
      // For convenient setting and returning of errno.
      HEAP32[((___errno_state)>>2)]=value
      return value;
    }
  var PATH={splitPath:function (filename) {
        var splitPathRe = /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;
        return splitPathRe.exec(filename).slice(1);
      },normalizeArray:function (parts, allowAboveRoot) {
        // if the path tries to go above the root, `up` ends up > 0
        var up = 0;
        for (var i = parts.length - 1; i >= 0; i--) {
          var last = parts[i];
          if (last === '.') {
            parts.splice(i, 1);
          } else if (last === '..') {
            parts.splice(i, 1);
            up++;
          } else if (up) {
            parts.splice(i, 1);
            up--;
          }
        }
        // if the path is allowed to go above the root, restore leading ..s
        if (allowAboveRoot) {
          for (; up--; up) {
            parts.unshift('..');
          }
        }
        return parts;
      },normalize:function (path) {
        var isAbsolute = path.charAt(0) === '/',
            trailingSlash = path.substr(-1) === '/';
        // Normalize the path
        path = PATH.normalizeArray(path.split('/').filter(function(p) {
          return !!p;
        }), !isAbsolute).join('/');
        if (!path && !isAbsolute) {
          path = '.';
        }
        if (path && trailingSlash) {
          path += '/';
        }
        return (isAbsolute ? '/' : '') + path;
      },dirname:function (path) {
        var result = PATH.splitPath(path),
            root = result[0],
            dir = result[1];
        if (!root && !dir) {
          // No dirname whatsoever
          return '.';
        }
        if (dir) {
          // It has a dirname, strip trailing slash
          dir = dir.substr(0, dir.length - 1);
        }
        return root + dir;
      },basename:function (path) {
        // EMSCRIPTEN return '/'' for '/', not an empty string
        if (path === '/') return '/';
        var lastSlash = path.lastIndexOf('/');
        if (lastSlash === -1) return path;
        return path.substr(lastSlash+1);
      },extname:function (path) {
        return PATH.splitPath(path)[3];
      },join:function () {
        var paths = Array.prototype.slice.call(arguments, 0);
        return PATH.normalize(paths.join('/'));
      },join2:function (l, r) {
        return PATH.normalize(l + '/' + r);
      },resolve:function () {
        var resolvedPath = '',
          resolvedAbsolute = false;
        for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
          var path = (i >= 0) ? arguments[i] : FS.cwd();
          // Skip empty and invalid entries
          if (typeof path !== 'string') {
            throw new TypeError('Arguments to path.resolve must be strings');
          } else if (!path) {
            continue;
          }
          resolvedPath = path + '/' + resolvedPath;
          resolvedAbsolute = path.charAt(0) === '/';
        }
        // At this point the path should be resolved to a full absolute path, but
        // handle relative paths to be safe (might happen when process.cwd() fails)
        resolvedPath = PATH.normalizeArray(resolvedPath.split('/').filter(function(p) {
          return !!p;
        }), !resolvedAbsolute).join('/');
        return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';
      },relative:function (from, to) {
        from = PATH.resolve(from).substr(1);
        to = PATH.resolve(to).substr(1);
        function trim(arr) {
          var start = 0;
          for (; start < arr.length; start++) {
            if (arr[start] !== '') break;
          }
          var end = arr.length - 1;
          for (; end >= 0; end--) {
            if (arr[end] !== '') break;
          }
          if (start > end) return [];
          return arr.slice(start, end - start + 1);
        }
        var fromParts = trim(from.split('/'));
        var toParts = trim(to.split('/'));
        var length = Math.min(fromParts.length, toParts.length);
        var samePartsLength = length;
        for (var i = 0; i < length; i++) {
          if (fromParts[i] !== toParts[i]) {
            samePartsLength = i;
            break;
          }
        }
        var outputParts = [];
        for (var i = samePartsLength; i < fromParts.length; i++) {
          outputParts.push('..');
        }
        outputParts = outputParts.concat(toParts.slice(samePartsLength));
        return outputParts.join('/');
      }};
  var TTY={ttys:[],init:function () {
        // https://github.com/kripken/emscripten/pull/1555
        // if (ENVIRONMENT_IS_NODE) {
        //   // currently, FS.init does not distinguish if process.stdin is a file or TTY
        //   // device, it always assumes it's a TTY device. because of this, we're forcing
        //   // process.stdin to UTF8 encoding to at least make stdin reading compatible
        //   // with text files until FS.init can be refactored.
        //   process['stdin']['setEncoding']('utf8');
        // }
      },shutdown:function () {
        // https://github.com/kripken/emscripten/pull/1555
        // if (ENVIRONMENT_IS_NODE) {
        //   // inolen: any idea as to why node -e 'process.stdin.read()' wouldn't exit immediately (with process.stdin being a tty)?
        //   // isaacs: because now it's reading from the stream, you've expressed interest in it, so that read() kicks off a _read() which creates a ReadReq operation
        //   // inolen: I thought read() in that case was a synchronous operation that just grabbed some amount of buffered data if it exists?
        //   // isaacs: it is. but it also triggers a _read() call, which calls readStart() on the handle
        //   // isaacs: do process.stdin.pause() and i'd think it'd probably close the pending call
        //   process['stdin']['pause']();
        // }
      },register:function (dev, ops) {
        TTY.ttys[dev] = { input: [], output: [], ops: ops };
        FS.registerDevice(dev, TTY.stream_ops);
      },stream_ops:{open:function (stream) {
          var tty = TTY.ttys[stream.node.rdev];
          if (!tty) {
            throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
          }
          stream.tty = tty;
          stream.seekable = false;
        },close:function (stream) {
          // flush any pending line data
          if (stream.tty.output.length) {
            stream.tty.ops.put_char(stream.tty, 10);
          }
        },read:function (stream, buffer, offset, length, pos /* ignored */) {
          if (!stream.tty || !stream.tty.ops.get_char) {
            throw new FS.ErrnoError(ERRNO_CODES.ENXIO);
          }
          var bytesRead = 0;
          for (var i = 0; i < length; i++) {
            var result;
            try {
              result = stream.tty.ops.get_char(stream.tty);
            } catch (e) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
            if (result === undefined && bytesRead === 0) {
              throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
            }
            if (result === null || result === undefined) break;
            bytesRead++;
            buffer[offset+i] = result;
          }
          if (bytesRead) {
            stream.node.timestamp = Date.now();
          }
          return bytesRead;
        },write:function (stream, buffer, offset, length, pos) {
          if (!stream.tty || !stream.tty.ops.put_char) {
            throw new FS.ErrnoError(ERRNO_CODES.ENXIO);
          }
          for (var i = 0; i < length; i++) {
            try {
              stream.tty.ops.put_char(stream.tty, buffer[offset+i]);
            } catch (e) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
          }
          if (length) {
            stream.node.timestamp = Date.now();
          }
          return i;
        }},default_tty_ops:{get_char:function (tty) {
          if (!tty.input.length) {
            var result = null;
            if (ENVIRONMENT_IS_NODE) {
              result = process['stdin']['read']();
              if (!result) {
                if (process['stdin']['_readableState'] && process['stdin']['_readableState']['ended']) {
                  return null;  // EOF
                }
                return undefined;  // no data available
              }
            } else if (typeof window != 'undefined' &&
              typeof window.prompt == 'function') {
              // Browser.
              result = window.prompt('Input: ');  // returns null on cancel
              if (result !== null) {
                result += '\n';
              }
            } else if (typeof readline == 'function') {
              // Command line.
              result = readline();
              if (result !== null) {
                result += '\n';
              }
            }
            if (!result) {
              return null;
            }
            tty.input = intArrayFromString(result, true);
          }
          return tty.input.shift();
        },put_char:function (tty, val) {
          if (val === null || val === 10) {
            Module['print'](tty.output.join(''));
            tty.output = [];
          } else {
            tty.output.push(TTY.utf8.processCChar(val));
          }
        }},default_tty1_ops:{put_char:function (tty, val) {
          if (val === null || val === 10) {
            Module['printErr'](tty.output.join(''));
            tty.output = [];
          } else {
            tty.output.push(TTY.utf8.processCChar(val));
          }
        }}};
  var MEMFS={ops_table:null,CONTENT_OWNING:1,CONTENT_FLEXIBLE:2,CONTENT_FIXED:3,mount:function (mount) {
        return MEMFS.createNode(null, '/', 16384 | 0777, 0);
      },createNode:function (parent, name, mode, dev) {
        if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {
          // no supported
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (!MEMFS.ops_table) {
          MEMFS.ops_table = {
            dir: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr,
                lookup: MEMFS.node_ops.lookup,
                mknod: MEMFS.node_ops.mknod,
                mknod: MEMFS.node_ops.mknod,
                rename: MEMFS.node_ops.rename,
                unlink: MEMFS.node_ops.unlink,
                rmdir: MEMFS.node_ops.rmdir,
                readdir: MEMFS.node_ops.readdir,
                symlink: MEMFS.node_ops.symlink
              },
              stream: {
                llseek: MEMFS.stream_ops.llseek
              }
            },
            file: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr
              },
              stream: {
                llseek: MEMFS.stream_ops.llseek,
                read: MEMFS.stream_ops.read,
                write: MEMFS.stream_ops.write,
                allocate: MEMFS.stream_ops.allocate,
                mmap: MEMFS.stream_ops.mmap
              }
            },
            link: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr,
                readlink: MEMFS.node_ops.readlink
              },
              stream: {}
            },
            chrdev: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr
              },
              stream: FS.chrdev_stream_ops
            },
          };
        }
        var node = FS.createNode(parent, name, mode, dev);
        if (FS.isDir(node.mode)) {
          node.node_ops = MEMFS.ops_table.dir.node;
          node.stream_ops = MEMFS.ops_table.dir.stream;
          node.contents = {};
        } else if (FS.isFile(node.mode)) {
          node.node_ops = MEMFS.ops_table.file.node;
          node.stream_ops = MEMFS.ops_table.file.stream;
          node.contents = [];
          node.contentMode = MEMFS.CONTENT_FLEXIBLE;
        } else if (FS.isLink(node.mode)) {
          node.node_ops = MEMFS.ops_table.link.node;
          node.stream_ops = MEMFS.ops_table.link.stream;
        } else if (FS.isChrdev(node.mode)) {
          node.node_ops = MEMFS.ops_table.chrdev.node;
          node.stream_ops = MEMFS.ops_table.chrdev.stream;
        }
        node.timestamp = Date.now();
        // add the new node to the parent
        if (parent) {
          parent.contents[name] = node;
        }
        return node;
      },ensureFlexible:function (node) {
        if (node.contentMode !== MEMFS.CONTENT_FLEXIBLE) {
          var contents = node.contents;
          node.contents = Array.prototype.slice.call(contents);
          node.contentMode = MEMFS.CONTENT_FLEXIBLE;
        }
      },node_ops:{getattr:function (node) {
          var attr = {};
          // device numbers reuse inode numbers.
          attr.dev = FS.isChrdev(node.mode) ? node.id : 1;
          attr.ino = node.id;
          attr.mode = node.mode;
          attr.nlink = 1;
          attr.uid = 0;
          attr.gid = 0;
          attr.rdev = node.rdev;
          if (FS.isDir(node.mode)) {
            attr.size = 4096;
          } else if (FS.isFile(node.mode)) {
            attr.size = node.contents.length;
          } else if (FS.isLink(node.mode)) {
            attr.size = node.link.length;
          } else {
            attr.size = 0;
          }
          attr.atime = new Date(node.timestamp);
          attr.mtime = new Date(node.timestamp);
          attr.ctime = new Date(node.timestamp);
          // NOTE: In our implementation, st_blocks = Math.ceil(st_size/st_blksize),
          //       but this is not required by the standard.
          attr.blksize = 4096;
          attr.blocks = Math.ceil(attr.size / attr.blksize);
          return attr;
        },setattr:function (node, attr) {
          if (attr.mode !== undefined) {
            node.mode = attr.mode;
          }
          if (attr.timestamp !== undefined) {
            node.timestamp = attr.timestamp;
          }
          if (attr.size !== undefined) {
            MEMFS.ensureFlexible(node);
            var contents = node.contents;
            if (attr.size < contents.length) contents.length = attr.size;
            else while (attr.size > contents.length) contents.push(0);
          }
        },lookup:function (parent, name) {
          throw FS.genericErrors[ERRNO_CODES.ENOENT];
        },mknod:function (parent, name, mode, dev) {
          return MEMFS.createNode(parent, name, mode, dev);
        },rename:function (old_node, new_dir, new_name) {
          // if we're overwriting a directory at new_name, make sure it's empty.
          if (FS.isDir(old_node.mode)) {
            var new_node;
            try {
              new_node = FS.lookupNode(new_dir, new_name);
            } catch (e) {
            }
            if (new_node) {
              for (var i in new_node.contents) {
                throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
              }
            }
          }
          // do the internal rewiring
          delete old_node.parent.contents[old_node.name];
          old_node.name = new_name;
          new_dir.contents[new_name] = old_node;
          old_node.parent = new_dir;
        },unlink:function (parent, name) {
          delete parent.contents[name];
        },rmdir:function (parent, name) {
          var node = FS.lookupNode(parent, name);
          for (var i in node.contents) {
            throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
          }
          delete parent.contents[name];
        },readdir:function (node) {
          var entries = ['.', '..']
          for (var key in node.contents) {
            if (!node.contents.hasOwnProperty(key)) {
              continue;
            }
            entries.push(key);
          }
          return entries;
        },symlink:function (parent, newname, oldpath) {
          var node = MEMFS.createNode(parent, newname, 0777 | 40960, 0);
          node.link = oldpath;
          return node;
        },readlink:function (node) {
          if (!FS.isLink(node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          return node.link;
        }},stream_ops:{read:function (stream, buffer, offset, length, position) {
          var contents = stream.node.contents;
          if (position >= contents.length)
            return 0;
          var size = Math.min(contents.length - position, length);
          assert(size >= 0);
          if (size > 8 && contents.subarray) { // non-trivial, and typed array
            buffer.set(contents.subarray(position, position + size), offset);
          } else
          {
            for (var i = 0; i < size; i++) {
              buffer[offset + i] = contents[position + i];
            }
          }
          return size;
        },write:function (stream, buffer, offset, length, position, canOwn) {
          var node = stream.node;
          node.timestamp = Date.now();
          var contents = node.contents;
          if (length && contents.length === 0 && position === 0 && buffer.subarray) {
            // just replace it with the new data
            if (canOwn && offset === 0) {
              node.contents = buffer; // this could be a subarray of Emscripten HEAP, or allocated from some other source.
              node.contentMode = (buffer.buffer === HEAP8.buffer) ? MEMFS.CONTENT_OWNING : MEMFS.CONTENT_FIXED;
            } else {
              node.contents = new Uint8Array(buffer.subarray(offset, offset+length));
              node.contentMode = MEMFS.CONTENT_FIXED;
            }
            return length;
          }
          MEMFS.ensureFlexible(node);
          var contents = node.contents;
          while (contents.length < position) contents.push(0);
          for (var i = 0; i < length; i++) {
            contents[position + i] = buffer[offset + i];
          }
          return length;
        },llseek:function (stream, offset, whence) {
          var position = offset;
          if (whence === 1) {  // SEEK_CUR.
            position += stream.position;
          } else if (whence === 2) {  // SEEK_END.
            if (FS.isFile(stream.node.mode)) {
              position += stream.node.contents.length;
            }
          }
          if (position < 0) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          stream.ungotten = [];
          stream.position = position;
          return position;
        },allocate:function (stream, offset, length) {
          MEMFS.ensureFlexible(stream.node);
          var contents = stream.node.contents;
          var limit = offset + length;
          while (limit > contents.length) contents.push(0);
        },mmap:function (stream, buffer, offset, length, position, prot, flags) {
          if (!FS.isFile(stream.node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
          }
          var ptr;
          var allocated;
          var contents = stream.node.contents;
          // Only make a new copy when MAP_PRIVATE is specified.
          if ( !(flags & 2) &&
                (contents.buffer === buffer || contents.buffer === buffer.buffer) ) {
            // We can't emulate MAP_SHARED when the file is not backed by the buffer
            // we're mapping to (e.g. the HEAP buffer).
            allocated = false;
            ptr = contents.byteOffset;
          } else {
            // Try to avoid unnecessary slices.
            if (position > 0 || position + length < contents.length) {
              if (contents.subarray) {
                contents = contents.subarray(position, position + length);
              } else {
                contents = Array.prototype.slice.call(contents, position, position + length);
              }
            }
            allocated = true;
            ptr = _malloc(length);
            if (!ptr) {
              throw new FS.ErrnoError(ERRNO_CODES.ENOMEM);
            }
            buffer.set(contents, ptr);
          }
          return { ptr: ptr, allocated: allocated };
        }}};
  var IDBFS={dbs:{},indexedDB:function () {
        return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
      },DB_VERSION:20,DB_STORE_NAME:"FILE_DATA",mount:function (mount) {
        return MEMFS.mount.apply(null, arguments);
      },syncfs:function (mount, populate, callback) {
        IDBFS.getLocalSet(mount, function(err, local) {
          if (err) return callback(err);
          IDBFS.getRemoteSet(mount, function(err, remote) {
            if (err) return callback(err);
            var src = populate ? remote : local;
            var dst = populate ? local : remote;
            IDBFS.reconcile(src, dst, callback);
          });
        });
      },reconcile:function (src, dst, callback) {
        var total = 0;
        var create = {};
        for (var key in src.files) {
          if (!src.files.hasOwnProperty(key)) continue;
          var e = src.files[key];
          var e2 = dst.files[key];
          if (!e2 || e.timestamp > e2.timestamp) {
            create[key] = e;
            total++;
          }
        }
        var remove = {};
        for (var key in dst.files) {
          if (!dst.files.hasOwnProperty(key)) continue;
          var e = dst.files[key];
          var e2 = src.files[key];
          if (!e2) {
            remove[key] = e;
            total++;
          }
        }
        if (!total) {
          // early out
          return callback(null);
        }
        var completed = 0;
        function done(err) {
          if (err) return callback(err);
          if (++completed >= total) {
            return callback(null);
          }
        };
        // create a single transaction to handle and IDB reads / writes we'll need to do
        var db = src.type === 'remote' ? src.db : dst.db;
        var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readwrite');
        transaction.onerror = function transaction_onerror() { callback(this.error); };
        var store = transaction.objectStore(IDBFS.DB_STORE_NAME);
        for (var path in create) {
          if (!create.hasOwnProperty(path)) continue;
          var entry = create[path];
          if (dst.type === 'local') {
            // save file to local
            try {
              if (FS.isDir(entry.mode)) {
                FS.mkdir(path, entry.mode);
              } else if (FS.isFile(entry.mode)) {
                var stream = FS.open(path, 'w+', 0666);
                FS.write(stream, entry.contents, 0, entry.contents.length, 0, true /* canOwn */);
                FS.close(stream);
              }
              done(null);
            } catch (e) {
              return done(e);
            }
          } else {
            // save file to IDB
            var req = store.put(entry, path);
            req.onsuccess = function req_onsuccess() { done(null); };
            req.onerror = function req_onerror() { done(this.error); };
          }
        }
        for (var path in remove) {
          if (!remove.hasOwnProperty(path)) continue;
          var entry = remove[path];
          if (dst.type === 'local') {
            // delete file from local
            try {
              if (FS.isDir(entry.mode)) {
                // TODO recursive delete?
                FS.rmdir(path);
              } else if (FS.isFile(entry.mode)) {
                FS.unlink(path);
              }
              done(null);
            } catch (e) {
              return done(e);
            }
          } else {
            // delete file from IDB
            var req = store.delete(path);
            req.onsuccess = function req_onsuccess() { done(null); };
            req.onerror = function req_onerror() { done(this.error); };
          }
        }
      },getLocalSet:function (mount, callback) {
        var files = {};
        function isRealDir(p) {
          return p !== '.' && p !== '..';
        };
        function toAbsolute(root) {
          return function(p) {
            return PATH.join2(root, p);
          }
        };
        var check = FS.readdir(mount.mountpoint)
          .filter(isRealDir)
          .map(toAbsolute(mount.mountpoint));
        while (check.length) {
          var path = check.pop();
          var stat, node;
          try {
            var lookup = FS.lookupPath(path);
            node = lookup.node;
            stat = FS.stat(path);
          } catch (e) {
            return callback(e);
          }
          if (FS.isDir(stat.mode)) {
            check.push.apply(check, FS.readdir(path)
              .filter(isRealDir)
              .map(toAbsolute(path)));
            files[path] = { mode: stat.mode, timestamp: stat.mtime };
          } else if (FS.isFile(stat.mode)) {
            files[path] = { contents: node.contents, mode: stat.mode, timestamp: stat.mtime };
          } else {
            return callback(new Error('node type not supported'));
          }
        }
        return callback(null, { type: 'local', files: files });
      },getDB:function (name, callback) {
        // look it up in the cache
        var db = IDBFS.dbs[name];
        if (db) {
          return callback(null, db);
        }
        var req;
        try {
          req = IDBFS.indexedDB().open(name, IDBFS.DB_VERSION);
        } catch (e) {
          return onerror(e);
        }
        req.onupgradeneeded = function req_onupgradeneeded() {
          db = req.result;
          db.createObjectStore(IDBFS.DB_STORE_NAME);
        };
        req.onsuccess = function req_onsuccess() {
          db = req.result;
          // add to the cache
          IDBFS.dbs[name] = db;
          callback(null, db);
        };
        req.onerror = function req_onerror() {
          callback(this.error);
        };
      },getRemoteSet:function (mount, callback) {
        var files = {};
        IDBFS.getDB(mount.mountpoint, function(err, db) {
          if (err) return callback(err);
          var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readonly');
          transaction.onerror = function transaction_onerror() { callback(this.error); };
          var store = transaction.objectStore(IDBFS.DB_STORE_NAME);
          store.openCursor().onsuccess = function store_openCursor_onsuccess(event) {
            var cursor = event.target.result;
            if (!cursor) {
              return callback(null, { type: 'remote', db: db, files: files });
            }
            files[cursor.key] = cursor.value;
            cursor.continue();
          };
        });
      }};
  var NODEFS={isWindows:false,staticInit:function () {
        NODEFS.isWindows = !!process.platform.match(/^win/);
      },mount:function (mount) {
        assert(ENVIRONMENT_IS_NODE);
        return NODEFS.createNode(null, '/', NODEFS.getMode(mount.opts.root), 0);
      },createNode:function (parent, name, mode, dev) {
        if (!FS.isDir(mode) && !FS.isFile(mode) && !FS.isLink(mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var node = FS.createNode(parent, name, mode);
        node.node_ops = NODEFS.node_ops;
        node.stream_ops = NODEFS.stream_ops;
        return node;
      },getMode:function (path) {
        var stat;
        try {
          stat = fs.lstatSync(path);
          if (NODEFS.isWindows) {
            // On Windows, directories return permission bits 'rw-rw-rw-', even though they have 'rwxrwxrwx', so 
            // propagate write bits to execute bits.
            stat.mode = stat.mode | ((stat.mode & 146) >> 1);
          }
        } catch (e) {
          if (!e.code) throw e;
          throw new FS.ErrnoError(ERRNO_CODES[e.code]);
        }
        return stat.mode;
      },realPath:function (node) {
        var parts = [];
        while (node.parent !== node) {
          parts.push(node.name);
          node = node.parent;
        }
        parts.push(node.mount.opts.root);
        parts.reverse();
        return PATH.join.apply(null, parts);
      },flagsToPermissionStringMap:{0:"r",1:"r+",2:"r+",64:"r",65:"r+",66:"r+",129:"rx+",193:"rx+",514:"w+",577:"w",578:"w+",705:"wx",706:"wx+",1024:"a",1025:"a",1026:"a+",1089:"a",1090:"a+",1153:"ax",1154:"ax+",1217:"ax",1218:"ax+",4096:"rs",4098:"rs+"},flagsToPermissionString:function (flags) {
        if (flags in NODEFS.flagsToPermissionStringMap) {
          return NODEFS.flagsToPermissionStringMap[flags];
        } else {
          return flags;
        }
      },node_ops:{getattr:function (node) {
          var path = NODEFS.realPath(node);
          var stat;
          try {
            stat = fs.lstatSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          // node.js v0.10.20 doesn't report blksize and blocks on Windows. Fake them with default blksize of 4096.
          // See http://support.microsoft.com/kb/140365
          if (NODEFS.isWindows && !stat.blksize) {
            stat.blksize = 4096;
          }
          if (NODEFS.isWindows && !stat.blocks) {
            stat.blocks = (stat.size+stat.blksize-1)/stat.blksize|0;
          }
          return {
            dev: stat.dev,
            ino: stat.ino,
            mode: stat.mode,
            nlink: stat.nlink,
            uid: stat.uid,
            gid: stat.gid,
            rdev: stat.rdev,
            size: stat.size,
            atime: stat.atime,
            mtime: stat.mtime,
            ctime: stat.ctime,
            blksize: stat.blksize,
            blocks: stat.blocks
          };
        },setattr:function (node, attr) {
          var path = NODEFS.realPath(node);
          try {
            if (attr.mode !== undefined) {
              fs.chmodSync(path, attr.mode);
              // update the common node structure mode as well
              node.mode = attr.mode;
            }
            if (attr.timestamp !== undefined) {
              var date = new Date(attr.timestamp);
              fs.utimesSync(path, date, date);
            }
            if (attr.size !== undefined) {
              fs.truncateSync(path, attr.size);
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },lookup:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          var mode = NODEFS.getMode(path);
          return NODEFS.createNode(parent, name, mode);
        },mknod:function (parent, name, mode, dev) {
          var node = NODEFS.createNode(parent, name, mode, dev);
          // create the backing node for this in the fs root as well
          var path = NODEFS.realPath(node);
          try {
            if (FS.isDir(node.mode)) {
              fs.mkdirSync(path, node.mode);
            } else {
              fs.writeFileSync(path, '', { mode: node.mode });
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          return node;
        },rename:function (oldNode, newDir, newName) {
          var oldPath = NODEFS.realPath(oldNode);
          var newPath = PATH.join2(NODEFS.realPath(newDir), newName);
          try {
            fs.renameSync(oldPath, newPath);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },unlink:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          try {
            fs.unlinkSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },rmdir:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          try {
            fs.rmdirSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },readdir:function (node) {
          var path = NODEFS.realPath(node);
          try {
            return fs.readdirSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },symlink:function (parent, newName, oldPath) {
          var newPath = PATH.join2(NODEFS.realPath(parent), newName);
          try {
            fs.symlinkSync(oldPath, newPath);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },readlink:function (node) {
          var path = NODEFS.realPath(node);
          try {
            return fs.readlinkSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        }},stream_ops:{open:function (stream) {
          var path = NODEFS.realPath(stream.node);
          try {
            if (FS.isFile(stream.node.mode)) {
              stream.nfd = fs.openSync(path, NODEFS.flagsToPermissionString(stream.flags));
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },close:function (stream) {
          try {
            if (FS.isFile(stream.node.mode) && stream.nfd) {
              fs.closeSync(stream.nfd);
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },read:function (stream, buffer, offset, length, position) {
          // FIXME this is terrible.
          var nbuffer = new Buffer(length);
          var res;
          try {
            res = fs.readSync(stream.nfd, nbuffer, 0, length, position);
          } catch (e) {
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          if (res > 0) {
            for (var i = 0; i < res; i++) {
              buffer[offset + i] = nbuffer[i];
            }
          }
          return res;
        },write:function (stream, buffer, offset, length, position) {
          // FIXME this is terrible.
          var nbuffer = new Buffer(buffer.subarray(offset, offset + length));
          var res;
          try {
            res = fs.writeSync(stream.nfd, nbuffer, 0, length, position);
          } catch (e) {
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          return res;
        },llseek:function (stream, offset, whence) {
          var position = offset;
          if (whence === 1) {  // SEEK_CUR.
            position += stream.position;
          } else if (whence === 2) {  // SEEK_END.
            if (FS.isFile(stream.node.mode)) {
              try {
                var stat = fs.fstatSync(stream.nfd);
                position += stat.size;
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES[e.code]);
              }
            }
          }
          if (position < 0) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          stream.position = position;
          return position;
        }}};
  var _stdin=allocate(1, "i32*", ALLOC_STATIC);
  var _stdout=allocate(1, "i32*", ALLOC_STATIC);
  var _stderr=allocate(1, "i32*", ALLOC_STATIC);
  function _fflush(stream) {
      // int fflush(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fflush.html
      // we don't currently perform any user-space buffering of data
    }var FS={root:null,mounts:[],devices:[null],streams:[null],nextInode:1,nameTable:null,currentPath:"/",initialized:false,ignorePermissions:true,ErrnoError:null,genericErrors:{},handleFSError:function (e) {
        if (!(e instanceof FS.ErrnoError)) throw e + ' : ' + stackTrace();
        return ___setErrNo(e.errno);
      },lookupPath:function (path, opts) {
        path = PATH.resolve(FS.cwd(), path);
        opts = opts || { recurse_count: 0 };
        if (opts.recurse_count > 8) {  // max recursive lookup of 8
          throw new FS.ErrnoError(ERRNO_CODES.ELOOP);
        }
        // split the path
        var parts = PATH.normalizeArray(path.split('/').filter(function(p) {
          return !!p;
        }), false);
        // start at the root
        var current = FS.root;
        var current_path = '/';
        for (var i = 0; i < parts.length; i++) {
          var islast = (i === parts.length-1);
          if (islast && opts.parent) {
            // stop resolving
            break;
          }
          current = FS.lookupNode(current, parts[i]);
          current_path = PATH.join2(current_path, parts[i]);
          // jump to the mount's root node if this is a mountpoint
          if (FS.isMountpoint(current)) {
            current = current.mount.root;
          }
          // follow symlinks
          // by default, lookupPath will not follow a symlink if it is the final path component.
          // setting opts.follow = true will override this behavior.
          if (!islast || opts.follow) {
            var count = 0;
            while (FS.isLink(current.mode)) {
              var link = FS.readlink(current_path);
              current_path = PATH.resolve(PATH.dirname(current_path), link);
              var lookup = FS.lookupPath(current_path, { recurse_count: opts.recurse_count });
              current = lookup.node;
              if (count++ > 40) {  // limit max consecutive symlinks to 40 (SYMLOOP_MAX).
                throw new FS.ErrnoError(ERRNO_CODES.ELOOP);
              }
            }
          }
        }
        return { path: current_path, node: current };
      },getPath:function (node) {
        var path;
        while (true) {
          if (FS.isRoot(node)) {
            var mount = node.mount.mountpoint;
            if (!path) return mount;
            return mount[mount.length-1] !== '/' ? mount + '/' + path : mount + path;
          }
          path = path ? node.name + '/' + path : node.name;
          node = node.parent;
        }
      },hashName:function (parentid, name) {
        var hash = 0;
        for (var i = 0; i < name.length; i++) {
          hash = ((hash << 5) - hash + name.charCodeAt(i)) | 0;
        }
        return ((parentid + hash) >>> 0) % FS.nameTable.length;
      },hashAddNode:function (node) {
        var hash = FS.hashName(node.parent.id, node.name);
        node.name_next = FS.nameTable[hash];
        FS.nameTable[hash] = node;
      },hashRemoveNode:function (node) {
        var hash = FS.hashName(node.parent.id, node.name);
        if (FS.nameTable[hash] === node) {
          FS.nameTable[hash] = node.name_next;
        } else {
          var current = FS.nameTable[hash];
          while (current) {
            if (current.name_next === node) {
              current.name_next = node.name_next;
              break;
            }
            current = current.name_next;
          }
        }
      },lookupNode:function (parent, name) {
        var err = FS.mayLookup(parent);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        var hash = FS.hashName(parent.id, name);
        for (var node = FS.nameTable[hash]; node; node = node.name_next) {
          var nodeName = node.name;
          if (node.parent.id === parent.id && nodeName === name) {
            return node;
          }
        }
        // if we failed to find it in the cache, call into the VFS
        return FS.lookup(parent, name);
      },createNode:function (parent, name, mode, rdev) {
        if (!FS.FSNode) {
          FS.FSNode = function(parent, name, mode, rdev) {
            this.id = FS.nextInode++;
            this.name = name;
            this.mode = mode;
            this.node_ops = {};
            this.stream_ops = {};
            this.rdev = rdev;
            this.parent = null;
            this.mount = null;
            if (!parent) {
              parent = this;  // root node sets parent to itself
            }
            this.parent = parent;
            this.mount = parent.mount;
            FS.hashAddNode(this);
          };
          // compatibility
          var readMode = 292 | 73;
          var writeMode = 146;
          FS.FSNode.prototype = {};
          // NOTE we must use Object.defineProperties instead of individual calls to
          // Object.defineProperty in order to make closure compiler happy
          Object.defineProperties(FS.FSNode.prototype, {
            read: {
              get: function() { return (this.mode & readMode) === readMode; },
              set: function(val) { val ? this.mode |= readMode : this.mode &= ~readMode; }
            },
            write: {
              get: function() { return (this.mode & writeMode) === writeMode; },
              set: function(val) { val ? this.mode |= writeMode : this.mode &= ~writeMode; }
            },
            isFolder: {
              get: function() { return FS.isDir(this.mode); },
            },
            isDevice: {
              get: function() { return FS.isChrdev(this.mode); },
            },
          });
        }
        return new FS.FSNode(parent, name, mode, rdev);
      },destroyNode:function (node) {
        FS.hashRemoveNode(node);
      },isRoot:function (node) {
        return node === node.parent;
      },isMountpoint:function (node) {
        return node.mounted;
      },isFile:function (mode) {
        return (mode & 61440) === 32768;
      },isDir:function (mode) {
        return (mode & 61440) === 16384;
      },isLink:function (mode) {
        return (mode & 61440) === 40960;
      },isChrdev:function (mode) {
        return (mode & 61440) === 8192;
      },isBlkdev:function (mode) {
        return (mode & 61440) === 24576;
      },isFIFO:function (mode) {
        return (mode & 61440) === 4096;
      },isSocket:function (mode) {
        return (mode & 49152) === 49152;
      },flagModes:{"r":0,"rs":1052672,"r+":2,"w":577,"wx":705,"xw":705,"w+":578,"wx+":706,"xw+":706,"a":1089,"ax":1217,"xa":1217,"a+":1090,"ax+":1218,"xa+":1218},modeStringToFlags:function (str) {
        var flags = FS.flagModes[str];
        if (typeof flags === 'undefined') {
          throw new Error('Unknown file open mode: ' + str);
        }
        return flags;
      },flagsToPermissionString:function (flag) {
        var accmode = flag & 2097155;
        var perms = ['r', 'w', 'rw'][accmode];
        if ((flag & 512)) {
          perms += 'w';
        }
        return perms;
      },nodePermissions:function (node, perms) {
        if (FS.ignorePermissions) {
          return 0;
        }
        // return 0 if any user, group or owner bits are set.
        if (perms.indexOf('r') !== -1 && !(node.mode & 292)) {
          return ERRNO_CODES.EACCES;
        } else if (perms.indexOf('w') !== -1 && !(node.mode & 146)) {
          return ERRNO_CODES.EACCES;
        } else if (perms.indexOf('x') !== -1 && !(node.mode & 73)) {
          return ERRNO_CODES.EACCES;
        }
        return 0;
      },mayLookup:function (dir) {
        return FS.nodePermissions(dir, 'x');
      },mayCreate:function (dir, name) {
        try {
          var node = FS.lookupNode(dir, name);
          return ERRNO_CODES.EEXIST;
        } catch (e) {
        }
        return FS.nodePermissions(dir, 'wx');
      },mayDelete:function (dir, name, isdir) {
        var node;
        try {
          node = FS.lookupNode(dir, name);
        } catch (e) {
          return e.errno;
        }
        var err = FS.nodePermissions(dir, 'wx');
        if (err) {
          return err;
        }
        if (isdir) {
          if (!FS.isDir(node.mode)) {
            return ERRNO_CODES.ENOTDIR;
          }
          if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {
            return ERRNO_CODES.EBUSY;
          }
        } else {
          if (FS.isDir(node.mode)) {
            return ERRNO_CODES.EISDIR;
          }
        }
        return 0;
      },mayOpen:function (node, flags) {
        if (!node) {
          return ERRNO_CODES.ENOENT;
        }
        if (FS.isLink(node.mode)) {
          return ERRNO_CODES.ELOOP;
        } else if (FS.isDir(node.mode)) {
          if ((flags & 2097155) !== 0 ||  // opening for write
              (flags & 512)) {
            return ERRNO_CODES.EISDIR;
          }
        }
        return FS.nodePermissions(node, FS.flagsToPermissionString(flags));
      },MAX_OPEN_FDS:4096,nextfd:function (fd_start, fd_end) {
        fd_start = fd_start || 1;
        fd_end = fd_end || FS.MAX_OPEN_FDS;
        for (var fd = fd_start; fd <= fd_end; fd++) {
          if (!FS.streams[fd]) {
            return fd;
          }
        }
        throw new FS.ErrnoError(ERRNO_CODES.EMFILE);
      },getStream:function (fd) {
        return FS.streams[fd];
      },createStream:function (stream, fd_start, fd_end) {
        if (!FS.FSStream) {
          FS.FSStream = function(){};
          FS.FSStream.prototype = {};
          // compatibility
          Object.defineProperties(FS.FSStream.prototype, {
            object: {
              get: function() { return this.node; },
              set: function(val) { this.node = val; }
            },
            isRead: {
              get: function() { return (this.flags & 2097155) !== 1; }
            },
            isWrite: {
              get: function() { return (this.flags & 2097155) !== 0; }
            },
            isAppend: {
              get: function() { return (this.flags & 1024); }
            }
          });
        }
        if (stream.__proto__) {
          // reuse the object
          stream.__proto__ = FS.FSStream.prototype;
        } else {
          var newStream = new FS.FSStream();
          for (var p in stream) {
            newStream[p] = stream[p];
          }
          stream = newStream;
        }
        var fd = FS.nextfd(fd_start, fd_end);
        stream.fd = fd;
        FS.streams[fd] = stream;
        return stream;
      },closeStream:function (fd) {
        FS.streams[fd] = null;
      },chrdev_stream_ops:{open:function (stream) {
          var device = FS.getDevice(stream.node.rdev);
          // override node's stream ops with the device's
          stream.stream_ops = device.stream_ops;
          // forward the open call
          if (stream.stream_ops.open) {
            stream.stream_ops.open(stream);
          }
        },llseek:function () {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }},major:function (dev) {
        return ((dev) >> 8);
      },minor:function (dev) {
        return ((dev) & 0xff);
      },makedev:function (ma, mi) {
        return ((ma) << 8 | (mi));
      },registerDevice:function (dev, ops) {
        FS.devices[dev] = { stream_ops: ops };
      },getDevice:function (dev) {
        return FS.devices[dev];
      },syncfs:function (populate, callback) {
        if (typeof(populate) === 'function') {
          callback = populate;
          populate = false;
        }
        var completed = 0;
        var total = FS.mounts.length;
        function done(err) {
          if (err) {
            return callback(err);
          }
          if (++completed >= total) {
            callback(null);
          }
        };
        // sync all mounts
        for (var i = 0; i < FS.mounts.length; i++) {
          var mount = FS.mounts[i];
          if (!mount.type.syncfs) {
            done(null);
            continue;
          }
          mount.type.syncfs(mount, populate, done);
        }
      },mount:function (type, opts, mountpoint) {
        var lookup;
        if (mountpoint) {
          lookup = FS.lookupPath(mountpoint, { follow: false });
          mountpoint = lookup.path;  // use the absolute path
        }
        var mount = {
          type: type,
          opts: opts,
          mountpoint: mountpoint,
          root: null
        };
        // create a root node for the fs
        var root = type.mount(mount);
        root.mount = mount;
        mount.root = root;
        // assign the mount info to the mountpoint's node
        if (lookup) {
          lookup.node.mount = mount;
          lookup.node.mounted = true;
          // compatibility update FS.root if we mount to /
          if (mountpoint === '/') {
            FS.root = mount.root;
          }
        }
        // add to our cached list of mounts
        FS.mounts.push(mount);
        return root;
      },lookup:function (parent, name) {
        return parent.node_ops.lookup(parent, name);
      },mknod:function (path, mode, dev) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        var err = FS.mayCreate(parent, name);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.mknod) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return parent.node_ops.mknod(parent, name, mode, dev);
      },create:function (path, mode) {
        mode = mode !== undefined ? mode : 0666;
        mode &= 4095;
        mode |= 32768;
        return FS.mknod(path, mode, 0);
      },mkdir:function (path, mode) {
        mode = mode !== undefined ? mode : 0777;
        mode &= 511 | 512;
        mode |= 16384;
        return FS.mknod(path, mode, 0);
      },mkdev:function (path, mode, dev) {
        if (typeof(dev) === 'undefined') {
          dev = mode;
          mode = 0666;
        }
        mode |= 8192;
        return FS.mknod(path, mode, dev);
      },symlink:function (oldpath, newpath) {
        var lookup = FS.lookupPath(newpath, { parent: true });
        var parent = lookup.node;
        var newname = PATH.basename(newpath);
        var err = FS.mayCreate(parent, newname);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.symlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return parent.node_ops.symlink(parent, newname, oldpath);
      },rename:function (old_path, new_path) {
        var old_dirname = PATH.dirname(old_path);
        var new_dirname = PATH.dirname(new_path);
        var old_name = PATH.basename(old_path);
        var new_name = PATH.basename(new_path);
        // parents must exist
        var lookup, old_dir, new_dir;
        try {
          lookup = FS.lookupPath(old_path, { parent: true });
          old_dir = lookup.node;
          lookup = FS.lookupPath(new_path, { parent: true });
          new_dir = lookup.node;
        } catch (e) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        // need to be part of the same mount
        if (old_dir.mount !== new_dir.mount) {
          throw new FS.ErrnoError(ERRNO_CODES.EXDEV);
        }
        // source must exist
        var old_node = FS.lookupNode(old_dir, old_name);
        // old path should not be an ancestor of the new path
        var relative = PATH.relative(old_path, new_dirname);
        if (relative.charAt(0) !== '.') {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        // new path should not be an ancestor of the old path
        relative = PATH.relative(new_path, old_dirname);
        if (relative.charAt(0) !== '.') {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
        }
        // see if the new path already exists
        var new_node;
        try {
          new_node = FS.lookupNode(new_dir, new_name);
        } catch (e) {
          // not fatal
        }
        // early out if nothing needs to change
        if (old_node === new_node) {
          return;
        }
        // we'll need to delete the old entry
        var isdir = FS.isDir(old_node.mode);
        var err = FS.mayDelete(old_dir, old_name, isdir);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        // need delete permissions if we'll be overwriting.
        // need create permissions if new doesn't already exist.
        err = new_node ?
          FS.mayDelete(new_dir, new_name, isdir) :
          FS.mayCreate(new_dir, new_name);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!old_dir.node_ops.rename) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(old_node) || (new_node && FS.isMountpoint(new_node))) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        // if we are going to change the parent, check write permissions
        if (new_dir !== old_dir) {
          err = FS.nodePermissions(old_dir, 'w');
          if (err) {
            throw new FS.ErrnoError(err);
          }
        }
        // remove the node from the lookup hash
        FS.hashRemoveNode(old_node);
        // do the underlying fs rename
        try {
          old_dir.node_ops.rename(old_node, new_dir, new_name);
        } catch (e) {
          throw e;
        } finally {
          // add the node back to the hash (in case node_ops.rename
          // changed its name)
          FS.hashAddNode(old_node);
        }
      },rmdir:function (path) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        var node = FS.lookupNode(parent, name);
        var err = FS.mayDelete(parent, name, true);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.rmdir) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(node)) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        parent.node_ops.rmdir(parent, name);
        FS.destroyNode(node);
      },readdir:function (path) {
        var lookup = FS.lookupPath(path, { follow: true });
        var node = lookup.node;
        if (!node.node_ops.readdir) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
        }
        return node.node_ops.readdir(node);
      },unlink:function (path) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        var node = FS.lookupNode(parent, name);
        var err = FS.mayDelete(parent, name, false);
        if (err) {
          // POSIX says unlink should set EPERM, not EISDIR
          if (err === ERRNO_CODES.EISDIR) err = ERRNO_CODES.EPERM;
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.unlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(node)) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        parent.node_ops.unlink(parent, name);
        FS.destroyNode(node);
      },readlink:function (path) {
        var lookup = FS.lookupPath(path, { follow: false });
        var link = lookup.node;
        if (!link.node_ops.readlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        return link.node_ops.readlink(link);
      },stat:function (path, dontFollow) {
        var lookup = FS.lookupPath(path, { follow: !dontFollow });
        var node = lookup.node;
        if (!node.node_ops.getattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return node.node_ops.getattr(node);
      },lstat:function (path) {
        return FS.stat(path, true);
      },chmod:function (path, mode, dontFollow) {
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: !dontFollow });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        node.node_ops.setattr(node, {
          mode: (mode & 4095) | (node.mode & ~4095),
          timestamp: Date.now()
        });
      },lchmod:function (path, mode) {
        FS.chmod(path, mode, true);
      },fchmod:function (fd, mode) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        FS.chmod(stream.node, mode);
      },chown:function (path, uid, gid, dontFollow) {
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: !dontFollow });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        node.node_ops.setattr(node, {
          timestamp: Date.now()
          // we ignore the uid / gid for now
        });
      },lchown:function (path, uid, gid) {
        FS.chown(path, uid, gid, true);
      },fchown:function (fd, uid, gid) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        FS.chown(stream.node, uid, gid);
      },truncate:function (path, len) {
        if (len < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: true });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isDir(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!FS.isFile(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var err = FS.nodePermissions(node, 'w');
        if (err) {
          throw new FS.ErrnoError(err);
        }
        node.node_ops.setattr(node, {
          size: len,
          timestamp: Date.now()
        });
      },ftruncate:function (fd, len) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        FS.truncate(stream.node, len);
      },utime:function (path, atime, mtime) {
        var lookup = FS.lookupPath(path, { follow: true });
        var node = lookup.node;
        node.node_ops.setattr(node, {
          timestamp: Math.max(atime, mtime)
        });
      },open:function (path, flags, mode, fd_start, fd_end) {
        flags = typeof flags === 'string' ? FS.modeStringToFlags(flags) : flags;
        mode = typeof mode === 'undefined' ? 0666 : mode;
        if ((flags & 64)) {
          mode = (mode & 4095) | 32768;
        } else {
          mode = 0;
        }
        var node;
        if (typeof path === 'object') {
          node = path;
        } else {
          path = PATH.normalize(path);
          try {
            var lookup = FS.lookupPath(path, {
              follow: !(flags & 131072)
            });
            node = lookup.node;
          } catch (e) {
            // ignore
          }
        }
        // perhaps we need to create the node
        if ((flags & 64)) {
          if (node) {
            // if O_CREAT and O_EXCL are set, error out if the node already exists
            if ((flags & 128)) {
              throw new FS.ErrnoError(ERRNO_CODES.EEXIST);
            }
          } else {
            // node doesn't exist, try to create it
            node = FS.mknod(path, mode, 0);
          }
        }
        if (!node) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        // can't truncate a device
        if (FS.isChrdev(node.mode)) {
          flags &= ~512;
        }
        // check permissions
        var err = FS.mayOpen(node, flags);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        // do truncation if necessary
        if ((flags & 512)) {
          FS.truncate(node, 0);
        }
        // we've already handled these, don't pass down to the underlying vfs
        flags &= ~(128 | 512);
        // register the stream with the filesystem
        var stream = FS.createStream({
          node: node,
          path: FS.getPath(node),  // we want the absolute path to the node
          flags: flags,
          seekable: true,
          position: 0,
          stream_ops: node.stream_ops,
          // used by the file family libc calls (fopen, fwrite, ferror, etc.)
          ungotten: [],
          error: false
        }, fd_start, fd_end);
        // call the new stream's open function
        if (stream.stream_ops.open) {
          stream.stream_ops.open(stream);
        }
        if (Module['logReadFiles'] && !(flags & 1)) {
          if (!FS.readFiles) FS.readFiles = {};
          if (!(path in FS.readFiles)) {
            FS.readFiles[path] = 1;
            Module['printErr']('read file: ' + path);
          }
        }
        return stream;
      },close:function (stream) {
        try {
          if (stream.stream_ops.close) {
            stream.stream_ops.close(stream);
          }
        } catch (e) {
          throw e;
        } finally {
          FS.closeStream(stream.fd);
        }
      },llseek:function (stream, offset, whence) {
        if (!stream.seekable || !stream.stream_ops.llseek) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        return stream.stream_ops.llseek(stream, offset, whence);
      },read:function (stream, buffer, offset, length, position) {
        if (length < 0 || position < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if ((stream.flags & 2097155) === 1) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (FS.isDir(stream.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!stream.stream_ops.read) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var seeking = true;
        if (typeof position === 'undefined') {
          position = stream.position;
          seeking = false;
        } else if (!stream.seekable) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        var bytesRead = stream.stream_ops.read(stream, buffer, offset, length, position);
        if (!seeking) stream.position += bytesRead;
        return bytesRead;
      },write:function (stream, buffer, offset, length, position, canOwn) {
        if (length < 0 || position < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (FS.isDir(stream.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!stream.stream_ops.write) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var seeking = true;
        if (typeof position === 'undefined') {
          position = stream.position;
          seeking = false;
        } else if (!stream.seekable) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        if (stream.flags & 1024) {
          // seek to the end before writing in append mode
          FS.llseek(stream, 0, 2);
        }
        var bytesWritten = stream.stream_ops.write(stream, buffer, offset, length, position, canOwn);
        if (!seeking) stream.position += bytesWritten;
        return bytesWritten;
      },allocate:function (stream, offset, length) {
        if (offset < 0 || length <= 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (!FS.isFile(stream.node.mode) && !FS.isDir(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
        }
        if (!stream.stream_ops.allocate) {
          throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP);
        }
        stream.stream_ops.allocate(stream, offset, length);
      },mmap:function (stream, buffer, offset, length, position, prot, flags) {
        // TODO if PROT is PROT_WRITE, make sure we have write access
        if ((stream.flags & 2097155) === 1) {
          throw new FS.ErrnoError(ERRNO_CODES.EACCES);
        }
        if (!stream.stream_ops.mmap) {
          throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
        }
        return stream.stream_ops.mmap(stream, buffer, offset, length, position, prot, flags);
      },ioctl:function (stream, cmd, arg) {
        if (!stream.stream_ops.ioctl) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTTY);
        }
        return stream.stream_ops.ioctl(stream, cmd, arg);
      },readFile:function (path, opts) {
        opts = opts || {};
        opts.flags = opts.flags || 'r';
        opts.encoding = opts.encoding || 'binary';
        var ret;
        var stream = FS.open(path, opts.flags);
        var stat = FS.stat(path);
        var length = stat.size;
        var buf = new Uint8Array(length);
        FS.read(stream, buf, 0, length, 0);
        if (opts.encoding === 'utf8') {
          ret = '';
          var utf8 = new Runtime.UTF8Processor();
          for (var i = 0; i < length; i++) {
            ret += utf8.processCChar(buf[i]);
          }
        } else if (opts.encoding === 'binary') {
          ret = buf;
        } else {
          throw new Error('Invalid encoding type "' + opts.encoding + '"');
        }
        FS.close(stream);
        return ret;
      },writeFile:function (path, data, opts) {
        opts = opts || {};
        opts.flags = opts.flags || 'w';
        opts.encoding = opts.encoding || 'utf8';
        var stream = FS.open(path, opts.flags, opts.mode);
        if (opts.encoding === 'utf8') {
          var utf8 = new Runtime.UTF8Processor();
          var buf = new Uint8Array(utf8.processJSString(data));
          FS.write(stream, buf, 0, buf.length, 0);
        } else if (opts.encoding === 'binary') {
          FS.write(stream, data, 0, data.length, 0);
        } else {
          throw new Error('Invalid encoding type "' + opts.encoding + '"');
        }
        FS.close(stream);
      },cwd:function () {
        return FS.currentPath;
      },chdir:function (path) {
        var lookup = FS.lookupPath(path, { follow: true });
        if (!FS.isDir(lookup.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
        }
        var err = FS.nodePermissions(lookup.node, 'x');
        if (err) {
          throw new FS.ErrnoError(err);
        }
        FS.currentPath = lookup.path;
      },createDefaultDirectories:function () {
        FS.mkdir('/tmp');
      },createDefaultDevices:function () {
        // create /dev
        FS.mkdir('/dev');
        // setup /dev/null
        FS.registerDevice(FS.makedev(1, 3), {
          read: function() { return 0; },
          write: function() { return 0; }
        });
        FS.mkdev('/dev/null', FS.makedev(1, 3));
        // setup /dev/tty and /dev/tty1
        // stderr needs to print output using Module['printErr']
        // so we register a second tty just for it.
        TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);
        TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);
        FS.mkdev('/dev/tty', FS.makedev(5, 0));
        FS.mkdev('/dev/tty1', FS.makedev(6, 0));
        // we're not going to emulate the actual shm device,
        // just create the tmp dirs that reside in it commonly
        FS.mkdir('/dev/shm');
        FS.mkdir('/dev/shm/tmp');
      },createStandardStreams:function () {
        // TODO deprecate the old functionality of a single
        // input / output callback and that utilizes FS.createDevice
        // and instead require a unique set of stream ops
        // by default, we symlink the standard streams to the
        // default tty devices. however, if the standard streams
        // have been overwritten we create a unique device for
        // them instead.
        if (Module['stdin']) {
          FS.createDevice('/dev', 'stdin', Module['stdin']);
        } else {
          FS.symlink('/dev/tty', '/dev/stdin');
        }
        if (Module['stdout']) {
          FS.createDevice('/dev', 'stdout', null, Module['stdout']);
        } else {
          FS.symlink('/dev/tty', '/dev/stdout');
        }
        if (Module['stderr']) {
          FS.createDevice('/dev', 'stderr', null, Module['stderr']);
        } else {
          FS.symlink('/dev/tty1', '/dev/stderr');
        }
        // open default streams for the stdin, stdout and stderr devices
        var stdin = FS.open('/dev/stdin', 'r');
        HEAP32[((_stdin)>>2)]=stdin.fd;
        assert(stdin.fd === 1, 'invalid handle for stdin (' + stdin.fd + ')');
        var stdout = FS.open('/dev/stdout', 'w');
        HEAP32[((_stdout)>>2)]=stdout.fd;
        assert(stdout.fd === 2, 'invalid handle for stdout (' + stdout.fd + ')');
        var stderr = FS.open('/dev/stderr', 'w');
        HEAP32[((_stderr)>>2)]=stderr.fd;
        assert(stderr.fd === 3, 'invalid handle for stderr (' + stderr.fd + ')');
      },ensureErrnoError:function () {
        if (FS.ErrnoError) return;
        FS.ErrnoError = function ErrnoError(errno) {
          this.errno = errno;
          for (var key in ERRNO_CODES) {
            if (ERRNO_CODES[key] === errno) {
              this.code = key;
              break;
            }
          }
          this.message = ERRNO_MESSAGES[errno];
          this.stack = stackTrace();
        };
        FS.ErrnoError.prototype = new Error();
        FS.ErrnoError.prototype.constructor = FS.ErrnoError;
        // Some errors may happen quite a bit, to avoid overhead we reuse them (and suffer a lack of stack info)
        [ERRNO_CODES.ENOENT].forEach(function(code) {
          FS.genericErrors[code] = new FS.ErrnoError(code);
          FS.genericErrors[code].stack = '<generic error, no stack>';
        });
      },staticInit:function () {
        FS.ensureErrnoError();
        FS.nameTable = new Array(4096);
        FS.root = FS.createNode(null, '/', 16384 | 0777, 0);
        FS.mount(MEMFS, {}, '/');
        FS.createDefaultDirectories();
        FS.createDefaultDevices();
      },init:function (input, output, error) {
        assert(!FS.init.initialized, 'FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)');
        FS.init.initialized = true;
        FS.ensureErrnoError();
        // Allow Module.stdin etc. to provide defaults, if none explicitly passed to us here
        Module['stdin'] = input || Module['stdin'];
        Module['stdout'] = output || Module['stdout'];
        Module['stderr'] = error || Module['stderr'];
        FS.createStandardStreams();
      },quit:function () {
        FS.init.initialized = false;
        for (var i = 0; i < FS.streams.length; i++) {
          var stream = FS.streams[i];
          if (!stream) {
            continue;
          }
          FS.close(stream);
        }
      },getMode:function (canRead, canWrite) {
        var mode = 0;
        if (canRead) mode |= 292 | 73;
        if (canWrite) mode |= 146;
        return mode;
      },joinPath:function (parts, forceRelative) {
        var path = PATH.join.apply(null, parts);
        if (forceRelative && path[0] == '/') path = path.substr(1);
        return path;
      },absolutePath:function (relative, base) {
        return PATH.resolve(base, relative);
      },standardizePath:function (path) {
        return PATH.normalize(path);
      },findObject:function (path, dontResolveLastLink) {
        var ret = FS.analyzePath(path, dontResolveLastLink);
        if (ret.exists) {
          return ret.object;
        } else {
          ___setErrNo(ret.error);
          return null;
        }
      },analyzePath:function (path, dontResolveLastLink) {
        // operate from within the context of the symlink's target
        try {
          var lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });
          path = lookup.path;
        } catch (e) {
        }
        var ret = {
          isRoot: false, exists: false, error: 0, name: null, path: null, object: null,
          parentExists: false, parentPath: null, parentObject: null
        };
        try {
          var lookup = FS.lookupPath(path, { parent: true });
          ret.parentExists = true;
          ret.parentPath = lookup.path;
          ret.parentObject = lookup.node;
          ret.name = PATH.basename(path);
          lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });
          ret.exists = true;
          ret.path = lookup.path;
          ret.object = lookup.node;
          ret.name = lookup.node.name;
          ret.isRoot = lookup.path === '/';
        } catch (e) {
          ret.error = e.errno;
        };
        return ret;
      },createFolder:function (parent, name, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(canRead, canWrite);
        return FS.mkdir(path, mode);
      },createPath:function (parent, path, canRead, canWrite) {
        parent = typeof parent === 'string' ? parent : FS.getPath(parent);
        var parts = path.split('/').reverse();
        while (parts.length) {
          var part = parts.pop();
          if (!part) continue;
          var current = PATH.join2(parent, part);
          try {
            FS.mkdir(current);
          } catch (e) {
            // ignore EEXIST
          }
          parent = current;
        }
        return current;
      },createFile:function (parent, name, properties, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(canRead, canWrite);
        return FS.create(path, mode);
      },createDataFile:function (parent, name, data, canRead, canWrite, canOwn) {
        var path = name ? PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name) : parent;
        var mode = FS.getMode(canRead, canWrite);
        var node = FS.create(path, mode);
        if (data) {
          if (typeof data === 'string') {
            var arr = new Array(data.length);
            for (var i = 0, len = data.length; i < len; ++i) arr[i] = data.charCodeAt(i);
            data = arr;
          }
          // make sure we can write to the file
          FS.chmod(node, mode | 146);
          var stream = FS.open(node, 'w');
          FS.write(stream, data, 0, data.length, 0, canOwn);
          FS.close(stream);
          FS.chmod(node, mode);
        }
        return node;
      },createDevice:function (parent, name, input, output) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(!!input, !!output);
        if (!FS.createDevice.major) FS.createDevice.major = 64;
        var dev = FS.makedev(FS.createDevice.major++, 0);
        // Create a fake device that a set of stream ops to emulate
        // the old behavior.
        FS.registerDevice(dev, {
          open: function(stream) {
            stream.seekable = false;
          },
          close: function(stream) {
            // flush any pending line data
            if (output && output.buffer && output.buffer.length) {
              output(10);
            }
          },
          read: function(stream, buffer, offset, length, pos /* ignored */) {
            var bytesRead = 0;
            for (var i = 0; i < length; i++) {
              var result;
              try {
                result = input();
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES.EIO);
              }
              if (result === undefined && bytesRead === 0) {
                throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
              }
              if (result === null || result === undefined) break;
              bytesRead++;
              buffer[offset+i] = result;
            }
            if (bytesRead) {
              stream.node.timestamp = Date.now();
            }
            return bytesRead;
          },
          write: function(stream, buffer, offset, length, pos) {
            for (var i = 0; i < length; i++) {
              try {
                output(buffer[offset+i]);
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES.EIO);
              }
            }
            if (length) {
              stream.node.timestamp = Date.now();
            }
            return i;
          }
        });
        return FS.mkdev(path, mode, dev);
      },createLink:function (parent, name, target, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        return FS.symlink(target, path);
      },forceLoadFile:function (obj) {
        if (obj.isDevice || obj.isFolder || obj.link || obj.contents) return true;
        var success = true;
        if (typeof XMLHttpRequest !== 'undefined') {
          throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.");
        } else if (Module['read']) {
          // Command-line.
          try {
            // WARNING: Can't read binary files in V8's d8 or tracemonkey's js, as
            //          read() will try to parse UTF8.
            obj.contents = intArrayFromString(Module['read'](obj.url), true);
          } catch (e) {
            success = false;
          }
        } else {
          throw new Error('Cannot load without read() or XMLHttpRequest.');
        }
        if (!success) ___setErrNo(ERRNO_CODES.EIO);
        return success;
      },createLazyFile:function (parent, name, url, canRead, canWrite) {
        if (typeof XMLHttpRequest !== 'undefined') {
          if (!ENVIRONMENT_IS_WORKER) throw 'Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc';
          // Lazy chunked Uint8Array (implements get and length from Uint8Array). Actual getting is abstracted away for eventual reuse.
          function LazyUint8Array() {
            this.lengthKnown = false;
            this.chunks = []; // Loaded chunks. Index is the chunk number
          }
          LazyUint8Array.prototype.get = function LazyUint8Array_get(idx) {
            if (idx > this.length-1 || idx < 0) {
              return undefined;
            }
            var chunkOffset = idx % this.chunkSize;
            var chunkNum = Math.floor(idx / this.chunkSize);
            return this.getter(chunkNum)[chunkOffset];
          }
          LazyUint8Array.prototype.setDataGetter = function LazyUint8Array_setDataGetter(getter) {
            this.getter = getter;
          }
          LazyUint8Array.prototype.cacheLength = function LazyUint8Array_cacheLength() {
              // Find length
              var xhr = new XMLHttpRequest();
              xhr.open('HEAD', url, false);
              xhr.send(null);
              if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
              var datalength = Number(xhr.getResponseHeader("Content-length"));
              var header;
              var hasByteServing = (header = xhr.getResponseHeader("Accept-Ranges")) && header === "bytes";
              var chunkSize = 1024*1024; // Chunk size in bytes
              if (!hasByteServing) chunkSize = datalength;
              // Function to get a range from the remote URL.
              var doXHR = (function(from, to) {
                if (from > to) throw new Error("invalid range (" + from + ", " + to + ") or no bytes requested!");
                if (to > datalength-1) throw new Error("only " + datalength + " bytes available! programmer error!");
                // TODO: Use mozResponseArrayBuffer, responseStream, etc. if available.
                var xhr = new XMLHttpRequest();
                xhr.open('GET', url, false);
                if (datalength !== chunkSize) xhr.setRequestHeader("Range", "bytes=" + from + "-" + to);
                // Some hints to the browser that we want binary data.
                if (typeof Uint8Array != 'undefined') xhr.responseType = 'arraybuffer';
                if (xhr.overrideMimeType) {
                  xhr.overrideMimeType('text/plain; charset=x-user-defined');
                }
                xhr.send(null);
                if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
                if (xhr.response !== undefined) {
                  return new Uint8Array(xhr.response || []);
                } else {
                  return intArrayFromString(xhr.responseText || '', true);
                }
              });
              var lazyArray = this;
              lazyArray.setDataGetter(function(chunkNum) {
                var start = chunkNum * chunkSize;
                var end = (chunkNum+1) * chunkSize - 1; // including this byte
                end = Math.min(end, datalength-1); // if datalength-1 is selected, this is the last block
                if (typeof(lazyArray.chunks[chunkNum]) === "undefined") {
                  lazyArray.chunks[chunkNum] = doXHR(start, end);
                }
                if (typeof(lazyArray.chunks[chunkNum]) === "undefined") throw new Error("doXHR failed!");
                return lazyArray.chunks[chunkNum];
              });
              this._length = datalength;
              this._chunkSize = chunkSize;
              this.lengthKnown = true;
          }
          var lazyArray = new LazyUint8Array();
          Object.defineProperty(lazyArray, "length", {
              get: function() {
                  if(!this.lengthKnown) {
                      this.cacheLength();
                  }
                  return this._length;
              }
          });
          Object.defineProperty(lazyArray, "chunkSize", {
              get: function() {
                  if(!this.lengthKnown) {
                      this.cacheLength();
                  }
                  return this._chunkSize;
              }
          });
          var properties = { isDevice: false, contents: lazyArray };
        } else {
          var properties = { isDevice: false, url: url };
        }
        var node = FS.createFile(parent, name, properties, canRead, canWrite);
        // This is a total hack, but I want to get this lazy file code out of the
        // core of MEMFS. If we want to keep this lazy file concept I feel it should
        // be its own thin LAZYFS proxying calls to MEMFS.
        if (properties.contents) {
          node.contents = properties.contents;
        } else if (properties.url) {
          node.contents = null;
          node.url = properties.url;
        }
        // override each stream op with one that tries to force load the lazy file first
        var stream_ops = {};
        var keys = Object.keys(node.stream_ops);
        keys.forEach(function(key) {
          var fn = node.stream_ops[key];
          stream_ops[key] = function forceLoadLazyFile() {
            if (!FS.forceLoadFile(node)) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
            return fn.apply(null, arguments);
          };
        });
        // use a custom read function
        stream_ops.read = function stream_ops_read(stream, buffer, offset, length, position) {
          if (!FS.forceLoadFile(node)) {
            throw new FS.ErrnoError(ERRNO_CODES.EIO);
          }
          var contents = stream.node.contents;
          if (position >= contents.length)
            return 0;
          var size = Math.min(contents.length - position, length);
          assert(size >= 0);
          if (contents.slice) { // normal array
            for (var i = 0; i < size; i++) {
              buffer[offset + i] = contents[position + i];
            }
          } else {
            for (var i = 0; i < size; i++) { // LazyUint8Array from sync binary XHR
              buffer[offset + i] = contents.get(position + i);
            }
          }
          return size;
        };
        node.stream_ops = stream_ops;
        return node;
      },createPreloadedFile:function (parent, name, url, canRead, canWrite, onload, onerror, dontCreateFile, canOwn) {
        Browser.init();
        // TODO we should allow people to just pass in a complete filename instead
        // of parent and name being that we just join them anyways
        var fullname = name ? PATH.resolve(PATH.join2(parent, name)) : parent;
        function processData(byteArray) {
          function finish(byteArray) {
            if (!dontCreateFile) {
              FS.createDataFile(parent, name, byteArray, canRead, canWrite, canOwn);
            }
            if (onload) onload();
            removeRunDependency('cp ' + fullname);
          }
          var handled = false;
          Module['preloadPlugins'].forEach(function(plugin) {
            if (handled) return;
            if (plugin['canHandle'](fullname)) {
              plugin['handle'](byteArray, fullname, finish, function() {
                if (onerror) onerror();
                removeRunDependency('cp ' + fullname);
              });
              handled = true;
            }
          });
          if (!handled) finish(byteArray);
        }
        addRunDependency('cp ' + fullname);
        if (typeof url == 'string') {
          Browser.asyncLoad(url, function(byteArray) {
            processData(byteArray);
          }, onerror);
        } else {
          processData(url);
        }
      },indexedDB:function () {
        return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
      },DB_NAME:function () {
        return 'EM_FS_' + window.location.pathname;
      },DB_VERSION:20,DB_STORE_NAME:"FILE_DATA",saveFilesToDB:function (paths, onload, onerror) {
        onload = onload || function(){};
        onerror = onerror || function(){};
        var indexedDB = FS.indexedDB();
        try {
          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
        } catch (e) {
          return onerror(e);
        }
        openRequest.onupgradeneeded = function openRequest_onupgradeneeded() {
          console.log('creating db');
          var db = openRequest.result;
          db.createObjectStore(FS.DB_STORE_NAME);
        };
        openRequest.onsuccess = function openRequest_onsuccess() {
          var db = openRequest.result;
          var transaction = db.transaction([FS.DB_STORE_NAME], 'readwrite');
          var files = transaction.objectStore(FS.DB_STORE_NAME);
          var ok = 0, fail = 0, total = paths.length;
          function finish() {
            if (fail == 0) onload(); else onerror();
          }
          paths.forEach(function(path) {
            var putRequest = files.put(FS.analyzePath(path).object.contents, path);
            putRequest.onsuccess = function putRequest_onsuccess() { ok++; if (ok + fail == total) finish() };
            putRequest.onerror = function putRequest_onerror() { fail++; if (ok + fail == total) finish() };
          });
          transaction.onerror = onerror;
        };
        openRequest.onerror = onerror;
      },loadFilesFromDB:function (paths, onload, onerror) {
        onload = onload || function(){};
        onerror = onerror || function(){};
        var indexedDB = FS.indexedDB();
        try {
          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
        } catch (e) {
          return onerror(e);
        }
        openRequest.onupgradeneeded = onerror; // no database to load from
        openRequest.onsuccess = function openRequest_onsuccess() {
          var db = openRequest.result;
          try {
            var transaction = db.transaction([FS.DB_STORE_NAME], 'readonly');
          } catch(e) {
            onerror(e);
            return;
          }
          var files = transaction.objectStore(FS.DB_STORE_NAME);
          var ok = 0, fail = 0, total = paths.length;
          function finish() {
            if (fail == 0) onload(); else onerror();
          }
          paths.forEach(function(path) {
            var getRequest = files.get(path);
            getRequest.onsuccess = function getRequest_onsuccess() {
              if (FS.analyzePath(path).exists) {
                FS.unlink(path);
              }
              FS.createDataFile(PATH.dirname(path), PATH.basename(path), getRequest.result, true, true, true);
              ok++;
              if (ok + fail == total) finish();
            };
            getRequest.onerror = function getRequest_onerror() { fail++; if (ok + fail == total) finish() };
          });
          transaction.onerror = onerror;
        };
        openRequest.onerror = onerror;
      }};
  var Browser={mainLoop:{scheduler:null,shouldPause:false,paused:false,queue:[],pause:function () {
          Browser.mainLoop.shouldPause = true;
        },resume:function () {
          if (Browser.mainLoop.paused) {
            Browser.mainLoop.paused = false;
            Browser.mainLoop.scheduler();
          }
          Browser.mainLoop.shouldPause = false;
        },updateStatus:function () {
          if (Module['setStatus']) {
            var message = Module['statusMessage'] || 'Please wait...';
            var remaining = Browser.mainLoop.remainingBlockers;
            var expected = Browser.mainLoop.expectedBlockers;
            if (remaining) {
              if (remaining < expected) {
                Module['setStatus'](message + ' (' + (expected - remaining) + '/' + expected + ')');
              } else {
                Module['setStatus'](message);
              }
            } else {
              Module['setStatus']('');
            }
          }
        }},isFullScreen:false,pointerLock:false,moduleContextCreatedCallbacks:[],workers:[],init:function () {
        if (!Module["preloadPlugins"]) Module["preloadPlugins"] = []; // needs to exist even in workers
        if (Browser.initted || ENVIRONMENT_IS_WORKER) return;
        Browser.initted = true;
        try {
          new Blob();
          Browser.hasBlobConstructor = true;
        } catch(e) {
          Browser.hasBlobConstructor = false;
          console.log("warning: no blob constructor, cannot create blobs with mimetypes");
        }
        Browser.BlobBuilder = typeof MozBlobBuilder != "undefined" ? MozBlobBuilder : (typeof WebKitBlobBuilder != "undefined" ? WebKitBlobBuilder : (!Browser.hasBlobConstructor ? console.log("warning: no BlobBuilder") : null));
        Browser.URLObject = typeof window != "undefined" ? (window.URL ? window.URL : window.webkitURL) : undefined;
        if (!Module.noImageDecoding && typeof Browser.URLObject === 'undefined') {
          console.log("warning: Browser does not support creating object URLs. Built-in browser image decoding will not be available.");
          Module.noImageDecoding = true;
        }
        // Support for plugins that can process preloaded files. You can add more of these to
        // your app by creating and appending to Module.preloadPlugins.
        //
        // Each plugin is asked if it can handle a file based on the file's name. If it can,
        // it is given the file's raw data. When it is done, it calls a callback with the file's
        // (possibly modified) data. For example, a plugin might decompress a file, or it
        // might create some side data structure for use later (like an Image element, etc.).
        var imagePlugin = {};
        imagePlugin['canHandle'] = function imagePlugin_canHandle(name) {
          return !Module.noImageDecoding && /\.(jpg|jpeg|png|bmp)$/i.test(name);
        };
        imagePlugin['handle'] = function imagePlugin_handle(byteArray, name, onload, onerror) {
          var b = null;
          if (Browser.hasBlobConstructor) {
            try {
              b = new Blob([byteArray], { type: Browser.getMimetype(name) });
              if (b.size !== byteArray.length) { // Safari bug #118630
                // Safari's Blob can only take an ArrayBuffer
                b = new Blob([(new Uint8Array(byteArray)).buffer], { type: Browser.getMimetype(name) });
              }
            } catch(e) {
              Runtime.warnOnce('Blob constructor present but fails: ' + e + '; falling back to blob builder');
            }
          }
          if (!b) {
            var bb = new Browser.BlobBuilder();
            bb.append((new Uint8Array(byteArray)).buffer); // we need to pass a buffer, and must copy the array to get the right data range
            b = bb.getBlob();
          }
          var url = Browser.URLObject.createObjectURL(b);
          var img = new Image();
          img.onload = function img_onload() {
            assert(img.complete, 'Image ' + name + ' could not be decoded');
            var canvas = document.createElement('canvas');
            canvas.width = img.width;
            canvas.height = img.height;
            var ctx = canvas.getContext('2d');
            ctx.drawImage(img, 0, 0);
            Module["preloadedImages"][name] = canvas;
            Browser.URLObject.revokeObjectURL(url);
            if (onload) onload(byteArray);
          };
          img.onerror = function img_onerror(event) {
            console.log('Image ' + url + ' could not be decoded');
            if (onerror) onerror();
          };
          img.src = url;
        };
        Module['preloadPlugins'].push(imagePlugin);
        var audioPlugin = {};
        audioPlugin['canHandle'] = function audioPlugin_canHandle(name) {
          return !Module.noAudioDecoding && name.substr(-4) in { '.ogg': 1, '.wav': 1, '.mp3': 1 };
        };
        audioPlugin['handle'] = function audioPlugin_handle(byteArray, name, onload, onerror) {
          var done = false;
          function finish(audio) {
            if (done) return;
            done = true;
            Module["preloadedAudios"][name] = audio;
            if (onload) onload(byteArray);
          }
          function fail() {
            if (done) return;
            done = true;
            Module["preloadedAudios"][name] = new Audio(); // empty shim
            if (onerror) onerror();
          }
          if (Browser.hasBlobConstructor) {
            try {
              var b = new Blob([byteArray], { type: Browser.getMimetype(name) });
            } catch(e) {
              return fail();
            }
            var url = Browser.URLObject.createObjectURL(b); // XXX we never revoke this!
            var audio = new Audio();
            audio.addEventListener('canplaythrough', function() { finish(audio) }, false); // use addEventListener due to chromium bug 124926
            audio.onerror = function audio_onerror(event) {
              if (done) return;
              console.log('warning: browser could not fully decode audio ' + name + ', trying slower base64 approach');
              function encode64(data) {
                var BASE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';
                var PAD = '=';
                var ret = '';
                var leftchar = 0;
                var leftbits = 0;
                for (var i = 0; i < data.length; i++) {
                  leftchar = (leftchar << 8) | data[i];
                  leftbits += 8;
                  while (leftbits >= 6) {
                    var curr = (leftchar >> (leftbits-6)) & 0x3f;
                    leftbits -= 6;
                    ret += BASE[curr];
                  }
                }
                if (leftbits == 2) {
                  ret += BASE[(leftchar&3) << 4];
                  ret += PAD + PAD;
                } else if (leftbits == 4) {
                  ret += BASE[(leftchar&0xf) << 2];
                  ret += PAD;
                }
                return ret;
              }
              audio.src = 'data:audio/x-' + name.substr(-3) + ';base64,' + encode64(byteArray);
              finish(audio); // we don't wait for confirmation this worked - but it's worth trying
            };
            audio.src = url;
            // workaround for chrome bug 124926 - we do not always get oncanplaythrough or onerror
            Browser.safeSetTimeout(function() {
              finish(audio); // try to use it even though it is not necessarily ready to play
            }, 10000);
          } else {
            return fail();
          }
        };
        Module['preloadPlugins'].push(audioPlugin);
        // Canvas event setup
        var canvas = Module['canvas'];
        canvas.requestPointerLock = canvas['requestPointerLock'] ||
                                    canvas['mozRequestPointerLock'] ||
                                    canvas['webkitRequestPointerLock'];
        canvas.exitPointerLock = document['exitPointerLock'] ||
                                 document['mozExitPointerLock'] ||
                                 document['webkitExitPointerLock'] ||
                                 function(){}; // no-op if function does not exist
        canvas.exitPointerLock = canvas.exitPointerLock.bind(document);
        function pointerLockChange() {
          Browser.pointerLock = document['pointerLockElement'] === canvas ||
                                document['mozPointerLockElement'] === canvas ||
                                document['webkitPointerLockElement'] === canvas;
        }
        document.addEventListener('pointerlockchange', pointerLockChange, false);
        document.addEventListener('mozpointerlockchange', pointerLockChange, false);
        document.addEventListener('webkitpointerlockchange', pointerLockChange, false);
        if (Module['elementPointerLock']) {
          canvas.addEventListener("click", function(ev) {
            if (!Browser.pointerLock && canvas.requestPointerLock) {
              canvas.requestPointerLock();
              ev.preventDefault();
            }
          }, false);
        }
      },createContext:function (canvas, useWebGL, setInModule, webGLContextAttributes) {
        var ctx;
        try {
          if (useWebGL) {
            var contextAttributes = {
              antialias: false,
              alpha: false
            };
            if (webGLContextAttributes) {
              for (var attribute in webGLContextAttributes) {
                contextAttributes[attribute] = webGLContextAttributes[attribute];
              }
            }
            var errorInfo = '?';
            function onContextCreationError(event) {
              errorInfo = event.statusMessage || errorInfo;
            }
            canvas.addEventListener('webglcontextcreationerror', onContextCreationError, false);
            try {
              ['experimental-webgl', 'webgl'].some(function(webglId) {
                return ctx = canvas.getContext(webglId, contextAttributes);
              });
            } finally {
              canvas.removeEventListener('webglcontextcreationerror', onContextCreationError, false);
            }
          } else {
            ctx = canvas.getContext('2d');
          }
          if (!ctx) throw ':(';
        } catch (e) {
          Module.print('Could not create canvas: ' + [errorInfo, e]);
          return null;
        }
        if (useWebGL) {
          // Set the background of the WebGL canvas to black
          canvas.style.backgroundColor = "black";
          // Warn on context loss
          canvas.addEventListener('webglcontextlost', function(event) {
            alert('WebGL context lost. You will need to reload the page.');
          }, false);
        }
        if (setInModule) {
          Module.ctx = ctx;
          Module.useWebGL = useWebGL;
          Browser.moduleContextCreatedCallbacks.forEach(function(callback) { callback() });
          Browser.init();
        }
        return ctx;
      },destroyContext:function (canvas, useWebGL, setInModule) {},fullScreenHandlersInstalled:false,lockPointer:undefined,resizeCanvas:undefined,requestFullScreen:function (lockPointer, resizeCanvas) {
        Browser.lockPointer = lockPointer;
        Browser.resizeCanvas = resizeCanvas;
        if (typeof Browser.lockPointer === 'undefined') Browser.lockPointer = true;
        if (typeof Browser.resizeCanvas === 'undefined') Browser.resizeCanvas = false;
        var canvas = Module['canvas'];
        function fullScreenChange() {
          Browser.isFullScreen = false;
          if ((document['webkitFullScreenElement'] || document['webkitFullscreenElement'] ||
               document['mozFullScreenElement'] || document['mozFullscreenElement'] ||
               document['fullScreenElement'] || document['fullscreenElement']) === canvas) {
            canvas.cancelFullScreen = document['cancelFullScreen'] ||
                                      document['mozCancelFullScreen'] ||
                                      document['webkitCancelFullScreen'];
            canvas.cancelFullScreen = canvas.cancelFullScreen.bind(document);
            if (Browser.lockPointer) canvas.requestPointerLock();
            Browser.isFullScreen = true;
            if (Browser.resizeCanvas) Browser.setFullScreenCanvasSize();
          } else if (Browser.resizeCanvas){
            Browser.setWindowedCanvasSize();
          }
          if (Module['onFullScreen']) Module['onFullScreen'](Browser.isFullScreen);
        }
        if (!Browser.fullScreenHandlersInstalled) {
          Browser.fullScreenHandlersInstalled = true;
          document.addEventListener('fullscreenchange', fullScreenChange, false);
          document.addEventListener('mozfullscreenchange', fullScreenChange, false);
          document.addEventListener('webkitfullscreenchange', fullScreenChange, false);
        }
        canvas.requestFullScreen = canvas['requestFullScreen'] ||
                                   canvas['mozRequestFullScreen'] ||
                                   (canvas['webkitRequestFullScreen'] ? function() { canvas['webkitRequestFullScreen'](Element['ALLOW_KEYBOARD_INPUT']) } : null);
        canvas.requestFullScreen();
      },requestAnimationFrame:function requestAnimationFrame(func) {
        if (typeof window === 'undefined') { // Provide fallback to setTimeout if window is undefined (e.g. in Node.js)
          setTimeout(func, 1000/60);
        } else {
          if (!window.requestAnimationFrame) {
            window.requestAnimationFrame = window['requestAnimationFrame'] ||
                                           window['mozRequestAnimationFrame'] ||
                                           window['webkitRequestAnimationFrame'] ||
                                           window['msRequestAnimationFrame'] ||
                                           window['oRequestAnimationFrame'] ||
                                           window['setTimeout'];
          }
          window.requestAnimationFrame(func);
        }
      },safeCallback:function (func) {
        return function() {
          if (!ABORT) return func.apply(null, arguments);
        };
      },safeRequestAnimationFrame:function (func) {
        return Browser.requestAnimationFrame(function() {
          if (!ABORT) func();
        });
      },safeSetTimeout:function (func, timeout) {
        return setTimeout(function() {
          if (!ABORT) func();
        }, timeout);
      },safeSetInterval:function (func, timeout) {
        return setInterval(function() {
          if (!ABORT) func();
        }, timeout);
      },getMimetype:function (name) {
        return {
          'jpg': 'image/jpeg',
          'jpeg': 'image/jpeg',
          'png': 'image/png',
          'bmp': 'image/bmp',
          'ogg': 'audio/ogg',
          'wav': 'audio/wav',
          'mp3': 'audio/mpeg'
        }[name.substr(name.lastIndexOf('.')+1)];
      },getUserMedia:function (func) {
        if(!window.getUserMedia) {
          window.getUserMedia = navigator['getUserMedia'] ||
                                navigator['mozGetUserMedia'];
        }
        window.getUserMedia(func);
      },getMovementX:function (event) {
        return event['movementX'] ||
               event['mozMovementX'] ||
               event['webkitMovementX'] ||
               0;
      },getMovementY:function (event) {
        return event['movementY'] ||
               event['mozMovementY'] ||
               event['webkitMovementY'] ||
               0;
      },mouseX:0,mouseY:0,mouseMovementX:0,mouseMovementY:0,calculateMouseEvent:function (event) { // event should be mousemove, mousedown or mouseup
        if (Browser.pointerLock) {
          // When the pointer is locked, calculate the coordinates
          // based on the movement of the mouse.
          // Workaround for Firefox bug 764498
          if (event.type != 'mousemove' &&
              ('mozMovementX' in event)) {
            Browser.mouseMovementX = Browser.mouseMovementY = 0;
          } else {
            Browser.mouseMovementX = Browser.getMovementX(event);
            Browser.mouseMovementY = Browser.getMovementY(event);
          }
          // check if SDL is available
          if (typeof SDL != "undefined") {
          	Browser.mouseX = SDL.mouseX + Browser.mouseMovementX;
          	Browser.mouseY = SDL.mouseY + Browser.mouseMovementY;
          } else {
          	// just add the mouse delta to the current absolut mouse position
          	// FIXME: ideally this should be clamped against the canvas size and zero
          	Browser.mouseX += Browser.mouseMovementX;
          	Browser.mouseY += Browser.mouseMovementY;
          }        
        } else {
          // Otherwise, calculate the movement based on the changes
          // in the coordinates.
          var rect = Module["canvas"].getBoundingClientRect();
          var x, y;
          if (event.type == 'touchstart' ||
              event.type == 'touchend' ||
              event.type == 'touchmove') {
            var t = event.touches.item(0);
            if (t) {
              x = t.pageX - (window.scrollX + rect.left);
              y = t.pageY - (window.scrollY + rect.top);
            } else {
              return;
            }
          } else {
            x = event.pageX - (window.scrollX + rect.left);
            y = event.pageY - (window.scrollY + rect.top);
          }
          // the canvas might be CSS-scaled compared to its backbuffer;
          // SDL-using content will want mouse coordinates in terms
          // of backbuffer units.
          var cw = Module["canvas"].width;
          var ch = Module["canvas"].height;
          x = x * (cw / rect.width);
          y = y * (ch / rect.height);
          Browser.mouseMovementX = x - Browser.mouseX;
          Browser.mouseMovementY = y - Browser.mouseY;
          Browser.mouseX = x;
          Browser.mouseY = y;
        }
      },xhrLoad:function (url, onload, onerror) {
        var xhr = new XMLHttpRequest();
        xhr.open('GET', url, true);
        xhr.responseType = 'arraybuffer';
        xhr.onload = function xhr_onload() {
          if (xhr.status == 200 || (xhr.status == 0 && xhr.response)) { // file URLs can return 0
            onload(xhr.response);
          } else {
            onerror();
          }
        };
        xhr.onerror = onerror;
        xhr.send(null);
      },asyncLoad:function (url, onload, onerror, noRunDep) {
        Browser.xhrLoad(url, function(arrayBuffer) {
          assert(arrayBuffer, 'Loading data file "' + url + '" failed (no arrayBuffer).');
          onload(new Uint8Array(arrayBuffer));
          if (!noRunDep) removeRunDependency('al ' + url);
        }, function(event) {
          if (onerror) {
            onerror();
          } else {
            throw 'Loading data file "' + url + '" failed.';
          }
        });
        if (!noRunDep) addRunDependency('al ' + url);
      },resizeListeners:[],updateResizeListeners:function () {
        var canvas = Module['canvas'];
        Browser.resizeListeners.forEach(function(listener) {
          listener(canvas.width, canvas.height);
        });
      },setCanvasSize:function (width, height, noUpdates) {
        var canvas = Module['canvas'];
        canvas.width = width;
        canvas.height = height;
        if (!noUpdates) Browser.updateResizeListeners();
      },windowedWidth:0,windowedHeight:0,setFullScreenCanvasSize:function () {
        var canvas = Module['canvas'];
        this.windowedWidth = canvas.width;
        this.windowedHeight = canvas.height;
        canvas.width = screen.width;
        canvas.height = screen.height;
        // check if SDL is available   
        if (typeof SDL != "undefined") {
        	var flags = HEAPU32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)];
        	flags = flags | 0x00800000; // set SDL_FULLSCREEN flag
        	HEAP32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)]=flags
        }
        Browser.updateResizeListeners();
      },setWindowedCanvasSize:function () {
        var canvas = Module['canvas'];
        canvas.width = this.windowedWidth;
        canvas.height = this.windowedHeight;
        // check if SDL is available       
        if (typeof SDL != "undefined") {
        	var flags = HEAPU32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)];
        	flags = flags & ~0x00800000; // clear SDL_FULLSCREEN flag
        	HEAP32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)]=flags
        }
        Browser.updateResizeListeners();
      }};var SDL={defaults:{width:320,height:200,copyOnLock:true},version:null,surfaces:{},canvasPool:[],events:[],fonts:[null],audios:[null],rwops:[null],music:{audio:null,volume:1},mixerFrequency:22050,mixerFormat:32784,mixerNumChannels:2,mixerChunkSize:1024,channelMinimumNumber:0,GL:false,glAttributes:{0:3,1:3,2:2,3:0,4:0,5:1,6:16,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:1,16:0,17:0,18:0},keyboardState:null,keyboardMap:{},canRequestFullscreen:false,isRequestingFullscreen:false,textInput:false,startTime:null,initFlags:0,buttonState:0,modState:0,DOMButtons:[0,0,0],DOMEventToSDLEvent:{},keyCodes:{16:1249,17:1248,18:1250,33:1099,34:1102,37:1104,38:1106,39:1103,40:1105,46:127,96:1112,97:1113,98:1114,99:1115,100:1116,101:1117,102:1118,103:1119,104:1120,105:1121,112:1082,113:1083,114:1084,115:1085,116:1086,117:1087,118:1088,119:1089,120:1090,121:1091,122:1092,123:1093,173:45,188:44,190:46,191:47,192:96},scanCodes:{8:42,9:43,13:40,27:41,32:44,44:54,46:55,47:56,48:39,49:30,50:31,51:32,52:33,53:34,54:35,55:36,56:37,57:38,59:51,61:46,91:47,92:49,93:48,96:52,97:4,98:5,99:6,100:7,101:8,102:9,103:10,104:11,105:12,106:13,107:14,108:15,109:16,110:17,111:18,112:19,113:20,114:21,115:22,116:23,117:24,118:25,119:26,120:27,121:28,122:29,305:224,308:226},loadRect:function (rect) {
        return {
          x: HEAP32[((rect + 0)>>2)],
          y: HEAP32[((rect + 4)>>2)],
          w: HEAP32[((rect + 8)>>2)],
          h: HEAP32[((rect + 12)>>2)]
        };
      },loadColorToCSSRGB:function (color) {
        var rgba = HEAP32[((color)>>2)];
        return 'rgb(' + (rgba&255) + ',' + ((rgba >> 8)&255) + ',' + ((rgba >> 16)&255) + ')';
      },loadColorToCSSRGBA:function (color) {
        var rgba = HEAP32[((color)>>2)];
        return 'rgba(' + (rgba&255) + ',' + ((rgba >> 8)&255) + ',' + ((rgba >> 16)&255) + ',' + (((rgba >> 24)&255)/255) + ')';
      },translateColorToCSSRGBA:function (rgba) {
        return 'rgba(' + (rgba&0xff) + ',' + (rgba>>8 & 0xff) + ',' + (rgba>>16 & 0xff) + ',' + (rgba>>>24)/0xff + ')';
      },translateRGBAToCSSRGBA:function (r, g, b, a) {
        return 'rgba(' + (r&0xff) + ',' + (g&0xff) + ',' + (b&0xff) + ',' + (a&0xff)/255 + ')';
      },translateRGBAToColor:function (r, g, b, a) {
        return r | g << 8 | b << 16 | a << 24;
      },makeSurface:function (width, height, flags, usePageCanvas, source, rmask, gmask, bmask, amask) {
        flags = flags || 0;
        var surf = _malloc(60);  // SDL_Surface has 15 fields of quantum size
        var buffer = _malloc(width*height*4); // TODO: only allocate when locked the first time
        var pixelFormat = _malloc(44);
        flags |= 1; // SDL_HWSURFACE - this tells SDL_MUSTLOCK that this needs to be locked
        //surface with SDL_HWPALETTE flag is 8bpp surface (1 byte)
        var is_SDL_HWPALETTE = flags & 0x00200000;  
        var bpp = is_SDL_HWPALETTE ? 1 : 4;
        HEAP32[((surf)>>2)]=flags         // SDL_Surface.flags
        HEAP32[(((surf)+(4))>>2)]=pixelFormat // SDL_Surface.format TODO
        HEAP32[(((surf)+(8))>>2)]=width         // SDL_Surface.w
        HEAP32[(((surf)+(12))>>2)]=height        // SDL_Surface.h
        HEAP32[(((surf)+(16))>>2)]=width * bpp       // SDL_Surface.pitch, assuming RGBA or indexed for now,
                                                                                 // since that is what ImageData gives us in browsers
        HEAP32[(((surf)+(20))>>2)]=buffer      // SDL_Surface.pixels
        HEAP32[(((surf)+(36))>>2)]=0      // SDL_Surface.offset
        HEAP32[(((surf)+(56))>>2)]=1
        HEAP32[((pixelFormat)>>2)]=0 /* XXX missing C define SDL_PIXELFORMAT_RGBA8888 */ // SDL_PIXELFORMAT_RGBA8888
        HEAP32[(((pixelFormat)+(4))>>2)]=0 // TODO
        HEAP8[(((pixelFormat)+(8))|0)]=bpp * 8
        HEAP8[(((pixelFormat)+(9))|0)]=bpp
        HEAP32[(((pixelFormat)+(12))>>2)]=rmask || 0x000000ff
        HEAP32[(((pixelFormat)+(16))>>2)]=gmask || 0x0000ff00
        HEAP32[(((pixelFormat)+(20))>>2)]=bmask || 0x00ff0000
        HEAP32[(((pixelFormat)+(24))>>2)]=amask || 0xff000000
        // Decide if we want to use WebGL or not
        var useWebGL = (flags & 0x04000000) != 0; // SDL_OPENGL
        SDL.GL = SDL.GL || useWebGL;
        var canvas;
        if (!usePageCanvas) {
          if (SDL.canvasPool.length > 0) {
            canvas = SDL.canvasPool.pop();
          } else {
            canvas = document.createElement('canvas');
          }
          canvas.width = width;
          canvas.height = height;
        } else {
          canvas = Module['canvas'];
        }
        var webGLContextAttributes = {
          antialias: ((SDL.glAttributes[13 /*SDL_GL_MULTISAMPLEBUFFERS*/] != 0) && (SDL.glAttributes[14 /*SDL_GL_MULTISAMPLESAMPLES*/] > 1)),
          depth: (SDL.glAttributes[6 /*SDL_GL_DEPTH_SIZE*/] > 0),
          stencil: (SDL.glAttributes[7 /*SDL_GL_STENCIL_SIZE*/] > 0)
        };
        var ctx = Browser.createContext(canvas, useWebGL, usePageCanvas, webGLContextAttributes);
        SDL.surfaces[surf] = {
          width: width,
          height: height,
          canvas: canvas,
          ctx: ctx,
          surf: surf,
          buffer: buffer,
          pixelFormat: pixelFormat,
          alpha: 255,
          flags: flags,
          locked: 0,
          usePageCanvas: usePageCanvas,
          source: source,
          isFlagSet: function(flag) {
            return flags & flag;
          }
        };
        return surf;
      },copyIndexedColorData:function (surfData, rX, rY, rW, rH) {
        // HWPALETTE works with palette
        // setted by SDL_SetColors
        if (!surfData.colors) {
          return;
        }
        var fullWidth  = Module['canvas'].width;
        var fullHeight = Module['canvas'].height;
        var startX  = rX || 0;
        var startY  = rY || 0;
        var endX    = (rW || (fullWidth - startX)) + startX;
        var endY    = (rH || (fullHeight - startY)) + startY;
        var buffer  = surfData.buffer;
        var data    = surfData.image.data;
        var colors  = surfData.colors;
        for (var y = startY; y < endY; ++y) {
          var indexBase = y * fullWidth;
          var colorBase = indexBase * 4;
          for (var x = startX; x < endX; ++x) {
            // HWPALETTE have only 256 colors (not rgba)
            var index = HEAPU8[((buffer + indexBase + x)|0)] * 3;
            var colorOffset = colorBase + x * 4;
            data[colorOffset   ] = colors[index   ];
            data[colorOffset +1] = colors[index +1];
            data[colorOffset +2] = colors[index +2];
            //unused: data[colorOffset +3] = color[index +3];
          }
        }
      },freeSurface:function (surf) {
        var refcountPointer = surf + 56;
        var refcount = HEAP32[((refcountPointer)>>2)];
        if (refcount > 1) {
          HEAP32[((refcountPointer)>>2)]=refcount - 1;
          return;
        }
        var info = SDL.surfaces[surf];
        if (!info.usePageCanvas && info.canvas) SDL.canvasPool.push(info.canvas);
        _free(info.buffer);
        _free(info.pixelFormat);
        _free(surf);
        SDL.surfaces[surf] = null;
      },touchX:0,touchY:0,savedKeydown:null,receiveEvent:function (event) {
        switch(event.type) {
          case 'touchstart':
            event.preventDefault();
            var touch = event.touches[0];
            touchX = touch.pageX;
            touchY = touch.pageY;
            var event = {
              type: 'mousedown',
              button: 0,
              pageX: touchX,
              pageY: touchY
            };
            SDL.DOMButtons[0] = 1;
            SDL.events.push(event);
            break;
          case 'touchmove':
            event.preventDefault();
            var touch = event.touches[0];
            touchX = touch.pageX;
            touchY = touch.pageY;
            event = {
              type: 'mousemove',
              button: 0,
              pageX: touchX,
              pageY: touchY
            };
            SDL.events.push(event);
            break;
          case 'touchend':
            event.preventDefault();
            event = {
              type: 'mouseup',
              button: 0,
              pageX: touchX,
              pageY: touchY
            };
            SDL.DOMButtons[0] = 0;
            SDL.events.push(event);
            break;
          case 'mousemove':
            if (Browser.pointerLock) {
              // workaround for firefox bug 750111
              if ('mozMovementX' in event) {
                event['movementX'] = event['mozMovementX'];
                event['movementY'] = event['mozMovementY'];
              }
              // workaround for Firefox bug 782777
              if (event['movementX'] == 0 && event['movementY'] == 0) {
                // ignore a mousemove event if it doesn't contain any movement info
                // (without pointer lock, we infer movement from pageX/pageY, so this check is unnecessary)
                event.preventDefault();
                return;
              }
            }
            // fall through
          case 'keydown': case 'keyup': case 'keypress': case 'mousedown': case 'mouseup': case 'DOMMouseScroll': case 'mousewheel':
            // If we preventDefault on keydown events, the subsequent keypress events
            // won't fire. However, it's fine (and in some cases necessary) to
            // preventDefault for keys that don't generate a character. Otherwise,
            // preventDefault is the right thing to do in general.
            if (event.type !== 'keydown' || (event.keyCode === 8 /* backspace */ || event.keyCode === 9 /* tab */)) {
              event.preventDefault();
            }
            if (event.type == 'DOMMouseScroll' || event.type == 'mousewheel') {
              var button = (event.type == 'DOMMouseScroll' ? event.detail : -event.wheelDelta) > 0 ? 4 : 3;
              var event2 = {
                type: 'mousedown',
                button: button,
                pageX: event.pageX,
                pageY: event.pageY
              };
              SDL.events.push(event2);
              event = {
                type: 'mouseup',
                button: button,
                pageX: event.pageX,
                pageY: event.pageY
              };
            } else if (event.type == 'mousedown') {
              SDL.DOMButtons[event.button] = 1;
            } else if (event.type == 'mouseup') {
              // ignore extra ups, can happen if we leave the canvas while pressing down, then return,
              // since we add a mouseup in that case
              if (!SDL.DOMButtons[event.button]) {
                return;
              }
              SDL.DOMButtons[event.button] = 0;
            }
            // We can only request fullscreen as the result of user input.
            // Due to this limitation, we toggle a boolean on keydown which
            // SDL_WM_ToggleFullScreen will check and subsequently set another
            // flag indicating for us to request fullscreen on the following
            // keyup. This isn't perfect, but it enables SDL_WM_ToggleFullScreen
            // to work as the result of a keypress (which is an extremely
            // common use case).
            if (event.type === 'keydown') {
              SDL.canRequestFullscreen = true;
            } else if (event.type === 'keyup') {
              if (SDL.isRequestingFullscreen) {
                Module['requestFullScreen'](true, true);
                SDL.isRequestingFullscreen = false;
              }
              SDL.canRequestFullscreen = false;
            }
            // SDL expects a unicode character to be passed to its keydown events.
            // Unfortunately, the browser APIs only provide a charCode property on
            // keypress events, so we must backfill in keydown events with their
            // subsequent keypress event's charCode.
            if (event.type === 'keypress' && SDL.savedKeydown) {
              // charCode is read-only
              SDL.savedKeydown.keypressCharCode = event.charCode;
              SDL.savedKeydown = null;
            } else if (event.type === 'keydown') {
              SDL.savedKeydown = event;
            }
            // Don't push keypress events unless SDL_StartTextInput has been called.
            if (event.type !== 'keypress' || SDL.textInput) {
              SDL.events.push(event);
            }
            break;
          case 'mouseout':
            // Un-press all pressed mouse buttons, because we might miss the release outside of the canvas
            for (var i = 0; i < 3; i++) {
              if (SDL.DOMButtons[i]) {
                SDL.events.push({
                  type: 'mouseup',
                  button: i,
                  pageX: event.pageX,
                  pageY: event.pageY
                });
                SDL.DOMButtons[i] = 0;
              }
            }
            event.preventDefault();
            break;
          case 'blur':
          case 'visibilitychange': {
            // Un-press all pressed keys: TODO
            for (var code in SDL.keyboardMap) {
              SDL.events.push({
                type: 'keyup',
                keyCode: SDL.keyboardMap[code]
              });
            }
            event.preventDefault();
            break;
          }
          case 'unload':
            if (Browser.mainLoop.runner) {
              SDL.events.push(event);
              // Force-run a main event loop, since otherwise this event will never be caught!
              Browser.mainLoop.runner();
            }
            return;
          case 'resize':
            SDL.events.push(event);
            // manually triggered resize event doesn't have a preventDefault member
            if (event.preventDefault) {
              event.preventDefault();
            }
            break;
        }
        if (SDL.events.length >= 10000) {
          Module.printErr('SDL event queue full, dropping events');
          SDL.events = SDL.events.slice(0, 10000);
        }
        return;
      },handleEvent:function (event) {
        if (event.handled) return;
        event.handled = true;
        switch (event.type) {
          case 'keydown': case 'keyup': {
            var down = event.type === 'keydown';
            var code = event.keyCode;
            if (code >= 65 && code <= 90) {
              code += 32; // make lowercase for SDL
            } else {
              code = SDL.keyCodes[event.keyCode] || event.keyCode;
            }
            HEAP8[(((SDL.keyboardState)+(code))|0)]=down;
            // TODO: lmeta, rmeta, numlock, capslock, KMOD_MODE, KMOD_RESERVED
            SDL.modState = (HEAP8[(((SDL.keyboardState)+(1248))|0)] ? 0x0040 | 0x0080 : 0) | // KMOD_LCTRL & KMOD_RCTRL
              (HEAP8[(((SDL.keyboardState)+(1249))|0)] ? 0x0001 | 0x0002 : 0) | // KMOD_LSHIFT & KMOD_RSHIFT
              (HEAP8[(((SDL.keyboardState)+(1250))|0)] ? 0x0100 | 0x0200 : 0); // KMOD_LALT & KMOD_RALT
            if (down) {
              SDL.keyboardMap[code] = event.keyCode; // save the DOM input, which we can use to unpress it during blur
            } else {
              delete SDL.keyboardMap[code];
            }
            break;
          }
          case 'mousedown': case 'mouseup':
            if (event.type == 'mousedown') {
              // SDL_BUTTON(x) is defined as (1 << ((x)-1)).  SDL buttons are 1-3,
              // and DOM buttons are 0-2, so this means that the below formula is
              // correct.
              SDL.buttonState |= 1 << event.button;
            } else if (event.type == 'mouseup') {
              SDL.buttonState &= ~(1 << event.button);
            }
            // fall through
          case 'mousemove': {
            Browser.calculateMouseEvent(event);
            break;
          }
        }
      },makeCEvent:function (event, ptr) {
        if (typeof event === 'number') {
          // This is a pointer to a native C event that was SDL_PushEvent'ed
          _memcpy(ptr, event, 28); // XXX
          return;
        }
        SDL.handleEvent(event);
        switch (event.type) {
          case 'keydown': case 'keyup': {
            var down = event.type === 'keydown';
            //Module.print('Received key event: ' + event.keyCode);
            var key = event.keyCode;
            if (key >= 65 && key <= 90) {
              key += 32; // make lowercase for SDL
            } else {
              key = SDL.keyCodes[event.keyCode] || event.keyCode;
            }
            var scan;
            if (key >= 1024) {
              scan = key - 1024;
            } else {
              scan = SDL.scanCodes[key] || key;
            }
            HEAP32[((ptr)>>2)]=SDL.DOMEventToSDLEvent[event.type]
            HEAP8[(((ptr)+(8))|0)]=down ? 1 : 0
            HEAP8[(((ptr)+(9))|0)]=0 // TODO
            HEAP32[(((ptr)+(12))>>2)]=scan
            HEAP32[(((ptr)+(16))>>2)]=key
            HEAP16[(((ptr)+(20))>>1)]=SDL.modState
            // some non-character keys (e.g. backspace and tab) won't have keypressCharCode set, fill in with the keyCode.
            HEAP32[(((ptr)+(24))>>2)]=event.keypressCharCode || key
            break;
          }
          case 'keypress': {
            HEAP32[((ptr)>>2)]=SDL.DOMEventToSDLEvent[event.type]
            // Not filling in windowID for now
            var cStr = intArrayFromString(String.fromCharCode(event.charCode));
            for (var i = 0; i < cStr.length; ++i) {
              HEAP8[(((ptr)+(8 + i))|0)]=cStr[i];
            }
            break;
          }
          case 'mousedown': case 'mouseup': case 'mousemove': {
            if (event.type != 'mousemove') {
              var down = event.type === 'mousedown';
              HEAP32[((ptr)>>2)]=SDL.DOMEventToSDLEvent[event.type];
              HEAP8[(((ptr)+(8))|0)]=event.button+1; // DOM buttons are 0-2, SDL 1-3
              HEAP8[(((ptr)+(9))|0)]=down ? 1 : 0;
              HEAP32[(((ptr)+(12))>>2)]=Browser.mouseX;
              HEAP32[(((ptr)+(16))>>2)]=Browser.mouseY;
            } else {
              HEAP32[((ptr)>>2)]=SDL.DOMEventToSDLEvent[event.type];
              HEAP8[(((ptr)+(8))|0)]=SDL.buttonState;
              HEAP32[(((ptr)+(12))>>2)]=Browser.mouseX;
              HEAP32[(((ptr)+(16))>>2)]=Browser.mouseY;
              HEAP32[(((ptr)+(20))>>2)]=Browser.mouseMovementX;
              HEAP32[(((ptr)+(24))>>2)]=Browser.mouseMovementY;
            }
            break;
          }
          case 'unload': {
            HEAP32[((ptr)>>2)]=SDL.DOMEventToSDLEvent[event.type];
            break;
          }
          case 'resize': {
            HEAP32[((ptr)>>2)]=SDL.DOMEventToSDLEvent[event.type];
            HEAP32[(((ptr)+(4))>>2)]=event.w;
            HEAP32[(((ptr)+(8))>>2)]=event.h;
            break;
          }
          case 'joystick_button_up': case 'joystick_button_down': {
            var state = event.type === 'joystick_button_up' ? 0 : 1;
            HEAP32[((ptr)>>2)]=SDL.DOMEventToSDLEvent[event.type];
            HEAP8[(((ptr)+(4))|0)]=event.index;
            HEAP8[(((ptr)+(5))|0)]=event.button;
            HEAP8[(((ptr)+(6))|0)]=state;
            break;
          }
          case 'joystick_axis_motion': {
            HEAP32[((ptr)>>2)]=SDL.DOMEventToSDLEvent[event.type];
            HEAP8[(((ptr)+(4))|0)]=event.index;
            HEAP8[(((ptr)+(5))|0)]=event.axis;
            HEAP32[(((ptr)+(8))>>2)]=SDL.joystickAxisValueConversion(event.value);
            break;
          }
          default: throw 'Unhandled SDL event: ' + event.type;
        }
      },estimateTextWidth:function (fontData, text) {
        var h = fontData.size;
        var fontString = h + 'px ' + fontData.name;
        var tempCtx = SDL.ttfContext;
        tempCtx.save();
        tempCtx.font = fontString;
        var ret = tempCtx.measureText(text).width | 0;
        tempCtx.restore();
        return ret;
      },allocateChannels:function (num) { // called from Mix_AllocateChannels and init
        if (SDL.numChannels && SDL.numChannels >= num && num != 0) return;
        SDL.numChannels = num;
        SDL.channels = [];
        for (var i = 0; i < num; i++) {
          SDL.channels[i] = {
            audio: null,
            volume: 1.0
          };
        }
      },setGetVolume:function (info, volume) {
        if (!info) return 0;
        var ret = info.volume * 128; // MIX_MAX_VOLUME
        if (volume != -1) {
          info.volume = volume / 128;
          if (info.audio) info.audio.volume = info.volume;
        }
        return ret;
      },debugSurface:function (surfData) {
        console.log('dumping surface ' + [surfData.surf, surfData.source, surfData.width, surfData.height]);
        var image = surfData.ctx.getImageData(0, 0, surfData.width, surfData.height);
        var data = image.data;
        var num = Math.min(surfData.width, surfData.height);
        for (var i = 0; i < num; i++) {
          console.log('   diagonal ' + i + ':' + [data[i*surfData.width*4 + i*4 + 0], data[i*surfData.width*4 + i*4 + 1], data[i*surfData.width*4 + i*4 + 2], data[i*surfData.width*4 + i*4 + 3]]);
        }
      },joystickEventState:1,lastJoystickState:{},joystickNamePool:{},recordJoystickState:function (joystick, state) {
        // Standardize button state.
        var buttons = new Array(state.buttons.length);
        for (var i = 0; i < state.buttons.length; i++) {
          buttons[i] = SDL.getJoystickButtonState(state.buttons[i]);
        }
        SDL.lastJoystickState[joystick] = {
          buttons: buttons,
          axes: state.axes.slice(0),
          timestamp: state.timestamp,
          index: state.index,
          id: state.id
        };
      },getJoystickButtonState:function (button) {
        if (typeof button === 'object') {
          // Current gamepad API editor's draft (Firefox Nightly)
          // https://dvcs.w3.org/hg/gamepad/raw-file/default/gamepad.html#idl-def-GamepadButton
          return button.pressed;
        } else {
          // Current gamepad API working draft (Firefox / Chrome Stable)
          // http://www.w3.org/TR/2012/WD-gamepad-20120529/#gamepad-interface
          return button > 0;
        }
      },queryJoysticks:function () {
        for (var joystick in SDL.lastJoystickState) {
          var state = SDL.getGamepad(joystick - 1);
          var prevState = SDL.lastJoystickState[joystick];
          // Check only if the timestamp has differed.
          // NOTE: Timestamp is not available in Firefox.
          if (typeof state.timestamp !== 'number' || state.timestamp !== prevState.timestamp) {
            var i;
            for (i = 0; i < state.buttons.length; i++) {
              var buttonState = SDL.getJoystickButtonState(state.buttons[i]);
              // NOTE: The previous state already has a boolean representation of
              //       its button, so no need to standardize its button state here.
              if (buttonState !== prevState.buttons[i]) {
                // Insert button-press event.
                SDL.events.push({
                  type: buttonState ? 'joystick_button_down' : 'joystick_button_up',
                  joystick: joystick,
                  index: joystick - 1,
                  button: i
                });
              }
            }
            for (i = 0; i < state.axes.length; i++) {
              if (state.axes[i] !== prevState.axes[i]) {
                // Insert axes-change event.
                SDL.events.push({
                  type: 'joystick_axis_motion',
                  joystick: joystick,
                  index: joystick - 1,
                  axis: i,
                  value: state.axes[i]
                });
              }
            }
            SDL.recordJoystickState(joystick, state);
          }
        }
      },joystickAxisValueConversion:function (value) {
        // Ensures that 0 is 0, 1 is 32767, and -1 is 32768.
        return Math.ceil(((value+1) * 32767.5) - 32768);
      },getGamepads:function () {
        var fcn = navigator.getGamepads || navigator.webkitGamepads || navigator.mozGamepads || navigator.gamepads || navigator.webkitGetGamepads;
        if (fcn !== undefined) {
          // The function must be applied on the navigator object.
          return fcn.apply(navigator);
        } else {
          return [];
        }
      },getGamepad:function (deviceIndex) {
        var gamepads = SDL.getGamepads();
        if (gamepads.length > deviceIndex && deviceIndex >= 0) {
          return gamepads[deviceIndex];
        }
        return null;
      }};function _SDL_PollEvent(ptr) {
      if (SDL.initFlags & 0x200 && SDL.joystickEventState) {
        // If SDL_INIT_JOYSTICK was supplied AND the joystick system is configured
        // to automatically query for events, query for joystick events.
        SDL.queryJoysticks();
      }
      if (SDL.events.length === 0) return 0;
      if (ptr) {
        SDL.makeCEvent(SDL.events.shift(), ptr);
      }
      return 1;
    }
  function _emscripten_get_canvas_size(width, height, isFullscreen) {
      var canvas = Module['canvas'];
      HEAP32[((width)>>2)]=canvas.width;
      HEAP32[((height)>>2)]=canvas.height;
      HEAP32[((isFullscreen)>>2)]=Browser.isFullScreen ? 1 : 0;
    }
  var _mkport=undefined;var SOCKFS={mount:function (mount) {
        return FS.createNode(null, '/', 16384 | 0777, 0);
      },createSocket:function (family, type, protocol) {
        var streaming = type == 1;
        if (protocol) {
          assert(streaming == (protocol == 6)); // if SOCK_STREAM, must be tcp
        }
        // create our internal socket structure
        var sock = {
          family: family,
          type: type,
          protocol: protocol,
          server: null,
          peers: {},
          pending: [],
          recv_queue: [],
          sock_ops: SOCKFS.websocket_sock_ops
        };
        // create the filesystem node to store the socket structure
        var name = SOCKFS.nextname();
        var node = FS.createNode(SOCKFS.root, name, 49152, 0);
        node.sock = sock;
        // and the wrapping stream that enables library functions such
        // as read and write to indirectly interact with the socket
        var stream = FS.createStream({
          path: name,
          node: node,
          flags: FS.modeStringToFlags('r+'),
          seekable: false,
          stream_ops: SOCKFS.stream_ops
        });
        // map the new stream to the socket structure (sockets have a 1:1
        // relationship with a stream)
        sock.stream = stream;
        return sock;
      },getSocket:function (fd) {
        var stream = FS.getStream(fd);
        if (!stream || !FS.isSocket(stream.node.mode)) {
          return null;
        }
        return stream.node.sock;
      },stream_ops:{poll:function (stream) {
          var sock = stream.node.sock;
          return sock.sock_ops.poll(sock);
        },ioctl:function (stream, request, varargs) {
          var sock = stream.node.sock;
          return sock.sock_ops.ioctl(sock, request, varargs);
        },read:function (stream, buffer, offset, length, position /* ignored */) {
          var sock = stream.node.sock;
          var msg = sock.sock_ops.recvmsg(sock, length);
          if (!msg) {
            // socket is closed
            return 0;
          }
          buffer.set(msg.buffer, offset);
          return msg.buffer.length;
        },write:function (stream, buffer, offset, length, position /* ignored */) {
          var sock = stream.node.sock;
          return sock.sock_ops.sendmsg(sock, buffer, offset, length);
        },close:function (stream) {
          var sock = stream.node.sock;
          sock.sock_ops.close(sock);
        }},nextname:function () {
        if (!SOCKFS.nextname.current) {
          SOCKFS.nextname.current = 0;
        }
        return 'socket[' + (SOCKFS.nextname.current++) + ']';
      },websocket_sock_ops:{createPeer:function (sock, addr, port) {
          var ws;
          if (typeof addr === 'object') {
            ws = addr;
            addr = null;
            port = null;
          }
          if (ws) {
            // for sockets that've already connected (e.g. we're the server)
            // we can inspect the _socket property for the address
            if (ws._socket) {
              addr = ws._socket.remoteAddress;
              port = ws._socket.remotePort;
            }
            // if we're just now initializing a connection to the remote,
            // inspect the url property
            else {
              var result = /ws[s]?:\/\/([^:]+):(\d+)/.exec(ws.url);
              if (!result) {
                throw new Error('WebSocket URL must be in the format ws(s)://address:port');
              }
              addr = result[1];
              port = parseInt(result[2], 10);
            }
          } else {
            // create the actual websocket object and connect
            try {
              var url = 'ws://' + addr + ':' + port;
              // the node ws library API is slightly different than the browser's
              var opts = ENVIRONMENT_IS_NODE ? {headers: {'websocket-protocol': ['binary']}} : ['binary'];
              // If node we use the ws library.
              var WebSocket = ENVIRONMENT_IS_NODE ? require('ws') : window['WebSocket'];
              ws = new WebSocket(url, opts);
              ws.binaryType = 'arraybuffer';
            } catch (e) {
              throw new FS.ErrnoError(ERRNO_CODES.EHOSTUNREACH);
            }
          }
          var peer = {
            addr: addr,
            port: port,
            socket: ws,
            dgram_send_queue: []
          };
          SOCKFS.websocket_sock_ops.addPeer(sock, peer);
          SOCKFS.websocket_sock_ops.handlePeerEvents(sock, peer);
          // if this is a bound dgram socket, send the port number first to allow
          // us to override the ephemeral port reported to us by remotePort on the
          // remote end.
          if (sock.type === 2 && typeof sock.sport !== 'undefined') {
            peer.dgram_send_queue.push(new Uint8Array([
                255, 255, 255, 255,
                'p'.charCodeAt(0), 'o'.charCodeAt(0), 'r'.charCodeAt(0), 't'.charCodeAt(0),
                ((sock.sport & 0xff00) >> 8) , (sock.sport & 0xff)
            ]));
          }
          return peer;
        },getPeer:function (sock, addr, port) {
          return sock.peers[addr + ':' + port];
        },addPeer:function (sock, peer) {
          sock.peers[peer.addr + ':' + peer.port] = peer;
        },removePeer:function (sock, peer) {
          delete sock.peers[peer.addr + ':' + peer.port];
        },handlePeerEvents:function (sock, peer) {
          var first = true;
          var handleOpen = function () {
            try {
              var queued = peer.dgram_send_queue.shift();
              while (queued) {
                peer.socket.send(queued);
                queued = peer.dgram_send_queue.shift();
              }
            } catch (e) {
              // not much we can do here in the way of proper error handling as we've already
              // lied and said this data was sent. shut it down.
              peer.socket.close();
            }
          };
          function handleMessage(data) {
            assert(typeof data !== 'string' && data.byteLength !== undefined);  // must receive an ArrayBuffer
            data = new Uint8Array(data);  // make a typed array view on the array buffer
            // if this is the port message, override the peer's port with it
            var wasfirst = first;
            first = false;
            if (wasfirst &&
                data.length === 10 &&
                data[0] === 255 && data[1] === 255 && data[2] === 255 && data[3] === 255 &&
                data[4] === 'p'.charCodeAt(0) && data[5] === 'o'.charCodeAt(0) && data[6] === 'r'.charCodeAt(0) && data[7] === 't'.charCodeAt(0)) {
              // update the peer's port and it's key in the peer map
              var newport = ((data[8] << 8) | data[9]);
              SOCKFS.websocket_sock_ops.removePeer(sock, peer);
              peer.port = newport;
              SOCKFS.websocket_sock_ops.addPeer(sock, peer);
              return;
            }
            sock.recv_queue.push({ addr: peer.addr, port: peer.port, data: data });
          };
          if (ENVIRONMENT_IS_NODE) {
            peer.socket.on('open', handleOpen);
            peer.socket.on('message', function(data, flags) {
              if (!flags.binary) {
                return;
              }
              handleMessage((new Uint8Array(data)).buffer);  // copy from node Buffer -> ArrayBuffer
            });
            peer.socket.on('error', function() {
              // don't throw
            });
          } else {
            peer.socket.onopen = handleOpen;
            peer.socket.onmessage = function peer_socket_onmessage(event) {
              handleMessage(event.data);
            };
          }
        },poll:function (sock) {
          if (sock.type === 1 && sock.server) {
            // listen sockets should only say they're available for reading
            // if there are pending clients.
            return sock.pending.length ? (64 | 1) : 0;
          }
          var mask = 0;
          var dest = sock.type === 1 ?  // we only care about the socket state for connection-based sockets
            SOCKFS.websocket_sock_ops.getPeer(sock, sock.daddr, sock.dport) :
            null;
          if (sock.recv_queue.length ||
              !dest ||  // connection-less sockets are always ready to read
              (dest && dest.socket.readyState === dest.socket.CLOSING) ||
              (dest && dest.socket.readyState === dest.socket.CLOSED)) {  // let recv return 0 once closed
            mask |= (64 | 1);
          }
          if (!dest ||  // connection-less sockets are always ready to write
              (dest && dest.socket.readyState === dest.socket.OPEN)) {
            mask |= 4;
          }
          if ((dest && dest.socket.readyState === dest.socket.CLOSING) ||
              (dest && dest.socket.readyState === dest.socket.CLOSED)) {
            mask |= 16;
          }
          return mask;
        },ioctl:function (sock, request, arg) {
          switch (request) {
            case 21531:
              var bytes = 0;
              if (sock.recv_queue.length) {
                bytes = sock.recv_queue[0].data.length;
              }
              HEAP32[((arg)>>2)]=bytes;
              return 0;
            default:
              return ERRNO_CODES.EINVAL;
          }
        },close:function (sock) {
          // if we've spawned a listen server, close it
          if (sock.server) {
            try {
              sock.server.close();
            } catch (e) {
            }
            sock.server = null;
          }
          // close any peer connections
          var peers = Object.keys(sock.peers);
          for (var i = 0; i < peers.length; i++) {
            var peer = sock.peers[peers[i]];
            try {
              peer.socket.close();
            } catch (e) {
            }
            SOCKFS.websocket_sock_ops.removePeer(sock, peer);
          }
          return 0;
        },bind:function (sock, addr, port) {
          if (typeof sock.saddr !== 'undefined' || typeof sock.sport !== 'undefined') {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);  // already bound
          }
          sock.saddr = addr;
          sock.sport = port || _mkport();
          // in order to emulate dgram sockets, we need to launch a listen server when
          // binding on a connection-less socket
          // note: this is only required on the server side
          if (sock.type === 2) {
            // close the existing server if it exists
            if (sock.server) {
              sock.server.close();
              sock.server = null;
            }
            // swallow error operation not supported error that occurs when binding in the
            // browser where this isn't supported
            try {
              sock.sock_ops.listen(sock, 0);
            } catch (e) {
              if (!(e instanceof FS.ErrnoError)) throw e;
              if (e.errno !== ERRNO_CODES.EOPNOTSUPP) throw e;
            }
          }
        },connect:function (sock, addr, port) {
          if (sock.server) {
            throw new FS.ErrnoError(ERRNO_CODS.EOPNOTSUPP);
          }
          // TODO autobind
          // if (!sock.addr && sock.type == 2) {
          // }
          // early out if we're already connected / in the middle of connecting
          if (typeof sock.daddr !== 'undefined' && typeof sock.dport !== 'undefined') {
            var dest = SOCKFS.websocket_sock_ops.getPeer(sock, sock.daddr, sock.dport);
            if (dest) {
              if (dest.socket.readyState === dest.socket.CONNECTING) {
                throw new FS.ErrnoError(ERRNO_CODES.EALREADY);
              } else {
                throw new FS.ErrnoError(ERRNO_CODES.EISCONN);
              }
            }
          }
          // add the socket to our peer list and set our
          // destination address / port to match
          var peer = SOCKFS.websocket_sock_ops.createPeer(sock, addr, port);
          sock.daddr = peer.addr;
          sock.dport = peer.port;
          // always "fail" in non-blocking mode
          throw new FS.ErrnoError(ERRNO_CODES.EINPROGRESS);
        },listen:function (sock, backlog) {
          if (!ENVIRONMENT_IS_NODE) {
            throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP);
          }
          if (sock.server) {
             throw new FS.ErrnoError(ERRNO_CODES.EINVAL);  // already listening
          }
          var WebSocketServer = require('ws').Server;
          var host = sock.saddr;
          sock.server = new WebSocketServer({
            host: host,
            port: sock.sport
            // TODO support backlog
          });
          sock.server.on('connection', function(ws) {
            if (sock.type === 1) {
              var newsock = SOCKFS.createSocket(sock.family, sock.type, sock.protocol);
              // create a peer on the new socket
              var peer = SOCKFS.websocket_sock_ops.createPeer(newsock, ws);
              newsock.daddr = peer.addr;
              newsock.dport = peer.port;
              // push to queue for accept to pick up
              sock.pending.push(newsock);
            } else {
              // create a peer on the listen socket so calling sendto
              // with the listen socket and an address will resolve
              // to the correct client
              SOCKFS.websocket_sock_ops.createPeer(sock, ws);
            }
          });
          sock.server.on('closed', function() {
            sock.server = null;
          });
          sock.server.on('error', function() {
            // don't throw
          });
        },accept:function (listensock) {
          if (!listensock.server) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          var newsock = listensock.pending.shift();
          newsock.stream.flags = listensock.stream.flags;
          return newsock;
        },getname:function (sock, peer) {
          var addr, port;
          if (peer) {
            if (sock.daddr === undefined || sock.dport === undefined) {
              throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);
            }
            addr = sock.daddr;
            port = sock.dport;
          } else {
            // TODO saddr and sport will be set for bind()'d UDP sockets, but what
            // should we be returning for TCP sockets that've been connect()'d?
            addr = sock.saddr || 0;
            port = sock.sport || 0;
          }
          return { addr: addr, port: port };
        },sendmsg:function (sock, buffer, offset, length, addr, port) {
          if (sock.type === 2) {
            // connection-less sockets will honor the message address,
            // and otherwise fall back to the bound destination address
            if (addr === undefined || port === undefined) {
              addr = sock.daddr;
              port = sock.dport;
            }
            // if there was no address to fall back to, error out
            if (addr === undefined || port === undefined) {
              throw new FS.ErrnoError(ERRNO_CODES.EDESTADDRREQ);
            }
          } else {
            // connection-based sockets will only use the bound
            addr = sock.daddr;
            port = sock.dport;
          }
          // find the peer for the destination address
          var dest = SOCKFS.websocket_sock_ops.getPeer(sock, addr, port);
          // early out if not connected with a connection-based socket
          if (sock.type === 1) {
            if (!dest || dest.socket.readyState === dest.socket.CLOSING || dest.socket.readyState === dest.socket.CLOSED) {
              throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);
            } else if (dest.socket.readyState === dest.socket.CONNECTING) {
              throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
            }
          }
          // create a copy of the incoming data to send, as the WebSocket API
          // doesn't work entirely with an ArrayBufferView, it'll just send
          // the entire underlying buffer
          var data;
          if (buffer instanceof Array || buffer instanceof ArrayBuffer) {
            data = buffer.slice(offset, offset + length);
          } else {  // ArrayBufferView
            data = buffer.buffer.slice(buffer.byteOffset + offset, buffer.byteOffset + offset + length);
          }
          // if we're emulating a connection-less dgram socket and don't have
          // a cached connection, queue the buffer to send upon connect and
          // lie, saying the data was sent now.
          if (sock.type === 2) {
            if (!dest || dest.socket.readyState !== dest.socket.OPEN) {
              // if we're not connected, open a new connection
              if (!dest || dest.socket.readyState === dest.socket.CLOSING || dest.socket.readyState === dest.socket.CLOSED) {
                dest = SOCKFS.websocket_sock_ops.createPeer(sock, addr, port);
              }
              dest.dgram_send_queue.push(data);
              return length;
            }
          }
          try {
            // send the actual data
            dest.socket.send(data);
            return length;
          } catch (e) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
        },recvmsg:function (sock, length) {
          // http://pubs.opengroup.org/onlinepubs/7908799/xns/recvmsg.html
          if (sock.type === 1 && sock.server) {
            // tcp servers should not be recv()'ing on the listen socket
            throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);
          }
          var queued = sock.recv_queue.shift();
          if (!queued) {
            if (sock.type === 1) {
              var dest = SOCKFS.websocket_sock_ops.getPeer(sock, sock.daddr, sock.dport);
              if (!dest) {
                // if we have a destination address but are not connected, error out
                throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);
              }
              else if (dest.socket.readyState === dest.socket.CLOSING || dest.socket.readyState === dest.socket.CLOSED) {
                // return null if the socket has closed
                return null;
              }
              else {
                // else, our socket is in a valid state but truly has nothing available
                throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
              }
            } else {
              throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
            }
          }
          // queued.data will be an ArrayBuffer if it's unadulterated, but if it's
          // requeued TCP data it'll be an ArrayBufferView
          var queuedLength = queued.data.byteLength || queued.data.length;
          var queuedOffset = queued.data.byteOffset || 0;
          var queuedBuffer = queued.data.buffer || queued.data;
          var bytesRead = Math.min(length, queuedLength);
          var res = {
            buffer: new Uint8Array(queuedBuffer, queuedOffset, bytesRead),
            addr: queued.addr,
            port: queued.port
          };
          // push back any unread data for TCP connections
          if (sock.type === 1 && bytesRead < queuedLength) {
            var bytesRemaining = queuedLength - bytesRead;
            queued.data = new Uint8Array(queuedBuffer, queuedOffset + bytesRead, bytesRemaining);
            sock.recv_queue.unshift(queued);
          }
          return res;
        }}};function _send(fd, buf, len, flags) {
      var sock = SOCKFS.getSocket(fd);
      if (!sock) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      // TODO honor flags
      return _write(fd, buf, len);
    }
  function _pwrite(fildes, buf, nbyte, offset) {
      // ssize_t pwrite(int fildes, const void *buf, size_t nbyte, off_t offset);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/write.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      try {
        var slab = HEAP8;
        return FS.write(stream, slab, buf, nbyte, offset);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _write(fildes, buf, nbyte) {
      // ssize_t write(int fildes, const void *buf, size_t nbyte);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/write.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      try {
        var slab = HEAP8;
        return FS.write(stream, slab, buf, nbyte);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _fwrite(ptr, size, nitems, stream) {
      // size_t fwrite(const void *restrict ptr, size_t size, size_t nitems, FILE *restrict stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fwrite.html
      var bytesToWrite = nitems * size;
      if (bytesToWrite == 0) return 0;
      var bytesWritten = _write(stream, ptr, bytesToWrite);
      if (bytesWritten == -1) {
        var streamObj = FS.getStream(stream);
        if (streamObj) streamObj.error = true;
        return 0;
      } else {
        return Math.floor(bytesWritten / size);
      }
    }
  Module["_strlen"] = _strlen;
  function __reallyNegative(x) {
      return x < 0 || (x === 0 && (1/x) === -Infinity);
    }function __formatString(format, varargs) {
      var textIndex = format;
      var argIndex = 0;
      function getNextArg(type) {
        // NOTE: Explicitly ignoring type safety. Otherwise this fails:
        //       int x = 4; printf("%c\n", (char)x);
        var ret;
        if (type === 'double') {
          ret = HEAPF64[(((varargs)+(argIndex))>>3)];
        } else if (type == 'i64') {
          ret = [HEAP32[(((varargs)+(argIndex))>>2)],
                 HEAP32[(((varargs)+(argIndex+8))>>2)]];
          argIndex += 8; // each 32-bit chunk is in a 64-bit block
        } else {
          type = 'i32'; // varargs are always i32, i64, or double
          ret = HEAP32[(((varargs)+(argIndex))>>2)];
        }
        argIndex += Math.max(Runtime.getNativeFieldSize(type), Runtime.getAlignSize(type, null, true));
        return ret;
      }
      var ret = [];
      var curr, next, currArg;
      while(1) {
        var startTextIndex = textIndex;
        curr = HEAP8[(textIndex)];
        if (curr === 0) break;
        next = HEAP8[((textIndex+1)|0)];
        if (curr == 37) {
          // Handle flags.
          var flagAlwaysSigned = false;
          var flagLeftAlign = false;
          var flagAlternative = false;
          var flagZeroPad = false;
          var flagPadSign = false;
          flagsLoop: while (1) {
            switch (next) {
              case 43:
                flagAlwaysSigned = true;
                break;
              case 45:
                flagLeftAlign = true;
                break;
              case 35:
                flagAlternative = true;
                break;
              case 48:
                if (flagZeroPad) {
                  break flagsLoop;
                } else {
                  flagZeroPad = true;
                  break;
                }
              case 32:
                flagPadSign = true;
                break;
              default:
                break flagsLoop;
            }
            textIndex++;
            next = HEAP8[((textIndex+1)|0)];
          }
          // Handle width.
          var width = 0;
          if (next == 42) {
            width = getNextArg('i32');
            textIndex++;
            next = HEAP8[((textIndex+1)|0)];
          } else {
            while (next >= 48 && next <= 57) {
              width = width * 10 + (next - 48);
              textIndex++;
              next = HEAP8[((textIndex+1)|0)];
            }
          }
          // Handle precision.
          var precisionSet = false;
          if (next == 46) {
            var precision = 0;
            precisionSet = true;
            textIndex++;
            next = HEAP8[((textIndex+1)|0)];
            if (next == 42) {
              precision = getNextArg('i32');
              textIndex++;
            } else {
              while(1) {
                var precisionChr = HEAP8[((textIndex+1)|0)];
                if (precisionChr < 48 ||
                    precisionChr > 57) break;
                precision = precision * 10 + (precisionChr - 48);
                textIndex++;
              }
            }
            next = HEAP8[((textIndex+1)|0)];
          } else {
            var precision = 6; // Standard default.
          }
          // Handle integer sizes. WARNING: These assume a 32-bit architecture!
          var argSize;
          switch (String.fromCharCode(next)) {
            case 'h':
              var nextNext = HEAP8[((textIndex+2)|0)];
              if (nextNext == 104) {
                textIndex++;
                argSize = 1; // char (actually i32 in varargs)
              } else {
                argSize = 2; // short (actually i32 in varargs)
              }
              break;
            case 'l':
              var nextNext = HEAP8[((textIndex+2)|0)];
              if (nextNext == 108) {
                textIndex++;
                argSize = 8; // long long
              } else {
                argSize = 4; // long
              }
              break;
            case 'L': // long long
            case 'q': // int64_t
            case 'j': // intmax_t
              argSize = 8;
              break;
            case 'z': // size_t
            case 't': // ptrdiff_t
            case 'I': // signed ptrdiff_t or unsigned size_t
              argSize = 4;
              break;
            default:
              argSize = null;
          }
          if (argSize) textIndex++;
          next = HEAP8[((textIndex+1)|0)];
          // Handle type specifier.
          switch (String.fromCharCode(next)) {
            case 'd': case 'i': case 'u': case 'o': case 'x': case 'X': case 'p': {
              // Integer.
              var signed = next == 100 || next == 105;
              argSize = argSize || 4;
              var currArg = getNextArg('i' + (argSize * 8));
              var origArg = currArg;
              var argText;
              // Flatten i64-1 [low, high] into a (slightly rounded) double
              if (argSize == 8) {
                currArg = Runtime.makeBigInt(currArg[0], currArg[1], next == 117);
              }
              // Truncate to requested size.
              if (argSize <= 4) {
                var limit = Math.pow(256, argSize) - 1;
                currArg = (signed ? reSign : unSign)(currArg & limit, argSize * 8);
              }
              // Format the number.
              var currAbsArg = Math.abs(currArg);
              var prefix = '';
              if (next == 100 || next == 105) {
                if (argSize == 8 && i64Math) argText = i64Math.stringify(origArg[0], origArg[1], null); else
                argText = reSign(currArg, 8 * argSize, 1).toString(10);
              } else if (next == 117) {
                if (argSize == 8 && i64Math) argText = i64Math.stringify(origArg[0], origArg[1], true); else
                argText = unSign(currArg, 8 * argSize, 1).toString(10);
                currArg = Math.abs(currArg);
              } else if (next == 111) {
                argText = (flagAlternative ? '0' : '') + currAbsArg.toString(8);
              } else if (next == 120 || next == 88) {
                prefix = (flagAlternative && currArg != 0) ? '0x' : '';
                if (argSize == 8 && i64Math) {
                  if (origArg[1]) {
                    argText = (origArg[1]>>>0).toString(16);
                    var lower = (origArg[0]>>>0).toString(16);
                    while (lower.length < 8) lower = '0' + lower;
                    argText += lower;
                  } else {
                    argText = (origArg[0]>>>0).toString(16);
                  }
                } else
                if (currArg < 0) {
                  // Represent negative numbers in hex as 2's complement.
                  currArg = -currArg;
                  argText = (currAbsArg - 1).toString(16);
                  var buffer = [];
                  for (var i = 0; i < argText.length; i++) {
                    buffer.push((0xF - parseInt(argText[i], 16)).toString(16));
                  }
                  argText = buffer.join('');
                  while (argText.length < argSize * 2) argText = 'f' + argText;
                } else {
                  argText = currAbsArg.toString(16);
                }
                if (next == 88) {
                  prefix = prefix.toUpperCase();
                  argText = argText.toUpperCase();
                }
              } else if (next == 112) {
                if (currAbsArg === 0) {
                  argText = '(nil)';
                } else {
                  prefix = '0x';
                  argText = currAbsArg.toString(16);
                }
              }
              if (precisionSet) {
                while (argText.length < precision) {
                  argText = '0' + argText;
                }
              }
              // Add sign if needed
              if (currArg >= 0) {
                if (flagAlwaysSigned) {
                  prefix = '+' + prefix;
                } else if (flagPadSign) {
                  prefix = ' ' + prefix;
                }
              }
              // Move sign to prefix so we zero-pad after the sign
              if (argText.charAt(0) == '-') {
                prefix = '-' + prefix;
                argText = argText.substr(1);
              }
              // Add padding.
              while (prefix.length + argText.length < width) {
                if (flagLeftAlign) {
                  argText += ' ';
                } else {
                  if (flagZeroPad) {
                    argText = '0' + argText;
                  } else {
                    prefix = ' ' + prefix;
                  }
                }
              }
              // Insert the result into the buffer.
              argText = prefix + argText;
              argText.split('').forEach(function(chr) {
                ret.push(chr.charCodeAt(0));
              });
              break;
            }
            case 'f': case 'F': case 'e': case 'E': case 'g': case 'G': {
              // Float.
              var currArg = getNextArg('double');
              var argText;
              if (isNaN(currArg)) {
                argText = 'nan';
                flagZeroPad = false;
              } else if (!isFinite(currArg)) {
                argText = (currArg < 0 ? '-' : '') + 'inf';
                flagZeroPad = false;
              } else {
                var isGeneral = false;
                var effectivePrecision = Math.min(precision, 20);
                // Convert g/G to f/F or e/E, as per:
                // http://pubs.opengroup.org/onlinepubs/9699919799/functions/printf.html
                if (next == 103 || next == 71) {
                  isGeneral = true;
                  precision = precision || 1;
                  var exponent = parseInt(currArg.toExponential(effectivePrecision).split('e')[1], 10);
                  if (precision > exponent && exponent >= -4) {
                    next = ((next == 103) ? 'f' : 'F').charCodeAt(0);
                    precision -= exponent + 1;
                  } else {
                    next = ((next == 103) ? 'e' : 'E').charCodeAt(0);
                    precision--;
                  }
                  effectivePrecision = Math.min(precision, 20);
                }
                if (next == 101 || next == 69) {
                  argText = currArg.toExponential(effectivePrecision);
                  // Make sure the exponent has at least 2 digits.
                  if (/[eE][-+]\d$/.test(argText)) {
                    argText = argText.slice(0, -1) + '0' + argText.slice(-1);
                  }
                } else if (next == 102 || next == 70) {
                  argText = currArg.toFixed(effectivePrecision);
                  if (currArg === 0 && __reallyNegative(currArg)) {
                    argText = '-' + argText;
                  }
                }
                var parts = argText.split('e');
                if (isGeneral && !flagAlternative) {
                  // Discard trailing zeros and periods.
                  while (parts[0].length > 1 && parts[0].indexOf('.') != -1 &&
                         (parts[0].slice(-1) == '0' || parts[0].slice(-1) == '.')) {
                    parts[0] = parts[0].slice(0, -1);
                  }
                } else {
                  // Make sure we have a period in alternative mode.
                  if (flagAlternative && argText.indexOf('.') == -1) parts[0] += '.';
                  // Zero pad until required precision.
                  while (precision > effectivePrecision++) parts[0] += '0';
                }
                argText = parts[0] + (parts.length > 1 ? 'e' + parts[1] : '');
                // Capitalize 'E' if needed.
                if (next == 69) argText = argText.toUpperCase();
                // Add sign.
                if (currArg >= 0) {
                  if (flagAlwaysSigned) {
                    argText = '+' + argText;
                  } else if (flagPadSign) {
                    argText = ' ' + argText;
                  }
                }
              }
              // Add padding.
              while (argText.length < width) {
                if (flagLeftAlign) {
                  argText += ' ';
                } else {
                  if (flagZeroPad && (argText[0] == '-' || argText[0] == '+')) {
                    argText = argText[0] + '0' + argText.slice(1);
                  } else {
                    argText = (flagZeroPad ? '0' : ' ') + argText;
                  }
                }
              }
              // Adjust case.
              if (next < 97) argText = argText.toUpperCase();
              // Insert the result into the buffer.
              argText.split('').forEach(function(chr) {
                ret.push(chr.charCodeAt(0));
              });
              break;
            }
            case 's': {
              // String.
              var arg = getNextArg('i8*');
              var argLength = arg ? _strlen(arg) : '(null)'.length;
              if (precisionSet) argLength = Math.min(argLength, precision);
              if (!flagLeftAlign) {
                while (argLength < width--) {
                  ret.push(32);
                }
              }
              if (arg) {
                for (var i = 0; i < argLength; i++) {
                  ret.push(HEAPU8[((arg++)|0)]);
                }
              } else {
                ret = ret.concat(intArrayFromString('(null)'.substr(0, argLength), true));
              }
              if (flagLeftAlign) {
                while (argLength < width--) {
                  ret.push(32);
                }
              }
              break;
            }
            case 'c': {
              // Character.
              if (flagLeftAlign) ret.push(getNextArg('i8'));
              while (--width > 0) {
                ret.push(32);
              }
              if (!flagLeftAlign) ret.push(getNextArg('i8'));
              break;
            }
            case 'n': {
              // Write the length written so far to the next parameter.
              var ptr = getNextArg('i32*');
              HEAP32[((ptr)>>2)]=ret.length
              break;
            }
            case '%': {
              // Literal percent sign.
              ret.push(curr);
              break;
            }
            default: {
              // Unknown specifiers remain untouched.
              for (var i = startTextIndex; i < textIndex + 2; i++) {
                ret.push(HEAP8[(i)]);
              }
            }
          }
          textIndex += 2;
          // TODO: Support a/A (hex float) and m (last error) specifiers.
          // TODO: Support %1${specifier} for arg selection.
        } else {
          ret.push(curr);
          textIndex += 1;
        }
      }
      return ret;
    }function _fprintf(stream, format, varargs) {
      // int fprintf(FILE *restrict stream, const char *restrict format, ...);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/printf.html
      var result = __formatString(format, varargs);
      var stack = Runtime.stackSave();
      var ret = _fwrite(allocate(result, 'i8', ALLOC_STACK), 1, result.length, stream);
      Runtime.stackRestore(stack);
      return ret;
    }function _printf(format, varargs) {
      // int printf(const char *restrict format, ...);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/printf.html
      var stdout = HEAP32[((_stdout)>>2)];
      return _fprintf(stdout, format, varargs);
    }
  function _SDL_GL_SwapBuffers() {}
  function _SDL_Init(initFlags) {
      SDL.startTime = Date.now();
      SDL.initFlags = initFlags;
      // capture all key events. we just keep down and up, but also capture press to prevent default actions
      if (!Module['doNotCaptureKeyboard']) {
        document.addEventListener("keydown", SDL.receiveEvent);
        document.addEventListener("keyup", SDL.receiveEvent);
        document.addEventListener("keypress", SDL.receiveEvent);
        window.addEventListener("blur", SDL.receiveEvent);
        document.addEventListener("visibilitychange", SDL.receiveEvent);
      }
      if (initFlags & 0x200) {
        // SDL_INIT_JOYSTICK
        // Firefox will not give us Joystick data unless we register this NOP
        // callback.
        // https://bugzilla.mozilla.org/show_bug.cgi?id=936104
        addEventListener("gamepadconnected", function() {});
      }
      window.addEventListener("unload", SDL.receiveEvent);
      SDL.keyboardState = _malloc(0x10000); // Our SDL needs 512, but 64K is safe for older SDLs
      _memset(SDL.keyboardState, 0, 0x10000);
      // Initialize this structure carefully for closure
      SDL.DOMEventToSDLEvent['keydown'] = 0x300 /* SDL_KEYDOWN */;
      SDL.DOMEventToSDLEvent['keyup'] = 0x301 /* SDL_KEYUP */;
      SDL.DOMEventToSDLEvent['keypress'] = 0x303 /* SDL_TEXTINPUT */;
      SDL.DOMEventToSDLEvent['mousedown'] = 0x401 /* SDL_MOUSEBUTTONDOWN */;
      SDL.DOMEventToSDLEvent['mouseup'] = 0x402 /* SDL_MOUSEBUTTONUP */;
      SDL.DOMEventToSDLEvent['mousemove'] = 0x400 /* SDL_MOUSEMOTION */;
      SDL.DOMEventToSDLEvent['unload'] = 0x100 /* SDL_QUIT */;
      SDL.DOMEventToSDLEvent['resize'] = 0x7001 /* SDL_VIDEORESIZE/SDL_EVENT_COMPAT2 */;
      // These are not technically DOM events; the HTML gamepad API is poll-based.
      // However, we define them here, as the rest of the SDL code assumes that
      // all SDL events originate as DOM events.
      SDL.DOMEventToSDLEvent['joystick_axis_motion'] = 0x600 /* SDL_JOYAXISMOTION */;
      SDL.DOMEventToSDLEvent['joystick_button_down'] = 0x603 /* SDL_JOYBUTTONDOWN */;
      SDL.DOMEventToSDLEvent['joystick_button_up'] = 0x604 /* SDL_JOYBUTTONUP */;
      return 0; // success
    }
  function _SDL_GetError() {
      if (!SDL.errorMessage) {
        SDL.errorMessage = allocate(intArrayFromString("unknown SDL-emscripten error"), 'i8', ALLOC_NORMAL);
      }
      return SDL.errorMessage;
    }
  function _SDL_GL_SetAttribute(attr, value) {
      if (!(attr in SDL.glAttributes)) {
        abort('Unknown SDL GL attribute (' + attr + '). Please check if your SDL version is supported.');
      }
      SDL.glAttributes[attr] = value;
    }
  function _SDL_SetVideoMode(width, height, depth, flags) {
      ['mousedown', 'mouseup', 'mousemove', 'DOMMouseScroll', 'mousewheel', 'mouseout'].forEach(function(event) {
        Module['canvas'].addEventListener(event, SDL.receiveEvent, true);
      });
      // (0,0) means 'use fullscreen' in native; in Emscripten, use the current canvas size.
      if (width == 0 && height == 0) {
        var canvas = Module['canvas'];
        width = canvas.width;
        height = canvas.height;
      }
      Browser.setCanvasSize(width, height, true);
      // Free the old surface first.
      if (SDL.screen) {
        SDL.freeSurface(SDL.screen);
        SDL.screen = null;
      }
      SDL.screen = SDL.makeSurface(width, height, flags, true, 'screen');
      if (!SDL.addedResizeListener) {
        SDL.addedResizeListener = true;
        Browser.resizeListeners.push(function(w, h) {
          SDL.receiveEvent({
            type: 'resize',
            w: w,
            h: h
          });
        });
      }
      return SDL.screen;
    }
  function _emscripten_set_main_loop(func, fps, simulateInfiniteLoop) {
      Module['noExitRuntime'] = true;
      Browser.mainLoop.runner = function Browser_mainLoop_runner() {
        if (ABORT) return;
        if (Browser.mainLoop.queue.length > 0) {
          var start = Date.now();
          var blocker = Browser.mainLoop.queue.shift();
          blocker.func(blocker.arg);
          if (Browser.mainLoop.remainingBlockers) {
            var remaining = Browser.mainLoop.remainingBlockers;
            var next = remaining%1 == 0 ? remaining-1 : Math.floor(remaining);
            if (blocker.counted) {
              Browser.mainLoop.remainingBlockers = next;
            } else {
              // not counted, but move the progress along a tiny bit
              next = next + 0.5; // do not steal all the next one's progress
              Browser.mainLoop.remainingBlockers = (8*remaining + next)/9;
            }
          }
          console.log('main loop blocker "' + blocker.name + '" took ' + (Date.now() - start) + ' ms'); //, left: ' + Browser.mainLoop.remainingBlockers);
          Browser.mainLoop.updateStatus();
          setTimeout(Browser.mainLoop.runner, 0);
          return;
        }
        if (Browser.mainLoop.shouldPause) {
          // catch pauses from non-main loop sources
          Browser.mainLoop.paused = true;
          Browser.mainLoop.shouldPause = false;
          return;
        }
        if (Module['preMainLoop']) {
          Module['preMainLoop']();
        }
        try {
          Runtime.dynCall('v', func);
        } catch (e) {
          if (e instanceof ExitStatus) {
            return;
          } else {
            if (e && typeof e === 'object' && e.stack) Module.printErr('exception thrown: ' + [e, e.stack]);
            throw e;
          }
        }
        if (Module['postMainLoop']) {
          Module['postMainLoop']();
        }
        if (Browser.mainLoop.shouldPause) {
          // catch pauses from the main loop itself
          Browser.mainLoop.paused = true;
          Browser.mainLoop.shouldPause = false;
          return;
        }
        Browser.mainLoop.scheduler();
      }
      if (fps && fps > 0) {
        Browser.mainLoop.scheduler = function Browser_mainLoop_scheduler() {
          setTimeout(Browser.mainLoop.runner, 1000/fps); // doing this each time means that on exception, we stop
        }
      } else {
        Browser.mainLoop.scheduler = function Browser_mainLoop_scheduler() {
          Browser.requestAnimationFrame(Browser.mainLoop.runner);
        }
      }
      Browser.mainLoop.scheduler();
      if (simulateInfiniteLoop) {
        throw 'SimulateInfiniteLoop';
      }
    }
  function ___gxx_personality_v0() {
    }
  function __exit(status) {
      // void _exit(int status);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/exit.html
      Module['exit'](status);
    }function _exit(status) {
      __exit(status);
    }function __ZSt9terminatev() {
      _exit(-1234);
    }
  var GL={counter:1,lastError:0,buffers:[],programs:[],framebuffers:[],renderbuffers:[],textures:[],uniforms:[],shaders:[],vaos:[],currArrayBuffer:0,currElementArrayBuffer:0,byteSizeByTypeRoot:5120,byteSizeByType:[1,1,2,2,4,4,4,2,3,4,8],programInfos:{},stringCache:{},packAlignment:4,unpackAlignment:4,init:function () {
        Browser.moduleContextCreatedCallbacks.push(GL.initExtensions);
      },recordError:function recordError(errorCode) {
        if (!GL.lastError) {
          GL.lastError = errorCode;
        }
      },getNewId:function (table) {
        var ret = GL.counter++;
        for (var i = table.length; i < ret; i++) {
          table[i] = null;
        }
        return ret;
      },MINI_TEMP_BUFFER_SIZE:16,miniTempBuffer:null,miniTempBufferViews:[0],MAX_TEMP_BUFFER_SIZE:2097152,tempBufferIndexLookup:null,tempVertexBuffers:null,tempIndexBuffers:null,tempQuadIndexBuffer:null,generateTempBuffers:function (quads) {
        GL.tempBufferIndexLookup = new Uint8Array(GL.MAX_TEMP_BUFFER_SIZE+1);
        GL.tempVertexBuffers = [];
        GL.tempIndexBuffers = [];
        var last = -1, curr = -1;
        var size = 1;
        for (var i = 0; i <= GL.MAX_TEMP_BUFFER_SIZE; i++) {
          if (i > size) {
            size <<= 1;
          }
          if (size != last) {
            curr++;
            GL.tempVertexBuffers[curr] = Module.ctx.createBuffer();
            Module.ctx.bindBuffer(Module.ctx.ARRAY_BUFFER, GL.tempVertexBuffers[curr]);
            Module.ctx.bufferData(Module.ctx.ARRAY_BUFFER, size, Module.ctx.DYNAMIC_DRAW);
            Module.ctx.bindBuffer(Module.ctx.ARRAY_BUFFER, null);
            GL.tempIndexBuffers[curr] = Module.ctx.createBuffer();
            Module.ctx.bindBuffer(Module.ctx.ELEMENT_ARRAY_BUFFER, GL.tempIndexBuffers[curr]);
            Module.ctx.bufferData(Module.ctx.ELEMENT_ARRAY_BUFFER, size, Module.ctx.DYNAMIC_DRAW);
            Module.ctx.bindBuffer(Module.ctx.ELEMENT_ARRAY_BUFFER, null);
            last = size;
          }
          GL.tempBufferIndexLookup[i] = curr;
        }
        if (quads) {
          // GL_QUAD indexes can be precalculated
          GL.tempQuadIndexBuffer = Module.ctx.createBuffer();
          Module.ctx.bindBuffer(Module.ctx.ELEMENT_ARRAY_BUFFER, GL.tempQuadIndexBuffer);
          var numIndexes = GL.MAX_TEMP_BUFFER_SIZE >> 1;
          var quadIndexes = new Uint16Array(numIndexes);
          var i = 0, v = 0;
          while (1) {
            quadIndexes[i++] = v;
            if (i >= numIndexes) break;
            quadIndexes[i++] = v+1;
            if (i >= numIndexes) break;
            quadIndexes[i++] = v+2;
            if (i >= numIndexes) break;
            quadIndexes[i++] = v;
            if (i >= numIndexes) break;
            quadIndexes[i++] = v+2;
            if (i >= numIndexes) break;
            quadIndexes[i++] = v+3;
            if (i >= numIndexes) break;
            v += 4;
          }
          Module.ctx.bufferData(Module.ctx.ELEMENT_ARRAY_BUFFER, quadIndexes, Module.ctx.STATIC_DRAW);
          Module.ctx.bindBuffer(Module.ctx.ELEMENT_ARRAY_BUFFER, null);
        }
      },findToken:function (source, token) {
        function isIdentChar(ch) {
          if (ch >= 48 && ch <= 57) // 0-9
            return true;
          if (ch >= 65 && ch <= 90) // A-Z
            return true;
          if (ch >= 97 && ch <= 122) // a-z
            return true;
          return false;
        }
        var i = -1;
        do {
          i = source.indexOf(token, i + 1);
          if (i < 0) {
            break;
          }
          if (i > 0 && isIdentChar(source[i - 1])) {
            continue;
          }
          i += token.length;
          if (i < source.length - 1 && isIdentChar(source[i + 1])) {
            continue;
          }
          return true;
        } while (true);
        return false;
      },getSource:function (shader, count, string, length) {
        var source = '';
        for (var i = 0; i < count; ++i) {
          var frag;
          if (length) {
            var len = HEAP32[(((length)+(i*4))>>2)];
            if (len < 0) {
              frag = Pointer_stringify(HEAP32[(((string)+(i*4))>>2)]);
            } else {
              frag = Pointer_stringify(HEAP32[(((string)+(i*4))>>2)], len);
            }
          } else {
            frag = Pointer_stringify(HEAP32[(((string)+(i*4))>>2)]);
          }
          source += frag;
        }
        // Let's see if we need to enable the standard derivatives extension
        type = Module.ctx.getShaderParameter(GL.shaders[shader], 0x8B4F /* GL_SHADER_TYPE */);
        if (type == 0x8B30 /* GL_FRAGMENT_SHADER */) {
          if (GL.findToken(source, "dFdx") ||
              GL.findToken(source, "dFdy") ||
              GL.findToken(source, "fwidth")) {
            source = "#extension GL_OES_standard_derivatives : enable\n" + source;
            var extension = Module.ctx.getExtension("OES_standard_derivatives");
          }
        }
        return source;
      },computeImageSize:function (width, height, sizePerPixel, alignment) {
        function roundedToNextMultipleOf(x, y) {
          return Math.floor((x + y - 1) / y) * y
        }
        var plainRowSize = width * sizePerPixel;
        var alignedRowSize = roundedToNextMultipleOf(plainRowSize, alignment);
        return (height <= 0) ? 0 :
                 ((height - 1) * alignedRowSize + plainRowSize);
      },get:function (name_, p, type) {
        // Guard against user passing a null pointer.
        // Note that GLES2 spec does not say anything about how passing a null pointer should be treated.
        // Testing on desktop core GL 3, the application crashes on glGetIntegerv to a null pointer, but
        // better to report an error instead of doing anything random.
        if (!p) {
          GL.recordError(0x0501 /* GL_INVALID_VALUE */);
          return;
        }
        var ret = undefined;
        switch(name_) { // Handle a few trivial GLES values
          case 0x8DFA: // GL_SHADER_COMPILER
            ret = 1;
            break;
          case 0x8DF8: // GL_SHADER_BINARY_FORMATS
            if (type !== 'Integer') {
              GL.recordError(0x0500); // GL_INVALID_ENUM
            }
            return; // Do not write anything to the out pointer, since no binary formats are supported.
          case 0x8DF9: // GL_NUM_SHADER_BINARY_FORMATS
            ret = 0;
            break;
          case 0x86A2: // GL_NUM_COMPRESSED_TEXTURE_FORMATS
            // WebGL doesn't have GL_NUM_COMPRESSED_TEXTURE_FORMATS (it's obsolete since GL_COMPRESSED_TEXTURE_FORMATS returns a JS array that can be queried for length),
            // so implement it ourselves to allow C++ GLES2 code get the length.
            var formats = Module.ctx.getParameter(0x86A3 /*GL_COMPRESSED_TEXTURE_FORMATS*/);
            ret = formats.length;
            break;
          case 0x8B9A: // GL_IMPLEMENTATION_COLOR_READ_TYPE
            ret = 0x1401; // GL_UNSIGNED_BYTE
            break;
          case 0x8B9B: // GL_IMPLEMENTATION_COLOR_READ_FORMAT
            ret = 0x1908; // GL_RGBA
            break;
        }
        if (ret === undefined) {
          var result = Module.ctx.getParameter(name_);
          switch (typeof(result)) {
            case "number":
              ret = result;
              break;
            case "boolean":
              ret = result ? 1 : 0;
              break;
            case "string":
              GL.recordError(0x0500); // GL_INVALID_ENUM
              return;
            case "object":
              if (result === null) {
                // null is a valid result for some (e.g., which buffer is bound - perhaps nothing is bound), but otherwise
                // can mean an invalid name_, which we need to report as an error
                switch(name_) {
                  case 0x8894: // ARRAY_BUFFER_BINDING
                  case 0x8B8D: // CURRENT_PROGRAM
                  case 0x8895: // ELEMENT_ARRAY_BUFFER_BINDING
                  case 0x8CA6: // FRAMEBUFFER_BINDING
                  case 0x8CA7: // RENDERBUFFER_BINDING
                  case 0x8069: // TEXTURE_BINDING_2D
                  case 0x8514: { // TEXTURE_BINDING_CUBE_MAP
                    ret = 0;
                    break;
                  }
                  default: {
                    GL.recordError(0x0500); // GL_INVALID_ENUM
                    return;
                  }
                }
              } else if (result instanceof Float32Array ||
                         result instanceof Uint32Array ||
                         result instanceof Int32Array ||
                         result instanceof Array) {
                for (var i = 0; i < result.length; ++i) {
                  switch (type) {
                    case 'Integer': HEAP32[(((p)+(i*4))>>2)]=result[i];   break;
                    case 'Float':   HEAPF32[(((p)+(i*4))>>2)]=result[i]; break;
                    case 'Boolean': HEAP8[(((p)+(i))|0)]=result[i] ? 1 : 0;    break;
                    default: throw 'internal glGet error, bad type: ' + type;
                  }
                }
                return;
              } else if (result instanceof WebGLBuffer ||
                         result instanceof WebGLProgram ||
                         result instanceof WebGLFramebuffer ||
                         result instanceof WebGLRenderbuffer ||
                         result instanceof WebGLTexture) {
                ret = result.name | 0;
              } else {
                GL.recordError(0x0500); // GL_INVALID_ENUM
                return;
              }
              break;
            default:
              GL.recordError(0x0500); // GL_INVALID_ENUM
              return;
          }
        }
        switch (type) {
          case 'Integer': HEAP32[((p)>>2)]=ret;    break;
          case 'Float':   HEAPF32[((p)>>2)]=ret;  break;
          case 'Boolean': HEAP8[(p)]=ret ? 1 : 0; break;
          default: throw 'internal glGet error, bad type: ' + type;
        }
      },getTexPixelData:function (type, format, width, height, pixels, internalFormat) {
        var sizePerPixel;
        switch (type) {
          case 0x1401 /* GL_UNSIGNED_BYTE */:
            switch (format) {
              case 0x1906 /* GL_ALPHA */:
              case 0x1909 /* GL_LUMINANCE */:
                sizePerPixel = 1;
                break;
              case 0x1907 /* GL_RGB */:
                sizePerPixel = 3;
                break;
              case 0x1908 /* GL_RGBA */:
                sizePerPixel = 4;
                break;
              case 0x190A /* GL_LUMINANCE_ALPHA */:
                sizePerPixel = 2;
                break;
              default:
                throw 'Invalid format (' + format + ')';
            }
            break;
          case 0x1403 /* GL_UNSIGNED_SHORT */:
            if (format == 0x1902 /* GL_DEPTH_COMPONENT */) {
              sizePerPixel = 2;
            } else {
              throw 'Invalid format (' + format + ')';
            }
            break;
          case 0x1405 /* GL_UNSIGNED_INT */:
            if (format == 0x1902 /* GL_DEPTH_COMPONENT */) {
              sizePerPixel = 4;
            } else {
              throw 'Invalid format (' + format + ')';
            }
            break;
          case 0x84FA /* UNSIGNED_INT_24_8_WEBGL */:
            sizePerPixel = 4;
            break;
          case 0x8363 /* GL_UNSIGNED_SHORT_5_6_5 */:
          case 0x8033 /* GL_UNSIGNED_SHORT_4_4_4_4 */:
          case 0x8034 /* GL_UNSIGNED_SHORT_5_5_5_1 */:
            sizePerPixel = 2;
            break;
          case 0x1406 /* GL_FLOAT */:
            switch (format) {
              case 0x1907 /* GL_RGB */:
                sizePerPixel = 3*4;
                break;
              case 0x1908 /* GL_RGBA */:
                sizePerPixel = 4*4;
                break;
              default:
                throw 'Invalid format (' + format + ')';
            }
            internalFormat = Module.ctx.RGBA;
            break;
          default:
            throw 'Invalid type (' + type + ')';
        }
        var bytes = GL.computeImageSize(width, height, sizePerPixel, GL.unpackAlignment);
        if (type == 0x1401 /* GL_UNSIGNED_BYTE */) {
          pixels = HEAPU8.subarray((pixels),(pixels+bytes));
        } else if (type == 0x1406 /* GL_FLOAT */) {
          pixels = HEAPF32.subarray((pixels)>>2,(pixels+bytes)>>2);
        } else if (type == 0x1405 /* GL_UNSIGNED_INT */ || type == 0x84FA /* UNSIGNED_INT_24_8_WEBGL */) {
          pixels = HEAPU32.subarray((pixels)>>2,(pixels+bytes)>>2);
        } else {
          pixels = HEAPU16.subarray((pixels)>>1,(pixels+bytes)>>1);
        }
        return {
          pixels: pixels,
          internalFormat: internalFormat
        }
      },initExtensions:function () {
        if (GL.initExtensions.done) return;
        GL.initExtensions.done = true;
        if (!Module.useWebGL) return; // an app might link both gl and 2d backends
        GL.miniTempBuffer = new Float32Array(GL.MINI_TEMP_BUFFER_SIZE);
        for (var i = 0; i < GL.MINI_TEMP_BUFFER_SIZE; i++) {
          GL.miniTempBufferViews[i] = GL.miniTempBuffer.subarray(0, i+1);
        }
        GL.maxVertexAttribs = Module.ctx.getParameter(Module.ctx.MAX_VERTEX_ATTRIBS);
        // Detect the presence of a few extensions manually, this GL interop layer itself will need to know if they exist. 
        GL.compressionExt = Module.ctx.getExtension('WEBGL_compressed_texture_s3tc') ||
                            Module.ctx.getExtension('MOZ_WEBGL_compressed_texture_s3tc') ||
                            Module.ctx.getExtension('WEBKIT_WEBGL_compressed_texture_s3tc');
        GL.anisotropicExt = Module.ctx.getExtension('EXT_texture_filter_anisotropic') ||
                            Module.ctx.getExtension('MOZ_EXT_texture_filter_anisotropic') ||
                            Module.ctx.getExtension('WEBKIT_EXT_texture_filter_anisotropic');
        GL.floatExt = Module.ctx.getExtension('OES_texture_float');
        // Tested on WebKit and FF25
        GL.vaoExt = Module.ctx.getExtension('OES_vertex_array_object');
        // Extension available from Firefox 26 and Google Chrome 30
        GL.instancedArraysExt = Module.ctx.getExtension('ANGLE_instanced_arrays');
        // These are the 'safe' feature-enabling extensions that don't add any performance impact related to e.g. debugging, and
        // should be enabled by default so that client GLES2/GL code will not need to go through extra hoops to get its stuff working.
        // As new extensions are ratified at http://www.khronos.org/registry/webgl/extensions/ , feel free to add your new extensions
        // here, as long as they don't produce a performance impact for users that might not be using those extensions.
        // E.g. debugging-related extensions should probably be off by default.
        var automaticallyEnabledExtensions = [ "OES_texture_float", "OES_texture_half_float", "OES_standard_derivatives",
                                               "OES_vertex_array_object", "WEBGL_compressed_texture_s3tc", "WEBGL_depth_texture",
                                               "OES_element_index_uint", "EXT_texture_filter_anisotropic", "ANGLE_instanced_arrays",
                                               "OES_texture_float_linear", "OES_texture_half_float_linear", "WEBGL_compressed_texture_atc",
                                               "WEBGL_compressed_texture_pvrtc", "EXT_color_buffer_half_float", "WEBGL_color_buffer_float",
                                               "EXT_frag_depth", "EXT_sRGB", "WEBGL_draw_buffers", "WEBGL_shared_resources" ];
        function shouldEnableAutomatically(extension) {
          for(var i in automaticallyEnabledExtensions) {
            var include = automaticallyEnabledExtensions[i];
            if (ext.indexOf(include) != -1) {
              return true;
            }
          }
          return false;
        }
        var extensions = Module.ctx.getSupportedExtensions();
        for(var e in extensions) {
          var ext = extensions[e].replace('MOZ_', '').replace('WEBKIT_', '');
          if (automaticallyEnabledExtensions.indexOf(ext) != -1) {
            Module.ctx.getExtension(ext); // Calling .getExtension enables that extension permanently, no need to store the return value to be enabled.
          }
        }
      },populateUniformTable:function (program) {
        var p = GL.programs[program];
        GL.programInfos[program] = {
          uniforms: {},
          maxUniformLength: 0, // This is eagerly computed below, since we already enumerate all uniforms anyway.
          maxAttributeLength: -1 // This is lazily computed and cached, computed when/if first asked, "-1" meaning not computed yet.
        };
        var ptable = GL.programInfos[program];
        var utable = ptable.uniforms;
        // A program's uniform table maps the string name of an uniform to an integer location of that uniform.
        // The global GL.uniforms map maps integer locations to WebGLUniformLocations.
        var numUniforms = Module.ctx.getProgramParameter(p, Module.ctx.ACTIVE_UNIFORMS);
        for (var i = 0; i < numUniforms; ++i) {
          var u = Module.ctx.getActiveUniform(p, i);
          var name = u.name;
          ptable.maxUniformLength = Math.max(ptable.maxUniformLength, name.length+1);
          // Strip off any trailing array specifier we might have got, e.g. "[0]".
          if (name.indexOf(']', name.length-1) !== -1) {
            var ls = name.lastIndexOf('[');
            name = name.slice(0, ls);
          }
          // Optimize memory usage slightly: If we have an array of uniforms, e.g. 'vec3 colors[3];', then 
          // only store the string 'colors' in utable, and 'colors[0]', 'colors[1]' and 'colors[2]' will be parsed as 'colors'+i.
          // Note that for the GL.uniforms table, we still need to fetch the all WebGLUniformLocations for all the indices.
          var loc = Module.ctx.getUniformLocation(p, name);
          var id = GL.getNewId(GL.uniforms);
          utable[name] = [u.size, id];
          GL.uniforms[id] = loc;
          for (var j = 1; j < u.size; ++j) {
            var n = name + '['+j+']';
            loc = Module.ctx.getUniformLocation(p, n);
            id = GL.getNewId(GL.uniforms);
            GL.uniforms[id] = loc;
          }
        }
      }};function _glPixelStorei(pname, param) {
      if (pname == 0x0D05 /* GL_PACK_ALIGNMENT */) {
        GL.packAlignment = param;
      } else if (pname == 0x0cf5 /* GL_UNPACK_ALIGNMENT */) {
        GL.unpackAlignment = param;
      }
      Module.ctx.pixelStorei(pname, param);
    }
  function _glGetString(name_) {
      if (GL.stringCache[name_]) return GL.stringCache[name_];
      var ret; 
      switch(name_) {
        case 0x1F00 /* GL_VENDOR */:
        case 0x1F01 /* GL_RENDERER */:
        case 0x1F02 /* GL_VERSION */:
          ret = allocate(intArrayFromString(Module.ctx.getParameter(name_)), 'i8', ALLOC_NORMAL);
          break;
        case 0x1F03 /* GL_EXTENSIONS */:
          var exts = Module.ctx.getSupportedExtensions();
          var gl_exts = [];
          for (i in exts) {
            gl_exts.push(exts[i]);
            gl_exts.push("GL_" + exts[i]);
          }
          ret = allocate(intArrayFromString(gl_exts.join(' ')), 'i8', ALLOC_NORMAL);
          break;
        case 0x8B8C /* GL_SHADING_LANGUAGE_VERSION */:
          ret = allocate(intArrayFromString('OpenGL ES GLSL 1.00 (WebGL)'), 'i8', ALLOC_NORMAL);
          break;
        default:
          GL.recordError(0x0500/*GL_INVALID_ENUM*/);
          return 0;
      }
      GL.stringCache[name_] = ret;
      return ret;
    }
  function _glGetIntegerv(name_, p) {
      return GL.get(name_, p, 'Integer');
    }
  function _glGetFloatv(name_, p) {
      return GL.get(name_, p, 'Float');
    }
  function _glGetBooleanv(name_, p) {
      return GL.get(name_, p, 'Boolean');
    }
  function _glGenTextures(n, textures) {
      for (var i = 0; i < n; i++) {
        var id = GL.getNewId(GL.textures);
        var texture = Module.ctx.createTexture();
        texture.name = id;
        GL.textures[id] = texture;
        HEAP32[(((textures)+(i*4))>>2)]=id;
      }
    }
  function _glDeleteTextures(n, textures) {
      for (var i = 0; i < n; i++) {
        var id = HEAP32[(((textures)+(i*4))>>2)];
        var texture = GL.textures[id];
        Module.ctx.deleteTexture(texture);
        texture.name = 0;
        GL.textures[id] = null;
      }
    }
  function _glCompressedTexImage2D(target, level, internalFormat, width, height, border, imageSize, data) {
      if (data) {
        data = HEAPU8.subarray((data),(data+imageSize));
      } else {
        data = null;
      }
      Module.ctx['compressedTexImage2D'](target, level, internalFormat, width, height, border, data);
    }
  function _glCompressedTexSubImage2D(target, level, xoffset, yoffset, width, height, format, imageSize, data) {
      if (data) {
        data = HEAPU8.subarray((data),(data+imageSize));
      } else {
        data = null;
      }
      Module.ctx['compressedTexSubImage2D'](target, level, xoffset, yoffset, width, height, data);
    }
  function _glTexImage2D(target, level, internalFormat, width, height, border, format, type, pixels) {
      if (pixels) {
        var data = GL.getTexPixelData(type, format, width, height, pixels, internalFormat);
        pixels = data.pixels;
        internalFormat = data.internalFormat;
      } else {
        pixels = null;
      }
      Module.ctx.texImage2D(target, level, internalFormat, width, height, border, format, type, pixels);
    }
  function _glTexSubImage2D(target, level, xoffset, yoffset, width, height, format, type, pixels) {
      if (pixels) {
        var data = GL.getTexPixelData(type, format, width, height, pixels, -1);
        pixels = data.pixels;
      } else {
        pixels = null;
      }
      Module.ctx.texSubImage2D(target, level, xoffset, yoffset, width, height, format, type, pixels);
    }
  function _glReadPixels(x, y, width, height, format, type, pixels) {
      var sizePerPixel;
      switch (format) {
        case 0x1907 /* GL_RGB */:
          sizePerPixel = 3;
          break;
        case 0x1908 /* GL_RGBA */:
          sizePerPixel = 4;
          break;
        default: 
          GL.recordError(0x0500/*GL_INVALID_ENUM*/);
          return;
      }
      var totalSize = width*height*sizePerPixel;
      Module.ctx.readPixels(x, y, width, height, format, type, HEAPU8.subarray(pixels, pixels + totalSize));
    }
  function _glBindTexture(target, texture) {
      Module.ctx.bindTexture(target, texture ? GL.textures[texture] : null);
    }
  function _glGetTexParameterfv(target, pname, params) {
      HEAPF32[((params)>>2)]=Module.getTexParameter(target, pname);
    }
  function _glGetTexParameteriv(target, pname, params) {
      HEAP32[((params)>>2)]=Module.getTexParameter(target, pname);
    }
  function _glTexParameterfv(target, pname, params) {
      var param = HEAPF32[((params)>>2)];
      Module.ctx.texParameterf(target, pname, param);
    }
  function _glTexParameteriv(target, pname, params) {
      var param = HEAP32[((params)>>2)];
      Module.ctx.texParameteri(target, pname, param);
    }
  function _glIsTexture(texture) {
      var texture = GL.textures[texture];
      if (!texture) return 0;
      return Module.ctx.isTexture(texture);
    }
  function _glGenBuffers(n, buffers) {
      for (var i = 0; i < n; i++) {
        var id = GL.getNewId(GL.buffers);
        var buffer = Module.ctx.createBuffer();
        buffer.name = id;
        GL.buffers[id] = buffer;
        HEAP32[(((buffers)+(i*4))>>2)]=id;
      }
    }
  function _glDeleteBuffers(n, buffers) {
      for (var i = 0; i < n; i++) {
        var id = HEAP32[(((buffers)+(i*4))>>2)];
        var buffer = GL.buffers[id];
        // From spec: "glDeleteBuffers silently ignores 0's and names that do not
        // correspond to existing buffer objects."
        if (!buffer) continue;
        Module.ctx.deleteBuffer(buffer);
        buffer.name = 0;
        GL.buffers[id] = null;
        if (id == GL.currArrayBuffer) GL.currArrayBuffer = 0;
        if (id == GL.currElementArrayBuffer) GL.currElementArrayBuffer = 0;
      }
    }
  function _glGetBufferParameteriv(target, value, data) {
      HEAP32[((data)>>2)]=Module.ctx.getBufferParameter(target, value);
    }
  function _glBufferData(target, size, data, usage) {
      switch (usage) { // fix usages, WebGL only has *_DRAW
        case 0x88E1: // GL_STREAM_READ
        case 0x88E2: // GL_STREAM_COPY
          usage = 0x88E0; // GL_STREAM_DRAW
          break;
        case 0x88E5: // GL_STATIC_READ
        case 0x88E6: // GL_STATIC_COPY
          usage = 0x88E4; // GL_STATIC_DRAW
          break;
        case 0x88E9: // GL_DYNAMIC_READ
        case 0x88EA: // GL_DYNAMIC_COPY
          usage = 0x88E8; // GL_DYNAMIC_DRAW
          break;
      }
      Module.ctx.bufferData(target, HEAPU8.subarray(data, data+size), usage);
    }
  function _glBufferSubData(target, offset, size, data) {
      Module.ctx.bufferSubData(target, offset, HEAPU8.subarray(data, data+size));
    }
  function _glIsBuffer(buffer) {
      var b = GL.buffers[buffer];
      if (!b) return 0;
      return Module.ctx.isBuffer(b);
    }
  function _glGenRenderbuffers(n, renderbuffers) {
      for (var i = 0; i < n; i++) {
        var id = GL.getNewId(GL.renderbuffers);
        var renderbuffer = Module.ctx.createRenderbuffer();
        renderbuffer.name = id;
        GL.renderbuffers[id] = renderbuffer;
        HEAP32[(((renderbuffers)+(i*4))>>2)]=id;
      }
    }
  function _glDeleteRenderbuffers(n, renderbuffers) {
      for (var i = 0; i < n; i++) {
        var id = HEAP32[(((renderbuffers)+(i*4))>>2)];
        var renderbuffer = GL.renderbuffers[id];
        Module.ctx.deleteRenderbuffer(renderbuffer);
        renderbuffer.name = 0;
        GL.renderbuffers[id] = null;
      }
    }
  function _glBindRenderbuffer(target, renderbuffer) {
      Module.ctx.bindRenderbuffer(target, renderbuffer ? GL.renderbuffers[renderbuffer] : null);
    }
  function _glGetRenderbufferParameteriv(target, pname, params) {
      HEAP32[((params)>>2)]=Module.ctx.getRenderbufferParameter(target, pname);
    }
  function _glIsRenderbuffer(renderbuffer) {
      var rb = GL.renderbuffers[renderbuffer];
      if (!rb) return 0;
      return Module.ctx.isRenderbuffer(rb);
    }
  function _glGetUniformfv(program, location, params) {
      var data = Module.ctx.getUniform(GL.programs[program], GL.uniforms[location]);
      if (typeof data == 'number') {
        HEAPF32[((params)>>2)]=data;
      } else {
        for (var i = 0; i < data.length; i++) {
          HEAPF32[(((params)+(i))>>2)]=data[i];
        }
      }
    }
  function _glGetUniformiv(program, location, params) {
      var data = Module.ctx.getUniform(GL.programs[program], GL.uniforms[location]);
      if (typeof data == 'number' || typeof data == 'boolean') {
        HEAP32[((params)>>2)]=data;
      } else {
        for (var i = 0; i < data.length; i++) {
          HEAP32[(((params)+(i))>>2)]=data[i];
        }
      }
    }
  function _glGetUniformLocation(program, name) {
      name = Pointer_stringify(name);
      var arrayOffset = 0;
      // If user passed an array accessor "[index]", parse the array index off the accessor.
      if (name.indexOf(']', name.length-1) !== -1) {
        var ls = name.lastIndexOf('[');
        var arrayIndex = name.slice(ls+1, -1);
        if (arrayIndex.length > 0) {
          arrayOffset = parseInt(arrayIndex);
          if (arrayOffset < 0) {
            return -1;
          }
        }
        name = name.slice(0, ls);
      }
      var ptable = GL.programInfos[program];
      if (!ptable) {
        return -1;
      }
      var utable = ptable.uniforms;
      var uniformInfo = utable[name]; // returns pair [ dimension_of_uniform_array, uniform_location ]
      if (uniformInfo && arrayOffset < uniformInfo[0]) { // Check if user asked for an out-of-bounds element, i.e. for 'vec4 colors[3];' user could ask for 'colors[10]' which should return -1.
        return uniformInfo[1]+arrayOffset;
      } else {
        return -1;
      }
    }
  function _glGetVertexAttribfv(index, pname, params) {
      var data = Module.ctx.getVertexAttrib(index, pname);
      if (typeof data == 'number') {
        HEAPF32[((params)>>2)]=data;
      } else {
        for (var i = 0; i < data.length; i++) {
          HEAPF32[(((params)+(i))>>2)]=data[i];
        }
      }
    }
  function _glGetVertexAttribiv(index, pname, params) {
      var data = Module.ctx.getVertexAttrib(index, pname);
      if (typeof data == 'number' || typeof data == 'boolean') {
        HEAP32[((params)>>2)]=data;
      } else {
        for (var i = 0; i < data.length; i++) {
          HEAP32[(((params)+(i))>>2)]=data[i];
        }
      }
    }
  function _glGetVertexAttribPointerv(index, pname, pointer) {
      HEAP32[((pointer)>>2)]=Module.ctx.getVertexAttribOffset(index, pname);
    }
  function _glGetActiveUniform(program, index, bufSize, length, size, type, name) {
      program = GL.programs[program];
      var info = Module.ctx.getActiveUniform(program, index);
      var infoname = info.name.slice(0, Math.max(0, bufSize - 1));
      writeStringToMemory(infoname, name);
      if (length) {
        HEAP32[((length)>>2)]=infoname.length;
      }
      if (size) {
        HEAP32[((size)>>2)]=info.size;
      }
      if (type) {
        HEAP32[((type)>>2)]=info.type;
      }
    }
  function _glUniform1f(location, v0) {
      location = GL.uniforms[location];
      Module.ctx.uniform1f(location, v0);
    }
  function _glUniform2f(location, v0, v1) {
      location = GL.uniforms[location];
      Module.ctx.uniform2f(location, v0, v1);
    }
  function _glUniform3f(location, v0, v1, v2) {
      location = GL.uniforms[location];
      Module.ctx.uniform3f(location, v0, v1, v2);
    }
  function _glUniform4f(location, v0, v1, v2, v3) {
      location = GL.uniforms[location];
      Module.ctx.uniform4f(location, v0, v1, v2, v3);
    }
  function _glUniform1i(location, v0) {
      location = GL.uniforms[location];
      Module.ctx.uniform1i(location, v0);
    }
  function _glUniform2i(location, v0, v1) {
      location = GL.uniforms[location];
      Module.ctx.uniform2i(location, v0, v1);
    }
  function _glUniform3i(location, v0, v1, v2) {
      location = GL.uniforms[location];
      Module.ctx.uniform3i(location, v0, v1, v2);
    }
  function _glUniform4i(location, v0, v1, v2, v3) {
      location = GL.uniforms[location];
      Module.ctx.uniform4i(location, v0, v1, v2, v3);
    }
  function _glUniform1iv(location, count, value) {
      location = GL.uniforms[location];
      value = HEAP32.subarray((value)>>2,(value+count*4)>>2);
      Module.ctx.uniform1iv(location, value);
    }
  function _glUniform2iv(location, count, value) {
      location = GL.uniforms[location];
      count *= 2;
      value = HEAP32.subarray((value)>>2,(value+count*4)>>2);
      Module.ctx.uniform2iv(location, value);
    }
  function _glUniform3iv(location, count, value) {
      location = GL.uniforms[location];
      count *= 3;
      value = HEAP32.subarray((value)>>2,(value+count*4)>>2);
      Module.ctx.uniform3iv(location, value);
    }
  function _glUniform4iv(location, count, value) {
      location = GL.uniforms[location];
      count *= 4;
      value = HEAP32.subarray((value)>>2,(value+count*4)>>2);
      Module.ctx.uniform4iv(location, value);
    }
  function _glUniform1fv(location, count, value) {
      location = GL.uniforms[location];
      var view;
      if (count == 1) {
        // avoid allocation for the common case of uploading one uniform
        view = GL.miniTempBufferViews[0];
        view[0] = HEAPF32[((value)>>2)];
      } else {
        view = HEAPF32.subarray((value)>>2,(value+count*4)>>2);
      }
      Module.ctx.uniform1fv(location, view);
    }
  function _glUniform2fv(location, count, value) {
      location = GL.uniforms[location];
      var view;
      if (count == 1) {
        // avoid allocation for the common case of uploading one uniform
        view = GL.miniTempBufferViews[1];
        view[0] = HEAPF32[((value)>>2)];
        view[1] = HEAPF32[(((value)+(4))>>2)];
      } else {
        view = HEAPF32.subarray((value)>>2,(value+count*8)>>2);
      }
      Module.ctx.uniform2fv(location, view);
    }
  function _glUniform3fv(location, count, value) {
      location = GL.uniforms[location];
      var view;
      if (count == 1) {
        // avoid allocation for the common case of uploading one uniform
        view = GL.miniTempBufferViews[2];
        view[0] = HEAPF32[((value)>>2)];
        view[1] = HEAPF32[(((value)+(4))>>2)];
        view[2] = HEAPF32[(((value)+(8))>>2)];
      } else {
        view = HEAPF32.subarray((value)>>2,(value+count*12)>>2);
      }
      Module.ctx.uniform3fv(location, view);
    }
  function _glUniform4fv(location, count, value) {
      location = GL.uniforms[location];
      var view;
      if (count == 1) {
        // avoid allocation for the common case of uploading one uniform
        view = GL.miniTempBufferViews[3];
        view[0] = HEAPF32[((value)>>2)];
        view[1] = HEAPF32[(((value)+(4))>>2)];
        view[2] = HEAPF32[(((value)+(8))>>2)];
        view[3] = HEAPF32[(((value)+(12))>>2)];
      } else {
        view = HEAPF32.subarray((value)>>2,(value+count*16)>>2);
      }
      Module.ctx.uniform4fv(location, view);
    }
  function _glUniformMatrix2fv(location, count, transpose, value) {
      location = GL.uniforms[location];
      var view;
      if (count == 1) {
        // avoid allocation for the common case of uploading one uniform matrix
        view = GL.miniTempBufferViews[3];
        for (var i = 0; i < 4; i++) {
          view[i] = HEAPF32[(((value)+(i*4))>>2)];
        }
      } else {
        view = HEAPF32.subarray((value)>>2,(value+count*16)>>2);
      }
      Module.ctx.uniformMatrix2fv(location, transpose, view);
    }
  function _glUniformMatrix3fv(location, count, transpose, value) {
      location = GL.uniforms[location];
      var view;
      if (count == 1) {
        // avoid allocation for the common case of uploading one uniform matrix
        view = GL.miniTempBufferViews[8];
        for (var i = 0; i < 9; i++) {
          view[i] = HEAPF32[(((value)+(i*4))>>2)];
        }
      } else {
        view = HEAPF32.subarray((value)>>2,(value+count*36)>>2);
      }
      Module.ctx.uniformMatrix3fv(location, transpose, view);
    }
  function _glUniformMatrix4fv(location, count, transpose, value) {
      location = GL.uniforms[location];
      var view;
      if (count == 1) {
        // avoid allocation for the common case of uploading one uniform matrix
        view = GL.miniTempBufferViews[15];
        for (var i = 0; i < 16; i++) {
          view[i] = HEAPF32[(((value)+(i*4))>>2)];
        }
      } else {
        view = HEAPF32.subarray((value)>>2,(value+count*64)>>2);
      }
      Module.ctx.uniformMatrix4fv(location, transpose, view);
    }
  function _glBindBuffer(target, buffer) {
      var bufferObj = buffer ? GL.buffers[buffer] : null;
      if (target == Module.ctx.ARRAY_BUFFER) {
        GL.currArrayBuffer = buffer;
      } else if (target == Module.ctx.ELEMENT_ARRAY_BUFFER) {
        GL.currElementArrayBuffer = buffer;
      }
      Module.ctx.bindBuffer(target, bufferObj);
    }
  function _glVertexAttrib1fv(index, v) {
      v = HEAPF32.subarray((v)>>2,(v+4)>>2);
      Module.ctx.vertexAttrib1fv(index, v);
    }
  function _glVertexAttrib2fv(index, v) {
      v = HEAPF32.subarray((v)>>2,(v+8)>>2);
      Module.ctx.vertexAttrib2fv(index, v);
    }
  function _glVertexAttrib3fv(index, v) {
      v = HEAPF32.subarray((v)>>2,(v+12)>>2);
      Module.ctx.vertexAttrib3fv(index, v);
    }
  function _glVertexAttrib4fv(index, v) {
      v = HEAPF32.subarray((v)>>2,(v+16)>>2);
      Module.ctx.vertexAttrib4fv(index, v);
    }
  function _glGetAttribLocation(program, name) {
      program = GL.programs[program];
      name = Pointer_stringify(name);
      return Module.ctx.getAttribLocation(program, name);
    }
  function _glGetActiveAttrib(program, index, bufSize, length, size, type, name) {
      program = GL.programs[program];
      var info = Module.ctx.getActiveAttrib(program, index);
      var infoname = info.name.slice(0, Math.max(0, bufSize - 1));
      writeStringToMemory(infoname, name);
      if (length) {
        HEAP32[((length)>>2)]=infoname.length;
      }
      if (size) {
        HEAP32[((size)>>2)]=info.size;
      }
      if (type) {
        HEAP32[((type)>>2)]=info.type;
      }
    }
  function _glCreateShader(shaderType) {
      var id = GL.getNewId(GL.shaders);
      GL.shaders[id] = Module.ctx.createShader(shaderType);
      return id;
    }
  function _glDeleteShader(shader) {
      Module.ctx.deleteShader(GL.shaders[shader]);
      GL.shaders[shader] = null;
    }
  function _glGetAttachedShaders(program, maxCount, count, shaders) {
      var result = Module.ctx.getAttachedShaders(GL.programs[program]);
      var len = result.length;
      if (len > maxCount) {
        len = maxCount;
      }
      HEAP32[((count)>>2)]=len;
      for (var i = 0; i < len; ++i) {
        var id = GL.shaders.indexOf(result[i]);
        HEAP32[(((shaders)+(i*4))>>2)]=id;
      }
    }
  function _glShaderSource(shader, count, string, length) {
      var source = GL.getSource(shader, count, string, length);
      Module.ctx.shaderSource(GL.shaders[shader], source);
    }
  function _glGetShaderSource(shader, bufSize, length, source) {
      var result = Module.ctx.getShaderSource(GL.shaders[shader]);
      result = result.slice(0, Math.max(0, bufSize - 1));
      writeStringToMemory(result, source);
      if (length) {
        HEAP32[((length)>>2)]=result.length;
      }
    }
  function _glCompileShader(shader) {
      Module.ctx.compileShader(GL.shaders[shader]);
    }
  function _glGetShaderInfoLog(shader, maxLength, length, infoLog) {
      var log = Module.ctx.getShaderInfoLog(GL.shaders[shader]);
      // Work around a bug in Chromium which causes getShaderInfoLog to return null
      if (!log) {
        log = "";
      }
      log = log.substr(0, maxLength - 1);
      writeStringToMemory(log, infoLog);
      if (length) {
        HEAP32[((length)>>2)]=log.length
      }
    }
  function _glGetShaderiv(shader, pname, p) {
      if (pname == 0x8B84) { // GL_INFO_LOG_LENGTH
        HEAP32[((p)>>2)]=Module.ctx.getShaderInfoLog(GL.shaders[shader]).length + 1;
      } else {
        HEAP32[((p)>>2)]=Module.ctx.getShaderParameter(GL.shaders[shader], pname);
      }
    }
  function _glGetProgramiv(program, pname, p) {
      if (pname == 0x8B84) { // GL_INFO_LOG_LENGTH
        HEAP32[((p)>>2)]=Module.ctx.getProgramInfoLog(GL.programs[program]).length + 1;
      } else if (pname == 0x8B87 /* GL_ACTIVE_UNIFORM_MAX_LENGTH */) {
        var ptable = GL.programInfos[program];
        if (ptable) {
          HEAP32[((p)>>2)]=ptable.maxUniformLength;
          return;
        } else if (program < GL.counter) {
          GL.recordError(0x0502 /* GL_INVALID_OPERATION */);
        } else {
          GL.recordError(0x0501 /* GL_INVALID_VALUE */);
        }
      } else if (pname == 0x8B8A /* GL_ACTIVE_ATTRIBUTE_MAX_LENGTH */) {
        var ptable = GL.programInfos[program];
        if (ptable) {
          if (ptable.maxAttributeLength == -1) {
            var program = GL.programs[program];
            var numAttribs = Module.ctx.getProgramParameter(program, Module.ctx.ACTIVE_ATTRIBUTES);
            ptable.maxAttributeLength = 0; // Spec says if there are no active attribs, 0 must be returned.
            for(var i = 0; i < numAttribs; ++i) {
              var activeAttrib = Module.ctx.getActiveAttrib(program, i);
              ptable.maxAttributeLength = Math.max(ptable.maxAttributeLength, activeAttrib.name.length+1);
            }
          }
          HEAP32[((p)>>2)]=ptable.maxAttributeLength;
          return;
        } else if (program < GL.counter) {
          GL.recordError(0x0502 /* GL_INVALID_OPERATION */);
        } else {
          GL.recordError(0x0501 /* GL_INVALID_VALUE */);
        }
      } else {
        HEAP32[((p)>>2)]=Module.ctx.getProgramParameter(GL.programs[program], pname);
      }
    }
  function _glIsShader(shader) {
      var s = GL.shaders[shader];
      if (!s) return 0;
      return Module.ctx.isShader(s);
    }
  function _glCreateProgram() {
      var id = GL.getNewId(GL.programs);
      var program = Module.ctx.createProgram();
      program.name = id;
      GL.programs[id] = program;
      return id;
    }
  function _glDeleteProgram(program) {
      var program = GL.programs[program];
      Module.ctx.deleteProgram(program);
      program.name = 0;
      GL.programs[program] = null;
      GL.programInfos[program] = null;
    }
  function _glAttachShader(program, shader) {
      Module.ctx.attachShader(GL.programs[program],
                              GL.shaders[shader]);
    }
  function _glDetachShader(program, shader) {
      Module.ctx.detachShader(GL.programs[program],
                              GL.shaders[shader]);
    }
  function _glGetShaderPrecisionFormat() { throw 'glGetShaderPrecisionFormat: TODO' }
  function _glLinkProgram(program) {
      Module.ctx.linkProgram(GL.programs[program]);
      GL.programInfos[program] = null; // uniforms no longer keep the same names after linking
      GL.populateUniformTable(program);
    }
  function _glGetProgramInfoLog(program, maxLength, length, infoLog) {
      var log = Module.ctx.getProgramInfoLog(GL.programs[program]);
      // Work around a bug in Chromium which causes getProgramInfoLog to return null
      if (!log) {
        log = "";
      }
      log = log.substr(0, maxLength - 1);
      writeStringToMemory(log, infoLog);
      if (length) {
        HEAP32[((length)>>2)]=log.length
      }
    }
  function _glUseProgram(program) {
      Module.ctx.useProgram(program ? GL.programs[program] : null);
    }
  function _glValidateProgram(program) {
      Module.ctx.validateProgram(GL.programs[program]);
    }
  function _glIsProgram(program) {
      var program = GL.programs[program];
      if (!program) return 0;
      return Module.ctx.isProgram(program);
    }
  function _glBindAttribLocation(program, index, name) {
      name = Pointer_stringify(name);
      Module.ctx.bindAttribLocation(GL.programs[program], index, name);
    }
  function _glBindFramebuffer(target, framebuffer) {
      Module.ctx.bindFramebuffer(target, framebuffer ? GL.framebuffers[framebuffer] : null);
    }
  function _glGenFramebuffers(n, ids) {
      for (var i = 0; i < n; ++i) {
        var id = GL.getNewId(GL.framebuffers);
        var framebuffer = Module.ctx.createFramebuffer();
        framebuffer.name = id;
        GL.framebuffers[id] = framebuffer;
        HEAP32[(((ids)+(i*4))>>2)]=id;
      }
    }
  function _glDeleteFramebuffers(n, framebuffers) {
      for (var i = 0; i < n; ++i) {
        var id = HEAP32[(((framebuffers)+(i*4))>>2)];
        var framebuffer = GL.framebuffers[id];
        Module.ctx.deleteFramebuffer(framebuffer);
        framebuffer.name = 0;
        GL.framebuffers[id] = null;
      }
    }
  function _glFramebufferRenderbuffer(target, attachment, renderbuffertarget, renderbuffer) {
      Module.ctx.framebufferRenderbuffer(target, attachment, renderbuffertarget,
                                         GL.renderbuffers[renderbuffer]);
    }
  function _glFramebufferTexture2D(target, attachment, textarget, texture, level) {
      Module.ctx.framebufferTexture2D(target, attachment, textarget,
                                      GL.textures[texture], level);
    }
  function _glGetFramebufferAttachmentParameteriv(target, attachment, pname, params) {
      var result = Module.ctx.getFramebufferAttachmentParameter(target, attachment, pname);
      HEAP32[((params)>>2)]=result;
    }
  function _glIsFramebuffer(framebuffer) {
      var fb = GL.framebuffers[framebuffer];
      if (!fb) return 0;
      return Module.ctx.isFramebuffer(fb);
    }
  function _glGenVertexArrays(n , arrays) {
      for (var i = 0; i < n ; i++) {
        var id = GL.getNewId(GL.vaos);
        var vao = GL.vaoExt.createVertexArrayOES();
        vao.name = id;
        GL.vaos[id] = vao;
        HEAP32[(((arrays)+(i*4))>>2)]=id;
      }
    }
  function _glDeleteVertexArrays(n, vaos) {
      for (var i = 0; i < n; i++) {
        var id = HEAP32[(((vaos)+(i*4))>>2)];
        GL.vaoExt.deleteVertexArrayOES(GL.vaos[id]);
        GL.vaos[id] = null;
      }
    }
  function _glBindVertexArray(vao) {
      GL.vaoExt.bindVertexArrayOES(GL.vaos[vao]);
    }
  function _glIsVertexArray(array) {
      var vao = GL.vaos[array];
      if (!vao) return 0;
      return GL.vaoExt.isVertexArrayOES(vao);
    }
  function _glDeleteObject(id) {
      if (GL.programs[id]) {
        _glDeleteProgram(id);
      } else if (GL.shaders[id]) {
        _glDeleteShader(id);
      } else {
        Module.printErr('WARNING: deleteObject received invalid id: ' + id);
      }
    }
  function _glGetObjectParameteriv(id, type, result) {
      if (GL.programs[id]) {
        if (type == 0x8B84) { // GL_OBJECT_INFO_LOG_LENGTH_ARB
          HEAP32[((result)>>2)]=Module.ctx.getProgramInfoLog(GL.programs[id]).length;
          return;
        }
        _glGetProgramiv(id, type, result);
      } else if (GL.shaders[id]) {
        if (type == 0x8B84) { // GL_OBJECT_INFO_LOG_LENGTH_ARB
          HEAP32[((result)>>2)]=Module.ctx.getShaderInfoLog(GL.shaders[id]).length;
          return;
        } else if (type == 0x8B88) { // GL_OBJECT_SHADER_SOURCE_LENGTH_ARB
          HEAP32[((result)>>2)]=Module.ctx.getShaderSource(GL.shaders[id]).length;
          return;
        }
        _glGetShaderiv(id, type, result);
      } else {
        Module.printErr('WARNING: getObjectParameteriv received invalid id: ' + id);
      }
    }
  function _glGetInfoLog(id, maxLength, length, infoLog) {
      if (GL.programs[id]) {
        _glGetProgramInfoLog(id, maxLength, length, infoLog);
      } else if (GL.shaders[id]) {
        _glGetShaderInfoLog(id, maxLength, length, infoLog);
      } else {
        Module.printErr('WARNING: getObjectParameteriv received invalid id: ' + id);
      }
    }
  function _glBindProgram(type, id) {
    }
  function _glGetPointerv(name, p) {
      var attribute;
      switch(name) {
        case 0x808E: // GL_VERTEX_ARRAY_POINTER
          attribute = GLImmediate.clientAttributes[GLImmediate.VERTEX]; break;
        case 0x8090: // GL_COLOR_ARRAY_POINTER
          attribute = GLImmediate.clientAttributes[GLImmediate.COLOR]; break;
        case 0x8092: // GL_TEXTURE_COORD_ARRAY_POINTER
          attribute = GLImmediate.clientAttributes[GLImmediate.TEXTURE0 + GLImmediate.clientActiveTexture]; break;
        default:
          GL.recordError(0x0500/*GL_INVALID_ENUM*/);
          return;
      }
      HEAP32[((p)>>2)]=attribute ? attribute.pointer : 0;
    }
  function _glEnable(x0) { Module.ctx.enable(x0) }
  function _glDisable(x0) { Module.ctx.disable(x0) }
  function _glIsEnabled(x0) { return Module.ctx.isEnabled(x0) }
  function _glHint(x0, x1) { Module.ctx.hint(x0, x1) }
  function _glEnableVertexAttribArray(index) {
      Module.ctx.enableVertexAttribArray(index);
    }
  function _glDisableVertexAttribArray(index) {
      Module.ctx.disableVertexAttribArray(index);
    }
  function _glVertexAttribPointer(index, size, type, normalized, stride, ptr) {
      Module.ctx.vertexAttribPointer(index, size, type, normalized, stride, ptr);
    }
  function _glActiveTexture(x0) { Module.ctx.activeTexture(x0) }var GLEmulation={fogStart:0,fogEnd:1,fogDensity:1,fogColor:null,fogMode:2048,fogEnabled:false,vaos:[],currentVao:null,enabledVertexAttribArrays:{},hasRunInit:false,init:function () {
        // Do not activate immediate/emulation code (e.g. replace glDrawElements) when in FULL_ES2 mode.
        // We do not need full emulation, we instead emulate client-side arrays etc. in FULL_ES2 code in
        // a straightforward manner, and avoid not having a bound buffer be ambiguous between es2 emulation
        // code and legacy gl emulation code.
        if (GLEmulation.hasRunInit) {
          return;
        }
        GLEmulation.hasRunInit = true;
        GLEmulation.fogColor = new Float32Array(4);
        // Add some emulation workarounds
        Module.printErr('WARNING: using emscripten GL emulation. This is a collection of limited workarounds, do not expect it to work.');
        // XXX some of the capabilities we don't support may lead to incorrect rendering, if we do not emulate them in shaders
        var validCapabilities = {
          0x0B44: 1, // GL_CULL_FACE
          0x0BE2: 1, // GL_BLEND
          0x0BD0: 1, // GL_DITHER,
          0x0B90: 1, // GL_STENCIL_TEST
          0x0B71: 1, // GL_DEPTH_TEST
          0x0C11: 1, // GL_SCISSOR_TEST
          0x8037: 1, // GL_POLYGON_OFFSET_FILL
          0x809E: 1, // GL_SAMPLE_ALPHA_TO_COVERAGE
          0x80A0: 1  // GL_SAMPLE_COVERAGE
        };
        var glEnable = _glEnable;
        _glEnable = function _glEnable(cap) {
          // Clean up the renderer on any change to the rendering state. The optimization of
          // skipping renderer setup is aimed at the case of multiple glDraw* right after each other
          if (GL.immediate.lastRenderer) GL.immediate.lastRenderer.cleanup();
          if (cap == 0x0B60 /* GL_FOG */) {
            GLEmulation.fogEnabled = true;
            return;
          } else if (cap == 0x0de1 /* GL_TEXTURE_2D */) {
            // XXX not according to spec, and not in desktop GL, but works in some GLES1.x apparently, so support
            // it by forwarding to glEnableClientState
            /* Actually, let's not, for now. (This sounds exceedingly broken)
             * This is in gl_ps_workaround2.c.
            _glEnableClientState(cap);
            */
            return;
          } else if (!(cap in validCapabilities)) {
            return;
          }
          glEnable(cap);
        };
        var glDisable = _glDisable;
        _glDisable = function _glDisable(cap) {
          if (GL.immediate.lastRenderer) GL.immediate.lastRenderer.cleanup();
          if (cap == 0x0B60 /* GL_FOG */) {
            GLEmulation.fogEnabled = false;
            return;
          } else if (cap == 0x0de1 /* GL_TEXTURE_2D */) {
            // XXX not according to spec, and not in desktop GL, but works in some GLES1.x apparently, so support
            // it by forwarding to glDisableClientState
            /* Actually, let's not, for now. (This sounds exceedingly broken)
             * This is in gl_ps_workaround2.c.
            _glDisableClientState(cap);
            */
            return;
          } else if (!(cap in validCapabilities)) {
            return;
          }
          glDisable(cap);
        };
        _glIsEnabled = function _glIsEnabled(cap) {
          if (cap == 0x0B60 /* GL_FOG */) {
            return GLEmulation.fogEnabled ? 1 : 0;
          } else if (!(cap in validCapabilities)) {
            return 0;
          }
          return Module.ctx.isEnabled(cap);
        };
        var glGetBooleanv = _glGetBooleanv;
        _glGetBooleanv = function _glGetBooleanv(pname, p) {
          var attrib = GLEmulation.getAttributeFromCapability(pname);
          if (attrib !== null) {
            var result = GL.immediate.enabledClientAttributes[attrib];
            HEAP8[(p)]=result === true ? 1 : 0;
            return;
          }
          glGetBooleanv(pname, p);
        };
        var glGetIntegerv = _glGetIntegerv;
        _glGetIntegerv = function _glGetIntegerv(pname, params) {
          switch (pname) {
            case 0x84E2: pname = Module.ctx.MAX_TEXTURE_IMAGE_UNITS /* fake it */; break; // GL_MAX_TEXTURE_UNITS
            case 0x8B4A: { // GL_MAX_VERTEX_UNIFORM_COMPONENTS_ARB
              var result = Module.ctx.getParameter(Module.ctx.MAX_VERTEX_UNIFORM_VECTORS);
              HEAP32[((params)>>2)]=result*4; // GLES gives num of 4-element vectors, GL wants individual components, so multiply
              return;
            }
            case 0x8B49: { // GL_MAX_FRAGMENT_UNIFORM_COMPONENTS_ARB
              var result = Module.ctx.getParameter(Module.ctx.MAX_FRAGMENT_UNIFORM_VECTORS);
              HEAP32[((params)>>2)]=result*4; // GLES gives num of 4-element vectors, GL wants individual components, so multiply
              return;
            }
            case 0x8B4B: { // GL_MAX_VARYING_FLOATS_ARB
              var result = Module.ctx.getParameter(Module.ctx.MAX_VARYING_VECTORS);
              HEAP32[((params)>>2)]=result*4; // GLES gives num of 4-element vectors, GL wants individual components, so multiply
              return;
            }
            case 0x8871: pname = Module.ctx.MAX_COMBINED_TEXTURE_IMAGE_UNITS /* close enough */; break; // GL_MAX_TEXTURE_COORDS
            case 0x807A: { // GL_VERTEX_ARRAY_SIZE
              var attribute = GLImmediate.clientAttributes[GLImmediate.VERTEX];
              HEAP32[((params)>>2)]=attribute ? attribute.size : 0;
              return;
            }
            case 0x807B: { // GL_VERTEX_ARRAY_TYPE
              var attribute = GLImmediate.clientAttributes[GLImmediate.VERTEX];
              HEAP32[((params)>>2)]=attribute ? attribute.type : 0;
              return;
            }
            case 0x807C: { // GL_VERTEX_ARRAY_STRIDE
              var attribute = GLImmediate.clientAttributes[GLImmediate.VERTEX];
              HEAP32[((params)>>2)]=attribute ? attribute.stride : 0;
              return;
            }
            case 0x8081: { // GL_COLOR_ARRAY_SIZE
              var attribute = GLImmediate.clientAttributes[GLImmediate.COLOR];
              HEAP32[((params)>>2)]=attribute ? attribute.size : 0;
              return;
            }
            case 0x8082: { // GL_COLOR_ARRAY_TYPE
              var attribute = GLImmediate.clientAttributes[GLImmediate.COLOR];
              HEAP32[((params)>>2)]=attribute ? attribute.type : 0;
              return;
            }
            case 0x8083: { // GL_COLOR_ARRAY_STRIDE
              var attribute = GLImmediate.clientAttributes[GLImmediate.COLOR];
              HEAP32[((params)>>2)]=attribute ? attribute.stride : 0;
              return;
            }
            case 0x8088: { // GL_TEXTURE_COORD_ARRAY_SIZE
              var attribute = GLImmediate.clientAttributes[GLImmediate.TEXTURE0 + GLImmediate.clientActiveTexture];
              HEAP32[((params)>>2)]=attribute ? attribute.size : 0;
              return;
            }
            case 0x8089: { // GL_TEXTURE_COORD_ARRAY_TYPE
              var attribute = GLImmediate.clientAttributes[GLImmediate.TEXTURE0 + GLImmediate.clientActiveTexture];
              HEAP32[((params)>>2)]=attribute ? attribute.type : 0;
              return;
            }
            case 0x808A: { // GL_TEXTURE_COORD_ARRAY_STRIDE
              var attribute = GLImmediate.clientAttributes[GLImmediate.TEXTURE0 + GLImmediate.clientActiveTexture];
              HEAP32[((params)>>2)]=attribute ? attribute.stride : 0;
              return;
            }
          }
          glGetIntegerv(pname, params);
        };
        var glGetString = _glGetString;
        _glGetString = function _glGetString(name_) {
          if (GL.stringCache[name_]) return GL.stringCache[name_];
          switch(name_) {
            case 0x1F03 /* GL_EXTENSIONS */: // Add various extensions that we can support
              var ret = allocate(intArrayFromString(Module.ctx.getSupportedExtensions().join(' ') +
                     ' GL_EXT_texture_env_combine GL_ARB_texture_env_crossbar GL_ATI_texture_env_combine3 GL_NV_texture_env_combine4 GL_EXT_texture_env_dot3 GL_ARB_multitexture GL_ARB_vertex_buffer_object GL_EXT_framebuffer_object GL_ARB_vertex_program GL_ARB_fragment_program GL_ARB_shading_language_100 GL_ARB_shader_objects GL_ARB_vertex_shader GL_ARB_fragment_shader GL_ARB_texture_cube_map GL_EXT_draw_range_elements' +
                     (GL.compressionExt ? ' GL_ARB_texture_compression GL_EXT_texture_compression_s3tc' : '') +
                     (GL.anisotropicExt ? ' GL_EXT_texture_filter_anisotropic' : '')
              ), 'i8', ALLOC_NORMAL);
              GL.stringCache[name_] = ret;
              return ret;
          }
          return glGetString(name_);
        };
        // Do some automatic rewriting to work around GLSL differences. Note that this must be done in
        // tandem with the rest of the program, by itself it cannot suffice.
        // Note that we need to remember shader types for this rewriting, saving sources makes it easier to debug.
        GL.shaderInfos = {};
        var glCreateShader = _glCreateShader;
        _glCreateShader = function _glCreateShader(shaderType) {
          var id = glCreateShader(shaderType);
          GL.shaderInfos[id] = {
            type: shaderType,
            ftransform: false
          };
          return id;
        };
        function ensurePrecision(source) {
          if (!/precision +(low|medium|high)p +float *;/.test(source)) {
            source = 'precision mediump float;\n' + source;
          }
          return source;
        }
        var glShaderSource = _glShaderSource;
        _glShaderSource = function _glShaderSource(shader, count, string, length) {
          var source = GL.getSource(shader, count, string, length);
          // XXX We add attributes and uniforms to shaders. The program can ask for the # of them, and see the
          // ones we generated, potentially confusing it? Perhaps we should hide them.
          if (GL.shaderInfos[shader].type == Module.ctx.VERTEX_SHADER) {
            // Replace ftransform() with explicit project/modelview transforms, and add position and matrix info.
            var has_pm = source.search(/u_projection/) >= 0;
            var has_mm = source.search(/u_modelView/) >= 0;
            var has_pv = source.search(/a_position/) >= 0;
            var need_pm = 0, need_mm = 0, need_pv = 0;
            var old = source;
            source = source.replace(/ftransform\(\)/g, '(u_projection * u_modelView * a_position)');
            if (old != source) need_pm = need_mm = need_pv = 1;
            old = source;
            source = source.replace(/gl_ProjectionMatrix/g, 'u_projection');
            if (old != source) need_pm = 1;
            old = source;
            source = source.replace(/gl_ModelViewMatrixTranspose\[2\]/g, 'vec4(u_modelView[0][2], u_modelView[1][2], u_modelView[2][2], u_modelView[3][2])'); // XXX extremely inefficient
            if (old != source) need_mm = 1;
            old = source;
            source = source.replace(/gl_ModelViewMatrix/g, 'u_modelView');
            if (old != source) need_mm = 1;
            old = source;
            source = source.replace(/gl_Vertex/g, 'a_position');
            if (old != source) need_pv = 1;
            old = source;
            source = source.replace(/gl_ModelViewProjectionMatrix/g, '(u_projection * u_modelView)');
            if (old != source) need_pm = need_mm = 1;
            if (need_pv && !has_pv) source = 'attribute vec4 a_position; \n' + source;
            if (need_mm && !has_mm) source = 'uniform mat4 u_modelView; \n' + source;
            if (need_pm && !has_pm) source = 'uniform mat4 u_projection; \n' + source;
            GL.shaderInfos[shader].ftransform = need_pm || need_mm || need_pv; // we will need to provide the fixed function stuff as attributes and uniforms
            for (var i = 0; i < GL.immediate.MAX_TEXTURES; i++) {
              // XXX To handle both regular texture mapping and cube mapping, we use vec4 for tex coordinates.
              var old = source;
              var need_vtc = source.search('v_texCoord' + i) == -1;
              source = source.replace(new RegExp('gl_TexCoord\\[' + i + '\\]', 'g'), 'v_texCoord' + i)
                             .replace(new RegExp('gl_MultiTexCoord' + i, 'g'), 'a_texCoord' + i);
              if (source != old) {
                source = 'attribute vec4 a_texCoord' + i + '; \n' + source;
                if (need_vtc) {
                  source = 'varying vec4 v_texCoord' + i + ';   \n' + source;
                }
              }
              old = source;
              source = source.replace(new RegExp('gl_TextureMatrix\\[' + i + '\\]', 'g'), 'u_textureMatrix' + i);
              if (source != old) {
                source = 'uniform mat4 u_textureMatrix' + i + '; \n' + source;
              }
            }
            if (source.indexOf('gl_FrontColor') >= 0) {
              source = 'varying vec4 v_color; \n' +
                       source.replace(/gl_FrontColor/g, 'v_color');
            }
            if (source.indexOf('gl_Color') >= 0) {
              source = 'attribute vec4 a_color; \n' +
                       source.replace(/gl_Color/g, 'a_color');
            }
            if (source.indexOf('gl_Normal') >= 0) {
              source = 'attribute vec3 a_normal; \n' +
                       source.replace(/gl_Normal/g, 'a_normal');
            }
            // fog
            if (source.indexOf('gl_FogFragCoord') >= 0) {
              source = 'varying float v_fogFragCoord;   \n' +
                       source.replace(/gl_FogFragCoord/g, 'v_fogFragCoord');
            }
            source = ensurePrecision(source);
          } else { // Fragment shader
            for (var i = 0; i < GL.immediate.MAX_TEXTURES; i++) {
              var old = source;
              source = source.replace(new RegExp('gl_TexCoord\\[' + i + '\\]', 'g'), 'v_texCoord' + i);
              if (source != old) {
                source = 'varying vec4 v_texCoord' + i + ';   \n' + source;
              }
            }
            if (source.indexOf('gl_Color') >= 0) {
              source = 'varying vec4 v_color; \n' + source.replace(/gl_Color/g, 'v_color');
            }
            if (source.indexOf('gl_Fog.color') >= 0) {
              source = 'uniform vec4 u_fogColor;   \n' +
                       source.replace(/gl_Fog.color/g, 'u_fogColor');
            }
            if (source.indexOf('gl_Fog.end') >= 0) {
              source = 'uniform float u_fogEnd;   \n' +
                       source.replace(/gl_Fog.end/g, 'u_fogEnd');
            }
            if (source.indexOf('gl_Fog.scale') >= 0) {
              source = 'uniform float u_fogScale;   \n' +
                       source.replace(/gl_Fog.scale/g, 'u_fogScale');
            }
            if (source.indexOf('gl_Fog.density') >= 0) {
              source = 'uniform float u_fogDensity;   \n' +
                       source.replace(/gl_Fog.density/g, 'u_fogDensity');
            }
            if (source.indexOf('gl_FogFragCoord') >= 0) {
              source = 'varying float v_fogFragCoord;   \n' +
                       source.replace(/gl_FogFragCoord/g, 'v_fogFragCoord');
            }
            source = ensurePrecision(source);
          }
          Module.ctx.shaderSource(GL.shaders[shader], source);
        };
        var glCompileShader = _glCompileShader;
        _glCompileShader = function _glCompileShader(shader) {
          Module.ctx.compileShader(GL.shaders[shader]);
        };
        GL.programShaders = {};
        var glAttachShader = _glAttachShader;
        _glAttachShader = function _glAttachShader(program, shader) {
          if (!GL.programShaders[program]) GL.programShaders[program] = [];
          GL.programShaders[program].push(shader);
          glAttachShader(program, shader);
        };
        var glDetachShader = _glDetachShader;
        _glDetachShader = function _glDetachShader(program, shader) {
          var programShader = GL.programShaders[program];
          if (!programShader) {
            Module.printErr('WARNING: _glDetachShader received invalid program: ' + program);
            return;
          }
          var index = programShader.indexOf(shader);
          programShader.splice(index, 1);
          glDetachShader(program, shader);
        };
        var glUseProgram = _glUseProgram;
        _glUseProgram = function _glUseProgram(program) {
          if (GL.currProgram != program) {
            GL.currentRenderer = null; // This changes the FFP emulation shader program, need to recompute that.
            GL.currProgram = program;
          }
          glUseProgram(program);
        }
        var glDeleteProgram = _glDeleteProgram;
        _glDeleteProgram = function _glDeleteProgram(program) {
          glDeleteProgram(program);
          if (program == GL.currProgram) GL.currProgram = 0;
        };
        // If attribute 0 was not bound, bind it to 0 for WebGL performance reasons. Track if 0 is free for that.
        var zeroUsedPrograms = {};
        var glBindAttribLocation = _glBindAttribLocation;
        _glBindAttribLocation = function _glBindAttribLocation(program, index, name) {
          if (index == 0) zeroUsedPrograms[program] = true;
          glBindAttribLocation(program, index, name);
        };
        var glLinkProgram = _glLinkProgram;
        _glLinkProgram = function _glLinkProgram(program) {
          if (!(program in zeroUsedPrograms)) {
            Module.ctx.bindAttribLocation(GL.programs[program], 0, 'a_position');
          }
          glLinkProgram(program);
        };
        var glBindBuffer = _glBindBuffer;
        _glBindBuffer = function _glBindBuffer(target, buffer) {
          glBindBuffer(target, buffer);
          if (target == Module.ctx.ARRAY_BUFFER) {
            if (GLEmulation.currentVao) {
              GLEmulation.currentVao.arrayBuffer = buffer;
            }
          } else if (target == Module.ctx.ELEMENT_ARRAY_BUFFER) {
            if (GLEmulation.currentVao) GLEmulation.currentVao.elementArrayBuffer = buffer;
          }
        };
        var glGetFloatv = _glGetFloatv;
        _glGetFloatv = function _glGetFloatv(pname, params) {
          if (pname == 0x0BA6) { // GL_MODELVIEW_MATRIX
            HEAPF32.set(GL.immediate.matrix['m'], params >> 2);
          } else if (pname == 0x0BA7) { // GL_PROJECTION_MATRIX
            HEAPF32.set(GL.immediate.matrix['p'], params >> 2);
          } else if (pname == 0x0BA8) { // GL_TEXTURE_MATRIX
            HEAPF32.set(GL.immediate.matrix['t' + GL.immediate.clientActiveTexture], params >> 2);
          } else if (pname == 0x0B66) { // GL_FOG_COLOR
            HEAPF32.set(GLEmulation.fogColor, params >> 2);
          } else if (pname == 0x0B63) { // GL_FOG_START
            HEAPF32[((params)>>2)]=GLEmulation.fogStart;
          } else if (pname == 0x0B64) { // GL_FOG_END
            HEAPF32[((params)>>2)]=GLEmulation.fogEnd;
          } else if (pname == 0x0B62) { // GL_FOG_DENSITY
            HEAPF32[((params)>>2)]=GLEmulation.fogDensity;
          } else if (pname == 0x0B65) { // GL_FOG_MODE
            HEAPF32[((params)>>2)]=GLEmulation.fogMode;
          } else {
            glGetFloatv(pname, params);
          }
        };
        var glHint = _glHint;
        _glHint = function _glHint(target, mode) {
          if (target == 0x84EF) { // GL_TEXTURE_COMPRESSION_HINT
            return;
          }
          glHint(target, mode);
        };
        var glEnableVertexAttribArray = _glEnableVertexAttribArray;
        _glEnableVertexAttribArray = function _glEnableVertexAttribArray(index) {
          glEnableVertexAttribArray(index);
          GLEmulation.enabledVertexAttribArrays[index] = 1;
          if (GLEmulation.currentVao) GLEmulation.currentVao.enabledVertexAttribArrays[index] = 1;
        };
        var glDisableVertexAttribArray = _glDisableVertexAttribArray;
        _glDisableVertexAttribArray = function _glDisableVertexAttribArray(index) {
          glDisableVertexAttribArray(index);
          delete GLEmulation.enabledVertexAttribArrays[index];
          if (GLEmulation.currentVao) delete GLEmulation.currentVao.enabledVertexAttribArrays[index];
        };
        var glVertexAttribPointer = _glVertexAttribPointer;
        _glVertexAttribPointer = function _glVertexAttribPointer(index, size, type, normalized, stride, pointer) {
          glVertexAttribPointer(index, size, type, normalized, stride, pointer);
          if (GLEmulation.currentVao) { // TODO: avoid object creation here? likely not hot though
            GLEmulation.currentVao.vertexAttribPointers[index] = [index, size, type, normalized, stride, pointer];
          }
        };
      },getAttributeFromCapability:function (cap) {
        var attrib = null;
        switch (cap) {
          case 0x0de1: // GL_TEXTURE_2D - XXX not according to spec, and not in desktop GL, but works in some GLES1.x apparently, so support it
            // Fall through:
          case 0x8078: // GL_TEXTURE_COORD_ARRAY
            attrib = GL.immediate.TEXTURE0 + GL.immediate.clientActiveTexture; break;
          case 0x8074: // GL_VERTEX_ARRAY
            attrib = GL.immediate.VERTEX; break;
          case 0x8075: // GL_NORMAL_ARRAY
            attrib = GL.immediate.NORMAL; break;
          case 0x8076: // GL_COLOR_ARRAY
            attrib = GL.immediate.COLOR; break;
        }
        return attrib;
      }};var GLImmediate={MapTreeLib:null,spawnMapTreeLib:function () {
        /* A naive implementation of a map backed by an array, and accessed by
         * naive iteration along the array. (hashmap with only one bucket)
         */
        function CNaiveListMap() {
          var list = [];
          this.insert = function CNaiveListMap_insert(key, val) {
            if (this.contains(key|0)) return false;
            list.push([key, val]);
            return true;
          };
          var __contains_i;
          this.contains = function CNaiveListMap_contains(key) {
            for (__contains_i = 0; __contains_i < list.length; ++__contains_i) {
              if (list[__contains_i][0] === key) return true;
            }
            return false;
          };
          var __get_i;
          this.get = function CNaiveListMap_get(key) {
            for (__get_i = 0; __get_i < list.length; ++__get_i) {
              if (list[__get_i][0] === key) return list[__get_i][1];
            }
            return undefined;
          };
        };
        /* A tree of map nodes.
          Uses `KeyView`s to allow descending the tree without garbage.
          Example: {
            // Create our map object.
            var map = new ObjTreeMap();
            // Grab the static keyView for the map.
            var keyView = map.GetStaticKeyView();
            // Let's make a map for:
            // root: <undefined>
            //   1: <undefined>
            //     2: <undefined>
            //       5: "Three, sir!"
            //       3: "Three!"
            // Note how we can chain together `Reset` and `Next` to
            // easily descend based on multiple key fragments.
            keyView.Reset().Next(1).Next(2).Next(5).Set("Three, sir!");
            keyView.Reset().Next(1).Next(2).Next(3).Set("Three!");
          }
        */
        function CMapTree() {
          function CNLNode() {
            var map = new CNaiveListMap();
            this.child = function CNLNode_child(keyFrag) {
              if (!map.contains(keyFrag|0)) {
                map.insert(keyFrag|0, new CNLNode());
              }
              return map.get(keyFrag|0);
            };
            this.value = undefined;
            this.get = function CNLNode_get() {
              return this.value;
            };
            this.set = function CNLNode_set(val) {
              this.value = val;
            };
          }
          function CKeyView(root) {
            var cur;
            this.reset = function CKeyView_reset() {
              cur = root;
              return this;
            };
            this.reset();
            this.next = function CKeyView_next(keyFrag) {
              cur = cur.child(keyFrag);
              return this;
            };
            this.get = function CKeyView_get() {
              return cur.get();
            };
            this.set = function CKeyView_set(val) {
              cur.set(val);
            };
          };
          var root;
          var staticKeyView;
          this.createKeyView = function CNLNode_createKeyView() {
            return new CKeyView(root);
          }
          this.clear = function CNLNode_clear() {
            root = new CNLNode();
            staticKeyView = this.createKeyView();
          };
          this.clear();
          this.getStaticKeyView = function CNLNode_getStaticKeyView() {
            staticKeyView.reset();
            return staticKeyView;
          };
        };
        // Exports:
        return {
          create: function() {
            return new CMapTree();
          },
        };
      },TexEnvJIT:null,spawnTexEnvJIT:function () {
        // GL defs:
        var GL_TEXTURE0 = 0x84C0;
        var GL_TEXTURE_1D = 0x0DE0;
        var GL_TEXTURE_2D = 0x0DE1;
        var GL_TEXTURE_3D = 0x806f;
        var GL_TEXTURE_CUBE_MAP = 0x8513;
        var GL_TEXTURE_ENV = 0x2300;
        var GL_TEXTURE_ENV_MODE = 0x2200;
        var GL_TEXTURE_ENV_COLOR = 0x2201;
        var GL_TEXTURE_CUBE_MAP_POSITIVE_X = 0x8515;
        var GL_TEXTURE_CUBE_MAP_NEGATIVE_X = 0x8516;
        var GL_TEXTURE_CUBE_MAP_POSITIVE_Y = 0x8517;
        var GL_TEXTURE_CUBE_MAP_NEGATIVE_Y = 0x8518;
        var GL_TEXTURE_CUBE_MAP_POSITIVE_Z = 0x8519;
        var GL_TEXTURE_CUBE_MAP_NEGATIVE_Z = 0x851A;
        var GL_SRC0_RGB = 0x8580;
        var GL_SRC1_RGB = 0x8581;
        var GL_SRC2_RGB = 0x8582;
        var GL_SRC0_ALPHA = 0x8588;
        var GL_SRC1_ALPHA = 0x8589;
        var GL_SRC2_ALPHA = 0x858A;
        var GL_OPERAND0_RGB = 0x8590;
        var GL_OPERAND1_RGB = 0x8591;
        var GL_OPERAND2_RGB = 0x8592;
        var GL_OPERAND0_ALPHA = 0x8598;
        var GL_OPERAND1_ALPHA = 0x8599;
        var GL_OPERAND2_ALPHA = 0x859A;
        var GL_COMBINE_RGB = 0x8571;
        var GL_COMBINE_ALPHA = 0x8572;
        var GL_RGB_SCALE = 0x8573;
        var GL_ALPHA_SCALE = 0x0D1C;
        // env.mode
        var GL_ADD      = 0x0104;
        var GL_BLEND    = 0x0BE2;
        var GL_REPLACE  = 0x1E01;
        var GL_MODULATE = 0x2100;
        var GL_DECAL    = 0x2101;
        var GL_COMBINE  = 0x8570;
        // env.color/alphaCombiner
        //var GL_ADD         = 0x0104;
        //var GL_REPLACE     = 0x1E01;
        //var GL_MODULATE    = 0x2100;
        var GL_SUBTRACT    = 0x84E7;
        var GL_INTERPOLATE = 0x8575;
        // env.color/alphaSrc
        var GL_TEXTURE       = 0x1702;
        var GL_CONSTANT      = 0x8576;
        var GL_PRIMARY_COLOR = 0x8577;
        var GL_PREVIOUS      = 0x8578;
        // env.color/alphaOp
        var GL_SRC_COLOR           = 0x0300;
        var GL_ONE_MINUS_SRC_COLOR = 0x0301;
        var GL_SRC_ALPHA           = 0x0302;
        var GL_ONE_MINUS_SRC_ALPHA = 0x0303;
        var GL_RGB  = 0x1907;
        var GL_RGBA = 0x1908;
        // Our defs:
        var TEXENVJIT_NAMESPACE_PREFIX = "tej_";
        // Not actually constant, as they can be changed between JIT passes:
        var TEX_UNIT_UNIFORM_PREFIX = "uTexUnit";
        var TEX_COORD_VARYING_PREFIX = "vTexCoord";
        var PRIM_COLOR_VARYING = "vPrimColor";
        var TEX_MATRIX_UNIFORM_PREFIX = "uTexMatrix";
        // Static vars:
        var s_texUnits = null; //[];
        var s_activeTexture = 0;
        var s_requiredTexUnitsForPass = [];
        // Static funcs:
        function abort(info) {
          assert(false, "[TexEnvJIT] ABORT: " + info);
        }
        function abort_noSupport(info) {
          abort("No support: " + info);
        }
        function abort_sanity(info) {
          abort("Sanity failure: " + info);
        }
        function genTexUnitSampleExpr(texUnitID) {
          var texUnit = s_texUnits[texUnitID];
          var texType = texUnit.getTexType();
          var func = null;
          switch (texType) {
            case GL_TEXTURE_1D:
              func = "texture2D";
              break;
            case GL_TEXTURE_2D:
              func = "texture2D";
              break;
            case GL_TEXTURE_3D:
              return abort_noSupport("No support for 3D textures.");
            case GL_TEXTURE_CUBE_MAP:
              func = "textureCube";
              break;
            default:
              return abort_sanity("Unknown texType: 0x" + texType.toString(16));
          }
          var texCoordExpr = TEX_COORD_VARYING_PREFIX + texUnitID;
          if (TEX_MATRIX_UNIFORM_PREFIX != null) {
            texCoordExpr = "(" + TEX_MATRIX_UNIFORM_PREFIX + texUnitID + " * " + texCoordExpr + ")";
          }
          return func + "(" + TEX_UNIT_UNIFORM_PREFIX + texUnitID + ", " + texCoordExpr + ".xy)";
        }
        function getTypeFromCombineOp(op) {
          switch (op) {
            case GL_SRC_COLOR:
            case GL_ONE_MINUS_SRC_COLOR:
              return "vec3";
            case GL_SRC_ALPHA:
            case GL_ONE_MINUS_SRC_ALPHA:
              return "float";
          }
          return Abort_NoSupport("Unsupported combiner op: 0x" + op.toString(16));
        }
        function getCurTexUnit() {
          return s_texUnits[s_activeTexture];
        }
        function genCombinerSourceExpr(texUnitID, constantExpr, previousVar,
                                       src, op)
        {
          var srcExpr = null;
          switch (src) {
            case GL_TEXTURE:
              srcExpr = genTexUnitSampleExpr(texUnitID);
              break;
            case GL_CONSTANT:
              srcExpr = constantExpr;
              break;
            case GL_PRIMARY_COLOR:
              srcExpr = PRIM_COLOR_VARYING;
              break;
            case GL_PREVIOUS:
              srcExpr = previousVar;
              break;
            default:
                return abort_noSupport("Unsupported combiner src: 0x" + src.toString(16));
          }
          var expr = null;
          switch (op) {
            case GL_SRC_COLOR:
              expr = srcExpr + ".rgb";
              break;
            case GL_ONE_MINUS_SRC_COLOR:
              expr = "(vec3(1.0) - " + srcExpr + ".rgb)";
              break;
            case GL_SRC_ALPHA:
              expr = srcExpr + ".a";
              break;
            case GL_ONE_MINUS_SRC_ALPHA:
              expr = "(1.0 - " + srcExpr + ".a)";
              break;
            default:
              return abort_noSupport("Unsupported combiner op: 0x" + op.toString(16));
          }
          return expr;
        }
        function valToFloatLiteral(val) {
          if (val == Math.round(val)) return val + '.0';
          return val;
        }
        // Classes:
        function CTexEnv() {
          this.mode = GL_MODULATE;
          this.colorCombiner = GL_MODULATE;
          this.alphaCombiner = GL_MODULATE;
          this.colorScale = 1;
          this.alphaScale = 1;
          this.envColor = [0, 0, 0, 0];
          this.colorSrc = [
            GL_TEXTURE,
            GL_PREVIOUS,
            GL_CONSTANT
          ];
          this.alphaSrc = [
            GL_TEXTURE,
            GL_PREVIOUS,
            GL_CONSTANT
          ];
          this.colorOp = [
            GL_SRC_COLOR,
            GL_SRC_COLOR,
            GL_SRC_ALPHA
          ];
          this.alphaOp = [
            GL_SRC_ALPHA,
            GL_SRC_ALPHA,
            GL_SRC_ALPHA
          ];
          // Map GLenums to small values to efficiently pack the enums to bits for tighter access.
          this.traverseKey = {
            // mode
            0x1E01 /* GL_REPLACE */: 0,
            0x2100 /* GL_MODULATE */: 1,
            0x0104 /* GL_ADD */: 2,
            0x0BE2 /* GL_BLEND */: 3,
            0x2101 /* GL_DECAL */: 4,
            0x8570 /* GL_COMBINE */: 5,
            // additional color and alpha combiners
            0x84E7 /* GL_SUBTRACT */: 3,
            0x8575 /* GL_INTERPOLATE */: 4,
            // color and alpha src
            0x1702 /* GL_TEXTURE */: 0,
            0x8576 /* GL_CONSTANT */: 1,
            0x8577 /* GL_PRIMARY_COLOR */: 2,
            0x8578 /* GL_PREVIOUS */: 3,
            // color and alpha op
            0x0300 /* GL_SRC_COLOR */: 0,
            0x0301 /* GL_ONE_MINUS_SRC_COLOR */: 1,
            0x0302 /* GL_SRC_ALPHA */: 2,
            0x0300 /* GL_ONE_MINUS_SRC_ALPHA */: 3
          };
          // The tuple (key0,key1,key2) uniquely identifies the state of the variables in CTexEnv.
          // -1 on key0 denotes 'the whole cached key is dirty'
          this.key0 = -1;
          this.key1 = 0;
          this.key2 = 0;
          this.computeKey0 = function() {
            var k = this.traverseKey;
            var key = k[this.mode] * 1638400; // 6 distinct values.
            key += k[this.colorCombiner] * 327680; // 5 distinct values.
            key += k[this.alphaCombiner] * 65536; // 5 distinct values.
            // The above three fields have 6*5*5=150 distinct values -> 8 bits.
            key += (this.colorScale-1) * 16384; // 10 bits used.
            key += (this.alphaScale-1) * 4096; // 12 bits used.
            key += k[this.colorSrc[0]] * 1024; // 14
            key += k[this.colorSrc[1]] * 256; // 16
            key += k[this.colorSrc[2]] * 64; // 18
            key += k[this.alphaSrc[0]] * 16; // 20
            key += k[this.alphaSrc[1]] * 4; // 22
            key += k[this.alphaSrc[2]]; // 24 bits used total.
            return key;
          }
          this.computeKey1 = function() {
            var k = this.traverseKey;
            key = k[this.colorOp[0]] * 4096;
            key += k[this.colorOp[1]] * 1024;             
            key += k[this.colorOp[2]] * 256;
            key += k[this.alphaOp[0]] * 16;
            key += k[this.alphaOp[1]] * 4;
            key += k[this.alphaOp[2]];
            return key;            
          }
          // TODO: remove this. The color should not be part of the key!
          this.computeKey2 = function() {
            return this.envColor[0] * 16777216 + this.envColor[1] * 65536 + this.envColor[2] * 256 + 1 + this.envColor[3];
          }
          this.recomputeKey = function() {
            this.key0 = this.computeKey0();
            this.key1 = this.computeKey1();
            this.key2 = this.computeKey2();
          }
          this.invalidateKey = function() {
            this.key0 = -1; // The key of this texture unit must be recomputed when rendering the next time.
            GL.immediate.currentRenderer = null; // The currently used renderer must be re-evaluated at next render.
          }
          this.traverseState = function(keyView) {
            if (this.key0 == -1) {
              this.recomputeKey();
            }
            keyView.next(this.key0);
            keyView.next(this.key1);
            keyView.next(this.key2);
          };
        }
        function CTexUnit() {
          this.env = new CTexEnv();
          this.enabled_tex1D   = false;
          this.enabled_tex2D   = false;
          this.enabled_tex3D   = false;
          this.enabled_texCube = false;
          this.traverseState = function CTexUnit_traverseState(keyView) {
            var texUnitType = this.getTexType();
            keyView.next(texUnitType);
            if (!texUnitType) return;
            this.env.traverseState(keyView);
          };
        };
        // Class impls:
        CTexUnit.prototype.enabled = function CTexUnit_enabled() {
          return this.getTexType() != 0;
        }
        CTexUnit.prototype.genPassLines = function CTexUnit_genPassLines(passOutputVar, passInputVar, texUnitID) {
          if (!this.enabled()) {
            return ["vec4 " + passOutputVar + " = " + passInputVar + ";"];
          }
          return this.env.genPassLines(passOutputVar, passInputVar, texUnitID);
        }
        CTexUnit.prototype.getTexType = function CTexUnit_getTexType() {
          if (this.enabled_texCube) {
            return GL_TEXTURE_CUBE_MAP;
          } else if (this.enabled_tex3D) {
            return GL_TEXTURE_3D;
          } else if (this.enabled_tex2D) {
            return GL_TEXTURE_2D;
          } else if (this.enabled_tex1D) {
            return GL_TEXTURE_1D;
          }
          return 0;
        }
        CTexEnv.prototype.genPassLines = function CTexEnv_genPassLines(passOutputVar, passInputVar, texUnitID) {
          switch (this.mode) {
            case GL_REPLACE: {
              /* RGB:
               * Cv = Cs
               * Av = Ap // Note how this is different, and that we'll
               *            need to track the bound texture internalFormat
               *            to get this right.
               *
               * RGBA:
               * Cv = Cs
               * Av = As
               */
              return [
                "vec4 " + passOutputVar + " = " + genTexUnitSampleExpr(texUnitID) + ";",
              ];
            }
            case GL_ADD: {
              /* RGBA:
               * Cv = Cp + Cs
               * Av = ApAs
               */
              var prefix = TEXENVJIT_NAMESPACE_PREFIX + 'env' + texUnitID + "_";
              var texVar = prefix + "tex";
              var colorVar = prefix + "color";
              var alphaVar = prefix + "alpha";
              return [
                "vec4 " + texVar + " = " + genTexUnitSampleExpr(texUnitID) + ";",
                "vec3 " + colorVar + " = " + passInputVar + ".rgb + " + texVar + ".rgb;",
                "float " + alphaVar + " = " + passInputVar + ".a * " + texVar + ".a;",
                "vec4 " + passOutputVar + " = vec4(" + colorVar + ", " + alphaVar + ");",
              ];
            }
            case GL_MODULATE: {
              /* RGBA:
               * Cv = CpCs
               * Av = ApAs
               */
              var line = [
                "vec4 " + passOutputVar,
                " = ",
                  passInputVar,
                  " * ",
                  genTexUnitSampleExpr(texUnitID),
                ";",
              ];
              return [line.join("")];
            }
            case GL_DECAL: {
              /* RGBA:
               * Cv = Cp(1 - As) + CsAs
               * Av = Ap
               */
              var prefix = TEXENVJIT_NAMESPACE_PREFIX + 'env' + texUnitID + "_";
              var texVar = prefix + "tex";
              var colorVar = prefix + "color";
              var alphaVar = prefix + "alpha";
              return [
                "vec4 " + texVar + " = " + genTexUnitSampleExpr(texUnitID) + ";",
                [
                  "vec3 " + colorVar + " = ",
                    passInputVar + ".rgb * (1.0 - " + texVar + ".a)",
                      " + ",
                    texVar + ".rgb * " + texVar + ".a",
                  ";"
                ].join(""),
                "float " + alphaVar + " = " + passInputVar + ".a;",
                "vec4 " + passOutputVar + " = vec4(" + colorVar + ", " + alphaVar + ");",
              ];
            }
            case GL_BLEND: {
              /* RGBA:
               * Cv = Cp(1 - Cs) + CcCs
               * Av = As
               */
              var prefix = TEXENVJIT_NAMESPACE_PREFIX + 'env' + texUnitID + "_";
              var texVar = prefix + "tex";
              var colorVar = prefix + "color";
              var alphaVar = prefix + "alpha";
              return [
                "vec4 " + texVar + " = " + genTexUnitSampleExpr(texUnitID) + ";",
                [
                  "vec3 " + colorVar + " = ",
                    passInputVar + ".rgb * (1.0 - " + texVar + ".rgb)",
                      " + ",
                    PRIM_COLOR_VARYING + ".rgb * " + texVar + ".rgb",
                  ";"
                ].join(""),
                "float " + alphaVar + " = " + texVar + ".a;",
                "vec4 " + passOutputVar + " = vec4(" + colorVar + ", " + alphaVar + ");",
              ];
            }
            case GL_COMBINE: {
              var prefix = TEXENVJIT_NAMESPACE_PREFIX + 'env' + texUnitID + "_";
              var colorVar = prefix + "color";
              var alphaVar = prefix + "alpha";
              var colorLines = this.genCombinerLines(true, colorVar,
                                                     passInputVar, texUnitID,
                                                     this.colorCombiner, this.colorSrc, this.colorOp);
              var alphaLines = this.genCombinerLines(false, alphaVar,
                                                     passInputVar, texUnitID,
                                                     this.alphaCombiner, this.alphaSrc, this.alphaOp);
              var line = [
                "vec4 " + passOutputVar,
                " = ",
                  "vec4(",
                      colorVar + " * " + valToFloatLiteral(this.colorScale),
                      ", ",
                      alphaVar + " * " + valToFloatLiteral(this.alphaScale),
                  ")",
                ";",
              ].join("");
              return [].concat(colorLines, alphaLines, [line]);
            }
          }
          return Abort_NoSupport("Unsupported TexEnv mode: 0x" + this.mode.toString(16));
        }
        CTexEnv.prototype.genCombinerLines = function CTexEnv_getCombinerLines(isColor, outputVar,
                                                                               passInputVar, texUnitID,
                                                                               combiner, srcArr, opArr)
        {
          var argsNeeded = null;
          switch (combiner) {
            case GL_REPLACE:
              argsNeeded = 1;
              break;
            case GL_MODULATE:
            case GL_ADD:
            case GL_SUBTRACT:
              argsNeeded = 2;
              break;
            case GL_INTERPOLATE:
              argsNeeded = 3;
              break;
            default:
              return abort_noSupport("Unsupported combiner: 0x" + combiner.toString(16));
          }
          var constantExpr = [
            "vec4(",
              valToFloatLiteral(this.envColor[0]),
              ", ",
              valToFloatLiteral(this.envColor[1]),
              ", ",
              valToFloatLiteral(this.envColor[2]),
              ", ",
              valToFloatLiteral(this.envColor[3]),
            ")",
          ].join("");
          var src0Expr = (argsNeeded >= 1) ? genCombinerSourceExpr(texUnitID, constantExpr, passInputVar, srcArr[0], opArr[0])
                                           : null;
          var src1Expr = (argsNeeded >= 2) ? genCombinerSourceExpr(texUnitID, constantExpr, passInputVar, srcArr[1], opArr[1])
                                           : null;
          var src2Expr = (argsNeeded >= 3) ? genCombinerSourceExpr(texUnitID, constantExpr, passInputVar, srcArr[2], opArr[2])
                                           : null;
          var outputType = isColor ? "vec3" : "float";
          var lines = null;
          switch (combiner) {
            case GL_REPLACE: {
              var line = [
                outputType + " " + outputVar,
                " = ",
                  src0Expr,
                ";",
              ];
              lines = [line.join("")];
              break;
            }
            case GL_MODULATE: {
              var line = [
                outputType + " " + outputVar + " = ",
                  src0Expr + " * " + src1Expr,
                ";",
              ];
              lines = [line.join("")];
              break;
            }
            case GL_ADD: {
              var line = [
                outputType + " " + outputVar + " = ",
                  src0Expr + " + " + src1Expr,
                ";",
              ];
              lines = [line.join("")];
              break;
            }
            case GL_SUBTRACT: {
              var line = [
                outputType + " " + outputVar + " = ",
                  src0Expr + " - " + src1Expr,
                ";",
              ];
              lines = [line.join("")];
              break;
            }
            case GL_INTERPOLATE: {
              var prefix = TEXENVJIT_NAMESPACE_PREFIX + 'env' + texUnitID + "_";
              var arg2Var = prefix + "colorSrc2";
              var arg2Line = getTypeFromCombineOp(this.colorOp[2]) + " " + arg2Var + " = " + src2Expr + ";";
              var line = [
                outputType + " " + outputVar,
                " = ",
                  src0Expr + " * " + arg2Var,
                  " + ",
                  src1Expr + " * (1.0 - " + arg2Var + ")",
                ";",
              ];
              lines = [
                arg2Line,
                line.join(""),
              ];
              break;
            }
            default:
              return abort_sanity("Unmatched TexEnv.colorCombiner?");
          }
          return lines;
        }
        return {
          // Exports:
          init: function(gl, specifiedMaxTextureImageUnits) {
            var maxTexUnits = 0;
            if (specifiedMaxTextureImageUnits) {
              maxTexUnits = specifiedMaxTextureImageUnits;
            } else if (gl) {
              maxTexUnits = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS);
            }
            s_texUnits = [];
            for (var i = 0; i < maxTexUnits; i++) {
              s_texUnits.push(new CTexUnit());
            }
          },
          setGLSLVars: function(uTexUnitPrefix, vTexCoordPrefix, vPrimColor, uTexMatrixPrefix) {
            TEX_UNIT_UNIFORM_PREFIX   = uTexUnitPrefix;
            TEX_COORD_VARYING_PREFIX  = vTexCoordPrefix;
            PRIM_COLOR_VARYING        = vPrimColor;
            TEX_MATRIX_UNIFORM_PREFIX = uTexMatrixPrefix;
          },
          genAllPassLines: function(resultDest, indentSize) {
            indentSize = indentSize || 0;
            s_requiredTexUnitsForPass.length = 0; // Clear the list.
            var lines = [];
            var lastPassVar = PRIM_COLOR_VARYING;
            for (var i = 0; i < s_texUnits.length; i++) {
              if (!s_texUnits[i].enabled()) continue;
              s_requiredTexUnitsForPass.push(i);
              var prefix = TEXENVJIT_NAMESPACE_PREFIX + 'env' + i + "_";
              var passOutputVar = prefix + "result";
              var newLines = s_texUnits[i].genPassLines(passOutputVar, lastPassVar, i);
              lines = lines.concat(newLines, [""]);
              lastPassVar = passOutputVar;
            }
            lines.push(resultDest + " = " + lastPassVar + ";");
            var indent = "";
            for (var i = 0; i < indentSize; i++) indent += " ";
            var output = indent + lines.join("\n" + indent);
            return output;
          },
          getUsedTexUnitList: function() {
            return s_requiredTexUnitsForPass;
          },
          traverseState: function(keyView) {
            for (var i = 0; i < s_texUnits.length; i++) {
              var texUnit = s_texUnits[i];
              var enabled = texUnit.enabled();
              keyView.next(enabled);
              if (enabled) {
                texUnit.traverseState(keyView);
              }
            }
          },
          getTexUnitType: function(texUnitID) {
            return s_texUnits[texUnitID].getTexType();
          },
          // Hooks:
          hook_activeTexture: function(texture) {
            s_activeTexture = texture - GL_TEXTURE0;
          },
          hook_enable: function(cap) {
            var cur = getCurTexUnit();
            switch (cap) {
              case GL_TEXTURE_1D:
                if (!cur.enabled_tex1D) {
                  GL.immediate.currentRenderer = null; // Renderer state changed, and must be recreated or looked up again.
                  cur.enabled_tex1D = true;
                }
                break;
              case GL_TEXTURE_2D:
                if (!cur.enabled_tex2D) {
                  GL.immediate.currentRenderer = null;
                  cur.enabled_tex2D = true;
                }
                break;
              case GL_TEXTURE_3D:
                if (!cur.enabled_tex3D) {
                  GL.immediate.currentRenderer = null;
                  cur.enabled_tex3D = true;
                }
                break;
              case GL_TEXTURE_CUBE_MAP:
                if (!cur.enabled_texCube) {
                  GL.immediate.currentRenderer = null;
                  cur.enabled_texCube = true;
                }
                break;
            }
          },
          hook_disable: function(cap) {
            var cur = getCurTexUnit();
            switch (cap) {
              case GL_TEXTURE_1D:
                if (cur.enabled_tex1D) {
                  GL.immediate.currentRenderer = null; // Renderer state changed, and must be recreated or looked up again.
                  cur.enabled_tex1D = false;
                }
                break;
              case GL_TEXTURE_2D:
                if (cur.enabled_tex2D) {
                  GL.immediate.currentRenderer = null;
                  cur.enabled_tex2D = false;
                }
                break;
              case GL_TEXTURE_3D:
                if (cur.enabled_tex3D) {
                  GL.immediate.currentRenderer = null;
                  cur.enabled_tex3D = false;
                }
                break;
              case GL_TEXTURE_CUBE_MAP:
                if (cur.enabled_texCube) {
                  GL.immediate.currentRenderer = null;
                  cur.enabled_texCube = false;
                }
                break;
            }
          },
          hook_texEnvf: function(target, pname, param) {
            if (target != GL_TEXTURE_ENV)
              return;
            var env = getCurTexUnit().env;
            switch (pname) {
              case GL_RGB_SCALE:
                if (env.colorScale != param) {
                  env.invalidateKey(); // We changed FFP emulation renderer state.
                  env.colorScale = param;
                }
                break;
              case GL_ALPHA_SCALE:
                if (env.alphaScale != param) {
                  env.invalidateKey();
                  env.alphaScale = param;
                }
                break;
              default:
                Module.printErr('WARNING: Unhandled `pname` in call to `glTexEnvf`.');
            }
          },
          hook_texEnvi: function(target, pname, param) {
            if (target != GL_TEXTURE_ENV)
              return;
            var env = getCurTexUnit().env;
            switch (pname) {
              case GL_TEXTURE_ENV_MODE:
                if (env.mode != param) {
                  env.invalidateKey(); // We changed FFP emulation renderer state.
                  env.mode = param;
                }
                break;
              case GL_COMBINE_RGB:
                if (env.colorCombiner != param) {
                  env.invalidateKey();
                  env.colorCombiner = param;
                }
                break;
              case GL_COMBINE_ALPHA:
                if (env.alphaCombiner != param) {
                  env.invalidateKey();
                  env.alphaCombiner = param;
                }
                break;
              case GL_SRC0_RGB:
                if (env.colorSrc[0] != param) {
                  env.invalidateKey();
                  env.colorSrc[0] = param;
                }
                break;
              case GL_SRC1_RGB:
                if (env.colorSrc[1] != param) {
                  env.invalidateKey();
                  env.colorSrc[1] = param;
                }
                break;
              case GL_SRC2_RGB:
                if (env.colorSrc[2] != param) {
                  env.invalidateKey();
                  env.colorSrc[2] = param;
                }
                break;
              case GL_SRC0_ALPHA:
                if (env.alphaSrc[0] != param) {
                  env.invalidateKey();
                  env.alphaSrc[0] = param;
                }
                break;
              case GL_SRC1_ALPHA:
                if (env.alphaSrc[1] != param) {
                  env.invalidateKey();
                  env.alphaSrc[1] = param;
                }
                break;
              case GL_SRC2_ALPHA:
                if (env.alphaSrc[2] != param) {
                  env.invalidateKey();
                  env.alphaSrc[2] = param;
                }
                break;
              case GL_OPERAND0_RGB:
                if (env.colorOp[0] != param) {
                  env.invalidateKey();
                  env.colorOp[0] = param;
                }
                break;
              case GL_OPERAND1_RGB:
                if (env.colorOp[1] != param) {
                  env.invalidateKey();
                  env.colorOp[1] = param;
                }
                break;
              case GL_OPERAND2_RGB:
                if (env.colorOp[2] != param) {
                  env.invalidateKey();
                  env.colorOp[2] = param;
                }
                break;
              case GL_OPERAND0_ALPHA:
                if (env.alphaOp[0] != param) {
                  env.invalidateKey();
                  env.alphaOp[0] = param;
                }
                break;
              case GL_OPERAND1_ALPHA:
                if (env.alphaOp[1] != param) {
                  env.invalidateKey();
                  env.alphaOp[1] = param;
                }
                break;
              case GL_OPERAND2_ALPHA:
                if (env.alphaOp[2] != param) {
                  env.invalidateKey();
                  env.alphaOp[2] = param;
                }
                break;
              case GL_RGB_SCALE:
                if (env.colorScale != param) {
                  env.invalidateKey();
                  env.colorScale = param;
                }
                break;
              case GL_ALPHA_SCALE:
                if (env.alphaScale != param) {
                  env.invalidateKey();
                  env.alphaScale = param;
                }
                break;
              default:
                Module.printErr('WARNING: Unhandled `pname` in call to `glTexEnvi`.');
            }
          },
          hook_texEnvfv: function(target, pname, params) {
            if (target != GL_TEXTURE_ENV) return;
            var env = getCurTexUnit().env;
            switch (pname) {
              case GL_TEXTURE_ENV_COLOR: {
                for (var i = 0; i < 4; i++) {
                  var param = HEAPF32[(((params)+(i*4))>>2)];
                  if (env.envColor[i] != param) {
                    env.invalidateKey(); // We changed FFP emulation renderer state.
                    env.envColor[i] = param;
                  }
                }
                break
              }
              default:
                Module.printErr('WARNING: Unhandled `pname` in call to `glTexEnvfv`.');
            }
          },
        };
      },vertexData:null,vertexDataU8:null,tempData:null,indexData:null,vertexCounter:0,mode:-1,rendererCache:null,rendererComponents:[],rendererComponentPointer:0,lastRenderer:null,lastArrayBuffer:null,lastProgram:null,lastStride:-1,matrix:{},matrixStack:{},currentMatrix:"m",tempMatrix:null,matricesModified:false,useTextureMatrix:false,VERTEX:0,NORMAL:1,COLOR:2,TEXTURE0:3,NUM_ATTRIBUTES:-1,MAX_TEXTURES:-1,totalEnabledClientAttributes:0,enabledClientAttributes:[0,0],clientAttributes:[],liveClientAttributes:[],currentRenderer:null,modifiedClientAttributes:false,clientActiveTexture:0,clientColor:null,usedTexUnitList:[],fixedFunctionProgram:null,setClientAttribute:function setClientAttribute(name, size, type, stride, pointer) {
        var attrib = this.clientAttributes[name];
        if (!attrib) {
          for (var i = 0; i <= name; i++) { // keep flat
            if (!this.clientAttributes[i]) {
              this.clientAttributes[i] = {
                name: name,
                size: size,
                type: type,
                stride: stride,
                pointer: pointer,
                offset: 0
              };
            }
          }
        } else {
          attrib.name = name;
          attrib.size = size;
          attrib.type = type;
          attrib.stride = stride;
          attrib.pointer = pointer;
          attrib.offset = 0;
        }
        this.modifiedClientAttributes = true;
      },addRendererComponent:function addRendererComponent(name, size, type) {
        if (!this.rendererComponents[name]) {
          this.rendererComponents[name] = 1;
          this.enabledClientAttributes[name] = true;
          this.setClientAttribute(name, size, type, 0, this.rendererComponentPointer);
          this.rendererComponentPointer += size * GL.byteSizeByType[type - GL.byteSizeByTypeRoot];
        } else {
          this.rendererComponents[name]++;
        }
      },disableBeginEndClientAttributes:function disableBeginEndClientAttributes() {
        for (var i = 0; i < this.NUM_ATTRIBUTES; i++) {
          if (this.rendererComponents[i]) this.enabledClientAttributes[i] = false;
        }
      },getRenderer:function getRenderer() {
        // If no FFP state has changed that would have forced to re-evaluate which FFP emulation shader to use,
        // we have the currently used renderer in cache, and can immediately return that.
        if (this.currentRenderer) {
          return this.currentRenderer;
        }
        // return a renderer object given the liveClientAttributes
        // we maintain a cache of renderers, optimized to not generate garbage
        var attributes = GL.immediate.liveClientAttributes;
        var cacheMap = GL.immediate.rendererCache;
        var temp;
        var keyView = cacheMap.getStaticKeyView().reset();
        // By attrib state:
        var enabledAttributesKey = 0;
        for (var i = 0; i < attributes.length; i++) {
          enabledAttributesKey |= 1 << attributes[i].name;
        }
        keyView.next(enabledAttributesKey);
        // By fog state:
        var fogParam = 0;
        if (GLEmulation.fogEnabled) {
          switch (GLEmulation.fogMode) {
            case 0x0801: // GL_EXP2
              fogParam = 1;
              break;
            case 0x2601: // GL_LINEAR
              fogParam = 2;
              break;
            default: // default to GL_EXP
              fogParam = 3;
              break;
          }
        }
        keyView.next(fogParam);
        // By cur program:
        keyView.next(GL.currProgram);
        if (!GL.currProgram) {
          GL.immediate.TexEnvJIT.traverseState(keyView);
        }
        // If we don't already have it, create it.
        var renderer = keyView.get();
        if (!renderer) {
          renderer = this.createRenderer();
          this.currentRenderer = renderer;
          keyView.set(renderer);
          return renderer;
        }
        this.currentRenderer = renderer; // Cache the currently used renderer, so later lookups without state changes can get this fast.
        return renderer;
      },createRenderer:function createRenderer(renderer) {
        var useCurrProgram = !!GL.currProgram;
        var hasTextures = false;
        for (var i = 0; i < GL.immediate.MAX_TEXTURES; i++) {
          var texAttribName = GL.immediate.TEXTURE0 + i;
          if (!GL.immediate.enabledClientAttributes[texAttribName])
            continue;
          hasTextures = true;
        }
        var ret = {
          init: function init() {
            // For fixed-function shader generation.
            var uTexUnitPrefix = 'u_texUnit';
            var aTexCoordPrefix = 'a_texCoord';
            var vTexCoordPrefix = 'v_texCoord';
            var vPrimColor = 'v_color';
            var uTexMatrixPrefix = GL.immediate.useTextureMatrix ? 'u_textureMatrix' : null;
            if (useCurrProgram) {
              if (GL.shaderInfos[GL.programShaders[GL.currProgram][0]].type == Module.ctx.VERTEX_SHADER) {
                this.vertexShader = GL.shaders[GL.programShaders[GL.currProgram][0]];
                this.fragmentShader = GL.shaders[GL.programShaders[GL.currProgram][1]];
              } else {
                this.vertexShader = GL.shaders[GL.programShaders[GL.currProgram][1]];
                this.fragmentShader = GL.shaders[GL.programShaders[GL.currProgram][0]];
              }
              this.program = GL.programs[GL.currProgram];
              this.usedTexUnitList = [];
            } else {
              // IMPORTANT NOTE: If you parameterize the shader source based on any runtime values
              // in order to create the least expensive shader possible based on the features being
              // used, you should also update the code in the beginning of getRenderer to make sure
              // that you cache the renderer based on the said parameters.
              if (GLEmulation.fogEnabled) {
                switch (GLEmulation.fogMode) {
                  case 0x0801: // GL_EXP2
                    // fog = exp(-(gl_Fog.density * gl_FogFragCoord)^2)
                    var fogFormula = '  float fog = exp(-u_fogDensity * u_fogDensity * ecDistance * ecDistance); \n';
                    break;
                  case 0x2601: // GL_LINEAR
                    // fog = (gl_Fog.end - gl_FogFragCoord) * gl_fog.scale
                    var fogFormula = '  float fog = (u_fogEnd - ecDistance) * u_fogScale; \n';
                    break;
                  default: // default to GL_EXP
                    // fog = exp(-gl_Fog.density * gl_FogFragCoord)
                    var fogFormula = '  float fog = exp(-u_fogDensity * ecDistance); \n';
                    break;
                }
              }
              GL.immediate.TexEnvJIT.setGLSLVars(uTexUnitPrefix, vTexCoordPrefix, vPrimColor, uTexMatrixPrefix);
              var fsTexEnvPass = GL.immediate.TexEnvJIT.genAllPassLines('gl_FragColor', 2);
              var texUnitAttribList = '';
              var texUnitVaryingList = '';
              var texUnitUniformList = '';
              var vsTexCoordInits = '';
              this.usedTexUnitList = GL.immediate.TexEnvJIT.getUsedTexUnitList();
              for (var i = 0; i < this.usedTexUnitList.length; i++) {
                var texUnit = this.usedTexUnitList[i];
                texUnitAttribList += 'attribute vec4 ' + aTexCoordPrefix + texUnit + ';\n';
                texUnitVaryingList += 'varying vec4 ' + vTexCoordPrefix + texUnit + ';\n';
                texUnitUniformList += 'uniform sampler2D ' + uTexUnitPrefix + texUnit + ';\n';
                vsTexCoordInits += '  ' + vTexCoordPrefix + texUnit + ' = ' + aTexCoordPrefix + texUnit + ';\n';
                if (GL.immediate.useTextureMatrix) {
                  texUnitUniformList += 'uniform mat4 ' + uTexMatrixPrefix + texUnit + ';\n';
                }
              }
              var vsFogVaryingInit = null;
              if (GLEmulation.fogEnabled) {
                vsFogVaryingInit = '  v_fogFragCoord = abs(ecPosition.z);\n';
              }
              var vsSource = [
                'attribute vec4 a_position;',
                'attribute vec4 a_color;',
                'varying vec4 v_color;',
                texUnitAttribList,
                texUnitVaryingList,
                (GLEmulation.fogEnabled ? 'varying float v_fogFragCoord;' : null),
                'uniform mat4 u_modelView;',
                'uniform mat4 u_projection;',
                'void main()',
                '{',
                '  vec4 ecPosition = u_modelView * a_position;', // eye-coordinate position
                '  gl_Position = u_projection * ecPosition;',
                '  v_color = a_color;',
                vsTexCoordInits,
                vsFogVaryingInit,
                '}',
                ''
              ].join('\n').replace(/\n\n+/g, '\n');
              this.vertexShader = Module.ctx.createShader(Module.ctx.VERTEX_SHADER);
              Module.ctx.shaderSource(this.vertexShader, vsSource);
              Module.ctx.compileShader(this.vertexShader);
              var fogHeaderIfNeeded = null;
              if (GLEmulation.fogEnabled) {
                fogHeaderIfNeeded = [
                  '',
                  'varying float v_fogFragCoord; ',
                  'uniform vec4 u_fogColor;      ',
                  'uniform float u_fogEnd;       ',
                  'uniform float u_fogScale;     ',
                  'uniform float u_fogDensity;   ',
                  'float ffog(in float ecDistance) { ',
                  fogFormula,
                  '  fog = clamp(fog, 0.0, 1.0); ',
                  '  return fog;                 ',
                  '}',
                  '',
                ].join("\n");
              }
              var fogPass = null;
              if (GLEmulation.fogEnabled) {
                fogPass = 'gl_FragColor = vec4(mix(u_fogColor.rgb, gl_FragColor.rgb, ffog(v_fogFragCoord)), gl_FragColor.a);\n';
              }
              var fsSource = [
                'precision mediump float;',
                texUnitVaryingList,
                texUnitUniformList,
                'varying vec4 v_color;',
                fogHeaderIfNeeded,
                'void main()',
                '{',
                fsTexEnvPass,
                fogPass,
                '}',
                ''
              ].join("\n").replace(/\n\n+/g, '\n');
              this.fragmentShader = Module.ctx.createShader(Module.ctx.FRAGMENT_SHADER);
              Module.ctx.shaderSource(this.fragmentShader, fsSource);
              Module.ctx.compileShader(this.fragmentShader);
              this.program = Module.ctx.createProgram();
              Module.ctx.attachShader(this.program, this.vertexShader);
              Module.ctx.attachShader(this.program, this.fragmentShader);
              // As optimization, bind all attributes to prespecified locations, so that the FFP emulation
              // code can submit attributes to any generated FFP shader without having to examine each shader in turn.
              // These prespecified locations are only assumed if GL_FFP_ONLY is specified, since user could also create their
              // own shaders that didn't have attributes in the same locations.
              Module.ctx.bindAttribLocation(this.program, GL.immediate.VERTEX, 'a_position');
              Module.ctx.bindAttribLocation(this.program, GL.immediate.COLOR, 'a_color');
              Module.ctx.bindAttribLocation(this.program, GL.immediate.NORMAL, 'a_normal');
              for (var i = 0; i < GL.immediate.MAX_TEXTURES; i++) {
                Module.ctx.bindAttribLocation(this.program, GL.immediate.TEXTURE0 + i, 'a_texCoord'+i);
                Module.ctx.bindAttribLocation(this.program, GL.immediate.TEXTURE0 + i, aTexCoordPrefix+i);
              }
              Module.ctx.linkProgram(this.program);
            }
            // Stores a map that remembers which matrix uniforms are up-to-date in this FFP renderer, so they don't need to be resubmitted
            // each time we render with this program.
            this.textureMatrixVersion = {};
            this.positionLocation = Module.ctx.getAttribLocation(this.program, 'a_position');
            this.texCoordLocations = [];
            for (var i = 0; i < GL.immediate.MAX_TEXTURES; i++) {
              if (!GL.immediate.enabledClientAttributes[GL.immediate.TEXTURE0 + i]) {
                this.texCoordLocations[i] = -1;
                continue;
              }
              if (useCurrProgram) {
                this.texCoordLocations[i] = Module.ctx.getAttribLocation(this.program, 'a_texCoord' + i);
              } else {
                this.texCoordLocations[i] = Module.ctx.getAttribLocation(this.program, aTexCoordPrefix + i);
              }
            }
            if (!useCurrProgram) {
              // Temporarily switch to the program so we can set our sampler uniforms early.
              var prevBoundProg = Module.ctx.getParameter(Module.ctx.CURRENT_PROGRAM);
              Module.ctx.useProgram(this.program);
              {
                for (var i = 0; i < this.usedTexUnitList.length; i++) {
                  var texUnitID = this.usedTexUnitList[i];
                  var texSamplerLoc = Module.ctx.getUniformLocation(this.program, uTexUnitPrefix + texUnitID);
                  Module.ctx.uniform1i(texSamplerLoc, texUnitID);
                }
              }
              Module.ctx.useProgram(prevBoundProg);
            }
            this.textureMatrixLocations = [];
            for (var i = 0; i < GL.immediate.MAX_TEXTURES; i++) {
              this.textureMatrixLocations[i] = Module.ctx.getUniformLocation(this.program, 'u_textureMatrix' + i);
            }
            this.colorLocation = Module.ctx.getAttribLocation(this.program, 'a_color');
            this.normalLocation = Module.ctx.getAttribLocation(this.program, 'a_normal');
            this.modelViewLocation = Module.ctx.getUniformLocation(this.program, 'u_modelView');
            this.projectionLocation = Module.ctx.getUniformLocation(this.program, 'u_projection');
            this.hasTextures = hasTextures;
            this.hasNormal = GL.immediate.enabledClientAttributes[GL.immediate.NORMAL] &&
                             GL.immediate.clientAttributes[GL.immediate.NORMAL].size > 0 &&
                             this.normalLocation >= 0;
            this.hasColor = (this.colorLocation === 0) || this.colorLocation > 0;
            this.floatType = Module.ctx.FLOAT; // minor optimization
            this.fogColorLocation = Module.ctx.getUniformLocation(this.program, 'u_fogColor');
            this.fogEndLocation = Module.ctx.getUniformLocation(this.program, 'u_fogEnd');
            this.fogScaleLocation = Module.ctx.getUniformLocation(this.program, 'u_fogScale');
            this.fogDensityLocation = Module.ctx.getUniformLocation(this.program, 'u_fogDensity');
            this.hasFog = !!(this.fogColorLocation || this.fogEndLocation ||
                             this.fogScaleLocation || this.fogDensityLocation);
          },
          prepare: function prepare() {
            // Calculate the array buffer
            var arrayBuffer;
            if (!GL.currArrayBuffer) {
              var start = GL.immediate.firstVertex*GL.immediate.stride;
              var end = GL.immediate.lastVertex*GL.immediate.stride;
              arrayBuffer = GL.tempVertexBuffers[GL.tempBufferIndexLookup[end]];
              // TODO: consider using the last buffer we bound, if it was larger. downside is larger buffer, but we might avoid rebinding and preparing
            } else {
              arrayBuffer = GL.currArrayBuffer;
            }
            if (!GL.currArrayBuffer) {
              // Bind the array buffer and upload data after cleaning up the previous renderer
                Module.ctx.bindBuffer(Module.ctx.ARRAY_BUFFER, arrayBuffer);
              Module.ctx.bufferSubData(Module.ctx.ARRAY_BUFFER, start, GL.immediate.vertexData.subarray(start >> 2, end >> 2));
            }
            if (!GL.currProgram) {
              Module.ctx.useProgram(this.program);
              GL.immediate.fixedFunctionProgram = this.program;
            }
            if (this.modelViewLocation && this.modelViewMatrixVersion != GL.immediate.matrixVersion['m']) {
              this.modelViewMatrixVersion = GL.immediate.matrixVersion['m'];
              Module.ctx.uniformMatrix4fv(this.modelViewLocation, false, GL.immediate.matrix['m']);
            }
            if (this.projectionLocation && this.projectionMatrixVersion != GL.immediate.matrixVersion['p']) {
              this.projectionMatrixVersion = GL.immediate.matrixVersion['p'];
              Module.ctx.uniformMatrix4fv(this.projectionLocation, false, GL.immediate.matrix['p']);
            }
            var clientAttributes = GL.immediate.clientAttributes;
            var posAttr = clientAttributes[GL.immediate.VERTEX];
            Module.ctx.vertexAttribPointer(this.positionLocation, posAttr.size, posAttr.type, false, GL.immediate.stride, posAttr.offset);
            Module.ctx.enableVertexAttribArray(this.positionLocation);
            if (this.hasNormal) {
              var normalAttr = clientAttributes[GL.immediate.NORMAL];
              Module.ctx.vertexAttribPointer(this.normalLocation, normalAttr.size, normalAttr.type, true, GL.immediate.stride, normalAttr.offset);
              Module.ctx.enableVertexAttribArray(this.normalLocation);
            }
            if (this.hasTextures) {
              for (var i = 0; i < GL.immediate.MAX_TEXTURES; i++) {
                var attribLoc = this.texCoordLocations[i];
                if (attribLoc === undefined || attribLoc < 0) continue;
                var texAttr = clientAttributes[GL.immediate.TEXTURE0+i];
                if (texAttr.size) {
                  Module.ctx.vertexAttribPointer(attribLoc, texAttr.size, texAttr.type, false, GL.immediate.stride, texAttr.offset);
                  Module.ctx.enableVertexAttribArray(attribLoc);
                } else {
                  // These two might be dangerous, but let's try them.
                  Module.ctx.vertexAttrib4f(attribLoc, 0, 0, 0, 1);
                  Module.ctx.disableVertexAttribArray(attribLoc);
                }
                var t = 't'+i;
                if (this.textureMatrixLocations[i] && this.textureMatrixVersion[t] != GL.immediate.matrixVersion[t]) { // XXX might we need this even without the condition we are currently in?
                  this.textureMatrixVersion[t] = GL.immediate.matrixVersion[t];
                  Module.ctx.uniformMatrix4fv(this.textureMatrixLocations[i], false, GL.immediate.matrix[t]);
                }
              }
            }
            if (GL.immediate.enabledClientAttributes[GL.immediate.COLOR]) {
              var colorAttr = clientAttributes[GL.immediate.COLOR];
              Module.ctx.vertexAttribPointer(this.colorLocation, colorAttr.size, colorAttr.type, true, GL.immediate.stride, colorAttr.offset);
              Module.ctx.enableVertexAttribArray(this.colorLocation);
            } else if (this.hasColor) {
              Module.ctx.disableVertexAttribArray(this.colorLocation);
              Module.ctx.vertexAttrib4fv(this.colorLocation, GL.immediate.clientColor);
            }
            if (this.hasFog) {
              if (this.fogColorLocation) Module.ctx.uniform4fv(this.fogColorLocation, GLEmulation.fogColor);
              if (this.fogEndLocation) Module.ctx.uniform1f(this.fogEndLocation, GLEmulation.fogEnd);
              if (this.fogScaleLocation) Module.ctx.uniform1f(this.fogScaleLocation, 1/(GLEmulation.fogEnd - GLEmulation.fogStart));
              if (this.fogDensityLocation) Module.ctx.uniform1f(this.fogDensityLocation, GLEmulation.fogDensity);
            }
          },
          cleanup: function cleanup() {
          }
        };
        ret.init();
        return ret;
      },setupFuncs:function () {
        // Replace some functions with immediate-mode aware versions. If there are no client
        // attributes enabled, and we use webgl-friendly modes (no GL_QUADS), then no need
        // for emulation
        _glDrawArrays = function _glDrawArrays(mode, first, count) {
          if (GL.immediate.totalEnabledClientAttributes == 0 && mode <= 6) {
            Module.ctx.drawArrays(mode, first, count);
            return;
          }
          GL.immediate.prepareClientAttributes(count, false);
          GL.immediate.mode = mode;
          if (!GL.currArrayBuffer) {
            GL.immediate.vertexData = HEAPF32.subarray((GL.immediate.vertexPointer)>>2,(GL.immediate.vertexPointer + (first+count)*GL.immediate.stride)>>2); // XXX assuming float
            GL.immediate.firstVertex = first;
            GL.immediate.lastVertex = first + count;
          }
          GL.immediate.flush(null, first);
          GL.immediate.mode = -1;
        };
        _glDrawElements = function _glDrawElements(mode, count, type, indices, start, end) { // start, end are given if we come from glDrawRangeElements
          if (GL.immediate.totalEnabledClientAttributes == 0 && mode <= 6 && GL.currElementArrayBuffer) {
            Module.ctx.drawElements(mode, count, type, indices);
            return;
          }
          GL.immediate.prepareClientAttributes(count, false);
          GL.immediate.mode = mode;
          if (!GL.currArrayBuffer) {
            GL.immediate.firstVertex = end ? start : TOTAL_MEMORY; // if we don't know the start, set an invalid value and we will calculate it later from the indices
            GL.immediate.lastVertex = end ? end+1 : 0;
            GL.immediate.vertexData = HEAPF32.subarray((GL.immediate.vertexPointer)>>2,((end ? GL.immediate.vertexPointer + (end+1)*GL.immediate.stride : TOTAL_MEMORY))>>2); // XXX assuming float
          }
          GL.immediate.flush(count, 0, indices);
          GL.immediate.mode = -1;
        };
        // TexEnv stuff needs to be prepared early, so do it here.
        // init() is too late for -O2, since it freezes the GL functions
        // by that point.
        GL.immediate.MapTreeLib = GL.immediate.spawnMapTreeLib();
        GL.immediate.spawnMapTreeLib = null;
        GL.immediate.TexEnvJIT = GL.immediate.spawnTexEnvJIT();
        GL.immediate.spawnTexEnvJIT = null;
        GL.immediate.setupHooks();
      },setupHooks:function () {
        if (!GLEmulation.hasRunInit) {
          GLEmulation.init();
        }
        var glActiveTexture = _glActiveTexture;
        _glActiveTexture = function _glActiveTexture(texture) {
          GL.immediate.TexEnvJIT.hook_activeTexture(texture);
          glActiveTexture(texture);
        };
        var glEnable = _glEnable;
        _glEnable = function _glEnable(cap) {
          GL.immediate.TexEnvJIT.hook_enable(cap);
          glEnable(cap);
        };
        var glDisable = _glDisable;
        _glDisable = function _glDisable(cap) {
          GL.immediate.TexEnvJIT.hook_disable(cap);
          glDisable(cap);
        };
        var glTexEnvf = (typeof(_glTexEnvf) != 'undefined') ? _glTexEnvf : function(){};
        _glTexEnvf = function _glTexEnvf(target, pname, param) {
          GL.immediate.TexEnvJIT.hook_texEnvf(target, pname, param);
          // Don't call old func, since we are the implementor.
          //glTexEnvf(target, pname, param);
        };
        var glTexEnvi = (typeof(_glTexEnvi) != 'undefined') ? _glTexEnvi : function(){};
        _glTexEnvi = function _glTexEnvi(target, pname, param) {
          GL.immediate.TexEnvJIT.hook_texEnvi(target, pname, param);
          // Don't call old func, since we are the implementor.
          //glTexEnvi(target, pname, param);
        };
        var glTexEnvfv = (typeof(_glTexEnvfv) != 'undefined') ? _glTexEnvfv : function(){};
        _glTexEnvfv = function _glTexEnvfv(target, pname, param) {
          GL.immediate.TexEnvJIT.hook_texEnvfv(target, pname, param);
          // Don't call old func, since we are the implementor.
          //glTexEnvfv(target, pname, param);
        };
        var glGetIntegerv = _glGetIntegerv;
        _glGetIntegerv = function _glGetIntegerv(pname, params) {
          switch (pname) {
            case 0x8B8D: { // GL_CURRENT_PROGRAM
              // Just query directly so we're working with WebGL objects.
              var cur = Module.ctx.getParameter(Module.ctx.CURRENT_PROGRAM);
              if (cur == GL.immediate.fixedFunctionProgram) {
                // Pretend we're not using a program.
                HEAP32[((params)>>2)]=0;
                return;
              }
              break;
            }
          }
          glGetIntegerv(pname, params);
        };
      },initted:false,init:function () {
        Module.printErr('WARNING: using emscripten GL immediate mode emulation. This is very limited in what it supports');
        GL.immediate.initted = true;
        if (!Module.useWebGL) return; // a 2D canvas may be currently used TODO: make sure we are actually called in that case
        this.TexEnvJIT.init(Module.ctx);
        // User can override the maximum number of texture units that we emulate. Using fewer texture units increases runtime performance
        // slightly, so it is advantageous to choose as small value as needed.
        GL.immediate.MAX_TEXTURES = Module['GL_MAX_TEXTURE_IMAGE_UNITS'] || Module.ctx.getParameter(Module.ctx.MAX_TEXTURE_IMAGE_UNITS);
        GL.immediate.NUM_ATTRIBUTES = 3 /*pos+normal+color attributes*/ + GL.immediate.MAX_TEXTURES;
        GL.immediate.clientAttributes = [];
        GLEmulation.enabledClientAttribIndices = [];
        for (var i = 0; i < GL.immediate.NUM_ATTRIBUTES; i++) {
          GL.immediate.clientAttributes.push({});
          GLEmulation.enabledClientAttribIndices.push(false);
        }
        this.matrixStack['m'] = [];
        this.matrixStack['p'] = [];
        for (var i = 0; i < GL.immediate.MAX_TEXTURES; i++) {
          this.matrixStack['t' + i] = [];
        }
        // Initialize matrix library
        // When user sets a matrix, increment a 'version number' on the new data, and when rendering, submit
        // the matrices to the shader program only if they have an old version of the data.
        GL.immediate.matrixVersion = {};
        GL.immediate.matrix['m'] = GL.immediate.matrix.lib.mat4.create();
        GL.immediate.matrixVersion['m'] = 0;
        GL.immediate.matrix.lib.mat4.identity(GL.immediate.matrix['m']);
        GL.immediate.matrix['p'] = GL.immediate.matrix.lib.mat4.create();
        GL.immediate.matrixVersion['p'] = 0;
        GL.immediate.matrix.lib.mat4.identity(GL.immediate.matrix['p']);
        for (var i = 0; i < GL.immediate.MAX_TEXTURES; i++) {
          GL.immediate.matrix['t' + i] = GL.immediate.matrix.lib.mat4.create();
          GL.immediate.matrixVersion['t' + i] = 0;
        }
        // Renderer cache
        this.rendererCache = this.MapTreeLib.create();
        // Buffers for data
        this.tempData = new Float32Array(GL.MAX_TEMP_BUFFER_SIZE >> 2);
        this.indexData = new Uint16Array(GL.MAX_TEMP_BUFFER_SIZE >> 1);
        this.vertexDataU8 = new Uint8Array(this.tempData.buffer);
        GL.generateTempBuffers(true);
        this.clientColor = new Float32Array([1, 1, 1, 1]);
      },prepareClientAttributes:function prepareClientAttributes(count, beginEnd) {
        // If no client attributes were modified since we were last called, do nothing. Note that this
        // does not work for glBegin/End, where we generate renderer components dynamically and then
        // disable them ourselves, but it does help with glDrawElements/Arrays.
        if (!this.modifiedClientAttributes) {
          GL.immediate.vertexCounter = (GL.immediate.stride * count) / 4; // XXX assuming float
          return;
        }
        this.modifiedClientAttributes = false;
        var stride = 0, start;
        var attributes = GL.immediate.liveClientAttributes;
        attributes.length = 0;
        for (var i = 0; i < GL.immediate.NUM_ATTRIBUTES; i++) {
          if (GL.immediate.enabledClientAttributes[i]) attributes.push(GL.immediate.clientAttributes[i]);
        }
        attributes.sort(function(x, y) { return !x ? (!y ? 0 : 1) : (!y ? -1 : (x.pointer - y.pointer)) });
        start = GL.currArrayBuffer ? 0 : attributes[0].pointer;
        var multiStrides = false;
        for (var i = 0; i < attributes.length; i++) {
          var attribute = attributes[i];
          if (!attribute) break;
          if (stride != 0 && stride != attribute.stride) multiStrides = true;
          if (attribute.stride) stride = attribute.stride;
        }
        if (multiStrides) stride = 0; // we will need to restride
        var bytes = 0; // total size in bytes
        if (!stride && !beginEnd) {
          // beginEnd can not have stride in the attributes, that is fine. otherwise,
          // no stride means that all attributes are in fact packed. to keep the rest of
          // our emulation code simple, we perform unpacking/restriding here. this adds overhead, so
          // it is a good idea to not hit this!
          if (!GL.immediate.restrideBuffer) GL.immediate.restrideBuffer = _malloc(GL.MAX_TEMP_BUFFER_SIZE);
          start = GL.immediate.restrideBuffer;
          // calculate restrided offsets and total size
          for (var i = 0; i < attributes.length; i++) {
            var attribute = attributes[i];
            if (!attribute) break;
            var size = attribute.size * GL.byteSizeByType[attribute.type - GL.byteSizeByTypeRoot];
            if (size % 4 != 0) size += 4 - (size % 4); // align everything
            attribute.offset = bytes;
            bytes += size;
          }
          // copy out the data (we need to know the stride for that, and define attribute.pointer
          for (var i = 0; i < attributes.length; i++) {
            var attribute = attributes[i];
            if (!attribute) break;
            var size4 = Math.floor((attribute.size * GL.byteSizeByType[attribute.type - GL.byteSizeByTypeRoot])/4);
            for (var j = 0; j < count; j++) {
              for (var k = 0; k < size4; k++) { // copy in chunks of 4 bytes, our alignment makes this possible
                HEAP32[((start + attribute.offset + bytes*j)>>2) + k] = HEAP32[(attribute.pointer>>2) + j*size4 + k];
              }
            }
            attribute.pointer = start + attribute.offset;
          }
        } else {
          // normal situation, everything is strided and in the same buffer
          for (var i = 0; i < attributes.length; i++) {
            var attribute = attributes[i];
            if (!attribute) break;
            attribute.offset = attribute.pointer - start;
            if (attribute.offset > bytes) { // ensure we start where we should
              bytes += attribute.offset - bytes;
            }
            bytes += attribute.size * GL.byteSizeByType[attribute.type - GL.byteSizeByTypeRoot];
            if (bytes % 4 != 0) bytes += 4 - (bytes % 4); // XXX assuming 4-alignment
          }
          if (bytes < stride) { // ensure the size is that of the stride
            bytes = stride;
          }
        }
        GL.immediate.stride = bytes;
        if (!beginEnd) {
          bytes *= count;
          if (!GL.currArrayBuffer) {
            GL.immediate.vertexPointer = start;
          }
          GL.immediate.vertexCounter = bytes / 4; // XXX assuming float
        }
      },flush:function flush(numProvidedIndexes, startIndex, ptr) {
        startIndex = startIndex || 0;
        ptr = ptr || 0;
        var renderer = this.getRenderer();
        // Generate index data in a format suitable for GLES 2.0/WebGL
        var numVertexes = 4 * this.vertexCounter / GL.immediate.stride;
        var emulatedElementArrayBuffer = false;
        var numIndexes = 0;
        if (numProvidedIndexes) {
          numIndexes = numProvidedIndexes;
          if (!GL.currArrayBuffer && GL.immediate.firstVertex > GL.immediate.lastVertex) {
            // Figure out the first and last vertex from the index data
            for (var i = 0; i < numProvidedIndexes; i++) {
              var currIndex = HEAPU16[(((ptr)+(i*2))>>1)];
              GL.immediate.firstVertex = Math.min(GL.immediate.firstVertex, currIndex);
              GL.immediate.lastVertex = Math.max(GL.immediate.lastVertex, currIndex+1);
            }
          }
          if (!GL.currElementArrayBuffer) {
            // If no element array buffer is bound, then indices is a literal pointer to clientside data
            var indexBuffer = GL.tempIndexBuffers[GL.tempBufferIndexLookup[numProvidedIndexes << 1]];
            Module.ctx.bindBuffer(Module.ctx.ELEMENT_ARRAY_BUFFER, indexBuffer);
            Module.ctx.bufferSubData(Module.ctx.ELEMENT_ARRAY_BUFFER, 0, HEAPU16.subarray((ptr)>>1,(ptr + (numProvidedIndexes << 1))>>1));
            ptr = 0;
            emulatedElementArrayBuffer = true;
          }
        } else if (GL.immediate.mode > 6) { // above GL_TRIANGLE_FAN are the non-GL ES modes
          if (GL.immediate.mode != 7) throw 'unsupported immediate mode ' + GL.immediate.mode; // GL_QUADS
          // GL.immediate.firstVertex is the first vertex we want. Quad indexes are in the pattern
          // 0 1 2, 0 2 3, 4 5 6, 4 6 7, so we need to look at index firstVertex * 1.5 to see it.
          // Then since indexes are 2 bytes each, that means 3
          ptr = GL.immediate.firstVertex*3;
          var numQuads = numVertexes / 4;
          numIndexes = numQuads * 6; // 0 1 2, 0 2 3 pattern
          Module.ctx.bindBuffer(Module.ctx.ELEMENT_ARRAY_BUFFER, GL.tempQuadIndexBuffer);
          emulatedElementArrayBuffer = true;
        }
        renderer.prepare();
        if (numIndexes) {
          Module.ctx.drawElements(Module.ctx.TRIANGLES, numIndexes, Module.ctx.UNSIGNED_SHORT, ptr);
        } else {
          Module.ctx.drawArrays(GL.immediate.mode, startIndex, numVertexes);
        }
        if (emulatedElementArrayBuffer) {
          Module.ctx.bindBuffer(Module.ctx.ELEMENT_ARRAY_BUFFER, GL.buffers[GL.currElementArrayBuffer] || null);
        }
        renderer.cleanup();
      }};
  GL.immediate = GLImmediate; GL.immediate.matrix.lib = (function() {
  /**
   * @fileoverview gl-matrix - High performance matrix and vector operations for WebGL
   * @author Brandon Jones
   * @version 1.2.4
   */
  // Modifed for emscripten: Global scoping etc.
  /*
   * Copyright (c) 2011 Brandon Jones
   *
   * This software is provided 'as-is', without any express or implied
   * warranty. In no event will the authors be held liable for any damages
   * arising from the use of this software.
   *
   * Permission is granted to anyone to use this software for any purpose,
   * including commercial applications, and to alter it and redistribute it
   * freely, subject to the following restrictions:
   *
   *    1. The origin of this software must not be misrepresented; you must not
   *    claim that you wrote the original software. If you use this software
   *    in a product, an acknowledgment in the product documentation would be
   *    appreciated but is not required.
   *
   *    2. Altered source versions must be plainly marked as such, and must not
   *    be misrepresented as being the original software.
   *
   *    3. This notice may not be removed or altered from any source
   *    distribution.
   */
  /**
   * @class 3 Dimensional Vector
   * @name vec3
   */
  var vec3 = {};
  /**
   * @class 3x3 Matrix
   * @name mat3
   */
  var mat3 = {};
  /**
   * @class 4x4 Matrix
   * @name mat4
   */
  var mat4 = {};
  /**
   * @class Quaternion
   * @name quat4
   */
  var quat4 = {};
  var MatrixArray = Float32Array;
  /*
   * vec3
   */
  /**
   * Creates a new instance of a vec3 using the default array type
   * Any javascript array-like objects containing at least 3 numeric elements can serve as a vec3
   *
   * @param {vec3} [vec] vec3 containing values to initialize with
   *
   * @returns {vec3} New vec3
   */
  vec3.create = function (vec) {
      var dest = new MatrixArray(3);
      if (vec) {
          dest[0] = vec[0];
          dest[1] = vec[1];
          dest[2] = vec[2];
      } else {
          dest[0] = dest[1] = dest[2] = 0;
      }
      return dest;
  };
  /**
   * Copies the values of one vec3 to another
   *
   * @param {vec3} vec vec3 containing values to copy
   * @param {vec3} dest vec3 receiving copied values
   *
   * @returns {vec3} dest
   */
  vec3.set = function (vec, dest) {
      dest[0] = vec[0];
      dest[1] = vec[1];
      dest[2] = vec[2];
      return dest;
  };
  /**
   * Performs a vector addition
   *
   * @param {vec3} vec First operand
   * @param {vec3} vec2 Second operand
   * @param {vec3} [dest] vec3 receiving operation result. If not specified result is written to vec
   *
   * @returns {vec3} dest if specified, vec otherwise
   */
  vec3.add = function (vec, vec2, dest) {
      if (!dest || vec === dest) {
          vec[0] += vec2[0];
          vec[1] += vec2[1];
          vec[2] += vec2[2];
          return vec;
      }
      dest[0] = vec[0] + vec2[0];
      dest[1] = vec[1] + vec2[1];
      dest[2] = vec[2] + vec2[2];
      return dest;
  };
  /**
   * Performs a vector subtraction
   *
   * @param {vec3} vec First operand
   * @param {vec3} vec2 Second operand
   * @param {vec3} [dest] vec3 receiving operation result. If not specified result is written to vec
   *
   * @returns {vec3} dest if specified, vec otherwise
   */
  vec3.subtract = function (vec, vec2, dest) {
      if (!dest || vec === dest) {
          vec[0] -= vec2[0];
          vec[1] -= vec2[1];
          vec[2] -= vec2[2];
          return vec;
      }
      dest[0] = vec[0] - vec2[0];
      dest[1] = vec[1] - vec2[1];
      dest[2] = vec[2] - vec2[2];
      return dest;
  };
  /**
   * Performs a vector multiplication
   *
   * @param {vec3} vec First operand
   * @param {vec3} vec2 Second operand
   * @param {vec3} [dest] vec3 receiving operation result. If not specified result is written to vec
   *
   * @returns {vec3} dest if specified, vec otherwise
   */
  vec3.multiply = function (vec, vec2, dest) {
      if (!dest || vec === dest) {
          vec[0] *= vec2[0];
          vec[1] *= vec2[1];
          vec[2] *= vec2[2];
          return vec;
      }
      dest[0] = vec[0] * vec2[0];
      dest[1] = vec[1] * vec2[1];
      dest[2] = vec[2] * vec2[2];
      return dest;
  };
  /**
   * Negates the components of a vec3
   *
   * @param {vec3} vec vec3 to negate
   * @param {vec3} [dest] vec3 receiving operation result. If not specified result is written to vec
   *
   * @returns {vec3} dest if specified, vec otherwise
   */
  vec3.negate = function (vec, dest) {
      if (!dest) { dest = vec; }
      dest[0] = -vec[0];
      dest[1] = -vec[1];
      dest[2] = -vec[2];
      return dest;
  };
  /**
   * Multiplies the components of a vec3 by a scalar value
   *
   * @param {vec3} vec vec3 to scale
   * @param {number} val Value to scale by
   * @param {vec3} [dest] vec3 receiving operation result. If not specified result is written to vec
   *
   * @returns {vec3} dest if specified, vec otherwise
   */
  vec3.scale = function (vec, val, dest) {
      if (!dest || vec === dest) {
          vec[0] *= val;
          vec[1] *= val;
          vec[2] *= val;
          return vec;
      }
      dest[0] = vec[0] * val;
      dest[1] = vec[1] * val;
      dest[2] = vec[2] * val;
      return dest;
  };
  /**
   * Generates a unit vector of the same direction as the provided vec3
   * If vector length is 0, returns [0, 0, 0]
   *
   * @param {vec3} vec vec3 to normalize
   * @param {vec3} [dest] vec3 receiving operation result. If not specified result is written to vec
   *
   * @returns {vec3} dest if specified, vec otherwise
   */
  vec3.normalize = function (vec, dest) {
      if (!dest) { dest = vec; }
      var x = vec[0], y = vec[1], z = vec[2],
          len = Math.sqrt(x * x + y * y + z * z);
      if (!len) {
          dest[0] = 0;
          dest[1] = 0;
          dest[2] = 0;
          return dest;
      } else if (len === 1) {
          dest[0] = x;
          dest[1] = y;
          dest[2] = z;
          return dest;
      }
      len = 1 / len;
      dest[0] = x * len;
      dest[1] = y * len;
      dest[2] = z * len;
      return dest;
  };
  /**
   * Generates the cross product of two vec3s
   *
   * @param {vec3} vec First operand
   * @param {vec3} vec2 Second operand
   * @param {vec3} [dest] vec3 receiving operation result. If not specified result is written to vec
   *
   * @returns {vec3} dest if specified, vec otherwise
   */
  vec3.cross = function (vec, vec2, dest) {
      if (!dest) { dest = vec; }
      var x = vec[0], y = vec[1], z = vec[2],
          x2 = vec2[0], y2 = vec2[1], z2 = vec2[2];
      dest[0] = y * z2 - z * y2;
      dest[1] = z * x2 - x * z2;
      dest[2] = x * y2 - y * x2;
      return dest;
  };
  /**
   * Caclulates the length of a vec3
   *
   * @param {vec3} vec vec3 to calculate length of
   *
   * @returns {number} Length of vec
   */
  vec3.length = function (vec) {
      var x = vec[0], y = vec[1], z = vec[2];
      return Math.sqrt(x * x + y * y + z * z);
  };
  /**
   * Caclulates the dot product of two vec3s
   *
   * @param {vec3} vec First operand
   * @param {vec3} vec2 Second operand
   *
   * @returns {number} Dot product of vec and vec2
   */
  vec3.dot = function (vec, vec2) {
      return vec[0] * vec2[0] + vec[1] * vec2[1] + vec[2] * vec2[2];
  };
  /**
   * Generates a unit vector pointing from one vector to another
   *
   * @param {vec3} vec Origin vec3
   * @param {vec3} vec2 vec3 to point to
   * @param {vec3} [dest] vec3 receiving operation result. If not specified result is written to vec
   *
   * @returns {vec3} dest if specified, vec otherwise
   */
  vec3.direction = function (vec, vec2, dest) {
      if (!dest) { dest = vec; }
      var x = vec[0] - vec2[0],
          y = vec[1] - vec2[1],
          z = vec[2] - vec2[2],
          len = Math.sqrt(x * x + y * y + z * z);
      if (!len) {
          dest[0] = 0;
          dest[1] = 0;
          dest[2] = 0;
          return dest;
      }
      len = 1 / len;
      dest[0] = x * len;
      dest[1] = y * len;
      dest[2] = z * len;
      return dest;
  };
  /**
   * Performs a linear interpolation between two vec3
   *
   * @param {vec3} vec First vector
   * @param {vec3} vec2 Second vector
   * @param {number} lerp Interpolation amount between the two inputs
   * @param {vec3} [dest] vec3 receiving operation result. If not specified result is written to vec
   *
   * @returns {vec3} dest if specified, vec otherwise
   */
  vec3.lerp = function (vec, vec2, lerp, dest) {
      if (!dest) { dest = vec; }
      dest[0] = vec[0] + lerp * (vec2[0] - vec[0]);
      dest[1] = vec[1] + lerp * (vec2[1] - vec[1]);
      dest[2] = vec[2] + lerp * (vec2[2] - vec[2]);
      return dest;
  };
  /**
   * Calculates the euclidian distance between two vec3
   *
   * Params:
   * @param {vec3} vec First vector
   * @param {vec3} vec2 Second vector
   *
   * @returns {number} Distance between vec and vec2
   */
  vec3.dist = function (vec, vec2) {
      var x = vec2[0] - vec[0],
          y = vec2[1] - vec[1],
          z = vec2[2] - vec[2];
      return Math.sqrt(x*x + y*y + z*z);
  };
  /**
   * Projects the specified vec3 from screen space into object space
   * Based on the <a href="http://webcvs.freedesktop.org/mesa/Mesa/src/glu/mesa/project.c?revision=1.4&view=markup">Mesa gluUnProject implementation</a>
   *
   * @param {vec3} vec Screen-space vector to project
   * @param {mat4} view View matrix
   * @param {mat4} proj Projection matrix
   * @param {vec4} viewport Viewport as given to gl.viewport [x, y, width, height]
   * @param {vec3} [dest] vec3 receiving unprojected result. If not specified result is written to vec
   *
   * @returns {vec3} dest if specified, vec otherwise
   */
  vec3.unproject = function (vec, view, proj, viewport, dest) {
      if (!dest) { dest = vec; }
      var m = mat4.create();
      var v = new MatrixArray(4);
      v[0] = (vec[0] - viewport[0]) * 2.0 / viewport[2] - 1.0;
      v[1] = (vec[1] - viewport[1]) * 2.0 / viewport[3] - 1.0;
      v[2] = 2.0 * vec[2] - 1.0;
      v[3] = 1.0;
      mat4.multiply(proj, view, m);
      if(!mat4.inverse(m)) { return null; }
      mat4.multiplyVec4(m, v);
      if(v[3] === 0.0) { return null; }
      dest[0] = v[0] / v[3];
      dest[1] = v[1] / v[3];
      dest[2] = v[2] / v[3];
      return dest;
  };
  /**
   * Returns a string representation of a vector
   *
   * @param {vec3} vec Vector to represent as a string
   *
   * @returns {string} String representation of vec
   */
  vec3.str = function (vec) {
      return '[' + vec[0] + ', ' + vec[1] + ', ' + vec[2] + ']';
  };
  /*
   * mat3
   */
  /**
   * Creates a new instance of a mat3 using the default array type
   * Any javascript array-like object containing at least 9 numeric elements can serve as a mat3
   *
   * @param {mat3} [mat] mat3 containing values to initialize with
   *
   * @returns {mat3} New mat3
   */
  mat3.create = function (mat) {
      var dest = new MatrixArray(9);
      if (mat) {
          dest[0] = mat[0];
          dest[1] = mat[1];
          dest[2] = mat[2];
          dest[3] = mat[3];
          dest[4] = mat[4];
          dest[5] = mat[5];
          dest[6] = mat[6];
          dest[7] = mat[7];
          dest[8] = mat[8];
      }
      return dest;
  };
  /**
   * Copies the values of one mat3 to another
   *
   * @param {mat3} mat mat3 containing values to copy
   * @param {mat3} dest mat3 receiving copied values
   *
   * @returns {mat3} dest
   */
  mat3.set = function (mat, dest) {
      dest[0] = mat[0];
      dest[1] = mat[1];
      dest[2] = mat[2];
      dest[3] = mat[3];
      dest[4] = mat[4];
      dest[5] = mat[5];
      dest[6] = mat[6];
      dest[7] = mat[7];
      dest[8] = mat[8];
      return dest;
  };
  /**
   * Sets a mat3 to an identity matrix
   *
   * @param {mat3} dest mat3 to set
   *
   * @returns dest if specified, otherwise a new mat3
   */
  mat3.identity = function (dest) {
      if (!dest) { dest = mat3.create(); }
      dest[0] = 1;
      dest[1] = 0;
      dest[2] = 0;
      dest[3] = 0;
      dest[4] = 1;
      dest[5] = 0;
      dest[6] = 0;
      dest[7] = 0;
      dest[8] = 1;
      return dest;
  };
  /**
   * Transposes a mat3 (flips the values over the diagonal)
   *
   * Params:
   * @param {mat3} mat mat3 to transpose
   * @param {mat3} [dest] mat3 receiving transposed values. If not specified result is written to mat
   *
   * @returns {mat3} dest is specified, mat otherwise
   */
  mat3.transpose = function (mat, dest) {
      // If we are transposing ourselves we can skip a few steps but have to cache some values
      if (!dest || mat === dest) {
          var a01 = mat[1], a02 = mat[2],
              a12 = mat[5];
          mat[1] = mat[3];
          mat[2] = mat[6];
          mat[3] = a01;
          mat[5] = mat[7];
          mat[6] = a02;
          mat[7] = a12;
          return mat;
      }
      dest[0] = mat[0];
      dest[1] = mat[3];
      dest[2] = mat[6];
      dest[3] = mat[1];
      dest[4] = mat[4];
      dest[5] = mat[7];
      dest[6] = mat[2];
      dest[7] = mat[5];
      dest[8] = mat[8];
      return dest;
  };
  /**
   * Copies the elements of a mat3 into the upper 3x3 elements of a mat4
   *
   * @param {mat3} mat mat3 containing values to copy
   * @param {mat4} [dest] mat4 receiving copied values
   *
   * @returns {mat4} dest if specified, a new mat4 otherwise
   */
  mat3.toMat4 = function (mat, dest) {
      if (!dest) { dest = mat4.create(); }
      dest[15] = 1;
      dest[14] = 0;
      dest[13] = 0;
      dest[12] = 0;
      dest[11] = 0;
      dest[10] = mat[8];
      dest[9] = mat[7];
      dest[8] = mat[6];
      dest[7] = 0;
      dest[6] = mat[5];
      dest[5] = mat[4];
      dest[4] = mat[3];
      dest[3] = 0;
      dest[2] = mat[2];
      dest[1] = mat[1];
      dest[0] = mat[0];
      return dest;
  };
  /**
   * Returns a string representation of a mat3
   *
   * @param {mat3} mat mat3 to represent as a string
   *
   * @param {string} String representation of mat
   */
  mat3.str = function (mat) {
      return '[' + mat[0] + ', ' + mat[1] + ', ' + mat[2] +
          ', ' + mat[3] + ', ' + mat[4] + ', ' + mat[5] +
          ', ' + mat[6] + ', ' + mat[7] + ', ' + mat[8] + ']';
  };
  /*
   * mat4
   */
  /**
   * Creates a new instance of a mat4 using the default array type
   * Any javascript array-like object containing at least 16 numeric elements can serve as a mat4
   *
   * @param {mat4} [mat] mat4 containing values to initialize with
   *
   * @returns {mat4} New mat4
   */
  mat4.create = function (mat) {
      var dest = new MatrixArray(16);
      if (mat) {
          dest[0] = mat[0];
          dest[1] = mat[1];
          dest[2] = mat[2];
          dest[3] = mat[3];
          dest[4] = mat[4];
          dest[5] = mat[5];
          dest[6] = mat[6];
          dest[7] = mat[7];
          dest[8] = mat[8];
          dest[9] = mat[9];
          dest[10] = mat[10];
          dest[11] = mat[11];
          dest[12] = mat[12];
          dest[13] = mat[13];
          dest[14] = mat[14];
          dest[15] = mat[15];
      }
      return dest;
  };
  /**
   * Copies the values of one mat4 to another
   *
   * @param {mat4} mat mat4 containing values to copy
   * @param {mat4} dest mat4 receiving copied values
   *
   * @returns {mat4} dest
   */
  mat4.set = function (mat, dest) {
      dest[0] = mat[0];
      dest[1] = mat[1];
      dest[2] = mat[2];
      dest[3] = mat[3];
      dest[4] = mat[4];
      dest[5] = mat[5];
      dest[6] = mat[6];
      dest[7] = mat[7];
      dest[8] = mat[8];
      dest[9] = mat[9];
      dest[10] = mat[10];
      dest[11] = mat[11];
      dest[12] = mat[12];
      dest[13] = mat[13];
      dest[14] = mat[14];
      dest[15] = mat[15];
      return dest;
  };
  /**
   * Sets a mat4 to an identity matrix
   *
   * @param {mat4} dest mat4 to set
   *
   * @returns {mat4} dest
   */
  mat4.identity = function (dest) {
      if (!dest) { dest = mat4.create(); }
      dest[0] = 1;
      dest[1] = 0;
      dest[2] = 0;
      dest[3] = 0;
      dest[4] = 0;
      dest[5] = 1;
      dest[6] = 0;
      dest[7] = 0;
      dest[8] = 0;
      dest[9] = 0;
      dest[10] = 1;
      dest[11] = 0;
      dest[12] = 0;
      dest[13] = 0;
      dest[14] = 0;
      dest[15] = 1;
      return dest;
  };
  /**
   * Transposes a mat4 (flips the values over the diagonal)
   *
   * @param {mat4} mat mat4 to transpose
   * @param {mat4} [dest] mat4 receiving transposed values. If not specified result is written to mat
   *
   * @param {mat4} dest is specified, mat otherwise
   */
  mat4.transpose = function (mat, dest) {
      // If we are transposing ourselves we can skip a few steps but have to cache some values
      if (!dest || mat === dest) {
          var a01 = mat[1], a02 = mat[2], a03 = mat[3],
              a12 = mat[6], a13 = mat[7],
              a23 = mat[11];
          mat[1] = mat[4];
          mat[2] = mat[8];
          mat[3] = mat[12];
          mat[4] = a01;
          mat[6] = mat[9];
          mat[7] = mat[13];
          mat[8] = a02;
          mat[9] = a12;
          mat[11] = mat[14];
          mat[12] = a03;
          mat[13] = a13;
          mat[14] = a23;
          return mat;
      }
      dest[0] = mat[0];
      dest[1] = mat[4];
      dest[2] = mat[8];
      dest[3] = mat[12];
      dest[4] = mat[1];
      dest[5] = mat[5];
      dest[6] = mat[9];
      dest[7] = mat[13];
      dest[8] = mat[2];
      dest[9] = mat[6];
      dest[10] = mat[10];
      dest[11] = mat[14];
      dest[12] = mat[3];
      dest[13] = mat[7];
      dest[14] = mat[11];
      dest[15] = mat[15];
      return dest;
  };
  /**
   * Calculates the determinant of a mat4
   *
   * @param {mat4} mat mat4 to calculate determinant of
   *
   * @returns {number} determinant of mat
   */
  mat4.determinant = function (mat) {
      // Cache the matrix values (makes for huge speed increases!)
      var a00 = mat[0], a01 = mat[1], a02 = mat[2], a03 = mat[3],
          a10 = mat[4], a11 = mat[5], a12 = mat[6], a13 = mat[7],
          a20 = mat[8], a21 = mat[9], a22 = mat[10], a23 = mat[11],
          a30 = mat[12], a31 = mat[13], a32 = mat[14], a33 = mat[15];
      return (a30 * a21 * a12 * a03 - a20 * a31 * a12 * a03 - a30 * a11 * a22 * a03 + a10 * a31 * a22 * a03 +
              a20 * a11 * a32 * a03 - a10 * a21 * a32 * a03 - a30 * a21 * a02 * a13 + a20 * a31 * a02 * a13 +
              a30 * a01 * a22 * a13 - a00 * a31 * a22 * a13 - a20 * a01 * a32 * a13 + a00 * a21 * a32 * a13 +
              a30 * a11 * a02 * a23 - a10 * a31 * a02 * a23 - a30 * a01 * a12 * a23 + a00 * a31 * a12 * a23 +
              a10 * a01 * a32 * a23 - a00 * a11 * a32 * a23 - a20 * a11 * a02 * a33 + a10 * a21 * a02 * a33 +
              a20 * a01 * a12 * a33 - a00 * a21 * a12 * a33 - a10 * a01 * a22 * a33 + a00 * a11 * a22 * a33);
  };
  /**
   * Calculates the inverse matrix of a mat4
   *
   * @param {mat4} mat mat4 to calculate inverse of
   * @param {mat4} [dest] mat4 receiving inverse matrix. If not specified result is written to mat
   *
   * @param {mat4} dest is specified, mat otherwise, null if matrix cannot be inverted
   */
  mat4.inverse = function (mat, dest) {
      if (!dest) { dest = mat; }
      // Cache the matrix values (makes for huge speed increases!)
      var a00 = mat[0], a01 = mat[1], a02 = mat[2], a03 = mat[3],
          a10 = mat[4], a11 = mat[5], a12 = mat[6], a13 = mat[7],
          a20 = mat[8], a21 = mat[9], a22 = mat[10], a23 = mat[11],
          a30 = mat[12], a31 = mat[13], a32 = mat[14], a33 = mat[15],
          b00 = a00 * a11 - a01 * a10,
          b01 = a00 * a12 - a02 * a10,
          b02 = a00 * a13 - a03 * a10,
          b03 = a01 * a12 - a02 * a11,
          b04 = a01 * a13 - a03 * a11,
          b05 = a02 * a13 - a03 * a12,
          b06 = a20 * a31 - a21 * a30,
          b07 = a20 * a32 - a22 * a30,
          b08 = a20 * a33 - a23 * a30,
          b09 = a21 * a32 - a22 * a31,
          b10 = a21 * a33 - a23 * a31,
          b11 = a22 * a33 - a23 * a32,
          d = (b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06),
          invDet;
          // Calculate the determinant
          if (!d) { return null; }
          invDet = 1 / d;
      dest[0] = (a11 * b11 - a12 * b10 + a13 * b09) * invDet;
      dest[1] = (-a01 * b11 + a02 * b10 - a03 * b09) * invDet;
      dest[2] = (a31 * b05 - a32 * b04 + a33 * b03) * invDet;
      dest[3] = (-a21 * b05 + a22 * b04 - a23 * b03) * invDet;
      dest[4] = (-a10 * b11 + a12 * b08 - a13 * b07) * invDet;
      dest[5] = (a00 * b11 - a02 * b08 + a03 * b07) * invDet;
      dest[6] = (-a30 * b05 + a32 * b02 - a33 * b01) * invDet;
      dest[7] = (a20 * b05 - a22 * b02 + a23 * b01) * invDet;
      dest[8] = (a10 * b10 - a11 * b08 + a13 * b06) * invDet;
      dest[9] = (-a00 * b10 + a01 * b08 - a03 * b06) * invDet;
      dest[10] = (a30 * b04 - a31 * b02 + a33 * b00) * invDet;
      dest[11] = (-a20 * b04 + a21 * b02 - a23 * b00) * invDet;
      dest[12] = (-a10 * b09 + a11 * b07 - a12 * b06) * invDet;
      dest[13] = (a00 * b09 - a01 * b07 + a02 * b06) * invDet;
      dest[14] = (-a30 * b03 + a31 * b01 - a32 * b00) * invDet;
      dest[15] = (a20 * b03 - a21 * b01 + a22 * b00) * invDet;
      return dest;
  };
  /**
   * Copies the upper 3x3 elements of a mat4 into another mat4
   *
   * @param {mat4} mat mat4 containing values to copy
   * @param {mat4} [dest] mat4 receiving copied values
   *
   * @returns {mat4} dest is specified, a new mat4 otherwise
   */
  mat4.toRotationMat = function (mat, dest) {
      if (!dest) { dest = mat4.create(); }
      dest[0] = mat[0];
      dest[1] = mat[1];
      dest[2] = mat[2];
      dest[3] = mat[3];
      dest[4] = mat[4];
      dest[5] = mat[5];
      dest[6] = mat[6];
      dest[7] = mat[7];
      dest[8] = mat[8];
      dest[9] = mat[9];
      dest[10] = mat[10];
      dest[11] = mat[11];
      dest[12] = 0;
      dest[13] = 0;
      dest[14] = 0;
      dest[15] = 1;
      return dest;
  };
  /**
   * Copies the upper 3x3 elements of a mat4 into a mat3
   *
   * @param {mat4} mat mat4 containing values to copy
   * @param {mat3} [dest] mat3 receiving copied values
   *
   * @returns {mat3} dest is specified, a new mat3 otherwise
   */
  mat4.toMat3 = function (mat, dest) {
      if (!dest) { dest = mat3.create(); }
      dest[0] = mat[0];
      dest[1] = mat[1];
      dest[2] = mat[2];
      dest[3] = mat[4];
      dest[4] = mat[5];
      dest[5] = mat[6];
      dest[6] = mat[8];
      dest[7] = mat[9];
      dest[8] = mat[10];
      return dest;
  };
  /**
   * Calculates the inverse of the upper 3x3 elements of a mat4 and copies the result into a mat3
   * The resulting matrix is useful for calculating transformed normals
   *
   * Params:
   * @param {mat4} mat mat4 containing values to invert and copy
   * @param {mat3} [dest] mat3 receiving values
   *
   * @returns {mat3} dest is specified, a new mat3 otherwise, null if the matrix cannot be inverted
   */
  mat4.toInverseMat3 = function (mat, dest) {
      // Cache the matrix values (makes for huge speed increases!)
      var a00 = mat[0], a01 = mat[1], a02 = mat[2],
          a10 = mat[4], a11 = mat[5], a12 = mat[6],
          a20 = mat[8], a21 = mat[9], a22 = mat[10],
          b01 = a22 * a11 - a12 * a21,
          b11 = -a22 * a10 + a12 * a20,
          b21 = a21 * a10 - a11 * a20,
          d = a00 * b01 + a01 * b11 + a02 * b21,
          id;
      if (!d) { return null; }
      id = 1 / d;
      if (!dest) { dest = mat3.create(); }
      dest[0] = b01 * id;
      dest[1] = (-a22 * a01 + a02 * a21) * id;
      dest[2] = (a12 * a01 - a02 * a11) * id;
      dest[3] = b11 * id;
      dest[4] = (a22 * a00 - a02 * a20) * id;
      dest[5] = (-a12 * a00 + a02 * a10) * id;
      dest[6] = b21 * id;
      dest[7] = (-a21 * a00 + a01 * a20) * id;
      dest[8] = (a11 * a00 - a01 * a10) * id;
      return dest;
  };
  /**
   * Performs a matrix multiplication
   *
   * @param {mat4} mat First operand
   * @param {mat4} mat2 Second operand
   * @param {mat4} [dest] mat4 receiving operation result. If not specified result is written to mat
   *
   * @returns {mat4} dest if specified, mat otherwise
   */
  mat4.multiply = function (mat, mat2, dest) {
      if (!dest) { dest = mat; }
      // Cache the matrix values (makes for huge speed increases!)
      var a00 = mat[0], a01 = mat[1], a02 = mat[2], a03 = mat[3],
          a10 = mat[4], a11 = mat[5], a12 = mat[6], a13 = mat[7],
          a20 = mat[8], a21 = mat[9], a22 = mat[10], a23 = mat[11],
          a30 = mat[12], a31 = mat[13], a32 = mat[14], a33 = mat[15],
          b00 = mat2[0], b01 = mat2[1], b02 = mat2[2], b03 = mat2[3],
          b10 = mat2[4], b11 = mat2[5], b12 = mat2[6], b13 = mat2[7],
          b20 = mat2[8], b21 = mat2[9], b22 = mat2[10], b23 = mat2[11],
          b30 = mat2[12], b31 = mat2[13], b32 = mat2[14], b33 = mat2[15];
      dest[0] = b00 * a00 + b01 * a10 + b02 * a20 + b03 * a30;
      dest[1] = b00 * a01 + b01 * a11 + b02 * a21 + b03 * a31;
      dest[2] = b00 * a02 + b01 * a12 + b02 * a22 + b03 * a32;
      dest[3] = b00 * a03 + b01 * a13 + b02 * a23 + b03 * a33;
      dest[4] = b10 * a00 + b11 * a10 + b12 * a20 + b13 * a30;
      dest[5] = b10 * a01 + b11 * a11 + b12 * a21 + b13 * a31;
      dest[6] = b10 * a02 + b11 * a12 + b12 * a22 + b13 * a32;
      dest[7] = b10 * a03 + b11 * a13 + b12 * a23 + b13 * a33;
      dest[8] = b20 * a00 + b21 * a10 + b22 * a20 + b23 * a30;
      dest[9] = b20 * a01 + b21 * a11 + b22 * a21 + b23 * a31;
      dest[10] = b20 * a02 + b21 * a12 + b22 * a22 + b23 * a32;
      dest[11] = b20 * a03 + b21 * a13 + b22 * a23 + b23 * a33;
      dest[12] = b30 * a00 + b31 * a10 + b32 * a20 + b33 * a30;
      dest[13] = b30 * a01 + b31 * a11 + b32 * a21 + b33 * a31;
      dest[14] = b30 * a02 + b31 * a12 + b32 * a22 + b33 * a32;
      dest[15] = b30 * a03 + b31 * a13 + b32 * a23 + b33 * a33;
      return dest;
  };
  /**
   * Transforms a vec3 with the given matrix
   * 4th vector component is implicitly '1'
   *
   * @param {mat4} mat mat4 to transform the vector with
   * @param {vec3} vec vec3 to transform
   * @param {vec3} [dest] vec3 receiving operation result. If not specified result is written to vec
   *
   * @returns {vec3} dest if specified, vec otherwise
   */
  mat4.multiplyVec3 = function (mat, vec, dest) {
      if (!dest) { dest = vec; }
      var x = vec[0], y = vec[1], z = vec[2];
      dest[0] = mat[0] * x + mat[4] * y + mat[8] * z + mat[12];
      dest[1] = mat[1] * x + mat[5] * y + mat[9] * z + mat[13];
      dest[2] = mat[2] * x + mat[6] * y + mat[10] * z + mat[14];
      return dest;
  };
  /**
   * Transforms a vec4 with the given matrix
   *
   * @param {mat4} mat mat4 to transform the vector with
   * @param {vec4} vec vec4 to transform
   * @param {vec4} [dest] vec4 receiving operation result. If not specified result is written to vec
   *
   * @returns {vec4} dest if specified, vec otherwise
   */
  mat4.multiplyVec4 = function (mat, vec, dest) {
      if (!dest) { dest = vec; }
      var x = vec[0], y = vec[1], z = vec[2], w = vec[3];
      dest[0] = mat[0] * x + mat[4] * y + mat[8] * z + mat[12] * w;
      dest[1] = mat[1] * x + mat[5] * y + mat[9] * z + mat[13] * w;
      dest[2] = mat[2] * x + mat[6] * y + mat[10] * z + mat[14] * w;
      dest[3] = mat[3] * x + mat[7] * y + mat[11] * z + mat[15] * w;
      return dest;
  };
  /**
   * Translates a matrix by the given vector
   *
   * @param {mat4} mat mat4 to translate
   * @param {vec3} vec vec3 specifying the translation
   * @param {mat4} [dest] mat4 receiving operation result. If not specified result is written to mat
   *
   * @returns {mat4} dest if specified, mat otherwise
   */
  mat4.translate = function (mat, vec, dest) {
      var x = vec[0], y = vec[1], z = vec[2],
          a00, a01, a02, a03,
          a10, a11, a12, a13,
          a20, a21, a22, a23;
      if (!dest || mat === dest) {
          mat[12] = mat[0] * x + mat[4] * y + mat[8] * z + mat[12];
          mat[13] = mat[1] * x + mat[5] * y + mat[9] * z + mat[13];
          mat[14] = mat[2] * x + mat[6] * y + mat[10] * z + mat[14];
          mat[15] = mat[3] * x + mat[7] * y + mat[11] * z + mat[15];
          return mat;
      }
      a00 = mat[0]; a01 = mat[1]; a02 = mat[2]; a03 = mat[3];
      a10 = mat[4]; a11 = mat[5]; a12 = mat[6]; a13 = mat[7];
      a20 = mat[8]; a21 = mat[9]; a22 = mat[10]; a23 = mat[11];
      dest[0] = a00; dest[1] = a01; dest[2] = a02; dest[3] = a03;
      dest[4] = a10; dest[5] = a11; dest[6] = a12; dest[7] = a13;
      dest[8] = a20; dest[9] = a21; dest[10] = a22; dest[11] = a23;
      dest[12] = a00 * x + a10 * y + a20 * z + mat[12];
      dest[13] = a01 * x + a11 * y + a21 * z + mat[13];
      dest[14] = a02 * x + a12 * y + a22 * z + mat[14];
      dest[15] = a03 * x + a13 * y + a23 * z + mat[15];
      return dest;
  };
  /**
   * Scales a matrix by the given vector
   *
   * @param {mat4} mat mat4 to scale
   * @param {vec3} vec vec3 specifying the scale for each axis
   * @param {mat4} [dest] mat4 receiving operation result. If not specified result is written to mat
   *
   * @param {mat4} dest if specified, mat otherwise
   */
  mat4.scale = function (mat, vec, dest) {
      var x = vec[0], y = vec[1], z = vec[2];
      if (!dest || mat === dest) {
          mat[0] *= x;
          mat[1] *= x;
          mat[2] *= x;
          mat[3] *= x;
          mat[4] *= y;
          mat[5] *= y;
          mat[6] *= y;
          mat[7] *= y;
          mat[8] *= z;
          mat[9] *= z;
          mat[10] *= z;
          mat[11] *= z;
          return mat;
      }
      dest[0] = mat[0] * x;
      dest[1] = mat[1] * x;
      dest[2] = mat[2] * x;
      dest[3] = mat[3] * x;
      dest[4] = mat[4] * y;
      dest[5] = mat[5] * y;
      dest[6] = mat[6] * y;
      dest[7] = mat[7] * y;
      dest[8] = mat[8] * z;
      dest[9] = mat[9] * z;
      dest[10] = mat[10] * z;
      dest[11] = mat[11] * z;
      dest[12] = mat[12];
      dest[13] = mat[13];
      dest[14] = mat[14];
      dest[15] = mat[15];
      return dest;
  };
  /**
   * Rotates a matrix by the given angle around the specified axis
   * If rotating around a primary axis (X,Y,Z) one of the specialized rotation functions should be used instead for performance
   *
   * @param {mat4} mat mat4 to rotate
   * @param {number} angle Angle (in radians) to rotate
   * @param {vec3} axis vec3 representing the axis to rotate around 
   * @param {mat4} [dest] mat4 receiving operation result. If not specified result is written to mat
   *
   * @returns {mat4} dest if specified, mat otherwise
   */
  mat4.rotate = function (mat, angle, axis, dest) {
      var x = axis[0], y = axis[1], z = axis[2],
          len = Math.sqrt(x * x + y * y + z * z),
          s, c, t,
          a00, a01, a02, a03,
          a10, a11, a12, a13,
          a20, a21, a22, a23,
          b00, b01, b02,
          b10, b11, b12,
          b20, b21, b22;
      if (!len) { return null; }
      if (len !== 1) {
          len = 1 / len;
          x *= len;
          y *= len;
          z *= len;
      }
      s = Math.sin(angle);
      c = Math.cos(angle);
      t = 1 - c;
      a00 = mat[0]; a01 = mat[1]; a02 = mat[2]; a03 = mat[3];
      a10 = mat[4]; a11 = mat[5]; a12 = mat[6]; a13 = mat[7];
      a20 = mat[8]; a21 = mat[9]; a22 = mat[10]; a23 = mat[11];
      // Construct the elements of the rotation matrix
      b00 = x * x * t + c; b01 = y * x * t + z * s; b02 = z * x * t - y * s;
      b10 = x * y * t - z * s; b11 = y * y * t + c; b12 = z * y * t + x * s;
      b20 = x * z * t + y * s; b21 = y * z * t - x * s; b22 = z * z * t + c;
      if (!dest) {
          dest = mat;
      } else if (mat !== dest) { // If the source and destination differ, copy the unchanged last row
          dest[12] = mat[12];
          dest[13] = mat[13];
          dest[14] = mat[14];
          dest[15] = mat[15];
      }
      // Perform rotation-specific matrix multiplication
      dest[0] = a00 * b00 + a10 * b01 + a20 * b02;
      dest[1] = a01 * b00 + a11 * b01 + a21 * b02;
      dest[2] = a02 * b00 + a12 * b01 + a22 * b02;
      dest[3] = a03 * b00 + a13 * b01 + a23 * b02;
      dest[4] = a00 * b10 + a10 * b11 + a20 * b12;
      dest[5] = a01 * b10 + a11 * b11 + a21 * b12;
      dest[6] = a02 * b10 + a12 * b11 + a22 * b12;
      dest[7] = a03 * b10 + a13 * b11 + a23 * b12;
      dest[8] = a00 * b20 + a10 * b21 + a20 * b22;
      dest[9] = a01 * b20 + a11 * b21 + a21 * b22;
      dest[10] = a02 * b20 + a12 * b21 + a22 * b22;
      dest[11] = a03 * b20 + a13 * b21 + a23 * b22;
      return dest;
  };
  /**
   * Rotates a matrix by the given angle around the X axis
   *
   * @param {mat4} mat mat4 to rotate
   * @param {number} angle Angle (in radians) to rotate
   * @param {mat4} [dest] mat4 receiving operation result. If not specified result is written to mat
   *
   * @returns {mat4} dest if specified, mat otherwise
   */
  mat4.rotateX = function (mat, angle, dest) {
      var s = Math.sin(angle),
          c = Math.cos(angle),
          a10 = mat[4],
          a11 = mat[5],
          a12 = mat[6],
          a13 = mat[7],
          a20 = mat[8],
          a21 = mat[9],
          a22 = mat[10],
          a23 = mat[11];
      if (!dest) {
          dest = mat;
      } else if (mat !== dest) { // If the source and destination differ, copy the unchanged rows
          dest[0] = mat[0];
          dest[1] = mat[1];
          dest[2] = mat[2];
          dest[3] = mat[3];
          dest[12] = mat[12];
          dest[13] = mat[13];
          dest[14] = mat[14];
          dest[15] = mat[15];
      }
      // Perform axis-specific matrix multiplication
      dest[4] = a10 * c + a20 * s;
      dest[5] = a11 * c + a21 * s;
      dest[6] = a12 * c + a22 * s;
      dest[7] = a13 * c + a23 * s;
      dest[8] = a10 * -s + a20 * c;
      dest[9] = a11 * -s + a21 * c;
      dest[10] = a12 * -s + a22 * c;
      dest[11] = a13 * -s + a23 * c;
      return dest;
  };
  /**
   * Rotates a matrix by the given angle around the Y axis
   *
   * @param {mat4} mat mat4 to rotate
   * @param {number} angle Angle (in radians) to rotate
   * @param {mat4} [dest] mat4 receiving operation result. If not specified result is written to mat
   *
   * @returns {mat4} dest if specified, mat otherwise
   */
  mat4.rotateY = function (mat, angle, dest) {
      var s = Math.sin(angle),
          c = Math.cos(angle),
          a00 = mat[0],
          a01 = mat[1],
          a02 = mat[2],
          a03 = mat[3],
          a20 = mat[8],
          a21 = mat[9],
          a22 = mat[10],
          a23 = mat[11];
      if (!dest) {
          dest = mat;
      } else if (mat !== dest) { // If the source and destination differ, copy the unchanged rows
          dest[4] = mat[4];
          dest[5] = mat[5];
          dest[6] = mat[6];
          dest[7] = mat[7];
          dest[12] = mat[12];
          dest[13] = mat[13];
          dest[14] = mat[14];
          dest[15] = mat[15];
      }
      // Perform axis-specific matrix multiplication
      dest[0] = a00 * c + a20 * -s;
      dest[1] = a01 * c + a21 * -s;
      dest[2] = a02 * c + a22 * -s;
      dest[3] = a03 * c + a23 * -s;
      dest[8] = a00 * s + a20 * c;
      dest[9] = a01 * s + a21 * c;
      dest[10] = a02 * s + a22 * c;
      dest[11] = a03 * s + a23 * c;
      return dest;
  };
  /**
   * Rotates a matrix by the given angle around the Z axis
   *
   * @param {mat4} mat mat4 to rotate
   * @param {number} angle Angle (in radians) to rotate
   * @param {mat4} [dest] mat4 receiving operation result. If not specified result is written to mat
   *
   * @returns {mat4} dest if specified, mat otherwise
   */
  mat4.rotateZ = function (mat, angle, dest) {
      var s = Math.sin(angle),
          c = Math.cos(angle),
          a00 = mat[0],
          a01 = mat[1],
          a02 = mat[2],
          a03 = mat[3],
          a10 = mat[4],
          a11 = mat[5],
          a12 = mat[6],
          a13 = mat[7];
      if (!dest) {
          dest = mat;
      } else if (mat !== dest) { // If the source and destination differ, copy the unchanged last row
          dest[8] = mat[8];
          dest[9] = mat[9];
          dest[10] = mat[10];
          dest[11] = mat[11];
          dest[12] = mat[12];
          dest[13] = mat[13];
          dest[14] = mat[14];
          dest[15] = mat[15];
      }
      // Perform axis-specific matrix multiplication
      dest[0] = a00 * c + a10 * s;
      dest[1] = a01 * c + a11 * s;
      dest[2] = a02 * c + a12 * s;
      dest[3] = a03 * c + a13 * s;
      dest[4] = a00 * -s + a10 * c;
      dest[5] = a01 * -s + a11 * c;
      dest[6] = a02 * -s + a12 * c;
      dest[7] = a03 * -s + a13 * c;
      return dest;
  };
  /**
   * Generates a frustum matrix with the given bounds
   *
   * @param {number} left Left bound of the frustum
   * @param {number} right Right bound of the frustum
   * @param {number} bottom Bottom bound of the frustum
   * @param {number} top Top bound of the frustum
   * @param {number} near Near bound of the frustum
   * @param {number} far Far bound of the frustum
   * @param {mat4} [dest] mat4 frustum matrix will be written into
   *
   * @returns {mat4} dest if specified, a new mat4 otherwise
   */
  mat4.frustum = function (left, right, bottom, top, near, far, dest) {
      if (!dest) { dest = mat4.create(); }
      var rl = (right - left),
          tb = (top - bottom),
          fn = (far - near);
      dest[0] = (near * 2) / rl;
      dest[1] = 0;
      dest[2] = 0;
      dest[3] = 0;
      dest[4] = 0;
      dest[5] = (near * 2) / tb;
      dest[6] = 0;
      dest[7] = 0;
      dest[8] = (right + left) / rl;
      dest[9] = (top + bottom) / tb;
      dest[10] = -(far + near) / fn;
      dest[11] = -1;
      dest[12] = 0;
      dest[13] = 0;
      dest[14] = -(far * near * 2) / fn;
      dest[15] = 0;
      return dest;
  };
  /**
   * Generates a perspective projection matrix with the given bounds
   *
   * @param {number} fovy Vertical field of view
   * @param {number} aspect Aspect ratio. typically viewport width/height
   * @param {number} near Near bound of the frustum
   * @param {number} far Far bound of the frustum
   * @param {mat4} [dest] mat4 frustum matrix will be written into
   *
   * @returns {mat4} dest if specified, a new mat4 otherwise
   */
  mat4.perspective = function (fovy, aspect, near, far, dest) {
      var top = near * Math.tan(fovy * Math.PI / 360.0),
          right = top * aspect;
      return mat4.frustum(-right, right, -top, top, near, far, dest);
  };
  /**
   * Generates a orthogonal projection matrix with the given bounds
   *
   * @param {number} left Left bound of the frustum
   * @param {number} right Right bound of the frustum
   * @param {number} bottom Bottom bound of the frustum
   * @param {number} top Top bound of the frustum
   * @param {number} near Near bound of the frustum
   * @param {number} far Far bound of the frustum
   * @param {mat4} [dest] mat4 frustum matrix will be written into
   *
   * @returns {mat4} dest if specified, a new mat4 otherwise
   */
  mat4.ortho = function (left, right, bottom, top, near, far, dest) {
      if (!dest) { dest = mat4.create(); }
      var rl = (right - left),
          tb = (top - bottom),
          fn = (far - near);
      dest[0] = 2 / rl;
      dest[1] = 0;
      dest[2] = 0;
      dest[3] = 0;
      dest[4] = 0;
      dest[5] = 2 / tb;
      dest[6] = 0;
      dest[7] = 0;
      dest[8] = 0;
      dest[9] = 0;
      dest[10] = -2 / fn;
      dest[11] = 0;
      dest[12] = -(left + right) / rl;
      dest[13] = -(top + bottom) / tb;
      dest[14] = -(far + near) / fn;
      dest[15] = 1;
      return dest;
  };
  /**
   * Generates a look-at matrix with the given eye position, focal point, and up axis
   *
   * @param {vec3} eye Position of the viewer
   * @param {vec3} center Point the viewer is looking at
   * @param {vec3} up vec3 pointing "up"
   * @param {mat4} [dest] mat4 frustum matrix will be written into
   *
   * @returns {mat4} dest if specified, a new mat4 otherwise
   */
  mat4.lookAt = function (eye, center, up, dest) {
      if (!dest) { dest = mat4.create(); }
      var x0, x1, x2, y0, y1, y2, z0, z1, z2, len,
          eyex = eye[0],
          eyey = eye[1],
          eyez = eye[2],
          upx = up[0],
          upy = up[1],
          upz = up[2],
          centerx = center[0],
          centery = center[1],
          centerz = center[2];
      if (eyex === centerx && eyey === centery && eyez === centerz) {
          return mat4.identity(dest);
      }
      //vec3.direction(eye, center, z);
      z0 = eyex - centerx;
      z1 = eyey - centery;
      z2 = eyez - centerz;
      // normalize (no check needed for 0 because of early return)
      len = 1 / Math.sqrt(z0 * z0 + z1 * z1 + z2 * z2);
      z0 *= len;
      z1 *= len;
      z2 *= len;
      //vec3.normalize(vec3.cross(up, z, x));
      x0 = upy * z2 - upz * z1;
      x1 = upz * z0 - upx * z2;
      x2 = upx * z1 - upy * z0;
      len = Math.sqrt(x0 * x0 + x1 * x1 + x2 * x2);
      if (!len) {
          x0 = 0;
          x1 = 0;
          x2 = 0;
      } else {
          len = 1 / len;
          x0 *= len;
          x1 *= len;
          x2 *= len;
      }
      //vec3.normalize(vec3.cross(z, x, y));
      y0 = z1 * x2 - z2 * x1;
      y1 = z2 * x0 - z0 * x2;
      y2 = z0 * x1 - z1 * x0;
      len = Math.sqrt(y0 * y0 + y1 * y1 + y2 * y2);
      if (!len) {
          y0 = 0;
          y1 = 0;
          y2 = 0;
      } else {
          len = 1 / len;
          y0 *= len;
          y1 *= len;
          y2 *= len;
      }
      dest[0] = x0;
      dest[1] = y0;
      dest[2] = z0;
      dest[3] = 0;
      dest[4] = x1;
      dest[5] = y1;
      dest[6] = z1;
      dest[7] = 0;
      dest[8] = x2;
      dest[9] = y2;
      dest[10] = z2;
      dest[11] = 0;
      dest[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);
      dest[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);
      dest[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);
      dest[15] = 1;
      return dest;
  };
  /**
   * Creates a matrix from a quaternion rotation and vector translation
   * This is equivalent to (but much faster than):
   *
   *     mat4.identity(dest);
   *     mat4.translate(dest, vec);
   *     var quatMat = mat4.create();
   *     quat4.toMat4(quat, quatMat);
   *     mat4.multiply(dest, quatMat);
   *
   * @param {quat4} quat Rotation quaternion
   * @param {vec3} vec Translation vector
   * @param {mat4} [dest] mat4 receiving operation result. If not specified result is written to a new mat4
   *
   * @returns {mat4} dest if specified, a new mat4 otherwise
   */
  mat4.fromRotationTranslation = function (quat, vec, dest) {
      if (!dest) { dest = mat4.create(); }
      // Quaternion math
      var x = quat[0], y = quat[1], z = quat[2], w = quat[3],
          x2 = x + x,
          y2 = y + y,
          z2 = z + z,
          xx = x * x2,
          xy = x * y2,
          xz = x * z2,
          yy = y * y2,
          yz = y * z2,
          zz = z * z2,
          wx = w * x2,
          wy = w * y2,
          wz = w * z2;
      dest[0] = 1 - (yy + zz);
      dest[1] = xy + wz;
      dest[2] = xz - wy;
      dest[3] = 0;
      dest[4] = xy - wz;
      dest[5] = 1 - (xx + zz);
      dest[6] = yz + wx;
      dest[7] = 0;
      dest[8] = xz + wy;
      dest[9] = yz - wx;
      dest[10] = 1 - (xx + yy);
      dest[11] = 0;
      dest[12] = vec[0];
      dest[13] = vec[1];
      dest[14] = vec[2];
      dest[15] = 1;
      return dest;
  };
  /**
   * Returns a string representation of a mat4
   *
   * @param {mat4} mat mat4 to represent as a string
   *
   * @returns {string} String representation of mat
   */
  mat4.str = function (mat) {
      return '[' + mat[0] + ', ' + mat[1] + ', ' + mat[2] + ', ' + mat[3] +
          ', ' + mat[4] + ', ' + mat[5] + ', ' + mat[6] + ', ' + mat[7] +
          ', ' + mat[8] + ', ' + mat[9] + ', ' + mat[10] + ', ' + mat[11] +
          ', ' + mat[12] + ', ' + mat[13] + ', ' + mat[14] + ', ' + mat[15] + ']';
  };
  /*
   * quat4
   */
  /**
   * Creates a new instance of a quat4 using the default array type
   * Any javascript array containing at least 4 numeric elements can serve as a quat4
   *
   * @param {quat4} [quat] quat4 containing values to initialize with
   *
   * @returns {quat4} New quat4
   */
  quat4.create = function (quat) {
      var dest = new MatrixArray(4);
      if (quat) {
          dest[0] = quat[0];
          dest[1] = quat[1];
          dest[2] = quat[2];
          dest[3] = quat[3];
      }
      return dest;
  };
  /**
   * Copies the values of one quat4 to another
   *
   * @param {quat4} quat quat4 containing values to copy
   * @param {quat4} dest quat4 receiving copied values
   *
   * @returns {quat4} dest
   */
  quat4.set = function (quat, dest) {
      dest[0] = quat[0];
      dest[1] = quat[1];
      dest[2] = quat[2];
      dest[3] = quat[3];
      return dest;
  };
  /**
   * Calculates the W component of a quat4 from the X, Y, and Z components.
   * Assumes that quaternion is 1 unit in length. 
   * Any existing W component will be ignored. 
   *
   * @param {quat4} quat quat4 to calculate W component of
   * @param {quat4} [dest] quat4 receiving calculated values. If not specified result is written to quat
   *
   * @returns {quat4} dest if specified, quat otherwise
   */
  quat4.calculateW = function (quat, dest) {
      var x = quat[0], y = quat[1], z = quat[2];
      if (!dest || quat === dest) {
          quat[3] = -Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));
          return quat;
      }
      dest[0] = x;
      dest[1] = y;
      dest[2] = z;
      dest[3] = -Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));
      return dest;
  };
  /**
   * Calculates the dot product of two quaternions
   *
   * @param {quat4} quat First operand
   * @param {quat4} quat2 Second operand
   *
   * @return {number} Dot product of quat and quat2
   */
  quat4.dot = function(quat, quat2){
      return quat[0]*quat2[0] + quat[1]*quat2[1] + quat[2]*quat2[2] + quat[3]*quat2[3];
  };
  /**
   * Calculates the inverse of a quat4
   *
   * @param {quat4} quat quat4 to calculate inverse of
   * @param {quat4} [dest] quat4 receiving inverse values. If not specified result is written to quat
   *
   * @returns {quat4} dest if specified, quat otherwise
   */
  quat4.inverse = function(quat, dest) {
      var q0 = quat[0], q1 = quat[1], q2 = quat[2], q3 = quat[3],
          dot = q0*q0 + q1*q1 + q2*q2 + q3*q3,
          invDot = dot ? 1.0/dot : 0;
      // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0
      if(!dest || quat === dest) {
          quat[0] *= -invDot;
          quat[1] *= -invDot;
          quat[2] *= -invDot;
          quat[3] *= invDot;
          return quat;
      }
      dest[0] = -quat[0]*invDot;
      dest[1] = -quat[1]*invDot;
      dest[2] = -quat[2]*invDot;
      dest[3] = quat[3]*invDot;
      return dest;
  };
  /**
   * Calculates the conjugate of a quat4
   * If the quaternion is normalized, this function is faster than quat4.inverse and produces the same result.
   *
   * @param {quat4} quat quat4 to calculate conjugate of
   * @param {quat4} [dest] quat4 receiving conjugate values. If not specified result is written to quat
   *
   * @returns {quat4} dest if specified, quat otherwise
   */
  quat4.conjugate = function (quat, dest) {
      if (!dest || quat === dest) {
          quat[0] *= -1;
          quat[1] *= -1;
          quat[2] *= -1;
          return quat;
      }
      dest[0] = -quat[0];
      dest[1] = -quat[1];
      dest[2] = -quat[2];
      dest[3] = quat[3];
      return dest;
  };
  /**
   * Calculates the length of a quat4
   *
   * Params:
   * @param {quat4} quat quat4 to calculate length of
   *
   * @returns Length of quat
   */
  quat4.length = function (quat) {
      var x = quat[0], y = quat[1], z = quat[2], w = quat[3];
      return Math.sqrt(x * x + y * y + z * z + w * w);
  };
  /**
   * Generates a unit quaternion of the same direction as the provided quat4
   * If quaternion length is 0, returns [0, 0, 0, 0]
   *
   * @param {quat4} quat quat4 to normalize
   * @param {quat4} [dest] quat4 receiving operation result. If not specified result is written to quat
   *
   * @returns {quat4} dest if specified, quat otherwise
   */
  quat4.normalize = function (quat, dest) {
      if (!dest) { dest = quat; }
      var x = quat[0], y = quat[1], z = quat[2], w = quat[3],
          len = Math.sqrt(x * x + y * y + z * z + w * w);
      if (len === 0) {
          dest[0] = 0;
          dest[1] = 0;
          dest[2] = 0;
          dest[3] = 0;
          return dest;
      }
      len = 1 / len;
      dest[0] = x * len;
      dest[1] = y * len;
      dest[2] = z * len;
      dest[3] = w * len;
      return dest;
  };
  /**
   * Performs quaternion addition
   *
   * @param {quat4} quat First operand
   * @param {quat4} quat2 Second operand
   * @param {quat4} [dest] quat4 receiving operation result. If not specified result is written to quat
   *
   * @returns {quat4} dest if specified, quat otherwise
   */
  quat4.add = function (quat, quat2, dest) {
      if(!dest || quat === dest) {
          quat[0] += quat2[0];
          quat[1] += quat2[1];
          quat[2] += quat2[2];
          quat[3] += quat2[3];
          return quat;
      }
      dest[0] = quat[0]+quat2[0];
      dest[1] = quat[1]+quat2[1];
      dest[2] = quat[2]+quat2[2];
      dest[3] = quat[3]+quat2[3];
      return dest;
  };
  /**
   * Performs a quaternion multiplication
   *
   * @param {quat4} quat First operand
   * @param {quat4} quat2 Second operand
   * @param {quat4} [dest] quat4 receiving operation result. If not specified result is written to quat
   *
   * @returns {quat4} dest if specified, quat otherwise
   */
  quat4.multiply = function (quat, quat2, dest) {
      if (!dest) { dest = quat; }
      var qax = quat[0], qay = quat[1], qaz = quat[2], qaw = quat[3],
          qbx = quat2[0], qby = quat2[1], qbz = quat2[2], qbw = quat2[3];
      dest[0] = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;
      dest[1] = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;
      dest[2] = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;
      dest[3] = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;
      return dest;
  };
  /**
   * Transforms a vec3 with the given quaternion
   *
   * @param {quat4} quat quat4 to transform the vector with
   * @param {vec3} vec vec3 to transform
   * @param {vec3} [dest] vec3 receiving operation result. If not specified result is written to vec
   *
   * @returns dest if specified, vec otherwise
   */
  quat4.multiplyVec3 = function (quat, vec, dest) {
      if (!dest) { dest = vec; }
      var x = vec[0], y = vec[1], z = vec[2],
          qx = quat[0], qy = quat[1], qz = quat[2], qw = quat[3],
          // calculate quat * vec
          ix = qw * x + qy * z - qz * y,
          iy = qw * y + qz * x - qx * z,
          iz = qw * z + qx * y - qy * x,
          iw = -qx * x - qy * y - qz * z;
      // calculate result * inverse quat
      dest[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;
      dest[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;
      dest[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;
      return dest;
  };
  /**
   * Multiplies the components of a quaternion by a scalar value
   *
   * @param {quat4} quat to scale
   * @param {number} val Value to scale by
   * @param {quat4} [dest] quat4 receiving operation result. If not specified result is written to quat
   *
   * @returns {quat4} dest if specified, quat otherwise
   */
  quat4.scale = function (quat, val, dest) {
      if(!dest || quat === dest) {
          quat[0] *= val;
          quat[1] *= val;
          quat[2] *= val;
          quat[3] *= val;
          return quat;
      }
      dest[0] = quat[0]*val;
      dest[1] = quat[1]*val;
      dest[2] = quat[2]*val;
      dest[3] = quat[3]*val;
      return dest;
  };
  /**
   * Calculates a 3x3 matrix from the given quat4
   *
   * @param {quat4} quat quat4 to create matrix from
   * @param {mat3} [dest] mat3 receiving operation result
   *
   * @returns {mat3} dest if specified, a new mat3 otherwise
   */
  quat4.toMat3 = function (quat, dest) {
      if (!dest) { dest = mat3.create(); }
      var x = quat[0], y = quat[1], z = quat[2], w = quat[3],
          x2 = x + x,
          y2 = y + y,
          z2 = z + z,
          xx = x * x2,
          xy = x * y2,
          xz = x * z2,
          yy = y * y2,
          yz = y * z2,
          zz = z * z2,
          wx = w * x2,
          wy = w * y2,
          wz = w * z2;
      dest[0] = 1 - (yy + zz);
      dest[1] = xy + wz;
      dest[2] = xz - wy;
      dest[3] = xy - wz;
      dest[4] = 1 - (xx + zz);
      dest[5] = yz + wx;
      dest[6] = xz + wy;
      dest[7] = yz - wx;
      dest[8] = 1 - (xx + yy);
      return dest;
  };
  /**
   * Calculates a 4x4 matrix from the given quat4
   *
   * @param {quat4} quat quat4 to create matrix from
   * @param {mat4} [dest] mat4 receiving operation result
   *
   * @returns {mat4} dest if specified, a new mat4 otherwise
   */
  quat4.toMat4 = function (quat, dest) {
      if (!dest) { dest = mat4.create(); }
      var x = quat[0], y = quat[1], z = quat[2], w = quat[3],
          x2 = x + x,
          y2 = y + y,
          z2 = z + z,
          xx = x * x2,
          xy = x * y2,
          xz = x * z2,
          yy = y * y2,
          yz = y * z2,
          zz = z * z2,
          wx = w * x2,
          wy = w * y2,
          wz = w * z2;
      dest[0] = 1 - (yy + zz);
      dest[1] = xy + wz;
      dest[2] = xz - wy;
      dest[3] = 0;
      dest[4] = xy - wz;
      dest[5] = 1 - (xx + zz);
      dest[6] = yz + wx;
      dest[7] = 0;
      dest[8] = xz + wy;
      dest[9] = yz - wx;
      dest[10] = 1 - (xx + yy);
      dest[11] = 0;
      dest[12] = 0;
      dest[13] = 0;
      dest[14] = 0;
      dest[15] = 1;
      return dest;
  };
  /**
   * Performs a spherical linear interpolation between two quat4
   *
   * @param {quat4} quat First quaternion
   * @param {quat4} quat2 Second quaternion
   * @param {number} slerp Interpolation amount between the two inputs
   * @param {quat4} [dest] quat4 receiving operation result. If not specified result is written to quat
   *
   * @returns {quat4} dest if specified, quat otherwise
   */
  quat4.slerp = function (quat, quat2, slerp, dest) {
      if (!dest) { dest = quat; }
      var cosHalfTheta = quat[0] * quat2[0] + quat[1] * quat2[1] + quat[2] * quat2[2] + quat[3] * quat2[3],
          halfTheta,
          sinHalfTheta,
          ratioA,
          ratioB;
      if (Math.abs(cosHalfTheta) >= 1.0) {
          if (dest !== quat) {
              dest[0] = quat[0];
              dest[1] = quat[1];
              dest[2] = quat[2];
              dest[3] = quat[3];
          }
          return dest;
      }
      halfTheta = Math.acos(cosHalfTheta);
      sinHalfTheta = Math.sqrt(1.0 - cosHalfTheta * cosHalfTheta);
      if (Math.abs(sinHalfTheta) < 0.001) {
          dest[0] = (quat[0] * 0.5 + quat2[0] * 0.5);
          dest[1] = (quat[1] * 0.5 + quat2[1] * 0.5);
          dest[2] = (quat[2] * 0.5 + quat2[2] * 0.5);
          dest[3] = (quat[3] * 0.5 + quat2[3] * 0.5);
          return dest;
      }
      ratioA = Math.sin((1 - slerp) * halfTheta) / sinHalfTheta;
      ratioB = Math.sin(slerp * halfTheta) / sinHalfTheta;
      dest[0] = (quat[0] * ratioA + quat2[0] * ratioB);
      dest[1] = (quat[1] * ratioA + quat2[1] * ratioB);
      dest[2] = (quat[2] * ratioA + quat2[2] * ratioB);
      dest[3] = (quat[3] * ratioA + quat2[3] * ratioB);
      return dest;
  };
  /**
   * Returns a string representation of a quaternion
   *
   * @param {quat4} quat quat4 to represent as a string
   *
   * @returns {string} String representation of quat
   */
  quat4.str = function (quat) {
      return '[' + quat[0] + ', ' + quat[1] + ', ' + quat[2] + ', ' + quat[3] + ']';
  };
  return {
    vec3: vec3,
    mat3: mat3,
    mat4: mat4,
    quat4: quat4
  };
  })();
  ;
  var GLImmediateSetup={};function _glBegin(mode) {
      // Push the old state:
      GL.immediate.enabledClientAttributes_preBegin = GL.immediate.enabledClientAttributes;
      GL.immediate.enabledClientAttributes = [];
      GL.immediate.clientAttributes_preBegin = GL.immediate.clientAttributes;
      GL.immediate.clientAttributes = []
      for (var i = 0; i < GL.immediate.clientAttributes_preBegin.length; i++) {
        GL.immediate.clientAttributes.push({});
      }
      GL.immediate.mode = mode;
      GL.immediate.vertexCounter = 0;
      var components = GL.immediate.rendererComponents = [];
      for (var i = 0; i < GL.immediate.NUM_ATTRIBUTES; i++) {
        components[i] = 0;
      }
      GL.immediate.rendererComponentPointer = 0;
      GL.immediate.vertexData = GL.immediate.tempData;
    }
  function _glEnd() {
      GL.immediate.prepareClientAttributes(GL.immediate.rendererComponents[GL.immediate.VERTEX], true);
      GL.immediate.firstVertex = 0;
      GL.immediate.lastVertex = GL.immediate.vertexCounter / (GL.immediate.stride >> 2);
      GL.immediate.flush();
      GL.immediate.disableBeginEndClientAttributes();
      GL.immediate.mode = -1;
      // Pop the old state:
      GL.immediate.enabledClientAttributes = GL.immediate.enabledClientAttributes_preBegin;
      GL.immediate.clientAttributes = GL.immediate.clientAttributes_preBegin;
      GL.immediate.modifiedClientAttributes = true;
    }
  function _glVertex3f(x, y, z) {
      GL.immediate.vertexData[GL.immediate.vertexCounter++] = x;
      GL.immediate.vertexData[GL.immediate.vertexCounter++] = y;
      GL.immediate.vertexData[GL.immediate.vertexCounter++] = z || 0;
      GL.immediate.addRendererComponent(GL.immediate.VERTEX, 3, Module.ctx.FLOAT);
    }
  var _glVertex2f=_glVertex3f;
  function _glVertex3fv(p) {
      _glVertex3f(HEAPF32[((p)>>2)], HEAPF32[(((p)+(4))>>2)], HEAPF32[(((p)+(8))>>2)]);
    }
  function _glVertex2fv(p) {
      _glVertex3f(HEAPF32[((p)>>2)], HEAPF32[(((p)+(4))>>2)], 0);
    }
  var _glVertex3i=_glVertex3f;
  var _glVertex2i=_glVertex3f;
  function _glTexCoord2i(u, v) {
      GL.immediate.vertexData[GL.immediate.vertexCounter++] = u;
      GL.immediate.vertexData[GL.immediate.vertexCounter++] = v;
      GL.immediate.addRendererComponent(GL.immediate.TEXTURE0, 2, Module.ctx.FLOAT);
    }
  var _glTexCoord2f=_glTexCoord2i;
  function _glTexCoord2fv(v) {
      _glTexCoord2i(HEAPF32[((v)>>2)], HEAPF32[(((v)+(4))>>2)]);
    }
  function _glTexCoord4f() { throw 'glTexCoord4f: TODO' }
  function _glColor4f(r, g, b, a) {
      r = Math.max(Math.min(r, 1), 0);
      g = Math.max(Math.min(g, 1), 0);
      b = Math.max(Math.min(b, 1), 0);
      a = Math.max(Math.min(a, 1), 0);
      // TODO: make ub the default, not f, save a few mathops
      if (GL.immediate.mode >= 0) {
        var start = GL.immediate.vertexCounter << 2;
        GL.immediate.vertexDataU8[start + 0] = r * 255;
        GL.immediate.vertexDataU8[start + 1] = g * 255;
        GL.immediate.vertexDataU8[start + 2] = b * 255;
        GL.immediate.vertexDataU8[start + 3] = a * 255;
        GL.immediate.vertexCounter++;
        GL.immediate.addRendererComponent(GL.immediate.COLOR, 4, Module.ctx.UNSIGNED_BYTE);
      } else {
        GL.immediate.clientColor[0] = r;
        GL.immediate.clientColor[1] = g;
        GL.immediate.clientColor[2] = b;
        GL.immediate.clientColor[3] = a;
      }
    }
  var _glColor4d=_glColor4f;
  function _glColor4ub(r, g, b, a) {
      _glColor4f((r&255)/255, (g&255)/255, (b&255)/255, (a&255)/255);
    }
  function _glColor4us(r, g, b, a) {
      _glColor4f((r&65535)/65535, (g&65535)/65535, (b&65535)/65535, (a&65535)/65535);
    }
  function _glColor4ui(r, g, b, a) {
      _glColor4f((r>>>0)/4294967295, (g>>>0)/4294967295, (b>>>0)/4294967295, (a>>>0)/4294967295);
    }
  function _glColor3f(r, g, b) {
      _glColor4f(r, g, b, 1);
    }
  var _glColor3d=_glColor3f;
  function _glColor3ub(r, g, b) {
      _glColor4ub(r, g, b, 255);
    }
  function _glColor3us(r, g, b) {
      _glColor4us(r, g, b, 65535);
    }
  function _glColor3ui(r, g, b) {
      _glColor4ui(r, g, b, 4294967295);
    }
  function _glColor3ubv(p) {
      _glColor3ub(HEAP8[(p)], HEAP8[(((p)+(1))|0)], HEAP8[(((p)+(2))|0)]);
    }
  function _glColor3usv(p) {
      _glColor3us(HEAP16[((p)>>1)], HEAP16[(((p)+(2))>>1)], HEAP16[(((p)+(4))>>1)]);
    }
  function _glColor3uiv(p) {
      _glColor3ui(HEAP32[((p)>>2)], HEAP32[(((p)+(4))>>2)], HEAP32[(((p)+(8))>>2)]);
    }
  function _glColor3fv(p) {
      _glColor3f(HEAPF32[((p)>>2)], HEAPF32[(((p)+(4))>>2)], HEAPF32[(((p)+(8))>>2)]);
    }
  function _glColor4fv(p) {
      _glColor4f(HEAPF32[((p)>>2)], HEAPF32[(((p)+(4))>>2)], HEAPF32[(((p)+(8))>>2)], HEAPF32[(((p)+(12))>>2)]);
    }
  function _glColor4ubv(p) {
      _glColor4ub(HEAP8[(p)], HEAP8[(((p)+(1))|0)], HEAP8[(((p)+(2))|0)], HEAP8[(((p)+(3))|0)]);
    }
  function _glFogf(pname, param) { // partial support, TODO
      switch(pname) {
        case 0x0B63: // GL_FOG_START
          GLEmulation.fogStart = param; break;
        case 0x0B64: // GL_FOG_END
          GLEmulation.fogEnd = param; break;
        case 0x0B62: // GL_FOG_DENSITY
          GLEmulation.fogDensity = param; break;
        case 0x0B65: // GL_FOG_MODE
          switch (param) {
            case 0x0801: // GL_EXP2
            case 0x2601: // GL_LINEAR
              GLEmulation.fogMode = param; break;
            default: // default to GL_EXP
              GLEmulation.fogMode = 0x0800 /* GL_EXP */; break;
          }
          break;
      }
    }
  function _glFogi(pname, param) {
      return _glFogf(pname, param);
    }
  function _glFogfv(pname, param) { // partial support, TODO
      switch(pname) {
        case 0x0B66: // GL_FOG_COLOR
          GLEmulation.fogColor[0] = HEAPF32[((param)>>2)];
          GLEmulation.fogColor[1] = HEAPF32[(((param)+(4))>>2)];
          GLEmulation.fogColor[2] = HEAPF32[(((param)+(8))>>2)];
          GLEmulation.fogColor[3] = HEAPF32[(((param)+(12))>>2)];
          break;
        case 0x0B63: // GL_FOG_START
        case 0x0B64: // GL_FOG_END
          _glFogf(pname, HEAPF32[((param)>>2)]); break;
      }
    }
  function _glFogiv(pname, param) {
      switch(pname) {
        case 0x0B66: // GL_FOG_COLOR
          GLEmulation.fogColor[0] = (HEAP32[((param)>>2)]/2147483647)/2.0+0.5;
          GLEmulation.fogColor[1] = (HEAP32[(((param)+(4))>>2)]/2147483647)/2.0+0.5;
          GLEmulation.fogColor[2] = (HEAP32[(((param)+(8))>>2)]/2147483647)/2.0+0.5;
          GLEmulation.fogColor[3] = (HEAP32[(((param)+(12))>>2)]/2147483647)/2.0+0.5;
          break;
        default:
          _glFogf(pname, HEAP32[((param)>>2)]); break;
      }
    }
  var _glFogx=_glFogi;
  var _glFogxv=_glFogiv;
  function _glPolygonMode(){}
  function _glAlphaFunc(){}
  function _glNormal3f(){}
  function _glDrawRangeElements(mode, start, end, count, type, indices) {
      _glDrawElements(mode, count, type, indices, start, end);
    }
  function _glEnableClientState(cap, disable) {
      var attrib = GLEmulation.getAttributeFromCapability(cap);
      if (attrib === null) {
        return;
      }
      if (disable && GL.immediate.enabledClientAttributes[attrib]) {
        GL.immediate.enabledClientAttributes[attrib] = false;
        GL.immediate.totalEnabledClientAttributes--;
        this.currentRenderer = null; // Will need to change current renderer, since the set of active vertex pointers changed.
        if (GLEmulation.currentVao) delete GLEmulation.currentVao.enabledClientStates[cap];
      } else if (!disable && !GL.immediate.enabledClientAttributes[attrib]) {
        GL.immediate.enabledClientAttributes[attrib] = true;
        GL.immediate.totalEnabledClientAttributes++;
        this.currentRenderer = null; // Will need to change current renderer, since the set of active vertex pointers changed.
        if (GLEmulation.currentVao) GLEmulation.currentVao.enabledClientStates[cap] = 1;
      }
      GL.immediate.modifiedClientAttributes = true;
    }
  function _glDisableClientState(cap) {
      _glEnableClientState(cap, 1);
    }
  function _glVertexPointer(size, type, stride, pointer) {
      GL.immediate.setClientAttribute(GL.immediate.VERTEX, size, type, stride, pointer);
    }
  function _glTexCoordPointer(size, type, stride, pointer) {
      GL.immediate.setClientAttribute(GL.immediate.TEXTURE0 + GL.immediate.clientActiveTexture, size, type, stride, pointer);
    }
  function _glNormalPointer(type, stride, pointer) {
      GL.immediate.setClientAttribute(GL.immediate.NORMAL, 3, type, stride, pointer);
    }
  function _glColorPointer(size, type, stride, pointer) {
      GL.immediate.setClientAttribute(GL.immediate.COLOR, size, type, stride, pointer);
    }
  function _glClientActiveTexture(texture) {
      GL.immediate.clientActiveTexture = texture - 0x84C0; // GL_TEXTURE0
    }
  function _glMatrixMode(mode) {
      if (mode == 0x1700 /* GL_MODELVIEW */) {
        GL.immediate.currentMatrix = 'm';
      } else if (mode == 0x1701 /* GL_PROJECTION */) {
        GL.immediate.currentMatrix = 'p';
      } else if (mode == 0x1702) { // GL_TEXTURE
        GL.immediate.useTextureMatrix = true;
        GL.immediate.currentMatrix = 't' + GL.immediate.clientActiveTexture;
      } else {
        throw "Wrong mode " + mode + " passed to glMatrixMode";
      }
    }
  function _glPushMatrix() {
      GL.immediate.matricesModified = true;
      GL.immediate.matrixVersion[GL.immediate.currentMatrix] = (GL.immediate.matrixVersion[GL.immediate.currentMatrix] + 1)|0;
      GL.immediate.matrixStack[GL.immediate.currentMatrix].push(
          Array.prototype.slice.call(GL.immediate.matrix[GL.immediate.currentMatrix]));
    }
  function _glPopMatrix() {
      GL.immediate.matricesModified = true;
      GL.immediate.matrixVersion[GL.immediate.currentMatrix] = (GL.immediate.matrixVersion[GL.immediate.currentMatrix] + 1)|0;
      GL.immediate.matrix[GL.immediate.currentMatrix] = GL.immediate.matrixStack[GL.immediate.currentMatrix].pop();
    }
  function _glLoadIdentity() {
      GL.immediate.matricesModified = true;
      GL.immediate.matrixVersion[GL.immediate.currentMatrix] = (GL.immediate.matrixVersion[GL.immediate.currentMatrix] + 1)|0;
      GL.immediate.matrix.lib.mat4.identity(GL.immediate.matrix[GL.immediate.currentMatrix]);
    }
  function _glLoadMatrixd(matrix) {
      GL.immediate.matricesModified = true;
      GL.immediate.matrixVersion[GL.immediate.currentMatrix] = (GL.immediate.matrixVersion[GL.immediate.currentMatrix] + 1)|0;
      GL.immediate.matrix.lib.mat4.set(HEAPF64.subarray((matrix)>>3,(matrix+128)>>3), GL.immediate.matrix[GL.immediate.currentMatrix]);
    }
  function _glLoadMatrixf(matrix) {
      GL.immediate.matricesModified = true;
      GL.immediate.matrixVersion[GL.immediate.currentMatrix] = (GL.immediate.matrixVersion[GL.immediate.currentMatrix] + 1)|0;
      GL.immediate.matrix.lib.mat4.set(HEAPF32.subarray((matrix)>>2,(matrix+64)>>2), GL.immediate.matrix[GL.immediate.currentMatrix]);
    }
  function _glLoadTransposeMatrixd(matrix) {
      GL.immediate.matricesModified = true;
      GL.immediate.matrixVersion[GL.immediate.currentMatrix] = (GL.immediate.matrixVersion[GL.immediate.currentMatrix] + 1)|0;
      GL.immediate.matrix.lib.mat4.set(HEAPF64.subarray((matrix)>>3,(matrix+128)>>3), GL.immediate.matrix[GL.immediate.currentMatrix]);
      GL.immediate.matrix.lib.mat4.transpose(GL.immediate.matrix[GL.immediate.currentMatrix]);
    }
  function _glLoadTransposeMatrixf(matrix) {
      GL.immediate.matricesModified = true;
      GL.immediate.matrixVersion[GL.immediate.currentMatrix] = (GL.immediate.matrixVersion[GL.immediate.currentMatrix] + 1)|0;
      GL.immediate.matrix.lib.mat4.set(HEAPF32.subarray((matrix)>>2,(matrix+64)>>2), GL.immediate.matrix[GL.immediate.currentMatrix]);
      GL.immediate.matrix.lib.mat4.transpose(GL.immediate.matrix[GL.immediate.currentMatrix]);
    }
  function _glMultMatrixd(matrix) {
      GL.immediate.matricesModified = true;
      GL.immediate.matrixVersion[GL.immediate.currentMatrix] = (GL.immediate.matrixVersion[GL.immediate.currentMatrix] + 1)|0;
      GL.immediate.matrix.lib.mat4.multiply(GL.immediate.matrix[GL.immediate.currentMatrix],
          HEAPF64.subarray((matrix)>>3,(matrix+128)>>3));
    }
  function _glMultMatrixf(matrix) {
      GL.immediate.matricesModified = true;
      GL.immediate.matrixVersion[GL.immediate.currentMatrix] = (GL.immediate.matrixVersion[GL.immediate.currentMatrix] + 1)|0;
      GL.immediate.matrix.lib.mat4.multiply(GL.immediate.matrix[GL.immediate.currentMatrix],
          HEAPF32.subarray((matrix)>>2,(matrix+64)>>2));
    }
  function _glMultTransposeMatrixd(matrix) {
      GL.immediate.matricesModified = true;
      GL.immediate.matrixVersion[GL.immediate.currentMatrix] = (GL.immediate.matrixVersion[GL.immediate.currentMatrix] + 1)|0;
      var colMajor = GL.immediate.matrix.lib.mat4.create();
      GL.immediate.matrix.lib.mat4.set(HEAPF64.subarray((matrix)>>3,(matrix+128)>>3), colMajor);
      GL.immediate.matrix.lib.mat4.transpose(colMajor);
      GL.immediate.matrix.lib.mat4.multiply(GL.immediate.matrix[GL.immediate.currentMatrix], colMajor);
    }
  function _glMultTransposeMatrixf(matrix) {
      GL.immediate.matricesModified = true;
      GL.immediate.matrixVersion[GL.immediate.currentMatrix] = (GL.immediate.matrixVersion[GL.immediate.currentMatrix] + 1)|0;
      var colMajor = GL.immediate.matrix.lib.mat4.create();
      GL.immediate.matrix.lib.mat4.set(HEAPF32.subarray((matrix)>>2,(matrix+64)>>2), colMajor);
      GL.immediate.matrix.lib.mat4.transpose(colMajor);
      GL.immediate.matrix.lib.mat4.multiply(GL.immediate.matrix[GL.immediate.currentMatrix], colMajor);
    }
  function _glFrustum(left, right, bottom, top_, nearVal, farVal) {
      GL.immediate.matricesModified = true;
      GL.immediate.matrixVersion[GL.immediate.currentMatrix] = (GL.immediate.matrixVersion[GL.immediate.currentMatrix] + 1)|0;
      GL.immediate.matrix.lib.mat4.multiply(GL.immediate.matrix[GL.immediate.currentMatrix],
          GL.immediate.matrix.lib.mat4.frustum(left, right, bottom, top_, nearVal, farVal));
    }
  var _glFrustumf=_glFrustum;
  function _glOrtho(left, right, bottom, top_, nearVal, farVal) {
      GL.immediate.matricesModified = true;
      GL.immediate.matrixVersion[GL.immediate.currentMatrix] = (GL.immediate.matrixVersion[GL.immediate.currentMatrix] + 1)|0;
      GL.immediate.matrix.lib.mat4.multiply(GL.immediate.matrix[GL.immediate.currentMatrix],
          GL.immediate.matrix.lib.mat4.ortho(left, right, bottom, top_, nearVal, farVal));
    }
  var _glOrthof=_glOrtho;
  function _glScaled(x, y, z) {
      GL.immediate.matricesModified = true;
      GL.immediate.matrixVersion[GL.immediate.currentMatrix] = (GL.immediate.matrixVersion[GL.immediate.currentMatrix] + 1)|0;
      GL.immediate.matrix.lib.mat4.scale(GL.immediate.matrix[GL.immediate.currentMatrix], [x, y, z]);
    }
  var _glScalef=_glScaled;
  function _glTranslated(x, y, z) {
      GL.immediate.matricesModified = true;
      GL.immediate.matrixVersion[GL.immediate.currentMatrix] = (GL.immediate.matrixVersion[GL.immediate.currentMatrix] + 1)|0;
      GL.immediate.matrix.lib.mat4.translate(GL.immediate.matrix[GL.immediate.currentMatrix], [x, y, z]);
    }
  var _glTranslatef=_glTranslated;
  function _glRotated(angle, x, y, z) {
      GL.immediate.matricesModified = true;
      GL.immediate.matrixVersion[GL.immediate.currentMatrix] = (GL.immediate.matrixVersion[GL.immediate.currentMatrix] + 1)|0;
      GL.immediate.matrix.lib.mat4.rotate(GL.immediate.matrix[GL.immediate.currentMatrix], angle*Math.PI/180, [x, y, z]);
    }
  var _glRotatef=_glRotated;
  function _glDrawBuffer() { throw 'glDrawBuffer: TODO' }
  function _glReadBuffer() { throw 'glReadBuffer: TODO' }
  function _glLightfv() { throw 'glLightfv: TODO' }
  function _glLightModelfv() { throw 'glLightModelfv: TODO' }
  function _glMaterialfv() { throw 'glMaterialfv: TODO' }
  function _glTexGeni() { throw 'glTexGeni: TODO' }
  function _glTexGenfv() { throw 'glTexGenfv: TODO' }
  function _glTexEnvi() { Runtime.warnOnce('glTexEnvi: TODO') }
  function _glTexEnvf() { Runtime.warnOnce('glTexEnvf: TODO') }
  function _glTexEnvfv() { Runtime.warnOnce('glTexEnvfv: TODO') }
  function _glTexImage1D() { throw 'glTexImage1D: TODO' }
  function _glTexCoord3f() { throw 'glTexCoord3f: TODO' }
  function _glGetTexLevelParameteriv() { throw 'glGetTexLevelParameteriv: TODO' }
  function _glShadeModel() { Runtime.warnOnce('TODO: glShadeModel') }
  var _glGenFramebuffersOES=_glGenFramebuffers;
  var _glGenRenderbuffersOES=_glGenRenderbuffers;
  var _glBindFramebufferOES=_glBindFramebuffer;
  var _glBindRenderbufferOES=_glBindRenderbuffer;
  var _glGetRenderbufferParameterivOES=_glGetRenderbufferParameteriv;
  var _glFramebufferRenderbufferOES=_glFramebufferRenderbuffer;
  function _glRenderbufferStorage(x0, x1, x2, x3) { Module.ctx.renderbufferStorage(x0, x1, x2, x3) }var _glRenderbufferStorageOES=_glRenderbufferStorage;
  function _glCheckFramebufferStatus(x0) { return Module.ctx.checkFramebufferStatus(x0) }var _glCheckFramebufferStatusOES=_glCheckFramebufferStatus;
  var _glDeleteFramebuffersOES=_glDeleteFramebuffers;
  var _glDeleteRenderbuffersOES=_glDeleteRenderbuffers;
  var _glFramebufferTexture2DOES=_glFramebufferTexture2D;
  function _gluPerspective(fov, aspect, near, far) {
      GL.immediate.matricesModified = true;
      GL.immediate.matrixVersion[GL.immediate.currentMatrix] = (GL.immediate.matrixVersion[GL.immediate.currentMatrix] + 1)|0;
      GL.immediate.matrix[GL.immediate.currentMatrix] =
        GL.immediate.matrix.lib.mat4.perspective(fov, aspect, near, far,
                                                 GL.immediate.matrix[GL.immediate.currentMatrix]);
    }
  function _gluLookAt(ex, ey, ez, cx, cy, cz, ux, uy, uz) {
      GL.immediate.matricesModified = true;
      GL.immediate.matrixVersion[GL.immediate.currentMatrix] = (GL.immediate.matrixVersion[GL.immediate.currentMatrix] + 1)|0;
      GL.immediate.matrix.lib.mat4.lookAt(GL.immediate.matrix[GL.immediate.currentMatrix], [ex, ey, ez],
          [cx, cy, cz], [ux, uy, uz]);
    }
  function _gluProject(objX, objY, objZ, model, proj, view, winX, winY, winZ) {
      // The algorithm for this functions comes from Mesa
      var inVec = new Float32Array(4);
      var outVec = new Float32Array(4);
      GL.immediate.matrix.lib.mat4.multiplyVec4(HEAPF64.subarray((model)>>3,(model+128)>>3),
          [objX, objY, objZ, 1.0], outVec);
      GL.immediate.matrix.lib.mat4.multiplyVec4(HEAPF64.subarray((proj)>>3,(proj+128)>>3),
          outVec, inVec);
      if (inVec[3] == 0.0) {
        return 0 /* GL_FALSE */;
      }
      inVec[0] /= inVec[3];
      inVec[1] /= inVec[3];
      inVec[2] /= inVec[3];
      // Map x, y and z to range 0-1 */
      inVec[0] = inVec[0] * 0.5 + 0.5;
      inVec[1] = inVec[1] * 0.5 + 0.5;
      inVec[2] = inVec[2] * 0.5 + 0.5;
      // Map x, y to viewport
      inVec[0] = inVec[0] * HEAP32[(((view)+(8))>>2)] + HEAP32[((view)>>2)];
      inVec[1] = inVec[1] * HEAP32[(((view)+(12))>>2)] + HEAP32[(((view)+(4))>>2)];
      HEAPF64[((winX)>>3)]=inVec[0];
      HEAPF64[((winY)>>3)]=inVec[1];
      HEAPF64[((winZ)>>3)]=inVec[2];
      return 1 /* GL_TRUE */;
    }
  function _gluUnProject(winX, winY, winZ, model, proj, view, objX, objY, objZ) {
      var result = GL.immediate.matrix.lib.mat4.unproject([winX, winY, winZ],
          HEAPF64.subarray((model)>>3,(model+128)>>3),
          HEAPF64.subarray((proj)>>3,(proj+128)>>3),
          HEAP32.subarray((view)>>2,(view+16)>>2));
      if (result === null) {
        return 0 /* GL_FALSE */;
      }
      HEAPF64[((objX)>>3)]=result[0];
      HEAPF64[((objY)>>3)]=result[1];
      HEAPF64[((objZ)>>3)]=result[2];
      return 1 /* GL_TRUE */;
    }
  function _gluOrtho2D(left, right, bottom, top) {
      _glOrtho(left, right, bottom, top, -1, 1);
    }
  function _glDrawArrays(mode, first, count) {
      Module.ctx.drawArrays(mode, first, count);
    }
  function _glDrawElements(mode, count, type, indices) {
      Module.ctx.drawElements(mode, count, type, indices);
    }
  function _glShaderBinary() {
      GL.recordError(0x0500/*GL_INVALID_ENUM*/);
    }
  function _glReleaseShaderCompiler() {
      // NOP (as allowed by GLES 2.0 spec)
    }
  function _glGetError() {
      // First return any GL error generated by the emscripten library_gl.js interop layer.
      if (GL.lastError) {
        var error = GL.lastError;
        GL.lastError = 0/*GL_NO_ERROR*/;
        return error;
      } else { // If there were none, return the GL error from the browser GL context.
        return Module.ctx.getError();
      }
    }
  function _glVertexAttribDivisor(index, divisor) {
      GL.instancedArraysExt.vertexAttribDivisorANGLE(index, divisor);    
    }
  function _glDrawArraysInstanced(mode, first, count, primcount) {
      GL.instancedArraysExt.drawArraysInstancedANGLE(mode, first, count, primcount);
    }
  function _glDrawElementsInstanced(mode, count, type, indices, primcount) {
      GL.instancedArraysExt.drawElementsInstancedANGLE(mode, count, type, indices, primcount);
    }
  var _glVertexAttribDivisorNV=_glVertexAttribDivisor;
  var _glDrawArraysInstancedNV=_glDrawArraysInstanced;
  var _glDrawElementsInstancedNV=_glDrawElementsInstanced;
  var _glVertexAttribDivisorEXT=_glVertexAttribDivisor;
  var _glDrawArraysInstancedEXT=_glDrawArraysInstanced;
  var _glDrawElementsInstancedEXT=_glDrawElementsInstanced;
  var _glVertexAttribDivisorARB=_glVertexAttribDivisor;
  var _glDrawArraysInstancedARB=_glDrawArraysInstanced;
  var _glDrawElementsInstancedARB=_glDrawElementsInstanced;
  function _glFinish() { Module.ctx.finish() }
  function _glFlush() { Module.ctx.flush() }
  function _glClearDepth(x0) { Module.ctx.clearDepth(x0) }
  function _glClearDepthf(x0) { Module.ctx.clearDepth(x0) }
  function _glDepthFunc(x0) { Module.ctx.depthFunc(x0) }
  function _glFrontFace(x0) { Module.ctx.frontFace(x0) }
  function _glCullFace(x0) { Module.ctx.cullFace(x0) }
  function _glClear(x0) { Module.ctx.clear(x0) }
  function _glLineWidth(x0) { Module.ctx.lineWidth(x0) }
  function _glClearStencil(x0) { Module.ctx.clearStencil(x0) }
  function _glDepthMask(x0) { Module.ctx.depthMask(x0) }
  function _glStencilMask(x0) { Module.ctx.stencilMask(x0) }
  function _glGenerateMipmap(x0) { Module.ctx.generateMipmap(x0) }
  function _glBlendEquation(x0) { Module.ctx.blendEquation(x0) }
  function _glBlendFunc(x0, x1) { Module.ctx.blendFunc(x0, x1) }
  function _glBlendEquationSeparate(x0, x1) { Module.ctx.blendEquationSeparate(x0, x1) }
  function _glDepthRange(x0, x1) { Module.ctx.depthRange(x0, x1) }
  function _glDepthRangef(x0, x1) { Module.ctx.depthRange(x0, x1) }
  function _glStencilMaskSeparate(x0, x1) { Module.ctx.stencilMaskSeparate(x0, x1) }
  function _glPolygonOffset(x0, x1) { Module.ctx.polygonOffset(x0, x1) }
  function _glVertexAttrib1f(x0, x1) { Module.ctx.vertexAttrib1f(x0, x1) }
  function _glSampleCoverage(x0, x1) { Module.ctx.sampleCoverage(x0, x1) }
  function _glTexParameteri(x0, x1, x2) { Module.ctx.texParameteri(x0, x1, x2) }
  function _glTexParameterf(x0, x1, x2) { Module.ctx.texParameterf(x0, x1, x2) }
  function _glVertexAttrib2f(x0, x1, x2) { Module.ctx.vertexAttrib2f(x0, x1, x2) }
  function _glStencilFunc(x0, x1, x2) { Module.ctx.stencilFunc(x0, x1, x2) }
  function _glStencilOp(x0, x1, x2) { Module.ctx.stencilOp(x0, x1, x2) }
  function _glViewport(x0, x1, x2, x3) { Module.ctx.viewport(x0, x1, x2, x3) }
  function _glClearColor(x0, x1, x2, x3) { Module.ctx.clearColor(x0, x1, x2, x3) }
  function _glScissor(x0, x1, x2, x3) { Module.ctx.scissor(x0, x1, x2, x3) }
  function _glVertexAttrib3f(x0, x1, x2, x3) { Module.ctx.vertexAttrib3f(x0, x1, x2, x3) }
  function _glColorMask(x0, x1, x2, x3) { Module.ctx.colorMask(x0, x1, x2, x3) }
  function _glBlendFuncSeparate(x0, x1, x2, x3) { Module.ctx.blendFuncSeparate(x0, x1, x2, x3) }
  function _glBlendColor(x0, x1, x2, x3) { Module.ctx.blendColor(x0, x1, x2, x3) }
  function _glStencilFuncSeparate(x0, x1, x2, x3) { Module.ctx.stencilFuncSeparate(x0, x1, x2, x3) }
  function _glStencilOpSeparate(x0, x1, x2, x3) { Module.ctx.stencilOpSeparate(x0, x1, x2, x3) }
  function _glVertexAttrib4f(x0, x1, x2, x3, x4) { Module.ctx.vertexAttrib4f(x0, x1, x2, x3, x4) }
  function _glCopyTexImage2D(x0, x1, x2, x3, x4, x5, x6, x7) { Module.ctx.copyTexImage2D(x0, x1, x2, x3, x4, x5, x6, x7) }
  function _glCopyTexSubImage2D(x0, x1, x2, x3, x4, x5, x6, x7) { Module.ctx.copyTexSubImage2D(x0, x1, x2, x3, x4, x5, x6, x7) }function _emscripten_procAddressTable(name) {
  switch(name) {
  case "glPixelStorei": return 344; break;
  case "glGetString": return 174; break;
  case "glGetIntegerv": return 128; break;
  case "glGetFloatv": return 144; break;
  case "glGetBooleanv": return 192; break;
  case "glGenTextures": return 126; break;
  case "glDeleteTextures": return 198; break;
  case "glCompressedTexImage2D": return 2; break;
  case "glCompressedTexSubImage2D": return 2; break;
  case "glTexImage2D": return 10; break;
  case "glTexSubImage2D": return 4; break;
  case "glReadPixels": return 30; break;
  case "glBindTexture": return 142; break;
  case "glGetTexParameterfv": return 186; break;
  case "glGetTexParameteriv": return 26; break;
  case "glTexParameterfv": return 132; break;
  case "glTexParameteriv": return 4; break;
  case "glIsTexture": return 250; break;
  case "glGenBuffers": return 186; break;
  case "glDeleteBuffers": return 60; break;
  case "glGetBufferParameteriv": return 192; break;
  case "glBufferData": return 126; break;
  case "glBufferSubData": return 62; break;
  case "glIsBuffer": return 144; break;
  case "glGenRenderbuffers": return 334; break;
  case "glDeleteRenderbuffers": return 240; break;
  case "glBindRenderbuffer": return 196; break;
  case "glGetRenderbufferParameteriv": return 128; break;
  case "glIsRenderbuffer": return 268; break;
  case "glGetUniformfv": return 122; break;
  case "glGetUniformiv": return 68; break;
  case "glGetUniformLocation": return 26; break;
  case "glGetVertexAttribfv": return 110; break;
  case "glGetVertexAttribiv": return 214; break;
  case "glGetVertexAttribPointerv": return 32; break;
  case "glGetActiveUniform": return 34; break;
  case "glUniform1f": return 34; break;
  case "glUniform2f": return 2; break;
  case "glUniform3f": return 2; break;
  case "glUniform4f": return 2; break;
  case "glUniform1i": return 318; break;
  case "glUniform2i": return 20; break;
  case "glUniform3i": return 66; break;
  case "glUniform4i": return 52; break;
  case "glUniform1iv": return 40; break;
  case "glUniform2iv": return 64; break;
  case "glUniform3iv": return 54; break;
  case "glUniform4iv": return 190; break;
  case "glUniform1fv": return 62; break;
  case "glUniform2fv": return 102; break;
  case "glUniform3fv": return 194; break;
  case "glUniform4fv": return 84; break;
  case "glUniformMatrix2fv": return 2; break;
  case "glUniformMatrix3fv": return 54; break;
  case "glUniformMatrix4fv": return 4; break;
  case "glBindBuffer": return 86; break;
  case "glVertexAttrib1fv": return 182; break;
  case "glVertexAttrib2fv": return 194; break;
  case "glVertexAttrib3fv": return 320; break;
  case "glVertexAttrib4fv": return 58; break;
  case "glGetAttribLocation": return 218; break;
  case "glGetActiveAttrib": return 32; break;
  case "glCreateShader": return 142; break;
  case "glDeleteShader": return 166; break;
  case "glGetAttachedShaders": return 44; break;
  case "glShaderSource": return 104; break;
  case "glGetShaderSource": return 110; break;
  case "glCompileShader": return 788; break;
  case "glGetShaderInfoLog": return 116; break;
  case "glGetShaderiv": return 82; break;
  case "glGetProgramiv": return 72; break;
  case "glIsShader": return 146; break;
  case "glCreateProgram": return 4; break;
  case "glDeleteProgram": return 450; break;
  case "glAttachShader": return 40; break;
  case "glDetachShader": return 212; break;
  case "glGetShaderPrecisionFormat": return 4; break;
  case "glLinkProgram": return 174; break;
  case "glGetProgramInfoLog": return 158; break;
  case "glUseProgram": return 210; break;
  case "glValidateProgram": return 714; break;
  case "glIsProgram": return 282; break;
  case "glBindAttribLocation": return 174; break;
  case "glBindFramebuffer": return 66; break;
  case "glGenFramebuffers": return 88; break;
  case "glDeleteFramebuffers": return 136; break;
  case "glFramebufferRenderbuffer": return 14; break;
  case "glFramebufferTexture2D": return 30; break;
  case "glGetFramebufferAttachmentParameteriv": return 112; break;
  case "glIsFramebuffer": return 124; break;
  case "glGenVertexArrays": return 330; break;
  case "glDeleteVertexArrays": return 4; break;
  case "glBindVertexArray": return 156; break;
  case "glIsVertexArray": return 162; break;
  case "glDeleteObject": return 406; break;
  case "glGetObjectParameteriv": return 200; break;
  case "glGetInfoLog": return 56; break;
  case "glBindProgram": return 140; break;
  case "glDrawRangeElements": return 18; break;
  case "glClientActiveTexture": return 652; break;
  case "glVertexAttribPointer": return 32; break;
  case "glEnableVertexAttribArray": return 154; break;
  case "glDisableVertexAttribArray": return 24; break;
  case "glDrawArrays": return 28; break;
  case "glDrawElements": return 60; break;
  case "glShaderBinary": return 6; break;
  case "glReleaseShaderCompiler": return 8; break;
  case "glGetError": return 2; break;
  case "glVertexAttribDivisor": return 158; break;
  case "glDrawArraysInstanced": return 26; break;
  case "glDrawElementsInstanced": return 20; break;
  case "glFinish": return 2; break;
  case "glFlush": return 12; break;
  case "glClearDepth": return 220; break;
  case "glClearDepthf": return 576; break;
  case "glDepthFunc": return 126; break;
  case "glEnable": return 532; break;
  case "glDisable": return 440; break;
  case "glFrontFace": return 372; break;
  case "glCullFace": return 106; break;
  case "glClear": return 630; break;
  case "glLineWidth": return 500; break;
  case "glClearStencil": return 2; break;
  case "glDepthMask": return 68; break;
  case "glStencilMask": return 848; break;
  case "glCheckFramebufferStatus": return 84; break;
  case "glGenerateMipmap": return 266; break;
  case "glActiveTexture": return 142; break;
  case "glBlendEquation": return 454; break;
  case "glIsEnabled": return 184; break;
  case "glBlendFunc": return 174; break;
  case "glBlendEquationSeparate": return 76; break;
  case "glDepthRange": return 316; break;
  case "glDepthRangef": return 248; break;
  case "glStencilMaskSeparate": return 36; break;
  case "glHint": return 110; break;
  case "glPolygonOffset": return 92; break;
  case "glVertexAttrib1f": return 78; break;
  case "glSampleCoverage": return 234; break;
  case "glTexParameteri": return 146; break;
  case "glTexParameterf": return 94; break;
  case "glVertexAttrib2f": return 158; break;
  case "glStencilFunc": return 100; break;
  case "glStencilOp": return 22; break;
  case "glViewport": return 20; break;
  case "glClearColor": return 40; break;
  case "glScissor": return 86; break;
  case "glVertexAttrib3f": return 152; break;
  case "glColorMask": return 82; break;
  case "glRenderbufferStorage": return 88; break;
  case "glBlendFuncSeparate": return 76; break;
  case "glBlendColor": return 90; break;
  case "glStencilFuncSeparate": return 98; break;
  case "glStencilOpSeparate": return 64; break;
  case "glVertexAttrib4f": return 2; break;
  case "glCopyTexImage2D": return 22; break;
  case "glCopyTexSubImage2D": return 8; break;
  }
  return 0;
  }function _emscripten_GetProcAddress(name) {
    name = name.replace('EXT', '').replace('ARB', '');
    switch(name) { // misc renamings
      case 'glCreateProgramObject': name = 'glCreateProgram'; break;
      case 'glUseProgramObject': name = 'glUseProgram'; break;
      case 'glCreateShaderObject': name = 'glCreateShader'; break;
      case 'glAttachObject': name = 'glAttachShader'; break;
      case 'glDetachObject': name = 'glDetachShader'; break;
    }
    var ret = _emscripten_procAddressTable(name);
    if (!ret) Module.printErr('WARNING: getProcAddress failed for ' + name);
    return ret;
  }function _SDL_GL_GetProcAddress(name_) {
      return _emscripten_GetProcAddress(Pointer_stringify(name_));
    }
  function _fputs(s, stream) {
      // int fputs(const char *restrict s, FILE *restrict stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fputs.html
      return _write(stream, s, _strlen(s));
    }
  function _fputc(c, stream) {
      // int fputc(int c, FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fputc.html
      var chr = unSign(c & 0xFF);
      HEAP8[((_fputc.ret)|0)]=chr
      var ret = _write(stream, _fputc.ret, 1);
      if (ret == -1) {
        var streamObj = FS.getStream(stream);
        if (streamObj) streamObj.error = true;
        return -1;
      } else {
        return chr;
      }
    }function _puts(s) {
      // int puts(const char *s);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/puts.html
      // NOTE: puts() always writes an extra newline.
      var stdout = HEAP32[((_stdout)>>2)];
      var ret = _fputs(s, stdout);
      if (ret < 0) {
        return ret;
      } else {
        var newlineRet = _fputc(10, stdout);
        return (newlineRet < 0) ? -1 : ret + 1;
      }
    }
  function ___assert_fail(condition, filename, line, func) {
      ABORT = true;
      throw 'Assertion failed: ' + Pointer_stringify(condition) + ', at: ' + [filename ? Pointer_stringify(filename) : 'unknown filename', line, func ? Pointer_stringify(func) : 'unknown function'] + ' at ' + stackTrace();
    }
  function _open(path, oflag, varargs) {
      // int open(const char *path, int oflag, ...);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/open.html
      var mode = HEAP32[((varargs)>>2)];
      path = Pointer_stringify(path);
      try {
        var stream = FS.open(path, oflag, mode);
        return stream.fd;
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _fopen(filename, mode) {
      // FILE *fopen(const char *restrict filename, const char *restrict mode);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fopen.html
      var flags;
      mode = Pointer_stringify(mode);
      if (mode[0] == 'r') {
        if (mode.indexOf('+') != -1) {
          flags = 2;
        } else {
          flags = 0;
        }
      } else if (mode[0] == 'w') {
        if (mode.indexOf('+') != -1) {
          flags = 2;
        } else {
          flags = 1;
        }
        flags |= 64;
        flags |= 512;
      } else if (mode[0] == 'a') {
        if (mode.indexOf('+') != -1) {
          flags = 2;
        } else {
          flags = 1;
        }
        flags |= 64;
        flags |= 1024;
      } else {
        ___setErrNo(ERRNO_CODES.EINVAL);
        return 0;
      }
      var ret = _open(filename, flags, allocate([0x1FF, 0, 0, 0], 'i32', ALLOC_STACK));  // All creation permissions.
      return (ret == -1) ? 0 : ret;
    }
  function _lseek(fildes, offset, whence) {
      // off_t lseek(int fildes, off_t offset, int whence);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/lseek.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      try {
        return FS.llseek(stream, offset, whence);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _fseek(stream, offset, whence) {
      // int fseek(FILE *stream, long offset, int whence);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fseek.html
      var ret = _lseek(stream, offset, whence);
      if (ret == -1) {
        return -1;
      }
      stream = FS.getStream(stream);
      stream.eof = false;
      return 0;
    }
  function _ftell(stream) {
      // long ftell(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/ftell.html
      stream = FS.getStream(stream);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      if (FS.isChrdev(stream.node.mode)) {
        ___setErrNo(ERRNO_CODES.ESPIPE);
        return -1;
      } else {
        return stream.position;
      }
    }
  Module["_memset"] = _memset;var _llvm_memset_p0i8_i32=_memset;
  function _recv(fd, buf, len, flags) {
      var sock = SOCKFS.getSocket(fd);
      if (!sock) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      // TODO honor flags
      return _read(fd, buf, len);
    }
  function _pread(fildes, buf, nbyte, offset) {
      // ssize_t pread(int fildes, void *buf, size_t nbyte, off_t offset);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/read.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      try {
        var slab = HEAP8;
        return FS.read(stream, slab, buf, nbyte, offset);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _read(fildes, buf, nbyte) {
      // ssize_t read(int fildes, void *buf, size_t nbyte);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/read.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      try {
        var slab = HEAP8;
        return FS.read(stream, slab, buf, nbyte);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _fread(ptr, size, nitems, stream) {
      // size_t fread(void *restrict ptr, size_t size, size_t nitems, FILE *restrict stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fread.html
      var bytesToRead = nitems * size;
      if (bytesToRead == 0) {
        return 0;
      }
      var bytesRead = 0;
      var streamObj = FS.getStream(stream);
      if (!streamObj) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return 0;
      }
      while (streamObj.ungotten.length && bytesToRead > 0) {
        HEAP8[((ptr++)|0)]=streamObj.ungotten.pop()
        bytesToRead--;
        bytesRead++;
      }
      var err = _read(stream, ptr, bytesToRead);
      if (err == -1) {
        if (streamObj) streamObj.error = true;
        return 0;
      }
      bytesRead += err;
      if (bytesRead < bytesToRead) streamObj.eof = true;
      return Math.floor(bytesRead / size);
    }
  function _ferror(stream) {
      // int ferror(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/ferror.html
      stream = FS.getStream(stream);
      return Number(stream && stream.error);
    }
  function _close(fildes) {
      // int close(int fildes);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/close.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      try {
        FS.close(stream);
        return 0;
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }
  function _fsync(fildes) {
      // int fsync(int fildes);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fsync.html
      var stream = FS.getStream(fildes);
      if (stream) {
        // We write directly to the file system, so there's nothing to do here.
        return 0;
      } else {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
    }function _fclose(stream) {
      // int fclose(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fclose.html
      _fsync(stream);
      return _close(stream);
    }
  function _atexit(func, arg) {
      __ATEXIT__.unshift({ func: func, arg: arg });
    }var ___cxa_atexit=_atexit;
  Module["_memcpy"] = _memcpy;var _llvm_memcpy_p0i8_p0i8_i32=_memcpy;
  function _llvm_umul_with_overflow_i32(x, y) {
      x = x>>>0;
      y = y>>>0;
      return ((asm["setTempRet0"](x*y > 4294967295),(x*y)>>>0)|0);
    }
  function __getFloat(text) {
      return /^[+-]?[0-9]*\.?[0-9]+([eE][+-]?[0-9]+)?/.exec(text);
    }function __scanString(format, get, unget, varargs) {
      if (!__scanString.whiteSpace) {
        __scanString.whiteSpace = {};
        __scanString.whiteSpace[32] = 1;
        __scanString.whiteSpace[9] = 1;
        __scanString.whiteSpace[10] = 1;
        __scanString.whiteSpace[11] = 1;
        __scanString.whiteSpace[12] = 1;
        __scanString.whiteSpace[13] = 1;
      }
      // Supports %x, %4x, %d.%d, %lld, %s, %f, %lf.
      // TODO: Support all format specifiers.
      format = Pointer_stringify(format);
      var soFar = 0;
      if (format.indexOf('%n') >= 0) {
        // need to track soFar
        var _get = get;
        get = function get() {
          soFar++;
          return _get();
        }
        var _unget = unget;
        unget = function unget() {
          soFar--;
          return _unget();
        }
      }
      var formatIndex = 0;
      var argsi = 0;
      var fields = 0;
      var argIndex = 0;
      var next;
      mainLoop:
      for (var formatIndex = 0; formatIndex < format.length;) {
        if (format[formatIndex] === '%' && format[formatIndex+1] == 'n') {
          var argPtr = HEAP32[(((varargs)+(argIndex))>>2)];
          argIndex += Runtime.getAlignSize('void*', null, true);
          HEAP32[((argPtr)>>2)]=soFar;
          formatIndex += 2;
          continue;
        }
        if (format[formatIndex] === '%') {
          var nextC = format.indexOf('c', formatIndex+1);
          if (nextC > 0) {
            var maxx = 1;
            if (nextC > formatIndex+1) {
              var sub = format.substring(formatIndex+1, nextC);
              maxx = parseInt(sub);
              if (maxx != sub) maxx = 0;
            }
            if (maxx) {
              var argPtr = HEAP32[(((varargs)+(argIndex))>>2)];
              argIndex += Runtime.getAlignSize('void*', null, true);
              fields++;
              for (var i = 0; i < maxx; i++) {
                next = get();
                HEAP8[((argPtr++)|0)]=next;
              }
              formatIndex += nextC - formatIndex + 1;
              continue;
            }
          }
        }
        // handle %[...]
        if (format[formatIndex] === '%' && format.indexOf('[', formatIndex+1) > 0) {
          var match = /\%([0-9]*)\[(\^)?(\]?[^\]]*)\]/.exec(format.substring(formatIndex));
          if (match) {
            var maxNumCharacters = parseInt(match[1]) || Infinity;
            var negateScanList = (match[2] === '^');
            var scanList = match[3];
            // expand "middle" dashs into character sets
            var middleDashMatch;
            while ((middleDashMatch = /([^\-])\-([^\-])/.exec(scanList))) {
              var rangeStartCharCode = middleDashMatch[1].charCodeAt(0);
              var rangeEndCharCode = middleDashMatch[2].charCodeAt(0);
              for (var expanded = ''; rangeStartCharCode <= rangeEndCharCode; expanded += String.fromCharCode(rangeStartCharCode++));
              scanList = scanList.replace(middleDashMatch[1] + '-' + middleDashMatch[2], expanded);
            }
            var argPtr = HEAP32[(((varargs)+(argIndex))>>2)];
            argIndex += Runtime.getAlignSize('void*', null, true);
            fields++;
            for (var i = 0; i < maxNumCharacters; i++) {
              next = get();
              if (negateScanList) {
                if (scanList.indexOf(String.fromCharCode(next)) < 0) {
                  HEAP8[((argPtr++)|0)]=next;
                } else {
                  unget();
                  break;
                }
              } else {
                if (scanList.indexOf(String.fromCharCode(next)) >= 0) {
                  HEAP8[((argPtr++)|0)]=next;
                } else {
                  unget();
                  break;
                }
              }
            }
            // write out null-terminating character
            HEAP8[((argPtr++)|0)]=0;
            formatIndex += match[0].length;
            continue;
          }
        }      
        // remove whitespace
        while (1) {
          next = get();
          if (next == 0) return fields;
          if (!(next in __scanString.whiteSpace)) break;
        }
        unget();
        if (format[formatIndex] === '%') {
          formatIndex++;
          var suppressAssignment = false;
          if (format[formatIndex] == '*') {
            suppressAssignment = true;
            formatIndex++;
          }
          var maxSpecifierStart = formatIndex;
          while (format[formatIndex].charCodeAt(0) >= 48 &&
                 format[formatIndex].charCodeAt(0) <= 57) {
            formatIndex++;
          }
          var max_;
          if (formatIndex != maxSpecifierStart) {
            max_ = parseInt(format.slice(maxSpecifierStart, formatIndex), 10);
          }
          var long_ = false;
          var half = false;
          var longLong = false;
          if (format[formatIndex] == 'l') {
            long_ = true;
            formatIndex++;
            if (format[formatIndex] == 'l') {
              longLong = true;
              formatIndex++;
            }
          } else if (format[formatIndex] == 'h') {
            half = true;
            formatIndex++;
          }
          var type = format[formatIndex];
          formatIndex++;
          var curr = 0;
          var buffer = [];
          // Read characters according to the format. floats are trickier, they may be in an unfloat state in the middle, then be a valid float later
          if (type == 'f' || type == 'e' || type == 'g' ||
              type == 'F' || type == 'E' || type == 'G') {
            next = get();
            while (next > 0 && (!(next in __scanString.whiteSpace)))  {
              buffer.push(String.fromCharCode(next));
              next = get();
            }
            var m = __getFloat(buffer.join(''));
            var last = m ? m[0].length : 0;
            for (var i = 0; i < buffer.length - last + 1; i++) {
              unget();
            }
            buffer.length = last;
          } else {
            next = get();
            var first = true;
            // Strip the optional 0x prefix for %x.
            if ((type == 'x' || type == 'X') && (next == 48)) {
              var peek = get();
              if (peek == 120 || peek == 88) {
                next = get();
              } else {
                unget();
              }
            }
            while ((curr < max_ || isNaN(max_)) && next > 0) {
              if (!(next in __scanString.whiteSpace) && // stop on whitespace
                  (type == 's' ||
                   ((type === 'd' || type == 'u' || type == 'i') && ((next >= 48 && next <= 57) ||
                                                                     (first && next == 45))) ||
                   ((type === 'x' || type === 'X') && (next >= 48 && next <= 57 ||
                                     next >= 97 && next <= 102 ||
                                     next >= 65 && next <= 70))) &&
                  (formatIndex >= format.length || next !== format[formatIndex].charCodeAt(0))) { // Stop when we read something that is coming up
                buffer.push(String.fromCharCode(next));
                next = get();
                curr++;
                first = false;
              } else {
                break;
              }
            }
            unget();
          }
          if (buffer.length === 0) return 0;  // Failure.
          if (suppressAssignment) continue;
          var text = buffer.join('');
          var argPtr = HEAP32[(((varargs)+(argIndex))>>2)];
          argIndex += Runtime.getAlignSize('void*', null, true);
          switch (type) {
            case 'd': case 'u': case 'i':
              if (half) {
                HEAP16[((argPtr)>>1)]=parseInt(text, 10);
              } else if (longLong) {
                (tempI64 = [parseInt(text, 10)>>>0,(tempDouble=parseInt(text, 10),(+(Math_abs(tempDouble))) >= (+1) ? (tempDouble > (+0) ? ((Math_min((+(Math_floor((tempDouble)/(+4294967296)))), (+4294967295)))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/(+4294967296))))))>>>0) : 0)],HEAP32[((argPtr)>>2)]=tempI64[0],HEAP32[(((argPtr)+(4))>>2)]=tempI64[1]);
              } else {
                HEAP32[((argPtr)>>2)]=parseInt(text, 10);
              }
              break;
            case 'X':
            case 'x':
              HEAP32[((argPtr)>>2)]=parseInt(text, 16)
              break;
            case 'F':
            case 'f':
            case 'E':
            case 'e':
            case 'G':
            case 'g':
            case 'E':
              // fallthrough intended
              if (long_) {
                HEAPF64[((argPtr)>>3)]=parseFloat(text)
              } else {
                HEAPF32[((argPtr)>>2)]=parseFloat(text)
              }
              break;
            case 's':
              var array = intArrayFromString(text);
              for (var j = 0; j < array.length; j++) {
                HEAP8[(((argPtr)+(j))|0)]=array[j]
              }
              break;
          }
          fields++;
        } else if (format[formatIndex].charCodeAt(0) in __scanString.whiteSpace) {
          next = get();
          while (next in __scanString.whiteSpace) {
            if (next <= 0) break mainLoop;  // End of input.
            next = get();
          }
          unget(next);
          formatIndex++;
        } else {
          // Not a specifier.
          next = get();
          if (format[formatIndex].charCodeAt(0) !== next) {
            unget(next);
            break mainLoop;
          }
          formatIndex++;
        }
      }
      return fields;
    }function _sscanf(s, format, varargs) {
      // int sscanf(const char *restrict s, const char *restrict format, ... );
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/scanf.html
      var index = 0;
      function get() { return HEAP8[(((s)+(index++))|0)]; };
      function unget() { index--; };
      return __scanString(format, get, unget, varargs);
    }
  function _llvm_stacksave() {
      var self = _llvm_stacksave;
      if (!self.LLVM_SAVEDSTACKS) {
        self.LLVM_SAVEDSTACKS = [];
      }
      self.LLVM_SAVEDSTACKS.push(Runtime.stackSave());
      return self.LLVM_SAVEDSTACKS.length-1;
    }
  function _llvm_stackrestore(p) {
      var self = _llvm_stacksave;
      var ret = self.LLVM_SAVEDSTACKS[p];
      self.LLVM_SAVEDSTACKS.splice(p, 1);
      Runtime.stackRestore(ret);
    }
  function ___cxa_allocate_exception(size) {
      return _malloc(size);
    }
  function ___cxa_free_exception(ptr) {
      try {
        return _free(ptr);
      } catch(e) { // XXX FIXME
      }
    }
  function _llvm_eh_exception() {
      return HEAP32[((_llvm_eh_exception.buf)>>2)];
    }
  function __ZSt18uncaught_exceptionv() { // std::uncaught_exception()
      return !!__ZSt18uncaught_exceptionv.uncaught_exception;
    }
  function ___cxa_is_number_type(type) {
      var isNumber = false;
      try { if (type == __ZTIi) isNumber = true } catch(e){}
      try { if (type == __ZTIj) isNumber = true } catch(e){}
      try { if (type == __ZTIl) isNumber = true } catch(e){}
      try { if (type == __ZTIm) isNumber = true } catch(e){}
      try { if (type == __ZTIx) isNumber = true } catch(e){}
      try { if (type == __ZTIy) isNumber = true } catch(e){}
      try { if (type == __ZTIf) isNumber = true } catch(e){}
      try { if (type == __ZTId) isNumber = true } catch(e){}
      try { if (type == __ZTIe) isNumber = true } catch(e){}
      try { if (type == __ZTIc) isNumber = true } catch(e){}
      try { if (type == __ZTIa) isNumber = true } catch(e){}
      try { if (type == __ZTIh) isNumber = true } catch(e){}
      try { if (type == __ZTIs) isNumber = true } catch(e){}
      try { if (type == __ZTIt) isNumber = true } catch(e){}
      return isNumber;
    }function ___cxa_does_inherit(definiteType, possibilityType, possibility) {
      if (possibility == 0) return false;
      if (possibilityType == 0 || possibilityType == definiteType)
        return true;
      var possibility_type_info;
      if (___cxa_is_number_type(possibilityType)) {
        possibility_type_info = possibilityType;
      } else {
        var possibility_type_infoAddr = HEAP32[((possibilityType)>>2)] - 8;
        possibility_type_info = HEAP32[((possibility_type_infoAddr)>>2)];
      }
      switch (possibility_type_info) {
      case 0: // possibility is a pointer
        // See if definite type is a pointer
        var definite_type_infoAddr = HEAP32[((definiteType)>>2)] - 8;
        var definite_type_info = HEAP32[((definite_type_infoAddr)>>2)];
        if (definite_type_info == 0) {
          // Also a pointer; compare base types of pointers
          var defPointerBaseAddr = definiteType+8;
          var defPointerBaseType = HEAP32[((defPointerBaseAddr)>>2)];
          var possPointerBaseAddr = possibilityType+8;
          var possPointerBaseType = HEAP32[((possPointerBaseAddr)>>2)];
          return ___cxa_does_inherit(defPointerBaseType, possPointerBaseType, possibility);
        } else
          return false; // one pointer and one non-pointer
      case 1: // class with no base class
        return false;
      case 2: // class with base class
        var parentTypeAddr = possibilityType + 8;
        var parentType = HEAP32[((parentTypeAddr)>>2)];
        return ___cxa_does_inherit(definiteType, parentType, possibility);
      default:
        return false; // some unencountered type
      }
    }
  function ___resumeException(ptr) {
      if (HEAP32[((_llvm_eh_exception.buf)>>2)] == 0) HEAP32[((_llvm_eh_exception.buf)>>2)]=ptr;
      throw ptr + " - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch.";;
    }function ___cxa_find_matching_catch(thrown, throwntype) {
      if (thrown == -1) thrown = HEAP32[((_llvm_eh_exception.buf)>>2)];
      if (throwntype == -1) throwntype = HEAP32[(((_llvm_eh_exception.buf)+(4))>>2)];
      var typeArray = Array.prototype.slice.call(arguments, 2);
      // If throwntype is a pointer, this means a pointer has been
      // thrown. When a pointer is thrown, actually what's thrown
      // is a pointer to the pointer. We'll dereference it.
      if (throwntype != 0 && !___cxa_is_number_type(throwntype)) {
        var throwntypeInfoAddr= HEAP32[((throwntype)>>2)] - 8;
        var throwntypeInfo= HEAP32[((throwntypeInfoAddr)>>2)];
        if (throwntypeInfo == 0)
          thrown = HEAP32[((thrown)>>2)];
      }
      // The different catch blocks are denoted by different types.
      // Due to inheritance, those types may not precisely match the
      // type of the thrown object. Find one which matches, and
      // return the type of the catch block which should be called.
      for (var i = 0; i < typeArray.length; i++) {
        if (___cxa_does_inherit(typeArray[i], throwntype, thrown))
          return ((asm["setTempRet0"](typeArray[i]),thrown)|0);
      }
      // Shouldn't happen unless we have bogus data in typeArray
      // or encounter a type for which emscripten doesn't have suitable
      // typeinfo defined. Best-efforts match just in case.
      return ((asm["setTempRet0"](throwntype),thrown)|0);
    }function ___cxa_throw(ptr, type, destructor) {
      if (!___cxa_throw.initialized) {
        try {
          HEAP32[((__ZTVN10__cxxabiv119__pointer_type_infoE)>>2)]=0; // Workaround for libcxxabi integration bug
        } catch(e){}
        try {
          HEAP32[((__ZTVN10__cxxabiv117__class_type_infoE)>>2)]=1; // Workaround for libcxxabi integration bug
        } catch(e){}
        try {
          HEAP32[((__ZTVN10__cxxabiv120__si_class_type_infoE)>>2)]=2; // Workaround for libcxxabi integration bug
        } catch(e){}
        ___cxa_throw.initialized = true;
      }
      HEAP32[((_llvm_eh_exception.buf)>>2)]=ptr
      HEAP32[(((_llvm_eh_exception.buf)+(4))>>2)]=type
      HEAP32[(((_llvm_eh_exception.buf)+(8))>>2)]=destructor
      if (!("uncaught_exception" in __ZSt18uncaught_exceptionv)) {
        __ZSt18uncaught_exceptionv.uncaught_exception = 1;
      } else {
        __ZSt18uncaught_exceptionv.uncaught_exception++;
      }
      throw ptr + " - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch.";;
    }
  function ___cxa_begin_catch(ptr) {
      __ZSt18uncaught_exceptionv.uncaught_exception--;
      return ptr;
    }
  function ___cxa_end_catch() {
      if (___cxa_end_catch.rethrown) {
        ___cxa_end_catch.rethrown = false;
        return;
      }
      // Clear state flag.
      asm['setThrew'](0);
      // Clear type.
      HEAP32[(((_llvm_eh_exception.buf)+(4))>>2)]=0
      // Call destructor if one is registered then clear it.
      var ptr = HEAP32[((_llvm_eh_exception.buf)>>2)];
      var destructor = HEAP32[(((_llvm_eh_exception.buf)+(8))>>2)];
      if (destructor) {
        Runtime.dynCall('vi', destructor, [ptr]);
        HEAP32[(((_llvm_eh_exception.buf)+(8))>>2)]=0
      }
      // Free ptr if it isn't null.
      if (ptr) {
        ___cxa_free_exception(ptr);
        HEAP32[((_llvm_eh_exception.buf)>>2)]=0
      }
    }
  Module["_memmove"] = _memmove;var _llvm_memmove_p0i8_p0i8_i32=_memmove;
  var _llvm_memset_p0i8_i64=_memset;
  function _fmax(x, y) {
      return isNaN(x) ? y : isNaN(y) ? x : Math.max(x, y);
    }var _fmaxf=_fmax;
  var _fabsf=Math_abs;
  function _rand() {
      return Math.floor(Math.random()*0x80000000);
    }
  function _fmin(x, y) {
      return isNaN(x) ? y : isNaN(y) ? x : Math.min(x, y);
    }var _fminf=_fmin;
  var _sqrtf=Math_sqrt;
  var _sinf=Math_sin;
  var _acosf=Math_acos;
  var _cosf=Math_cos;
  function _llvm_lifetime_start() {}
  function _llvm_lifetime_end() {}
  function _fmod(x, y) {
      return x % y;
    }var _fmodf=_fmod;
  function ___cxa_guard_acquire(variable) {
      if (!HEAP8[(variable)]) { // ignore SAFE_HEAP stuff because llvm mixes i64 and i8 here
        HEAP8[(variable)]=1;
        return 1;
      }
      return 0;
    }
  function ___cxa_guard_release() {}
  function _strstr(ptr1, ptr2) {
      var check = 0, start;
      do {
        if (!check) {
          start = ptr1;
          check = ptr2;
        }
        var curr1 = HEAP8[((ptr1++)|0)];
        var curr2 = HEAP8[((check++)|0)];
        if (curr2 == 0) return start;
        if (curr2 != curr1) {
          // rewind to one character after start, to find ez in eeez
          ptr1 = start + 1;
          check = 0;
        }
      } while (curr1);
      return 0;
    }
  function _eglGetProcAddress(name_) {
      return _emscripten_GetProcAddress(Pointer_stringify(name_));
    }
  function _strchr(ptr, chr) {
      ptr--;
      do {
        ptr++;
        var val = HEAP8[(ptr)];
        if (val == chr) return ptr;
      } while (val);
      return 0;
    }
  function _llvm_bswap_i32(x) {
      return ((x&0xff)<<24) | (((x>>8)&0xff)<<16) | (((x>>16)&0xff)<<8) | (x>>>24);
    }
  function _strncmp(px, py, n) {
      var i = 0;
      while (i < n) {
        var x = HEAPU8[(((px)+(i))|0)];
        var y = HEAPU8[(((py)+(i))|0)];
        if (x == y && x == 0) return 0;
        if (x == 0) return -1;
        if (y == 0) return 1;
        if (x == y) {
          i ++;
          continue;
        } else {
          return x > y ? 1 : -1;
        }
      }
      return 0;
    }function _strcmp(px, py) {
      return _strncmp(px, py, TOTAL_MEMORY);
    }
  function _isspace(chr) {
      return (chr == 32) || (chr >= 9 && chr <= 13);
    }
  var _cos=Math_cos;
  var _sin=Math_sin;
  var _llvm_va_start=undefined;
  function _snprintf(s, n, format, varargs) {
      // int snprintf(char *restrict s, size_t n, const char *restrict format, ...);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/printf.html
      var result = __formatString(format, varargs);
      var limit = (n === undefined) ? result.length
                                    : Math.min(result.length, Math.max(n - 1, 0));
      if (s < 0) {
        s = -s;
        var buf = _malloc(limit+1);
        HEAP32[((s)>>2)]=buf;
        s = buf;
      }
      for (var i = 0; i < limit; i++) {
        HEAP8[(((s)+(i))|0)]=result[i];
      }
      if (limit < n || (n === undefined)) HEAP8[(((s)+(i))|0)]=0;
      return result.length;
    }function _vsnprintf(s, n, format, va_arg) {
      return _snprintf(s, n, format, HEAP32[((va_arg)>>2)]);
    }
  function _llvm_va_end() {}
  Module["_memcmp"] = _memcmp;
  var _acos=Math_acos;
  function ___cxa_pure_virtual() {
      ABORT = true;
      throw 'Pure virtual function called!';
    }
  function _llvm_trap() {
      abort('trap!');
    }
  function _llvm_bswap_i16(x) {
      return ((x&0xff)<<8) | ((x>>8)&0xff);
    }
  var _atan2f=Math_atan2;
  var _asinf=Math_asin;
  function ___cxa_guard_abort() {}
  var _llvm_pow_f32=Math_pow;
  Module["_llvm_uadd_with_overflow_i64"] = _llvm_uadd_with_overflow_i64;
  function _gettimeofday(ptr) {
      var now = Date.now();
      HEAP32[((ptr)>>2)]=Math.floor(now/1000); // seconds
      HEAP32[(((ptr)+(4))>>2)]=Math.floor((now-1000*Math.floor(now/1000))*1000); // microseconds
      return 0;
    }
  function _putchar(c) {
      // int putchar(int c);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/putchar.html
      return _fputc(c, HEAP32[((_stdout)>>2)]);
    } 
  Module["_saveSetjmp"] = _saveSetjmp;
  Module["_testSetjmp"] = _testSetjmp;var _setjmp=undefined;
  function _longjmp(env, value) {
      asm['setThrew'](env, value || 1);
      throw 'longjmp';
    }
  function _abort() {
      Module['abort']();
    }
  function _strerror_r(errnum, strerrbuf, buflen) {
      if (errnum in ERRNO_MESSAGES) {
        if (ERRNO_MESSAGES[errnum].length > buflen - 1) {
          return ___setErrNo(ERRNO_CODES.ERANGE);
        } else {
          var msg = ERRNO_MESSAGES[errnum];
          writeAsciiToMemory(msg, strerrbuf);
          return 0;
        }
      } else {
        return ___setErrNo(ERRNO_CODES.EINVAL);
      }
    }function _strerror(errnum) {
      if (!_strerror.buffer) _strerror.buffer = _malloc(256);
      _strerror_r(errnum, _strerror.buffer, 256);
      return _strerror.buffer;
    }
  function ___errno_location() {
      return ___errno_state;
    }
  var _floor=Math_floor;
  var _llvm_pow_f64=Math_pow;
  function _pthread_mutex_lock() {}
  function _pthread_mutex_unlock() {}
  function _pthread_cond_broadcast() {
      return 0;
    }
  function _pthread_cond_wait() {
      return 0;
    }
  function _ungetc(c, stream) {
      // int ungetc(int c, FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/ungetc.html
      stream = FS.getStream(stream);
      if (!stream) {
        return -1;
      }
      if (c === -1) {
        // do nothing for EOF character
        return c;
      }
      c = unSign(c & 0xFF);
      stream.ungotten.push(c);
      stream.eof = false;
      return c;
    }
  function _fgetc(stream) {
      // int fgetc(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fgetc.html
      var streamObj = FS.getStream(stream);
      if (!streamObj) return -1;
      if (streamObj.eof || streamObj.error) return -1;
      var ret = _fread(_fgetc.ret, 1, 1, stream);
      if (ret == 0) {
        return -1;
      } else if (ret == -1) {
        streamObj.error = true;
        return -1;
      } else {
        return HEAPU8[((_fgetc.ret)|0)];
      }
    }var _getc=_fgetc;
  function ___cxa_rethrow() {
      ___cxa_end_catch.rethrown = true;
      throw HEAP32[((_llvm_eh_exception.buf)>>2)] + " - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch.";;
    }
  function _sysconf(name) {
      // long sysconf(int name);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/sysconf.html
      switch(name) {
        case 30: return PAGE_SIZE;
        case 132:
        case 133:
        case 12:
        case 137:
        case 138:
        case 15:
        case 235:
        case 16:
        case 17:
        case 18:
        case 19:
        case 20:
        case 149:
        case 13:
        case 10:
        case 236:
        case 153:
        case 9:
        case 21:
        case 22:
        case 159:
        case 154:
        case 14:
        case 77:
        case 78:
        case 139:
        case 80:
        case 81:
        case 79:
        case 82:
        case 68:
        case 67:
        case 164:
        case 11:
        case 29:
        case 47:
        case 48:
        case 95:
        case 52:
        case 51:
        case 46:
          return 200809;
        case 27:
        case 246:
        case 127:
        case 128:
        case 23:
        case 24:
        case 160:
        case 161:
        case 181:
        case 182:
        case 242:
        case 183:
        case 184:
        case 243:
        case 244:
        case 245:
        case 165:
        case 178:
        case 179:
        case 49:
        case 50:
        case 168:
        case 169:
        case 175:
        case 170:
        case 171:
        case 172:
        case 97:
        case 76:
        case 32:
        case 173:
        case 35:
          return -1;
        case 176:
        case 177:
        case 7:
        case 155:
        case 8:
        case 157:
        case 125:
        case 126:
        case 92:
        case 93:
        case 129:
        case 130:
        case 131:
        case 94:
        case 91:
          return 1;
        case 74:
        case 60:
        case 69:
        case 70:
        case 4:
          return 1024;
        case 31:
        case 42:
        case 72:
          return 32;
        case 87:
        case 26:
        case 33:
          return 2147483647;
        case 34:
        case 1:
          return 47839;
        case 38:
        case 36:
          return 99;
        case 43:
        case 37:
          return 2048;
        case 0: return 2097152;
        case 3: return 65536;
        case 28: return 32768;
        case 44: return 32767;
        case 75: return 16384;
        case 39: return 1000;
        case 89: return 700;
        case 71: return 256;
        case 40: return 255;
        case 2: return 100;
        case 180: return 64;
        case 25: return 20;
        case 5: return 16;
        case 6: return 6;
        case 73: return 4;
        case 84: return 1;
      }
      ___setErrNo(ERRNO_CODES.EINVAL);
      return -1;
    }
  function _isxdigit(chr) {
      return (chr >= 48 && chr <= 57) ||
             (chr >= 97 && chr <= 102) ||
             (chr >= 65 && chr <= 70);
    }var _isxdigit_l=_isxdigit;
  function _isdigit(chr) {
      return chr >= 48 && chr <= 57;
    }var _isdigit_l=_isdigit;
  function _catopen() { throw 'TODO: ' + aborter }
  function _catgets() { throw 'TODO: ' + aborter }
  function _catclose() { throw 'TODO: ' + aborter }
  function _newlocale(mask, locale, base) {
      return _malloc(4);
    }
  function _freelocale(locale) {
      _free(locale);
    }
  function _isascii(chr) {
      return chr >= 0 && (chr & 0x80) == 0;
    }
  function ___ctype_b_loc() {
      // http://refspecs.freestandards.org/LSB_3.0.0/LSB-Core-generic/LSB-Core-generic/baselib---ctype-b-loc.html
      var me = ___ctype_b_loc;
      if (!me.ret) {
        var values = [
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,8195,8194,8194,8194,8194,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,24577,49156,49156,49156,
          49156,49156,49156,49156,49156,49156,49156,49156,49156,49156,49156,49156,55304,55304,55304,55304,55304,55304,55304,55304,
          55304,55304,49156,49156,49156,49156,49156,49156,49156,54536,54536,54536,54536,54536,54536,50440,50440,50440,50440,50440,
          50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,49156,49156,49156,49156,49156,
          49156,54792,54792,54792,54792,54792,54792,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,
          50696,50696,50696,50696,50696,50696,50696,49156,49156,49156,49156,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
        ];
        var i16size = 2;
        var arr = _malloc(values.length * i16size);
        for (var i = 0; i < values.length; i++) {
          HEAP16[(((arr)+(i * i16size))>>1)]=values[i]
        }
        me.ret = allocate([arr + 128 * i16size], 'i16*', ALLOC_NORMAL);
      }
      return me.ret;
    }
  function ___ctype_tolower_loc() {
      // http://refspecs.freestandards.org/LSB_3.1.1/LSB-Core-generic/LSB-Core-generic/libutil---ctype-tolower-loc.html
      var me = ___ctype_tolower_loc;
      if (!me.ret) {
        var values = [
          128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,
          158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,
          188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,
          218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,
          248,249,250,251,252,253,254,-1,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,
          33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,97,98,99,100,101,102,103,
          104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,91,92,93,94,95,96,97,98,99,100,101,102,103,
          104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,
          134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,
          164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,
          194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,
          224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,
          254,255
        ];
        var i32size = 4;
        var arr = _malloc(values.length * i32size);
        for (var i = 0; i < values.length; i++) {
          HEAP32[(((arr)+(i * i32size))>>2)]=values[i]
        }
        me.ret = allocate([arr + 128 * i32size], 'i32*', ALLOC_NORMAL);
      }
      return me.ret;
    }
  function ___ctype_toupper_loc() {
      // http://refspecs.freestandards.org/LSB_3.1.1/LSB-Core-generic/LSB-Core-generic/libutil---ctype-toupper-loc.html
      var me = ___ctype_toupper_loc;
      if (!me.ret) {
        var values = [
          128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,
          158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,
          188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,
          218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,
          248,249,250,251,252,253,254,-1,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,
          33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,
          73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,
          81,82,83,84,85,86,87,88,89,90,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,
          145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,
          175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,
          205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,
          235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255
        ];
        var i32size = 4;
        var arr = _malloc(values.length * i32size);
        for (var i = 0; i < values.length; i++) {
          HEAP32[(((arr)+(i * i32size))>>2)]=values[i]
        }
        me.ret = allocate([arr + 128 * i32size], 'i32*', ALLOC_NORMAL);
      }
      return me.ret;
    }
  function __isLeapYear(year) {
        return year%4 === 0 && (year%100 !== 0 || year%400 === 0);
    }
  function __arraySum(array, index) {
      var sum = 0;
      for (var i = 0; i <= index; sum += array[i++]);
      return sum;
    }
  var __MONTH_DAYS_LEAP=[31,29,31,30,31,30,31,31,30,31,30,31];
  var __MONTH_DAYS_REGULAR=[31,28,31,30,31,30,31,31,30,31,30,31];function __addDays(date, days) {
      var newDate = new Date(date.getTime());
      while(days > 0) {
        var leap = __isLeapYear(newDate.getFullYear());
        var currentMonth = newDate.getMonth();
        var daysInCurrentMonth = (leap ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR)[currentMonth];
        if (days > daysInCurrentMonth-newDate.getDate()) {
          // we spill over to next month
          days -= (daysInCurrentMonth-newDate.getDate()+1);
          newDate.setDate(1);
          if (currentMonth < 11) {
            newDate.setMonth(currentMonth+1)
          } else {
            newDate.setMonth(0);
            newDate.setFullYear(newDate.getFullYear()+1);
          }
        } else {
          // we stay in current month 
          newDate.setDate(newDate.getDate()+days);
          return newDate;
        }
      }
      return newDate;
    }function _strftime(s, maxsize, format, tm) {
      // size_t strftime(char *restrict s, size_t maxsize, const char *restrict format, const struct tm *restrict timeptr);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/strftime.html
      var date = {
        tm_sec: HEAP32[((tm)>>2)],
        tm_min: HEAP32[(((tm)+(4))>>2)],
        tm_hour: HEAP32[(((tm)+(8))>>2)],
        tm_mday: HEAP32[(((tm)+(12))>>2)],
        tm_mon: HEAP32[(((tm)+(16))>>2)],
        tm_year: HEAP32[(((tm)+(20))>>2)],
        tm_wday: HEAP32[(((tm)+(24))>>2)],
        tm_yday: HEAP32[(((tm)+(28))>>2)],
        tm_isdst: HEAP32[(((tm)+(32))>>2)]
      };
      var pattern = Pointer_stringify(format);
      // expand format
      var EXPANSION_RULES_1 = {
        '%c': '%a %b %d %H:%M:%S %Y',     // Replaced by the locale's appropriate date and time representation - e.g., Mon Aug  3 14:02:01 2013
        '%D': '%m/%d/%y',                 // Equivalent to %m / %d / %y
        '%F': '%Y-%m-%d',                 // Equivalent to %Y - %m - %d
        '%h': '%b',                       // Equivalent to %b
        '%r': '%I:%M:%S %p',              // Replaced by the time in a.m. and p.m. notation
        '%R': '%H:%M',                    // Replaced by the time in 24-hour notation
        '%T': '%H:%M:%S',                 // Replaced by the time
        '%x': '%m/%d/%y',                 // Replaced by the locale's appropriate date representation
        '%X': '%H:%M:%S',                 // Replaced by the locale's appropriate date representation
      };
      for (var rule in EXPANSION_RULES_1) {
        pattern = pattern.replace(new RegExp(rule, 'g'), EXPANSION_RULES_1[rule]);
      }
      var WEEKDAYS = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];
      var MONTHS = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];
      function leadingSomething(value, digits, character) {
        var str = typeof value === 'number' ? value.toString() : (value || '');
        while (str.length < digits) {
          str = character[0]+str;
        }
        return str;
      };
      function leadingNulls(value, digits) {
        return leadingSomething(value, digits, '0');
      };
      function compareByDay(date1, date2) {
        function sgn(value) {
          return value < 0 ? -1 : (value > 0 ? 1 : 0);
        };
        var compare;
        if ((compare = sgn(date1.getFullYear()-date2.getFullYear())) === 0) {
          if ((compare = sgn(date1.getMonth()-date2.getMonth())) === 0) {
            compare = sgn(date1.getDate()-date2.getDate());
          }
        }
        return compare;
      };
      function getFirstWeekStartDate(janFourth) {
          switch (janFourth.getDay()) {
            case 0: // Sunday
              return new Date(janFourth.getFullYear()-1, 11, 29);
            case 1: // Monday
              return janFourth;
            case 2: // Tuesday
              return new Date(janFourth.getFullYear(), 0, 3);
            case 3: // Wednesday
              return new Date(janFourth.getFullYear(), 0, 2);
            case 4: // Thursday
              return new Date(janFourth.getFullYear(), 0, 1);
            case 5: // Friday
              return new Date(janFourth.getFullYear()-1, 11, 31);
            case 6: // Saturday
              return new Date(janFourth.getFullYear()-1, 11, 30);
          }
      };
      function getWeekBasedYear(date) {
          var thisDate = __addDays(new Date(date.tm_year+1900, 0, 1), date.tm_yday);
          var janFourthThisYear = new Date(thisDate.getFullYear(), 0, 4);
          var janFourthNextYear = new Date(thisDate.getFullYear()+1, 0, 4);
          var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);
          var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);
          if (compareByDay(firstWeekStartThisYear, thisDate) <= 0) {
            // this date is after the start of the first week of this year
            if (compareByDay(firstWeekStartNextYear, thisDate) <= 0) {
              return thisDate.getFullYear()+1;
            } else {
              return thisDate.getFullYear();
            }
          } else { 
            return thisDate.getFullYear()-1;
          }
      };
      var EXPANSION_RULES_2 = {
        '%a': function(date) {
          return WEEKDAYS[date.tm_wday].substring(0,3);
        },
        '%A': function(date) {
          return WEEKDAYS[date.tm_wday];
        },
        '%b': function(date) {
          return MONTHS[date.tm_mon].substring(0,3);
        },
        '%B': function(date) {
          return MONTHS[date.tm_mon];
        },
        '%C': function(date) {
          var year = date.tm_year+1900;
          return leadingNulls(Math.floor(year/100),2);
        },
        '%d': function(date) {
          return leadingNulls(date.tm_mday, 2);
        },
        '%e': function(date) {
          return leadingSomething(date.tm_mday, 2, ' ');
        },
        '%g': function(date) {
          // %g, %G, and %V give values according to the ISO 8601:2000 standard week-based year. 
          // In this system, weeks begin on a Monday and week 1 of the year is the week that includes 
          // January 4th, which is also the week that includes the first Thursday of the year, and 
          // is also the first week that contains at least four days in the year. 
          // If the first Monday of January is the 2nd, 3rd, or 4th, the preceding days are part of 
          // the last week of the preceding year; thus, for Saturday 2nd January 1999, 
          // %G is replaced by 1998 and %V is replaced by 53. If December 29th, 30th, 
          // or 31st is a Monday, it and any following days are part of week 1 of the following year. 
          // Thus, for Tuesday 30th December 1997, %G is replaced by 1998 and %V is replaced by 01.
          return getWeekBasedYear(date).toString().substring(2);
        },
        '%G': function(date) {
          return getWeekBasedYear(date);
        },
        '%H': function(date) {
          return leadingNulls(date.tm_hour, 2);
        },
        '%I': function(date) {
          return leadingNulls(date.tm_hour < 13 ? date.tm_hour : date.tm_hour-12, 2);
        },
        '%j': function(date) {
          // Day of the year (001-366)
          return leadingNulls(date.tm_mday+__arraySum(__isLeapYear(date.tm_year+1900) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, date.tm_mon-1), 3);
        },
        '%m': function(date) {
          return leadingNulls(date.tm_mon+1, 2);
        },
        '%M': function(date) {
          return leadingNulls(date.tm_min, 2);
        },
        '%n': function() {
          return '\n';
        },
        '%p': function(date) {
          if (date.tm_hour > 0 && date.tm_hour < 13) {
            return 'AM';
          } else {
            return 'PM';
          }
        },
        '%S': function(date) {
          return leadingNulls(date.tm_sec, 2);
        },
        '%t': function() {
          return '\t';
        },
        '%u': function(date) {
          var day = new Date(date.tm_year+1900, date.tm_mon+1, date.tm_mday, 0, 0, 0, 0);
          return day.getDay() || 7;
        },
        '%U': function(date) {
          // Replaced by the week number of the year as a decimal number [00,53]. 
          // The first Sunday of January is the first day of week 1; 
          // days in the new year before this are in week 0. [ tm_year, tm_wday, tm_yday]
          var janFirst = new Date(date.tm_year+1900, 0, 1);
          var firstSunday = janFirst.getDay() === 0 ? janFirst : __addDays(janFirst, 7-janFirst.getDay());
          var endDate = new Date(date.tm_year+1900, date.tm_mon, date.tm_mday);
          // is target date after the first Sunday?
          if (compareByDay(firstSunday, endDate) < 0) {
            // calculate difference in days between first Sunday and endDate
            var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth()-1)-31;
            var firstSundayUntilEndJanuary = 31-firstSunday.getDate();
            var days = firstSundayUntilEndJanuary+februaryFirstUntilEndMonth+endDate.getDate();
            return leadingNulls(Math.ceil(days/7), 2);
          }
          return compareByDay(firstSunday, janFirst) === 0 ? '01': '00';
        },
        '%V': function(date) {
          // Replaced by the week number of the year (Monday as the first day of the week) 
          // as a decimal number [01,53]. If the week containing 1 January has four 
          // or more days in the new year, then it is considered week 1. 
          // Otherwise, it is the last week of the previous year, and the next week is week 1. 
          // Both January 4th and the first Thursday of January are always in week 1. [ tm_year, tm_wday, tm_yday]
          var janFourthThisYear = new Date(date.tm_year+1900, 0, 4);
          var janFourthNextYear = new Date(date.tm_year+1901, 0, 4);
          var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);
          var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);
          var endDate = __addDays(new Date(date.tm_year+1900, 0, 1), date.tm_yday);
          if (compareByDay(endDate, firstWeekStartThisYear) < 0) {
            // if given date is before this years first week, then it belongs to the 53rd week of last year
            return '53';
          } 
          if (compareByDay(firstWeekStartNextYear, endDate) <= 0) {
            // if given date is after next years first week, then it belongs to the 01th week of next year
            return '01';
          }
          // given date is in between CW 01..53 of this calendar year
          var daysDifference;
          if (firstWeekStartThisYear.getFullYear() < date.tm_year+1900) {
            // first CW of this year starts last year
            daysDifference = date.tm_yday+32-firstWeekStartThisYear.getDate()
          } else {
            // first CW of this year starts this year
            daysDifference = date.tm_yday+1-firstWeekStartThisYear.getDate();
          }
          return leadingNulls(Math.ceil(daysDifference/7), 2);
        },
        '%w': function(date) {
          var day = new Date(date.tm_year+1900, date.tm_mon+1, date.tm_mday, 0, 0, 0, 0);
          return day.getDay();
        },
        '%W': function(date) {
          // Replaced by the week number of the year as a decimal number [00,53]. 
          // The first Monday of January is the first day of week 1; 
          // days in the new year before this are in week 0. [ tm_year, tm_wday, tm_yday]
          var janFirst = new Date(date.tm_year, 0, 1);
          var firstMonday = janFirst.getDay() === 1 ? janFirst : __addDays(janFirst, janFirst.getDay() === 0 ? 1 : 7-janFirst.getDay()+1);
          var endDate = new Date(date.tm_year+1900, date.tm_mon, date.tm_mday);
          // is target date after the first Monday?
          if (compareByDay(firstMonday, endDate) < 0) {
            var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth()-1)-31;
            var firstMondayUntilEndJanuary = 31-firstMonday.getDate();
            var days = firstMondayUntilEndJanuary+februaryFirstUntilEndMonth+endDate.getDate();
            return leadingNulls(Math.ceil(days/7), 2);
          }
          return compareByDay(firstMonday, janFirst) === 0 ? '01': '00';
        },
        '%y': function(date) {
          // Replaced by the last two digits of the year as a decimal number [00,99]. [ tm_year]
          return (date.tm_year+1900).toString().substring(2);
        },
        '%Y': function(date) {
          // Replaced by the year as a decimal number (for example, 1997). [ tm_year]
          return date.tm_year+1900;
        },
        '%z': function(date) {
          // Replaced by the offset from UTC in the ISO 8601:2000 standard format ( +hhmm or -hhmm ),
          // or by no characters if no timezone is determinable. 
          // For example, "-0430" means 4 hours 30 minutes behind UTC (west of Greenwich). 
          // If tm_isdst is zero, the standard time offset is used. 
          // If tm_isdst is greater than zero, the daylight savings time offset is used. 
          // If tm_isdst is negative, no characters are returned. 
          // FIXME: we cannot determine time zone (or can we?)
          return '';
        },
        '%Z': function(date) {
          // Replaced by the timezone name or abbreviation, or by no bytes if no timezone information exists. [ tm_isdst]
          // FIXME: we cannot determine time zone (or can we?)
          return '';
        },
        '%%': function() {
          return '%';
        }
      };
      for (var rule in EXPANSION_RULES_2) {
        if (pattern.indexOf(rule) >= 0) {
          pattern = pattern.replace(new RegExp(rule, 'g'), EXPANSION_RULES_2[rule](date));
        }
      }
      var bytes = intArrayFromString(pattern, false);
      if (bytes.length > maxsize) {
        return 0;
      } 
      writeArrayToMemory(bytes, s);
      return bytes.length-1;
    }var _strftime_l=_strftime;
  function __parseInt64(str, endptr, base, min, max, unsign) {
      var isNegative = false;
      // Skip space.
      while (_isspace(HEAP8[(str)])) str++;
      // Check for a plus/minus sign.
      if (HEAP8[(str)] == 45) {
        str++;
        isNegative = true;
      } else if (HEAP8[(str)] == 43) {
        str++;
      }
      // Find base.
      var ok = false;
      var finalBase = base;
      if (!finalBase) {
        if (HEAP8[(str)] == 48) {
          if (HEAP8[((str+1)|0)] == 120 ||
              HEAP8[((str+1)|0)] == 88) {
            finalBase = 16;
            str += 2;
          } else {
            finalBase = 8;
            ok = true; // we saw an initial zero, perhaps the entire thing is just "0"
          }
        }
      } else if (finalBase==16) {
        if (HEAP8[(str)] == 48) {
          if (HEAP8[((str+1)|0)] == 120 ||
              HEAP8[((str+1)|0)] == 88) {
            str += 2;
          }
        }
      }
      if (!finalBase) finalBase = 10;
      var start = str;
      // Get digits.
      var chr;
      while ((chr = HEAP8[(str)]) != 0) {
        var digit = parseInt(String.fromCharCode(chr), finalBase);
        if (isNaN(digit)) {
          break;
        } else {
          str++;
          ok = true;
        }
      }
      if (!ok) {
        ___setErrNo(ERRNO_CODES.EINVAL);
        return ((asm["setTempRet0"](0),0)|0);
      }
      // Set end pointer.
      if (endptr) {
        HEAP32[((endptr)>>2)]=str
      }
      try {
        var numberString = isNegative ? '-'+Pointer_stringify(start, str - start) : Pointer_stringify(start, str - start);
        i64Math.fromString(numberString, finalBase, min, max, unsign);
      } catch(e) {
        ___setErrNo(ERRNO_CODES.ERANGE); // not quite correct
      }
      return ((asm["setTempRet0"](((HEAP32[(((tempDoublePtr)+(4))>>2)])|0)),((HEAP32[((tempDoublePtr)>>2)])|0))|0);
    }function _strtoull(str, endptr, base) {
      return __parseInt64(str, endptr, base, 0, '18446744073709551615', true);  // ULONG_MAX.
    }var _strtoull_l=_strtoull;
  function _strtoll(str, endptr, base) {
      return __parseInt64(str, endptr, base, '-9223372036854775808', '9223372036854775807');  // LLONG_MIN, LLONG_MAX.
    }var _strtoll_l=_strtoll;
  function _uselocale(locale) {
      return 0;
    }
  function _sprintf(s, format, varargs) {
      // int sprintf(char *restrict s, const char *restrict format, ...);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/printf.html
      return _snprintf(s, undefined, format, varargs);
    }function _asprintf(s, format, varargs) {
      return _sprintf(-s, format, varargs);
    }function _vasprintf(s, format, va_arg) {
      return _asprintf(s, format, HEAP32[((va_arg)>>2)]);
    }
  function _vsscanf(s, format, va_arg) {
      return _sscanf(s, format, HEAP32[((va_arg)>>2)]);
    }
  function _sbrk(bytes) {
      // Implement a Linux-like 'memory area' for our 'process'.
      // Changes the size of the memory area by |bytes|; returns the
      // address of the previous top ('break') of the memory area
      // We control the "dynamic" memory - DYNAMIC_BASE to DYNAMICTOP
      var self = _sbrk;
      if (!self.called) {
        DYNAMICTOP = alignMemoryPage(DYNAMICTOP); // make sure we start out aligned
        self.called = true;
        assert(Runtime.dynamicAlloc);
        self.alloc = Runtime.dynamicAlloc;
        Runtime.dynamicAlloc = function() { abort('cannot dynamically allocate, sbrk now has control') };
      }
      var ret = DYNAMICTOP;
      if (bytes != 0) self.alloc(bytes);
      return ret;  // Previous break location.
    }
  function _time(ptr) {
      var ret = Math.floor(Date.now()/1000);
      if (ptr) {
        HEAP32[((ptr)>>2)]=ret
      }
      return ret;
    }
  function ___cxa_call_unexpected(exception) {
      Module.printErr('Unexpected exception thrown, this is not properly supported - aborting');
      ABORT = true;
      throw exception;
    }
FS.staticInit();__ATINIT__.unshift({ func: function() { if (!Module["noFSInit"] && !FS.init.initialized) FS.init() } });__ATMAIN__.push({ func: function() { FS.ignorePermissions = false } });__ATEXIT__.push({ func: function() { FS.quit() } });Module["FS_createFolder"] = FS.createFolder;Module["FS_createPath"] = FS.createPath;Module["FS_createDataFile"] = FS.createDataFile;Module["FS_createPreloadedFile"] = FS.createPreloadedFile;Module["FS_createLazyFile"] = FS.createLazyFile;Module["FS_createLink"] = FS.createLink;Module["FS_createDevice"] = FS.createDevice;
___errno_state = Runtime.staticAlloc(4); HEAP32[((___errno_state)>>2)]=0;
__ATINIT__.unshift({ func: function() { TTY.init() } });__ATEXIT__.push({ func: function() { TTY.shutdown() } });TTY.utf8 = new Runtime.UTF8Processor();
if (ENVIRONMENT_IS_NODE) { var fs = require("fs"); NODEFS.staticInit(); }
Module["requestFullScreen"] = function Module_requestFullScreen(lockPointer, resizeCanvas) { Browser.requestFullScreen(lockPointer, resizeCanvas) };
  Module["requestAnimationFrame"] = function Module_requestAnimationFrame(func) { Browser.requestAnimationFrame(func) };
  Module["setCanvasSize"] = function Module_setCanvasSize(width, height, noUpdates) { Browser.setCanvasSize(width, height, noUpdates) };
  Module["pauseMainLoop"] = function Module_pauseMainLoop() { Browser.mainLoop.pause() };
  Module["resumeMainLoop"] = function Module_resumeMainLoop() { Browser.mainLoop.resume() };
  Module["getUserMedia"] = function Module_getUserMedia() { Browser.getUserMedia() }
__ATINIT__.push({ func: function() { SOCKFS.root = FS.mount(SOCKFS, {}, null); } });
GL.init()
GL.immediate.setupFuncs(); Browser.moduleContextCreatedCallbacks.push(function() { GL.immediate.init() });
GLEmulation.init();
_fputc.ret = allocate([0], "i8", ALLOC_STATIC);
_llvm_eh_exception.buf = allocate(12, "void*", ALLOC_STATIC);
_fgetc.ret = allocate([0], "i8", ALLOC_STATIC);
STACK_BASE = STACKTOP = Runtime.alignMemory(STATICTOP);
staticSealed = true; // seal the static portion of memory
STACK_MAX = STACK_BASE + 5242880;
DYNAMIC_BASE = DYNAMICTOP = Runtime.alignMemory(STACK_MAX);
assert(DYNAMIC_BASE < TOTAL_MEMORY, "TOTAL_MEMORY not big enough for stack");
 var ctlz_i8 = allocate([8,7,6,6,5,5,5,5,4,4,4,4,4,4,4,4,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_DYNAMIC);
 var cttz_i8 = allocate([8,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,7,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0], "i8", ALLOC_DYNAMIC);
var Math_min = Math.min;
function invoke_iiiiiiii(index,a1,a2,a3,a4,a5,a6,a7) {
  try {
    return Module["dynCall_iiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_vif(index,a1,a2) {
  try {
    Module["dynCall_vif"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_viifii(index,a1,a2,a3,a4,a5) {
  try {
    Module["dynCall_viifii"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_viiiifffffif(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11) {
  try {
    Module["dynCall_viiiifffffif"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_vi(index,a1) {
  try {
    Module["dynCall_vi"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_vii(index,a1,a2) {
  try {
    Module["dynCall_vii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_iiiiiii(index,a1,a2,a3,a4,a5,a6) {
  try {
    return Module["dynCall_iiiiiii"](index,a1,a2,a3,a4,a5,a6);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_viiiif(index,a1,a2,a3,a4,a5) {
  try {
    Module["dynCall_viiiif"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_ii(index,a1) {
  try {
    return Module["dynCall_ii"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_viiiiiid(index,a1,a2,a3,a4,a5,a6,a7) {
  try {
    Module["dynCall_viiiiiid"](index,a1,a2,a3,a4,a5,a6,a7);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_viiiiffffiif(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11) {
  try {
    Module["dynCall_viiiiffffiif"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_fi(index,a1) {
  try {
    return Module["dynCall_fi"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_viiiii(index,a1,a2,a3,a4,a5) {
  try {
    Module["dynCall_viiiii"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_viffff(index,a1,a2,a3,a4,a5) {
  try {
    Module["dynCall_viffff"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_viffiii(index,a1,a2,a3,a4,a5,a6) {
  try {
    Module["dynCall_viffiii"](index,a1,a2,a3,a4,a5,a6);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_viiif(index,a1,a2,a3,a4) {
  try {
    Module["dynCall_viiif"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_fiiiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11) {
  try {
    return Module["dynCall_fiiiiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_fiifii(index,a1,a2,a3,a4,a5) {
  try {
    return Module["dynCall_fiifii"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_iiii(index,a1,a2,a3) {
  try {
    return Module["dynCall_iiii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_fif(index,a1,a2) {
  try {
    return Module["dynCall_fif"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_viiiiid(index,a1,a2,a3,a4,a5,a6) {
  try {
    Module["dynCall_viiiiid"](index,a1,a2,a3,a4,a5,a6);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_viff(index,a1,a2,a3) {
  try {
    Module["dynCall_viff"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_vifi(index,a1,a2,a3) {
  try {
    Module["dynCall_vifi"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_viiiiif(index,a1,a2,a3,a4,a5,a6) {
  try {
    Module["dynCall_viiiiif"](index,a1,a2,a3,a4,a5,a6);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_vifff(index,a1,a2,a3,a4) {
  try {
    Module["dynCall_vifff"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_viiiiii(index,a1,a2,a3,a4,a5,a6) {
  try {
    Module["dynCall_viiiiii"](index,a1,a2,a3,a4,a5,a6);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_iiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9) {
  try {
    return Module["dynCall_iiiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_viiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8) {
  try {
    Module["dynCall_viiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_fiii(index,a1,a2,a3) {
  try {
    return Module["dynCall_fiii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_viiifii(index,a1,a2,a3,a4,a5,a6) {
  try {
    Module["dynCall_viiifii"](index,a1,a2,a3,a4,a5,a6);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_fiiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10) {
  try {
    return Module["dynCall_fiiiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_fiiiii(index,a1,a2,a3,a4,a5) {
  try {
    return Module["dynCall_fiiiii"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_viiiiiii(index,a1,a2,a3,a4,a5,a6,a7) {
  try {
    Module["dynCall_viiiiiii"](index,a1,a2,a3,a4,a5,a6,a7);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_viiiiiiiif(index,a1,a2,a3,a4,a5,a6,a7,a8,a9) {
  try {
    Module["dynCall_viiiiiiiif"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_iiiiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11) {
  try {
    return Module["dynCall_iiiiiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_vifii(index,a1,a2,a3,a4) {
  try {
    Module["dynCall_vifii"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_viiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9) {
  try {
    Module["dynCall_viiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_viiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10) {
  try {
    Module["dynCall_viiiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_iii(index,a1,a2) {
  try {
    return Module["dynCall_iii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_iiiiii(index,a1,a2,a3,a4,a5) {
  try {
    return Module["dynCall_iiiiii"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_viiiiiffii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9) {
  try {
    Module["dynCall_viiiiiffii"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_fiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8) {
  try {
    return Module["dynCall_fiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_iifif(index,a1,a2,a3,a4) {
  try {
    return Module["dynCall_iifif"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_fiiii(index,a1,a2,a3,a4) {
  try {
    return Module["dynCall_fiiii"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_iiiii(index,a1,a2,a3,a4) {
  try {
    return Module["dynCall_iiiii"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_i(index) {
  try {
    return Module["dynCall_i"](index);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_viii(index,a1,a2,a3) {
  try {
    Module["dynCall_viii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_viifi(index,a1,a2,a3,a4) {
  try {
    Module["dynCall_viifi"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_v(index) {
  try {
    Module["dynCall_v"](index);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_iiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8) {
  try {
    return Module["dynCall_iiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_viif(index,a1,a2,a3) {
  try {
    Module["dynCall_viif"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_iiif(index,a1,a2,a3) {
  try {
    return Module["dynCall_iiif"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_fiiifii(index,a1,a2,a3,a4,a5,a6) {
  try {
    return Module["dynCall_fiiifii"](index,a1,a2,a3,a4,a5,a6);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_viiii(index,a1,a2,a3,a4) {
  try {
    Module["dynCall_viiii"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function asmPrintInt(x, y) {
  Module.print('int ' + x + ',' + y);// + ' ' + new Error().stack);
}
function asmPrintFloat(x, y) {
  Module.print('float ' + x + ',' + y);// + ' ' + new Error().stack);
}
// EMSCRIPTEN_START_ASM
var asm=(function(global,env,buffer){"use asm";var a=new global.Int8Array(buffer);var b=new global.Int16Array(buffer);var c=new global.Int32Array(buffer);var d=new global.Uint8Array(buffer);var e=new global.Uint16Array(buffer);var f=new global.Uint32Array(buffer);var g=new global.Float32Array(buffer);var h=new global.Float64Array(buffer);var i=env.STACKTOP|0;var j=env.STACK_MAX|0;var k=env.tempDoublePtr|0;var l=env.ABORT|0;var m=env.cttz_i8|0;var n=env.ctlz_i8|0;var o=env.__ZTVN10__cxxabiv117__class_type_infoE|0;var p=env._stdout|0;var q=env.___dso_handle|0;var r=env._stdin|0;var s=env.__ZTVN10__cxxabiv120__si_class_type_infoE|0;var t=env._stderr|0;var u=env.___fsmu8|0;var v=+env.NaN;var w=+env.Infinity;var x=0;var y=0;var z=0;var A=0;var B=0,C=0,D=0,E=0,F=0.0,G=0,H=0,I=0,J=0.0;var K=0;var L=0;var M=0;var N=0;var O=0;var P=0;var Q=0;var R=0;var S=0;var T=0;var U=global.Math.floor;var V=global.Math.abs;var W=global.Math.sqrt;var X=global.Math.pow;var Y=global.Math.cos;var Z=global.Math.sin;var _=global.Math.tan;var $=global.Math.acos;var aa=global.Math.asin;var ab=global.Math.atan;var ac=global.Math.atan2;var ad=global.Math.exp;var ae=global.Math.log;var af=global.Math.ceil;var ag=global.Math.imul;var ah=env.abort;var ai=env.assert;var aj=env.asmPrintInt;var ak=env.asmPrintFloat;var al=env.min;var am=env.invoke_iiiiiiii;var an=env.invoke_vif;var ao=env.invoke_viifii;var ap=env.invoke_viiiifffffif;var aq=env.invoke_vi;var ar=env.invoke_vii;var as=env.invoke_iiiiiii;var at=env.invoke_viiiif;var au=env.invoke_ii;var av=env.invoke_viiiiiid;var aw=env.invoke_viiiiffffiif;var ax=env.invoke_fi;var ay=env.invoke_viiiii;var az=env.invoke_viffff;var aA=env.invoke_viffiii;var aB=env.invoke_viiif;var aC=env.invoke_fiiiiiiiiiii;var aD=env.invoke_fiifii;var aE=env.invoke_iiii;var aF=env.invoke_fif;var aG=env.invoke_viiiiid;var aH=env.invoke_viff;var aI=env.invoke_vifi;var aJ=env.invoke_viiiiif;var aK=env.invoke_vifff;var aL=env.invoke_viiiiii;var aM=env.invoke_iiiiiiiiii;var aN=env.invoke_viiiiiiii;var aO=env.invoke_fiii;var aP=env.invoke_viiifii;var aQ=env.invoke_fiiiiiiiiii;var aR=env.invoke_fiiiii;var aS=env.invoke_viiiiiii;var aT=env.invoke_viiiiiiiif;var aU=env.invoke_iiiiiiiiiiii;var aV=env.invoke_vifii;var aW=env.invoke_viiiiiiiii;var aX=env.invoke_viiiiiiiiii;var aY=env.invoke_iii;var aZ=env.invoke_iiiiii;var a_=env.invoke_viiiiiffii;var a$=env.invoke_fiiiiiiii;var a0=env.invoke_iifif;var a1=env.invoke_fiiii;var a2=env.invoke_iiiii;var a3=env.invoke_i;var a4=env.invoke_viii;var a5=env.invoke_viifi;var a6=env.invoke_v;var a7=env.invoke_iiiiiiiii;var a8=env.invoke_viif;var a9=env.invoke_iiif;var ba=env.invoke_fiiifii;var bb=env.invoke_viiii;var bc=env.__scanString;var bd=env._fclose;var be=env._glStencilMaskSeparate;var bf=env._pthread_mutex_lock;var bg=env.___cxa_end_catch;var bh=env._acosf;var bi=env._isxdigit;var bj=env._glVertex2fv;var bk=env._glFramebufferRenderbuffer;var bl=env._send;var bm=env._glLineWidth;var bn=env._glCompileShader;var bo=env._isspace;var bp=env._glGetObjectParameteriv;var bq=env._glFogiv;var br=env._glDepthRangef;var bs=env._glFogfv;var bt=env.___resumeException;var bu=env._glCreateShader;var bv=env._glIsBuffer;var bw=env._glGenRenderbuffers;var bx=env._cosf;var by=env._glCompressedTexImage2D;var bz=env._glVertexAttrib1f;var bA=env._glBlendFuncSeparate;var bB=env._glHint;var bC=env._glTexCoord2fv;var bD=env.___cxa_free_exception;var bE=env._glBlendEquation;var bF=env._glDeleteProgram;var bG=env._glRenderbufferStorage;var bH=env._glLoadIdentity;var bI=env._glUniform3i;var bJ=env._glColor3f;var bK=env._glVertex3f;var bL=env._fmax;var bM=env._glUniform3f;var bN=env.___cxa_guard_acquire;var bO=env._glGetBufferParameteriv;var bP=env._glGetString;var bQ=env._sinf;var bR=env._glGenVertexArrays;var bS=env._llvm_stacksave;var bT=env._glNormalPointer;var bU=env._glFogi;var bV=env._glBegin;var bW=env._glColor3ubv;var bX=env._printf;var bY=env._glVertexPointer;var bZ=env._glDeleteFramebuffers;var b_=env._glDrawArrays;var b$=env._llvm_pow_f32;var b0=env.__arraySum;var b1=env._glLightfv;var b2=env._glClear;var b3=env._gluProject;var b4=env.__parseInt64;var b5=env._glIsEnabled;var b6=env._glStencilOp;var b7=env._SDL_GetError;var b8=env._glFramebufferTexture2D;var b9=env._glGetFramebufferAttachmentParameteriv;var ca=env._glTranslated;var cb=env._glTexImage1D;var cc=env._pthread_cond_broadcast;var cd=env.__ZSt9terminatev;var ce=env._gettimeofday;var cf=env._glTexParameteriv;var cg=env._glGetShaderInfoLog;var ch=env._glGenFramebuffers;var ci=env.___errno_location;var cj=env._strerror;var ck=env._glGetAttachedShaders;var cl=env._catclose;var cm=env._glIsRenderbuffer;var cn=env._glDeleteVertexArrays;var co=env._fprintf;var cp=env._glIsVertexArray;var cq=env._glDisableVertexAttribArray;var cr=env._glTexCoord4f;var cs=env._sysconf;var ct=env._abort;var cu=env._glIsShader;var cv=env._strtoll;var cw=env._glDisable;var cx=env._glEnable;var cy=env._glColor4fv;var cz=env._write;var cA=env._glGetAttribLocation;var cB=env._sin;var cC=env.___cxa_pure_virtual;var cD=env._vasprintf;var cE=env._emscripten_set_main_loop;var cF=env._glGetPointerv;var cG=env._glGetUniformfv;var cH=env._gluOrtho2D;var cI=env._acos;var cJ=env._glDepthRange;var cK=env._glFrustum;var cL=env._pwrite;var cM=env._strerror_r;var cN=env._glDrawBuffer;var cO=env._glPushMatrix;var cP=env._glOrtho;var cQ=env._glDrawElementsInstanced;var cR=env._glFlush;var cS=env._glGetRenderbufferParameteriv;var cT=env._rand;var cU=env._glGetVertexAttribPointerv;var cV=env.__isLeapYear;var cW=env._fwrite;var cX=env._gluUnProject;var cY=env._glGetTexLevelParameteriv;var cZ=env._glStencilFuncSeparate;var c_=env._glUniform4iv;var c$=env._glClearStencil;var c0=env._glGenTextures;var c1=env.___cxa_rethrow;var c2=env._fmod;var c3=env._snprintf;var c4=env._llvm_va_end;var c5=env._vsscanf;var c6=env._glDeleteRenderbuffers;var c7=env._glUniform2i;var c8=env._glUniform2f;var c9=env._glGetProgramiv;var da=env._glVertexAttribPointer;var db=env._sprintf;var dc=env.___ctype_b_loc;var dd=env._atan2f;var de=env._glTexEnvf;var df=env._catgets;var dg=env._asprintf;var dh=env._ferror;var di=env._glCopyTexImage2D;var dj=env._glTexEnvi;var dk=env.___cxa_begin_catch;var dl=env._recv;var dm=env._glUniform2iv;var dn=env.__ZSt18uncaught_exceptionv;var dp=env._putchar;var dq=env._glMatrixMode;var dr=env._glGetShaderiv;var ds=env._glGetActiveAttrib;var dt=env._glCopyTexSubImage2D;var du=env._glPolygonOffset;var dv=env._SDL_SetVideoMode;var dw=env._open;var dx=env._glVertexAttrib1fv;var dy=env._glUniform3fv;var dz=env._glTexCoord3f;var dA=env._glGetVertexAttribiv;var dB=env._isascii;var dC=env._glVertexAttrib3fv;var dD=env._glUniform3iv;var dE=env._glPolygonMode;var dF=env._llvm_pow_f64;var dG=env._llvm_bswap_i32;var dH=env.___cxa_guard_release;var dI=env._vsnprintf;var dJ=env._glUseProgram;var dK=env.___assert_fail;var dL=env._glBindVertexArray;var dM=env._glColor4f;var dN=env.__addDays;var dO=env._fseek;var dP=env._glFinish;var dQ=env._gluLookAt;var dR=env._glDeleteShader;var dS=env._glCullFace;var dT=env._glViewport;var dU=env._catopen;var dV=env._glClearDepth;var dW=env._glTexParameterf;var dX=env._glTexParameteri;var dY=env._glGetShaderSource;var dZ=env._llvm_trap;var d_=env._glValidateProgram;var d$=env._glBindProgram;var d0=env._glColor4ub;var d1=env._lseek;var d2=env._glColor4ui;var d3=env._glColor4us;var d4=env._glLinkProgram;var d5=env._strtoull;var d6=env._glBindTexture;var d7=env._fputc;var d8=env._SDL_GL_GetProcAddress;var d9=env._glDetachShader;var ea=env._glScaled;var eb=env._fputs;var ec=env._glColorMask;var ed=env._glDeleteTextures;var ee=env._glStencilOpSeparate;var ef=env._glVertexAttrib4f;var eg=env._glGetTexParameteriv;var eh=env._glSampleCoverage;var ei=env._pthread_cond_wait;var ej=env._glUniform1f;var ek=env._glGetVertexAttribfv;var el=env._glUniform1i;var em=env._strncmp;var en=env._glTexSubImage2D;var eo=env._glGetUniformiv;var ep=env._atexit;var eq=env._close;var er=env._glBindFramebuffer;var es=env._strchr;var et=env.___setErrNo;var eu=env._glTexGeni;var ev=env._emscripten_GetProcAddress;var ew=env._eglGetProcAddress;var ex=env._freelocale;var ey=env._glAttachShader;var ez=env._glShaderBinary;var eA=env.___cxa_is_number_type;var eB=env.___cxa_does_inherit;var eC=env._emscripten_get_canvas_size;var eD=env._glDrawElements;var eE=env._glClientActiveTexture;var eF=env._SDL_GL_SwapBuffers;var eG=env._glUniform1iv;var eH=env._glTexEnvfv;var eI=env._glReadBuffer;var eJ=env._glDrawArraysInstanced;var eK=env._glGenerateMipmap;var eL=env._glLightModelfv;var eM=env._strftime;var eN=env._glVertexAttrib3f;var eO=env._glPopMatrix;var eP=env._glBlendColor;var eQ=env._fabsf;var eR=env.___cxa_throw;var eS=env._glTexCoord2i;var eT=env._glBindRenderbuffer;var eU=env._glVertex3fv;var eV=env._glIsProgram;var eW=env._SDL_GL_SetAttribute;var eX=env._glGetProgramInfoLog;var eY=env._puts;var eZ=env._glVertexAttrib4fv;var e_=env._glReleaseShaderCompiler;var e$=env._glUniform4i;var e0=env._llvm_umul_with_overflow_i32;var e1=env._glEnableVertexAttribArray;var e2=env._glRotated;var e3=env.___cxa_find_matching_catch;var e4=env._glReadPixels;var e5=env._glUniform4f;var e6=env._glShadeModel;var e7=env._glUniformMatrix3fv;var e8=env.__formatString;var e9=env._cos;var fa=env._glAlphaFunc;var fb=env._emscripten_procAddressTable;var fc=env._glGetInfoLog;var fd=env._glStencilFunc;var fe=env._glTexCoordPointer;var ff=env._glColor4ubv;var fg=env._glLoadTransposeMatrixd;var fh=env._glLoadTransposeMatrixf;var fi=env._glDeleteObject;var fj=env._glBlendEquationSeparate;var fk=env._glGenBuffers;var fl=env._glBlendFunc;var fm=env._glCreateProgram;var fn=env._longjmp;var fo=env._glIsFramebuffer;var fp=env.___ctype_tolower_loc;var fq=env._glTexGenfv;var fr=env._glEnd;var fs=env._glDeleteBuffers;var ft=env._glScissor;var fu=env._glGetBooleanv;var fv=env._glMaterialfv;var fw=env._llvm_lifetime_end;var fx=env._glMultTransposeMatrixf;var fy=env._glMultTransposeMatrixd;var fz=env._glClearColor;var fA=env._fflush;var fB=env._llvm_stackrestore;var fC=env._llvm_eh_exception;var fD=env._glUniform2fv;var fE=env._read;var fF=env._glClearDepthf;var fG=env._glNormal3f;var fH=env._glColor3uiv;var fI=env._glColor3us;var fJ=env._strstr;var fK=env._fsync;var fL=env.___cxa_guard_abort;var fM=env._newlocale;var fN=env.___gxx_personality_v0;var fO=env._glCompressedTexSubImage2D;var fP=env._glColor3ub;var fQ=env._glGetTexParameterfv;var fR=env._glColor3ui;var fS=env._strcmp;var fT=env._fgetc;var fU=env._glDepthFunc;var fV=env.__getFloat;var fW=env._pread;var fX=env._glGetUniformLocation;var fY=env._glUniform4fv;var fZ=env._glFogf;var f_=env._ftell;var f$=env._exit;var f0=env._glVertexAttribDivisor;var f1=env._glCheckFramebufferStatus;var f2=env._glEnableClientState;var f3=env._glBindAttribLocation;var f4=env._glVertexAttrib2f;var f5=env._glDrawRangeElements;var f6=env._glBufferSubData;var f7=env.___cxa_call_unexpected;var f8=env._SDL_Init;var f9=env._fmin;var ga=env.__exit;var gb=env._glColor3usv;var gc=env._glGetShaderPrecisionFormat;var gd=env._glShaderSource;var ge=env._fopen;var gf=env._sqrtf;var gg=env._SDL_PollEvent;var gh=env._glActiveTexture;var gi=env._glBindBuffer;var gj=env._glUniformMatrix2fv;var gk=env._glBufferData;var gl=env._glGetError;var gm=env._pthread_mutex_unlock;var gn=env._glGetFloatv;var go=env._glVertexAttrib2fv;var gp=env._sbrk;var gq=env._glGetIntegerv;var gr=env._llvm_lifetime_start;var gs=env._ungetc;var gt=env._uselocale;var gu=env._sscanf;var gv=env._glTexImage2D;var gw=env._glStencilMask;var gx=env._fread;var gy=env._glMultMatrixd;var gz=env._glMultMatrixf;var gA=env._glIsTexture;var gB=env._glUniform1fv;var gC=env._glLoadMatrixf;var gD=env._gluPerspective;var gE=env._glLoadMatrixd;var gF=env._isdigit;var gG=env.__reallyNegative;var gH=env._glTexParameterfv;var gI=env._floor;var gJ=env.___cxa_allocate_exception;var gK=env._glPixelStorei;var gL=env._asinf;var gM=env.___ctype_toupper_loc;var gN=env._glDisableClientState;var gO=env._glDepthMask;var gP=env._glColor3fv;var gQ=env._glUniformMatrix4fv;var gR=env._glGetActiveUniform;var gS=env._glColorPointer;var gT=env._glFrontFace;var gU=env._llvm_bswap_i16;var gV=env._time;var gW=0.0;
// EMSCRIPTEN_START_FUNCS
function y7(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;if((h|0)<0){i=c[b+8>>2]|0;+hb[c[(c[i>>2]|0)+12>>2]&3](i,d,e,f,g,c[b+12>>2]|0,c[b+16>>2]|0,c[b+4>>2]|0,c[b+20>>2]|0,c[b+24>>2]|0,c[b+28>>2]|0);return}i=c[b+16>>2]|0;j=b+12|0;k=0;while(1){l=(k|0)<(i|0);if(!l){m=0;n=0;break}o=(c[j>>2]|0)+(k<<2)|0;p=c[o>>2]|0;q=c[(c[p+28>>2]|0)+208>>2]|0;if((q|0)>-1){r=q}else{r=c[(c[p+32>>2]|0)+208>>2]|0}if((r|0)==(h|0)){s=5;break}else{k=k+1|0}}do{if((s|0)==5){if(!l){m=0;n=o;break}r=c[j>>2]|0;p=0;q=k;while(1){t=c[r+(q<<2)>>2]|0;u=c[(c[t+28>>2]|0)+208>>2]|0;if((u|0)>-1){v=u}else{v=c[(c[t+32>>2]|0)+208>>2]|0}t=((v|0)==(h|0))+p|0;u=q+1|0;if((u|0)<(i|0)){p=t;q=u}else{m=t;n=o;break}}}}while(0);o=b+4|0;i=c[o>>2]|0;if((c[i+72>>2]|0)<2){h=c[b+8>>2]|0;+hb[c[(c[h>>2]|0)+12>>2]&3](h,d,e,f,g,n,m,i,c[b+20>>2]|0,c[b+24>>2]|0,c[b+28>>2]|0);return}if((e|0)>0){i=b+36|0;h=b+40|0;v=b+44|0;k=b+48|0;j=0;l=c[i>>2]|0;do{s=d+(j<<2)|0;do{if((l|0)==(c[h>>2]|0)){q=(l|0)==0?1:l<<1;if((l|0)>=(q|0)){w=l;break}if((q|0)==0){x=0;y=l}else{p=zv(q<<2,16)|0;x=p;y=c[i>>2]|0}if((y|0)>0){p=0;do{r=x+(p<<2)|0;if((r|0)!=0){c[r>>2]=c[(c[v>>2]|0)+(p<<2)>>2]}p=p+1|0;}while((p|0)<(y|0))}p=c[v>>2]|0;if((p|0)!=0){if((a[k]&1)!=0){zw(p)}c[v>>2]=0}a[k]=1;c[v>>2]=x;c[h>>2]=q;w=c[i>>2]|0}else{w=l}}while(0);p=(c[v>>2]|0)+(w<<2)|0;if((p|0)==0){z=w}else{c[p>>2]=c[s>>2];z=c[i>>2]|0}l=z+1|0;c[i>>2]=l;j=j+1|0;}while((j|0)<(e|0))}if((g|0)>0){e=b+52|0;j=0;do{yM(e,f+(j<<2)|0);j=j+1|0;}while((j|0)<(g|0))}if((m|0)>0){g=b+72|0;j=0;do{yA(g,n+(j<<2)|0);j=j+1|0;}while((j|0)<(m|0))}if(((c[b+56>>2]|0)+(c[b+76>>2]|0)|0)<=(c[(c[o>>2]|0)+72>>2]|0)){return}yK(b);return}function y8(b){b=b|0;var d=0,e=0,f=0,g=0,h=0;c[b>>2]=31496;d=b+76|0;e=b+84|0;f=c[e>>2]|0;g=b+88|0;if((f|0)!=0){if((a[g]&1)!=0){zw(f)}c[e>>2]=0}a[g]=1;c[e>>2]=0;c[d>>2]=0;c[b+80>>2]=0;d=b+56|0;e=b+64|0;g=c[e>>2]|0;f=b+68|0;if((g|0)!=0){if((a[f]&1)!=0){zw(g)}c[e>>2]=0}a[f]=1;c[e>>2]=0;c[d>>2]=0;c[b+60>>2]=0;d=b+36|0;e=b+44|0;f=c[e>>2]|0;g=b+48|0;if((f|0)==0){a[g]=1;c[e>>2]=0;c[d>>2]=0;h=b+40|0;c[h>>2]=0;return}if((a[g]&1)!=0){zw(f)}c[e>>2]=0;a[g]=1;c[e>>2]=0;c[d>>2]=0;h=b+40|0;c[h>>2]=0;return}function y9(b,d){b=b|0;d=d|0;rP(b|0);c[b>>2]=35360;a[b+496|0]=1;c[b+492>>2]=0;c[b+484>>2]=0;c[b+488>>2]=0;za(b,d);return}function za(b,d){b=b|0;d=d|0;var e=0,f=0,h=0,i=0.0,j=0.0,k=0.0,l=0.0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0,I=0.0,J=0.0,K=0.0,L=0.0,M=0.0,N=0.0;c[b+236>>2]=2;K1(b+308|0,0,32)|0;g[b+540>>2]=1.0;g[b+544>>2]=1.0;g[b+548>>2]=1.0;g[b+552>>2]=0.0;e=b+344|0;g[e>>2]=1.0;f=b+348|0;g[f>>2]=1.0;h=b+352|0;g[h>>2]=1.0;K1(b+356|0,0,36)|0;K1(b+408|0,0,32)|0;i=+g[d+92>>2];j=+g[d+96>>2];if(i<0.0){k=0.0}else{k=i>1.0?1.0:i}g[b+440>>2]=k;if(j<0.0){l=0.0}else{l=j>1.0?1.0:j}g[b+444>>2]=l;g[b+468>>2]=+g[d+112>>2];g[b+472>>2]=+g[d+116>>2];m=c[d+4>>2]|0;c[b+476>>2]=m;c[b+604>>2]=0;c[b+608>>2]=0;a[b+448|0]=a[d+120|0]&1;g[b+452>>2]=+g[d+124>>2];g[b+456>>2]=+g[d+128>>2];g[b+460>>2]=+g[d+132>>2];g[b+464>>2]=+g[d+136>>2];if((m|0)==0){n=b+4|0;o=d+8|0;c[n>>2]=c[o>>2];c[n+4>>2]=c[o+4>>2];c[n+8>>2]=c[o+8>>2];c[n+12>>2]=c[o+12>>2];o=b+20|0;p=d+24|0;c[o>>2]=c[p>>2];c[o+4>>2]=c[p+4>>2];c[o+8>>2]=c[p+8>>2];c[o+12>>2]=c[p+12>>2];p=b+36|0;q=d+40|0;c[p>>2]=c[q>>2];c[p+4>>2]=c[q+4>>2];c[p+8>>2]=c[q+8>>2];c[p+12>>2]=c[q+12>>2];q=b+52|0;r=d+56|0;c[q>>2]=c[r>>2];c[q+4>>2]=c[r+4>>2];c[q+8>>2]=c[r+8>>2];c[q+12>>2]=c[r+12>>2];s=n;t=o;u=p;v=q}else{q=b+4|0;g0[c[(c[m>>2]|0)+8>>2]&511](m,q);s=q;t=b+20|0;u=b+36|0;v=b+52|0}q=b+68|0;c[q>>2]=c[s>>2];c[q+4>>2]=c[s+4>>2];c[q+8>>2]=c[s+8>>2];c[q+12>>2]=c[s+12>>2];s=b+84|0;c[s>>2]=c[t>>2];c[s+4>>2]=c[t+4>>2];c[s+8>>2]=c[t+8>>2];c[s+12>>2]=c[t+12>>2];t=b+100|0;c[t>>2]=c[u>>2];c[t+4>>2]=c[u+4>>2];c[t+8>>2]=c[u+8>>2];c[t+12>>2]=c[u+12>>2];u=b+116|0;c[u>>2]=c[v>>2];c[u+4>>2]=c[v+4>>2];c[u+8>>2]=c[v+8>>2];c[u+12>>2]=c[v+12>>2];K1(b+132|0,0,32)|0;g[b+224>>2]=+g[d+100>>2];g[b+232>>2]=+g[d+104>>2];g[b+228>>2]=+g[d+108>>2];g0[c[(c[b>>2]|0)+12>>2]&511](b|0,c[d+72>>2]|0);v=c[13822]|0;c[13822]=v+1;c[b+504>>2]=v;l=+g[d>>2];v=b+204|0;u=c[v>>2]|0;if(l==0.0){c[v>>2]=u|1;g[b+340>>2]=0.0;w=0.0}else{c[v>>2]=u&-2;j=1.0/l;g[b+340>>2]=j;w=j}j=l*+g[b+380>>2];k=l*+g[b+384>>2];g[b+360>>2]=l*+g[b+376>>2];g[b+364>>2]=j;g[b+368>>2]=k;g[b+372>>2]=0.0;k=+g[d+76>>2];if(k!=0.0){x=1.0/k}else{x=0.0}k=+g[d+80>>2];if(k!=0.0){y=1.0/k}else{y=0.0}k=+g[d+84>>2];if(k!=0.0){z=1.0/k}else{z=0.0}g[b+392>>2]=x;g[b+396>>2]=y;g[b+400>>2]=z;g[b+404>>2]=0.0;k=w*+g[e>>2];j=w*+g[f>>2];l=w*+g[h>>2];w=+g[b+4>>2];i=w*x;A=+g[b+8>>2];B=A*y;C=+g[b+12>>2];D=C*z;E=+g[b+20>>2];F=x*E;G=+g[b+24>>2];H=y*G;I=+g[b+28>>2];J=z*I;K=+g[b+36>>2];L=x*K;x=+g[b+40>>2];M=y*x;y=+g[b+44>>2];N=z*y;g[b+260>>2]=w*i+A*B+C*D;g[b+264>>2]=i*E+B*G+D*I;g[b+268>>2]=i*K+B*x+D*y;g[b+272>>2]=0.0;g[b+276>>2]=w*F+A*H+C*J;g[b+280>>2]=E*F+G*H+I*J;g[b+284>>2]=F*K+H*x+J*y;g[b+288>>2]=0.0;g[b+292>>2]=w*L+A*M+C*N;g[b+296>>2]=E*L+G*M+I*N;g[b+300>>2]=K*L+x*M+y*N;g[b+304>>2]=0.0;c[b+500>>2]=0;K1(b+508|0,0,32)|0;g[b+556>>2]=k;g[b+560>>2]=j;g[b+564>>2]=l;K1(b+568|0,0,36)|0;return}function zb(a,b,c){a=a|0;b=+b;c=+c;var d=0.0,e=0.0,f=0;if(b<0.0){d=0.0}else{d=b>1.0?1.0:b}g[a+440>>2]=d;if(c<0.0){e=0.0;f=a+444|0;g[f>>2]=e;return}e=c>1.0?1.0:c;f=a+444|0;g[f>>2]=e;return}function zc(a,b,c){a=a|0;b=+b;c=c|0;vf(a+4|0,a+308|0,a+324|0,b,c);return}function zd(a,b){a=a|0;b=+b;var d=0,e=0,f=0,h=0,j=0,k=0,l=0,m=0.0,n=0.0,o=0.0;d=i;i=i+24|0;e=d|0;f=d+16|0;if(b==0.0){i=d;return}h=c[a+476>>2]|0;if((h|0)==0){j=a+4|0}else{k=a+4|0;g0[c[(c[h>>2]|0)+8>>2]&511](h,k);j=k}k=a+68|0;h=a+308|0;l=a+324|0;m=1.0/b;b=(+g[a+56>>2]- +g[a+120>>2])*m;n=m*(+g[a+60>>2]- +g[a+124>>2]);g[h>>2]=(+g[a+52>>2]- +g[a+116>>2])*m;g[a+312>>2]=b;g[a+316>>2]=n;g[a+320>>2]=0.0;sE(k,j,e,f);n=+g[f>>2];b=m*n*+g[e+4>>2];o=m*n*+g[e+8>>2];g[l>>2]=m*+g[e>>2]*n;g[a+328>>2]=b;g[a+332>>2]=o;g[a+336>>2]=0.0;e=a+132|0;f=h;c[e>>2]=c[f>>2];c[e+4>>2]=c[f+4>>2];c[e+8>>2]=c[f+8>>2];c[e+12>>2]=c[f+12>>2];f=a+148|0;e=l;c[f>>2]=c[e>>2];c[f+4>>2]=c[e+4>>2];c[f+8>>2]=c[e+8>>2];c[f+12>>2]=c[e+12>>2];e=k;k=j;c[e>>2]=c[k>>2];c[e+4>>2]=c[k+4>>2];c[e+8>>2]=c[k+8>>2];c[e+12>>2]=c[k+12>>2];k=a+84|0;e=a+20|0;c[k>>2]=c[e>>2];c[k+4>>2]=c[e+4>>2];c[k+8>>2]=c[e+8>>2];c[k+12>>2]=c[e+12>>2];e=a+100|0;k=a+36|0;c[e>>2]=c[k>>2];c[e+4>>2]=c[k+4>>2];c[e+8>>2]=c[k+8>>2];c[e+12>>2]=c[k+12>>2];k=a+116|0;e=a+52|0;c[k>>2]=c[e>>2];c[k+4>>2]=c[e+4>>2];c[k+8>>2]=c[e+8>>2];c[k+12>>2]=c[e+12>>2];i=d;return}function ze(a,b){a=a|0;b=b|0;var d=0.0,e=0.0,f=0.0,h=0;d=+g[a+340>>2];if(d!=0.0){e=1.0/d;d=e*+g[b+4>>2];f=e*+g[b+8>>2];g[a+360>>2]=e*+g[b>>2];g[a+364>>2]=d;g[a+368>>2]=f;g[a+372>>2]=0.0}h=a+376|0;a=b;c[h>>2]=c[a>>2];c[h+4>>2]=c[a+4>>2];c[h+8>>2]=c[a+8>>2];c[h+12>>2]=c[a+12>>2];return}function zf(b,c){b=b|0;c=+c;var d=0.0,e=0.0,f=0,h=0.0,i=0,j=0.0,k=0,l=0.0,m=0.0,n=0,o=0,p=0.0,q=0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0;d=+g[b+440>>2];e=+X(+(1.0-d),+c);f=b+308|0;h=e*+g[f>>2];g[f>>2]=h;i=b+312|0;j=e*+g[i>>2];g[i>>2]=j;k=b+316|0;l=e*+g[k>>2];g[k>>2]=l;e=+g[b+444>>2];m=+X(+(1.0-e),+c);n=b+324|0;c=m*+g[n>>2];g[n>>2]=c;o=b+328|0;p=m*+g[o>>2];g[o>>2]=p;q=b+332|0;r=m*+g[q>>2];g[q>>2]=r;if((a[b+448|0]&1)==0){return}do{if(r*r+(c*c+p*p)<+g[b+460>>2]){if(h*h+j*j+l*l>=+g[b+456>>2]){s=h;t=j;u=l;v=c;w=p;x=r;break}m=+g[b+452>>2];y=c*m;g[n>>2]=y;z=m*p;g[o>>2]=z;A=m*r;g[q>>2]=A;B=m*h;g[f>>2]=B;C=m*j;g[i>>2]=C;D=m*l;g[k>>2]=D;s=B;t=C;u=D;v=y;w=z;x=A}else{s=h;t=j;u=l;v=c;w=p;x=r}}while(0);r=+W(s*s+t*t+u*u);do{if(r<d){if(r>.004999999888241291){p=1.0/r;g[f>>2]=s-s*p*.004999999888241291;g[i>>2]=t-t*p*.004999999888241291;g[k>>2]=u-u*p*.004999999888241291;break}else{K1(f|0,0,16)|0;break}}}while(0);u=+W(v*v+w*w+x*x);if(u>=e){return}if(u>.004999999888241291){e=1.0/u;g[n>>2]=v-v*e*.004999999888241291;g[o>>2]=w-w*e*.004999999888241291;g[q>>2]=x-x*e*.004999999888241291;return}else{K1(n|0,0,16)|0;return}}function zg(a){a=a|0;var b=0.0,d=0.0,e=0;if((c[a+204>>2]&3|0)!=0){return}b=+g[a+364>>2]*+g[a+348>>2];d=+g[a+368>>2]*+g[a+352>>2];e=a+408|0;g[e>>2]=+g[a+360>>2]*+g[a+344>>2]+ +g[e>>2];e=a+412|0;g[e>>2]=b+ +g[e>>2];e=a+416|0;g[e>>2]=d+ +g[e>>2];return}function zh(a,b){a=a|0;b=b|0;zi(a,b);return}function zi(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0,I=0.0,J=0.0,K=0.0;d=a+68|0;if((c[a+204>>2]&2|0)==0){e=d;f=b;c[e>>2]=c[f>>2];c[e+4>>2]=c[f+4>>2];c[e+8>>2]=c[f+8>>2];c[e+12>>2]=c[f+12>>2];e=a+84|0;h=b+16|0;c[e>>2]=c[h>>2];c[e+4>>2]=c[h+4>>2];c[e+8>>2]=c[h+8>>2];c[e+12>>2]=c[h+12>>2];e=a+100|0;i=b+32|0;c[e>>2]=c[i>>2];c[e+4>>2]=c[i+4>>2];c[e+8>>2]=c[i+8>>2];c[e+12>>2]=c[i+12>>2];e=a+116|0;j=b+48|0;c[e>>2]=c[j>>2];c[e+4>>2]=c[j+4>>2];c[e+8>>2]=c[j+8>>2];c[e+12>>2]=c[j+12>>2];k=a+4|0;l=f;m=a+20|0;n=h;o=a+36|0;p=i;q=a+52|0;r=j}else{j=d;d=a+4|0;c[j>>2]=c[d>>2];c[j+4>>2]=c[d+4>>2];c[j+8>>2]=c[d+8>>2];c[j+12>>2]=c[d+12>>2];j=a+84|0;i=a+20|0;c[j>>2]=c[i>>2];c[j+4>>2]=c[i+4>>2];c[j+8>>2]=c[i+8>>2];c[j+12>>2]=c[i+12>>2];j=a+100|0;h=a+36|0;c[j>>2]=c[h>>2];c[j+4>>2]=c[h+4>>2];c[j+8>>2]=c[h+8>>2];c[j+12>>2]=c[h+12>>2];j=a+116|0;f=a+52|0;c[j>>2]=c[f>>2];c[j+4>>2]=c[f+4>>2];c[j+8>>2]=c[f+8>>2];c[j+12>>2]=c[f+12>>2];k=d;l=b;m=i;n=b+16|0;o=h;p=b+32|0;q=f;r=b+48|0}b=a+132|0;f=a+308|0;c[b>>2]=c[f>>2];c[b+4>>2]=c[f+4>>2];c[b+8>>2]=c[f+8>>2];c[b+12>>2]=c[f+12>>2];f=a+148|0;b=a+324|0;c[f>>2]=c[b>>2];c[f+4>>2]=c[b+4>>2];c[f+8>>2]=c[b+8>>2];c[f+12>>2]=c[b+12>>2];c[k>>2]=c[l>>2];c[k+4>>2]=c[l+4>>2];c[k+8>>2]=c[l+8>>2];c[k+12>>2]=c[l+12>>2];c[m>>2]=c[n>>2];c[m+4>>2]=c[n+4>>2];c[m+8>>2]=c[n+8>>2];c[m+12>>2]=c[n+12>>2];c[o>>2]=c[p>>2];c[o+4>>2]=c[p+4>>2];c[o+8>>2]=c[p+8>>2];c[o+12>>2]=c[p+12>>2];c[q>>2]=c[r>>2];c[q+4>>2]=c[r+4>>2];c[q+8>>2]=c[r+8>>2];c[q+12>>2]=c[r+12>>2];s=+g[a+4>>2];t=+g[a+392>>2];u=s*t;v=+g[a+8>>2];w=+g[a+396>>2];x=v*w;y=+g[a+12>>2];z=+g[a+400>>2];A=y*z;B=+g[a+20>>2];C=t*B;D=+g[a+24>>2];E=w*D;F=+g[a+28>>2];G=z*F;H=+g[a+36>>2];I=t*H;t=+g[a+40>>2];J=w*t;w=+g[a+44>>2];K=z*w;g[a+260>>2]=s*u+v*x+y*A;g[a+264>>2]=u*B+x*D+A*F;g[a+268>>2]=u*H+x*t+A*w;g[a+272>>2]=0.0;g[a+276>>2]=s*C+v*E+y*G;g[a+280>>2]=B*C+D*E+F*G;g[a+284>>2]=C*H+E*t+G*w;g[a+288>>2]=0.0;g[a+292>>2]=s*I+v*J+y*K;g[a+296>>2]=B*I+D*J+F*K;g[a+300>>2]=H*I+t*J+w*K;g[a+304>>2]=0.0;return}function zj(a,b,c){a=a|0;b=b|0;c=+c;var d=0.0,e=0.0,f=0.0,h=0.0,i=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0,B=0;d=1.0/+g[b+392>>2];e=1.0/+g[b+396>>2];f=1.0/+g[b+400>>2];h=+g[b+4>>2];i=d*h;j=+g[b+8>>2];k=e*j;l=+g[b+12>>2];m=f*l;n=+g[b+20>>2];o=d*n;p=+g[b+24>>2];q=e*p;r=+g[b+28>>2];s=f*r;t=+g[b+36>>2];u=d*t;d=+g[b+40>>2];v=e*d;e=+g[b+44>>2];w=f*e;f=+g[b+324>>2];x=+g[b+328>>2];y=+g[b+332>>2];z=(h*i+j*k+l*m)*f+(i*n+k*p+m*r)*x+(i*t+k*d+m*e)*y;m=(h*o+j*q+l*s)*f+(n*o+p*q+r*s)*x+(o*t+q*d+s*e)*y;s=y*(t*u+d*v+e*w)+(f*(h*u+j*v+l*w)+x*(n*u+p*v+r*w));w=x*s-y*m;r=y*z-f*s;s=f*m-x*z;b=a|0;g[b>>2]=w;A=a+4|0;g[A>>2]=r;B=a+8|0;g[B>>2]=s;g[a+12>>2]=0.0;z=w*w+r*r+s*s;if(z<=c*c){return}x=1.0/+W(z)*c;g[b>>2]=w*x;g[A>>2]=x*r;g[B>>2]=x*s;return}function zk(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;if((c[d+236>>2]&2|0)==0){e=1;return e|0}f=d;d=c[b+484>>2]|0;if((d|0)<=0){e=1;return e|0}g=c[b+492>>2]|0;b=0;while(1){h=c[g+(b<<2)>>2]|0;if((a[h+20|0]&1)!=0){if((c[h+28>>2]|0)==(f|0)){e=0;i=13;break}if((c[h+32>>2]|0)==(f|0)){e=0;i=10;break}}h=b+1|0;if((h|0)<(d|0)){b=h}else{e=1;i=9;break}}if((i|0)==13){return e|0}else if((i|0)==9){return e|0}else if((i|0)==10){return e|0}return 0}function zl(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;e=b+484|0;f=c[e>>2]|0;g=b+492|0;h=0;while(1){if((h|0)>=(f|0)){break}if((c[(c[g>>2]|0)+(h<<2)>>2]|0)==(d|0)){i=4;break}else{h=h+1|0}}do{if((i|0)==4){if((h|0)==(f|0)){break}j=b+256|0;c[j>>2]=1;return}}while(0);h=b+488|0;do{if((f|0)==(c[h>>2]|0)){i=(f|0)==0?1:f<<1;if((f|0)>=(i|0)){k=f;break}if((i|0)==0){l=0;m=f}else{n=zv(i<<2,16)|0;l=n;m=c[e>>2]|0}if((m|0)>0){n=0;do{o=l+(n<<2)|0;if((o|0)!=0){c[o>>2]=c[(c[g>>2]|0)+(n<<2)>>2]}n=n+1|0;}while((n|0)<(m|0))}n=c[g>>2]|0;o=b+496|0;if((n|0)!=0){if((a[o]&1)!=0){zw(n)}c[g>>2]=0}a[o]=1;c[g>>2]=l;c[h>>2]=i;k=c[e>>2]|0}else{k=f}}while(0);f=(c[g>>2]|0)+(k<<2)|0;if((f|0)==0){p=k}else{c[f>>2]=d;p=c[e>>2]|0}c[e>>2]=p+1;j=b+256|0;c[j>>2]=1;return}function zm(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;d=a+484|0;e=c[d>>2]|0;f=a+492|0;g=0;while(1){if((g|0)>=(e|0)){h=e;i=6;break}j=c[f>>2]|0;k=j+(g<<2)|0;if((c[k>>2]|0)==(b|0)){break}else{g=g+1|0}}if((i|0)==6){l=(h|0)>0;m=l&1;n=a+256|0;c[n>>2]=m;return}i=e-1|0;c[k>>2]=c[j+(i<<2)>>2];c[(c[f>>2]|0)+(i<<2)>>2]=b;b=(c[d>>2]|0)-1|0;c[d>>2]=b;h=b;l=(h|0)>0;m=l&1;n=a+256|0;c[n>>2]=m;return}function zn(a){a=a|0;return 488}function zo(b,d,e){b=b|0;d=d|0;e=e|0;rU(b|0,d,e)|0;g[d+256>>2]=+g[b+260>>2];g[d+260>>2]=+g[b+264>>2];g[d+264>>2]=+g[b+268>>2];g[d+268>>2]=+g[b+272>>2];g[d+272>>2]=+g[b+276>>2];g[d+276>>2]=+g[b+280>>2];g[d+280>>2]=+g[b+284>>2];g[d+284>>2]=+g[b+288>>2];g[d+288>>2]=+g[b+292>>2];g[d+292>>2]=+g[b+296>>2];g[d+296>>2]=+g[b+300>>2];g[d+300>>2]=+g[b+304>>2];g[d+304>>2]=+g[b+308>>2];g[d+308>>2]=+g[b+312>>2];g[d+312>>2]=+g[b+316>>2];g[d+316>>2]=+g[b+320>>2];g[d+320>>2]=+g[b+324>>2];g[d+324>>2]=+g[b+328>>2];g[d+328>>2]=+g[b+332>>2];g[d+332>>2]=+g[b+336>>2];g[d+448>>2]=+g[b+340>>2];g[d+336>>2]=+g[b+540>>2];g[d+340>>2]=+g[b+544>>2];g[d+344>>2]=+g[b+548>>2];g[d+348>>2]=+g[b+552>>2];g[d+352>>2]=+g[b+344>>2];g[d+356>>2]=+g[b+348>>2];g[d+360>>2]=+g[b+352>>2];g[d+364>>2]=+g[b+356>>2];g[d+368>>2]=+g[b+360>>2];g[d+372>>2]=+g[b+364>>2];g[d+376>>2]=+g[b+368>>2];g[d+380>>2]=+g[b+372>>2];g[d+384>>2]=+g[b+376>>2];g[d+388>>2]=+g[b+380>>2];g[d+392>>2]=+g[b+384>>2];g[d+396>>2]=+g[b+388>>2];g[d+400>>2]=+g[b+392>>2];g[d+404>>2]=+g[b+396>>2];g[d+408>>2]=+g[b+400>>2];g[d+412>>2]=+g[b+404>>2];g[d+416>>2]=+g[b+408>>2];g[d+420>>2]=+g[b+412>>2];g[d+424>>2]=+g[b+416>>2];g[d+428>>2]=+g[b+420>>2];g[d+432>>2]=+g[b+424>>2];g[d+436>>2]=+g[b+428>>2];g[d+440>>2]=+g[b+432>>2];g[d+444>>2]=+g[b+436>>2];g[d+452>>2]=+g[b+440>>2];g[d+456>>2]=+g[b+444>>2];c[d+484>>2]=a[b+448|0]&1;g[d+460>>2]=+g[b+452>>2];g[d+464>>2]=+g[b+456>>2];g[d+468>>2]=+g[b+460>>2];g[d+472>>2]=+g[b+464>>2];g[d+476>>2]=+g[b+468>>2];g[d+480>>2]=+g[b+472>>2];return 12856}function zp(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=c[(c[b>>2]|0)+16>>2]|0;e=g3[c[(c[a>>2]|0)+16>>2]&511](a)|0;f=hd[d&127](b,e,1)|0;e=hd[c[(c[a>>2]|0)+20>>2]&127](a,c[f+8>>2]|0,b)|0;g7[c[(c[b>>2]|0)+20>>2]&127](b,f,e,1497645650,a);return}function zq(b){b=b|0;var d=0,e=0,f=0,g=0;c[b>>2]=35360;d=b+484|0;e=b+492|0;f=c[e>>2]|0;g=b+496|0;if((f|0)!=0){if((a[g]&1)!=0){zw(f)}c[e>>2]=0}a[g]=1;c[e>>2]=0;c[d>>2]=0;c[b+488>>2]=0;rR(b|0);zw(b);return}function zr(a,b){a=a|0;b=b|0;var d=0,e=0;d=g3[c[12292]&511](a+3+b|0)|0;if((d|0)==0){e=0;return e|0}a=b-1+(d+4)&-b;c[a-4>>2]=d;e=a;return e|0}function zs(a){a=a|0;if((a|0)==0){return}g$[c[12266]&1023](c[a-4>>2]|0);return}function zt(a){a=a|0;return KM(a)|0}function zu(a){a=a|0;KN(a);return}function zv(a,b){a=a|0;b=b|0;c[12472]=(c[12472]|0)+1;return hx[c[12284]&127](a,b)|0}function zw(a){a=a|0;if((a|0)==0){return}c[12470]=(c[12470]|0)+1;g$[c[12290]&1023](a);return}function zx(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;d=c[a+16>>2]|0;e=c[b+16>>2]|0;if((d|0)!=(e|0)){f=d-e|0;return f|0}if((d|0)==0){f=0;return f|0}e=a|0;g=c[e+4>>2]|0;h=b+8|0;i=c[h+4>>2]|0;j=c[e>>2]|0;e=g&0;k=c[h>>2]|0;h=i&0;l=Li(k,h,j,e)|0;m=K;n=i;i=0;o=Li(n,i,j,e)|0;e=K;j=g;g=0;p=Li(k,h,j,g)|0;h=K;k=Li(n,i,j,g)|0;g=K;j=K8(o|0,e&0,p|0,h&0)|0;p=K;o=K8(e,0,k,g)|0;g=K8(o,K,h,0)|0;h=K;o=K5(l|0,m|0,0,j|0)|0;j=o;o=K;m=K8(g,h,L&1,0)|0;h=K8(m,K,p,0)|0;p=K;m=a+8|0;a=c[m+4>>2]|0;g=b|0;b=c[g+4>>2]|0;l=c[m>>2]|0;m=a&0;k=c[g>>2]|0;g=b&0;e=Li(k,g,l,m)|0;i=K;n=b;b=0;q=Li(n,b,l,m)|0;m=K;l=a;a=0;r=Li(k,g,l,a)|0;g=K;k=Li(n,b,l,a)|0;a=K;l=K8(q|0,m&0,r|0,g&0)|0;r=K;q=K8(m,0,k,a)|0;a=K8(q,K,g,0)|0;g=K;q=K5(e|0,i|0,0,l|0)|0;l=q;q=K;i=K8(a,g,L&1,0)|0;g=K8(i,K,r,0)|0;r=K;do{if(p>>>0<r>>>0|p>>>0==r>>>0&h>>>0<g>>>0){s=-1}else{if(p>>>0>r>>>0|p>>>0==r>>>0&h>>>0>g>>>0){s=1;break}if(o>>>0<q>>>0|o>>>0==q>>>0&j>>>0<l>>>0){s=-1;break}s=(o>>>0>q>>>0|o>>>0==q>>>0&j>>>0>l>>>0)&1}}while(0);f=ag(s,d)|0;return f|0}function zy(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;e=i;i=i+128|0;f=e|0;g=e+16|0;h=e+32|0;j=e+48|0;k=e+64|0;l=e+80|0;m=e+96|0;n=e+112|0;o=b+32|0;p=c[o>>2]|0;q=c[d+32>>2]|0;if((p|0)!=(q|0)){r=p-q|0;i=e;return r|0}if((p|0)==0){r=0;i=e;return r|0}if((a[b+36|0]&1)!=0){q=b|0;s=Li(c[q>>2]|0,c[q+4>>2]|0,p,(p|0)<0|0?-1:0)|0;r=-(zz(d,s,K)|0)|0;i=e;return r|0}s=k;p=b;c[s>>2]=c[p>>2];c[s+4>>2]=c[p+4>>2];c[s+8>>2]=c[p+8>>2];c[s+12>>2]=c[p+12>>2];p=l;s=d+16|0;c[p>>2]=c[s>>2];c[p+4>>2]=c[s+4>>2];c[p+8>>2]=c[s+8>>2];c[p+12>>2]=c[s+12>>2];zA(k,l,f,g);l=m;k=b+16|0;c[l>>2]=c[k>>2];c[l+4>>2]=c[k+4>>2];c[l+8>>2]=c[k+8>>2];c[l+12>>2]=c[k+12>>2];k=n;l=d;c[k>>2]=c[l>>2];c[k+4>>2]=c[l+4>>2];c[k+8>>2]=c[l+8>>2];c[k+12>>2]=c[l+12>>2];zA(m,n,h,j);n=g+8|0;m=c[n>>2]|0;l=c[n+4>>2]|0;n=j+8|0;k=c[n>>2]|0;d=c[n+4>>2]|0;do{if(l>>>0<d>>>0|l>>>0==d>>>0&m>>>0<k>>>0){t=-1}else{if(l>>>0>d>>>0|l>>>0==d>>>0&m>>>0>k>>>0){t=1;break}n=g|0;b=c[n>>2]|0;s=c[n+4>>2]|0;n=j|0;p=c[n>>2]|0;q=c[n+4>>2]|0;if(s>>>0<q>>>0|s>>>0==q>>>0&b>>>0<p>>>0){t=-1;break}n=s>>>0>q>>>0|s>>>0==q>>>0&b>>>0>p>>>0;if(n){t=n&1;break}n=f+8|0;p=c[n>>2]|0;b=c[n+4>>2]|0;n=h+8|0;q=c[n>>2]|0;s=c[n+4>>2]|0;do{if(b>>>0<s>>>0|b>>>0==s>>>0&p>>>0<q>>>0){u=-1}else{if(b>>>0>s>>>0|b>>>0==s>>>0&p>>>0>q>>>0){u=1;break}n=f|0;v=c[n>>2]|0;w=c[n+4>>2]|0;n=h|0;x=c[n>>2]|0;y=c[n+4>>2]|0;if(w>>>0<y>>>0|w>>>0==y>>>0&v>>>0<x>>>0){u=-1;break}u=(w>>>0>y>>>0|w>>>0==y>>>0&v>>>0>x>>>0)&1}}while(0);r=ag(c[o>>2]|0,u)|0;i=e;return r|0}}while(0);r=ag(c[o>>2]|0,t)|0;i=e;return r|0}function zz(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;if((a[b+36|0]&1)!=0){f=c[b+32>>2]|0;g=b|0;h=Li(f,(f|0)<0|0?-1:0,c[g>>2]|0,c[g+4>>2]|0)|0;g=K;if((g|0)>(e|0)|(g|0)==(e|0)&h>>>0>d>>>0){i=1;return i|0}i=((g|0)<(e|0)|(g|0)==(e|0)&h>>>0<d>>>0)<<31>>31;return i|0}h=0;do{if((e|0)>(h|0)|(e|0)==(h|0)&d>>>0>0>>>0){g=c[b+32>>2]|0;if((g|0)<1){i=-1}else{j=e;k=d;l=g;break}return i|0}else{g=0;f=c[b+32>>2]|0;if(!((e|0)<(g|0)|(e|0)==(g|0)&d>>>0<0>>>0)){i=f;return i|0}if((f|0)>-1){i=1;return i|0}else{g=K9(0,0,d,e)|0;j=K;k=g;l=f;break}}}while(0);e=b+24|0;d=c[e>>2]|0;h=c[e+4>>2]|0;e=0;f=(h|0)<(e|0)|(h|0)==(e|0)&d>>>0<0>>>0;e=b+16|0;g=c[e>>2]|0;m=c[e+4>>2]|0;if(f){e=K9(0,0,g,m)|0;n=K;o=K8((g|0)==0&(m|0)==0&1,0,~d,~h)|0;p=n;q=e;r=K;s=o}else{p=m;q=g;r=h;s=d}d=0;if((j|0)<(d|0)|(j|0)==(d|0)&k>>>0<0>>>0){d=K9(0,0,k,j)|0;t=f^1;u=K;v=d}else{t=f;u=j;v=k}k=q|0;q=p&0;j=v|0;f=u&0;d=Li(j,f,k,q)|0;h=K;g=u;m=0;o=Li(g,m,k,q)|0;q=K;k=p;p=0;e=Li(j,f,k,p)|0;f=K;j=Li(g,m,k,p)|0;p=K;k=K8(o|0,q&0,e|0,f&0)|0;e=K;o=K5(d|0,h|0,0,k|0)|0;k=o;o=K;h=L&1;d=Li(v,u,s,r)|0;r=K8(j,p,d,K)|0;d=K8(r,K,q,0)|0;q=K8(d,K,f,0)|0;f=K8(q,K,h,0)|0;h=K8(f,K,e,0)|0;e=K;if(t){t=K9(0,0,k,o)|0;f=K;q=K8((k|0)==0&(o|0)==0&1,0,~h,~e)|0;w=f;x=t;y=K;z=q}else{w=o;x=k;y=e;z=h}h=b+8|0;e=c[h>>2]|0;k=c[h+4>>2]|0;do{if(k>>>0<y>>>0|k>>>0==y>>>0&e>>>0<z>>>0){A=-1}else{if(k>>>0>y>>>0|k>>>0==y>>>0&e>>>0>z>>>0){A=1;break}h=b|0;o=c[h>>2]|0;q=c[h+4>>2]|0;if(q>>>0<w>>>0|q>>>0==w>>>0&o>>>0<x>>>0){A=-1;break}A=(q>>>0>w>>>0|q>>>0==w>>>0&o>>>0>x>>>0)&1}}while(0);i=ag(l,A)|0;return i|0}function zA(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0;f=i;g=a;a=i;i=i+16|0;c[a>>2]=c[g>>2];c[a+4>>2]=c[g+4>>2];c[a+8>>2]=c[g+8>>2];c[a+12>>2]=c[g+12>>2];g=b;b=i;i=i+16|0;c[b>>2]=c[g>>2];c[b+4>>2]=c[g+4>>2];c[b+8>>2]=c[g+8>>2];c[b+12>>2]=c[g+12>>2];g=a|0;h=c[g+4>>2]|0;j=a+8|0;a=b|0;k=c[a+4>>2]|0;l=b+8|0;b=c[g>>2]|0;g=h&0;m=c[a>>2]|0;a=k&0;n=Li(m,a,b,g)|0;o=K;p=k;k=0;q=Li(p,k,b,g)|0;r=K;s=h;h=0;t=Li(m,a,s,h)|0;u=K;v=Li(p,k,s,h)|0;w=K;x=K8(q|0,r&0,t|0,u&0)|0;t=K;q=K8(r,0,v,w)|0;w=K8(q,K,u,0)|0;u=K;q=K5(n|0,o|0,0,x|0)|0;x=q;q=K;o=K8(w,u,L&1,0)|0;u=K8(o,K,t,0)|0;t=K;o=c[l+4>>2]|0;w=c[l>>2]|0;l=o&0;n=Li(w,l,b,g)|0;v=K;r=o;o=0;y=Li(r,o,b,g)|0;g=K;b=Li(w,l,s,h)|0;z=K;A=Li(r,o,s,h)|0;h=K;s=K8(y|0,g&0,b|0,z&0)|0;b=K;y=K8(g,0,A,h)|0;h=K8(y,K,z,0)|0;z=K;y=K5(n|0,v|0,0,s|0)|0;s=K;v=K8(h,z,L&1,0)|0;z=K8(v,K,b,0)|0;b=K;v=c[j+4>>2]|0;h=c[j>>2]|0;j=v&0;n=Li(h,j,m,a)|0;A=K;g=Li(h,j,p,k)|0;B=K;C=v;v=0;D=Li(C,v,m,a)|0;a=K;m=Li(C,v,p,k)|0;k=K;p=K8(g|0,B&0,D|0,a&0)|0;D=K;g=K8(B,0,m,k)|0;k=K8(g,K,a,0)|0;a=K;g=K5(n|0,A|0,0,p|0)|0;p=K;A=K8(k,a,L&1,0)|0;a=K8(A,K,D,0)|0;D=K;A=Li(h,j,w,l)|0;k=K;n=Li(h,j,r,o)|0;j=K;h=Li(C,v,w,l)|0;l=K;w=Li(C,v,r,o)|0;o=K;r=K8(n|0,j&0,h|0,l&0)|0;h=K;n=K8(j,0,w,o)|0;o=K8(n,K,l,0)|0;l=K;n=K5(A|0,k|0,0,r|0)|0;r=K;k=L&1;A=K5(y|0,s|0,g|0,p|0)|0;p=K;g=L&1;s=K5(n|0,r|0,z|0,b|0)|0;b=L&1;z=K5(s|0,K|0,a|0,D|0)|0;D=L&1;a=K5(z|0,K|0,g|0,0)|0;g=a;a=K;z=L&1;s=K8(o,l,k,0)|0;k=K8(s,K,h,0)|0;h=K8(k,K,b,0)|0;b=K8(h,K,D,0)|0;D=K8(b,K,z,0)|0;z=K;b=K5(u|0,t|0,A|0,p|0)|0;p=b;b=K;if(!L){E=a;F=g;G=z;H=D;I=d|0;J=I|0;c[J>>2]=x;M=I+4|0;c[M>>2]=q;N=d+8|0;O=N|0;c[O>>2]=p;P=N+4|0;c[P>>2]=b;Q=e|0;R=Q|0;c[R>>2]=F;S=Q+4|0;c[S>>2]=E;T=e+8|0;U=T|0;c[U>>2]=H;V=T+4|0;c[V>>2]=G;i=f;return}A=K8(g,a,1,0)|0;a=K;g=K8(D,z,(A|0)==0&(a|0)==0&1,0)|0;E=a;F=A;G=K;H=g;I=d|0;J=I|0;c[J>>2]=x;M=I+4|0;c[M>>2]=q;N=d+8|0;O=N|0;c[O>>2]=p;P=N+4|0;c[P>>2]=b;Q=e|0;R=Q|0;c[R>>2]=F;S=Q+4|0;c[S>>2]=E;T=e+8|0;U=T|0;c[U>>2]=H;V=T+4|0;c[V>>2]=G;i=f;return}function zB(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;b=a+8|0;d=c[b>>2]|0;do{if((d|0)==0){e=a+4|0;f=c[e>>2]|0;if((f|0)==0){g=zv(12,16)|0;if((g|0)==0){h=0}else{i=c[a+12>>2]|0;c[g+4>>2]=i;c[g+8>>2]=0;c[g>>2]=zv(i*24|0,16)|0;h=g}g=a|0;c[h+8>>2]=c[g>>2];c[g>>2]=h;j=h}else{c[e>>2]=c[f+8>>2];j=f}f=j|0;e=j+4|0;g=c[e>>2]|0;if((g|0)>0){i=c[f>>2]|0;k=0;l=g;while(1){g=k+1|0;m=i+24|0;c[i>>2]=(g|0)<(l|0)?m:0;n=c[e>>2]|0;if((g|0)<(n|0)){i=m;k=g;l=n}else{break}}}l=c[f>>2]|0;c[b>>2]=c[l>>2];if((l|0)==0){o=0}else{p=l;break}return o|0}else{c[b>>2]=c[d>>2];p=d}}while(0);K1(p|0,0,24)|0;o=p;return o|0}function zC(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0;a=b+12|0;g=c[a>>2]|0;h=c[d+8>>2]|0;L1:do{if((c[g+88>>2]|0)==(c[h+88>>2]|0)){if((c[g+92>>2]|0)!=(c[h+92>>2]|0)){break}i=c[h+4>>2]|0;if((i|0)==(h|0)){c[e>>2]=g;j=c[h+8>>2]|0;if((j|0)==0){k=0;l=h;c[f>>2]=l;return k|0}k=0;l=c[j+12>>2]|0;c[f>>2]=l;return k|0}j=c[h>>2]|0;c[i>>2]=j;c[j+4>>2]=i;m=d|0;L11:do{if((h|0)==(c[m>>2]|0)){n=c[j+88>>2]|0;o=c[i+88>>2]|0;do{if((n|0)>=(o|0)){if((n|0)==(o|0)){if((c[j+92>>2]|0)<(c[i+92>>2]|0)){break}}c[m>>2]=i;break L11}}while(0);c[m>>2]=j}}while(0);m=d+4|0;if((h|0)!=(c[m>>2]|0)){break}o=c[j+88>>2]|0;n=c[i+88>>2]|0;do{if((o|0)<=(n|0)){if((o|0)==(n|0)){if((c[j+92>>2]|0)>(c[i+92>>2]|0)){break}}c[m>>2]=i;break L1}}while(0);c[m>>2]=j}}while(0);h=b+4|0;g=d+4|0;i=b|0;b=d|0;n=0;o=1;p=0;q=0;r=c[g>>2]|0;s=c[h>>2]|0;while(1){t=c[s+88>>2]|0;u=ag((c[r+88>>2]|0)-t|0,o)|0;L30:do{if((u|0)>0){v=(n|0)!=0;w=s;x=r;y=u;z=c[r+92>>2]|0;while(1){A=x+88|0;B=w+88|0;C=c[w+92>>2]|0;D=z-C|0;E=c[(v?w|0:w+4|0)>>2]|0;L88:do{if((E|0)==(w|0)){F=y;G=w;H=B;I=D}else{J=A|0;K=y;L=w;M=B;N=C;O=D;P=E;while(1){Q=c[P+88>>2]|0;R=ag(Q-(c[M>>2]|0)|0,o)|0;S=c[P+92>>2]|0;T=S-N|0;if((T|0)>=1){F=K;G=L;H=M;I=O;break L88}if((R|0)!=0){if((R|0)>=0){F=K;G=L;H=M;I=O;break L88}if((ag(T,K)|0)>(ag(R,O)|0)){F=K;G=L;H=M;I=O;break L88}}R=ag((c[J>>2]|0)-Q|0,o)|0;Q=P+88|0;T=z-S|0;U=c[(v?P|0:P+4|0)>>2]|0;if((U|0)==(P|0)){F=R;G=P;H=Q;I=T;break}else{K=R;L=P;M=Q;N=S;O=T;P=U}}}}while(0);E=c[(v?x|0:x+4|0)>>2]|0;if((E|0)==(x|0)){V=G;W=x;break L30}D=c[E+88>>2]|0;C=ag(D-(c[A>>2]|0)|0,o)|0;B=c[E+92>>2]|0;P=B-z|0;O=ag(D-(c[H>>2]|0)|0,o)|0;if(!((O|0)>0&(P|0)<0)){V=G;W=x;break L30}if((C|0)==0){w=G;x=E;y=O;z=B;continue}if((C|0)>=0){V=G;W=x;break L30}if((ag(P,F)|0)<(ag(C,I)|0)){w=G;x=E;y=O;z=B}else{V=G;W=x;break}}}else{if((u|0)>=0){x=c[s+92>>2]|0;z=(n|0)!=0;L34:do{if(z){y=s;w=x;while(1){v=c[y>>2]|0;if((v|0)==(s|0)){X=y;break L34}if((c[v+88>>2]|0)!=(t|0)){X=y;break L34}B=c[v+92>>2]|0;if((B|0)>(w|0)){X=y;break}else{y=v;w=B}}}else{w=s;y=x;while(1){A=c[w+4>>2]|0;if((A|0)==(s|0)){X=w;break L34}if((c[A+88>>2]|0)!=(t|0)){X=w;break L34}B=c[A+92>>2]|0;if((B|0)>(y|0)){X=w;break}else{w=A;y=B}}}}while(0);x=c[r+92>>2]|0;if(z){y=r;w=x;while(1){B=c[y+4>>2]|0;if((B|0)==(r|0)){V=X;W=y;break L30}if((c[B+88>>2]|0)!=(t|0)){V=X;W=y;break L30}A=c[B+92>>2]|0;if((A|0)<(w|0)){V=X;W=y;break L30}else{y=B;w=A}}}else{w=r;y=x;while(1){z=c[w>>2]|0;if((z|0)==(r|0)){V=X;W=w;break L30}if((c[z+88>>2]|0)!=(t|0)){V=X;W=w;break L30}A=c[z+92>>2]|0;if((A|0)<(y|0)){V=X;W=w;break L30}else{w=z;y=A}}}}y=c[r+92>>2]|0;w=c[s+92>>2]|0;if((n|0)==0){x=s;A=r;z=u;B=y;v=w;while(1){O=c[A>>2]|0;E=(O|0)==(A|0);C=A+88|0;P=O+88|0;D=O+92|0;N=x;M=z;L=v;L57:while(1){Y=N+88|0;K=B-L|0;do{if(!E){Z=c[P>>2]|0;J=ag(Z-(c[C>>2]|0)|0,o)|0;_=c[D>>2]|0;U=_-B|0;if((U|0)<=-1){break}if((J|0)==0){break L57}if((J|0)>=0){break}if((ag(U,M)|0)<=(ag(J,K)|0)){break L57}}}while(0);J=c[N>>2]|0;if((J|0)==(N|0)){V=N;W=A;break L30}U=c[J+88>>2]|0;T=ag(U-(c[Y>>2]|0)|0,o)|0;S=c[J+92>>2]|0;Q=S-L|0;R=ag((c[C>>2]|0)-U|0,o)|0;if(!((R|0)<0&(Q|0)>0)){V=N;W=A;break L30}if((T|0)==0){N=J;M=R;L=S;continue}if((T|0)>=0){V=N;W=A;break L30}if((ag(Q,M)|0)<(ag(T,K)|0)){N=J;M=R;L=S}else{V=N;W=A;break L30}}x=N;A=O;z=ag(Z-(c[Y>>2]|0)|0,o)|0;B=_;v=L}}else{v=s;B=r;z=u;A=y;x=w;while(1){M=c[B+4>>2]|0;C=(M|0)==(B|0);D=B+88|0;P=M+88|0;E=M+92|0;S=v;R=z;J=x;L72:while(1){$=S+88|0;T=A-J|0;do{if(!C){aa=c[P>>2]|0;Q=ag(aa-(c[D>>2]|0)|0,o)|0;ab=c[E>>2]|0;U=ab-A|0;if((U|0)<=-1){break}if((Q|0)==0){break L72}if((Q|0)>=0){break}if((ag(U,R)|0)<=(ag(Q,T)|0)){break L72}}}while(0);K=c[S+4>>2]|0;if((K|0)==(S|0)){V=S;W=B;break L30}Q=c[K+88>>2]|0;U=ag(Q-(c[$>>2]|0)|0,o)|0;ac=c[K+92>>2]|0;ad=ac-J|0;ae=ag((c[D>>2]|0)-Q|0,o)|0;if(!((ae|0)<0&(ad|0)>0)){V=S;W=B;break L30}if((U|0)==0){S=K;R=ae;J=ac;continue}if((U|0)>=0){V=S;W=B;break L30}if((ag(ad,R)|0)<(ag(U,T)|0)){S=K;R=ae;J=ac}else{V=S;W=B;break L30}}v=S;B=M;z=ag(aa-(c[$>>2]|0)|0,o)|0;A=ab;x=J}}}}while(0);if((n|0)==0){n=n+1|0;o=-1;p=W;q=V;r=c[b>>2]|0;s=c[i>>2]|0;continue}else{u=n+1|0;if((u|0)<2){n=u;o=o;p=p;q=q;r=W;s=V;continue}else{break}}}c[V+4>>2]=W;c[W>>2]=V;c[q>>2]=p;c[p+4>>2]=q;V=c[b>>2]|0;if((c[V+88>>2]|0)<(c[(c[i>>2]|0)+88>>2]|0)){c[i>>2]=V}V=c[g>>2]|0;if((c[V+88>>2]|0)>=(c[(c[h>>2]|0)+88>>2]|0)){c[h>>2]=V}c[a>>2]=c[d+12>>2];c[e>>2]=q;k=1;l=p;c[f>>2]=l;return k|0}function zD(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;f=i;i=i+16|0;g=f|0;h=d-b|0;L1:do{if((h|0)==1){j=c[(c[a+92>>2]|0)+(b<<2)>>2]|0}else if((h|0)==2){k=c[(c[a+92>>2]|0)+(b<<2)>>2]|0;l=k+112|0;m=c[k+88>>2]|0;n=c[k+200>>2]|0;o=(m|0)==(n|0);p=c[k+92>>2]|0;q=c[k+204>>2]|0;do{if(o){if((p|0)==(q|0)){if((c[k+96>>2]|0)==(c[k+208>>2]|0)){j=k;break L1}else{r=p}}else{r=q}s=(p|0)==(r|0);if(!(o&s)){t=r;u=s;v=10;break}s=(c[k+96>>2]|0)>(c[k+208>>2]|0);w=s?l:k;c[w>>2]=w;c[w+4>>2]=w;c[e>>2]=w;c[e+4>>2]=w;c[e+8>>2]=w;c[e+12>>2]=w;x=w;y=s?k:l}else{t=q;u=(p|0)==(q|0);v=10}}while(0);do{if((v|0)==10){q=p-t|0;c[k>>2]=l;c[k+4>>2]=l;c[l>>2]=k;c[k+116>>2]=k;s=(m-n|0)<0;do{if(s){v=12}else{if(o&(q|0)<0){v=12;break}c[e>>2]=l;c[e+4>>2]=k}}while(0);if((v|0)==12){c[e>>2]=k;c[e+4>>2]=l}w=e+8|0;if((q|0)<0|u&s){c[w>>2]=k;c[e+12>>2]=l;x=k;y=l;break}else{c[w>>2]=l;c[e+12>>2]=k;x=k;y=l;break}}}while(0);l=a+48|0;k=zB(l)|0;o=zB(l)|0;l=k+8|0;c[l>>2]=o;c[o+8>>2]=k;n=a+100|0;c[k+20>>2]=c[n>>2];c[o+20>>2]=c[n>>2];c[k+12>>2]=y;c[o+12>>2]=x;c[k+16>>2]=0;c[o+16>>2]=0;o=a+116|0;n=(c[o>>2]|0)+1|0;c[o>>2]=n;o=a+120|0;if((n|0)>(c[o>>2]|0)){c[o>>2]=n}c[k>>2]=k;c[k+4>>2]=k;c[x+8>>2]=k;k=c[l>>2]|0;c[k>>2]=k;c[k+4>>2]=k;c[y+8>>2]=k;i=f;return}else if((h|0)==0){K1(e|0,0,16)|0;i=f;return}else{k=((h|0)/2|0)+b|0;l=c[a+92>>2]|0;n=c[l+(k-1<<2)>>2]|0;o=c[n+88>>2]|0;m=c[n+92>>2]|0;p=c[n+96>>2]|0;n=k;while(1){if((n|0)>=(d|0)){break}w=c[l+(n<<2)>>2]|0;if((c[w+88>>2]|0)!=(o|0)){break}if((c[w+92>>2]|0)!=(m|0)){break}if((c[w+96>>2]|0)==(p|0)){n=n+1|0}else{break}}zD(a,b,k,e);K1(g|0,0,16)|0;zD(a,n,d,g);zE(a,e,g);i=f;return}}while(0);c[j+8>>2]=0;c[j>>2]=j;c[j+4>>2]=j;c[e>>2]=j;c[e+4>>2]=j;c[e+8>>2]=j;c[e+12>>2]=j;i=f;return}function zE(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ah=0,ai=0,aj=0,ak=0,al=0,am=0,an=0,ao=0,ap=0,aq=0,ar=0,as=0,at=0,au=0,av=0,aw=0,ax=0,ay=0,az=0,aA=0,aB=0,aC=0,aD=0,aE=0,aF=0,aG=0,aH=0,aI=0,aJ=0,aK=0,aL=0,aM=0,aN=0,aO=0,aP=0,aQ=0,aR=0,aS=0,aT=0,aU=0,aV=0,aW=0,aX=0,aY=0,aZ=0,a_=0,a$=0,a0=0,a1=0,a2=0,a3=0,a4=0,a5=0,a6=0,a7=0,a8=0,a9=0;e=i;i=i+160|0;f=e|0;g=e+8|0;h=e+16|0;j=e+24|0;k=e+32|0;l=e+48|0;m=e+72|0;n=e+96|0;o=e+120|0;p=e+144|0;q=e+152|0;if((c[d+4>>2]|0)==0){i=e;return}if((c[b+4>>2]|0)==0){r=b;s=d;c[r>>2]=c[s>>2];c[r+4>>2]=c[s+4>>2];c[r+8>>2]=c[s+8>>2];c[r+12>>2]=c[s+12>>2];i=e;return}s=a+100|0;c[s>>2]=(c[s>>2]|0)-1;c[f>>2]=0;c[g>>2]=0;r=zC(0,b,d,f,g)|0;d=c[g>>2]|0;if(r){r=c[f>>2]|0;b=c[d+88>>2]|0;t=c[r+88>>2]|0;u=b-t|0;v=c[d+92>>2]|0;w=c[r+92>>2]|0;x=v-w|0;y=c[d+96>>2]|0;z=c[r+96>>2]|0;A=y-z|0;B=x;C=(x|0)<0|0?-1:0;x=-u|0;D=x;E=(x|0)<0|0?-1:0;x=A;F=(A|0)<0|0?-1:0;A=K9(0,0,D,E)|0;G=Li(x,F,A,K)|0;A=K;H=Li(x,F,B,C)|0;F=K;x=Li(u,(u|0)<0|0?-1:0,D,E)|0;u=K;I=Li(B,C,B,C)|0;J=K9(x,u,I,K)|0;I=K;u=c[r+8>>2]|0;c[h>>2]=0;if((u|0)==0){L=0}else{x=K9(0,0,B,C)|0;M=K;N=u;O=0;while(1){P=c[N+12>>2]|0;Q=c[P+88>>2]|0;R=Q-t|0;S=c[P+92>>2]|0;T=S-w|0;U=c[P+96>>2]|0;P=R;V=(R|0)<0|0?-1:0;R=T;W=(T|0)<0|0?-1:0;T=Li(R,W,D,E)|0;X=K;Y=Li(P,V,x,M)|0;do{if((T|0)==(Y|0)&(X|0)==(K|0)){Z=U-z|0;_=Li(P,V,G,A)|0;$=K;aa=Li(R,W,H,F)|0;ab=K8(aa,K,_,$)|0;$=K;_=Li(Z,(Z|0)<0|0?-1:0,J,I)|0;Z=K8(ab,$,_,K)|0;_=K;$=0;if(!((_|0)>($|0)|(_|0)==($|0)&Z>>>0>0>>>0)){ac=O;break}if((O|0)!=0){Z=(c[O+4>>2]|0)==(N|0);if((c[O>>2]|0)==(N|0)){if(!Z){ac=O;break}$=c[O+12>>2]|0;_=c[(c[N+8>>2]|0)+12>>2]|0;ab=c[_+88>>2]|0;aa=c[_+92>>2]|0;ad=c[_+96>>2]|0;_=(c[$+96>>2]|0)-ad|0;ae=U-ad|0;ad=(ag(ae,(c[$+92>>2]|0)-aa|0)|0)-(ag(_,S-aa|0)|0)|0;aa=(ag(_,Q-ab|0)|0)-(ag(ae,(c[$+88>>2]|0)-ab|0)|0)|0;ab=Li(ad,(ad|0)<0|0?-1:0,B,C)|0;ad=K;$=Li(aa,(aa|0)<0|0?-1:0,D,E)|0;aa=K8(ab,ad,$,K)|0;$=K;ad=0;af=($|0)>(ad|0)|($|0)==(ad|0)&aa>>>0>0>>>0?2:1}else{af=Z&1}if((af|0)!=1){ac=O;break}}c[h>>2]=N;ac=N}else{ac=O}}while(0);Q=c[N>>2]|0;if((Q|0)==(u|0)){L=ac;break}else{N=Q;O=ac}}}ac=c[d+8>>2]|0;c[j>>2]=0;if((ac|0)==0){ah=0}else{O=K9(0,0,B,C)|0;N=K;u=ac;af=0;while(1){z=c[u+12>>2]|0;M=c[z+88>>2]|0;x=M-b|0;w=c[z+92>>2]|0;t=w-v|0;Q=c[z+96>>2]|0;z=x;S=(x|0)<0|0?-1:0;x=t;U=(t|0)<0|0?-1:0;t=Li(x,U,D,E)|0;W=K;R=Li(z,S,O,N)|0;L32:do{if((t|0)==(R|0)&(W|0)==(K|0)){V=Q-y|0;P=Li(z,S,G,A)|0;X=K;Y=Li(x,U,H,F)|0;T=K8(Y,K,P,X)|0;X=K;P=Li(V,(V|0)<0|0?-1:0,J,I)|0;V=K8(T,X,P,K)|0;P=K;X=0;if(!((P|0)>(X|0)|(P|0)==(X|0)&V>>>0>0>>>0)){ai=af;break}do{if((af|0)!=0){if((c[af>>2]|0)!=(u|0)){ai=af;break L32}if((c[af+4>>2]|0)!=(u|0)){break}V=c[af+12>>2]|0;X=c[(c[u+8>>2]|0)+12>>2]|0;P=c[X+88>>2]|0;T=c[X+92>>2]|0;Y=c[X+96>>2]|0;X=(c[V+96>>2]|0)-Y|0;Z=Q-Y|0;Y=(ag(Z,(c[V+92>>2]|0)-T|0)|0)-(ag(X,w-T|0)|0)|0;T=(ag(X,M-P|0)|0)-(ag(Z,(c[V+88>>2]|0)-P|0)|0)|0;P=Li(Y,(Y|0)<0|0?-1:0,B,C)|0;Y=K;V=Li(T,(T|0)<0|0?-1:0,D,E)|0;T=K8(P,Y,V,K)|0;V=K;Y=0;if(!((V|0)>(Y|0)|(V|0)==(Y|0)&T>>>0>0>>>0)){ai=af;break L32}}}while(0);c[j>>2]=u;ai=u}else{ai=af}}while(0);M=c[u>>2]|0;if((M|0)==(ac|0)){ah=ai;break}else{u=M;af=ai}}}do{if((L|0)==0&(ah|0)==0){aj=r;ak=d}else{zH(a,r,d,h,j,0,0);ai=c[h>>2]|0;if((ai|0)==0){al=r}else{af=c[ai+12>>2]|0;c[f>>2]=af;al=af}af=c[j>>2]|0;if((af|0)==0){aj=al;ak=d;break}ai=c[af+12>>2]|0;c[g>>2]=ai;aj=al;ak=ai}}while(0);am=c[ak+88>>2]|0;an=(c[ak+96>>2]|0)+1|0;ao=aj;ap=ak}else{am=(c[d+88>>2]|0)+1|0;an=c[d+96>>2]|0;ao=c[f>>2]|0;ap=d}d=k|0;ak=k+4|0;aj=k+8|0;al=k+12|0;j=l|0;r=l+8|0;h=l+16|0;ah=m|0;L=m+8|0;ai=m+16|0;af=n+16|0;u=n+8|0;ac=o+16|0;E=o+8|0;D=a+48|0;C=a+116|0;B=a+120|0;I=a+56|0;J=0;F=0;H=0;A=0;G=1;y=0;N=0;O=0;v=0;b=am;am=c[ap+92>>2]|0;M=an;an=ap;w=ao;while(1){Q=w+88|0;U=(c[an+88>>2]|0)-(c[Q>>2]|0)|0;x=w+92|0;S=(c[an+92>>2]|0)-(c[x>>2]|0)|0;z=w+96|0;W=(c[an+96>>2]|0)-(c[z>>2]|0)|0;c[d>>2]=U;c[ak>>2]=S;c[aj>>2]=W;c[al>>2]=-1;R=b-(c[Q>>2]|0)|0;Q=am-(c[x>>2]|0)|0;x=M-(c[z>>2]|0)|0;z=(ag(W,Q)|0)-(ag(S,x)|0)|0;t=z;T=(z|0)<0|0?-1:0;z=(ag(U,x)|0)-(ag(W,R)|0)|0;x=z;Y=(z|0)<0|0?-1:0;z=(ag(S,R)|0)-(ag(U,Q)|0)|0;Q=z;R=(z|0)<0|0?-1:0;c[j>>2]=t;c[j+4>>2]=T;c[r>>2]=x;c[r+4>>2]=Y;c[h>>2]=Q;c[h+4>>2]=R;z=S;V=(S|0)<0|0?-1:0;S=Li(Q,R,z,V)|0;P=K;Z=W;X=(W|0)<0|0?-1:0;W=Li(Z,X,x,Y)|0;aa=K9(S,P,W,K)|0;W=K;P=Li(t,T,Z,X)|0;X=K;Z=U;S=(U|0)<0|0?-1:0;U=Li(Z,S,Q,R)|0;R=K9(P,X,U,K)|0;U=K;X=Li(Z,S,x,Y)|0;Y=K;x=Li(t,T,z,V)|0;V=K9(X,Y,x,K)|0;c[ah>>2]=aa;c[ah+4>>2]=W;c[L>>2]=R;c[L+4>>2]=U;c[ai>>2]=V;c[ai+4>>2]=K;K1(n|0,0,20)|0;V=zG(a,0,w,k,l,m,n)|0;K1(o|0,0,20)|0;aq=c[g>>2]|0;U=zG(a,1,aq,k,l,m,o)|0;R=(V|0)!=0;W=R^1;aa=(U|0)==0;if(aa&W){ar=36;break}if(aa|W){as=R?-1:1}else{as=zx(n,o)|0}do{if(G){ar=47}else{if((as|0)>-1){if((c[ac>>2]|0)>=0){ar=47;break}if((c[E>>2]|0)==0&(c[E+4>>2]|0)==0){at=H;au=A;av=O;aw=v;break}else{ar=47;break}}else{if((c[af>>2]|0)>=0){ar=47;break}if((c[u>>2]|0)==0&(c[u+4>>2]|0)==0){at=H;au=A;av=O;aw=v;break}else{ar=47;break}}}}while(0);if((ar|0)==47){ar=0;R=c[f>>2]|0;W=zB(D)|0;aa=zB(D)|0;x=W+8|0;c[x>>2]=aa;c[aa+8>>2]=W;c[W+20>>2]=c[s>>2];c[aa+20>>2]=c[s>>2];c[W+12>>2]=aq;c[aa+12>>2]=R;c[W+16>>2]=0;c[aa+16>>2]=0;aa=(c[C>>2]|0)+1|0;c[C>>2]=aa;if((aa|0)>(c[B>>2]|0)){c[B>>2]=aa}if((A|0)==0){ax=W}else{c[A+4>>2]=W;ax=H}c[W>>2]=A;aa=c[x>>2]|0;if((v|0)==0){ay=aa}else{c[v>>2]=aa;ay=O}c[aa+4>>2]=v;at=ax;au=W;av=ay;aw=aa}c[p>>2]=V;c[q>>2]=U;if((as|0)==0){zH(a,c[f>>2]|0,c[g>>2]|0,p,q,0,0);az=c[q>>2]|0;ar=57}else{if((as|0)>-1){az=U;ar=57}else{aA=M;aB=am;aC=b;aD=aw;aE=av;aF=N;aG=y;aH=V;ar=76}}do{if((ar|0)==57){ar=0;if((az|0)==0){aI=y;aJ=N;aK=av;aL=aw;aM=b;aN=am;aO=M}else{aa=(y|0)!=0;do{if(aa){W=c[y>>2]|0;if((W|0)==(U|0)){break}else{aP=W}while(1){W=aP|0;x=c[W>>2]|0;R=c[aP+8>>2]|0;if((x|0)==(aP|0)){c[(c[R+12>>2]|0)+8>>2]=0}else{Y=aP+4|0;c[x+4>>2]=c[Y>>2];c[c[Y>>2]>>2]=x;c[(c[R+12>>2]|0)+8>>2]=x}Y=R|0;X=c[Y>>2]|0;if((X|0)==(R|0)){c[(c[aP+12>>2]|0)+8>>2]=0}else{z=R+4|0;c[X+4>>2]=c[z>>2];c[c[z>>2]>>2]=X;c[(c[aP+12>>2]|0)+8>>2]=X}K1(aP|0,0,20)|0;c[W>>2]=c[I>>2];c[I>>2]=aP;K1(R|0,0,20)|0;c[Y>>2]=c[I>>2];c[I>>2]=R;c[C>>2]=(c[C>>2]|0)-1;if((x|0)==(U|0)){break}else{aP=x}}}}while(0);if((aw|0)==0){aQ=aa?N:U;aR=av;aS=az}else{if(aa){c[y>>2]=av;c[av+4>>2]=y;aT=N;aU=U+4|0}else{x=U+4|0;R=c[x>>2]|0;c[R>>2]=av;c[av+4>>2]=R;aT=av;aU=x}c[aw>>2]=U;c[aU>>2]=aw;aQ=aT;aR=0;aS=c[q>>2]|0}x=c[g>>2]|0;R=c[x+88>>2]|0;Y=c[x+92>>2]|0;W=c[x+96>>2]|0;c[g>>2]=c[aS+12>>2];aI=c[aS+8>>2]|0;aJ=aQ;aK=aR;aL=0;aM=R;aN=Y;aO=W}if((as|0)>=1){aV=J;aW=F;aX=at;aY=au;aZ=aM;a_=aN;a$=aO;a0=aL;a1=aK;a2=aJ;a3=aI;break}aA=aO;aB=aN;aC=aM;aD=aL;aE=aK;aF=aJ;aG=aI;aH=c[p>>2]|0;ar=76}}while(0);do{if((ar|0)==76){ar=0;if((aH|0)==0){aV=J;aW=F;aX=at;aY=au;aZ=aC;a_=aB;a$=aA;a0=aD;a1=aE;a2=aF;a3=aG;break}U=(J|0)!=0;do{if(U){W=c[J+4>>2]|0;if((W|0)==(V|0)){break}else{a4=W}while(1){W=a4+4|0;Y=c[W>>2]|0;R=a4|0;x=c[R>>2]|0;X=c[a4+8>>2]|0;if((x|0)==(a4|0)){c[(c[X+12>>2]|0)+8>>2]=0}else{c[x+4>>2]=Y;c[c[W>>2]>>2]=x;c[(c[X+12>>2]|0)+8>>2]=x}x=X|0;W=c[x>>2]|0;if((W|0)==(X|0)){c[(c[a4+12>>2]|0)+8>>2]=0}else{z=X+4|0;c[W+4>>2]=c[z>>2];c[c[z>>2]>>2]=W;c[(c[a4+12>>2]|0)+8>>2]=W}K1(a4|0,0,20)|0;c[R>>2]=c[I>>2];c[I>>2]=a4;K1(X|0,0,20)|0;c[x>>2]=c[I>>2];c[I>>2]=X;c[C>>2]=(c[C>>2]|0)-1;if((Y|0)==(V|0)){break}else{a4=Y}}}}while(0);if((au|0)==0){a5=U?F:V;a6=at;a7=aH}else{if(U){c[at>>2]=J;c[J+4>>2]=at;a8=F;a9=V|0}else{aa=V|0;Y=c[aa>>2]|0;c[at>>2]=Y;c[Y+4>>2]=at;a8=at;a9=aa}c[a9>>2]=au;c[au+4>>2]=V;a5=a8;a6=0;a7=c[p>>2]|0}aa=c[f>>2]|0;Y=c[aa+88>>2]|0;X=c[aa+92>>2]|0;x=c[aa+96>>2]|0;c[f>>2]=c[a7+12>>2];aV=c[a7+8>>2]|0;aW=a5;aX=a6;aY=0;aZ=Y;a_=X;a$=x;a0=aD;a1=aE;a2=aF;a3=aG}}while(0);V=c[f>>2]|0;x=c[g>>2]|0;if((V|0)==(ao|0)&(x|0)==(ap|0)){break}else{J=aV;F=aW;H=aX;A=aY;G=0;y=a3;N=a2;O=a1;v=a0;b=aZ;am=a_;M=a$;an=x;w=V}}if((ar|0)==36){ar=c[f>>2]|0;w=zB(D)|0;an=zB(D)|0;D=w+8|0;c[D>>2]=an;c[an+8>>2]=w;c[w+20>>2]=c[s>>2];c[an+20>>2]=c[s>>2];c[w+12>>2]=aq;c[an+12>>2]=ar;c[w+16>>2]=0;c[an+16>>2]=0;an=(c[C>>2]|0)+1|0;c[C>>2]=an;if((an|0)>(c[B>>2]|0)){c[B>>2]=an}c[w>>2]=w;c[w+4>>2]=w;c[ar+8>>2]=w;w=c[D>>2]|0;c[w>>2]=w;c[w+4>>2]=w;c[aq+8>>2]=w;i=e;return}do{if((aV|0)==0){c[aX>>2]=aY;c[aY+4>>2]=aX;c[(c[f>>2]|0)+8>>2]=aY}else{w=aV+4|0;aq=c[w>>2]|0;if((aq|0)!=(aW|0)){D=aq;while(1){aq=D+4|0;ar=c[aq>>2]|0;an=D|0;B=c[an>>2]|0;s=c[D+8>>2]|0;if((B|0)==(D|0)){c[(c[s+12>>2]|0)+8>>2]=0}else{c[B+4>>2]=ar;c[c[aq>>2]>>2]=B;c[(c[s+12>>2]|0)+8>>2]=B}B=s|0;aq=c[B>>2]|0;if((aq|0)==(s|0)){c[(c[D+12>>2]|0)+8>>2]=0}else{a$=s+4|0;c[aq+4>>2]=c[a$>>2];c[c[a$>>2]>>2]=aq;c[(c[D+12>>2]|0)+8>>2]=aq}K1(D|0,0,20)|0;c[an>>2]=c[I>>2];c[I>>2]=D;K1(s|0,0,20)|0;c[B>>2]=c[I>>2];c[I>>2]=s;c[C>>2]=(c[C>>2]|0)-1;if((ar|0)==(aW|0)){break}else{D=ar}}}if((aY|0)==0){break}c[aX>>2]=aV;c[w>>2]=aX;c[aW>>2]=aY;c[aY+4>>2]=aW}}while(0);if((a3|0)==0){c[a0>>2]=a1;c[a1+4>>2]=a0;c[(c[g>>2]|0)+8>>2]=a0;i=e;return}g=a3|0;aW=c[g>>2]|0;if((aW|0)!=(a2|0)){aY=aW;while(1){aW=aY|0;aX=c[aW>>2]|0;aV=c[aY+8>>2]|0;if((aX|0)==(aY|0)){c[(c[aV+12>>2]|0)+8>>2]=0}else{f=aY+4|0;c[aX+4>>2]=c[f>>2];c[c[f>>2]>>2]=aX;c[(c[aV+12>>2]|0)+8>>2]=aX}f=aV|0;D=c[f>>2]|0;if((D|0)==(aV|0)){c[(c[aY+12>>2]|0)+8>>2]=0}else{ar=aV+4|0;c[D+4>>2]=c[ar>>2];c[c[ar>>2]>>2]=D;c[(c[aY+12>>2]|0)+8>>2]=D}K1(aY|0,0,20)|0;c[aW>>2]=c[I>>2];c[I>>2]=aY;K1(aV|0,0,20)|0;c[f>>2]=c[I>>2];c[I>>2]=aV;c[C>>2]=(c[C>>2]|0)-1;if((aX|0)==(a2|0)){break}else{aY=aX}}}if((a0|0)==0){i=e;return}c[g>>2]=a1;c[a1+4>>2]=a3;c[a0>>2]=a2;c[a2+4>>2]=a0;i=e;return}function zF(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;f=(c[a+4>>2]|0)==(b|0);if((c[a>>2]|0)!=(b|0)){g=f&1;return g|0}if(!f){g=2;return g|0}f=c[e+4>>2]|0;h=c[d+8>>2]|0;i=ag(h,f)|0;j=c[e+8>>2]|0;k=c[d+4>>2]|0;l=i-(ag(k,j)|0)|0;i=c[d>>2]|0;d=ag(i,j)|0;j=c[e>>2]|0;e=d-(ag(j,h)|0)|0;h=(ag(j,k)|0)-(ag(i,f)|0)|0;f=c[a+12>>2]|0;a=c[(c[b+8>>2]|0)+12>>2]|0;i=c[a+88>>2]|0;k=(c[f+88>>2]|0)-i|0;j=c[a+92>>2]|0;d=(c[f+92>>2]|0)-j|0;m=c[a+96>>2]|0;a=(c[f+96>>2]|0)-m|0;f=c[b+12>>2]|0;b=(c[f+88>>2]|0)-i|0;i=(c[f+92>>2]|0)-j|0;j=(c[f+96>>2]|0)-m|0;m=(ag(j,d)|0)-(ag(i,a)|0)|0;f=(ag(b,a)|0)-(ag(j,k)|0)|0;j=(ag(i,k)|0)-(ag(b,d)|0)|0;d=Li(m,(m|0)<0|0?-1:0,l,(l|0)<0|0?-1:0)|0;l=K;m=Li(f,(f|0)<0|0?-1:0,e,(e|0)<0|0?-1:0)|0;e=K;f=Li(j,(j|0)<0|0?-1:0,h,(h|0)<0|0?-1:0)|0;h=K8(d,l,f,K)|0;f=K8(h,K,m,e)|0;e=K;m=0;g=(e|0)>(m|0)|(e|0)==(m|0)&f>>>0>0>>>0?2:1;return g|0}function zG(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0;j=i;i=i+40|0;k=j|0;l=j+16|0;m=d+8|0;n=c[m>>2]|0;if((n|0)==0){o=0;i=j;return o|0}p=a+100|0;a=d+88|0;q=d+92|0;r=d+96|0;d=k|0;s=k+4|0;t=k+8|0;u=k+12|0;v=g|0;w=g+8|0;x=g+16|0;g=f|0;y=f+8|0;z=f+16|0;f=l+16|0;A=l|0;B=l+8|0;C=h;D=l;E=0;F=n;while(1){do{if((c[F+20>>2]|0)>(c[p>>2]|0)){n=c[F+12>>2]|0;G=(c[n+88>>2]|0)-(c[a>>2]|0)|0;H=(c[n+92>>2]|0)-(c[q>>2]|0)|0;I=(c[n+96>>2]|0)-(c[r>>2]|0)|0;c[d>>2]=G;c[s>>2]=H;c[t>>2]=I;c[u>>2]=-1;n=G;J=(G|0)<0|0?-1:0;G=Li(n,J,c[v>>2]|0,c[v+4>>2]|0)|0;L=K;M=H;N=(H|0)<0|0?-1:0;H=Li(M,N,c[w>>2]|0,c[w+4>>2]|0)|0;O=K8(H,K,G,L)|0;L=K;G=I;H=(I|0)<0|0?-1:0;I=Li(G,H,c[x>>2]|0,c[x+4>>2]|0)|0;P=K8(O,L,I,K)|0;I=K;L=Li(c[g>>2]|0,c[g+4>>2]|0,n,J)|0;J=K;n=Li(c[y>>2]|0,c[y+4>>2]|0,M,N)|0;N=K8(n,K,L,J)|0;J=K;L=Li(c[z>>2]|0,c[z+4>>2]|0,G,H)|0;H=K8(N,J,L,K)|0;L=K;J=0;do{if((I|0)>(J|0)|(I|0)==(J|0)&P>>>0>0>>>0){c[f>>2]=1;c[A>>2]=P;c[A+4>>2]=I;Q=1}else{N=0;if((I|0)<(N|0)|(I|0)==(N|0)&P>>>0<0>>>0){c[f>>2]=-1;N=K9(0,0,P,I)|0;c[A>>2]=N;c[A+4>>2]=K;Q=-1;break}else{c[f>>2]=0;c[A>>2]=0;c[A+4>>2]=0;Q=0;break}}}while(0);I=0;do{if((L|0)>(I|0)|(L|0)==(I|0)&H>>>0>0>>>0){c[B>>2]=H;c[B+4>>2]=L;R=Q;S=L;T=H}else{P=0;if((L|0)<(P|0)|(L|0)==(P|0)&H>>>0<0>>>0){P=-Q|0;c[f>>2]=P;J=K9(0,0,H,L)|0;N=K;c[B>>2]=J;c[B+4>>2]=N;R=P;S=N;T=J;break}else{c[B>>2]=0;c[B+4>>2]=0;R=Q;S=0;T=0;break}}}while(0);if((R|0)==0&((T|0)==0&(S|0)==0)){U=E;break}if((E|0)==0){c[C>>2]=c[D>>2];c[C+4>>2]=c[D+4>>2];c[C+8>>2]=c[D+8>>2];c[C+12>>2]=c[D+12>>2];c[C+16>>2]=c[D+16>>2];U=F;break}L=zx(l,h)|0;if((L|0)<0){c[C>>2]=c[D>>2];c[C+4>>2]=c[D+4>>2];c[C+8>>2]=c[D+8>>2];c[C+12>>2]=c[D+12>>2];c[C+16>>2]=c[D+16>>2];U=F;break}if((L|0)!=0){U=E;break}L=(zF(E,F,e,k)|0)==2^b;U=L?E:F}else{U=E}}while(0);L=c[F>>2]|0;if((L|0)==(c[m>>2]|0)){o=U;break}else{E=U;F=L}}i=j;return o|0}function zH(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ah=0,ai=0,aj=0,ak=0,al=0,am=0,an=0,ao=0,ap=0,aq=0,ar=0,as=0,at=0,au=0,av=0,aw=0,ax=0,ay=0,az=0,aA=0,aB=0,aC=0,aD=0,aE=0,aF=0,aG=0,aH=0,aI=0,aJ=0,aK=0,aL=0,aM=0,aN=0,aO=0,aP=0,aQ=0,aR=0,aS=0,aT=0,aU=0,aV=0,aW=0,aX=0,aY=0,aZ=0,a_=0,a$=0,a0=0,a1=0,a2=0,a3=0,a4=0,a5=0,a6=0,a7=0,a8=0,a9=0,ba=0,bb=0,bc=0,bd=0;j=i;i=i+192|0;k=j|0;l=j+24|0;m=j+48|0;n=j+72|0;o=j+96|0;p=j+120|0;q=j+144|0;r=j+168|0;s=c[e>>2]|0;t=c[f>>2]|0;u=(s|0)!=0;if(u){v=c[s+12>>2]|0}else{v=b}w=c[v+88>>2]|0;x=c[v+92>>2]|0;y=c[v+96>>2]|0;if((t|0)==0){z=d}else{z=c[t+12>>2]|0}v=c[z+88>>2]|0;A=c[z+92>>2]|0;B=c[z+96>>2]|0;z=c[b+88>>2]|0;C=(c[d+88>>2]|0)-z|0;D=c[b+92>>2]|0;E=(c[d+92>>2]|0)-D|0;F=c[b+96>>2]|0;b=(c[d+96>>2]|0)-F|0;d=c[(u?s:t)+12>>2]|0;u=(c[d+88>>2]|0)-z|0;G=(c[d+92>>2]|0)-D|0;H=(c[d+96>>2]|0)-F|0;d=(ag(G,b)|0)-(ag(H,E)|0)|0;I=d;J=(d|0)<0|0?-1:0;d=(ag(H,C)|0)-(ag(u,b)|0)|0;H=d;L=(d|0)<0|0?-1:0;d=(ag(u,E)|0)-(ag(G,C)|0)|0;G=d;u=(d|0)<0|0?-1:0;d=Li(I,J,z,(z|0)<0|0?-1:0)|0;z=K;M=Li(H,L,D,(D|0)<0|0?-1:0)|0;D=K;N=Li(G,u,F,(F|0)<0|0?-1:0)|0;F=K8(d,z,N,K)|0;N=K8(F,K,M,D)|0;D=K;M=E;F=(E|0)<0|0?-1:0;z=Li(G,u,M,F)|0;d=K;O=b;P=(b|0)<0|0?-1:0;Q=Li(H,L,O,P)|0;R=K9(z,d,Q,K)|0;Q=K;d=Li(I,J,O,P)|0;P=K;O=C;z=(C|0)<0|0?-1:0;S=Li(G,u,O,z)|0;T=K9(d,P,S,K)|0;S=K;P=Li(H,L,O,z)|0;z=K;O=Li(I,J,M,F)|0;F=K9(P,z,O,K)|0;O=K;z=Li(R,Q,w,(w|0)<0|0?-1:0)|0;P=K;M=Li(T,S,x,(x|0)<0|0?-1:0)|0;d=K8(M,K,z,P)|0;P=K;z=Li(F,O,y,(y|0)<0|0?-1:0)|0;M=K8(d,P,z,K)|0;z=K;if((s|0)==0){U=z;V=M;W=w;X=x;Y=y;Z=t}else{L9:do{if((c[s+12>>2]|0)==(g|0)){_=y;$=x;aa=w;ab=z;ac=M}else{P=a+100|0;d=y;ad=x;ae=w;af=z;ah=M;ai=s;while(1){aj=c[(c[ai+8>>2]|0)+4>>2]|0;ak=aj+12|0;al=c[ak>>2]|0;am=c[al+88>>2]|0;an=am;ao=(am|0)<0|0?-1:0;am=Li(an,ao,I,J)|0;ap=K;aq=c[al+92>>2]|0;ar=aq;as=(aq|0)<0|0?-1:0;aq=Li(ar,as,H,L)|0;at=K8(aq,K,am,ap)|0;ap=K;am=c[al+96>>2]|0;al=am;aq=(am|0)<0|0?-1:0;am=Li(al,aq,G,u)|0;au=K8(at,ap,am,K)|0;am=K;if((am|0)<(D|0)|(am|0)==(D|0)&au>>>0<N>>>0){_=d;$=ad;aa=ae;ab=af;ac=ah;break L9}if((c[aj+20>>2]|0)==(c[P>>2]|0)){_=d;$=ad;aa=ae;ab=af;ac=ah;break L9}au=Li(an,ao,R,Q)|0;ao=K;an=Li(ar,as,T,S)|0;as=K8(an,K,au,ao)|0;ao=K;au=Li(al,aq,F,O)|0;aq=K8(as,ao,au,K)|0;au=K;if(!((au|0)>(af|0)|(au|0)==(af|0)&aq>>>0>ah>>>0)){_=d;$=ad;aa=ae;ab=af;ac=ah;break L9}c[e>>2]=aj;ao=c[ak>>2]|0;ak=c[ao+88>>2]|0;as=c[ao+92>>2]|0;al=c[ao+96>>2]|0;if((ao|0)==(g|0)){_=al;$=as;aa=ak;ab=au;ac=aq;break}else{d=al;ad=as;ae=ak;af=au;ah=aq;ai=aj}}}}while(0);U=ab;V=ac;W=aa;X=$;Y=_;Z=c[f>>2]|0}_=Li(R,Q,v,(v|0)<0|0?-1:0)|0;$=K;aa=Li(T,S,A,(A|0)<0|0?-1:0)|0;ac=K8(aa,K,_,$)|0;$=K;_=Li(F,O,B,(B|0)<0|0?-1:0)|0;aa=K8(ac,$,_,K)|0;_=K;L18:do{if((Z|0)==0){av=_;aw=aa;ax=v;ay=A;az=B;aA=0}else{if((c[Z+12>>2]|0)==(h|0)){av=_;aw=aa;ax=v;ay=A;az=B;aA=Z;break}$=a+100|0;ac=B;ab=A;M=v;z=_;w=aa;x=Z;while(1){y=c[c[x+8>>2]>>2]|0;ai=y+12|0;ah=c[ai>>2]|0;af=c[ah+88>>2]|0;ae=af;ad=(af|0)<0|0?-1:0;af=Li(ae,ad,I,J)|0;d=K;P=c[ah+92>>2]|0;aj=P;aq=(P|0)<0|0?-1:0;P=Li(aj,aq,H,L)|0;au=K8(P,K,af,d)|0;d=K;af=c[ah+96>>2]|0;ah=af;P=(af|0)<0|0?-1:0;af=Li(ah,P,G,u)|0;ak=K8(au,d,af,K)|0;af=K;if((af|0)<(D|0)|(af|0)==(D|0)&ak>>>0<N>>>0){av=z;aw=w;ax=M;ay=ab;az=ac;aA=x;break L18}if((c[y+20>>2]|0)==(c[$>>2]|0)){av=z;aw=w;ax=M;ay=ab;az=ac;aA=x;break L18}ak=Li(ae,ad,R,Q)|0;ad=K;ae=Li(aj,aq,T,S)|0;aq=K8(ae,K,ak,ad)|0;ad=K;ak=Li(ah,P,F,O)|0;P=K8(aq,ad,ak,K)|0;ak=K;if(!((ak|0)>(z|0)|(ak|0)==(z|0)&P>>>0>w>>>0)){av=z;aw=w;ax=M;ay=ab;az=ac;aA=x;break L18}c[f>>2]=y;ad=c[ai>>2]|0;ai=c[ad+88>>2]|0;aq=c[ad+92>>2]|0;ah=c[ad+96>>2]|0;if((ad|0)==(h|0)){av=ak;aw=P;ax=ai;ay=aq;az=ah;aA=y;break}else{ac=ah;ab=aq;M=ai;z=ak;w=P;x=y}}}}while(0);N=K9(aw,av,V,U)|0;U=K;V=0;if((U|0)>(V|0)|(U|0)==(V|0)&N>>>0>0>>>0){V=a+100|0;av=K9(0,0,G,u)|0;aw=K;D=m+16|0;Z=m|0;aa=m+8|0;_=n+16|0;v=n|0;A=n+8|0;B=k+16|0;x=k|0;w=k+8|0;z=l+16|0;M=l|0;ab=l+8|0;ac=U;$=N;y=ax;P=ay;ak=az;ai=W;aq=X;ah=Y;L29:while(1){ad=ac;ae=$;aj=y;af=P;d=ak;L31:while(1){au=(ag(af-aq|0,E)|0)+(ag(d-ah|0,b)|0)+(ag(aj-ai|0,C)|0)|0;as=au;al=(au|0)<0|0?-1:0;aB=c[e>>2]|0;do{if((aB|0)!=0){if((c[aB+12>>2]|0)==(g|0)){break}aC=c[(c[aB>>2]|0)+8>>2]|0;if((c[aC+20>>2]|0)<=(c[V>>2]|0)){break}ao=c[aC+12>>2]|0;aD=c[ao+88>>2]|0;an=aD-ai|0;aE=c[ao+92>>2]|0;ar=aE-aq|0;aF=c[ao+96>>2]|0;ao=aF-ah|0;am=Li(an,(an|0)<0|0?-1:0,R,Q)|0;ap=K;at=Li(ar,(ar|0)<0|0?-1:0,T,S)|0;aG=K8(at,K,am,ap)|0;ap=K;am=Li(ao,(ao|0)<0|0?-1:0,F,O)|0;at=K8(aG,ap,am,K)|0;am=K;ap=(ag(ar,E)|0)+(ag(an,C)|0)+(ag(ao,b)|0)|0;ao=ap;an=(ap|0)<0|0?-1:0;if((at|0)==0&(am|0)==0){if((ap|0)<0){break L31}else{break}}ar=0;if(!((am|0)<(ar|0)|(am|0)==(ar|0)&at>>>0<0>>>0)){break}do{if((ap|0)>0){c[B>>2]=1;c[x>>2]=ao;c[x+4>>2]=an;aH=1}else{if((ap|0)<0){c[B>>2]=-1;ar=K9(0,0,ao,an)|0;c[x>>2]=ar;c[x+4>>2]=K;aH=-1;break}else{c[B>>2]=0;c[x>>2]=0;c[x+4>>2]=0;aH=0;break}}}while(0);an=0;if((am|0)>(an|0)|(am|0)==(an|0)&at>>>0>0>>>0){aI=am;aJ=at}else{c[B>>2]=-aH;an=K9(0,0,at,am)|0;aI=K;aJ=an}c[w>>2]=aJ;c[w+4>>2]=aI;do{if((au|0)>0){c[z>>2]=1;c[M>>2]=as;c[M+4>>2]=al;aK=1}else{if((au|0)<0){c[z>>2]=-1;an=K9(0,0,as,al)|0;c[M>>2]=an;c[M+4>>2]=K;aK=-1;break}else{c[z>>2]=0;c[M>>2]=0;c[M+4>>2]=0;aK=0;break}}}while(0);am=0;do{if((ad|0)>(am|0)|(ad|0)==(am|0)&ae>>>0>0>>>0){c[ab>>2]=ae;c[ab+4>>2]=ad}else{at=0;if((ad|0)<(at|0)|(ad|0)==(at|0)&ae>>>0<0>>>0){c[z>>2]=-aK;at=K9(0,0,ae,ad)|0;c[ab>>2]=at;c[ab+4>>2]=K;break}else{c[ab>>2]=0;c[ab+4>>2]=0;break}}}while(0);if((zx(k,l)|0)>-1){break L31}}}while(0);am=c[f>>2]|0;if((am|0)==0){aL=135;break L29}if((c[am+12>>2]|0)==(h|0)){aL=136;break L29}at=c[c[am+8>>2]>>2]|0;if((c[at+20>>2]|0)<=(c[V>>2]|0)){aL=137;break L29}am=at+12|0;an=c[am>>2]|0;ao=c[an+88>>2]|0;ap=ao-aj|0;ar=c[an+92>>2]|0;aG=ar-af|0;aM=c[an+96>>2]|0;an=aM-d|0;aN=ap;aO=(ap|0)<0|0?-1:0;aP=Li(aN,aO,I,J)|0;aQ=K;aR=aG;aS=(aG|0)<0|0?-1:0;aT=Li(aR,aS,H,L)|0;aU=K8(aT,K,aP,aQ)|0;aQ=K;aP=an;aT=(an|0)<0|0?-1:0;aV=Li(aP,aT,av,aw)|0;if(!((aU|0)==(aV|0)&(aQ|0)==(K|0))){aL=138;break L29}aQ=Li(aN,aO,R,Q)|0;aO=K;aN=Li(aR,aS,T,S)|0;aS=K8(aN,K,aQ,aO)|0;aO=K;aQ=Li(aP,aT,F,O)|0;aT=K8(aS,aO,aQ,K)|0;aQ=K;aO=(ag(aG,E)|0)+(ag(ap,C)|0)+(ag(an,b)|0)|0;an=aO;ap=(aO|0)<0|0?-1:0;aG=ao-ai|0;ao=ar-aq|0;ar=aM-ah|0;aM=Li(aG,(aG|0)<0|0?-1:0,R,Q)|0;aG=K;aS=Li(ao,(ao|0)<0|0?-1:0,T,S)|0;ao=K8(aS,K,aM,aG)|0;aG=K;aM=Li(ar,(ar|0)<0|0?-1:0,F,O)|0;ar=K8(ao,aG,aM,K)|0;aM=K;aG=0;if(!((aM|0)>(aG|0)|(aM|0)==(aG|0)&ar>>>0>0>>>0)){aL=139;break L29}if((aT|0)==0&(aQ|0)==0){if((aO|0)>=0){aL=140;break L29}}else{aG=0;if(!((aQ|0)<(aG|0)|(aQ|0)==(aG|0)&aT>>>0<0>>>0)){aL=134;break L29}do{if((aO|0)>0){c[D>>2]=1;c[Z>>2]=an;c[Z+4>>2]=ap;aW=1}else{if((aO|0)<0){c[D>>2]=-1;aG=K9(0,0,an,ap)|0;c[Z>>2]=aG;c[Z+4>>2]=K;aW=-1;break}else{c[D>>2]=0;c[Z>>2]=0;c[Z+4>>2]=0;aW=0;break}}}while(0);ap=0;if((aQ|0)>(ap|0)|(aQ|0)==(ap|0)&aT>>>0>0>>>0){aX=aQ;aY=aT}else{c[D>>2]=-aW;ap=K9(0,0,aT,aQ)|0;aX=K;aY=ap}c[aa>>2]=aY;c[aa+4>>2]=aX;do{if((au|0)>0){c[_>>2]=1;c[v>>2]=as;c[v+4>>2]=al;aZ=1}else{if((au|0)<0){c[_>>2]=-1;ap=K9(0,0,as,al)|0;c[v>>2]=ap;c[v+4>>2]=K;aZ=-1;break}else{c[_>>2]=0;c[v>>2]=0;c[v+4>>2]=0;aZ=0;break}}}while(0);al=0;do{if((ad|0)>(al|0)|(ad|0)==(al|0)&ae>>>0>0>>>0){c[A>>2]=ae;c[A+4>>2]=ad}else{as=0;if((ad|0)<(as|0)|(ad|0)==(as|0)&ae>>>0<0>>>0){c[_>>2]=-aZ;as=K9(0,0,ae,ad)|0;c[A>>2]=as;c[A+4>>2]=K;break}else{c[A>>2]=0;c[A+4>>2]=0;break}}}while(0);if((zx(m,n)|0)<=0){aL=147;break L29}}c[f>>2]=at;al=c[am>>2]|0;ad=aM;ae=ar;aj=c[al+88>>2]|0;af=c[al+92>>2]|0;d=c[al+96>>2]|0}ae=aj-aD|0;ad=af-aE|0;al=d-aF|0;as=Li(ae,(ae|0)<0|0?-1:0,R,Q)|0;ae=K;au=Li(ad,(ad|0)<0|0?-1:0,T,S)|0;ad=K8(au,K,as,ae)|0;ae=K;as=Li(al,(al|0)<0|0?-1:0,F,O)|0;al=K8(ad,ae,as,K)|0;c[e>>2]=(aB|0)==(s|0)?0:aC;ac=K;$=al;y=aj;P=af;ak=d;ai=aD;aq=aE;ah=aF}if((aL|0)==134){i=j;return}else if((aL|0)==135){i=j;return}else if((aL|0)==136){i=j;return}else if((aL|0)==137){i=j;return}else if((aL|0)==138){i=j;return}else if((aL|0)==139){i=j;return}else if((aL|0)==140){i=j;return}else if((aL|0)==147){i=j;return}}aF=0;if(!((U|0)<(aF|0)|(U|0)==(aF|0)&N>>>0<0>>>0)){i=j;return}aF=a+100|0;a=K9(0,0,G,u)|0;u=K;G=q+16|0;ah=q|0;aE=q+8|0;aq=r+16|0;aD=r|0;ai=r+8|0;ak=o+16|0;P=o|0;y=o+8|0;$=p+16|0;ac=p|0;aC=p+8|0;s=U;U=N;N=ax;ax=ay;ay=az;az=W;W=X;X=Y;Y=aA;while(1){aA=(ag(ax-W|0,E)|0)+(ag(ay-X|0,b)|0)+(ag(N-az|0,C)|0)|0;aB=aA;n=(aA|0)<0|0?-1:0;L118:do{if((Y|0)==0){a_=ay;a$=ax;a0=N;a1=s;a2=U;a3=aA;a4=n;a5=aB}else{m=ay;A=ax;aZ=N;_=s;v=U;aX=aA;aa=n;aY=aB;aW=Y;while(1){if((c[aW+12>>2]|0)==(h|0)){a_=m;a$=A;a0=aZ;a1=_;a2=v;a3=aX;a4=aa;a5=aY;break L118}D=c[(c[aW+4>>2]|0)+8>>2]|0;if((c[D+20>>2]|0)<=(c[aF>>2]|0)){a_=m;a$=A;a0=aZ;a1=_;a2=v;a3=aX;a4=aa;a5=aY;break L118}Z=c[D+12>>2]|0;aw=c[Z+88>>2]|0;av=aw-aZ|0;V=c[Z+92>>2]|0;l=V-A|0;k=c[Z+96>>2]|0;Z=k-m|0;ab=Li(av,(av|0)<0|0?-1:0,R,Q)|0;aK=K;z=Li(l,(l|0)<0|0?-1:0,T,S)|0;M=K8(z,K,ab,aK)|0;aK=K;ab=Li(Z,(Z|0)<0|0?-1:0,F,O)|0;z=K8(M,aK,ab,K)|0;ab=K;aK=(ag(l,E)|0)+(ag(av,C)|0)+(ag(Z,b)|0)|0;Z=aK;av=(aK|0)<0|0?-1:0;if((z|0)==0&(ab|0)==0){if((aK|0)<=0){a_=m;a$=A;a0=aZ;a1=_;a2=v;a3=aX;a4=aa;a5=aY;break L118}}else{l=0;if(!((ab|0)<(l|0)|(ab|0)==(l|0)&z>>>0<0>>>0)){a_=m;a$=A;a0=aZ;a1=_;a2=v;a3=aX;a4=aa;a5=aY;break L118}do{if((aK|0)>0){c[ak>>2]=1;c[P>>2]=Z;c[P+4>>2]=av;a6=1}else{if((aK|0)<0){c[ak>>2]=-1;l=K9(0,0,Z,av)|0;c[P>>2]=l;c[P+4>>2]=K;a6=-1;break}else{c[ak>>2]=0;c[P>>2]=0;c[P+4>>2]=0;a6=0;break}}}while(0);av=0;if((ab|0)>(av|0)|(ab|0)==(av|0)&z>>>0>0>>>0){a7=ab;a8=z}else{c[ak>>2]=-a6;av=K9(0,0,z,ab)|0;a7=K;a8=av}c[y>>2]=a8;c[y+4>>2]=a7;do{if((aX|0)>0){c[$>>2]=1;c[ac>>2]=aY;c[ac+4>>2]=aa;a9=1}else{if((aX|0)<0){c[$>>2]=-1;av=K9(0,0,aY,aa)|0;c[ac>>2]=av;c[ac+4>>2]=K;a9=-1;break}else{c[$>>2]=0;c[ac>>2]=0;c[ac+4>>2]=0;a9=0;break}}}while(0);ab=0;do{if((_|0)>(ab|0)|(_|0)==(ab|0)&v>>>0>0>>>0){c[aC>>2]=v;c[aC+4>>2]=_}else{z=0;if((_|0)<(z|0)|(_|0)==(z|0)&v>>>0<0>>>0){c[$>>2]=-a9;z=K9(0,0,v,_)|0;c[aC>>2]=z;c[aC+4>>2]=K;break}else{c[aC>>2]=0;c[aC+4>>2]=0;break}}}while(0);if((zx(o,p)|0)>=1){a_=m;a$=A;a0=aZ;a1=_;a2=v;a3=aX;a4=aa;a5=aY;break L118}}ab=aw-az|0;z=V-W|0;av=k-X|0;Z=Li(ab,(ab|0)<0|0?-1:0,R,Q)|0;aK=K;l=Li(z,(z|0)<0|0?-1:0,T,S)|0;M=K8(l,K,Z,aK)|0;aK=K;Z=Li(av,(av|0)<0|0?-1:0,F,O)|0;l=K8(M,aK,Z,K)|0;Z=K;aK=(aW|0)==(t|0)?0:D;c[f>>2]=aK;M=(ag(z,E)|0)+(ag(av,b)|0)+(ag(ab,C)|0)|0;ab=M;av=(M|0)<0|0?-1:0;if((aK|0)==0){a_=k;a$=V;a0=aw;a1=Z;a2=l;a3=M;a4=av;a5=ab;break}else{m=k;A=V;aZ=aw;_=Z;v=l;aX=M;aa=av;aY=ab;aW=aK}}}}while(0);aB=c[e>>2]|0;if((aB|0)==0){aL=141;break}if((c[aB+12>>2]|0)==(g|0)){aL=142;break}n=c[(c[aB+8>>2]|0)+4>>2]|0;if((c[n+20>>2]|0)<=(c[aF>>2]|0)){aL=143;break}aB=n+12|0;aA=c[aB>>2]|0;d=c[aA+88>>2]|0;af=d-az|0;aj=c[aA+92>>2]|0;aW=aj-W|0;aY=c[aA+96>>2]|0;aA=aY-X|0;aa=af;aX=(af|0)<0|0?-1:0;v=Li(aa,aX,I,J)|0;_=K;aZ=aW;A=(aW|0)<0|0?-1:0;m=Li(aZ,A,H,L)|0;ar=K8(m,K,v,_)|0;_=K;v=aA;m=(aA|0)<0|0?-1:0;aM=Li(v,m,a,u)|0;if(!((ar|0)==(aM|0)&(_|0)==(K|0))){aL=144;break}_=Li(aa,aX,R,Q)|0;aX=K;aa=Li(aZ,A,T,S)|0;A=K8(aa,K,_,aX)|0;aX=K;_=Li(v,m,F,O)|0;m=K8(A,aX,_,K)|0;_=K;aX=(ag(aW,E)|0)+(ag(af,C)|0)+(ag(aA,b)|0)|0;aA=aX;af=(aX|0)<0|0?-1:0;aW=a0-d|0;d=a$-aj|0;aj=a_-aY|0;aY=Li(aW,(aW|0)<0|0?-1:0,R,Q)|0;aW=K;A=Li(d,(d|0)<0|0?-1:0,T,S)|0;d=K8(A,K,aY,aW)|0;aW=K;aY=Li(aj,(aj|0)<0|0?-1:0,F,O)|0;aj=K8(d,aW,aY,K)|0;aY=K;aW=0;if(!((aY|0)<(aW|0)|(aY|0)==(aW|0)&aj>>>0<0>>>0)){aL=145;break}if((m|0)==0&(_|0)==0){if((aX|0)<=0){aL=146;break}}else{aW=0;if(!((_|0)<(aW|0)|(_|0)==(aW|0)&m>>>0<0>>>0)){aL=149;break}do{if((aX|0)>0){c[G>>2]=1;c[ah>>2]=aA;c[ah+4>>2]=af;ba=1}else{if((aX|0)<0){c[G>>2]=-1;aW=K9(0,0,aA,af)|0;c[ah>>2]=aW;c[ah+4>>2]=K;ba=-1;break}else{c[G>>2]=0;c[ah>>2]=0;c[ah+4>>2]=0;ba=0;break}}}while(0);af=0;if((_|0)>(af|0)|(_|0)==(af|0)&m>>>0>0>>>0){bb=_;bc=m}else{c[G>>2]=-ba;af=K9(0,0,m,_)|0;bb=K;bc=af}c[aE>>2]=bc;c[aE+4>>2]=bb;do{if((a3|0)>0){c[aq>>2]=1;c[aD>>2]=a5;c[aD+4>>2]=a4;bd=1}else{if((a3|0)<0){c[aq>>2]=-1;af=K9(0,0,a5,a4)|0;c[aD>>2]=af;c[aD+4>>2]=K;bd=-1;break}else{c[aq>>2]=0;c[aD>>2]=0;c[aD+4>>2]=0;bd=0;break}}}while(0);_=0;do{if((a1|0)>(_|0)|(a1|0)==(_|0)&a2>>>0>0>>>0){c[ai>>2]=a2;c[ai+4>>2]=a1}else{m=0;if((a1|0)<(m|0)|(a1|0)==(m|0)&a2>>>0<0>>>0){c[aq>>2]=-bd;m=K9(0,0,a2,a1)|0;c[ai>>2]=m;c[ai+4>>2]=K;break}else{c[ai>>2]=0;c[ai+4>>2]=0;break}}}while(0);if((zx(q,r)|0)>=0){aL=150;break}}c[e>>2]=n;_=c[aB>>2]|0;s=aY;U=aj;N=a0;ax=a$;ay=a_;az=c[_+88>>2]|0;W=c[_+92>>2]|0;X=c[_+96>>2]|0;Y=c[f>>2]|0}if((aL|0)==141){i=j;return}else if((aL|0)==142){i=j;return}else if((aL|0)==143){i=j;return}else if((aL|0)==144){i=j;return}else if((aL|0)==145){i=j;return}else if((aL|0)==146){i=j;return}else if((aL|0)==149){i=j;return}else if((aL|0)==150){i=j;return}}function zI(b,d,e,f,j){b=b|0;d=d|0;e=e|0;f=f|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0,y=0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0,I=0.0,J=0.0,K=0.0,L=0.0,M=0,N=0.0,O=0.0,P=0.0,Q=0.0,R=0.0,S=0.0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0.0,_=0.0,$=0.0,aa=0.0,ab=0.0,ac=0.0,ad=0,ae=0,af=0,ag=0,ah=0,ai=0,aj=0,ak=0,al=0,am=0,an=0;k=i;i=i+88|0;l=k|0;m=k+24|0;n=k+40|0;o=k+56|0;p=k+72|0;q=(j|0)>0;do{if(e){if(q){r=1.0000000150474662e+30;s=1.0000000150474662e+30;t=1.0000000150474662e+30;u=-1.0000000150474662e+30;v=-1.0000000150474662e+30;w=-1.0000000150474662e+30;x=0;y=d}else{z=-1.0000000150474662e+30;A=-1.0000000150474662e+30;B=-1.0000000150474662e+30;C=1.0000000150474662e+30;D=1.0000000150474662e+30;E=1.0000000150474662e+30;break}while(1){F=+h[y>>3];G=+h[y+8>>3];H=+h[y+16>>3];I=F<t?F:t;J=G<s?G:s;K=H<r?H:r;L=w<F?F:w;F=v<G?G:v;G=u<H?H:u;M=x+1|0;if((M|0)<(j|0)){r=K;s=J;t=I;u=G;v=F;w=L;x=M;y=y+f|0}else{z=L;A=F;B=G;C=I;D=J;E=K;break}}}else{if(q){N=1.0000000150474662e+30;O=1.0000000150474662e+30;P=1.0000000150474662e+30;Q=-1.0000000150474662e+30;R=-1.0000000150474662e+30;S=-1.0000000150474662e+30;T=0;U=d}else{z=-1.0000000150474662e+30;A=-1.0000000150474662e+30;B=-1.0000000150474662e+30;C=1.0000000150474662e+30;D=1.0000000150474662e+30;E=1.0000000150474662e+30;break}while(1){K=+g[U>>2];J=+g[U+4>>2];I=+g[U+8>>2];G=K<P?K:P;F=J<O?J:O;L=I<N?I:N;H=S<K?K:S;K=R<J?J:R;J=Q<I?I:Q;M=T+1|0;if((M|0)<(j|0)){N=L;O=F;P=G;Q=J;R=K;S=H;T=M;U=U+f|0}else{z=H;A=K;B=J;C=G;D=F;E=L;break}}}}while(0);S=z-C;R=A-D;Q=B-E;if(S<R){U=b+112|0;c[U>>2]=R<Q?2:1;V=S<Q?0:2;W=U}else{U=b+112|0;c[U>>2]=S<Q?2:0;V=R<Q?1:2;W=U}U=b+104|0;c[U>>2]=V;T=c[W>>2]|0;if((V|0)==(T|0)){q=((V+1|0)>>>0)%3|0;c[U>>2]=q;X=c[W>>2]|0;Y=q}else{X=T;Y=V}V=3-X-Y|0;Y=b+108|0;c[Y>>2]=V;P=S*9788566967472434.0e-20;S=R*9788566967472434.0e-20;R=Q*9788566967472434.0e-20;if(((V+1|0)%3|0|0)==(c[W>>2]|0)){Z=P;_=S;$=R}else{Z=P*-1.0;_=S*-1.0;$=R*-1.0}g[b>>2]=Z;g[b+4>>2]=_;g[b+8>>2]=$;g[b+12>>2]=0.0;if(Z!=0.0){aa=1.0/Z}else{aa=Z}if(_!=0.0){ab=1.0/_}else{ab=_}if($!=0.0){ac=1.0/$}else{ac=$}V=b+16|0;g[b+16>>2]=(C+z)*.5;X=b+20|0;g[X>>2]=(D+A)*.5;T=b+24|0;g[T>>2]=(E+B)*.5;g[b+28>>2]=0.0;q=l+16|0;a[q]=1;y=l+12|0;c[y>>2]=0;x=l+4|0;c[x>>2]=0;M=l+8|0;c[M>>2]=0;ad=(j|0)>0;L28:do{if(ad){ae=zv(j<<4,16)|0;af=c[x>>2]|0;if((af|0)>0){ag=0;do{ah=ae+(ag<<4)|0;if((ah|0)!=0){ai=ah;ah=(c[y>>2]|0)+(ag<<4)|0;c[ai>>2]=c[ah>>2];c[ai+4>>2]=c[ah+4>>2];c[ai+8>>2]=c[ah+8>>2];c[ai+12>>2]=c[ah+12>>2]}ag=ag+1|0;}while((ag|0)<(af|0))}af=c[y>>2]|0;if((af|0)!=0){if((a[q]&1)!=0){zw(af)}c[y>>2]=0}a[q]=1;c[y>>2]=ae;c[M>>2]=j;af=m;ag=0;ah=ae;while(1){ai=ah+(ag<<4)|0;if((ai|0)!=0){aj=ai;c[aj>>2]=c[af>>2];c[aj+4>>2]=c[af+4>>2];c[aj+8>>2]=c[af+8>>2];c[aj+12>>2]=c[af+12>>2]}aj=ag+1|0;if((aj|0)>=(j|0)){break L28}ag=aj;ah=c[y>>2]|0}}}while(0);c[x>>2]=j;L51:do{if(e){if(!ad){break}m=n|0;ah=n+4|0;ag=n+8|0;af=n+12|0;ae=V|0;aj=0;ai=d;while(1){B=ab*(+h[ai+8>>3]- +g[X>>2]);E=ac*(+h[ai+16>>3]- +g[T>>2]);g[m>>2]=aa*(+h[ai>>3]- +g[ae>>2]);g[ah>>2]=B;g[ag>>2]=E;g[af>>2]=0.0;c[(c[y>>2]|0)+(aj<<4)>>2]=~~+g[n+(c[Y>>2]<<2)>>2];c[(c[y>>2]|0)+(aj<<4)+4>>2]=~~+g[n+(c[W>>2]<<2)>>2];c[(c[y>>2]|0)+(aj<<4)+8>>2]=~~+g[n+(c[U>>2]<<2)>>2];c[(c[y>>2]|0)+(aj<<4)+12>>2]=aj;ak=aj+1|0;if((ak|0)>=(j|0)){break L51}aj=ak;ai=ai+f|0}}else{if(!ad){break}ai=o|0;aj=o+4|0;af=o+8|0;ag=o+12|0;ah=V|0;ae=0;m=d;while(1){E=+g[m>>2];g[ai>>2]=E;B=+g[m+4>>2];g[aj>>2]=B;A=ab*(B- +g[X>>2]);B=ac*(+g[m+8>>2]- +g[T>>2]);g[ai>>2]=aa*(E- +g[ah>>2]);g[aj>>2]=A;g[af>>2]=B;g[ag>>2]=0.0;c[(c[y>>2]|0)+(ae<<4)>>2]=~~+g[o+(c[Y>>2]<<2)>>2];c[(c[y>>2]|0)+(ae<<4)+4>>2]=~~+g[o+(c[W>>2]<<2)>>2];c[(c[y>>2]|0)+(ae<<4)+8>>2]=~~+g[o+(c[U>>2]<<2)>>2];c[(c[y>>2]|0)+(ae<<4)+12>>2]=ae;ak=ae+1|0;if((ak|0)>=(j|0)){break L51}ae=ak;m=m+f|0}}}while(0);f=c[x>>2]|0;if((f|0)>1){zT(l,44,0,f-1|0)}f=b+32|0;c[b+36>>2]=c[f>>2];c[b+40>>2]=0;c[b+44>>2]=j;l=b+84|0;U=c[l>>2]|0;if((U|0)<(j|0)){o=b+88|0;if((c[o>>2]|0)<(j|0)){if((j|0)==0){al=0;am=U}else{W=zv(j<<2,16)|0;al=W;am=c[l>>2]|0}W=b+92|0;if((am|0)>0){Y=0;do{T=al+(Y<<2)|0;if((T|0)!=0){c[T>>2]=c[(c[W>>2]|0)+(Y<<2)>>2]}Y=Y+1|0;}while((Y|0)<(am|0))}am=c[W>>2]|0;Y=b+96|0;if((am|0)!=0){if((a[Y]&1)!=0){zw(am)}c[W>>2]=0}a[Y]=1;c[W>>2]=al;c[o>>2]=j;an=W}else{an=b+92|0}W=U;do{U=(c[an>>2]|0)+(W<<2)|0;if((U|0)!=0){c[U>>2]=0}W=W+1|0;}while((W|0)<(j|0))}c[l>>2]=j;if(ad){ad=b+92|0;l=0;do{W=zK(f)|0;c[W+8>>2]=0;an=W+88|0;U=(c[y>>2]|0)+(l<<4)|0;c[an>>2]=c[U>>2];c[an+4>>2]=c[U+4>>2];c[an+8>>2]=c[U+8>>2];c[an+12>>2]=c[U+12>>2];c[W+104>>2]=-1;c[(c[ad>>2]|0)+(l<<2)>>2]=W;l=l+1|0;}while((l|0)<(j|0))}l=c[y>>2]|0;if((l|0)!=0){if((a[q]&1)!=0){zw(l)}c[y>>2]=0}a[q]=1;c[y>>2]=0;c[x>>2]=0;c[M>>2]=0;c[b+52>>2]=c[b+48>>2];c[b+56>>2]=0;c[b+60>>2]=j*6|0;c[b+116>>2]=0;c[b+120>>2]=0;c[b+100>>2]=-3;K1(p|0,0,16)|0;zD(b,0,j,p);c[b+124>>2]=c[p>>2];p=c[y>>2]|0;if((p|0)==0){i=k;return}if((a[q]&1)!=0){zw(p)}c[y>>2]=0;i=k;return}function zJ(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=c[a+4>>2]|0;e=c[b+4>>2]|0;if((d|0)<(e|0)){f=1;return f|0}if((d|0)!=(e|0)){f=0;return f|0}e=c[a>>2]|0;d=c[b>>2]|0;if((e|0)<(d|0)){f=1;return f|0}if((e|0)!=(d|0)){f=0;return f|0}f=(c[a+8>>2]|0)<(c[b+8>>2]|0);return f|0}function zK(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;b=a+8|0;d=c[b>>2]|0;do{if((d|0)==0){e=a+4|0;f=c[e>>2]|0;if((f|0)==0){g=zv(12,16)|0;if((g|0)==0){h=0}else{i=c[a+12>>2]|0;c[g+4>>2]=i;c[g+8>>2]=0;c[g>>2]=zv(i*112|0,16)|0;h=g}g=a|0;c[h+8>>2]=c[g>>2];c[g>>2]=h;j=h}else{c[e>>2]=c[f+8>>2];j=f}f=j|0;e=j+4|0;g=c[e>>2]|0;if((g|0)>0){i=c[f>>2]|0;k=0;l=g;while(1){g=k+1|0;m=i+112|0;c[i>>2]=(g|0)<(l|0)?m:0;n=c[e>>2]|0;if((g|0)<(n|0)){i=m;k=g;l=n}else{break}}}l=c[f>>2]|0;c[b>>2]=c[l>>2];if((l|0)==0){o=0}else{p=l;break}return o|0}else{c[b>>2]=c[d>>2];p=d}}while(0);K1(p|0,0,20)|0;c[p+104>>2]=-1;o=p;return o|0}function zL(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,h=0.0,j=0,k=0.0,l=0.0;e=i;i=i+16|0;f=e|0;if((c[d+100>>2]|0)>-1){g[f+(c[b+108>>2]<<2)>>2]=+(c[d+88>>2]|0);g[f+(c[b+112>>2]<<2)>>2]=+(c[d+92>>2]|0);h=+(c[d+96>>2]|0);j=f|0}else{k=+zP(d+24|0);l=k/+zP(d+72|0);g[f+(c[b+108>>2]<<2)>>2]=l;l=+zP(d+40|0);k=l/+zP(d+72|0);g[f+(c[b+112>>2]<<2)>>2]=k;k=+zP(d+56|0);h=k/+zP(d+72|0);j=f|0}g[f+(c[b+104>>2]<<2)>>2]=h;h=+g[f+4>>2]*+g[b+4>>2]+ +g[b+20>>2];k=+g[f+8>>2]*+g[b+8>>2]+ +g[b+24>>2];g[a>>2]=+g[j>>2]*+g[b>>2]+ +g[b+16>>2];g[a+4>>2]=h;g[a+8>>2]=k;g[a+12>>2]=0.0;i=e;return}function zM(b,d,e){b=b|0;d=+d;e=+e;var f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0.0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ah=0,ai=0,aj=0,ak=0,al=0,am=0,an=0,ao=0,ap=0,aq=0,ar=0,as=0,at=0,au=0,av=0,aw=0,ax=0,ay=0,az=0,aA=0,aB=0,aC=0,aD=0,aE=0,aF=0,aG=0,aH=0,aI=0,aJ=0,aK=0,aL=0,aM=0,aN=0,aO=0,aP=0,aQ=0,aR=0,aS=0,aT=0,aU=0,aV=0.0,aW=0.0,aX=0.0,aY=0.0,aZ=0.0,a_=0.0,a$=0.0,a0=0.0,a1=0.0,a2=0.0,a3=0.0,a4=0.0,a5=0.0,a6=0.0,a7=0.0,a8=0.0,a9=0.0,ba=0.0;f=i;i=i+152|0;h=f|0;j=f+16|0;k=f+32|0;l=f+48|0;m=f+64|0;n=f+80|0;o=f+96|0;p=f+112|0;q=f+128|0;r=b+124|0;s=c[r>>2]|0;if((s|0)==0){t=0.0;i=f;return+t}u=b+100|0;v=(c[u>>2]|0)-1|0;c[u>>2]=v;c[s+104>>2]=v;s=zv(4,16)|0;u=s;if((s|0)!=0){c[u>>2]=c[r>>2]}s=c[r>>2]|0;r=c[s+88>>2]|0;w=c[s+92>>2]|0;x=c[s+96>>2]|0;s=l|0;y=l+8|0;z=m|0;K1(l|0,0,16)|0;A=m+8|0;B=n|0;K1(m|0,0,16)|0;C=n+8|0;D=o|0;K1(n|0,0,16)|0;E=o+8|0;F=b+64|0;K1(o|0,0,16)|0;G=0;H=0;I=0;J=1;M=1;N=u;L8:while(1){O=J;while(1){if((O|0)<=0){break L8}P=O-1|0;Q=c[N+(P<<2)>>2]|0;R=Q+8|0;S=c[R>>2]|0;if((S|0)==0){O=P}else{break}}u=Q+88|0;T=Q+92|0;U=Q+96|0;V=S;X=G;Y=H;Z=I;_=P;$=M;aa=N;while(1){ab=V+12|0;ac=(c[ab>>2]|0)+104|0;if((c[ac>>2]|0)==(v|0)){ad=_;ae=$;af=aa}else{c[ac>>2]=v;do{if((_|0)==($|0)){ac=($|0)==0?1:$<<1;if(($|0)>=(ac|0)){ah=$;ai=aa;break}if((ac|0)==0){aj=0}else{aj=zv(ac<<2,16)|0}if(($|0)>0){ak=0;do{al=aj+(ak<<2)|0;if((al|0)!=0){c[al>>2]=c[aa+(ak<<2)>>2]}ak=ak+1|0;}while((ak|0)<($|0))}if((aa|0)==0){ah=ac;ai=aj;break}zw(aa);ah=ac;ai=aj}else{ah=$;ai=aa}}while(0);ak=ai+(_<<2)|0;if((ak|0)!=0){c[ak>>2]=c[ab>>2]}ad=_+1|0;ae=ah;af=ai}if((c[V+20>>2]|0)==(v|0)){am=X;an=Y;ao=Z}else{ak=zO(F)|0;al=c[ab>>2]|0;ap=c[(c[(c[V+8>>2]|0)+4>>2]|0)+12>>2]|0;c[ak+4>>2]=al;aq=ak+12|0;ar=al+88|0;c[aq>>2]=c[ar>>2];c[aq+4>>2]=c[ar+4>>2];c[aq+8>>2]=c[ar+8>>2];c[aq+12>>2]=c[ar+12>>2];ar=al+88|0;aq=al+92|0;as=(c[ap+92>>2]|0)-(c[aq>>2]|0)|0;at=al+96|0;au=(c[ap+96>>2]|0)-(c[at>>2]|0)|0;c[ak+28>>2]=(c[ap+88>>2]|0)-(c[ar>>2]|0);c[ak+32>>2]=as;c[ak+36>>2]=au;c[ak+40>>2]=-1;au=(c[T>>2]|0)-(c[aq>>2]|0)|0;aq=(c[U>>2]|0)-(c[at>>2]|0)|0;c[ak+44>>2]=(c[u>>2]|0)-(c[ar>>2]|0);c[ak+48>>2]=au;c[ak+52>>2]=aq;c[ak+56>>2]=-1;aq=al+16|0;au=c[aq>>2]|0;if((au|0)==0){c[al+12>>2]=ak}else{c[au+8>>2]=ak}c[aq>>2]=ak;do{if((X|0)==(Y|0)){aq=(Y|0)==0?1:Y<<1;if((Y|0)>=(aq|0)){av=Y;aw=Z;break}if((aq|0)==0){ax=0}else{ax=zv(aq<<2,16)|0}if((Y|0)>0){au=0;do{al=ax+(au<<2)|0;if((al|0)!=0){c[al>>2]=c[Z+(au<<2)>>2]}au=au+1|0;}while((au|0)<(Y|0))}if((Z|0)==0){av=aq;aw=ax;break}zw(Z);av=aq;aw=ax}else{av=Y;aw=Z}}while(0);ab=aw+(X<<2)|0;if((ab|0)==0){ay=0;az=0;aA=V}else{c[ab>>2]=ak;ay=0;az=0;aA=V}while(1){if(!((az|0)==0|(ay|0)==0)){ab=c[u>>2]|0;au=ab-r|0;ac=c[T>>2]|0;al=ac-w|0;ar=c[U>>2]|0;at=ar-x|0;as=c[az+88>>2]|0;ap=as-r|0;aB=c[az+92>>2]|0;aC=aB-w|0;aD=c[az+96>>2]|0;aE=aD-x|0;aF=c[ay+88>>2]|0;aG=aF-r|0;aH=c[ay+92>>2]|0;aI=aH-w|0;aJ=c[ay+96>>2]|0;aK=aJ-x|0;aL=(ag(aK,aC)|0)-(ag(aI,aE)|0)|0;aM=(ag(aG,aE)|0)-(ag(aK,ap)|0)|0;aK=(ag(aI,ap)|0)-(ag(aG,aC)|0)|0;aC=Li(aL,(aL|0)<0|0?-1:0,au,(au|0)<0|0?-1:0)|0;au=K;aL=Li(aM,(aM|0)<0|0?-1:0,al,(al|0)<0|0?-1:0)|0;al=K;aM=Li(aK,(aK|0)<0|0?-1:0,at,(at|0)<0|0?-1:0)|0;at=K8(aC,au,aM,K)|0;aM=K8(at,K,aL,al)|0;al=K;aL=ab+r+as+aF|0;aF=ac+w+aB+aH|0;aH=ar+x+aD+aJ|0;aJ=Li(aM,al,aL,(aL|0)<0|0?-1:0)|0;aL=K;aD=K5(c[s>>2]|0,c[s+4>>2]|0,aJ|0,aL|0)|0;aJ=K;ar=c[y>>2]|0;aB=c[y+4>>2]|0;if(L){ac=K8(ar,aB,1,0)|0;as=K;c[y>>2]=ac;c[y+4>>2]=as;aN=as;aO=ac}else{aN=aB;aO=ar}c[s>>2]=aD;c[s+4>>2]=aJ;aJ=K8(aO,aN,aL>>31|((aL|0)<0|0?-1:0)<<1,((aL|0)<0|0?-1:0)>>31|((aL|0)<0|0?-1:0)<<1)|0;c[y>>2]=aJ;c[y+4>>2]=K;aJ=Li(aM,al,aF,(aF|0)<0|0?-1:0)|0;aF=K;aL=K5(c[z>>2]|0,c[z+4>>2]|0,aJ|0,aF|0)|0;aJ=K;aD=c[A>>2]|0;ar=c[A+4>>2]|0;if(L){aB=K8(aD,ar,1,0)|0;ac=K;c[A>>2]=aB;c[A+4>>2]=ac;aP=ac;aQ=aB}else{aP=ar;aQ=aD}c[z>>2]=aL;c[z+4>>2]=aJ;aJ=K8(aQ,aP,aF>>31|((aF|0)<0|0?-1:0)<<1,((aF|0)<0|0?-1:0)>>31|((aF|0)<0|0?-1:0)<<1)|0;c[A>>2]=aJ;c[A+4>>2]=K;aJ=Li(aM,al,aH,(aH|0)<0|0?-1:0)|0;aH=K;aF=K5(c[B>>2]|0,c[B+4>>2]|0,aJ|0,aH|0)|0;aJ=K;aL=c[C>>2]|0;aD=c[C+4>>2]|0;if(L){ar=K8(aL,aD,1,0)|0;aB=K;c[C>>2]=ar;c[C+4>>2]=aB;aR=aB;aS=ar}else{aR=aD;aS=aL}c[B>>2]=aF;c[B+4>>2]=aJ;aJ=K8(aS,aR,aH>>31|((aH|0)<0|0?-1:0)<<1,((aH|0)<0|0?-1:0)>>31|((aH|0)<0|0?-1:0)<<1)|0;c[C>>2]=aJ;c[C+4>>2]=K;aJ=K5(c[D>>2]|0,c[D+4>>2]|0,aM|0,al|0)|0;aM=K;aH=c[E>>2]|0;aF=c[E+4>>2]|0;if(L){aL=K8(aH,aF,1,0)|0;aD=K;c[E>>2]=aL;c[E+4>>2]=aD;aT=aD;aU=aL}else{aT=aF;aU=aH}c[D>>2]=aJ;c[D+4>>2]=aM;aM=K8(aU,aT,al>>31|((al|0)<0|0?-1:0)<<1,((al|0)<0|0?-1:0)>>31|((al|0)<0|0?-1:0)<<1)|0;c[E>>2]=aM;c[E+4>>2]=K}c[aA+20>>2]=v;c[aA+16>>2]=ak;aM=c[(c[aA+8>>2]|0)+4>>2]|0;if((aM|0)==(V|0)){break}else{az=ay;ay=c[aA+12>>2]|0;aA=aM}}am=X+1|0;an=av;ao=aw}ak=c[V>>2]|0;if((ak|0)==(c[R>>2]|0)){G=am;H=an;I=ao;J=ad;M=ae;N=af;continue L8}else{V=ak;X=am;Y=an;Z=ao;_=ad;$=ae;aa=af}}}af=c[E>>2]|0;ae=c[E+4>>2]|0;E=0;L83:do{if((ae|0)<(E|0)|(ae|0)==(E|0)&af>>>0<0>>>0){aV=0.0}else{if((af|0)==0&(ae|0)==0){if((c[D>>2]|0)==0&(c[D+4>>2]|0)==0){aV=0.0;break}}aW=+zP(l);ad=c[b+108>>2]|0;ao=p|0;g[p+(ad<<2)>>2]=aW;aW=+zP(m);an=c[b+112>>2]|0;g[p+(an<<2)>>2]=aW;aW=+zP(n);am=c[b+104>>2]|0;g[p+(am<<2)>>2]=aW;aW=1.0/(+zP(o)*4.0);M=p+4|0;aX=aW*+g[M>>2];J=p+8|0;aY=aW*+g[J>>2];aZ=+g[b>>2];a_=aZ*aW*+g[ao>>2];g[ao>>2]=a_;aW=+g[b+4>>2];a$=aW*aX;g[M>>2]=a$;aX=+g[b+8>>2];a0=aX*aY;g[J>>2]=a0;if(e>0.0){if((G|0)>0){J=j|0;M=j+4|0;ao=j+8|0;H=h|0;R=h+4|0;aw=h+8|0;av=k|0;aA=k+4|0;ay=k+8|0;aY=3.4028234663852886e+38;az=0;do{v=I+(az<<2)|0;aT=c[v>>2]|0;g[j+(ad<<2)>>2]=+(c[aT+28>>2]|0);g[j+(an<<2)>>2]=+(c[aT+32>>2]|0);g[j+(am<<2)>>2]=+(c[aT+36>>2]|0);a1=+g[J>>2]*aZ;a2=+g[M>>2]*aW;a3=+g[ao>>2]*aX;g[h+(ad<<2)>>2]=+(c[aT+44>>2]|0);g[h+(an<<2)>>2]=+(c[aT+48>>2]|0);g[h+(am<<2)>>2]=+(c[aT+52>>2]|0);a4=aZ*+g[H>>2];a5=aW*+g[R>>2];a6=aX*+g[aw>>2];a7=a2*a6-a3*a5;a8=a3*a4-a1*a6;a6=a1*a5-a2*a4;a4=1.0/+W(a6*a6+(a7*a7+a8*a8));aT=c[v>>2]|0;g[k+(ad<<2)>>2]=+(c[aT+12>>2]|0);g[k+(an<<2)>>2]=+(c[aT+16>>2]|0);g[k+(am<<2)>>2]=+(c[aT+20>>2]|0);a2=a7*a4*(+g[av>>2]*aZ-a_)+a8*a4*(+g[aA>>2]*aW-a$)+a6*a4*(+g[ay>>2]*aX-a0);aY=a2<aY?a2:aY;az=az+1|0;}while((az|0)<(G|0));if(aY>0.0){a9=aY}else{aV=0.0;break}}else{a9=3.4028234663852886e+38}a0=a9*e;ba=a0>d?d:a0}else{ba=d}if((G|0)>0){az=243703;ay=0;do{aA=I+(ay<<2)|0;av=I+(((az>>>0)%(G>>>0)|0)<<2)|0;am=c[aA>>2]|0;c[aA>>2]=c[av>>2];c[av>>2]=am;ay=ay+1|0;az=(ag(az,1664525)|0)+1013904223|0;}while((ay|0)<(G|0))}ay=q+16|0;az=q+12|0;am=q+4|0;av=q+8|0;aA=0;while(1){if((aA|0)>=(G|0)){aV=ba;break L83}an=c[I+(aA<<2)>>2]|0;a[ay]=1;c[az>>2]=0;c[am>>2]=0;c[av>>2]=0;c[am>>2]=O;ad=zQ(b,an,ba,q)|0;an=c[az>>2]|0;if((an|0)!=0){if((a[ay]&1)!=0){zw(an)}c[az>>2]=0}a[ay]=1;c[az>>2]=0;c[am>>2]=0;c[av>>2]=0;if(ad){aA=aA+1|0}else{break}}aV=-0.0-ba}}while(0);if((I|0)!=0){zw(I)}if((N|0)==0){t=aV;i=f;return+t}zw(N);t=aV;i=f;return+t}function zN(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;e=b+4|0;f=c[e>>2]|0;g=b+8|0;do{if((f|0)==(c[g>>2]|0)){h=(f|0)==0?1:f<<1;if((f|0)>=(h|0)){i=f;break}if((h|0)==0){j=0;k=f}else{l=zv(h<<2,16)|0;j=l;k=c[e>>2]|0}l=b+12|0;if((k|0)>0){m=0;do{n=j+(m<<2)|0;if((n|0)!=0){c[n>>2]=c[(c[l>>2]|0)+(m<<2)>>2]}m=m+1|0;}while((m|0)<(k|0))}m=c[l>>2]|0;n=b+16|0;if((m|0)!=0){if((a[n]&1)!=0){zw(m)}c[l>>2]=0}a[n]=1;c[l>>2]=j;c[g>>2]=h;i=c[e>>2]|0}else{i=f}}while(0);f=(c[b+12>>2]|0)+(i<<2)|0;if((f|0)==0){o=i;p=o+1|0;c[e>>2]=p;return}c[f>>2]=c[d>>2];o=c[e>>2]|0;p=o+1|0;c[e>>2]=p;return}function zO(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;b=a+8|0;d=c[b>>2]|0;do{if((d|0)==0){e=a+4|0;f=c[e>>2]|0;if((f|0)==0){g=zv(12,16)|0;if((g|0)==0){h=0}else{i=c[a+12>>2]|0;c[g+4>>2]=i;c[g+8>>2]=0;c[g>>2]=zv(i*60|0,16)|0;h=g}g=a|0;c[h+8>>2]=c[g>>2];c[g>>2]=h;j=h}else{c[e>>2]=c[f+8>>2];j=f}f=j|0;e=j+4|0;g=c[e>>2]|0;if((g|0)>0){i=c[f>>2]|0;k=0;l=g;while(1){g=k+1|0;m=i+60|0;c[i>>2]=(g|0)<(l|0)?m:0;n=c[e>>2]|0;if((g|0)<(n|0)){i=m;k=g;l=n}else{break}}}l=c[f>>2]|0;k=l|0;c[b>>2]=c[k>>2];if((l|0)==0){o=0}else{p=l;q=k;break}return o|0}else{k=d|0;c[b>>2]=c[k>>2];p=d;q=k}}while(0);c[q>>2]=0;c[p+4>>2]=0;c[p+8>>2]=0;o=p;return o|0}function zP(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0.0,j=0,k=0,l=0;b=i;i=i+16|0;d=b|0;e=a+8|0;f=c[e>>2]|0;g=c[e+4>>2]|0;e=-1;if((g|0)>(e|0)|(g|0)==(e|0)&f>>>0>-1>>>0){e=a|0;h=(+(f>>>0)+ +(g>>>0)*4294967296.0)*18446744073709552000.0+(+((c[e>>2]|0)>>>0)+ +((c[e+4>>2]|0)>>>0)*4294967296.0);i=b;return+h}else{e=a|0;a=c[e>>2]|0;j=c[e+4>>2]|0;e=K9(0,0,a,j)|0;k=K;l=K8((a|0)==0&(j|0)==0&1,0,~f,~g)|0;g=d|0;c[g>>2]=e;c[g+4>>2]=k;k=d+8|0;c[k>>2]=l;c[k+4>>2]=K;h=-0.0- +zP(d);i=b;return+h}return 0.0}function zQ(b,d,e,f){b=b|0;d=d|0;e=+e;f=f|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0,I=0,J=0,M=0,N=0,O=0,P=0.0,Q=0.0,R=0.0,S=0.0,T=0.0,U=0,V=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ah=0,ai=0,aj=0,ak=0,al=0,am=0,an=0,ao=0,ap=0,aq=0,ar=0,as=0,at=0,au=0,av=0,aw=0,ax=0,ay=0,az=0,aA=0,aB=0,aC=0,aD=0,aE=0,aF=0,aG=0,aH=0,aI=0,aJ=0,aK=0,aL=0,aM=0,aN=0,aO=0,aP=0,aQ=0,aR=0,aS=0,aT=0,aU=0,aV=0,aW=0,aX=0,aY=0,aZ=0,a_=0,a$=0,a0=0,a1=0,a2=0,a3=0,a4=0,a5=0,a6=0,a7=0,a8=0,a9=0,ba=0,bb=0,bc=0,bd=0,be=0,bf=0,bg=0,bh=0,bi=0,bj=0,bk=0,bl=0,bm=0,bn=0,bo=0,bp=0,bq=0,br=0,bs=0,bt=0,bu=0,bv=0,bw=0,bx=0,by=0,bz=0,bA=0,bB=0,bC=0,bD=0,bE=0,bF=0,bG=0,bH=0,bI=0,bJ=0,bK=0,bL=0,bM=0,bN=0,bO=0,bP=0,bQ=0,bR=0,bS=0,bT=0,bU=0,bV=0,bW=0,bX=0,bY=0,bZ=0,b_=0,b$=0,b0=0,b1=0,b2=0,b3=0,b4=0,b5=0,b6=0,b7=0,b8=0,b9=0,ca=0,cb=0,cc=0,cd=0,ce=0,cf=0,cg=0,ch=0,ci=0,cj=0,ck=0,cl=0,cm=0,cn=0,co=0,cp=0,cq=0,cr=0,cs=0,ct=0,cu=0,cv=0,cw=0,cx=0,cy=0,cz=0,cA=0,cB=0,cC=0,cD=0,cE=0,cF=0,cG=0,cH=0,cI=0,cJ=0,cK=0,cL=0,cM=0,cN=0,cO=0,cP=0,cQ=0,cR=0,cS=0,cT=0,cU=0,cV=0,cW=0,cX=0,cY=0,cZ=0,c_=0,c$=0,c0=0,c1=0,c2=0,c3=0,c4=0,c5=0,c6=0,c7=0,c8=0,c9=0,da=0,db=0,dc=0,dd=0,de=0,df=0,dg=0,dh=0,di=0,dj=0,dk=0,dl=0,dm=0,dn=0,dp=0,dq=0,dr=0,ds=0,dt=0,du=0,dv=0,dw=0,dx=0,dy=0,dz=0,dA=0,dB=0,dC=0,dD=0,dE=0,dF=0,dG=0,dH=0,dI=0,dJ=0,dK=0,dL=0,dM=0,dN=0,dO=0,dP=0,dQ=0;h=i;i=i+312|0;j=h|0;k=h+16|0;l=h+32|0;m=h+48|0;n=h+72|0;o=h+112|0;p=h+152|0;q=h+192|0;r=h+232|0;s=h+272|0;t=d+28|0;u=c[t>>2]|0;v=c[b+108>>2]|0;g[k+(v<<2)>>2]=+(u|0);w=d+32|0;x=c[w>>2]|0;y=c[b+112>>2]|0;g[k+(y<<2)>>2]=+(x|0);z=d+36|0;A=c[z>>2]|0;B=c[b+104>>2]|0;g[k+(B<<2)>>2]=+(A|0);C=+g[b>>2];D=+g[k>>2]*C;E=+g[b+4>>2];F=+g[k+4>>2]*E;G=+g[b+8>>2];H=+g[k+8>>2]*G;k=d+44|0;I=c[k>>2]|0;g[j+(v<<2)>>2]=+(I|0);J=d+48|0;M=c[J>>2]|0;g[j+(y<<2)>>2]=+(M|0);N=d+52|0;O=c[N>>2]|0;g[j+(B<<2)>>2]=+(O|0);P=C*+g[j>>2];Q=E*+g[j+4>>2];R=G*+g[j+8>>2];S=F*R-H*Q;T=H*P-D*R;R=D*Q-F*P;P=1.0/+W(R*R+(S*S+T*T));F=-0.0-e;e=S*P*F;S=T*P*F;T=R*P*F;j=l|0;g[j>>2]=e;U=l+4|0;g[U>>2]=S;V=l+8|0;g[V>>2]=T;g[l+12>>2]=0.0;if(C!=0.0){g[j>>2]=e/C}if(E!=0.0){g[U>>2]=S/E}if(G!=0.0){g[V>>2]=T/G}V=~~+g[l+(v<<2)>>2];v=~~+g[l+(y<<2)>>2];y=~~+g[l+(B<<2)>>2];if((v|V|y|0)==0){X=1;i=h;return X|0}B=(ag(O,x)|0)-(ag(M,A)|0)|0;l=B;U=(B|0)<0|0?-1:0;B=(ag(I,A)|0)-(ag(u,O)|0)|0;O=B;A=(B|0)<0|0?-1:0;B=(ag(u,M)|0)-(ag(I,x)|0)|0;x=B;I=(B|0)<0|0?-1:0;B=m|0;c[B>>2]=l;c[B+4>>2]=U;B=m+8|0;c[B>>2]=O;c[B+4>>2]=A;B=m+16|0;c[B>>2]=x;c[B+4>>2]=I;B=d+12|0;M=c[B>>2]|0;u=Li(M,(M|0)<0|0?-1:0,l,U)|0;j=K;Y=d+16|0;Z=c[Y>>2]|0;_=Li(Z,(Z|0)<0|0?-1:0,O,A)|0;$=K8(_,K,u,j)|0;j=K;u=d+20|0;_=c[u>>2]|0;aa=Li(_,(_|0)<0|0?-1:0,x,I)|0;ab=K8($,j,aa,K)|0;aa=K;j=M+V|0;V=Z+v|0;v=_+y|0;y=j;_=(j|0)<0|0?-1:0;Z=Li(y,_,l,U)|0;U=K;l=V;M=(V|0)<0|0?-1:0;$=Li(l,M,O,A)|0;A=K8($,K,Z,U)|0;U=K;Z=v;$=(v|0)<0|0?-1:0;O=Li(Z,$,x,I)|0;I=K8(A,U,O,K)|0;O=K;if(!((O|0)<(aa|0)|(O|0)==(aa|0)&I>>>0<ab>>>0)){X=0;i=h;return X|0}ab=c[d+4>>2]|0;aa=c[ab+8>>2]|0;zR(n,ab,m);ab=zz(n,I,O)|0;U=n;do{if((ab|0)>-1){A=o;x=aa;ac=ab;ad=aa;while(1){zR(o,c[ad+12>>2]|0,m);if((zy(o,n)|0)<0){ae=zz(o,I,O)|0;c[U>>2]=c[A>>2];c[U+4>>2]=c[A+4>>2];c[U+8>>2]=c[A+8>>2];c[U+12>>2]=c[A+12>>2];c[U+16>>2]=c[A+16>>2];c[U+20>>2]=c[A+20>>2];c[U+24>>2]=c[A+24>>2];c[U+28>>2]=c[A+28>>2];c[U+32>>2]=c[A+32>>2];a[U+36|0]=a[A+36|0]|0;af=c[ad+8>>2]|0;if((ae|0)<0){break}else{ah=af;ai=ae;aj=af}}else{ah=x;ai=ac;aj=ad}ae=c[aj+4>>2]|0;if((ae|0)==(ah|0)){X=0;ak=315;break}else{x=ah;ac=ai;ad=ae}}if((ak|0)==315){i=h;return X|0}if((af|0)==0){X=0}else{al=af;am=ac;break}i=h;return X|0}else{ad=p;x=aa;A=aa;while(1){zR(p,c[A+12>>2]|0,m);if((zy(p,n)|0)>0){an=zz(p,I,O)|0;if((an|0)>-1){break}c[U>>2]=c[ad>>2];c[U+4>>2]=c[ad+4>>2];c[U+8>>2]=c[ad+8>>2];c[U+12>>2]=c[ad+12>>2];c[U+16>>2]=c[ad+16>>2];c[U+20>>2]=c[ad+20>>2];c[U+24>>2]=c[ad+24>>2];c[U+28>>2]=c[ad+28>>2];c[U+32>>2]=c[ad+32>>2];a[U+36|0]=a[ad+36|0]|0;ae=c[A+8>>2]|0;ao=ae;ap=ae}else{ao=x;ap=A}ae=c[ap+4>>2]|0;if((ae|0)==(ao|0)){X=1;ak=313;break}else{x=ao;A=ae}}if((ak|0)==313){i=h;return X|0}if((A|0)==0){X=1}else{al=A;am=an;break}i=h;return X|0}}while(0);L39:do{if((am|0)==0){an=al+8|0;ao=c[c[an>>2]>>2]|0;while(1){zR(q,c[ao+12>>2]|0,m);if((zz(q,I,O)|0)>=1){break L39}ap=c[ao>>2]|0;if((ap|0)==(c[an>>2]|0)){X=1;break}else{ao=ap}}i=h;return X|0}}while(0);q=b+32|0;ao=(j|0)<0;an=K9(0,0,y,_)|0;A=K;ap=(V|0)<0;U=K9(0,0,l,M)|0;p=K;n=(v|0)<0;aa=K9(0,0,Z,$)|0;af=K;ai=f+4|0;ah=f+8|0;aj=f+12|0;o=f+16|0;ab=b+56|0;x=b+116|0;ad=b+48|0;ac=b+100|0;ae=b+120|0;aq=al;al=am;am=0;ar=0;as=0;L46:while(1){at=(al|0)==0;L48:do{if(at){au=c[c[aq+8>>2]>>2]|0;av=aq;aw=au;while(1){zR(r,c[aw+12>>2]|0,m);if((zz(r,I,O)|0)>-1){ax=av;break L48}ay=c[aw>>2]|0;if((ay|0)==(au|0)){X=1;ak=314;break L46}else{av=c[aw+8>>2]|0;aw=ay}}}else{ax=aq}}while(0);if((am|0)==0){az=ax}else{if((ax|0)==(am|0)){break}else{az=am}}aw=ax+8|0;av=c[aw>>2]|0;do{av=c[(c[av+8>>2]|0)+4>>2]|0;aA=av+12|0;zR(s,c[aA>>2]|0,m);aB=zz(s,I,O)|0;}while((aB|0)<=-1);if((aB|0)>0){au=c[aA>>2]|0;ay=av+8|0;aC=c[ay>>2]|0;aD=aC+4|0;aE=c[aD>>2]|0;aF=au+8|0;if((aE|0)==(aC|0)){c[aF>>2]=0}else{c[aF>>2]=aE;aE=c[aD>>2]|0;aF=aC|0;aG=c[aF>>2]|0;c[aE>>2]=aG;c[aG+4>>2]=aE;c[aF>>2]=aC;c[aD>>2]=aC}aD=c[av+16>>2]|0;aF=c[aD+32>>2]|0;aE=c[aD+52>>2]|0;aG=ag(aE,aF)|0;aH=c[aD+36>>2]|0;aI=c[aD+48>>2]|0;aJ=aG-(ag(aI,aH)|0)|0;aG=aJ;aK=(aJ|0)<0|0?-1:0;aJ=c[aD+44>>2]|0;aL=ag(aJ,aH)|0;aH=c[aD+28>>2]|0;aM=aL-(ag(aH,aE)|0)|0;aE=aM;aL=(aM|0)<0|0?-1:0;aM=(ag(aH,aI)|0)-(ag(aJ,aF)|0)|0;aF=aM;aJ=(aM|0)<0|0?-1:0;aM=c[(c[ay>>2]|0)+16>>2]|0;ay=c[aM+32>>2]|0;aI=c[aM+52>>2]|0;aH=ag(aI,ay)|0;aN=c[aM+36>>2]|0;aO=c[aM+48>>2]|0;aP=aH-(ag(aO,aN)|0)|0;aH=aP;aQ=(aP|0)<0|0?-1:0;aP=c[aM+44>>2]|0;aR=ag(aP,aN)|0;aN=c[aM+28>>2]|0;aS=aR-(ag(aN,aI)|0)|0;aI=aS;aR=(aS|0)<0|0?-1:0;aS=(ag(aN,aO)|0)-(ag(aP,ay)|0)|0;ay=aS;aP=(aS|0)<0|0?-1:0;aS=c[t>>2]|0;aO=aS;aN=(aS|0)<0|0?-1:0;aS=Li(aO,aN,aG,aK)|0;aT=K;aU=c[w>>2]|0;aV=aU;aW=(aU|0)<0|0?-1:0;aU=Li(aV,aW,aE,aL)|0;aX=K8(aU,K,aS,aT)|0;aT=K;aS=c[z>>2]|0;aU=aS;aY=(aS|0)<0|0?-1:0;aS=Li(aU,aY,aF,aJ)|0;aZ=K8(aX,aT,aS,K)|0;aS=K;aT=c[k>>2]|0;aX=aT;a_=(aT|0)<0|0?-1:0;aT=Li(aX,a_,aG,aK)|0;a$=K;a0=c[J>>2]|0;a1=a0;a2=(a0|0)<0|0?-1:0;a0=Li(a1,a2,aE,aL)|0;a3=K8(a0,K,aT,a$)|0;a$=K;aT=c[N>>2]|0;a0=aT;a4=(aT|0)<0|0?-1:0;aT=Li(a0,a4,aF,aJ)|0;a5=K8(a3,a$,aT,K)|0;aT=K;a$=Li(aO,aN,aH,aQ)|0;aN=K;aO=Li(aV,aW,aI,aR)|0;aW=K8(aO,K,a$,aN)|0;aN=K;a$=Li(aU,aY,ay,aP)|0;aY=K8(aW,aN,a$,K)|0;a$=K;aN=Li(aX,a_,aH,aQ)|0;a_=K;aX=Li(a1,a2,aI,aR)|0;a2=K8(aX,K,aN,a_)|0;a_=K;aN=Li(a0,a4,ay,aP)|0;a4=K8(a2,a_,aN,K)|0;aN=K;a_=(c[aD+12>>2]|0)-j|0;a2=(c[aD+16>>2]|0)-V|0;a0=(c[aD+20>>2]|0)-v|0;aD=Li(a_,(a_|0)<0|0?-1:0,aG,aK)|0;aK=K;aG=Li(a2,(a2|0)<0|0?-1:0,aE,aL)|0;aL=K8(aG,K,aD,aK)|0;aK=K;aD=Li(a0,(a0|0)<0|0?-1:0,aF,aJ)|0;aJ=K8(aL,aK,aD,K)|0;aD=K;aK=(c[aM+12>>2]|0)-j|0;aL=(c[aM+16>>2]|0)-V|0;aF=(c[aM+20>>2]|0)-v|0;aM=Li(aK,(aK|0)<0|0?-1:0,aH,aQ)|0;aQ=K;aH=Li(aL,(aL|0)<0|0?-1:0,aI,aR)|0;aR=K8(aH,K,aM,aQ)|0;aQ=K;aM=Li(aF,(aF|0)<0|0?-1:0,ay,aP)|0;aP=K8(aR,aQ,aM,K)|0;aM=K;aQ=0;aR=(aS|0)<(aQ|0)|(aS|0)==(aQ|0)&aZ>>>0<0>>>0;aQ=K9(0,0,aZ,aS)|0;ay=aR?K:aS;aS=0;aF=(aN|0)<(aS|0)|(aN|0)==(aS|0)&a4>>>0<0>>>0;if(aF){aS=K9(0,0,a4,aN)|0;a6=aR^1;a7=K;a8=aS}else{a6=aR;a7=aN;a8=a4}aS=(aR?aQ:aZ)|0;aZ=ay&0;aQ=a8|0;aH=a7&0;aI=Li(aQ,aH,aS,aZ)|0;aL=K;aK=a7;a0=0;aG=Li(aK,a0,aS,aZ)|0;aE=K;a2=ay;ay=0;a_=Li(aQ,aH,a2,ay)|0;aH=K;aQ=Li(aK,a0,a2,ay)|0;a0=K;aK=K8(aG|0,aE&0,a_|0,aH&0)|0;a_=K;aG=K8(aE,0,aQ,a0)|0;a0=K8(aG,K,aH,0)|0;aH=K;aG=K5(aI|0,aL|0,0,aK|0)|0;aK=aG;aG=K;aL=K8(a0,aH,L&1,0)|0;aH=K8(aL,K,a_,0)|0;a_=K;if(a6){aL=K9(0,0,aK,aG)|0;a0=K;aI=K8((aK|0)==0&(aG|0)==0&1,0,~aH,~a_)|0;a9=a0;ba=aL;bb=K;bc=aI}else{a9=aG;ba=aK;bb=a_;bc=aH}aH=0;a_=(aT|0)<(aH|0)|(aT|0)==(aH|0)&a5>>>0<0>>>0;aH=K9(0,0,a5,aT)|0;aK=a_?K:aT;aT=0;aG=(a$|0)<(aT|0)|(a$|0)==(aT|0)&aY>>>0<0>>>0;if(aG){aT=K9(0,0,aY,a$)|0;bd=a_^1;be=K;bf=aT}else{bd=a_;be=a$;bf=aY}aT=(a_?aH:a5)|0;a5=aK&0;aH=bf|0;aI=be&0;aL=Li(aH,aI,aT,a5)|0;a0=K;aQ=be;aE=0;aX=Li(aQ,aE,aT,a5)|0;a1=K;aW=aK;aK=0;aU=Li(aH,aI,aW,aK)|0;aI=K;aH=Li(aQ,aE,aW,aK)|0;aE=K;aQ=K8(aX|0,a1&0,aU|0,aI&0)|0;aU=K;aX=K8(a1,0,aH,aE)|0;aE=K8(aX,K,aI,0)|0;aI=K;aX=K5(aL|0,a0|0,0,aQ|0)|0;aQ=aX;aX=K;a0=K8(aE,aI,L&1,0)|0;aI=K8(a0,K,aU,0)|0;aU=K;if(bd){a0=K9(0,0,aQ,aX)|0;aE=K;aL=K8((aQ|0)==0&(aX|0)==0&1,0,~aI,~aU)|0;bg=aE;bh=a0;bi=K;bj=aL}else{bg=aX;bh=aQ;bi=aU;bj=aI}aI=K9(0,0,bh,bg)|0;aU=K5(ba|0,a9|0,aI|0,K|0)|0;aI=aU;aU=K;aQ=L&1;aX=K8(bc,bb,~bj,~bi)|0;aL=K8(aX,K,(bh|0)==0&(bg|0)==0&1,0)|0;aX=K8(aL,K,aQ,0)|0;aQ=K;aL=zK(q)|0;c[aL+100>>2]=-1;c[aL+104>>2]=-1;a0=c[t>>2]|0;aE=a0;aH=(a0|0)<0|0?-1:0;a0=Li(aE,aH,aJ,aD)|0;a1=K;aO=0;aV=(a1|0)<(aO|0)|(a1|0)==(aO|0)&a0>>>0<0>>>0;aO=K9(0,0,a0,a1)|0;a3=aV?K:a1;if(aF){a1=K9(0,0,a4,aN)|0;bk=aV^1;bl=K;bm=a1}else{bk=aV;bl=aN;bm=a4}a1=(aV?aO:a0)|0;a0=a3&0;aO=bm|0;aV=bl&0;bn=Li(aO,aV,a1,a0)|0;bo=K;bp=bl;bq=0;br=Li(bp,bq,a1,a0)|0;a0=K;a1=a3;a3=0;bs=Li(aO,aV,a1,a3)|0;aV=K;aO=Li(bp,bq,a1,a3)|0;a3=K;a1=K8(br|0,a0&0,bs|0,aV&0)|0;bs=K;br=K8(a0,0,aO,a3)|0;a3=K8(br,K,aV,0)|0;aV=K;br=K5(bn|0,bo|0,0,a1|0)|0;a1=br;br=K;bo=K8(a3,aV,L&1,0)|0;aV=K8(bo,K,bs,0)|0;bs=K;if(bk){bo=K9(0,0,a1,br)|0;a3=K;bn=K8((a1|0)==0&(br|0)==0&1,0,~aV,~bs)|0;bt=a3;bu=bo;bv=K;bw=bn}else{bt=br;bu=a1;bv=bs;bw=aV}aV=Li(aE,aH,aP,aM)|0;aH=K;aE=0;bs=(aH|0)<(aE|0)|(aH|0)==(aE|0)&aV>>>0<0>>>0;aE=K9(0,0,aV,aH)|0;a1=bs?K:aH;aH=(bs?aE:aV)|0;aV=a1&0;aE=Li(aH,aV,aT,a5)|0;br=K;bn=Li(aH,aV,aW,aK)|0;aV=K;aH=a1;a1=0;bo=Li(aH,a1,aT,a5)|0;a3=K;aO=Li(aH,a1,aW,aK)|0;a1=K;aH=K8(bn|0,aV&0,bo|0,a3&0)|0;bo=K;bn=K5(aE|0,br|0,0,aH|0)|0;aH=bn;bn=K;br=K8(aO,a1,L&1,0)|0;a1=K8(br,K,aV,0)|0;aV=K8(a1,K,a3,0)|0;a3=K8(aV,K,bo,0)|0;bo=K;if(bs^a_){bs=K9(0,0,aH,bn)|0;aV=K;a1=K8((aH|0)==0&(bn|0)==0&1,0,~a3,~bo)|0;bx=aV;by=bs;bz=K;bA=a1}else{bx=bn;by=aH;bz=bo;bA=a3}a3=K9(0,0,by,bx)|0;bo=K5(bu|0,bt|0,a3|0,K|0)|0;a3=K;aH=L&1;bn=c[k>>2]|0;a1=bn;bs=(bn|0)<0|0?-1:0;bn=Li(a1,bs,aP,aM)|0;aV=K;br=0;aO=(aV|0)<(br|0)|(aV|0)==(br|0)&bn>>>0<0>>>0;br=K9(0,0,bn,aV)|0;aE=aO?K:aV;aV=(aO?br:bn)|0;bn=aE&0;br=Li(aV,bn,aS,aZ)|0;a0=K;bq=Li(aV,bn,a2,ay)|0;bn=K;aV=aE;aE=0;bp=Li(aV,aE,aS,aZ)|0;bB=K;bC=Li(aV,aE,a2,ay)|0;aE=K;aV=K8(bq|0,bn&0,bp|0,bB&0)|0;bp=K;bq=K5(br|0,a0|0,0,aV|0)|0;aV=bq;bq=K;a0=K8(bC,aE,L&1,0)|0;aE=K8(a0,K,bn,0)|0;bn=K8(aE,K,bB,0)|0;bB=K8(bn,K,bp,0)|0;bp=K;if(aO^aR){aO=K9(0,0,aV,bq)|0;bn=K;aE=K8((aV|0)==0&(bq|0)==0&1,0,~bB,~bp)|0;bD=bn;bE=aO;bF=K;bG=aE}else{bD=bq;bE=aV;bF=bp;bG=bB}bB=K5(bo|0,a3|0,bE|0,bD|0)|0;a3=K;bo=L&1;bp=Li(a1,bs,aJ,aD)|0;bs=K;a1=0;aV=(bs|0)<(a1|0)|(bs|0)==(a1|0)&bp>>>0<0>>>0;a1=K9(0,0,bp,bs)|0;bq=aV?K:bs;if(aG){bs=K9(0,0,aY,a$)|0;bH=aV^1;bI=K;bJ=bs}else{bH=aV;bI=a$;bJ=aY}bs=(aV?a1:bp)|0;bp=bq&0;a1=bJ|0;aV=bI&0;aE=Li(a1,aV,bs,bp)|0;aO=K;bn=bI;a0=0;bC=Li(bn,a0,bs,bp)|0;bp=K;bs=bq;bq=0;br=Li(a1,aV,bs,bq)|0;aV=K;a1=Li(bn,a0,bs,bq)|0;bq=K;bs=K8(bC|0,bp&0,br|0,aV&0)|0;br=K;bC=K8(bp,0,a1,bq)|0;bq=K8(bC,K,aV,0)|0;aV=K;bC=K5(aE|0,aO|0,0,bs|0)|0;bs=bC;bC=K;aO=K8(bq,aV,L&1,0)|0;aV=K8(aO,K,br,0)|0;br=K;if(bH){aO=K9(0,0,bs,bC)|0;bq=K;aE=K8((bs|0)==0&(bC|0)==0&1,0,~aV,~br)|0;bK=bq;bL=aO;bM=K;bN=aE}else{bK=bC;bL=bs;bM=br;bN=aV}aV=K9(0,0,bL,bK)|0;br=K5(bB|0,a3|0,aV|0,K|0)|0;aV=K;a3=L&1;bB=0;bs=(aQ|0)<(bB|0)|(aQ|0)==(bB|0)&aX>>>0<0>>>0;if(bs){bB=K9(0,0,aI,aU)|0;bC=K;aE=K8((aI|0)==0&(aU|0)==0&1,0,~aX,~aQ)|0;bO=bC;bP=bB;bQ=K;bR=aE}else{bO=aU;bP=aI;bQ=aQ;bR=aX}aE=ao?an:y;bB=ao?A:_;bC=bP|0;aO=bO&0;bq=aE|0;a1=bB&0;bp=Li(bq,a1,bC,aO)|0;a0=K;bn=bB;bS=0;bT=Li(bn,bS,bC,aO)|0;aO=K;bC=bO;bU=0;bV=Li(bq,a1,bC,bU)|0;a1=K;bq=Li(bn,bS,bC,bU)|0;bU=K;bC=K8(bT|0,aO&0,bV|0,a1&0)|0;bV=K;bT=K5(bp|0,a0|0,0,bC|0)|0;bC=bT;bT=K;a0=L&1;bp=Li(aE,bB,bR,bQ)|0;bB=K8(bq,bU,bp,K)|0;bp=K8(bB,K,aO,0)|0;aO=K8(bp,K,a1,0)|0;a1=K8(aO,K,a0,0)|0;a0=K8(a1,K,bV,0)|0;bV=K;if(bs^ao){a1=K9(0,0,bC,bT)|0;aO=K;bp=K8((bC|0)==0&(bT|0)==0&1,0,~a0,~bV)|0;bW=aO;bX=a1;bY=K;bZ=bp}else{bW=bT;bX=bC;bY=bV;bZ=a0}a0=K5(br|0,aV|0,bX|0,bW|0)|0;aV=K;br=L&1;bV=K8(bw,bv,~bA,~bz)|0;bC=K8(bV,K,(by|0)==0&(bx|0)==0&1,0)|0;bV=K8(bC,K,aH,0)|0;aH=K8(bV,K,bG,bF)|0;bV=K8(aH,K,bo,0)|0;bo=K8(bV,K,~bN,~bM)|0;bV=K8(bo,K,(bL|0)==0&(bK|0)==0&1,0)|0;bo=K8(bV,K,a3,0)|0;a3=K8(bo,K,bZ,bY)|0;bo=K8(a3,K,br,0)|0;br=K;a3=c[w>>2]|0;bV=a3;aH=(a3|0)<0|0?-1:0;a3=Li(bV,aH,aJ,aD)|0;bC=K;bT=0;bp=(bC|0)<(bT|0)|(bC|0)==(bT|0)&a3>>>0<0>>>0;bT=K9(0,0,a3,bC)|0;a1=bp?K:bC;if(aF){bC=K9(0,0,a4,aN)|0;b_=bp^1;b$=K;b0=bC}else{b_=bp;b$=aN;b0=a4}bC=(bp?bT:a3)|0;a3=a1&0;bT=b0|0;bp=b$&0;aO=Li(bT,bp,bC,a3)|0;bB=K;bU=b$;bq=0;aE=Li(bU,bq,bC,a3)|0;a3=K;bC=a1;a1=0;bS=Li(bT,bp,bC,a1)|0;bp=K;bT=Li(bU,bq,bC,a1)|0;a1=K;bC=K8(aE|0,a3&0,bS|0,bp&0)|0;bS=K;aE=K8(a3,0,bT,a1)|0;a1=K8(aE,K,bp,0)|0;bp=K;aE=K5(aO|0,bB|0,0,bC|0)|0;bC=aE;aE=K;bB=K8(a1,bp,L&1,0)|0;bp=K8(bB,K,bS,0)|0;bS=K;if(b_){bB=K9(0,0,bC,aE)|0;a1=K;aO=K8((bC|0)==0&(aE|0)==0&1,0,~bp,~bS)|0;b1=a1;b2=bB;b3=K;b4=aO}else{b1=aE;b2=bC;b3=bS;b4=bp}bp=Li(bV,aH,aP,aM)|0;aH=K;bV=0;bS=(aH|0)<(bV|0)|(aH|0)==(bV|0)&bp>>>0<0>>>0;bV=K9(0,0,bp,aH)|0;bC=bS?K:aH;aH=(bS?bV:bp)|0;bp=bC&0;bV=Li(aH,bp,aT,a5)|0;aE=K;aO=Li(aH,bp,aW,aK)|0;bp=K;aH=bC;bC=0;bB=Li(aH,bC,aT,a5)|0;a1=K;bT=Li(aH,bC,aW,aK)|0;bC=K;aH=K8(aO|0,bp&0,bB|0,a1&0)|0;bB=K;aO=K5(bV|0,aE|0,0,aH|0)|0;aH=aO;aO=K;aE=K8(bT,bC,L&1,0)|0;bC=K8(aE,K,bp,0)|0;bp=K8(bC,K,a1,0)|0;a1=K8(bp,K,bB,0)|0;bB=K;if(bS^a_){bS=K9(0,0,aH,aO)|0;bp=K;bC=K8((aH|0)==0&(aO|0)==0&1,0,~a1,~bB)|0;b5=bp;b6=bS;b7=K;b8=bC}else{b5=aO;b6=aH;b7=bB;b8=a1}a1=K9(0,0,b6,b5)|0;bB=K5(b2|0,b1|0,a1|0,K|0)|0;a1=K;aH=L&1;aO=c[J>>2]|0;bC=aO;bS=(aO|0)<0|0?-1:0;aO=Li(bC,bS,aP,aM)|0;bp=K;aE=0;bT=(bp|0)<(aE|0)|(bp|0)==(aE|0)&aO>>>0<0>>>0;aE=K9(0,0,aO,bp)|0;bV=bT?K:bp;bp=(bT?aE:aO)|0;aO=bV&0;aE=Li(bp,aO,aS,aZ)|0;a3=K;bq=Li(bp,aO,a2,ay)|0;aO=K;bp=bV;bV=0;bU=Li(bp,bV,aS,aZ)|0;bn=K;b9=Li(bp,bV,a2,ay)|0;bV=K;bp=K8(bq|0,aO&0,bU|0,bn&0)|0;bU=K;bq=K5(aE|0,a3|0,0,bp|0)|0;bp=bq;bq=K;a3=K8(b9,bV,L&1,0)|0;bV=K8(a3,K,aO,0)|0;aO=K8(bV,K,bn,0)|0;bn=K8(aO,K,bU,0)|0;bU=K;if(bT^aR){bT=K9(0,0,bp,bq)|0;aO=K;bV=K8((bp|0)==0&(bq|0)==0&1,0,~bn,~bU)|0;ca=aO;cb=bT;cc=K;cd=bV}else{ca=bq;cb=bp;cc=bU;cd=bn}bn=K5(bB|0,a1|0,cb|0,ca|0)|0;a1=K;bB=L&1;bU=Li(bC,bS,aJ,aD)|0;bS=K;bC=0;bp=(bS|0)<(bC|0)|(bS|0)==(bC|0)&bU>>>0<0>>>0;bC=K9(0,0,bU,bS)|0;bq=bp?K:bS;if(aG){bS=K9(0,0,aY,a$)|0;ce=bp^1;cf=K;cg=bS}else{ce=bp;cf=a$;cg=aY}bS=(bp?bC:bU)|0;bU=bq&0;bC=cg|0;bp=cf&0;bV=Li(bC,bp,bS,bU)|0;bT=K;aO=cf;a3=0;b9=Li(aO,a3,bS,bU)|0;bU=K;bS=bq;bq=0;aE=Li(bC,bp,bS,bq)|0;bp=K;bC=Li(aO,a3,bS,bq)|0;bq=K;bS=K8(b9|0,bU&0,aE|0,bp&0)|0;aE=K;b9=K8(bU,0,bC,bq)|0;bq=K8(b9,K,bp,0)|0;bp=K;b9=K5(bV|0,bT|0,0,bS|0)|0;bS=b9;b9=K;bT=K8(bq,bp,L&1,0)|0;bp=K8(bT,K,aE,0)|0;aE=K;if(ce){bT=K9(0,0,bS,b9)|0;bq=K;bV=K8((bS|0)==0&(b9|0)==0&1,0,~bp,~aE)|0;ch=bq;ci=bT;cj=K;ck=bV}else{ch=b9;ci=bS;cj=aE;ck=bp}bp=K9(0,0,ci,ch)|0;aE=K5(bn|0,a1|0,bp|0,K|0)|0;bp=K;a1=L&1;if(bs){bn=K9(0,0,aI,aU)|0;bS=K;b9=K8((aI|0)==0&(aU|0)==0&1,0,~aX,~aQ)|0;cl=bS;cm=bn;cn=K;co=b9}else{cl=aU;cm=aI;cn=aQ;co=aX}b9=ap?U:l;bn=ap?p:M;bS=cm|0;bV=cl&0;bT=b9|0;bq=bn&0;bC=Li(bT,bq,bS,bV)|0;bU=K;a3=bn;aO=0;cp=Li(a3,aO,bS,bV)|0;bV=K;bS=cl;cq=0;cr=Li(bT,bq,bS,cq)|0;bq=K;bT=Li(a3,aO,bS,cq)|0;cq=K;bS=K8(cp|0,bV&0,cr|0,bq&0)|0;cr=K;cp=K5(bC|0,bU|0,0,bS|0)|0;bS=cp;cp=K;bU=L&1;bC=Li(b9,bn,co,cn)|0;bn=K8(bT,cq,bC,K)|0;bC=K8(bn,K,bV,0)|0;bV=K8(bC,K,bq,0)|0;bq=K8(bV,K,bU,0)|0;bU=K8(bq,K,cr,0)|0;cr=K;if(bs^ap){bq=K9(0,0,bS,cp)|0;bV=K;bC=K8((bS|0)==0&(cp|0)==0&1,0,~bU,~cr)|0;cs=bV;ct=bq;cu=K;cv=bC}else{cs=cp;ct=bS;cu=cr;cv=bU}bU=K5(aE|0,bp|0,ct|0,cs|0)|0;bp=K;aE=L&1;cr=K8(b4,b3,~b8,~b7)|0;bS=K8(cr,K,(b6|0)==0&(b5|0)==0&1,0)|0;cr=K8(bS,K,aH,0)|0;aH=K8(cr,K,cd,cc)|0;cr=K8(aH,K,bB,0)|0;bB=K8(cr,K,~ck,~cj)|0;cr=K8(bB,K,(ci|0)==0&(ch|0)==0&1,0)|0;bB=K8(cr,K,a1,0)|0;a1=K8(bB,K,cv,cu)|0;bB=K8(a1,K,aE,0)|0;aE=K;a1=c[z>>2]|0;cr=a1;aH=(a1|0)<0|0?-1:0;a1=Li(cr,aH,aJ,aD)|0;bS=K;cp=0;bC=(bS|0)<(cp|0)|(bS|0)==(cp|0)&a1>>>0<0>>>0;cp=K9(0,0,a1,bS)|0;bq=bC?K:bS;if(aF){aF=K9(0,0,a4,aN)|0;cw=bC^1;cx=K;cy=aF}else{cw=bC;cx=aN;cy=a4}a4=(bC?cp:a1)|0;a1=bq&0;cp=cy|0;bC=cx&0;aN=Li(cp,bC,a4,a1)|0;aF=K;bS=cx;bV=0;bn=Li(bS,bV,a4,a1)|0;a1=K;a4=bq;bq=0;cq=Li(cp,bC,a4,bq)|0;bC=K;cp=Li(bS,bV,a4,bq)|0;bq=K;a4=K8(bn|0,a1&0,cq|0,bC&0)|0;cq=K;bn=K8(a1,0,cp,bq)|0;bq=K8(bn,K,bC,0)|0;bC=K;bn=K5(aN|0,aF|0,0,a4|0)|0;a4=bn;bn=K;aF=K8(bq,bC,L&1,0)|0;bC=K8(aF,K,cq,0)|0;cq=K;if(cw){aF=K9(0,0,a4,bn)|0;bq=K;aN=K8((a4|0)==0&(bn|0)==0&1,0,~bC,~cq)|0;cz=bq;cA=aF;cB=K;cC=aN}else{cz=bn;cA=a4;cB=cq;cC=bC}bC=Li(cr,aH,aP,aM)|0;aH=K;cr=0;cq=(aH|0)<(cr|0)|(aH|0)==(cr|0)&bC>>>0<0>>>0;cr=K9(0,0,bC,aH)|0;a4=cq?K:aH;aH=(cq?cr:bC)|0;bC=a4&0;cr=Li(aH,bC,aT,a5)|0;bn=K;aN=Li(aH,bC,aW,aK)|0;bC=K;aH=a4;a4=0;aF=Li(aH,a4,aT,a5)|0;a5=K;aT=Li(aH,a4,aW,aK)|0;aK=K;aW=K8(aN|0,bC&0,aF|0,a5&0)|0;aF=K;aN=K5(cr|0,bn|0,0,aW|0)|0;aW=aN;aN=K;bn=K8(aT,aK,L&1,0)|0;aK=K8(bn,K,bC,0)|0;bC=K8(aK,K,a5,0)|0;a5=K8(bC,K,aF,0)|0;aF=K;if(cq^a_){a_=K9(0,0,aW,aN)|0;cq=K;bC=K8((aW|0)==0&(aN|0)==0&1,0,~a5,~aF)|0;cD=cq;cE=a_;cF=K;cG=bC}else{cD=aN;cE=aW;cF=aF;cG=a5}a5=K9(0,0,cE,cD)|0;aF=K5(cA|0,cz|0,a5|0,K|0)|0;a5=K;aW=L&1;aN=c[N>>2]|0;bC=aN;a_=(aN|0)<0|0?-1:0;aN=Li(bC,a_,aP,aM)|0;aM=K;aP=0;cq=(aM|0)<(aP|0)|(aM|0)==(aP|0)&aN>>>0<0>>>0;aP=K9(0,0,aN,aM)|0;aK=cq?K:aM;aM=(cq?aP:aN)|0;aN=aK&0;aP=Li(aM,aN,aS,aZ)|0;bn=K;aT=Li(aM,aN,a2,ay)|0;aN=K;aM=aK;aK=0;cr=Li(aM,aK,aS,aZ)|0;aZ=K;aS=Li(aM,aK,a2,ay)|0;ay=K;a2=K8(aT|0,aN&0,cr|0,aZ&0)|0;cr=K;aT=K5(aP|0,bn|0,0,a2|0)|0;a2=aT;aT=K;bn=K8(aS,ay,L&1,0)|0;ay=K8(bn,K,aN,0)|0;aN=K8(ay,K,aZ,0)|0;aZ=K8(aN,K,cr,0)|0;cr=K;if(cq^aR){aR=K9(0,0,a2,aT)|0;cq=K;aN=K8((a2|0)==0&(aT|0)==0&1,0,~aZ,~cr)|0;cH=cq;cI=aR;cJ=K;cK=aN}else{cH=aT;cI=a2;cJ=cr;cK=aZ}aZ=K5(aF|0,a5|0,cI|0,cH|0)|0;a5=K;aF=L&1;cr=Li(bC,a_,aJ,aD)|0;aD=K;aJ=0;a_=(aD|0)<(aJ|0)|(aD|0)==(aJ|0)&cr>>>0<0>>>0;aJ=K9(0,0,cr,aD)|0;bC=a_?K:aD;if(aG){aG=K9(0,0,aY,a$)|0;cL=a_^1;cM=K;cN=aG}else{cL=a_;cM=a$;cN=aY}aY=(a_?aJ:cr)|0;cr=bC&0;aJ=cN|0;a_=cM&0;a$=Li(aJ,a_,aY,cr)|0;aG=K;aD=cM;a2=0;aT=Li(aD,a2,aY,cr)|0;cr=K;aY=bC;bC=0;aN=Li(aJ,a_,aY,bC)|0;a_=K;aJ=Li(aD,a2,aY,bC)|0;bC=K;aY=K8(aT|0,cr&0,aN|0,a_&0)|0;aN=K;aT=K8(cr,0,aJ,bC)|0;bC=K8(aT,K,a_,0)|0;a_=K;aT=K5(a$|0,aG|0,0,aY|0)|0;aY=aT;aT=K;aG=K8(bC,a_,L&1,0)|0;a_=K8(aG,K,aN,0)|0;aN=K;if(cL){aG=K9(0,0,aY,aT)|0;bC=K;a$=K8((aY|0)==0&(aT|0)==0&1,0,~a_,~aN)|0;cO=bC;cP=aG;cQ=K;cR=a$}else{cO=aT;cP=aY;cQ=aN;cR=a_}a_=K9(0,0,cP,cO)|0;aN=K5(aZ|0,a5|0,a_|0,K|0)|0;a_=K;a5=L&1;if(bs){aZ=K9(0,0,aI,aU)|0;aY=K;aT=K8((aI|0)==0&(aU|0)==0&1,0,~aX,~aQ)|0;cS=aY;cT=aZ;cU=K;cV=aT}else{cS=aU;cT=aI;cU=aQ;cV=aX}aT=n?aa:Z;aZ=n?af:$;aY=cT|0;a$=cS&0;aG=aT|0;bC=aZ&0;aJ=Li(aG,bC,aY,a$)|0;cr=K;a2=aZ;aD=0;aR=Li(a2,aD,aY,a$)|0;a$=K;aY=cS;cq=0;ay=Li(aG,bC,aY,cq)|0;bC=K;aG=Li(a2,aD,aY,cq)|0;cq=K;aY=K8(aR|0,a$&0,ay|0,bC&0)|0;ay=K;aR=K5(aJ|0,cr|0,0,aY|0)|0;aY=aR;aR=K;cr=L&1;aJ=Li(aT,aZ,cV,cU)|0;aZ=K8(aG,cq,aJ,K)|0;aJ=K8(aZ,K,a$,0)|0;a$=K8(aJ,K,bC,0)|0;bC=K8(a$,K,cr,0)|0;cr=K8(bC,K,ay,0)|0;ay=K;if(bs^n){bs=K9(0,0,aY,aR)|0;bC=K;a$=K8((aY|0)==0&(aR|0)==0&1,0,~cr,~ay)|0;cW=bC;cX=bs;cY=K;cZ=a$}else{cW=aR;cX=aY;cY=ay;cZ=cr}cr=K5(aN|0,a_|0,cX|0,cW|0)|0;a_=K;aN=L&1;ay=K8(cC,cB,~cG,~cF)|0;aY=K8(ay,K,(cE|0)==0&(cD|0)==0&1,0)|0;ay=K8(aY,K,aW,0)|0;aW=K8(ay,K,cK,cJ)|0;ay=K8(aW,K,aF,0)|0;aF=K8(ay,K,~cR,~cQ)|0;ay=K8(aF,K,(cP|0)==0&(cO|0)==0&1,0)|0;aF=K8(ay,K,a5,0)|0;a5=K8(aF,K,cZ,cY)|0;aF=K8(a5,K,aN,0)|0;aN=aL+24|0;c[aN>>2]=a0;c[aN+4>>2]=aV;aV=aL+32|0;c[aV>>2]=bo;c[aV+4>>2]=br;br=aL+40|0;c[br>>2]=bU;c[br+4>>2]=bp;bp=aL+48|0;c[bp>>2]=bB;c[bp+4>>2]=aE;aE=aL+56|0;c[aE>>2]=cr;c[aE+4>>2]=a_;a_=aL+64|0;c[a_>>2]=aF;c[a_+4>>2]=K;a_=aL+72|0;c[a_>>2]=aI;c[a_+4>>2]=aU;aU=aL+80|0;c[aU>>2]=aX;c[aU+4>>2]=aQ;G=+zP(aL+24|0);aQ=aL+72|0;c[aL+88>>2]=~~(G/+zP(aQ));G=+zP(aL+40|0);c[aL+92>>2]=~~(G/+zP(aQ));G=+zP(aL+56|0);c[aL+96>>2]=~~(G/+zP(aQ));c[aA>>2]=aL;c[aL+8>>2]=aC;aC=c[ai>>2]|0;aQ=c[ah>>2]|0;do{if((aC|0)==(aQ|0)){aU=(aC|0)==0?1:aC<<1;if((aC|0)>=(aU|0)){c_=aC;c$=aC;break}if((aU|0)==0){c0=0;c1=aC}else{aX=zv(aU<<2,16)|0;c0=aX;c1=c[ai>>2]|0}if((c1|0)>0){aX=0;do{a_=c0+(aX<<2)|0;if((a_|0)!=0){c[a_>>2]=c[(c[aj>>2]|0)+(aX<<2)>>2]}aX=aX+1|0;}while((aX|0)<(c1|0))}aX=c[aj>>2]|0;if((aX|0)!=0){if((a[o]&1)!=0){zw(aX)}c[aj>>2]=0}a[o]=1;c[aj>>2]=c0;c[ah>>2]=aU;c_=c[ai>>2]|0;c$=aU}else{c_=aC;c$=aQ}}while(0);aQ=(c[aj>>2]|0)+(c_<<2)|0;if((aQ|0)==0){c2=c_;c3=c$}else{c[aQ>>2]=aL;c2=c[ai>>2]|0;c3=c[ah>>2]|0}aQ=c2+1|0;c[ai>>2]=aQ;do{if((aQ|0)==(c3|0)){aC=(c3|0)==0?1:c3<<1;if((c3|0)>=(aC|0)){c4=c3;c5=c3;break}if((aC|0)==0){c6=0;c7=c3}else{aX=zv(aC<<2,16)|0;c6=aX;c7=c[ai>>2]|0}if((c7|0)>0){aX=0;do{a_=c6+(aX<<2)|0;if((a_|0)!=0){c[a_>>2]=c[(c[aj>>2]|0)+(aX<<2)>>2]}aX=aX+1|0;}while((aX|0)<(c7|0))}aX=c[aj>>2]|0;if((aX|0)!=0){if((a[o]&1)!=0){zw(aX)}c[aj>>2]=0}a[o]=1;c[aj>>2]=c6;c[ah>>2]=aC;c4=c[ai>>2]|0;c5=aC}else{c4=aQ;c5=c3}}while(0);aQ=(c[aj>>2]|0)+(c4<<2)|0;if((aQ|0)==0){c8=c4;c9=c5}else{c[aQ>>2]=au;c8=c[ai>>2]|0;c9=c[ah>>2]|0}aQ=c8+1|0;c[ai>>2]=aQ;do{if((aQ|0)==(c9|0)){aL=(c9|0)==0?1:c9<<1;if((c9|0)>=(aL|0)){da=c9;break}if((aL|0)==0){db=0;dc=c9}else{aX=zv(aL<<2,16)|0;db=aX;dc=c[ai>>2]|0}if((dc|0)>0){aX=0;do{aU=db+(aX<<2)|0;if((aU|0)!=0){c[aU>>2]=c[(c[aj>>2]|0)+(aX<<2)>>2]}aX=aX+1|0;}while((aX|0)<(dc|0))}aX=c[aj>>2]|0;if((aX|0)!=0){if((a[o]&1)!=0){zw(aX)}c[aj>>2]=0}a[o]=1;c[aj>>2]=db;c[ah>>2]=aL;da=c[ai>>2]|0}else{da=aQ}}while(0);aQ=(c[aj>>2]|0)+(da<<2)|0;if((aQ|0)==0){dd=da}else{c[aQ>>2]=0;dd=c[ai>>2]|0}c[ai>>2]=dd+1}aQ=(aB|0)==0;if((aB|al|0)==0){au=c[c[aw>>2]>>2]|0;aX=c[aA>>2]|0;if((c[au+12>>2]|0)==(aX|0)){de=au}else{df=aX;ak=143}}else{df=c[aA>>2]|0;ak=143}if((ak|0)==143){ak=0;aX=c[ax+12>>2]|0;au=zB(ad)|0;aC=zB(ad)|0;aU=au+8|0;c[aU>>2]=aC;c[aC+8>>2]=au;c[au+20>>2]=c[ac>>2];c[aC+20>>2]=c[ac>>2];c[au+12>>2]=df;c[aC+12>>2]=aX;c[au+16>>2]=0;c[aC+16>>2]=0;aC=(c[x>>2]|0)+1|0;c[x>>2]=aC;if((aC|0)>(c[ae>>2]|0)){c[ae>>2]=aC}if(at){aC=c[c[aw>>2]>>2]|0;c[au>>2]=aC;c[aC+4>>2]=au;ak=148}else{if((ar|0)!=0){ak=148}}if((ak|0)==148){ak=0;aC=c[aw>>2]|0;c[aC>>2]=au;c[au+4>>2]=aC}aC=av+8|0;if(aQ){aQ=c[(c[aC>>2]|0)+4>>2]|0;aX=c[aU>>2]|0;c[aQ>>2]=aX;c[aX+4>>2]=aQ}aQ=c[aU>>2]|0;aU=c[aC>>2]|0;c[aQ>>2]=aU;c[aU+4>>2]=aQ;de=au}do{if((ar|0)!=0){au=ar+8|0;aQ=c[au>>2]|0;if((al|0)>0){c[de>>2]=aQ;c[aQ+4>>2]=de;break}if((de|0)==(aQ|0)){break}zN(f,ar+12|0);aQ=de|0;aU=c[aQ>>2]|0;if((aU|0)==(c[au>>2]|0)){dg=c[ai>>2]|0}else{aC=aU;while(1){aU=aC+12|0;aX=c[aU>>2]|0;a_=aC|0;aI=c[a_>>2]|0;aF=c[aC+8>>2]|0;if((aI|0)==(aC|0)){c[(c[aF+12>>2]|0)+8>>2]=0}else{aE=aC+4|0;c[aI+4>>2]=c[aE>>2];c[c[aE>>2]>>2]=aI;c[(c[aF+12>>2]|0)+8>>2]=aI}aI=aF|0;aE=c[aI>>2]|0;if((aE|0)==(aF|0)){c[(c[aU>>2]|0)+8>>2]=0}else{cr=aF+4|0;c[aE+4>>2]=c[cr>>2];c[c[cr>>2]>>2]=aE;c[(c[aU>>2]|0)+8>>2]=aE}K1(aC|0,0,20)|0;c[a_>>2]=c[ab>>2];c[ab>>2]=aC;K1(aF|0,0,20)|0;c[aI>>2]=c[ab>>2];c[ab>>2]=aF;c[x>>2]=(c[x>>2]|0)-1;aF=c[ai>>2]|0;do{if((aF|0)==(c[ah>>2]|0)){aI=(aF|0)==0?1:aF<<1;if((aF|0)>=(aI|0)){dh=aF;break}if((aI|0)==0){di=0;dj=aF}else{a_=zv(aI<<2,16)|0;di=a_;dj=c[ai>>2]|0}if((dj|0)>0){a_=0;do{aE=di+(a_<<2)|0;if((aE|0)!=0){c[aE>>2]=c[(c[aj>>2]|0)+(a_<<2)>>2]}a_=a_+1|0;}while((a_|0)<(dj|0))}a_=c[aj>>2]|0;if((a_|0)!=0){if((a[o]&1)!=0){zw(a_)}c[aj>>2]=0}a[o]=1;c[aj>>2]=di;c[ah>>2]=aI;dh=c[ai>>2]|0}else{dh=aF}}while(0);aF=(c[aj>>2]|0)+(dh<<2)|0;if((aF|0)==0){dk=dh}else{c[aF>>2]=aX;dk=c[ai>>2]|0}aF=dk+1|0;c[ai>>2]=aF;a_=c[aQ>>2]|0;if((a_|0)==(c[au>>2]|0)){dg=aF;break}else{aC=a_}}}do{if((dg|0)==(c[ah>>2]|0)){aC=(dg|0)==0?1:dg<<1;if((dg|0)>=(aC|0)){dl=dg;break}if((aC|0)==0){dm=0;dn=dg}else{au=zv(aC<<2,16)|0;dm=au;dn=c[ai>>2]|0}if((dn|0)>0){au=0;do{aQ=dm+(au<<2)|0;if((aQ|0)!=0){c[aQ>>2]=c[(c[aj>>2]|0)+(au<<2)>>2]}au=au+1|0;}while((au|0)<(dn|0))}au=c[aj>>2]|0;if((au|0)!=0){if((a[o]&1)!=0){zw(au)}c[aj>>2]=0}a[o]=1;c[aj>>2]=dm;c[ah>>2]=aC;dl=c[ai>>2]|0}else{dl=dg}}while(0);au=(c[aj>>2]|0)+(dl<<2)|0;if((au|0)==0){dp=dl}else{c[au>>2]=0;dp=c[ai>>2]|0}c[ai>>2]=dp+1}}while(0);c[de+16>>2]=d;c[(c[de+8>>2]|0)+16>>2]=c[av+16>>2];aq=av;al=aB;am=az;ar=de;as=(as|0)==0?de:as}if((ak|0)==314){i=h;return X|0}do{if((al|0)>0){c[(c[as+8>>2]|0)+12>>2]=c[ar+12>>2];de=c[am+8>>2]|0;c[de>>2]=as;c[as+4>>2]=de;de=c[ar+8>>2]|0;c[as>>2]=de;c[de+4>>2]=as}else{de=ar+8|0;if((as|0)==(c[de>>2]|0)){break}zN(f,ar+12|0);az=as|0;aB=c[az>>2]|0;if((aB|0)==(c[de>>2]|0)){dq=c[ai>>2]|0}else{aq=aB;while(1){aB=aq+12|0;dp=c[aB>>2]|0;dl=aq|0;dg=c[dl>>2]|0;dm=c[aq+8>>2]|0;if((dg|0)==(aq|0)){c[(c[dm+12>>2]|0)+8>>2]=0}else{dn=aq+4|0;c[dg+4>>2]=c[dn>>2];c[c[dn>>2]>>2]=dg;c[(c[dm+12>>2]|0)+8>>2]=dg}dg=dm|0;dn=c[dg>>2]|0;if((dn|0)==(dm|0)){c[(c[aB>>2]|0)+8>>2]=0}else{dk=dm+4|0;c[dn+4>>2]=c[dk>>2];c[c[dk>>2]>>2]=dn;c[(c[aB>>2]|0)+8>>2]=dn}K1(aq|0,0,20)|0;c[dl>>2]=c[ab>>2];c[ab>>2]=aq;K1(dm|0,0,20)|0;c[dg>>2]=c[ab>>2];c[ab>>2]=dm;c[x>>2]=(c[x>>2]|0)-1;dm=c[ai>>2]|0;do{if((dm|0)==(c[ah>>2]|0)){dg=(dm|0)==0?1:dm<<1;if((dm|0)>=(dg|0)){dr=dm;break}if((dg|0)==0){ds=0;dt=dm}else{dl=zv(dg<<2,16)|0;ds=dl;dt=c[ai>>2]|0}if((dt|0)>0){dl=0;do{dn=ds+(dl<<2)|0;if((dn|0)!=0){c[dn>>2]=c[(c[aj>>2]|0)+(dl<<2)>>2]}dl=dl+1|0;}while((dl|0)<(dt|0))}dl=c[aj>>2]|0;if((dl|0)!=0){if((a[o]&1)!=0){zw(dl)}c[aj>>2]=0}a[o]=1;c[aj>>2]=ds;c[ah>>2]=dg;dr=c[ai>>2]|0}else{dr=dm}}while(0);dm=(c[aj>>2]|0)+(dr<<2)|0;if((dm|0)==0){du=dr}else{c[dm>>2]=dp;du=c[ai>>2]|0}dm=du+1|0;c[ai>>2]=dm;dl=c[az>>2]|0;if((dl|0)==(c[de>>2]|0)){dq=dm;break}else{aq=dl}}}do{if((dq|0)==(c[ah>>2]|0)){aq=(dq|0)==0?1:dq<<1;if((dq|0)>=(aq|0)){dv=dq;break}if((aq|0)==0){dw=0;dx=dq}else{de=zv(aq<<2,16)|0;dw=de;dx=c[ai>>2]|0}if((dx|0)>0){de=0;do{az=dw+(de<<2)|0;if((az|0)!=0){c[az>>2]=c[(c[aj>>2]|0)+(de<<2)>>2]}de=de+1|0;}while((de|0)<(dx|0))}de=c[aj>>2]|0;if((de|0)!=0){if((a[o]&1)!=0){zw(de)}c[aj>>2]=0}a[o]=1;c[aj>>2]=dw;c[ah>>2]=aq;dv=c[ai>>2]|0}else{dv=dq}}while(0);de=(c[aj>>2]|0)+(dv<<2)|0;if((de|0)==0){dy=dv}else{c[de>>2]=0;dy=c[ai>>2]|0}c[ai>>2]=dy+1}}while(0);c[b+124>>2]=c[c[aj>>2]>>2];b=c[ai>>2]|0;if((b|0)>0){dy=0;dv=b;while(1){if((dy|0)<(dv|0)){dq=dy;while(1){dw=c[aj>>2]|0;dx=c[dw+(dq<<2)>>2]|0;du=dq+2|0;dr=c[dw+(dq+1<<2)>>2]|0;do{if((dr|0)==0){dz=du}else{dw=dx+16|0;ds=dx+12|0;dt=0;as=du;ar=dr;while(1){am=c[dw>>2]|0;al=ar+12|0;de=c[al>>2]|0;if((am|0)==0){c[ds>>2]=de}else{c[am+8>>2]=de}de=ar+16|0;am=c[de>>2]|0;if((am|0)!=0){c[dw>>2]=am}am=c[al>>2]|0;if((am|0)!=0){dp=am;do{c[dp+4>>2]=dx;dp=c[dp+8>>2]|0;}while((dp|0)!=0)}c[al>>2]=0;c[de>>2]=0;dp=ar+8|0;aI=c[dp>>2]|0;if((aI|0)==0){dA=dt}else{am=dt;az=aI;while(1){if(am){dB=az}else{aI=c[ai>>2]|0;do{if((aI|0)==(c[ah>>2]|0)){av=(aI|0)==0?1:aI<<1;if((aI|0)>=(av|0)){dC=aI;break}if((av|0)==0){dD=0;dE=aI}else{dl=zv(av<<2,16)|0;dD=dl;dE=c[ai>>2]|0}if((dE|0)>0){dl=0;do{dm=dD+(dl<<2)|0;if((dm|0)!=0){c[dm>>2]=c[(c[aj>>2]|0)+(dl<<2)>>2]}dl=dl+1|0;}while((dl|0)<(dE|0))}dl=c[aj>>2]|0;if((dl|0)!=0){if((a[o]&1)!=0){zw(dl)}c[aj>>2]=0}a[o]=1;c[aj>>2]=dD;c[ah>>2]=av;dC=c[ai>>2]|0}else{dC=aI}}while(0);aI=(c[aj>>2]|0)+(dC<<2)|0;if((aI|0)==0){dF=dC}else{c[aI>>2]=dx;dF=c[ai>>2]|0}c[ai>>2]=dF+1;dB=c[dp>>2]|0}zN(f,dB+12|0);aI=c[dp>>2]|0;dl=aI|0;dm=c[dl>>2]|0;aC=c[aI+8>>2]|0;if((dm|0)==(aI|0)){c[(c[aC+12>>2]|0)+8>>2]=0}else{dn=aI+4|0;c[dm+4>>2]=c[dn>>2];c[c[dn>>2]>>2]=dm;c[(c[aC+12>>2]|0)+8>>2]=dm}dm=aC|0;dn=c[dm>>2]|0;if((dn|0)==(aC|0)){c[(c[aI+12>>2]|0)+8>>2]=0}else{aB=aC+4|0;c[dn+4>>2]=c[aB>>2];c[c[aB>>2]>>2]=dn;c[(c[aI+12>>2]|0)+8>>2]=dn}K1(aI|0,0,20)|0;c[dl>>2]=c[ab>>2];c[ab>>2]=aI;K1(aC|0,0,20)|0;c[dm>>2]=c[ab>>2];c[ab>>2]=aC;c[x>>2]=(c[x>>2]|0)-1;aC=c[dp>>2]|0;if((aC|0)==0){dA=1;break}else{am=1;az=aC}}}dG=as+1|0;dH=c[aj>>2]|0;az=c[dH+(as<<2)>>2]|0;if((az|0)==0){break}else{dt=dA;as=dG;ar=az}}if(!dA){dz=dG;break}ar=c[ai>>2]|0;do{if((ar|0)==(c[ah>>2]|0)){as=(ar|0)==0?1:ar<<1;if((ar|0)>=(as|0)){dI=ar;dJ=dH;break}if((as|0)==0){dK=0;dL=ar}else{dt=zv(as<<2,16)|0;dK=dt;dL=c[ai>>2]|0}if((dL|0)>0){dt=0;do{dw=dK+(dt<<2)|0;if((dw|0)!=0){c[dw>>2]=c[(c[aj>>2]|0)+(dt<<2)>>2]}dt=dt+1|0;}while((dt|0)<(dL|0))}dt=c[aj>>2]|0;if((dt|0)!=0){if((a[o]&1)!=0){zw(dt)}c[aj>>2]=0}a[o]=1;c[aj>>2]=dK;c[ah>>2]=as;dI=c[ai>>2]|0;dJ=dK}else{dI=ar;dJ=dH}}while(0);ar=dJ+(dI<<2)|0;if((ar|0)==0){dM=dI}else{c[ar>>2]=0;dM=c[ai>>2]|0}c[ai>>2]=dM+1;dz=dG}}while(0);if((dz|0)<(dv|0)){dq=dz}else{break}}dN=dz;dO=c[ai>>2]|0}else{dN=dy;dO=dv}if((dN|0)<(dO|0)){dy=dN;dv=dO}else{break}}if((dO|0)<=0){dP=dO;ak=298}}else{dP=b;ak=298}do{if((ak|0)==298){if((dP|0)>=0){break}if((c[ah>>2]|0)<0){b=c[aj>>2]|0;if((b|0)!=0){if((a[o]&1)!=0){zw(b)}c[aj>>2]=0}a[o]=1;c[aj>>2]=0;c[ah>>2]=0;dQ=dP}else{dQ=dP}do{b=(c[aj>>2]|0)+(dQ<<2)|0;if((b|0)!=0){c[b>>2]=0}dQ=dQ+1|0;}while((dQ|0)<0)}}while(0);c[ai>>2]=0;c[B>>2]=j;c[Y>>2]=V;c[u>>2]=v;c[d+24>>2]=-1;X=1;i=h;return X|0}function zR(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0;if((c[d+100>>2]|0)>-1){f=c[d+88>>2]|0;g=e|0;h=Li(f,(f|0)<0|0?-1:0,c[g>>2]|0,c[g+4>>2]|0)|0;g=K;f=c[d+92>>2]|0;i=e+8|0;j=Li(f,(f|0)<0|0?-1:0,c[i>>2]|0,c[i+4>>2]|0)|0;i=K8(j,K,h,g)|0;g=K;h=c[d+96>>2]|0;j=e+16|0;f=Li(h,(h|0)<0|0?-1:0,c[j>>2]|0,c[j+4>>2]|0)|0;j=K8(i,g,f,K)|0;f=K;g=0;do{if((f|0)>(g|0)|(f|0)==(g|0)&j>>>0>0>>>0){c[b+32>>2]=1;i=b|0;c[i>>2]=j;c[i+4>>2]=f;i=b+8|0;c[i>>2]=f>>31|((f|0)<0|0?-1:0)<<1;c[i+4>>2]=((f|0)<0|0?-1:0)>>31|((f|0)<0|0?-1:0)<<1}else{i=0;h=b+32|0;if((f|0)<(i|0)|(f|0)==(i|0)&j>>>0<0>>>0){c[h>>2]=-1;i=K9(0,0,j,f)|0;k=K;l=b|0;c[l>>2]=i;c[l+4>>2]=k;l=b+8|0;c[l>>2]=k>>31|((k|0)<0|0?-1:0)<<1;c[l+4>>2]=((k|0)<0|0?-1:0)>>31|((k|0)<0|0?-1:0)<<1;break}else{c[h>>2]=0;K1(b|0,0,16)|0;break}}}while(0);f=b+16|0;c[f>>2]=1;c[f+4>>2]=0;f=b+24|0;c[f>>2]=0;c[f+4>>2]=0;a[b+36|0]=1;return}f=e|0;j=c[f>>2]|0;g=c[f+4>>2]|0;f=d+32|0;h=c[f>>2]|0;k=c[f+4>>2]|0;f=0;l=(k|0)<(f|0)|(k|0)==(f|0)&h>>>0<0>>>0;f=d+24|0;i=c[f>>2]|0;m=c[f+4>>2]|0;if(l){f=K9(0,0,i,m)|0;n=K;o=K8((i|0)==0&(m|0)==0&1,0,~h,~k)|0;p=n;q=f;r=K;s=o}else{p=m;q=i;r=k;s=h}h=0;if((g|0)<(h|0)|(g|0)==(h|0)&j>>>0<0>>>0){h=K9(0,0,j,g)|0;t=l^1;u=K;v=h}else{t=l;u=g;v=j}j=q|0;q=p&0;g=v|0;l=u&0;h=Li(g,l,j,q)|0;k=K;i=u;m=0;o=Li(i,m,j,q)|0;q=K;j=p;p=0;f=Li(g,l,j,p)|0;l=K;g=Li(i,m,j,p)|0;p=K;j=K8(o|0,q&0,f|0,l&0)|0;f=K;o=K5(h|0,k|0,0,j|0)|0;j=o;o=K;k=L&1;h=Li(v,u,s,r)|0;r=K8(g,p,h,K)|0;h=K8(r,K,q,0)|0;q=K8(h,K,l,0)|0;l=K8(q,K,k,0)|0;k=K8(l,K,f,0)|0;f=K;if(t){t=K9(0,0,j,o)|0;l=K;q=K8((j|0)==0&(o|0)==0&1,0,~k,~f)|0;w=l;x=t;y=K;z=q}else{w=o;x=j;y=f;z=k}k=e+8|0;f=c[k>>2]|0;j=c[k+4>>2]|0;k=d+48|0;o=c[k>>2]|0;q=c[k+4>>2]|0;k=0;t=(q|0)<(k|0)|(q|0)==(k|0)&o>>>0<0>>>0;k=d+40|0;l=c[k>>2]|0;h=c[k+4>>2]|0;if(t){k=K9(0,0,l,h)|0;r=K;p=K8((l|0)==0&(h|0)==0&1,0,~o,~q)|0;A=r;B=k;C=K;D=p}else{A=h;B=l;C=q;D=o}o=0;if((j|0)<(o|0)|(j|0)==(o|0)&f>>>0<0>>>0){o=K9(0,0,f,j)|0;E=t^1;F=K;G=o}else{E=t;F=j;G=f}f=B|0;B=A&0;j=G|0;t=F&0;o=Li(j,t,f,B)|0;q=K;l=F;h=0;p=Li(l,h,f,B)|0;B=K;f=A;A=0;k=Li(j,t,f,A)|0;t=K;j=Li(l,h,f,A)|0;A=K;f=K8(p|0,B&0,k|0,t&0)|0;k=K;p=K5(o|0,q|0,0,f|0)|0;f=p;p=K;q=L&1;o=Li(G,F,D,C)|0;C=K8(j,A,o,K)|0;o=K8(C,K,B,0)|0;B=K8(o,K,t,0)|0;t=K8(B,K,q,0)|0;q=K8(t,K,k,0)|0;k=K;if(E){E=K9(0,0,f,p)|0;t=K;B=K8((f|0)==0&(p|0)==0&1,0,~q,~k)|0;H=t;I=E;J=K;M=B}else{H=p;I=f;J=k;M=q}q=K5(x|0,w|0,I|0,H|0)|0;H=L;I=K;w=K8(M,J,z,y)|0;y=K8(w,K,H&1,0)|0;H=K;w=e+16|0;e=c[w>>2]|0;z=c[w+4>>2]|0;w=d+64|0;J=c[w>>2]|0;M=c[w+4>>2]|0;w=0;x=(M|0)<(w|0)|(M|0)==(w|0)&J>>>0<0>>>0;w=d+56|0;k=c[w>>2]|0;f=c[w+4>>2]|0;if(x){w=K9(0,0,k,f)|0;p=K;B=K8((k|0)==0&(f|0)==0&1,0,~J,~M)|0;N=p;O=w;P=K;Q=B}else{N=f;O=k;P=M;Q=J}J=0;if((z|0)<(J|0)|(z|0)==(J|0)&e>>>0<0>>>0){J=K9(0,0,e,z)|0;R=x^1;S=K;T=J}else{R=x;S=z;T=e}e=O|0;O=N&0;z=T|0;x=S&0;J=Li(z,x,e,O)|0;M=K;k=S;f=0;B=Li(k,f,e,O)|0;O=K;e=N;N=0;w=Li(z,x,e,N)|0;x=K;z=Li(k,f,e,N)|0;N=K;e=K8(B|0,O&0,w|0,x&0)|0;w=K;B=K5(J|0,M|0,0,e|0)|0;e=B;B=K;M=L&1;J=Li(T,S,Q,P)|0;P=K8(z,N,J,K)|0;J=K8(P,K,O,0)|0;O=K8(J,K,x,0)|0;x=K8(O,K,M,0)|0;M=K8(x,K,w,0)|0;w=K;if(R){R=K9(0,0,e,B)|0;x=K;O=K8((e|0)==0&(B|0)==0&1,0,~M,~w)|0;U=x;V=R;W=K;X=O}else{U=B;V=e;W=w;X=M}M=K5(q|0,I|0,V|0,U|0)|0;U=L;V=M;M=K;I=K8(y,H,X,W)|0;W=K8(I,K,U&1,0)|0;U=K;I=d+72|0;X=b+16|0;H=0;if((U|0)<(H|0)|(U|0)==(H|0)&W>>>0<0>>>0){H=b+32|0;c[H>>2]=-1;y=K9(0,0,V,M)|0;q=K;w=K8((V|0)==0&(M|0)==0&1,0,~W,~U)|0;e=b|0;c[e>>2]=y;c[e+4>>2]=q;q=b+8|0;c[q>>2]=w;c[q+4>>2]=K;Y=H;Z=-1}else{if((W|0)==0&(U|0)==0){_=((V|0)!=0|(M|0)!=0)&1}else{_=1}H=b+32|0;c[H>>2]=_;q=b|0;c[q>>2]=V;c[q+4>>2]=M;M=b+8|0;c[M>>2]=W;c[M+4>>2]=U;Y=H;Z=_}_=d+80|0;d=c[_>>2]|0;H=c[_+4>>2]|0;_=0;if((H|0)<(_|0)|(H|0)==(_|0)&d>>>0<0>>>0){c[Y>>2]=-Z;Z=I|0;Y=c[Z>>2]|0;_=c[Z+4>>2]|0;Z=K9(0,0,Y,_)|0;U=K;M=K8((Y|0)==0&(_|0)==0&1,0,~d,~H)|0;H=b+16|0;c[H>>2]=Z;c[H+4>>2]=U;U=b+24|0;c[U>>2]=M;c[U+4>>2]=K}else{U=X;X=I;c[U>>2]=c[X>>2];c[U+4>>2]=c[X+4>>2];c[U+8>>2]=c[X+8>>2];c[U+12>>2]=c[X+12>>2]}a[b+36|0]=0;return}function zS(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=+h;j=+j;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0.0,w=0.0,x=0.0,y=0,z=0.0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0,ai=0,aj=0,ak=0,al=0,am=0,an=0,ao=0,ap=0,aq=0,ar=0,as=0,at=0,au=0,av=0,aw=0,ax=0,ay=0,az=0,aA=0,aB=0,aC=0,aD=0,aE=0,aF=0,aG=0,aH=0;k=i;i=i+208|0;l=k|0;m=k+128|0;n=k+144|0;o=k+160|0;p=k+176|0;q=k+192|0;if((g|0)<1){r=b+4|0;s=b+12|0;t=c[s>>2]|0;u=b+16|0;if((t|0)!=0){if((a[u]&1)!=0){zw(t)}c[s>>2]=0}a[u]=1;c[s>>2]=0;c[r>>2]=0;c[b+8>>2]=0;r=b+24|0;s=b+32|0;u=c[s>>2]|0;t=b+36|0;if((u|0)!=0){if((a[t]&1)!=0){zw(u)}c[s>>2]=0}a[t]=1;c[s>>2]=0;c[r>>2]=0;c[b+28>>2]=0;r=b+44|0;s=b+52|0;t=c[s>>2]|0;u=b+56|0;if((t|0)!=0){if((a[u]&1)!=0){zw(t)}c[s>>2]=0}a[u]=1;c[s>>2]=0;c[r>>2]=0;c[b+48>>2]=0;v=0.0;i=k;return+v}c[l+32>>2]=0;c[l+36>>2]=0;c[l+40>>2]=0;c[l+44>>2]=256;c[l+48>>2]=0;c[l+52>>2]=0;c[l+56>>2]=0;c[l+60>>2]=256;c[l+64>>2]=0;c[l+68>>2]=0;c[l+72>>2]=0;c[l+76>>2]=256;a[l+96|0]=1;c[l+92>>2]=0;c[l+84>>2]=0;c[l+88>>2]=0;zI(l,d,e,f,g);do{if(h>0.0){w=+zM(l,h,j);if(w>=0.0){x=w;y=33;break}g=b+4|0;f=b+12|0;e=c[f>>2]|0;d=b+16|0;if((e|0)!=0){if((a[d]&1)!=0){zw(e)}c[f>>2]=0}a[d]=1;c[f>>2]=0;c[g>>2]=0;c[b+8>>2]=0;g=b+24|0;f=b+32|0;d=c[f>>2]|0;e=b+36|0;if((d|0)!=0){if((a[e]&1)!=0){zw(d)}c[f>>2]=0}a[e]=1;c[f>>2]=0;c[g>>2]=0;c[b+28>>2]=0;g=b+44|0;f=b+52|0;e=c[f>>2]|0;d=b+56|0;if((e|0)!=0){if((a[d]&1)!=0){zw(e)}c[f>>2]=0}a[d]=1;c[f>>2]=0;c[g>>2]=0;c[b+48>>2]=0;z=w}else{x=0.0;y=33}}while(0);do{if((y|0)==33){g=b+4|0;f=c[g>>2]|0;if((f|0)<0){d=b+8|0;e=b+12|0;if((c[d>>2]|0)<0){r=c[e>>2]|0;s=b+16|0;if((r|0)!=0){if((a[s]&1)!=0){zw(r)}c[e>>2]=0}a[s]=1;c[e>>2]=0;c[d>>2]=0}d=m;s=f;do{f=(c[e>>2]|0)+(s<<4)|0;c[f>>2]=c[d>>2];c[f+4>>2]=c[d+4>>2];c[f+8>>2]=c[d+8>>2];c[f+12>>2]=c[d+12>>2];s=s+1|0;}while((s|0)<0)}c[g>>2]=0;s=n;K1(s|0,0,12)|0;d=b+24|0;e=c[d>>2]|0;if((e|0)<0){f=b+28|0;r=b+32|0;if((c[f>>2]|0)<0){u=c[r>>2]|0;t=b+36|0;if((u|0)!=0){if((a[t]&1)!=0){zw(u)}c[r>>2]=0}a[t]=1;c[r>>2]=0;c[f>>2]=0}f=e;do{e=(c[r>>2]|0)+(f*12|0)|0;if((e|0)!=0){t=e;c[t>>2]=c[s>>2];c[t+4>>2]=c[s+4>>2];c[t+8>>2]=c[s+8>>2]}f=f+1|0;}while((f|0)<0)}c[d>>2]=0;f=b+44|0;s=c[f>>2]|0;if((s|0)<0){r=b+48|0;t=b+52|0;if((c[r>>2]|0)<0){e=c[t>>2]|0;u=b+56|0;if((e|0)!=0){if((a[u]&1)!=0){zw(e)}c[t>>2]=0}a[u]=1;c[t>>2]=0;c[r>>2]=0}r=s;do{s=(c[t>>2]|0)+(r<<2)|0;if((s|0)!=0){c[s>>2]=0}r=r+1|0;}while((r|0)<0)}c[f>>2]=0;r=c[l+124>>2]|0;t=r+104|0;if((c[t>>2]|0)>=0){z=x;break}c[t>>2]=0;t=zv(4,16)|0;s=t;if((t|0)==0){A=0}else{c[s>>2]=r;A=s}s=b+8|0;r=b+12|0;t=b+16|0;u=o;e=p;B=b+28|0;C=b+32|0;D=b+36|0;E=q;F=A;G=1;H=1;I=0;while(1){J=c[F+(I<<2)>>2]|0;zL(o,l,J);K=c[g>>2]|0;do{if((K|0)==(c[s>>2]|0)){L=(K|0)==0?1:K<<1;if((K|0)>=(L|0)){M=K;break}if((L|0)==0){N=0;O=K}else{P=zv(L<<4,16)|0;N=P;O=c[g>>2]|0}if((O|0)>0){P=0;do{Q=N+(P<<4)|0;R=(c[r>>2]|0)+(P<<4)|0;c[Q>>2]=c[R>>2];c[Q+4>>2]=c[R+4>>2];c[Q+8>>2]=c[R+8>>2];c[Q+12>>2]=c[R+12>>2];P=P+1|0;}while((P|0)<(O|0))}P=c[r>>2]|0;if((P|0)!=0){if((a[t]&1)!=0){zw(P)}c[r>>2]=0}a[t]=1;c[r>>2]=N;c[s>>2]=L;M=c[g>>2]|0}else{M=K}}while(0);K=(c[r>>2]|0)+(M<<4)|0;c[K>>2]=c[u>>2];c[K+4>>2]=c[u+4>>2];c[K+8>>2]=c[u+8>>2];c[K+12>>2]=c[u+12>>2];c[g>>2]=(c[g>>2]|0)+1;K=c[J+8>>2]|0;if((K|0)==0){S=H;T=G;U=F}else{P=K;R=-1;Q=-1;V=H;W=G;X=F;while(1){Y=P+20|0;Z=c[Y>>2]|0;if((Z|0)<0){_=c[d>>2]|0;K1(e|0,0,12)|0;$=c[B>>2]|0;do{if((_|0)==($|0)){aa=(_|0)==0?1:_<<1;if((_|0)>=(aa|0)){ab=_;ac=_;break}if((aa|0)==0){ad=0;ae=_}else{af=zv(aa*12|0,16)|0;ad=af;ae=c[d>>2]|0}if((ae|0)>0){af=0;do{ag=ad+(af*12|0)|0;if((ag|0)!=0){ah=ag;ag=(c[C>>2]|0)+(af*12|0)|0;c[ah>>2]=c[ag>>2];c[ah+4>>2]=c[ag+4>>2];c[ah+8>>2]=c[ag+8>>2]}af=af+1|0;}while((af|0)<(ae|0))}af=c[C>>2]|0;if((af|0)!=0){if((a[D]&1)!=0){zw(af)}c[C>>2]=0}a[D]=1;c[C>>2]=ad;c[B>>2]=aa;ab=c[d>>2]|0;ac=aa}else{ab=_;ac=$}}while(0);$=(c[C>>2]|0)+(ab*12|0)|0;if(($|0)==0){ai=ab;aj=ac}else{L=$;c[L>>2]=c[e>>2];c[L+4>>2]=c[e+4>>2];c[L+8>>2]=c[e+8>>2];ai=c[d>>2]|0;aj=c[B>>2]|0}L=ai+1|0;c[d>>2]=L;K1(E|0,0,12)|0;do{if((L|0)==(aj|0)){$=(aj|0)==0?1:aj<<1;if((aj|0)>=($|0)){ak=aj;break}if(($|0)==0){al=0;am=aj}else{af=zv($*12|0,16)|0;al=af;am=c[d>>2]|0}if((am|0)>0){af=0;do{ag=al+(af*12|0)|0;if((ag|0)!=0){ah=ag;ag=(c[C>>2]|0)+(af*12|0)|0;c[ah>>2]=c[ag>>2];c[ah+4>>2]=c[ag+4>>2];c[ah+8>>2]=c[ag+8>>2]}af=af+1|0;}while((af|0)<(am|0))}af=c[C>>2]|0;if((af|0)!=0){if((a[D]&1)!=0){zw(af)}c[C>>2]=0}a[D]=1;c[C>>2]=al;c[B>>2]=$;ak=c[d>>2]|0}else{ak=L}}while(0);L=c[C>>2]|0;af=L+(ak*12|0)|0;if((af|0)==0){an=ak;ao=L}else{L=af;c[L>>2]=c[E>>2];c[L+4>>2]=c[E+4>>2];c[L+8>>2]=c[E+8>>2];an=c[d>>2]|0;ao=c[C>>2]|0}c[d>>2]=an+1;L=_+1|0;c[Y>>2]=_;c[(c[P+8>>2]|0)+20>>2]=L;c[ao+(_*12|0)+4>>2]=1;c[ao+(L*12|0)+4>>2]=-1;af=c[P+12>>2]|0;aa=af+104|0;ag=c[aa>>2]|0;if((ag|0)<0){c[aa>>2]=V;do{if((V|0)==(W|0)){aa=(W|0)==0?1:W<<1;if((W|0)>=(aa|0)){ap=W;aq=X;break}if((aa|0)==0){ar=0}else{ar=zv(aa<<2,16)|0}if((W|0)>0){ah=0;do{as=ar+(ah<<2)|0;if((as|0)!=0){c[as>>2]=c[X+(ah<<2)>>2]}ah=ah+1|0;}while((ah|0)<(W|0))}if((X|0)==0){ap=aa;aq=ar;break}zw(X);ap=aa;aq=ar}else{ap=W;aq=X}}while(0);ah=aq+(V<<2)|0;if((ah|0)!=0){c[ah>>2]=af}at=V;au=V+1|0;av=ap;aw=aq}else{at=ag;au=V;av=W;aw=X}c[ao+(_*12|0)+8>>2]=at;c[ao+(L*12|0)+8>>2]=I;ax=au;ay=av;az=aw;aA=c[Y>>2]|0}else{ax=V;ay=W;az=X;aA=Z}if((R|0)>-1){c[(c[C>>2]|0)+(aA*12|0)>>2]=R-aA;aB=Q;aC=c[Y>>2]|0}else{aB=aA;aC=aA}ah=c[P>>2]|0;if((ah|0)==(K|0)){break}else{P=ah;R=aC;Q=aB;V=ax;W=ay;X=az}}c[(c[C>>2]|0)+(aB*12|0)>>2]=aC-aB;S=ax;T=ay;U=az}aD=I+1|0;if((aD|0)<(S|0)){F=U;G=T;H=S;I=aD}else{break}}if((aD|0)>0){I=b+48|0;H=b+52|0;G=b+56|0;F=0;do{C=c[(c[U+(F<<2)>>2]|0)+8>>2]|0;if((C|0)!=0){d=C;do{E=d+20|0;if((c[E>>2]|0)>-1){B=c[f>>2]|0;do{if((B|0)==(c[I>>2]|0)){D=(B|0)==0?1:B<<1;if((B|0)>=(D|0)){aE=B;break}if((D|0)==0){aF=0;aG=B}else{e=zv(D<<2,16)|0;aF=e;aG=c[f>>2]|0}if((aG|0)>0){e=0;do{g=aF+(e<<2)|0;if((g|0)!=0){c[g>>2]=c[(c[H>>2]|0)+(e<<2)>>2]}e=e+1|0;}while((e|0)<(aG|0))}e=c[H>>2]|0;if((e|0)!=0){if((a[G]&1)!=0){zw(e)}c[H>>2]=0}a[G]=1;c[H>>2]=aF;c[I>>2]=D;aE=c[f>>2]|0}else{aE=B}}while(0);B=(c[H>>2]|0)+(aE<<2)|0;if((B|0)==0){aH=aE}else{c[B>>2]=c[E>>2];aH=c[f>>2]|0}c[f>>2]=aH+1;B=d;do{c[B+20>>2]=-1;B=c[(c[B+8>>2]|0)+4>>2]|0;}while((B|0)!=(d|0))}d=c[d>>2]|0;}while((d|0)!=(C|0))}F=F+1|0;}while((F|0)<(aD|0))}if((U|0)==0){z=x;break}zw(U);z=x}}while(0);zU(l);v=z;i=k;return+v}function zT(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;f=i;i=i+32|0;g=f+16|0;h=a+12|0;j=g;k=(c[h>>2]|0)+(((e+d|0)/2|0)<<4)|0;c[j>>2]=c[k>>2];c[j+4>>2]=c[k+4>>2];c[j+8>>2]=c[k+8>>2];c[j+12>>2]=c[k+12>>2];k=f|0;j=e;l=d;while(1){m=l;while(1){n=m+1|0;if(hx[b&127]((c[h>>2]|0)+(m<<4)|0,g)|0){m=n}else{o=j;break}}while(1){p=o-1|0;if(hx[b&127](g,(c[h>>2]|0)+(o<<4)|0)|0){o=p}else{break}}if((m|0)>(o|0)){q=o;r=m}else{s=c[h>>2]|0;t=s+(m<<4)|0;c[k>>2]=c[t>>2];c[k+4>>2]=c[t+4>>2];c[k+8>>2]=c[t+8>>2];c[k+12>>2]=c[t+12>>2];u=s+(o<<4)|0;c[t>>2]=c[u>>2];c[t+4>>2]=c[u+4>>2];c[t+8>>2]=c[u+8>>2];c[t+12>>2]=c[u+12>>2];u=(c[h>>2]|0)+(o<<4)|0;c[u>>2]=c[k>>2];c[u+4>>2]=c[k+4>>2];c[u+8>>2]=c[k+8>>2];c[u+12>>2]=c[k+12>>2];q=p;r=n}if((r|0)>(q|0)){break}else{j=q;l=r}}if((q|0)>(d|0)){zT(a,b,d,q)}if((r|0)>=(e|0)){i=f;return}zT(a,b,r,e);i=f;return}function zU(b){b=b|0;var d=0,e=0,f=0,g=0;d=b+84|0;e=b+92|0;f=c[e>>2]|0;g=b+96|0;if((f|0)!=0){if((a[g]&1)!=0){zw(f)}c[e>>2]=0}a[g]=1;c[e>>2]=0;c[d>>2]=0;c[b+88>>2]=0;d=b+64|0;while(1){e=c[d>>2]|0;if((e|0)==0){break}c[d>>2]=c[e+8>>2];zw(c[e>>2]|0);zw(e)}d=b+48|0;while(1){e=c[d>>2]|0;if((e|0)==0){break}c[d>>2]=c[e+8>>2];zw(c[e>>2]|0);zw(e)}d=b+32|0;while(1){b=c[d>>2]|0;if((b|0)==0){break}c[d>>2]=c[b+8>>2];zw(c[b>>2]|0);zw(b)}return}function zV(b,d){b=b|0;d=d|0;var e=0,f=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0,I=0,J=0.0,K=0.0,L=0.0,M=0.0,N=0,O=0,P=0,Q=0.0,R=0,S=0,T=0,U=0,V=0;e=b+4|0;f=c[e>>2]|0;if((f|0)<=0){return}h=b+12|0;b=d+4|0;i=d+12|0;j=d+8|0;k=d+16|0;d=0;while(1){l=c[h>>2]|0;m=d+1|0;n=(m|0)<(f|0);if(!n){o=34;break}p=l+(d<<4)|0;q=l+(d<<4)+4|0;r=l+(d<<4)+8|0;s=m;t=l;while(1){l=s+1|0;u=(l|0)<(f|0);if(!u){break}v=t+(s<<4)|0;w=t+(s<<4)+4|0;x=t+(s<<4)+8|0;y=l;z=t;while(1){A=+g[p>>2];B=+g[v>>2]-A;C=+g[q>>2];D=+g[w>>2]-C;E=+g[r>>2];F=+g[x>>2]-E;G=+g[z+(y<<4)>>2]-A;A=+g[z+(y<<4)+4>>2]-C;C=+g[z+(y<<4)+8>>2]-E;E=D*C-F*A;H=F*G-B*C;C=B*A-D*G;G=1.0;I=0;while(1){D=E*G;A=H*G;B=C*G;F=B*B+(D*D+A*A);L14:do{if(F>9999999747378752.0e-20){J=1.0/+W(F);K=D*J;L=A*J;M=B*J;N=c[b>>2]|0;O=0;while(1){if((O|0)>=(N|0)){break}P=c[i>>2]|0;if(K*+g[P+(O<<4)>>2]+L*+g[P+(O<<4)+4>>2]+M*+g[P+(O<<4)+8>>2]>.9990000128746033){break L14}else{O=O+1|0}}J=K*+g[p>>2]+L*+g[q>>2]+M*+g[r>>2];Q=-0.0-J;O=c[e>>2]|0;P=0;while(1){if((P|0)>=(O|0)){break}R=c[h>>2]|0;if(K*+g[R+(P<<4)>>2]+L*+g[R+(P<<4)+4>>2]+M*+g[R+(P<<4)+8>>2]-J+-.009999999776482582>0.0){break L14}else{P=P+1|0}}do{if((N|0)==(c[j>>2]|0)){P=(N|0)==0?1:N<<1;if((N|0)>=(P|0)){S=N;break}if((P|0)==0){T=0;U=N}else{O=zv(P<<4,16)|0;T=O;U=c[b>>2]|0}if((U|0)>0){O=0;do{R=T+(O<<4)|0;V=(c[i>>2]|0)+(O<<4)|0;c[R>>2]=c[V>>2];c[R+4>>2]=c[V+4>>2];c[R+8>>2]=c[V+8>>2];c[R+12>>2]=c[V+12>>2];O=O+1|0;}while((O|0)<(U|0))}O=c[i>>2]|0;if((O|0)!=0){if((a[k]&1)!=0){zw(O)}c[i>>2]=0}a[k]=1;c[i>>2]=T;c[j>>2]=P;S=c[b>>2]|0}else{S=N}}while(0);N=c[i>>2]|0;g[N+(S<<4)>>2]=K;g[N+(S<<4)+4>>2]=L;g[N+(S<<4)+8>>2]=M;g[N+(S<<4)+12>>2]=Q;c[b>>2]=(c[b>>2]|0)+1}}while(0);N=I+1|0;if((N|0)<2){G=-1.0;I=N}else{break}}I=y+1|0;if((I|0)>=(f|0)){break}y=I;z=c[h>>2]|0}if(!u){break}s=l;t=c[h>>2]|0}if(n){d=m}else{o=36;break}}if((o|0)==34){return}else if((o|0)==36){return}}function zW(b,d){b=b|0;d=d|0;var e=0,f=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0,I=0.0,J=0.0,K=0.0,L=0.0,M=0.0,N=0.0,O=0.0,P=0.0,Q=0.0,R=0.0,S=0.0,T=0.0,U=0.0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0;e=b+4|0;f=c[e>>2]|0;if((f|0)<=0){return}h=b+12|0;b=d+4|0;i=d+8|0;j=d+12|0;k=d+16|0;d=0;while(1){l=c[h>>2]|0;m=d+1|0;n=(m|0)<(f|0);if(!n){o=33;break}p=l+(d<<4)+8|0;q=l+(d<<4)+4|0;r=l+(d<<4)|0;s=l+(d<<4)+12|0;t=m;u=l;while(1){l=t+1|0;v=(l|0)<(f|0);if(!v){break}w=u+(t<<4)+4|0;x=u+(t<<4)+8|0;y=u+(t<<4)|0;z=u+(t<<4)+12|0;A=l;B=u;while(1){C=+g[w>>2];D=+g[B+(A<<4)+8>>2];E=+g[x>>2];F=+g[B+(A<<4)+4>>2];G=C*D-E*F;H=+g[B+(A<<4)>>2];I=+g[y>>2];J=E*H-D*I;K=F*I-C*H;L=+g[p>>2];M=+g[q>>2];N=F*L-D*M;O=+g[r>>2];P=D*O-H*L;D=H*M-F*O;F=E*M-C*L;H=I*L-E*O;E=C*O-I*M;L12:do{if(K*K+(G*G+J*J)>9999999747378752.0e-20){if(D*D+(N*N+P*P)<=9999999747378752.0e-20){break}if(E*E+(F*F+H*H)<=9999999747378752.0e-20){break}I=L*K+(M*J+G*O);if(+V(+I)<=9.999999974752427e-7){break}C=-1.0/I;I=+g[s>>2];Q=+g[z>>2];R=+g[B+(A<<4)+12>>2];S=C*(F*R+(G*I+N*Q));T=C*(H*R+(J*I+P*Q));U=C*(E*R+(K*I+D*Q));W=c[e>>2]|0;X=0;while(1){if((X|0)>=(W|0)){break}if(+g[B+(X<<4)+12>>2]+(S*+g[B+(X<<4)>>2]+T*+g[B+(X<<4)+4>>2]+U*+g[B+(X<<4)+8>>2])+-.009999999776482582>0.0){break L12}else{X=X+1|0}}X=c[b>>2]|0;do{if((X|0)==(c[i>>2]|0)){W=(X|0)==0?1:X<<1;if((X|0)>=(W|0)){Y=X;break}if((W|0)==0){Z=0;_=X}else{$=zv(W<<4,16)|0;Z=$;_=c[b>>2]|0}if((_|0)>0){$=0;do{aa=Z+($<<4)|0;ab=(c[j>>2]|0)+($<<4)|0;c[aa>>2]=c[ab>>2];c[aa+4>>2]=c[ab+4>>2];c[aa+8>>2]=c[ab+8>>2];c[aa+12>>2]=c[ab+12>>2];$=$+1|0;}while(($|0)<(_|0))}$=c[j>>2]|0;if(($|0)!=0){if((a[k]&1)!=0){zw($)}c[j>>2]=0}a[k]=1;c[j>>2]=Z;c[i>>2]=W;Y=c[b>>2]|0}else{Y=X}}while(0);X=c[j>>2]|0;g[X+(Y<<4)>>2]=S;g[X+(Y<<4)+4>>2]=T;g[X+(Y<<4)+8>>2]=U;g[X+(Y<<4)+12>>2]=0.0;c[b>>2]=(c[b>>2]|0)+1}}while(0);X=A+1|0;if((X|0)>=(f|0)){break}A=X;B=c[h>>2]|0}if(!v){break}t=l;u=c[h>>2]|0}if(n){d=m}else{o=34;break}}if((o|0)==33){return}else if((o|0)==34){return}}function zX(a){a=a|0;var b=0;b=c[a>>2]|0;if((b|0)==0){return}KU(b);return}function zY(a){a=a|0;var b=0;b=a;do{c[b+4>>2]=0;g[b+8>>2]=0.0;a=c[b+24>>2]|0;if((a|0)!=0){zY(a)}b=c[b+28>>2]|0;}while((b|0)!=0);return}function zZ(a){a=a|0;var b=0;b=c[a+24>>2]|0;if((b|0)!=0){zZ(b);KU(b)}b=c[a+28>>2]|0;if((b|0)==0){return}else{zZ(b);KU(b);return}}function z_(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;b=i;i=i+8|0;d=b|0;e=c[12262]|0;if((c[e>>2]|0)==(a|0)){f=e}else{g=e+24|0;h=g;while(1){j=c[h>>2]|0;if((j|0)==0){k=5;break}if((c[j>>2]|0)==(a|0)){l=j;break}else{h=j+28|0}}if((k|0)==5){k=KS(36)|0;h=k;c[k>>2]=a;K1(k+4|0,0,16)|0;c[k+20>>2]=e;c[k+24>>2]=0;e=k+28|0;c[e>>2]=0;c[k+32>>2]=0;zY(h);c[e>>2]=c[g>>2];c[g>>2]=h;l=h}c[12262]=l;f=l}l=f+4|0;c[l>>2]=(c[l>>2]|0)+1;l=f+16|0;h=c[l>>2]|0;c[l>>2]=h+1;if((h|0)!=0){i=b;return}ce(d|0,0)|0;h=c[13830]|0;c[f+12>>2]=(c[d+4>>2]|0)-(c[h+4>>2]|0)+(((c[d>>2]|0)-(c[h>>2]|0)|0)*1e6|0);i=b;return}function z$(){var a=0,b=0,d=0,e=0,f=0,h=0;a=i;i=i+8|0;b=a|0;d=c[12262]|0;e=d+16|0;f=(c[e>>2]|0)-1|0;c[e>>2]=f;if((f|0)!=0){i=a;return}do{if((c[d+4>>2]|0)!=0){ce(b|0,0)|0;f=c[13830]|0;h=d+8|0;g[h>>2]=+(((c[b+4>>2]|0)-(c[f+4>>2]|0)+(((c[b>>2]|0)-(c[f>>2]|0)|0)*1e6|0)-(c[d+12>>2]|0)|0)>>>0>>>0)/1.0e3+ +g[h>>2];if((c[e>>2]|0)==0){break}i=a;return}}while(0);c[12262]=c[(c[12262]|0)+20>>2];i=a;return}function z0(){var a=0,b=0,d=0,e=0;a=i;i=i+16|0;b=a|0;d=a+8|0;ce(c[13830]|0,0)|0;zY(55224);c[13807]=(c[13807]|0)+1;e=c[13810]|0;c[13810]=e+1;if((e|0)==0){ce(d|0,0)|0;e=c[13830]|0;c[13809]=(c[d+4>>2]|0)-(c[e+4>>2]|0)+(((c[d>>2]|0)-(c[e>>2]|0)|0)*1e6|0)}c[13816]=0;ce(b|0,0)|0;e=c[13830]|0;c[13804]=(c[b+4>>2]|0)-(c[e+4>>2]|0)+(((c[b>>2]|0)-(c[e>>2]|0)|0)*1e6|0);i=a;return}function z1(){c[13816]=(c[13816]|0)+1;return}function z2(){var a=0;a=KS(8)|0;c[13830]=a;ce(a|0,0)|0;ep(488,55320,q|0)|0;c[13806]=25696;K1(55228|0,0|0,32|0)|0;zY(55224);ep(582,55224,q|0)|0;return}function z3(a,b,c){a=a|0;b=b|0;c=c|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0;e=a>>>16;f=a&65535;if((c|0)==1){a=(d[b]|0)+f|0;g=a>>>0>65520>>>0?a-65521|0:a;a=g+e|0;h=(a>>>0>65520>>>0?a+15|0:a)<<16|g;return h|0}if((b|0)==0){h=1;return h|0}if(c>>>0<16>>>0){if((c|0)==0){i=f;j=e}else{g=f;a=b;k=c;l=e;while(1){m=k-1|0;n=(d[a]|0)+g|0;o=n+l|0;if((m|0)==0){i=n;j=o;break}else{g=n;a=a+1|0;k=m;l=o}}}h=((j>>>0)%65521|0)<<16|(i>>>0>65520>>>0?i-65521|0:i);return h|0}do{if(c>>>0>5551>>>0){i=f;j=b;l=c;k=e;do{l=l-5552|0;a=347;g=k;o=j;m=i;while(1){n=(d[o]|0)+m|0;p=n+(d[o+1|0]|0)|0;q=p+(d[o+2|0]|0)|0;r=q+(d[o+3|0]|0)|0;s=r+(d[o+4|0]|0)|0;t=s+(d[o+5|0]|0)|0;u=t+(d[o+6|0]|0)|0;v=u+(d[o+7|0]|0)|0;w=v+(d[o+8|0]|0)|0;x=w+(d[o+9|0]|0)|0;y=x+(d[o+10|0]|0)|0;z=y+(d[o+11|0]|0)|0;A=z+(d[o+12|0]|0)|0;B=A+(d[o+13|0]|0)|0;C=B+(d[o+14|0]|0)|0;D=C+(d[o+15|0]|0)|0;E=n+g+p+q+r+s+t+u+v+w+x+y+z+A+B+C+D|0;C=a-1|0;if((C|0)==0){break}else{a=C;g=E;o=o+16|0;m=D}}j=j+5552|0;i=(D>>>0)%65521|0;k=(E>>>0)%65521|0;}while(l>>>0>5551>>>0);if((l|0)==0){F=k;G=i;break}if(l>>>0>15>>>0){H=i;I=j;J=l;K=k;L=15}else{M=i;N=j;O=l;P=k;L=16}}else{H=f;I=b;J=c;K=e;L=15}}while(0);if((L|0)==15){while(1){L=0;Q=J-16|0;e=(d[I]|0)+H|0;c=e+(d[I+1|0]|0)|0;b=c+(d[I+2|0]|0)|0;f=b+(d[I+3|0]|0)|0;E=f+(d[I+4|0]|0)|0;D=E+(d[I+5|0]|0)|0;m=D+(d[I+6|0]|0)|0;o=m+(d[I+7|0]|0)|0;g=o+(d[I+8|0]|0)|0;a=g+(d[I+9|0]|0)|0;C=a+(d[I+10|0]|0)|0;B=C+(d[I+11|0]|0)|0;A=B+(d[I+12|0]|0)|0;z=A+(d[I+13|0]|0)|0;y=z+(d[I+14|0]|0)|0;R=y+(d[I+15|0]|0)|0;S=e+K+c+b+f+E+D+m+o+g+a+C+B+A+z+y+R|0;T=I+16|0;if(Q>>>0>15>>>0){H=R;I=T;J=Q;K=S;L=15}else{break}}if((Q|0)==0){U=R;V=S;L=17}else{M=R;N=T;O=Q;P=S;L=16}}if((L|0)==16){while(1){L=0;S=O-1|0;Q=(d[N]|0)+M|0;T=Q+P|0;if((S|0)==0){U=Q;V=T;L=17;break}else{M=Q;N=N+1|0;O=S;P=T;L=16}}}if((L|0)==17){F=(V>>>0)%65521|0;G=(U>>>0)%65521|0}h=F<<16|G;return h|0}function z4(a,b,e){a=a|0;b=b|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;if((b|0)==0){f=0;return f|0}g=~a;L4:do{if((e|0)==0){h=g}else{a=b;i=e;j=g;while(1){if((a&3|0)==0){break}k=c[4608+(((d[a]|0)^j&255)<<2)>>2]^j>>>8;l=i-1|0;if((l|0)==0){h=k;break L4}else{a=a+1|0;i=l;j=k}}k=a;if(i>>>0>31>>>0){l=i;m=j;n=k;while(1){o=c[n>>2]^m;p=c[6656+((o>>>8&255)<<2)>>2]^c[7680+((o&255)<<2)>>2]^c[5632+((o>>>16&255)<<2)>>2]^c[4608+(o>>>24<<2)>>2]^c[n+4>>2];o=c[6656+((p>>>8&255)<<2)>>2]^c[7680+((p&255)<<2)>>2]^c[5632+((p>>>16&255)<<2)>>2]^c[4608+(p>>>24<<2)>>2]^c[n+8>>2];p=c[6656+((o>>>8&255)<<2)>>2]^c[7680+((o&255)<<2)>>2]^c[5632+((o>>>16&255)<<2)>>2]^c[4608+(o>>>24<<2)>>2]^c[n+12>>2];o=c[6656+((p>>>8&255)<<2)>>2]^c[7680+((p&255)<<2)>>2]^c[5632+((p>>>16&255)<<2)>>2]^c[4608+(p>>>24<<2)>>2]^c[n+16>>2];p=c[6656+((o>>>8&255)<<2)>>2]^c[7680+((o&255)<<2)>>2]^c[5632+((o>>>16&255)<<2)>>2]^c[4608+(o>>>24<<2)>>2]^c[n+20>>2];o=c[6656+((p>>>8&255)<<2)>>2]^c[7680+((p&255)<<2)>>2]^c[5632+((p>>>16&255)<<2)>>2]^c[4608+(p>>>24<<2)>>2]^c[n+24>>2];p=n+32|0;q=c[6656+((o>>>8&255)<<2)>>2]^c[7680+((o&255)<<2)>>2]^c[5632+((o>>>16&255)<<2)>>2]^c[4608+(o>>>24<<2)>>2]^c[n+28>>2];o=c[6656+((q>>>8&255)<<2)>>2]^c[7680+((q&255)<<2)>>2]^c[5632+((q>>>16&255)<<2)>>2]^c[4608+(q>>>24<<2)>>2];q=l-32|0;if(q>>>0>31>>>0){l=q;m=o;n=p}else{r=q;s=o;t=p;break}}}else{r=i;s=j;t=k}if(r>>>0>3>>>0){n=r;m=s;l=t;while(1){a=l+4|0;p=c[l>>2]^m;o=c[6656+((p>>>8&255)<<2)>>2]^c[7680+((p&255)<<2)>>2]^c[5632+((p>>>16&255)<<2)>>2]^c[4608+(p>>>24<<2)>>2];p=n-4|0;if(p>>>0>3>>>0){n=p;m=o;l=a}else{u=p;v=o;w=a;break}}}else{u=r;v=s;w=t}if((u|0)==0){h=v;break}l=v;m=u;n=w;while(1){k=c[4608+(((d[n]|0)^l&255)<<2)>>2]^l>>>8;j=m-1|0;if((j|0)==0){h=k;break}else{l=k;m=j;n=n+1|0}}}}while(0);f=~h;return f|0}function z5(e,f){e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0,ai=0,aj=0,ak=0,al=0,am=0,an=0,ao=0,ap=0,aq=0,ar=0,as=0,at=0,au=0,av=0,aw=0,ax=0,ay=0,az=0,aA=0,aB=0,aC=0,aD=0,aE=0,aF=0,aG=0,aH=0,aI=0,aJ=0,aK=0,aL=0,aM=0,aN=0,aO=0,aP=0,aQ=0,aR=0,aS=0,aT=0,aU=0,aV=0,aW=0,aX=0;g=c[e+28>>2]|0;h=g;i=e|0;j=c[i>>2]|0;k=e+4|0;l=j+((c[k>>2]|0)-6)|0;m=e+12|0;n=c[m>>2]|0;o=e+16|0;p=c[o>>2]|0;q=n+(p-258)|0;r=c[h+44>>2]|0;s=c[h+48>>2]|0;t=c[h+52>>2]|0;u=h+56|0;v=h+60|0;w=c[h+76>>2]|0;x=c[h+80>>2]|0;y=(1<<c[h+84>>2])-1|0;z=(1<<c[h+88>>2])-1|0;A=n+(p+~f)|0;f=h+7104|0;p=t-1|0;B=(s|0)==0;C=(c[h+40>>2]|0)-1|0;h=C+s|0;D=s-1|0;E=A-1|0;F=A-s|0;G=j-1|0;j=n-1|0;n=c[u>>2]|0;H=c[v>>2]|0;L1:while(1){if(H>>>0<15>>>0){I=G+2|0;J=I;K=((d[G+1|0]|0)<<H)+n+((d[I]|0)<<H+8)|0;L=H+16|0}else{J=G;K=n;L=H}I=K&y;M=a[w+(I<<2)|0]|0;N=b[w+(I<<2)+2>>1]|0;O=d[w+(I<<2)+1|0]|0;I=K>>>(O>>>0);P=L-O|0;do{if(M<<24>>24==0){Q=N&255;R=I;S=P;T=6}else{O=N;U=I;V=P;W=M;while(1){X=W&255;if((X&16|0)!=0){break}if((X&64|0)!=0){T=54;break L1}Y=(U&(1<<X)-1)+(O&65535)|0;Z=a[w+(Y<<2)|0]|0;_=b[w+(Y<<2)+2>>1]|0;$=d[w+(Y<<2)+1|0]|0;aa=U>>>($>>>0);ab=V-$|0;if(Z<<24>>24==0){T=5;break}else{O=_;U=aa;V=ab;W=Z}}if((T|0)==5){T=0;Q=_&255;R=aa;S=ab;T=6;break}W=O&65535;Z=X&15;if((Z|0)==0){ac=W;ad=J;ae=U;af=V}else{if(V>>>0<Z>>>0){$=J+1|0;ag=$;ah=((d[$]|0)<<V)+U|0;ai=V+8|0}else{ag=J;ah=U;ai=V}ac=(ah&(1<<Z)-1)+W|0;ad=ag;ae=ah>>>(Z>>>0);af=ai-Z|0}if(af>>>0<15>>>0){Z=ad+2|0;aj=Z;ak=((d[ad+1|0]|0)<<af)+ae+((d[Z]|0)<<af+8)|0;al=af+16|0}else{aj=ad;ak=ae;al=af}Z=ak&z;W=b[x+(Z<<2)+2>>1]|0;$=d[x+(Z<<2)+1|0]|0;Y=ak>>>($>>>0);am=al-$|0;$=d[x+(Z<<2)|0]|0;if(($&16|0)==0){Z=W;an=Y;ao=am;ap=$;while(1){if((ap&64|0)!=0){T=51;break L1}aq=(an&(1<<ap)-1)+(Z&65535)|0;ar=b[x+(aq<<2)+2>>1]|0;as=d[x+(aq<<2)+1|0]|0;at=an>>>(as>>>0);au=ao-as|0;as=d[x+(aq<<2)|0]|0;if((as&16|0)==0){Z=ar;an=at;ao=au;ap=as}else{av=ar;aw=at;ax=au;ay=as;break}}}else{av=W;aw=Y;ax=am;ay=$}ap=av&65535;Z=ay&15;do{if(ax>>>0<Z>>>0){O=aj+1|0;as=((d[O]|0)<<ax)+aw|0;au=ax+8|0;if(au>>>0>=Z>>>0){az=O;aA=as;aB=au;break}O=aj+2|0;az=O;aA=((d[O]|0)<<au)+as|0;aB=ax+16|0}else{az=aj;aA=aw;aB=ax}}while(0);$=(aA&(1<<Z)-1)+ap|0;aC=aA>>>(Z>>>0);aD=aB-Z|0;am=j;Y=am-A|0;if($>>>0<=Y>>>0){W=j+(-$|0)|0;as=ac;au=j;while(1){a[au+1|0]=a[W+1|0]|0;a[au+2|0]=a[W+2|0]|0;O=W+3|0;aE=au+3|0;a[aE]=a[O]|0;aF=as-3|0;if(aF>>>0>2>>>0){W=O;as=aF;au=aE}else{break}}if((aF|0)==0){aG=az;aH=aE;aI=aC;aJ=aD;break}as=au+4|0;a[as]=a[W+4|0]|0;if(aF>>>0<=1>>>0){aG=az;aH=as;aI=aC;aJ=aD;break}as=au+5|0;a[as]=a[W+5|0]|0;aG=az;aH=as;aI=aC;aJ=aD;break}as=$-Y|0;if(as>>>0>r>>>0){if((c[f>>2]|0)!=0){T=21;break L1}}do{if(B){Z=t+(C-as)|0;if(as>>>0>=ac>>>0){aK=Z;aL=ac;aM=j;break}ap=ac-as|0;O=$-am|0;at=Z;Z=as;ar=j;do{at=at+1|0;ar=ar+1|0;a[ar]=a[at]|0;Z=Z-1|0;}while((Z|0)!=0);aK=j+(E+O+(1-$))|0;aL=ap;aM=j+(A+O)|0}else{if(s>>>0>=as>>>0){Z=t+(D-as)|0;if(as>>>0>=ac>>>0){aK=Z;aL=ac;aM=j;break}at=ac-as|0;ar=$-am|0;aq=Z;Z=as;aN=j;do{aq=aq+1|0;aN=aN+1|0;a[aN]=a[aq]|0;Z=Z-1|0;}while((Z|0)!=0);aK=j+(E+ar+(1-$))|0;aL=at;aM=j+(A+ar)|0;break}Z=t+(h-as)|0;aq=as-s|0;if(aq>>>0>=ac>>>0){aK=Z;aL=ac;aM=j;break}aN=ac-aq|0;O=$-am|0;ap=Z;Z=aq;aq=j;do{ap=ap+1|0;aq=aq+1|0;a[aq]=a[ap]|0;Z=Z-1|0;}while((Z|0)!=0);Z=j+(F+O)|0;if(s>>>0>=aN>>>0){aK=p;aL=aN;aM=Z;break}ap=aN-s|0;aq=p;ar=s;at=Z;do{aq=aq+1|0;at=at+1|0;a[at]=a[aq]|0;ar=ar-1|0;}while((ar|0)!=0);aK=j+(E+O+(1-$))|0;aL=ap;aM=j+(A+O)|0}}while(0);if(aL>>>0>2>>>0){$=aM;am=aL;as=aK;while(1){a[$+1|0]=a[as+1|0]|0;a[$+2|0]=a[as+2|0]|0;Y=as+3|0;W=$+3|0;a[W]=a[Y]|0;au=am-3|0;if(au>>>0>2>>>0){$=W;am=au;as=Y}else{aO=W;aP=au;aQ=Y;break}}}else{aO=aM;aP=aL;aQ=aK}if((aP|0)==0){aG=az;aH=aO;aI=aC;aJ=aD;break}as=aO+1|0;a[as]=a[aQ+1|0]|0;if(aP>>>0<=1>>>0){aG=az;aH=as;aI=aC;aJ=aD;break}as=aO+2|0;a[as]=a[aQ+2|0]|0;aG=az;aH=as;aI=aC;aJ=aD}}while(0);if((T|0)==6){T=0;M=j+1|0;a[M]=Q;aG=J;aH=M;aI=R;aJ=S}if(aG>>>0<l>>>0&aH>>>0<q>>>0){G=aG;j=aH;n=aI;H=aJ}else{aR=aG;aS=aH;aT=aI;aU=aJ;break}}do{if((T|0)==21){c[e+24>>2]=25648;c[g>>2]=29;aR=az;aS=j;aT=aC;aU=aD}else if((T|0)==51){c[e+24>>2]=25392;c[g>>2]=29;aR=aj;aS=j;aT=an;aU=ao}else if((T|0)==54){if((X&32|0)==0){c[e+24>>2]=22120;c[g>>2]=29;aR=J;aS=j;aT=U;aU=V;break}else{c[g>>2]=11;aR=J;aS=j;aT=U;aU=V;break}}}while(0);V=aU>>>3;U=aR+(-V|0)|0;j=aU-(V<<3)|0;aU=(1<<j)-1&aT;c[i>>2]=aR+(1-V);c[m>>2]=aS+1;if(U>>>0<l>>>0){aV=l-U|0}else{aV=l-U|0}c[k>>2]=aV+5;if(aS>>>0<q>>>0){aW=q-aS|0;aX=aW+257|0;c[o>>2]=aX;c[u>>2]=aU;c[v>>2]=j;return}else{aW=q-aS|0;aX=aW+257|0;c[o>>2]=aX;c[u>>2]=aU;c[v>>2]=j;return}}function z6(a){a=a|0;var b=0,d=0,e=0,f=0;if((a|0)==0){b=-2;return b|0}d=a+28|0;e=c[d>>2]|0;if((e|0)==0){b=-2;return b|0}f=e;c[f+40>>2]=0;c[f+44>>2]=0;c[f+48>>2]=0;f=c[d>>2]|0;if((f|0)==0){b=-2;return b|0}d=f;c[d+28>>2]=0;c[a+20>>2]=0;c[a+8>>2]=0;c[a+24>>2]=0;e=c[d+8>>2]|0;if((e|0)!=0){c[a+48>>2]=e&1}c[f>>2]=0;c[d+4>>2]=0;c[d+12>>2]=0;c[d+20>>2]=32768;c[d+32>>2]=0;c[d+56>>2]=0;c[d+60>>2]=0;f=d+1328|0;c[d+108>>2]=f;c[d+80>>2]=f;c[d+76>>2]=f;c[d+7104>>2]=1;c[d+7108>>2]=-1;b=0;return b|0}function z7(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0;if((a|0)==0){d=-2;return d|0}e=a+28|0;f=c[e>>2]|0;if((f|0)==0){d=-2;return d|0}g=f;if((b|0)<0){h=0;i=-b|0}else{h=(b>>4)+1|0;i=(b|0)<48?b&15:b}if((i|0)!=0&(i-8|0)>>>0>7>>>0){d=-2;return d|0}b=g+52|0;f=c[b>>2]|0;j=g+36|0;do{if((f|0)!=0){if((c[j>>2]|0)==(i|0)){break}g0[c[a+36>>2]&511](c[a+40>>2]|0,f);c[b>>2]=0}}while(0);c[g+8>>2]=h;c[j>>2]=i;i=c[e>>2]|0;if((i|0)==0){d=-2;return d|0}j=i;c[j+40>>2]=0;c[j+44>>2]=0;c[j+48>>2]=0;j=c[e>>2]|0;if((j|0)==0){d=-2;return d|0}e=j;c[e+28>>2]=0;c[a+20>>2]=0;c[a+8>>2]=0;c[a+24>>2]=0;i=c[e+8>>2]|0;if((i|0)!=0){c[a+48>>2]=i&1}c[j>>2]=0;c[e+4>>2]=0;c[e+12>>2]=0;c[e+20>>2]=32768;c[e+32>>2]=0;c[e+56>>2]=0;c[e+60>>2]=0;j=e+1328|0;c[e+108>>2]=j;c[e+80>>2]=j;c[e+76>>2]=j;c[e+7104>>2]=1;c[e+7108>>2]=-1;d=0;return d|0}function z8(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;if((d|0)==0){f=-6;return f|0}if(!((a[d]|0)==49&(e|0)==56)){f=-6;return f|0}if((b|0)==0){f=-2;return f|0}c[b+24>>2]=0;e=b+32|0;d=c[e>>2]|0;if((d|0)==0){c[e>>2]=20;c[b+40>>2]=0;g=20}else{g=d}d=b+36|0;if((c[d>>2]|0)==0){c[d>>2]=20}e=b+40|0;h=hd[g&127](c[e>>2]|0,1,7116)|0;if((h|0)==0){f=-4;return f|0}g=b+28|0;c[g>>2]=h;c[h+52>>2]=0;i=z7(b,15)|0;if((i|0)==0){f=0;return f|0}g0[c[d>>2]&511](c[e>>2]|0,h);c[g>>2]=0;f=i;return f|0}function z9(f,g){f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0,ai=0,aj=0,ak=0,al=0,am=0,an=0,ao=0,ap=0,aq=0,ar=0,as=0,at=0,au=0,av=0,aw=0,ax=0,ay=0,az=0,aA=0,aB=0,aC=0,aD=0,aE=0,aF=0,aG=0,aH=0,aI=0,aJ=0,aK=0,aL=0,aM=0,aN=0,aO=0,aP=0,aQ=0,aR=0,aS=0,aT=0,aU=0,aV=0,aW=0,aX=0,aY=0,aZ=0,a_=0,a$=0,a0=0,a1=0,a2=0,a3=0,a4=0,a5=0,a6=0,a7=0,a8=0,a9=0,ba=0,bb=0,bc=0,bd=0,be=0,bf=0,bg=0,bh=0,bi=0,bj=0,bk=0,bl=0,bm=0,bn=0,bo=0,bp=0,bq=0,br=0,bs=0,bt=0,bu=0,bv=0,bw=0,bx=0,by=0,bz=0,bA=0,bB=0,bC=0,bD=0,bE=0,bF=0,bG=0,bH=0,bI=0,bJ=0,bK=0,bL=0,bM=0,bN=0,bO=0,bP=0,bQ=0,bR=0,bS=0,bT=0,bU=0,bV=0,bW=0,bX=0,bY=0,bZ=0,b_=0,b$=0,b0=0,b1=0,b2=0,b3=0,b4=0,b5=0,b6=0,b7=0,b8=0,b9=0,ca=0,cb=0,cc=0,cd=0,ce=0,cf=0,cg=0,ch=0,ci=0,cj=0,ck=0,cl=0,cm=0,cn=0,co=0,cp=0,cq=0,cr=0,cs=0,ct=0,cu=0,cv=0,cw=0,cx=0,cy=0,cz=0,cA=0,cB=0,cC=0,cD=0,cE=0,cF=0,cG=0,cH=0,cI=0,cJ=0,cK=0,cL=0,cM=0,cN=0,cO=0,cP=0,cQ=0,cR=0,cS=0,cT=0,cU=0,cV=0,cW=0,cX=0,cY=0,cZ=0,c_=0,c$=0,c0=0,c1=0,c2=0,c3=0,c4=0,c5=0,c6=0,c7=0,c8=0,c9=0,da=0,db=0,dc=0,dd=0,de=0,df=0,dg=0,dh=0,di=0,dj=0,dk=0,dl=0,dm=0,dn=0,dp=0,dq=0,dr=0,ds=0,dt=0,du=0,dv=0,dw=0,dx=0,dy=0,dz=0,dA=0,dB=0,dC=0,dD=0,dE=0,dF=0,dH=0,dI=0,dJ=0,dK=0,dL=0,dM=0,dN=0,dO=0,dP=0,dQ=0,dR=0,dS=0,dT=0,dU=0,dV=0,dW=0,dX=0,dY=0,dZ=0,d_=0,d$=0,d0=0,d1=0,d2=0,d3=0,d4=0,d5=0,d6=0,d7=0,d8=0,d9=0,ea=0,eb=0,ec=0,ed=0,ee=0,ef=0,eg=0,eh=0,ei=0,ej=0,ek=0,el=0,em=0,en=0,eo=0,ep=0,eq=0,er=0,es=0,et=0,eu=0,ev=0,ew=0,ex=0,ey=0,ez=0,eA=0,eB=0,eC=0,eD=0,eE=0,eF=0,eG=0,eH=0,eI=0,eJ=0,eK=0,eL=0,eM=0,eN=0,eO=0,eP=0,eQ=0,eR=0,eS=0,eT=0,eU=0,eV=0,eW=0,eX=0,eY=0,eZ=0,e_=0,e$=0,e0=0,e1=0,e2=0,e3=0,e4=0,e5=0,e6=0,e7=0,e8=0,e9=0,fa=0,fb=0,fc=0,fd=0,fe=0,ff=0,fg=0,fh=0,fi=0,fj=0,fk=0,fl=0,fm=0,fn=0,fo=0,fp=0,fq=0,fr=0,fs=0,ft=0,fu=0,fv=0,fw=0,fx=0,fy=0,fz=0,fA=0,fB=0,fC=0,fD=0,fE=0,fF=0,fG=0,fH=0;h=i;i=i+8|0;j=h|0;if((f|0)==0){k=-2;i=h;return k|0}l=c[f+28>>2]|0;if((l|0)==0){k=-2;i=h;return k|0}m=f+12|0;n=c[m>>2]|0;if((n|0)==0){k=-2;i=h;return k|0}o=f|0;p=c[o>>2]|0;do{if((p|0)==0){if((c[f+4>>2]|0)==0){break}else{k=-2}i=h;return k|0}}while(0);q=l;r=l;l=c[r>>2]|0;if((l|0)==11){c[r>>2]=12;s=c[m>>2]|0;t=c[o>>2]|0;u=12}else{s=n;t=p;u=l}l=f+16|0;p=c[l>>2]|0;n=f+4|0;v=c[n>>2]|0;w=q+56|0;x=q+60|0;y=q+8|0;z=q+24|0;A=j|0;B=j+1|0;C=q+16|0;D=q+32|0;E=f+24|0;F=q+36|0;G=q+20|0;H=f+48|0;I=q+64|0;J=q+12|0;K=(g-5|0)>>>0<2>>>0;L=q+4|0;M=q+76|0;N=q+84|0;O=q+80|0;P=q+88|0;Q=(g|0)==6;R=q+7108|0;S=q+72|0;T=q+7112|0;U=q+68|0;V=q+44|0;W=q+7104|0;X=q+48|0;Y=q+52|0;Z=q+40|0;_=f+20|0;$=q+28|0;aa=q+96|0;ab=q+100|0;ac=q+92|0;ad=q+104|0;ae=q+1328|0;af=q+108|0;ag=q+112|0;ah=q+752|0;ai=q+624|0;aj=j+2|0;ak=j+3|0;j=0;al=p;am=c[x>>2]|0;an=c[w>>2]|0;ao=p;p=v;ap=s;s=t;t=u;L17:while(1){L19:do{switch(t|0){case 21:{aq=j;ar=am;as=an;at=p;au=s;av=c[S>>2]|0;aw=217;break};case 23:{ax=j;ay=am;az=an;aA=p;aB=s;aC=c[S>>2]|0;aw=236;break};case 18:{aD=j;aE=am;aF=an;aG=p;aH=s;aI=c[ad>>2]|0;aw=163;break};case 1:{if(am>>>0<16>>>0){u=s;aJ=p;aK=an;aL=am;while(1){if((aJ|0)==0){aM=j;aN=al;aO=aL;aP=aK;aQ=0;aR=u;aS=ao;break L17}aT=aJ-1|0;aU=u+1|0;aV=(d[u]<<aL)+aK|0;aW=aL+8|0;if(aW>>>0<16>>>0){u=aU;aJ=aT;aK=aV;aL=aW}else{aX=aU;aY=aT;aZ=aV;a_=aW;break}}}else{aX=s;aY=p;aZ=an;a_=am}c[C>>2]=aZ;if((aZ&255|0)!=8){c[E>>2]=22088;c[r>>2]=29;a$=j;a0=al;a1=a_;a2=aZ;a3=ao;a4=aY;a5=ap;a6=aX;break L19}if((aZ&57344|0)!=0){c[E>>2]=18656;c[r>>2]=29;a$=j;a0=al;a1=a_;a2=aZ;a3=ao;a4=aY;a5=ap;a6=aX;break L19}aL=c[D>>2]|0;if((aL|0)==0){a7=aZ}else{c[aL>>2]=aZ>>>8&1;a7=c[C>>2]|0}if((a7&512|0)!=0){a[A]=aZ;a[B]=aZ>>>8;c[z>>2]=z4(c[z>>2]|0,A,2)|0}c[r>>2]=2;a8=aX;a9=aY;ba=0;bb=0;aw=47;break};case 9:{if(am>>>0<32>>>0){aL=s;aK=p;aJ=an;u=am;while(1){if((aK|0)==0){aM=j;aN=al;aO=u;aP=aJ;aQ=0;aR=aL;aS=ao;break L17}aW=aK-1|0;aV=aL+1|0;aT=(d[aL]<<u)+aJ|0;aU=u+8|0;if(aU>>>0<32>>>0){aL=aV;aK=aW;aJ=aT;u=aU}else{bc=aV;bd=aW;be=aT;break}}}else{bc=s;bd=p;be=an}u=dG(be|0)|0;c[z>>2]=u;c[H>>2]=u;c[r>>2]=10;bf=0;bg=0;bh=bd;bi=bc;aw=121;break};case 16:{if(am>>>0<14>>>0){u=s;aJ=p;aK=an;aL=am;while(1){if((aJ|0)==0){aM=j;aN=al;aO=aL;aP=aK;aQ=0;aR=u;aS=ao;break L17}aT=aJ-1|0;aW=u+1|0;aV=(d[u]<<aL)+aK|0;aU=aL+8|0;if(aU>>>0<14>>>0){u=aW;aJ=aT;aK=aV;aL=aU}else{bj=aW;bk=aT;bl=aV;bm=aU;break}}}else{bj=s;bk=p;bl=an;bm=am}aL=(bl&31)+257|0;c[aa>>2]=aL;aK=(bl>>>5&31)+1|0;c[ab>>2]=aK;c[ac>>2]=(bl>>>10&15)+4;aJ=bl>>>14;u=bm-14|0;if(aL>>>0>286>>>0|aK>>>0>30>>>0){c[E>>2]=13896;c[r>>2]=29;a$=j;a0=al;a1=u;a2=aJ;a3=ao;a4=bk;a5=ap;a6=bj;break L19}else{c[ad>>2]=0;c[r>>2]=17;bn=bj;bo=bk;bp=aJ;bq=u;br=0;aw=154;break L19}break};case 0:{u=c[y>>2]|0;if((u|0)==0){c[r>>2]=12;a$=j;a0=al;a1=am;a2=an;a3=ao;a4=p;a5=ap;a6=s;break L19}if(am>>>0<16>>>0){aJ=s;aK=p;aL=an;aU=am;while(1){if((aK|0)==0){aM=j;aN=al;aO=aU;aP=aL;aQ=0;aR=aJ;aS=ao;break L17}aV=aK-1|0;aT=aJ+1|0;aW=(d[aJ]<<aU)+aL|0;bs=aU+8|0;if(bs>>>0<16>>>0){aJ=aT;aK=aV;aL=aW;aU=bs}else{bt=aT;bu=aV;bv=aW;bw=bs;break}}}else{bt=s;bu=p;bv=an;bw=am}if((u&2|0)!=0&(bv|0)==35615){c[z>>2]=z4(0,0,0)|0;a[A]=31;a[B]=-117;c[z>>2]=z4(c[z>>2]|0,A,2)|0;c[r>>2]=1;a$=j;a0=al;a1=0;a2=0;a3=ao;a4=bu;a5=ap;a6=bt;break L19}c[C>>2]=0;aU=c[D>>2]|0;if((aU|0)==0){bx=u}else{c[aU+48>>2]=-1;bx=c[y>>2]|0}do{if((bx&1|0)!=0){if(((((bv<<8&65280)+(bv>>>8)|0)>>>0)%31|0|0)!=0){break}if((bv&15|0)!=8){c[E>>2]=22088;c[r>>2]=29;a$=j;a0=al;a1=bw;a2=bv;a3=ao;a4=bu;a5=ap;a6=bt;break L19}aU=bv>>>4;aL=bw-4|0;aK=(aU&15)+8|0;aJ=c[F>>2]|0;do{if((aJ|0)==0){c[F>>2]=aK}else{if(aK>>>0<=aJ>>>0){break}c[E>>2]=20416;c[r>>2]=29;a$=j;a0=al;a1=aL;a2=aU;a3=ao;a4=bu;a5=ap;a6=bt;break L19}}while(0);c[G>>2]=1<<aK;aU=z3(0,0,0)|0;c[z>>2]=aU;c[H>>2]=aU;c[r>>2]=bv>>>12&2^11;a$=j;a0=al;a1=0;a2=0;a3=ao;a4=bu;a5=ap;a6=bt;break L19}}while(0);c[E>>2]=25368;c[r>>2]=29;a$=j;a0=al;a1=bw;a2=bv;a3=ao;a4=bu;a5=ap;a6=bt;break};case 2:{if(am>>>0<32>>>0){a8=s;a9=p;ba=an;bb=am;aw=47}else{by=s;bz=p;bA=an;aw=49}break};case 3:{if(am>>>0<16>>>0){bB=s;bC=p;bD=an;bE=am;aw=55}else{bF=s;bG=p;bH=an;aw=57}break};case 4:{bI=am;bJ=an;bK=p;bL=s;aw=62;break};case 5:{bM=am;bN=an;bO=p;bP=s;aw=73;break};case 6:{bQ=am;bR=an;bS=p;bT=s;aw=83;break};case 7:{bU=am;bV=an;bW=p;bX=s;aw=96;break};case 8:{bY=am;bZ=an;b_=p;b$=s;aw=109;break};case 10:{bf=am;bg=an;bh=p;bi=s;aw=121;break};case 11:{b0=am;b1=an;b2=p;b3=s;aw=124;break};case 12:{b4=am;b5=an;b6=p;b7=s;aw=125;break};case 13:{u=am&7;aU=an>>>(u>>>0);aL=am-u|0;if(aL>>>0<32>>>0){u=s;aJ=p;bs=aU;aW=aL;while(1){if((aJ|0)==0){aM=j;aN=al;aO=aW;aP=bs;aQ=0;aR=u;aS=ao;break L17}aV=aJ-1|0;aT=u+1|0;b8=(d[u]<<aW)+bs|0;b9=aW+8|0;if(b9>>>0<32>>>0){u=aT;aJ=aV;bs=b8;aW=b9}else{ca=aT;cb=aV;cc=b8;cd=b9;break}}}else{ca=s;cb=p;cc=aU;cd=aL}aW=cc&65535;if((aW|0)==(cc>>>16^65535|0)){c[I>>2]=aW;c[r>>2]=14;if(Q){ce=j;cf=0;cg=0;ch=cb;ci=ca;cj=ao;aw=281;break L17}else{ck=0;cl=0;cm=cb;cn=ca;aw=143;break L19}}else{c[E>>2]=14752;c[r>>2]=29;a$=j;a0=al;a1=cd;a2=cc;a3=ao;a4=cb;a5=ap;a6=ca;break L19}break};case 14:{ck=am;cl=an;cm=p;cn=s;aw=143;break};case 15:{co=am;cp=an;cq=p;cr=s;aw=144;break};case 17:{aW=c[ad>>2]|0;if(aW>>>0<(c[ac>>2]|0)>>>0){bn=s;bo=p;bp=an;bq=am;br=aW;aw=154}else{cs=s;ct=p;cu=an;cv=am;cw=aW;aw=158}break};case 19:{cx=j;cy=am;cz=an;cA=p;cB=s;aw=197;break};case 20:{cC=j;cD=am;cE=an;cF=p;cG=s;aw=198;break};case 22:{cH=j;cI=am;cJ=an;cK=p;cL=s;aw=224;break};case 24:{cM=j;cN=am;cO=an;cP=p;cQ=s;aw=242;break};case 25:{if((ao|0)==0){ce=j;cf=am;cg=an;ch=p;ci=s;cj=0;aw=281;break L17}a[ap]=c[I>>2];c[r>>2]=20;a$=j;a0=al;a1=am;a2=an;a3=ao-1|0;a4=p;a5=ap+1|0;a6=s;break};case 26:{do{if((c[y>>2]|0)==0){cR=al;cS=am;cT=an;cU=p;cV=s}else{if(am>>>0<32>>>0){aW=s;bs=p;aJ=an;u=am;while(1){if((bs|0)==0){aM=j;aN=al;aO=u;aP=aJ;aQ=0;aR=aW;aS=ao;break L17}b9=bs-1|0;b8=aW+1|0;aV=(d[aW]<<u)+aJ|0;aT=u+8|0;if(aT>>>0<32>>>0){aW=b8;bs=b9;aJ=aV;u=aT}else{cW=b8;cX=b9;cY=aV;cZ=aT;break}}}else{cW=s;cX=p;cY=an;cZ=am}u=al-ao|0;c[_>>2]=(c[_>>2]|0)+u;c[$>>2]=(c[$>>2]|0)+u;if((al|0)!=(ao|0)){aJ=c[z>>2]|0;bs=ap+(-u|0)|0;if((c[C>>2]|0)==0){c_=z3(aJ,bs,u)|0}else{c_=z4(aJ,bs,u)|0}c[z>>2]=c_;c[H>>2]=c_}if((c[C>>2]|0)==0){c$=dG(cY|0)|0}else{c$=cY}if((c$|0)==(c[z>>2]|0)){cR=ao;cS=0;cT=0;cU=cX;cV=cW;break}c[E>>2]=23032;c[r>>2]=29;a$=j;a0=ao;a1=cZ;a2=cY;a3=ao;a4=cX;a5=ap;a6=cW;break L19}}while(0);c[r>>2]=27;c0=cR;c1=cS;c2=cT;c3=cU;c4=cV;aw=273;break};case 27:{c0=al;c1=am;c2=an;c3=p;c4=s;aw=273;break};case 28:{ce=1;cf=am;cg=an;ch=p;ci=s;cj=ao;aw=281;break L17;break};case 29:{aM=-3;aN=al;aO=am;aP=an;aQ=p;aR=s;aS=ao;break L17;break};case 30:{aw=297;break L17;break};default:{k=-2;aw=303;break L17}}}while(0);if((aw|0)==47){while(1){aw=0;if((a9|0)==0){aM=j;aN=al;aO=bb;aP=ba;aQ=0;aR=a8;aS=ao;break L17}aL=a9-1|0;aU=a8+1|0;u=(d[a8]<<bb)+ba|0;bs=bb+8|0;if(bs>>>0<32>>>0){a8=aU;a9=aL;ba=u;bb=bs;aw=47}else{by=aU;bz=aL;bA=u;aw=49;break}}}else if((aw|0)==121){aw=0;if((c[J>>2]|0)==0){aw=122;break}u=z3(0,0,0)|0;c[z>>2]=u;c[H>>2]=u;c[r>>2]=11;b0=bf;b1=bg;b2=bh;b3=bi;aw=124}else if((aw|0)==143){aw=0;c[r>>2]=15;co=ck;cp=cl;cq=cm;cr=cn;aw=144}else if((aw|0)==154){while(1){aw=0;if(bq>>>0<3>>>0){u=bn;aL=bo;aU=bp;bs=bq;while(1){if((aL|0)==0){aM=j;aN=al;aO=bs;aP=aU;aQ=0;aR=u;aS=ao;break L17}aJ=aL-1|0;aW=u+1|0;aK=(d[u]<<bs)+aU|0;aT=bs+8|0;if(aT>>>0<3>>>0){u=aW;aL=aJ;aU=aK;bs=aT}else{c5=aW;c6=aJ;c7=aK;c8=aT;break}}}else{c5=bn;c6=bo;c7=bp;c8=bq}c[ad>>2]=br+1;b[q+112+(e[2096+(br<<1)>>1]<<1)>>1]=c7&7;bs=c7>>>3;aU=c8-3|0;aL=c[ad>>2]|0;if(aL>>>0<(c[ac>>2]|0)>>>0){bn=c5;bo=c6;bp=bs;bq=aU;br=aL;aw=154}else{cs=c5;ct=c6;cu=bs;cv=aU;cw=aL;aw=158;break}}}else if((aw|0)==273){aw=0;if((c[y>>2]|0)==0){c9=c1;da=c2;db=c3;dc=c4;aw=280;break}if((c[C>>2]|0)==0){c9=c1;da=c2;db=c3;dc=c4;aw=280;break}if(c1>>>0<32>>>0){aL=c4;aU=c3;bs=c2;u=c1;while(1){if((aU|0)==0){aM=j;aN=c0;aO=u;aP=bs;aQ=0;aR=aL;aS=ao;break L17}aT=aU-1|0;aK=aL+1|0;aJ=(d[aL]<<u)+bs|0;aW=u+8|0;if(aW>>>0<32>>>0){aL=aK;aU=aT;bs=aJ;u=aW}else{dd=aK;de=aT;df=aJ;dg=aW;break}}}else{dd=c4;de=c3;df=c2;dg=c1}if((df|0)==(c[$>>2]|0)){c9=0;da=0;db=de;dc=dd;aw=280;break}c[E>>2]=22744;c[r>>2]=29;a$=j;a0=c0;a1=dg;a2=df;a3=ao;a4=de;a5=ap;a6=dd}do{if((aw|0)==49){aw=0;u=c[D>>2]|0;if((u|0)!=0){c[u+4>>2]=bA}if((c[C>>2]&512|0)!=0){a[A]=bA;a[B]=bA>>>8;a[aj]=bA>>>16;a[ak]=bA>>>24;c[z>>2]=z4(c[z>>2]|0,A,4)|0}c[r>>2]=3;bB=by;bC=bz;bD=0;bE=0;aw=55}else if((aw|0)==124){aw=0;if(K){ce=j;cf=b0;cg=b1;ch=b2;ci=b3;cj=ao;aw=281;break L17}else{b4=b0;b5=b1;b6=b2;b7=b3;aw=125}}else if((aw|0)==144){aw=0;u=c[I>>2]|0;if((u|0)==0){c[r>>2]=11;a$=j;a0=al;a1=co;a2=cp;a3=ao;a4=cq;a5=ap;a6=cr;break}bs=u>>>0>cq>>>0?cq:u;u=bs>>>0>ao>>>0?ao:bs;if((u|0)==0){ce=j;cf=co;cg=cp;ch=cq;ci=cr;cj=ao;aw=281;break L17}K2(ap|0,cr|0,u)|0;c[I>>2]=(c[I>>2]|0)-u;a$=j;a0=al;a1=co;a2=cp;a3=ao-u|0;a4=cq-u|0;a5=ap+u|0;a6=cr+u|0}else if((aw|0)==158){aw=0;if(cw>>>0<19>>>0){u=cw;do{c[ad>>2]=u+1;b[q+112+(e[2096+(u<<1)>>1]<<1)>>1]=0;u=c[ad>>2]|0;}while(u>>>0<19>>>0)}c[af>>2]=ae;c[M>>2]=ae;c[N>>2]=7;u=Ac(0,ag,19,af,N,ah)|0;if((u|0)==0){c[ad>>2]=0;c[r>>2]=18;aD=0;aE=cv;aF=cu;aG=ct;aH=cs;aI=0;aw=163;break}else{c[E>>2]=13320;c[r>>2]=29;a$=u;a0=al;a1=cv;a2=cu;a3=ao;a4=ct;a5=ap;a6=cs;break}}}while(0);L162:do{if((aw|0)==55){while(1){aw=0;if((bC|0)==0){aM=j;aN=al;aO=bE;aP=bD;aQ=0;aR=bB;aS=ao;break L17}u=bC-1|0;bs=bB+1|0;aU=(d[bB]<<bE)+bD|0;aL=bE+8|0;if(aL>>>0<16>>>0){bB=bs;bC=u;bD=aU;bE=aL;aw=55}else{bF=bs;bG=u;bH=aU;aw=57;break}}}else if((aw|0)==125){aw=0;if((c[L>>2]|0)!=0){aU=b4&7;c[r>>2]=26;a$=j;a0=al;a1=b4-aU|0;a2=b5>>>(aU>>>0);a3=ao;a4=b6;a5=ap;a6=b7;break}if(b4>>>0<3>>>0){aU=b7;u=b6;bs=b5;aL=b4;while(1){if((u|0)==0){aM=j;aN=al;aO=aL;aP=bs;aQ=0;aR=aU;aS=ao;break L17}aW=u-1|0;aJ=aU+1|0;aT=(d[aU]<<aL)+bs|0;aK=aL+8|0;if(aK>>>0<3>>>0){aU=aJ;u=aW;bs=aT;aL=aK}else{dh=aJ;di=aW;dj=aT;dk=aK;break}}}else{dh=b7;di=b6;dj=b5;dk=b4}c[L>>2]=dj&1;aL=dj>>>1&3;if((aL|0)==0){c[r>>2]=13}else if((aL|0)==1){c[M>>2]=2432;c[N>>2]=9;c[O>>2]=4480;c[P>>2]=5;c[r>>2]=19;if(Q){aw=133;break L17}}else if((aL|0)==2){c[r>>2]=16}else if((aL|0)==3){c[E>>2]=15848;c[r>>2]=29}a$=j;a0=al;a1=dk-3|0;a2=dj>>>3;a3=ao;a4=di;a5=ap;a6=dh}else if((aw|0)==163){aw=0;aL=c[aa>>2]|0;bs=c[ab>>2]|0;do{if(aI>>>0<(bs+aL|0)>>>0){u=aH;aU=aG;aK=aF;aT=aE;aW=aI;aJ=aL;aV=bs;L183:while(1){b9=(1<<c[N>>2])-1|0;b8=b9&aK;dl=c[M>>2]|0;dm=d[dl+(b8<<2)+1|0]|0;if(dm>>>0>aT>>>0){dn=u;dp=aU;dq=aK;dr=aT;while(1){if((dp|0)==0){aM=aD;aN=al;aO=dr;aP=dq;aQ=0;aR=dn;aS=ao;break L17}ds=dp-1|0;dt=dn+1|0;du=(d[dn]<<dr)+dq|0;dv=dr+8|0;dw=b9&du;dx=d[dl+(dw<<2)+1|0]|0;if(dx>>>0>dv>>>0){dn=dt;dp=ds;dq=du;dr=dv}else{dy=dt;dz=ds;dA=du;dB=dv;dC=dw;dD=dx;break}}}else{dy=u;dz=aU;dA=aK;dB=aT;dC=b8;dD=dm}dr=b[dl+(dC<<2)+2>>1]|0;L190:do{if((dr&65535)>>>0<16>>>0){c[ad>>2]=aW+1;b[q+112+(aW<<1)>>1]=dr;dE=dB-dD|0;dF=dA>>>(dD>>>0);dH=dz;dI=dy}else{if((dr<<16>>16|0)==16){dq=dD+2|0;if(dB>>>0<dq>>>0){dp=dy;dn=dz;b9=dA;dx=dB;while(1){if((dn|0)==0){aM=aD;aN=al;aO=dx;aP=b9;aQ=0;aR=dp;aS=ao;break L17}dw=dn-1|0;dv=dp+1|0;du=(d[dp]<<dx)+b9|0;ds=dx+8|0;if(ds>>>0<dq>>>0){dp=dv;dn=dw;b9=du;dx=ds}else{dJ=dv;dK=dw;dL=du;dM=ds;break}}}else{dJ=dy;dK=dz;dL=dA;dM=dB}dN=dL>>>(dD>>>0);dO=dM-dD|0;if((aW|0)==0){aw=177;break L183}dP=b[q+112+(aW-1<<1)>>1]|0;dQ=(dN&3)+3|0;dR=dO-2|0;dS=dN>>>2;dT=dK;dU=dJ}else if((dr<<16>>16|0)==17){dx=dD+3|0;if(dB>>>0<dx>>>0){b9=dy;dn=dz;dp=dA;dq=dB;while(1){if((dn|0)==0){aM=aD;aN=al;aO=dq;aP=dp;aQ=0;aR=b9;aS=ao;break L17}ds=dn-1|0;du=b9+1|0;dw=(d[b9]<<dq)+dp|0;dv=dq+8|0;if(dv>>>0<dx>>>0){b9=du;dn=ds;dp=dw;dq=dv}else{dV=du;dW=ds;dX=dw;dY=dv;break}}}else{dV=dy;dW=dz;dX=dA;dY=dB}dq=dX>>>(dD>>>0);dP=0;dQ=(dq&7)+3|0;dR=-3-dD+dY|0;dS=dq>>>3;dT=dW;dU=dV}else{dq=dD+7|0;if(dB>>>0<dq>>>0){dp=dy;dn=dz;b9=dA;dx=dB;while(1){if((dn|0)==0){aM=aD;aN=al;aO=dx;aP=b9;aQ=0;aR=dp;aS=ao;break L17}dv=dn-1|0;dw=dp+1|0;ds=(d[dp]<<dx)+b9|0;du=dx+8|0;if(du>>>0<dq>>>0){dp=dw;dn=dv;b9=ds;dx=du}else{dZ=dw;d_=dv;d$=ds;d0=du;break}}}else{dZ=dy;d_=dz;d$=dA;d0=dB}dx=d$>>>(dD>>>0);dP=0;dQ=(dx&127)+11|0;dR=-7-dD+d0|0;dS=dx>>>7;dT=d_;dU=dZ}if((aW+dQ|0)>>>0>(aV+aJ|0)>>>0){aw=186;break L183}else{d1=dQ;d2=aW}while(1){dx=d1-1|0;c[ad>>2]=d2+1;b[q+112+(d2<<1)>>1]=dP;if((dx|0)==0){dE=dR;dF=dS;dH=dT;dI=dU;break L190}d1=dx;d2=c[ad>>2]|0}}}while(0);dr=c[ad>>2]|0;d3=c[aa>>2]|0;dl=c[ab>>2]|0;if(dr>>>0<(dl+d3|0)>>>0){u=dI;aU=dH;aK=dF;aT=dE;aW=dr;aJ=d3;aV=dl}else{aw=189;break}}if((aw|0)==177){aw=0;c[E>>2]=25920;c[r>>2]=29;a$=aD;a0=al;a1=dO;a2=dN;a3=ao;a4=dK;a5=ap;a6=dJ;break L162}else if((aw|0)==186){aw=0;c[E>>2]=25920;c[r>>2]=29;a$=aD;a0=al;a1=dR;a2=dS;a3=ao;a4=dT;a5=ap;a6=dU;break L162}else if((aw|0)==189){aw=0;if((c[r>>2]|0)==29){a$=aD;a0=al;a1=dE;a2=dF;a3=ao;a4=dH;a5=ap;a6=dI;break L162}else{d4=d3;d5=dE;d6=dF;d7=dH;d8=dI;break}}}else{d4=aL;d5=aE;d6=aF;d7=aG;d8=aH}}while(0);if((b[ai>>1]|0)==0){c[E>>2]=25304;c[r>>2]=29;a$=aD;a0=al;a1=d5;a2=d6;a3=ao;a4=d7;a5=ap;a6=d8;break}c[af>>2]=ae;c[M>>2]=ae;c[N>>2]=9;aL=Ac(1,ag,d4,af,N,ah)|0;if((aL|0)!=0){c[E>>2]=24328;c[r>>2]=29;a$=aL;a0=al;a1=d5;a2=d6;a3=ao;a4=d7;a5=ap;a6=d8;break}c[O>>2]=c[af>>2];c[P>>2]=6;aL=Ac(2,q+112+(c[aa>>2]<<1)|0,c[ab>>2]|0,af,P,ah)|0;if((aL|0)==0){c[r>>2]=19;if(Q){ce=0;cf=d5;cg=d6;ch=d7;ci=d8;cj=ao;aw=281;break L17}else{cx=0;cy=d5;cz=d6;cA=d7;cB=d8;aw=197;break}}else{c[E>>2]=24016;c[r>>2]=29;a$=aL;a0=al;a1=d5;a2=d6;a3=ao;a4=d7;a5=ap;a6=d8;break}}}while(0);if((aw|0)==57){aw=0;aL=c[D>>2]|0;if((aL|0)!=0){c[aL+8>>2]=bH&255;c[(c[D>>2]|0)+12>>2]=bH>>>8}if((c[C>>2]&512|0)!=0){a[A]=bH;a[B]=bH>>>8;c[z>>2]=z4(c[z>>2]|0,A,2)|0}c[r>>2]=4;bI=0;bJ=0;bK=bG;bL=bF;aw=62}else if((aw|0)==197){aw=0;c[r>>2]=20;cC=cx;cD=cy;cE=cz;cF=cA;cG=cB;aw=198}do{if((aw|0)==62){aw=0;aL=c[C>>2]|0;do{if((aL&1024|0)==0){bs=c[D>>2]|0;if((bs|0)==0){d9=bI;ea=bJ;eb=bK;ec=bL;break}c[bs+16>>2]=0;d9=bI;ea=bJ;eb=bK;ec=bL}else{if(bI>>>0<16>>>0){bs=bL;aV=bK;aJ=bJ;aW=bI;while(1){if((aV|0)==0){aM=j;aN=al;aO=aW;aP=aJ;aQ=0;aR=bs;aS=ao;break L17}aT=aV-1|0;aK=bs+1|0;aU=(d[bs]<<aW)+aJ|0;u=aW+8|0;if(u>>>0<16>>>0){bs=aK;aV=aT;aJ=aU;aW=u}else{ed=aK;ee=aT;ef=aU;break}}}else{ed=bL;ee=bK;ef=bJ}c[I>>2]=ef;aW=c[D>>2]|0;if((aW|0)==0){eg=aL}else{c[aW+20>>2]=ef;eg=c[C>>2]|0}if((eg&512|0)==0){d9=0;ea=0;eb=ee;ec=ed;break}a[A]=ef;a[B]=ef>>>8;c[z>>2]=z4(c[z>>2]|0,A,2)|0;d9=0;ea=0;eb=ee;ec=ed}}while(0);c[r>>2]=5;bM=d9;bN=ea;bO=eb;bP=ec;aw=73}else if((aw|0)==198){aw=0;if(cF>>>0>5>>>0&ao>>>0>257>>>0){c[m>>2]=ap;c[l>>2]=ao;c[o>>2]=cG;c[n>>2]=cF;c[w>>2]=cE;c[x>>2]=cD;z5(f,al);aL=c[m>>2]|0;aW=c[l>>2]|0;aJ=c[o>>2]|0;aV=c[n>>2]|0;bs=c[w>>2]|0;aU=c[x>>2]|0;if((c[r>>2]|0)!=11){a$=cC;a0=al;a1=aU;a2=bs;a3=aW;a4=aV;a5=aL;a6=aJ;break}c[R>>2]=-1;a$=cC;a0=al;a1=aU;a2=bs;a3=aW;a4=aV;a5=aL;a6=aJ;break}c[R>>2]=0;aJ=(1<<c[N>>2])-1|0;aL=aJ&cE;aV=c[M>>2]|0;aW=a[aV+(aL<<2)+1|0]|0;bs=aW&255;if(bs>>>0>cD>>>0){aU=cG;aT=cF;aK=cE;u=cD;while(1){if((aT|0)==0){aM=cC;aN=al;aO=u;aP=aK;aQ=0;aR=aU;aS=ao;break L17}dl=aT-1|0;dr=aU+1|0;dm=(d[aU]<<u)+aK|0;b8=u+8|0;dx=aJ&dm;b9=a[aV+(dx<<2)+1|0]|0;dn=b9&255;if(dn>>>0>b8>>>0){aU=dr;aT=dl;aK=dm;u=b8}else{eh=dr;ei=dl;ej=dm;ek=b8;el=b9;em=dx;en=dn;break}}}else{eh=cG;ei=cF;ej=cE;ek=cD;el=aW;em=aL;en=bs}u=a[aV+(em<<2)|0]|0;aK=b[aV+(em<<2)+2>>1]|0;aT=u&255;do{if(u<<24>>24==0){eo=0;ep=el;eq=aK;er=ek;es=ej;et=ei;eu=eh;ev=0}else{if((aT&240|0)!=0){eo=u;ep=el;eq=aK;er=ek;es=ej;et=ei;eu=eh;ev=0;break}aU=aK&65535;aJ=(1<<en+aT)-1|0;dn=((ej&aJ)>>>(en>>>0))+aU|0;dx=a[aV+(dn<<2)+1|0]|0;if(((dx&255)+en|0)>>>0>ek>>>0){b9=eh;b8=ei;dm=ej;dl=ek;while(1){if((b8|0)==0){aM=cC;aN=al;aO=dl;aP=dm;aQ=0;aR=b9;aS=ao;break L17}dr=b8-1|0;dp=b9+1|0;dq=(d[b9]<<dl)+dm|0;du=dl+8|0;ds=((dq&aJ)>>>(en>>>0))+aU|0;dv=a[aV+(ds<<2)+1|0]|0;if(((dv&255)+en|0)>>>0>du>>>0){b9=dp;b8=dr;dm=dq;dl=du}else{ew=dp;ex=dr;ey=dq;ez=du;eA=ds;eB=dv;break}}}else{ew=eh;ex=ei;ey=ej;ez=ek;eA=dn;eB=dx}dl=b[aV+(eA<<2)+2>>1]|0;dm=a[aV+(eA<<2)|0]|0;c[R>>2]=en;eo=dm;ep=eB;eq=dl;er=ez-en|0;es=ey>>>(en>>>0);et=ex;eu=ew;ev=en}}while(0);aV=ep&255;aT=es>>>(aV>>>0);aK=er-aV|0;c[R>>2]=ev+aV;c[I>>2]=eq&65535;aV=eo&255;if(eo<<24>>24==0){c[r>>2]=25;a$=cC;a0=al;a1=aK;a2=aT;a3=ao;a4=et;a5=ap;a6=eu;break}if((aV&32|0)!=0){c[R>>2]=-1;c[r>>2]=11;a$=cC;a0=al;a1=aK;a2=aT;a3=ao;a4=et;a5=ap;a6=eu;break}if((aV&64|0)==0){u=aV&15;c[S>>2]=u;c[r>>2]=21;aq=cC;ar=aK;as=aT;at=et;au=eu;av=u;aw=217;break}else{c[E>>2]=23720;c[r>>2]=29;a$=cC;a0=al;a1=aK;a2=aT;a3=ao;a4=et;a5=ap;a6=eu;break}}}while(0);if((aw|0)==73){aw=0;aT=c[C>>2]|0;if((aT&1024|0)==0){eC=bO;eD=bP}else{aK=c[I>>2]|0;u=aK>>>0>bO>>>0?bO:aK;if((u|0)==0){eE=bO;eF=bP;eG=aK}else{aV=c[D>>2]|0;do{if((aV|0)==0){eH=aT}else{bs=c[aV+16>>2]|0;if((bs|0)==0){eH=aT;break}aL=(c[aV+20>>2]|0)-aK|0;aW=c[aV+24>>2]|0;K2(bs+aL|0,bP|0,(aL+u|0)>>>0>aW>>>0?aW-aL|0:u)|0;eH=c[C>>2]|0}}while(0);if((eH&512|0)!=0){c[z>>2]=z4(c[z>>2]|0,bP,u)|0}aV=(c[I>>2]|0)-u|0;c[I>>2]=aV;eE=bO-u|0;eF=bP+u|0;eG=aV}if((eG|0)==0){eC=eE;eD=eF}else{ce=j;cf=bM;cg=bN;ch=eE;ci=eF;cj=ao;aw=281;break}}c[I>>2]=0;c[r>>2]=6;bQ=bM;bR=bN;bS=eC;bT=eD;aw=83}else if((aw|0)==217){aw=0;if((av|0)==0){eI=ar;eJ=as;eK=at;eL=au;eM=c[I>>2]|0}else{if(ar>>>0<av>>>0){aV=au;aK=at;aT=as;aL=ar;while(1){if((aK|0)==0){aM=aq;aN=al;aO=aL;aP=aT;aQ=0;aR=aV;aS=ao;break L17}aW=aK-1|0;bs=aV+1|0;dl=(d[aV]<<aL)+aT|0;dm=aL+8|0;if(dm>>>0<av>>>0){aV=bs;aK=aW;aT=dl;aL=dm}else{eN=bs;eO=aW;eP=dl;eQ=dm;break}}}else{eN=au;eO=at;eP=as;eQ=ar}aL=(c[I>>2]|0)+((1<<av)-1&eP)|0;c[I>>2]=aL;c[R>>2]=(c[R>>2]|0)+av;eI=eQ-av|0;eJ=eP>>>(av>>>0);eK=eO;eL=eN;eM=aL}c[T>>2]=eM;c[r>>2]=22;cH=aq;cI=eI;cJ=eJ;cK=eK;cL=eL;aw=224}do{if((aw|0)==83){aw=0;do{if((c[C>>2]&2048|0)==0){aL=c[D>>2]|0;if((aL|0)==0){eR=bS;eS=bT;break}c[aL+28>>2]=0;eR=bS;eS=bT}else{if((bS|0)==0){ce=j;cf=bQ;cg=bR;ch=0;ci=bT;cj=ao;aw=281;break L17}else{eT=0}while(1){eU=eT+1|0;aL=a[bT+eT|0]|0;aT=c[D>>2]|0;do{if((aT|0)!=0){aK=aT+28|0;if((c[aK>>2]|0)==0){break}aV=c[I>>2]|0;if(aV>>>0>=(c[aT+32>>2]|0)>>>0){break}c[I>>2]=aV+1;a[(c[aK>>2]|0)+aV|0]=aL}}while(0);eV=aL<<24>>24!=0;if(eV&eU>>>0<bS>>>0){eT=eU}else{break}}if((c[C>>2]&512|0)!=0){c[z>>2]=z4(c[z>>2]|0,bT,eU)|0}dx=bS-eU|0;dn=bT+eU|0;if(eV){ce=j;cf=bQ;cg=bR;ch=dx;ci=dn;cj=ao;aw=281;break L17}else{eR=dx;eS=dn}}}while(0);c[I>>2]=0;c[r>>2]=7;bU=bQ;bV=bR;bW=eR;bX=eS;aw=96}else if((aw|0)==224){aw=0;dn=(1<<c[P>>2])-1|0;dx=dn&cJ;aT=c[O>>2]|0;aV=a[aT+(dx<<2)+1|0]|0;aK=aV&255;if(aK>>>0>cI>>>0){u=cL;dm=cK;dl=cJ;aW=cI;while(1){if((dm|0)==0){aM=cH;aN=al;aO=aW;aP=dl;aQ=0;aR=u;aS=ao;break L17}bs=dm-1|0;b8=u+1|0;b9=(d[u]<<aW)+dl|0;aU=aW+8|0;aJ=dn&b9;dv=a[aT+(aJ<<2)+1|0]|0;ds=dv&255;if(ds>>>0>aU>>>0){u=b8;dm=bs;dl=b9;aW=aU}else{eW=b8;eX=bs;eY=b9;eZ=aU;e_=dv;e$=aJ;e0=ds;break}}}else{eW=cL;eX=cK;eY=cJ;eZ=cI;e_=aV;e$=dx;e0=aK}aW=a[aT+(e$<<2)|0]|0;dl=b[aT+(e$<<2)+2>>1]|0;dm=aW&255;if((dm&240|0)==0){u=dl&65535;dn=(1<<e0+dm)-1|0;dm=((eY&dn)>>>(e0>>>0))+u|0;ds=a[aT+(dm<<2)+1|0]|0;if(((ds&255)+e0|0)>>>0>eZ>>>0){aJ=eW;dv=eX;aU=eY;b9=eZ;while(1){if((dv|0)==0){aM=cH;aN=al;aO=b9;aP=aU;aQ=0;aR=aJ;aS=ao;break L17}bs=dv-1|0;b8=aJ+1|0;du=(d[aJ]<<b9)+aU|0;dq=b9+8|0;dr=((du&dn)>>>(e0>>>0))+u|0;dp=a[aT+(dr<<2)+1|0]|0;if(((dp&255)+e0|0)>>>0>dq>>>0){aJ=b8;dv=bs;aU=du;b9=dq}else{e1=b8;e2=bs;e3=du;e4=dq;e5=dr;e6=dp;break}}}else{e1=eW;e2=eX;e3=eY;e4=eZ;e5=dm;e6=ds}b9=b[aT+(e5<<2)+2>>1]|0;aU=a[aT+(e5<<2)|0]|0;dv=(c[R>>2]|0)+e0|0;c[R>>2]=dv;e7=aU;e8=e6;e9=b9;fa=e4-e0|0;fb=e3>>>(e0>>>0);fc=e2;fd=e1;fe=dv}else{e7=aW;e8=e_;e9=dl;fa=eZ;fb=eY;fc=eX;fd=eW;fe=c[R>>2]|0}dv=e8&255;b9=fb>>>(dv>>>0);aU=fa-dv|0;c[R>>2]=fe+dv;dv=e7&255;if((dv&64|0)==0){c[U>>2]=e9&65535;aJ=dv&15;c[S>>2]=aJ;c[r>>2]=23;ax=cH;ay=aU;az=b9;aA=fc;aB=fd;aC=aJ;aw=236;break}else{c[E>>2]=23528;c[r>>2]=29;a$=cH;a0=al;a1=aU;a2=b9;a3=ao;a4=fc;a5=ap;a6=fd;break}}}while(0);if((aw|0)==96){aw=0;do{if((c[C>>2]&4096|0)==0){b9=c[D>>2]|0;if((b9|0)==0){ff=bW;fg=bX;break}c[b9+36>>2]=0;ff=bW;fg=bX}else{if((bW|0)==0){ce=j;cf=bU;cg=bV;ch=0;ci=bX;cj=ao;aw=281;break L17}else{fh=0}while(1){fi=fh+1|0;b9=a[bX+fh|0]|0;aU=c[D>>2]|0;do{if((aU|0)!=0){aJ=aU+36|0;if((c[aJ>>2]|0)==0){break}dv=c[I>>2]|0;if(dv>>>0>=(c[aU+40>>2]|0)>>>0){break}c[I>>2]=dv+1;a[(c[aJ>>2]|0)+dv|0]=b9}}while(0);fj=b9<<24>>24!=0;if(fj&fi>>>0<bW>>>0){fh=fi}else{break}}if((c[C>>2]&512|0)!=0){c[z>>2]=z4(c[z>>2]|0,bX,fi)|0}dl=bW-fi|0;aW=bX+fi|0;if(fj){ce=j;cf=bU;cg=bV;ch=dl;ci=aW;cj=ao;aw=281;break L17}else{ff=dl;fg=aW}}}while(0);c[r>>2]=8;bY=bU;bZ=bV;b_=ff;b$=fg;aw=109}else if((aw|0)==236){aw=0;if((aC|0)==0){fk=ay;fl=az;fm=aA;fn=aB}else{if(ay>>>0<aC>>>0){aW=aB;dl=aA;aT=az;ds=ay;while(1){if((dl|0)==0){aM=ax;aN=al;aO=ds;aP=aT;aQ=0;aR=aW;aS=ao;break L17}dm=dl-1|0;aU=aW+1|0;dv=(d[aW]<<ds)+aT|0;aJ=ds+8|0;if(aJ>>>0<aC>>>0){aW=aU;dl=dm;aT=dv;ds=aJ}else{fo=aU;fp=dm;fq=dv;fr=aJ;break}}}else{fo=aB;fp=aA;fq=az;fr=ay}c[U>>2]=(c[U>>2]|0)+((1<<aC)-1&fq);c[R>>2]=(c[R>>2]|0)+aC;fk=fr-aC|0;fl=fq>>>(aC>>>0);fm=fp;fn=fo}c[r>>2]=24;cM=ax;cN=fk;cO=fl;cP=fm;cQ=fn;aw=242}L373:do{if((aw|0)==109){aw=0;ds=c[C>>2]|0;do{if((ds&512|0)==0){fs=bY;ft=bZ;fu=b_;fv=b$}else{if(bY>>>0<16>>>0){aT=b$;dl=b_;aW=bZ;aJ=bY;while(1){if((dl|0)==0){aM=j;aN=al;aO=aJ;aP=aW;aQ=0;aR=aT;aS=ao;break L17}dv=dl-1|0;dm=aT+1|0;aU=(d[aT]<<aJ)+aW|0;u=aJ+8|0;if(u>>>0<16>>>0){aT=dm;dl=dv;aW=aU;aJ=u}else{fw=dm;fx=dv;fy=aU;fz=u;break}}}else{fw=b$;fx=b_;fy=bZ;fz=bY}if((fy|0)==(c[z>>2]&65535|0)){fs=0;ft=0;fu=fx;fv=fw;break}c[E>>2]=17224;c[r>>2]=29;a$=j;a0=al;a1=fz;a2=fy;a3=ao;a4=fx;a5=ap;a6=fw;break L373}}while(0);aJ=c[D>>2]|0;if((aJ|0)!=0){c[aJ+44>>2]=ds>>>9&1;c[(c[D>>2]|0)+48>>2]=1}aJ=z4(0,0,0)|0;c[z>>2]=aJ;c[H>>2]=aJ;c[r>>2]=11;a$=j;a0=al;a1=fs;a2=ft;a3=ao;a4=fu;a5=ap;a6=fv}else if((aw|0)==242){aw=0;if((ao|0)==0){ce=cM;cf=cN;cg=cO;ch=cP;ci=cQ;cj=0;aw=281;break L17}aJ=al-ao|0;aW=c[U>>2]|0;if(aW>>>0>aJ>>>0){dl=aW-aJ|0;do{if(dl>>>0>(c[V>>2]|0)>>>0){if((c[W>>2]|0)==0){break}c[E>>2]=23304;c[r>>2]=29;a$=cM;a0=al;a1=cN;a2=cO;a3=ao;a4=cP;a5=ap;a6=cQ;break L373}}while(0);ds=c[X>>2]|0;if(dl>>>0>ds>>>0){aJ=dl-ds|0;fA=(c[Y>>2]|0)+((c[Z>>2]|0)-aJ)|0;fB=aJ}else{fA=(c[Y>>2]|0)+(ds-dl)|0;fB=dl}ds=c[I>>2]|0;fC=fA;fD=fB>>>0>ds>>>0?ds:fB;fE=ds}else{ds=c[I>>2]|0;fC=ap+(-aW|0)|0;fD=ds;fE=ds}ds=fD>>>0>ao>>>0?ao:fD;c[I>>2]=fE-ds;aJ=~ao;aT=~fD;b9=aJ>>>0>aT>>>0?aJ:aT;aT=fC;aJ=ds;u=ap;while(1){a[u]=a[aT]|0;aU=aJ-1|0;if((aU|0)==0){break}else{aT=aT+1|0;aJ=aU;u=u+1|0}}u=ao-ds|0;aJ=ap+~b9|0;if((c[I>>2]|0)!=0){a$=cM;a0=al;a1=cN;a2=cO;a3=u;a4=cP;a5=aJ;a6=cQ;break}c[r>>2]=20;a$=cM;a0=al;a1=cN;a2=cO;a3=u;a4=cP;a5=aJ;a6=cQ}}while(0);j=a$;al=a0;am=a1;an=a2;ao=a3;p=a4;ap=a5;s=a6;t=c[r>>2]|0}if((aw|0)==122){c[m>>2]=ap;c[l>>2]=ao;c[o>>2]=bi;c[n>>2]=bh;c[w>>2]=bg;c[x>>2]=bf;k=2;i=h;return k|0}else if((aw|0)==133){aM=j;aN=al;aO=dk-3|0;aP=dj>>>3;aQ=di;aR=dh;aS=ao}else if((aw|0)==280){c[r>>2]=28;aM=1;aN=c0;aO=c9;aP=da;aQ=db;aR=dc;aS=ao}else if((aw|0)==281){aM=ce;aN=al;aO=cf;aP=cg;aQ=ch;aR=ci;aS=cj}else if((aw|0)==297){k=-4;i=h;return k|0}else if((aw|0)==303){i=h;return k|0}c[m>>2]=ap;c[l>>2]=aS;c[o>>2]=aR;c[n>>2]=aQ;c[w>>2]=aP;c[x>>2]=aO;aO=c[l>>2]|0;do{if((c[Z>>2]|0)==0){if((aN|0)==(aO|0)){fF=aN;break}aP=c[r>>2]|0;if(aP>>>0>=29>>>0){fF=aO;break}if(aP>>>0>25>>>0&(g|0)==4){fF=aO}else{aw=286}}else{aw=286}}while(0);do{if((aw|0)==286){if((Aa(f,c[m>>2]|0,aN-aO|0)|0)==0){fF=c[l>>2]|0;break}c[r>>2]=30;k=-4;i=h;return k|0}}while(0);l=c[n>>2]|0;n=aN-fF|0;aO=f+8|0;c[aO>>2]=v-l+(c[aO>>2]|0);c[_>>2]=(c[_>>2]|0)+n;c[$>>2]=(c[$>>2]|0)+n;$=(aN|0)==(fF|0);if(!((c[y>>2]|0)==0|$)){y=c[z>>2]|0;fF=(c[m>>2]|0)+(-n|0)|0;if((c[C>>2]|0)==0){fG=z3(y,fF,n)|0}else{fG=z4(y,fF,n)|0}c[z>>2]=fG;c[H>>2]=fG}fG=c[r>>2]|0;if((fG|0)==19){fH=256}else{fH=(fG|0)==14?256:0}c[f+44>>2]=((c[L>>2]|0)!=0?64:0)+(c[x>>2]|0)+((fG|0)==11?128:0)+fH;k=((v|0)==(l|0)&$|(g|0)==4)&(aM|0)==0?-5:aM;i=h;return k|0}function Aa(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;e=c[a+28>>2]|0;f=e+52|0;g=c[f>>2]|0;do{if((g|0)==0){h=hd[c[a+32>>2]&127](c[a+40>>2]|0,1<<c[e+36>>2],1)|0;c[f>>2]=h;if((h|0)==0){i=1}else{j=h;break}return i|0}else{j=g}}while(0);g=e+40|0;a=c[g>>2]|0;if((a|0)==0){h=1<<c[e+36>>2];c[g>>2]=h;c[e+48>>2]=0;c[e+44>>2]=0;k=h}else{k=a}if(k>>>0<=d>>>0){K2(j|0,b+(-k|0)|0,k)|0;c[e+48>>2]=0;c[e+44>>2]=c[g>>2];i=0;return i|0}a=e+48|0;h=c[a>>2]|0;l=k-h|0;k=l>>>0>d>>>0?d:l;K2(j+h|0,b+(-d|0)|0,k)|0;h=d-k|0;if((k|0)!=(d|0)){K2(c[f>>2]|0,b+(-h|0)|0,h)|0;c[a>>2]=h;c[e+44>>2]=c[g>>2];i=0;return i|0}h=(c[a>>2]|0)+d|0;c[a>>2]=h;b=c[g>>2]|0;if((h|0)==(b|0)){c[a>>2]=0}a=e+44|0;e=c[a>>2]|0;if(e>>>0>=b>>>0){i=0;return i|0}c[a>>2]=e+d;i=0;return i|0}function Ab(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0;if((a|0)==0){b=-2;return b|0}d=a+28|0;e=c[d>>2]|0;if((e|0)==0){b=-2;return b|0}f=a+36|0;g=c[f>>2]|0;if((g|0)==0){b=-2;return b|0}h=c[e+52>>2]|0;i=a+40|0;if((h|0)==0){j=g;k=e}else{g0[g&511](c[i>>2]|0,h);j=c[f>>2]|0;k=c[d>>2]|0}g0[j&511](c[i>>2]|0,k);c[d>>2]=0;b=0;return b|0}function Ac(d,f,g,h,j,k){d=d|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0;l=i;i=i+32|0;m=l|0;n=i;i=i+32|0;K1(m|0,0,32)|0;o=(g|0)==0;if(!o){p=0;do{q=m+(e[f+(p<<1)>>1]<<1)|0;b[q>>1]=(b[q>>1]|0)+1;p=p+1|0;}while(p>>>0<g>>>0)}p=c[j>>2]|0;q=15;while(1){if((q|0)==0){r=7;break}if((b[m+(q<<1)>>1]|0)==0){q=q-1|0}else{break}}if((r|0)==7){s=c[h>>2]|0;c[h>>2]=s+4;a[s|0]=64;a[s+1|0]=1;b[s+2>>1]=0;s=c[h>>2]|0;c[h>>2]=s+4;a[s|0]=64;a[s+1|0]=1;b[s+2>>1]=0;c[j>>2]=1;t=0;i=l;return t|0}s=p>>>0>q>>>0?q:p;p=1;while(1){if(p>>>0>=q>>>0){break}if((b[m+(p<<1)>>1]|0)==0){p=p+1|0}else{break}}u=s>>>0<p>>>0?p:s;s=1;v=1;while(1){if(v>>>0>=16>>>0){break}w=(s<<1)-(e[m+(v<<1)>>1]|0)|0;if((w|0)<0){t=-1;r=50;break}else{s=w;v=v+1|0}}if((r|0)==50){i=l;return t|0}do{if((s|0)>0){if((d|0)!=0&(q|0)==1){break}else{t=-1}i=l;return t|0}}while(0);b[n+2>>1]=0;s=b[m+2>>1]|0;b[n+4>>1]=s;v=(b[m+4>>1]|0)+s&65535;b[n+6>>1]=v;s=(b[m+6>>1]|0)+v&65535;b[n+8>>1]=s;v=(b[m+8>>1]|0)+s&65535;b[n+10>>1]=v;s=(b[m+10>>1]|0)+v&65535;b[n+12>>1]=s;v=(b[m+12>>1]|0)+s&65535;b[n+14>>1]=v;s=(b[m+14>>1]|0)+v&65535;b[n+16>>1]=s;v=(b[m+16>>1]|0)+s&65535;b[n+18>>1]=v;s=(b[m+18>>1]|0)+v&65535;b[n+20>>1]=s;v=(b[m+20>>1]|0)+s&65535;b[n+22>>1]=v;s=(b[m+22>>1]|0)+v&65535;b[n+24>>1]=s;v=(b[m+24>>1]|0)+s&65535;b[n+26>>1]=v;s=(b[m+26>>1]|0)+v&65535;b[n+28>>1]=s;b[n+30>>1]=(b[m+28>>1]|0)+s;if(!o){o=0;do{s=b[f+(o<<1)>>1]|0;if(s<<16>>16!=0){v=n+((s&65535)<<1)|0;s=b[v>>1]|0;b[v>>1]=s+1;b[k+((s&65535)<<1)>>1]=o}o=o+1|0;}while(o>>>0<g>>>0)}do{if((d|0)==0){x=0;y=1<<u;z=19;A=k;B=k;C=0}else if((d|0)==1){g=1<<u;if(g>>>0>852>>>0){t=1}else{x=1;y=g;z=256;A=1326;B=1390;C=0;break}i=l;return t|0}else{g=1<<u;o=(d|0)==2;if(o&g>>>0>592>>>0){t=1}else{x=0;y=g;z=-1;A=1968;B=2032;C=o;break}i=l;return t|0}}while(0);d=y-1|0;o=u&255;g=c[h>>2]|0;n=-1;s=0;v=y;y=0;w=u;D=0;E=p;L40:while(1){p=1<<w;F=s;G=D;H=E;while(1){I=H-y|0;J=I&255;K=b[k+(G<<1)>>1]|0;L=K&65535;do{if((L|0)<(z|0)){M=0;N=K}else{if((L|0)<=(z|0)){M=96;N=0;break}M=b[A+(L<<1)>>1]&255;N=b[B+(L<<1)>>1]|0}}while(0);L=1<<I;K=F>>>(y>>>0);O=p;while(1){P=O-L|0;Q=P+K|0;a[g+(Q<<2)|0]=M;a[g+(Q<<2)+1|0]=J;b[g+(Q<<2)+2>>1]=N;if((O|0)==(L|0)){break}else{O=P}}O=1<<H-1;while(1){if((O&F|0)==0){break}else{O=O>>>1}}if((O|0)==0){R=0}else{R=(O-1&F)+O|0}S=G+1|0;L=m+(H<<1)|0;K=(b[L>>1]|0)-1&65535;b[L>>1]=K;if(K<<16>>16==0){if((H|0)==(q|0)){break L40}T=e[f+(e[k+(S<<1)>>1]<<1)>>1]|0}else{T=H}if(T>>>0<=u>>>0){F=R;G=S;H=T;continue}U=R&d;if((U|0)==(n|0)){F=R;G=S;H=T}else{break}}H=(y|0)==0?u:y;G=g+(p<<2)|0;F=T-H|0;L63:do{if(T>>>0<q>>>0){K=F;L=1<<F;I=T;while(1){P=L-(e[m+(I<<1)>>1]|0)|0;if((P|0)<1){V=K;break L63}Q=K+1|0;W=Q+H|0;if(W>>>0<q>>>0){K=Q;L=P<<1;I=W}else{V=Q;break}}}else{V=F}}while(0);F=(1<<V)+v|0;if(x&F>>>0>852>>>0|C&F>>>0>592>>>0){t=1;r=54;break}a[(c[h>>2]|0)+(U<<2)|0]=V;a[(c[h>>2]|0)+(U<<2)+1|0]=o;p=c[h>>2]|0;b[p+(U<<2)+2>>1]=(G-p|0)>>>2;g=G;n=U;s=R;v=F;y=H;w=V;D=S;E=T}if((r|0)==54){i=l;return t|0}if((R|0)!=0){a[g+(R<<2)|0]=64;a[g+(R<<2)+1|0]=J;b[g+(R<<2)+2>>1]=0}c[h>>2]=(c[h>>2]|0)+(v<<2);c[j>>2]=u;t=0;i=l;return t|0}function Ad(a,b,c){a=a|0;b=b|0;c=c|0;return KM(ag(c,b)|0)|0}function Ae(a,b){a=a|0;b=b|0;KN(b);return}function Af(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=i;i=i+8|0;g=f|0;c0(1,g|0);h=c[g>>2]|0;if((h|0)==0){dK(25344,25264,9,26072);return 0}else{d6(3553,h|0);dX(3553,10241,9987);dX(3553,10240,9729);gv(3553,0,d|0,a|0,b|0,0,d|0,5121,e|0);eK(3553);d6(3553,0);i=f;return c[g>>2]|0}return 0}function Ag(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,z=0,A=0,B=0,C=0,D=0,E=0;e=i;i=i+72|0;f=1;g=0;h=i;i=i+168|0;c[h>>2]=0;while(1)switch(f|0){case 1:j=e|0;k=e+8|0;l=e+16|0;m=e+24|0;n=e+32|0;o=e+40|0;p=e+48|0;q=e+64|0;if((b|0)!=0&(d|0)>8){f=3;break}else{f=2;break};case 2:bb(6,25152,25224,30,26088);if((x|0)!=0&(y|0)!=0){g=K7(c[x>>2]|0,h)|0;if((g|0)>0){f=-1;break}else return}x=y=0;;case 3:r=aE(42,b|0,0,8)|0;if((x|0)!=0&(y|0)!=0){g=K7(c[x>>2]|0,h)|0;if((g|0)>0){f=-1;break}else return}x=y=0;if((r|0)==0){f=5;break}else{f=4;break};case 4:bb(6,22048,25224,31,26088);if((x|0)!=0&(y|0)!=0){g=K7(c[x>>2]|0,h)|0;if((g|0)>0){f=-1;break}else return}x=y=0;;case 5:s=a2(4,20408,0,0,0)|0;if((x|0)!=0&(y|0)!=0){g=K7(c[x>>2]|0,h)|0;if((g|0)>0){f=-1;break}else return}x=y=0;c[n>>2]=s;if((s|0)==0){f=6;break}else{f=7;break};case 6:bb(6,18640,25224,34,26088);if((x|0)!=0&(y|0)!=0){g=K7(c[x>>2]|0,h)|0;if((g|0)>0){f=-1;break}else return}x=y=0;;case 7:t=au(50,s|0)|0;if((x|0)!=0&(y|0)!=0){g=K7(c[x>>2]|0,h)|0;if((g|0)>0){f=-1;break}else return}x=y=0;c[o>>2]=t;if((t|0)==0){f=8;break}else{f=9;break};case 8:bb(6,17200,25224,36,26088);if((x|0)!=0&(y|0)!=0){g=K7(c[x>>2]|0,h)|0;if((g|0)>0){f=-1;break}else return}x=y=0;;case 9:c[p>>2]=b;c[p+4>>2]=d;c[p+8>>2]=0;a4(112,s|0,p|0,48);if((x|0)!=0&(y|0)!=0){g=K7(c[x>>2]|0,h)|0;if((g|0)>0){f=-1;break}else return}x=y=0;r=aE(22,s|0,204,156)|0;if((x|0)!=0&(y|0)!=0){g=K7(c[x>>2]|0,h)|0;if((g|0)>0){f=-1;break}else return}x=y=0;u=K6(r|0,f,h)|0;f=27;break;case 27:if((u|0)==0){f=11;break}else{f=10;break};case 10:bb(6,15840,25224,43,26088);if((x|0)!=0&(y|0)!=0){g=K7(c[x>>2]|0,h)|0;if((g|0)>0){f=-1;break}else return}x=y=0;;case 11:ar(118,s|0,t|0);if((x|0)!=0&(y|0)!=0){g=K7(c[x>>2]|0,h)|0;if((g|0)>0){f=-1;break}else return}x=y=0;aM(4,s|0,t|0,j|0,k|0,l|0,m|0,0,0,0)|0;if((x|0)!=0&(y|0)!=0){g=K7(c[x>>2]|0,h)|0;if((g|0)>0){f=-1;break}else return}x=y=0;r=aE(32,s|0,t|0,16)|0;if((x|0)!=0&(y|0)!=0){g=K7(c[x>>2]|0,h)|0;if((g|0)>0){f=-1;break}else return}x=y=0;if((r|0)==0){f=13;break}else{f=12;break};case 12:aq(490,s|0);if((x|0)!=0&(y|0)!=0){g=K7(c[x>>2]|0,h)|0;if((g|0)>0){f=-1;break}else return}x=y=0;f=13;break;case 13:r=c[m>>2]|0;if((r|0)==0){f=14;break}else{v=r;f=16;break};case 14:r=c[l>>2]|0;if((r|0)<8){f=15;break}else{w=r;f=22;break};case 15:aq(378,s|0);if((x|0)!=0&(y|0)!=0){g=K7(c[x>>2]|0,h)|0;if((g|0)>0){f=-1;break}else return}x=y=0;v=c[m>>2]|0;f=16;break;case 16:if((v|0)==3){f=17;break}else{z=v;f=18;break};case 17:aq(392,s|0);if((x|0)!=0&(y|0)!=0){g=K7(c[x>>2]|0,h)|0;if((g|0)>0){f=-1;break}else return}x=y=0;z=c[m>>2]|0;f=18;break;case 18:if((z-2|0)>>>0<2>>>0){f=19;break}else{f=20;break};case 19:a4(152,s|0,255,1);if((x|0)!=0&(y|0)!=0){g=K7(c[x>>2]|0,h)|0;if((g|0)>0){f=-1;break}else return}x=y=0;f=20;break;case 20:r=c[l>>2]|0;if((r|0)<8){f=21;break}else{w=r;f=22;break};case 21:aq(382,s|0);if((x|0)!=0&(y|0)!=0){g=K7(c[x>>2]|0,h)|0;if((g|0)>0){f=-1;break}else return}x=y=0;f=24;break;case 22:if((w|0)==16){f=23;break}else{f=24;break};case 23:aq(140,s|0);if((x|0)!=0&(y|0)!=0){g=K7(c[x>>2]|0,h)|0;if((g|0)>0){f=-1;break}else return}x=y=0;f=24;break;case 24:ar(340,s|0,t|0);if((x|0)!=0&(y|0)!=0){g=K7(c[x>>2]|0,h)|0;if((g|0)>0){f=-1;break}else return}x=y=0;r=aY(50,s|0,t|0)|0;if((x|0)!=0&(y|0)!=0){g=K7(c[x>>2]|0,h)|0;if((g|0)>0){f=-1;break}else return}x=y=0;A=r&255;B=c[j>>2]|0;C=c[k>>2]|0;r=c[n>>2]|0;D=c[o>>2]|0;bb(146,q|0,r|0,D|0,C|0);if((x|0)!=0&(y|0)!=0){g=K7(c[x>>2]|0,h)|0;if((g|0)>0){f=-1;break}else return}x=y=0;ar(62,r|0,D|0);if((x|0)!=0&(y|0)!=0){g=K7(c[x>>2]|0,h)|0;if((g|0)>0){f=-1;break}else return}x=y=0;a4(8,n|0,o|0,0);if((x|0)!=0&(y|0)!=0){g=K7(c[x>>2]|0,h)|0;if((g|0)>0){f=-1;break}else return}x=y=0;E=c[q+4>>2]|0;if((A|0)==0|(A|0)==6|(A|0)==4){f=26;break}else{f=25;break};case 25:bb(6,13752,25224,133,26120);if((x|0)!=0&(y|0)!=0){g=K7(c[x>>2]|0,h)|0;if((g|0)>0){f=-1;break}else return}x=y=0;;case 26:A=c[q>>2]|0;c[a>>2]=B;c[a+4>>2]=C;c[a+8>>2]=E;c[a+12>>2]=6408;c[a+16>>2]=A;i=e;return;case-1:if((g|0)==9){u=y;f=27}x=y=0;break}}function Ah(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;e=Ci(a)|0;a=e+8|0;K2(b|0,(c[e>>2]|0)+(c[a>>2]|0)|0,d)|0;c[a>>2]=(c[a>>2]|0)+d;return}function Ai(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0;f=i;g=CM(b,d)|0;d=ag(g,e)|0;if((g|0)==0){dK(13304,25224,113,26048)}h=KM(d)|0;if((h|0)==0){dK(25896,25224,116,26048)}j=i;i=i+(e*4|0)|0;i=i+7&-8;if((e|0)!=0){k=e-1|0;l=0;do{c[j+(k-l<<2)>>2]=h+(ag(l,g)|0);l=l+1|0;}while(l>>>0<e>>>0)}BN(b,j);c[a>>2]=h;c[a+4>>2]=d;i=f;return}function Aj(a){a=a|0;if((a|0)==0){dK(14736,25224,61,26024)}else{KN(c[a+16>>2]|0);return}}function Ak(a,b){a=a|0;b=b|0;var d=0,e=0;do{if((a|0)!=0){d=c[a+168>>2]|0;if((d|0)==0){break}g0[d&511](a,b)}}while(0);d=c[t>>2]|0;co(d|0,15816,(e=i,i=i+8|0,c[e>>2]=(b|0)!=0?b:14720,e)|0)|0;i=e;d7(10,d|0)|0;Ay(a,1)}function Al(b,c,d,e){b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;if(!((b|0)!=0&d>>>0<c>>>0)){f=d;return f|0}do{if((e|0)==0){g=d}else{h=c-1|0;i=a[e]|0;if(i<<24>>24!=0&h>>>0>d>>>0){j=d;k=e;l=i}else{g=d;break}while(1){i=k+1|0;m=j+1|0;a[b+j|0]=l;n=a[i]|0;if(n<<24>>24!=0&m>>>0<h>>>0){j=m;k=i;l=n}else{g=m;break}}}}while(0);a[b+g|0]=0;f=g;return f|0}function Am(b,c,d,e){b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;f=c-1|0;a[f]=0;if(f>>>0<=b>>>0){g=f;return g|0}if((d|0)==5){c=f;h=e;i=0;j=1;k=0;while(1){if(!((h|0)!=0|(i|0)<(j|0))){g=c;l=22;break}m=(h>>>0)%10|0;if((k|m|0)==0){n=0;o=c}else{p=c-1|0;a[p]=a[1256+m|0]|0;n=1;o=p}p=(h>>>0)/10|0;m=i+1|0;do{if((m|0)==5&o>>>0>b>>>0){if((n|0)!=0){q=o-1|0;a[q]=46;r=n;s=p;t=q;break}if(h>>>0>=10>>>0){r=0;s=p;t=o;break}q=o-1|0;a[q]=48;r=0;s=0;t=q}else{r=n;s=p;t=o}}while(0);if(t>>>0>b>>>0){c=t;h=s;i=m;j=5;k=r}else{g=t;l=23;break}}if((l|0)==22){return g|0}else if((l|0)==23){return g|0}}else if((d|0)==2){t=f;r=e;k=0;j=1;while(1){if(!((r|0)!=0|(k|0)<(j|0))){g=t;l=24;break}i=t-1|0;a[i]=a[1256+((r>>>0)%10|0)|0]|0;if(i>>>0>b>>>0){t=i;r=(r>>>0)/10|0;k=k+1|0;j=2}else{g=i;l=25;break}}if((l|0)==24){return g|0}else if((l|0)==25){return g|0}}else{j=f;f=e;e=0;k=1;while(1){if(!((f|0)!=0|(e|0)<(k|0))){g=j;l=26;break}if((d|0)==1){r=j-1|0;a[r]=a[1256+((f>>>0)%10|0)|0]|0;u=k;v=(f>>>0)/10|0;w=r}else if((d|0)==4){x=2;l=18}else if((d|0)==3){x=k;l=18}else{u=k;v=0;w=j}if((l|0)==18){l=0;r=j-1|0;a[r]=a[1256+(f&15)|0]|0;u=x;v=f>>>4;w=r}if(w>>>0>b>>>0){j=w;f=v;e=e+1|0;k=u}else{g=w;l=27;break}}if((l|0)==26){return g|0}else if((l|0)==27){return g|0}}return 0}function An(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;do{if((b|0)==0){f=0}else{L3:do{if((a[d]|0)==35){g=1;while(1){if((g|0)>=15){h=g;break L3}if((a[d+g|0]|0)==32){h=g;break}else{g=g+1|0}}}else{h=0}}while(0);g=c[b+172>>2]|0;if((g|0)==0){f=h;break}g0[g&511](b,d+h|0);i=e;return}}while(0);h=c[t>>2]|0;co(h|0,18592,(b=i,i=i+8|0,c[b>>2]=d+f,b)|0)|0;i=b;d7(10,h|0)|0;i=e;return}function Ao(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;f=(c[b+208>>2]&32768|0)!=0;if((c[b+212>>2]&1048576|0)==0){if(!f){Ak(b,d)}if((c[b+376>>2]|0)==0){Ak(b,d)}else{Aq(b,d)}}do{if(f){if((c[b+376>>2]|0)==0){break}Ap(b,d);i=e;return}}while(0);do{if((b|0)==0){g=0}else{L17:do{if((a[d]|0)==35){f=1;while(1){if((f|0)>=15){h=f;break L17}if((a[d+f|0]|0)==32){h=f;break}else{f=f+1|0}}}else{h=0}}while(0);f=c[b+172>>2]|0;if((f|0)==0){g=h;break}g0[f&511](b,d+h|0);i=e;return}}while(0);h=c[t>>2]|0;co(h|0,18592,(b=i,i=i+8|0,c[b>>2]=d+g,b)|0)|0;i=b;d7(10,h|0)|0;i=e;return}function Ap(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;e=i;i=i+216|0;f=e|0;if((b|0)==0){g=c[t>>2]|0;co(g|0,18592,(h=i,i=i+8|0,c[h>>2]=d,h)|0)|0;i=h;d7(10,g|0)|0;i=e;return}g=f|0;At(c[b+376>>2]|0,g,d);L5:do{if((a[g]|0)==35){d=1;while(1){if((d|0)>=15){j=d;break L5}if((a[f+d|0]|0)==32){j=d;break}else{d=d+1|0}}}else{j=0}}while(0);g=c[b+172>>2]|0;d=f+j|0;if((g|0)==0){j=c[t>>2]|0;co(j|0,18592,(h=i,i=i+8|0,c[h>>2]=d,h)|0)|0;i=h;d7(10,j|0)|0;i=e;return}else{g0[g&511](b,d);i=e;return}}function Aq(a,b){a=a|0;b=b|0;var d=0,e=0;d=i;i=i+216|0;if((a|0)==0){Ak(0,b)}else{e=d|0;At(c[a+376>>2]|0,e,b);Ak(a,e)}}function Ar(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;if((c[b+212>>2]&2097152|0)==0){Ak(b,d)}L4:do{if((a[d]|0)==35){f=1;while(1){if((f|0)>=15){g=f;break L4}if((a[d+f|0]|0)==32){g=f;break}else{f=f+1|0}}}else{g=0}}while(0);f=c[b+172>>2]|0;h=d+g|0;if((f|0)==0){g=c[t>>2]|0;co(g|0,18592,(d=i,i=i+8|0,c[d>>2]=h,d)|0)|0;i=d;d7(10,g|0)|0;i=e;return}else{g0[f&511](b,h);i=e;return}}function As(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;if((c[b+212>>2]&4194304|0)==0){Ak(b,d)}L4:do{if((a[d]|0)==35){f=1;while(1){if((f|0)>=15){g=f;break L4}if((a[d+f|0]|0)==32){g=f;break}else{f=f+1|0}}}else{g=0}}while(0);f=c[b+172>>2]|0;h=d+g|0;if((f|0)==0){g=c[t>>2]|0;co(g|0,18592,(d=i,i=i+8|0,c[d>>2]=h,d)|0)|0;i=d;d7(10,g|0)|0;i=e;return}else{g0[f&511](b,h);i=e;return}}function At(b,c,d){b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0;e=b>>>24;if((e-65|0)>>>0>57>>>0|(e-91|0)>>>0<6>>>0){a[c]=91;a[c+1|0]=a[1312+(b>>>28)|0]|0;a[c+2|0]=a[1312+(e&15)|0]|0;a[c+3|0]=93;f=4}else{a[c]=e;f=1}e=b>>>16;g=e&255;if((g-65|0)>>>0>57>>>0|(g-91|0)>>>0<6>>>0){a[c+f|0]=91;a[c+(f+1)|0]=a[1312+(b>>>20&15)|0]|0;a[c+(f|2)|0]=a[1312+(e&15)|0]|0;a[c+(f+3)|0]=93;h=f+4|0}else{a[c+f|0]=e;h=f+1|0}f=b>>>8;e=f&255;if((e-65|0)>>>0>57>>>0|(e-91|0)>>>0<6>>>0){a[c+h|0]=91;a[c+(h+1)|0]=a[1312+(b>>>12&15)|0]|0;a[c+(h+2)|0]=a[1312+(f&15)|0]|0;a[c+(h+3)|0]=93;i=h+4|0}else{a[c+h|0]=f;i=h+1|0}h=b&255;if((h-65|0)>>>0>57>>>0|(h-91|0)>>>0<6>>>0){a[c+i|0]=91;a[c+(i+1)|0]=a[1312+(b>>>4&15)|0]|0;a[c+(i+2)|0]=a[1312+(b&15)|0]|0;a[c+(i+3)|0]=93;j=i+4|0}else{a[c+i|0]=b;j=i+1|0}if((d|0)==0){a[c+j|0]=0;return}a[c+j|0]=58;a[c+(j+1)|0]=32;i=j+2|0;j=0;while(1){b=a[d+j|0]|0;if(b<<24>>24==0){k=i;break}h=j+1|0;f=i+1|0;a[c+i|0]=b;if((h|0)<195){i=f;j=h}else{k=f;break}}a[c+k|0]=0;return}function Au(a,b){a=a|0;b=b|0;if((c[a+212>>2]&1048576|0)==0){Aq(a,b)}else{Ap(a,b);return}}function Av(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0;f=i;if((c[b+208>>2]&32768|0)!=0){if((e|0)<2){Ap(b,d);i=f;return}if((c[b+212>>2]&1048576|0)==0){Aq(b,d)}Ap(b,d);i=f;return}g=c[b+212>>2]|0;if((e|0)<1){if((g&2097152|0)==0){Ak(b,d)}L17:do{if((a[d]|0)==35){e=1;while(1){if((e|0)>=15){h=e;break L17}if((a[d+e|0]|0)==32){h=e;break}else{e=e+1|0}}}else{h=0}}while(0);e=c[b+172>>2]|0;j=d+h|0;if((e|0)==0){h=c[t>>2]|0;co(h|0,18592,(k=i,i=i+8|0,c[k>>2]=j,k)|0)|0;i=k;d7(10,h|0)|0;i=f;return}else{g0[e&511](b,j);i=f;return}}else{if((g&4194304|0)==0){Ak(b,d)}L31:do{if((a[d]|0)==35){g=1;while(1){if((g|0)>=15){l=g;break L31}if((a[d+g|0]|0)==32){l=g;break}else{g=g+1|0}}}else{l=0}}while(0);g=c[b+172>>2]|0;j=d+l|0;if((g|0)==0){l=c[t>>2]|0;co(l|0,18592,(k=i,i=i+8|0,c[k>>2]=j,k)|0)|0;i=k;d7(10,l|0)|0;i=f;return}else{g0[g&511](b,j);i=f;return}}}function Aw(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;e=i;if((a|0)==0){f=0;i=e;return f|0}g=a+160|0;h=c[g>>2]|0;j=a+164|0;do{if((h|0)==0){c[j>>2]=0;if(d>>>0<157>>>0){k=a|0;c[g>>2]=k;l=k;break}k=AH(a,d)|0;m=k;c[g>>2]=m;if((k|0)==0){f=0;i=e;return f|0}else{c[j>>2]=d;l=m;break}}else{m=c[j>>2]|0;do{if((m|0)==0){if((h|0)==(a|0)){n=156;break}Ak(a,25056);return 0}else{n=m}}while(0);if((n|0)==(d|0)){l=h;break}m=c[a+172>>2]|0;if((m|0)==0){k=c[t>>2]|0;co(k|0,18592,(o=i,i=i+8|0,c[o>>2]=21960,o)|0)|0;i=o;d7(10,k|0)|0;f=0;i=e;return f|0}else{g0[m&511](a,21960);f=0;i=e;return f|0}}}while(0);c[a+156>>2]=b;f=l;i=e;return f|0}function Ax(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;b=i;i=i+160|0;d=1;e=0;f=i;i=i+168|0;c[f>>2]=0;while(1)switch(d|0){case 1:g=b|0;if((a|0)==0){d=7;break}else{d=2;break};case 2:h=a+160|0;j=c[h>>2]|0;k=a+164|0;if((j|0)==0){d=6;break}else{d=3;break};case 3:if((c[k>>2]|0)==0|(j|0)==(a|0)){d=6;break}else{d=4;break};case 4:l=K6(g|0,d,f)|0;d=8;break;case 8:if((l|0)==0){d=5;break}else{d=6;break};case 5:c[h>>2]=g;c[k>>2]=0;c[a+156>>2]=204;ar(350,a|0,j|0);if((x|0)!=0&(y|0)!=0){e=K7(c[x>>2]|0,f)|0;if((e|0)>0){d=-1;break}else return}x=y=0;d=6;break;case 6:c[k>>2]=0;c[h>>2]=0;c[a+156>>2]=0;d=7;break;case 7:i=b;return;case-1:if((e|0)==4){l=y;d=8}x=y=0;break}}function Ay(a,b){a=a|0;b=b|0;var d=0,e=0;if((a|0)==0){ct()}d=c[a+156>>2]|0;if((d|0)==0){ct()}e=c[a+160>>2]|0;if((e|0)==0){ct()}g0[d&511](e|0,b);ct()}function Az(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;if((a|0)==0){return}c[a+176>>2]=b;c[a+168>>2]=d;c[a+172>>2]=e;return}function AA(a){a=a|0;var b=0,d=0,e=0;b=i;i=i+904|0;d=b|0;if((a|0)==0){i=b;return}e=a;K2(d|0,e|0,900)|0;K1(e|0,0,900)|0;a=c[d+724>>2]|0;if((a|0)==0){KN(e)}else{g0[a&511](d,e)}Ax(d);i=b;return}function AB(a,b){a=a|0;b=b|0;var d=0;if((a|0)==0|(b|0)==0){return}d=c[a+724>>2]|0;if((d|0)==0){KN(b);return}else{g0[d&511](a,b);return}}function AC(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;if((a|0)==0){d=0;return d|0}if((b|0)==0){Ak(a,21928);return 0}e=c[a+720>>2]|0;if((e|0)==0){f=KM(b)|0}else{f=hx[e&127](a,b)|0}if((f|0)==0){Ak(a,21928);return 0}K1(f|0,0,b|0)|0;d=f;return d|0}function AD(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;if((a|0)==0){d=0;return d|0}if((b|0)==0){Ak(a,21928);return 0}e=c[a+720>>2]|0;if((e|0)==0){f=KM(b)|0}else{f=hx[e&127](a,b)|0}if((f|0)==0){Ak(a,21928);return 0}else{d=f;return d|0}return 0}function AE(a,b){a=a|0;b=b|0;var d=0,e=0;if((b|0)==0){d=0;return d|0}do{if((a|0)!=0){e=c[a+720>>2]|0;if((e|0)==0){break}d=hx[e&127](a,b)|0;return d|0}}while(0);d=KM(b)|0;return d|0}function AF(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;if((b|0)<1|(d|0)==0){Ak(a,24552);return 0}if((4294967295/(d>>>0)|0)>>>0<b>>>0){e=0;return e|0}f=ag(d,b)|0;if((f|0)==0){e=0;return e|0}do{if((a|0)!=0){b=c[a+720>>2]|0;if((b|0)==0){break}e=hx[b&127](a,f)|0;return e|0}}while(0);e=KM(f)|0;return e|0}function AG(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0;if((e|0)<1|(f|0)==0|(d|0)<0){Ak(a,24992);return 0}g=(d|0)>0;if((b|0)==0&g){Ak(a,24992);return 0}if((2147483647-d|0)<(e|0)){h=0;return h|0}i=e+d|0;if((4294967295/(f>>>0)|0)>>>0<i>>>0){h=0;return h|0}j=ag(i,f)|0;if((j|0)==0){h=0;return h|0}do{if((a|0)==0){k=10}else{i=c[a+720>>2]|0;if((i|0)==0){k=10;break}l=hx[i&127](a,j)|0}}while(0);if((k|0)==10){l=KM(j)|0}if((l|0)==0){h=0;return h|0}j=ag(f,d)|0;if(g){K2(l|0,b|0,j)|0}K1(l+j|0,0,ag(f,e)|0)|0;h=l;return h|0}function AH(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;if((a|0)==0){d=0;return d|0}do{if((b|0)!=0){e=c[a+720>>2]|0;if((e|0)==0){f=KM(b)|0}else{f=hx[e&127](a,b)|0}if((f|0)==0){break}else{d=f}return d|0}}while(0);An(a,21928);d=0;return d|0}function AI(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;if((a|0)==0){return}c[a+716>>2]=b;c[a+720>>2]=d;c[a+724>>2]=e;return}function AJ(b){b=b|0;var e=0;if((b|0)==0){return}if((d[b+436|0]|0)>>>0>=8>>>0){return}e=b+216|0;c[e>>2]=c[e>>2]|4;a[b+437|0]=8;return}function AK(b){b=b|0;var d=0,e=0;do{if((b|0)==0){d=1}else{if((a[b+432|0]|0)==0){d=1;break}e=b+216|0;c[e>>2]=c[e>>2]|2;d=7}}while(0);return d|0}function AL(e,f,g){e=e|0;f=f|0;g=g|0;var h=0,i=0;if((e|0)==0){return}do{if((c[e+208>>2]&32768|0)==0){h=d[e+435|0]|0;if((h|0)==2){a[e+440|0]=4;i=10;break}else if((h|0)==0){if((d[e+436|0]|0)>>>0>7>>>0){a[e+440|0]=2;i=10;break}else{As(e,24400);break}}else{As(e,24904);break}}else{b[e+444>>1]=f;i=10}}while(0);do{if((i|0)==10){f=e+216|0;c[f>>2]=c[f>>2]|32768;f=e+212|0;h=c[f>>2]|0;if((g|0)==1){c[f>>2]=h|128;break}else{c[f>>2]=h&-129;break}}}while(0);g=e+216|0;e=c[g>>2]|0;if((e&32768|0)==0){return}c[g>>2]=e|16777216;return}function AM(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;e=a[b+8|0]|0;if((e<<24>>24|0)==4){f=a[b+9|0]|0;if((f<<24>>24|0)==8){g=c[b+4>>2]|0;if((g|0)==0){return}else{h=d;i=0}while(1){a[h]=~a[h];j=i+2|0;if(j>>>0<g>>>0){h=h+2|0;i=j}else{break}}return}else if((f<<24>>24|0)==16){f=c[b+4>>2]|0;if((f|0)==0){return}else{k=d;l=0}while(1){a[k]=~a[k];i=k+1|0;a[i]=~a[i];i=l+4|0;if(i>>>0<f>>>0){k=k+4|0;l=i}else{break}}return}else{return}}else if((e<<24>>24|0)==0){e=c[b+4>>2]|0;if((e|0)==0){return}else{m=0;n=d}while(1){a[n]=~a[n];d=m+1|0;if(d>>>0<e>>>0){m=d;n=n+1|0}else{break}}return}else{return}}function AN(b,e){b=b|0;e=e|0;var f=0,g=0,h=0;if((a[b+9|0]|0)!=16){return}f=ag(d[b+10|0]|0,c[b>>2]|0)|0;if((f|0)==0){return}else{g=0;h=e}while(1){e=a[h]|0;b=h+1|0;a[h]=a[b]|0;a[b]=e;e=g+1|0;if(e>>>0<f>>>0){g=e;h=h+2|0}else{break}}return}function AO(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,i=0;f=a[b+9|0]|0;if((f&255)>>>0>=8>>>0){return}g=c[b+4>>2]|0;b=e+g|0;if((f<<24>>24|0)==1){h=1584}else if((f<<24>>24|0)==2){h=16}else if((f<<24>>24|0)==4){h=2176}else{return}if((g|0)>0){i=e}else{return}do{a[i]=a[h+(d[i]|0)|0]|0;i=i+1|0;}while(i>>>0<b>>>0);return}function AP(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0;f=b+4|0;g=d+(c[f>>2]|0)|0;h=b+10|0;i=a[h]|0;do{if((i<<24>>24|0)==2){j=a[b+9|0]|0;if((j<<24>>24|0)==8){if((e|0)==0){k=d+2|0;l=d+1|0}else{k=d+1|0;l=d}if(k>>>0<g>>>0){m=l;n=k;while(1){o=m+1|0;a[m]=a[n]|0;p=n+2|0;if(p>>>0<g>>>0){m=o;n=p}else{q=o;break}}}else{q=l}a[b+11|0]=8;r=q}else if((j<<24>>24|0)==16){if((e|0)==0){s=d+4|0;t=d+2|0}else{s=d+2|0;t=d}if(s>>>0<g>>>0){n=t;m=s;while(1){a[n]=a[m]|0;o=n+2|0;a[n+1|0]=a[m+1|0]|0;p=m+4|0;if(p>>>0<g>>>0){n=o;m=p}else{u=o;break}}}else{u=t}a[b+11|0]=16;r=u}else{return}a[h]=1;m=b+8|0;if((a[m]|0)!=4){v=r;break}a[m]=0;v=r}else if((i<<24>>24|0)==4){m=a[b+9|0]|0;if((m<<24>>24|0)==16){if((e|0)==0){w=d+8|0;x=d+6|0}else{w=d+2|0;x=d}if(w>>>0<g>>>0){n=x;j=w;while(1){a[n]=a[j]|0;a[n+1|0]=a[j+1|0]|0;a[n+2|0]=a[j+2|0]|0;a[n+3|0]=a[j+3|0]|0;a[n+4|0]=a[j+4|0]|0;o=n+6|0;a[n+5|0]=a[j+5|0]|0;p=j+8|0;if(p>>>0<g>>>0){n=o;j=p}else{y=o;break}}}else{y=x}a[b+11|0]=48;z=y}else if((m<<24>>24|0)==8){if((e|0)==0){A=d+4|0;B=d+3|0}else{A=d+1|0;B=d}if(A>>>0<g>>>0){j=B;n=A;while(1){a[j]=a[n]|0;a[j+1|0]=a[n+1|0]|0;o=j+3|0;a[j+2|0]=a[n+2|0]|0;p=n+4|0;if(p>>>0<g>>>0){j=o;n=p}else{C=o;break}}}else{C=B}a[b+11|0]=24;z=C}else{return}a[h]=3;n=b+8|0;if((a[n]|0)!=6){v=z;break}a[n]=2;v=z}else{return}}while(0);c[f>>2]=v-d;return}function AQ(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;e=a[b+8|0]|0;if((e&2)==0){return}f=c[b>>2]|0;g=a[b+9|0]|0;if((g<<24>>24|0)==8){if((e<<24>>24|0)==2){if((f|0)==0){return}else{h=0;i=d}while(1){b=a[i]|0;j=i+2|0;a[i]=a[j]|0;a[j]=b;b=h+1|0;if(b>>>0<f>>>0){h=b;i=i+3|0}else{break}}return}else if((e<<24>>24|0)==6){if((f|0)==0){return}else{k=0;l=d}while(1){i=a[l]|0;h=l+2|0;a[l]=a[h]|0;a[h]=i;i=k+1|0;if(i>>>0<f>>>0){k=i;l=l+4|0}else{break}}return}else{return}}else if((g<<24>>24|0)==16){if((e<<24>>24|0)==2){if((f|0)==0){return}else{m=d;n=0}while(1){g=a[m]|0;l=m+4|0;a[m]=a[l]|0;a[l]=g;g=m+1|0;l=a[g]|0;k=m+5|0;a[g]=a[k]|0;a[k]=l;l=n+1|0;if(l>>>0<f>>>0){m=m+6|0;n=l}else{break}}return}else if((e<<24>>24|0)==6){if((f|0)==0){return}else{o=d;p=0}while(1){d=a[o]|0;e=o+4|0;a[o]=a[e]|0;a[e]=d;d=o+1|0;e=a[d]|0;n=o+5|0;a[d]=a[n]|0;a[n]=e;e=p+1|0;if(e>>>0<f>>>0){o=o+8|0;p=e}else{break}}return}else{return}}else{return}}function AR(e,f){e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;g=b[e+420>>1]|0;h=d[f+9|0]|0;if((g&65535|0)>=(1<<h|0)|g<<16>>16==0){return}g=(ag(c[f>>2]|0,-(d[f+11|0]|0)|0)|0)&7;i=c[e+384>>2]|0;j=c[f+4>>2]|0;f=i+j|0;if((h|0)==8){if((j|0)<=0){return}k=e+424|0;l=f;m=c[k>>2]|0;while(1){n=d[l]|0;if((n|0)>(m|0)){c[k>>2]=n;o=n}else{o=m}n=l-1|0;if(n>>>0>i>>>0){l=n;m=o}else{break}}return}else if((h|0)==4){if((j|0)<=0){return}o=e+424|0;m=g;l=f;k=c[o>>2]|0;while(1){n=a[l]|0;p=(n&255)>>>(m>>>0)&15;if((p|0)>(k|0)){c[o>>2]=p;q=a[l]|0;r=p}else{q=n;r=k}n=(q&255)>>>(m>>>0)>>>4&15;if((n|0)>(r|0)){c[o>>2]=n;s=n}else{s=r}n=l-1|0;if(n>>>0>i>>>0){m=0;l=n;k=s}else{break}}return}else if((h|0)==2){if((j|0)<=0){return}s=e+424|0;k=g;l=f;m=c[s>>2]|0;while(1){r=a[l]|0;o=(r&255)>>>(k>>>0)&3;if((o|0)>(m|0)){c[s>>2]=o;t=a[l]|0;u=o}else{t=r;u=m}r=(t&255)>>>(k>>>0)>>>2&3;if((r|0)>(u|0)){c[s>>2]=r;v=a[l]|0;w=r}else{v=t;w=u}r=(v&255)>>>(k>>>0)>>>4&3;if((r|0)>(w|0)){c[s>>2]=r;x=a[l]|0;y=r}else{x=v;y=w}r=(x&255)>>>(k>>>0)>>>6&3;if((r|0)>(y|0)){c[s>>2]=r;z=r}else{z=y}r=l-1|0;if(r>>>0>i>>>0){k=0;l=r;m=z}else{break}}return}else if((h|0)==1){if((j|0)<=0){return}j=e+424|0;e=g;g=f;while(1){if(((d[g]|0)>>>(e>>>0)|0)!=0){c[j>>2]=1}f=g-1|0;if(f>>>0>i>>>0){e=0;g=f}else{break}}return}else{return}}function AS(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=b+441|0;f=a[e]|0;g=f&255;if((f&255)>>>0>7>>>0){return}h=8-g|0;c[b+800>>2]=17;CP(b,d+32+g|0,h);a[e]=8;e=d+32|0;if((B8(e,g,h)|0)==0){if((f&255)>>>0>=3>>>0){return}d=b+208|0;c[d>>2]=c[d>>2]|4096;return}if((f&255)>>>0>=4>>>0){Ak(b,21888)}if((B8(e,g,h-4|0)|0)==0){Ak(b,21888)}else{Ak(b,24888)}}function AT(a){a=a|0;var b=0,e=0,f=0,g=0,h=0,j=0;b=i;i=i+8|0;e=b|0;f=a+800|0;c[f>>2]=33;g=e|0;CP(a,g,8);h=(d[e+1|0]|0)<<16|(d[g]|0)<<24|(d[e+2|0]|0)<<8|(d[e+3|0]|0);if((h|0)<0){Ak(a,24360);return 0}g=e+4|0;j=a+376|0;c[j>>2]=(d[e+5|0]|0)<<16|(d[g]|0)<<24|(d[e+6|0]|0)<<8|(d[e+7|0]|0);Cb(a);Cc(a,g,4);g=c[j>>2]|0;j=g&255;if((j-65|0)>>>0>57>>>0|(j-91|0)>>>0<6>>>0){Aq(a,18120);return 0}j=g>>>8&255;if((j-65|0)>>>0>57>>>0|(j-91|0)>>>0<6>>>0){Aq(a,18120);return 0}j=g>>>16&255;if((j-65|0)>>>0>57>>>0|(j-91|0)>>>0<6>>>0){Aq(a,18120);return 0}j=g>>>24;if((j-65|0)>>>0>57>>>0|(j-91|0)>>>0<6>>>0){Aq(a,18120);return 0}else{c[f>>2]=65;i=b;return h|0}return 0}function AU(a,b){a=a|0;b=b|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0;e=i;i=i+1032|0;f=e|0;if((b|0)!=0){g=e+8|0;if((a|0)==0){h=b;while(1){j=h>>>0<1024>>>0?h:1024;if((h|0)==(j|0)){break}else{h=h-j|0}}}else{h=b;while(1){b=h>>>0<1024>>>0?h:1024;CP(a,g,b);Cc(a,g,b);if((h|0)==(b|0)){break}else{h=h-b|0}}}}h=f|0;g=a+376|0;b=a+212|0;j=c[b>>2]|0;do{if((c[g>>2]&536870912|0)==0){c[a+800>>2]=129;CP(a,h,4);if((j&2048|0)==0){break}else{k=0}i=e;return k|0}else{c[a+800>>2]=129;CP(a,h,4);if((j&768|0)==768){k=0}else{break}i=e;return k|0}}while(0);if(((d[f+1|0]|0)<<16|(d[h]|0)<<24|(d[f+2|0]|0)<<8|(d[f+3|0]|0)|0)==(c[a+412>>2]|0)){k=0;i=e;return k|0}f=c[b>>2]|0;if((c[g>>2]&536870912|0)==0){if((f&1024|0)==0){l=13}else{l=12}}else{if((f&512|0)==0){l=12}else{l=13}}if((l|0)==13){Au(a,20288);k=0;i=e;return k|0}else if((l|0)==12){Ap(a,20288);k=1;i=e;return k|0}return 0}function AV(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;g=i;i=i+16|0;h=g|0;j=b+208|0;k=c[j>>2]|0;if((k&1|0)!=0){Aq(b,18536)}if((f|0)!=13){Aq(b,17120)}c[j>>2]=k|1;k=h|0;if((b|0)!=0){CP(b,k,13);Cc(b,k,13)}AU(b,0)|0;j=(d[h+1|0]|0)<<16|(d[k]|0)<<24|(d[h+2|0]|0)<<8|(d[h+3|0]|0);if((j|0)<0){Ak(b,24360)}k=(d[h+5|0]|0)<<16|(d[h+4|0]|0)<<24|(d[h+6|0]|0)<<8|(d[h+7|0]|0);if((k|0)<0){Ak(b,24360)}f=a[h+8|0]|0;l=f&255;m=a[h+9|0]|0;n=m&255;o=a[h+10|0]|0;p=o&255;q=a[h+11|0]|0;r=q&255;s=a[h+12|0]|0;h=s&255;c[b+348>>2]=j;c[b+352>>2]=k;a[b+436|0]=f;a[b+432|0]=s;a[b+435|0]=m;a[b+712|0]=q;a[b+744|0]=o;if((n|0)==2){a[b+439|0]=3;t=3}else if((n|0)==6){a[b+439|0]=4;t=4}else if((n|0)==4){a[b+439|0]=2;t=2}else{a[b+439|0]=1;t=1}o=ag(t,f)|0;a[b+438|0]=o;f=o&255;if((o&255)>>>0>7>>>0){u=ag(f>>>3,j)|0;v=b+364|0;c[v>>2]=u;Bx(b,e,j,k,l,n,h,p,r);i=g;return}else{u=((ag(f,j)|0)+7|0)>>>3;v=b+364|0;c[v>>2]=u;Bx(b,e,j,k,l,n,h,p,r);i=g;return}}function AW(d,e,f){d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;g=i;i=i+776|0;h=g|0;j=g+768|0;k=d+208|0;l=c[k>>2]|0;if((l&1|0)==0){Aq(d,15744)}if((l&2|0)!=0){Aq(d,14640)}if((l&4|0)!=0){AU(d,f)|0;Au(d,18536);i=g;return}c[k>>2]=l|2;l=d+435|0;if((a[l]&2)==0){AU(d,f)|0;Au(d,13704);i=g;return}if(!(f>>>0<769>>>0&((f>>>0)%3|0|0)==0)){AU(d,f)|0;if((a[l]|0)==3){Aq(d,17120)}Au(d,17120);i=g;return}l=(f|0)/3|0;k=h|0;if((f|0)>2){f=j|0;h=j+1|0;m=j+2|0;if((d|0)==0){j=0;n=k;while(1){a[n|0]=a[f]|0;a[n+1|0]=a[h]|0;a[n+2|0]=a[m]|0;o=j+1|0;if((o|0)<(l|0)){j=o;n=n+3|0}else{break}}}else{n=0;j=k;while(1){CP(d,f,3);Cc(d,f,3);a[j|0]=a[f]|0;a[j+1|0]=a[h]|0;a[j+2|0]=a[m]|0;o=n+1|0;if((o|0)<(l|0)){n=o;j=j+3|0}else{break}}}}AU(d,0)|0;BC(d,e,k,l);l=d+428|0;do{if((b[l>>1]|0)==0){if((e|0)==0){i=g;return}k=e+8|0;j=c[k>>2]|0;if((j&16|0)==0){p=j;break}b[l>>1]=0;q=k;r=24}else{b[l>>1]=0;if((e|0)!=0){q=e+8|0;r=24;break}Au(d,13272);i=g;return}}while(0);if((r|0)==24){b[e+22>>1]=0;Au(d,13272);p=c[q>>2]|0}if((p&64|0)!=0){Au(d,25864)}if((c[e+8>>2]&32|0)==0){i=g;return}Au(d,25128);i=g;return}function AX(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;b=a+208|0;e=c[b>>2]|0;if((e&5|0)!=5){Aq(a,18536)}c[b>>2]=e|24;AU(a,d)|0;if((d|0)==0){return}Au(a,17120);return}function AY(a,b,e){a=a|0;b=b|0;e=e|0;var f=0,g=0,h=0;f=i;i=i+8|0;g=f|0;h=c[a+208>>2]|0;if((h&1|0)==0){Aq(a,15744)}if((h&6|0)!=0){AU(a,e)|0;Au(a,18536);i=f;return}if((e|0)!=4){AU(a,e)|0;Au(a,17120);i=f;return}e=g|0;if((a|0)!=0){CP(a,e,4);Cc(a,e,4)}if((AU(a,0)|0)!=0){i=f;return}h=(d[g+1|0]|0)<<16|(d[e]|0)<<24|(d[g+2|0]|0)<<8|(d[g+3|0]|0);Cl(a,a+824|0,(h|0)>-1?h:-1);Cn(a,b);i=f;return}function AZ(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0;g=i;i=i+8|0;h=g|0;j=h;k=j+3|0;l=j+2|0;m=j+1|0;j=h;c[h>>2]=0;h=c[b+208>>2]|0;if((h&1|0)==0){Aq(b,15744)}if((h&6|0)!=0){AU(b,f)|0;Au(b,18536);i=g;return}do{if((e|0)!=0){if((c[e+8>>2]&2|0)==0){break}AU(b,f)|0;Au(b,14640);i=g;return}}while(0);h=b+435|0;if((a[h]|0)==3){n=3}else{n=d[b+439|0]|0}if((n|0)!=(f|0)|f>>>0>4>>>0){Au(b,17120);AU(b,f)|0;i=g;return}if((b|0)!=0){CP(b,j,f);Cc(b,j,f)}if((AU(b,0)|0)!=0){i=g;return}f=a[j]|0;j=b+516|0;n=j|0;if((a[h]&2)==0){K1(n|0,f|0,4)|0;a[b+520|0]=a[m]|0}else{a[n]=f;a[b+517|0]=a[m]|0;a[b+518|0]=a[l]|0;a[b+520|0]=a[k]|0}BD(b,e,j);i=g;return}function A_(a,e,f){a=a|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;g=i;i=i+64|0;h=g|0;j=g+32|0;k=c[a+208>>2]|0;if((k&1|0)==0){Aq(a,15744)}if((k&6|0)!=0){AU(a,f)|0;Au(a,18536);i=g;return}if((f|0)!=32){AU(a,f)|0;Au(a,17120);i=g;return}f=h|0;if((a|0)!=0){CP(a,f,32);Cc(a,f,32)}if((AU(a,0)|0)!=0){i=g;return}k=(d[h+1|0]|0)<<16|(d[f]|0)<<24|(d[h+2|0]|0)<<8|(d[h+3|0]|0);f=(k|0)>-1?k:-1;c[j+24>>2]=f;k=(d[h+5|0]|0)<<16|(d[h+4|0]|0)<<24|(d[h+6|0]|0)<<8|(d[h+7|0]|0);l=(k|0)>-1?k:-1;c[j+28>>2]=l;k=(d[h+9|0]|0)<<16|(d[h+8|0]|0)<<24|(d[h+10|0]|0)<<8|(d[h+11|0]|0);m=(k|0)>-1?k:-1;c[j>>2]=m;k=(d[h+13|0]|0)<<16|(d[h+12|0]|0)<<24|(d[h+14|0]|0)<<8|(d[h+15|0]|0);n=(k|0)>-1?k:-1;c[j+4>>2]=n;k=(d[h+17|0]|0)<<16|(d[h+16|0]|0)<<24|(d[h+18|0]|0)<<8|(d[h+19|0]|0);o=(k|0)>-1?k:-1;c[j+8>>2]=o;k=(d[h+21|0]|0)<<16|(d[h+20|0]|0)<<24|(d[h+22|0]|0)<<8|(d[h+23|0]|0);p=(k|0)>-1?k:-1;c[j+12>>2]=p;k=(d[h+25|0]|0)<<16|(d[h+24|0]|0)<<24|(d[h+26|0]|0)<<8|(d[h+27|0]|0);q=(k|0)>-1?k:-1;c[j+16>>2]=q;k=(d[h+29|0]|0)<<16|(d[h+28|0]|0)<<24|(d[h+30|0]|0)<<8|(d[h+31|0]|0);h=(k|0)>-1?k:-1;c[j+20>>2]=h;do{if(!((f|0)==-1|(l|0)==-1|(m|0)==-1|(n|0)==-1|(o|0)==-1|(p|0)==-1)){if((q|0)==-1|(h|0)==-1){break}k=a+898|0;r=b[k>>1]|0;s=r&65535;if((s&32768|0)!=0){i=g;return}if((s&16|0)==0){b[k>>1]=r|16;Co(a,a+824|0,j,1)|0;Cn(a,e);i=g;return}else{b[k>>1]=r|-32768;Cn(a,e);Au(a,14640);i=g;return}}}while(0);Au(a,24304);i=g;return}function A$(a,e,f){a=a|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0;g=i;i=i+8|0;h=g|0;j=c[a+208>>2]|0;if((j&1|0)==0){Aq(a,15744)}if((j&6|0)!=0){AU(a,f)|0;Au(a,18536);i=g;return}if((f|0)!=1){AU(a,f)|0;Au(a,17120);i=g;return}if((a|0)!=0){CP(a,h,1);Cc(a,h,1)}if((AU(a,0)|0)!=0){i=g;return}f=a+898|0;j=b[f>>1]|0;k=j&65535;if((k&32768|0)!=0){i=g;return}if((k&4|0)==0){Cq(a,a+824|0,d[h]|0)|0;Cn(a,e);i=g;return}else{b[f>>1]=j|-32768;Cn(a,e);Au(a,23984);i=g;return}}function A0(f,g,h){f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0;j=i;i=i+1264|0;k=j|0;l=j+8|0;m=j+96|0;n=j+232|0;o=j+1256|0;c[k>>2]=h;p=c[f+208>>2]|0;if((p&1|0)==0){Aq(f,15744)}if((p&6|0)!=0){AU(f,h)|0;Au(f,18536);i=j;return}if(h>>>0<9>>>0){AU(f,h)|0;Au(f,23704);i=j;return}p=f+824|0;q=f+898|0;r=e[q>>1]|0;if((r&32768|0)!=0){AU(f,h)|0;i=j;return}L16:do{if((r&4|0)==0){s=h>>>0<81>>>0?h:81;t=l|0;if((f|0)!=0){CP(f,t,s);Cc(f,t,s)}u=h-s|0;c[k>>2]=u;v=0;while(1){w=v>>>0<80>>>0;if(!(w&v>>>0<s>>>0)){x=w;break}if((a[l+v|0]|0)==0){x=1;break}else{v=v+1|0}}if(!((v|0)!=0&x)){y=22528;z=u;A=43;break}w=v+1|0;if(w>>>0>=s>>>0){y=22720;z=u;A=43;break}if((a[l+w|0]|0)!=0){y=22720;z=u;A=43;break}B=v+2|0;if((A1(f,1766015824)|0)!=0){y=c[f+248>>2]|0;z=u;A=43;break}c[o>>2]=132;c[f+224>>2]=l+B;c[f+228>>2]=s-B;B=n|0;C=m|0;A2(f,B,k,C,o,0);do{if((c[o>>2]|0)==0){D=d[m+1|0]<<16|d[C]<<24|d[m+2|0]<<8|d[m+3|0];if((Ct(f,p,t,D)|0)==0){E=0;break}if((Cu(f,p,t,D,C,d[f+435|0]|0)|0)==0){E=0;break}F=a[m+128|0]|0;G=a[m+129|0]|0;H=a[m+130|0]|0;I=a[m+131|0]|0;J=f+788|0;K=c[J>>2]|0;do{if((K|0)==0){A=25}else{L=f+792|0;if((c[L>>2]|0)>>>0>=D>>>0){M=K;break}c[J>>2]=0;c[L>>2]=0;AB(f,K);A=25}}while(0);if((A|0)==25){K=AE(f,D)|0;if((K|0)==0){E=23288;break}c[J>>2]=K;c[f+792>>2]=D;M=K}K2(M|0,C|0,132)|0;K=((G&255)<<16|(F&255)<<24|(H&255)<<8|I&255)*12|0;c[o>>2]=K;A2(f,B,k,M+132|0,o,0);if((c[o>>2]|0)!=0){E=c[f+248>>2]|0;break}if((Cv(f,p,t,D,M)|0)==0){E=0;break}c[o>>2]=D-132-K;A2(f,B,k,M+(K+132)|0,o,1);K=c[k>>2]|0;L=(K|0)==0;if(!L){if((c[f+212>>2]&1048576|0)==0){E=23504;break}}if((c[o>>2]|0)!=0){E=23016;break}if(!L){Ap(f,23504)}AU(f,K)|0;Cw(f,p,M,c[f+272>>2]|0);do{if((g|0)!=0){Ch(f,g,16,0);K=AE(f,w)|0;c[g+116>>2]=K;if((K|0)==0){b[q>>1]=b[q>>1]|-32768;Cn(f,g);c[f+220>>2]=0;N=23288;break L16}else{K2(K|0,t|0,w)|0;c[g+124>>2]=D;c[g+120>>2]=M;c[J>>2]=0;K=g+232|0;c[K>>2]=c[K>>2]|16;K=g+8|0;c[K>>2]=c[K>>2]|4096;Cn(f,g);break}}}while(0);c[f+220>>2]=0;i=j;return}else{E=c[f+248>>2]|0}}while(0);c[f+220>>2]=0;y=E;z=c[k>>2]|0;A=43}else{y=23984;z=h;A=43}}while(0);if((A|0)==43){AU(f,z)|0;N=y}b[q>>1]=b[q>>1]|-32768;Cn(f,g);if((N|0)==0){i=j;return}Au(f,N);i=j;return}function A1(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;e=i;i=i+64|0;f=e|0;g=b+220|0;h=c[g>>2]|0;if((h|0)!=0){j=f|0;a[j]=h>>>24;a[f+1|0]=h>>>16;a[f+2|0]=h>>>8;a[f+3|0]=h;Al(j,64,4,16432)|0;Ap(b,j);c[g>>2]=0}j=b+224|0;c[j>>2]=0;c[b+228>>2]=0;c[b+236>>2]=0;c[b+240>>2]=0;h=b+212|0;do{if((c[h>>2]&2|0)==0){f=z8(j,16288,56)|0;if((f|0)!=0){k=f;l=8;break}c[h>>2]=c[h>>2]|2;l=7}else{f=z6(j)|0;if((f|0)==0){l=7}else{k=f;l=8}}}while(0);if((l|0)==8){Ck(b,k);m=k;i=e;return m|0}else if((l|0)==7){c[g>>2]=d;m=0;i=e;return m|0}return 0}function A2(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;if((c[a+220>>2]|0)!=(c[a+376>>2]|0)){c[a+248>>2]=16672;return}h=a+224|0;c[a+236>>2]=e;e=a+240|0;c[e>>2]=0;i=a+228|0;j=h|0;k=(g|0)!=0?4:2;g=1024;while(1){if((c[i>>2]|0)==0){l=c[d>>2]|0;m=g>>>0>l>>>0?l:g;c[d>>2]=l-m;if((m|0)!=0){CP(a,b,m);Cc(a,b,m)}c[j>>2]=b;c[i>>2]=m;n=m}else{n=g}if((c[e>>2]|0)==0){m=c[f>>2]|0;c[f>>2]=0;c[e>>2]=m}m=z9(h,(c[d>>2]|0)==0?k:0)|0;if((m|0)!=0){o=m;break}if((c[f>>2]|0)!=0){g=n;continue}if((c[e>>2]|0)==0){o=0;break}else{g=n}}c[f>>2]=(c[f>>2]|0)+(c[e>>2]|0);c[e>>2]=0;Ck(a,o);return}function A3(e,f,g){e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;h=i;i=i+16|0;j=h|0;k=e+756|0;l=c[k>>2]|0;if((l|0)==1){AU(e,g)|0;i=h;return}else if((l|0)!=0){m=3}do{if((m|0)==3){n=l-1|0;c[k>>2]=n;if((n|0)!=1){break}An(e,22320);AU(e,g)|0;i=h;return}}while(0);k=c[e+208>>2]|0;if((k&1|0)==0){Aq(e,15744)}if((k&4|0)!=0){AU(e,g)|0;Au(e,18536);i=h;return}k=g+1|0;l=e+788|0;n=c[l>>2]|0;do{if((n|0)==0){m=12}else{o=e+792|0;if((c[o>>2]|0)>>>0>=k>>>0){p=n;m=15;break}c[l>>2]=0;c[o>>2]=0;AB(e,n);m=12}}while(0);do{if((m|0)==12){n=AE(e,k)|0;if((n|0)!=0){c[l>>2]=n;c[e+792>>2]=k;if((e|0)==0){q=n;break}else{p=n;m=15;break}}AU(e,g)|0;Au(e,23288);i=h;return}}while(0);if((m|0)==15){CP(e,p,g);Cc(e,p,g);q=p}if((AU(e,0)|0)!=0){i=h;return}a[q+g|0]=0;p=q;while(1){r=p+1|0;if((a[p]|0)==0){break}else{p=r}}if(r>>>0>(q+(g-2)|0)>>>0){An(e,22024);i=h;return}m=p+2|0;p=a[r]|0;r=j+4|0;a[r]=p;k=p<<24>>24==8?6:10;l=q-m+g|0;if(((l>>>0)%(k>>>0)|0|0)!=0){An(e,21680);i=h;return}g=(l>>>0)/(k>>>0)|0;if(g>>>0>429496729>>>0){An(e,21520);i=h;return}k=j+12|0;c[k>>2]=g;l=AH(e,g*10|0)|0;n=l;o=j+8|0;c[o>>2]=n;if((l|0)==0){An(e,21376);i=h;return}L50:do{if((g|0)!=0){l=0;s=m;t=n;u=p;while(1){v=t+(l*10|0)|0;if(u<<24>>24==8){b[v>>1]=d[s]|0;b[t+(l*10|0)+2>>1]=d[s+1|0]|0;b[t+(l*10|0)+4>>1]=d[s+2|0]|0;b[t+(l*10|0)+6>>1]=d[s+3|0]|0;w=s+4|0}else{b[v>>1]=d[s]<<8|d[s+1|0];b[t+(l*10|0)+2>>1]=d[s+2|0]<<8|d[s+3|0];b[t+(l*10|0)+4>>1]=d[s+4|0]<<8|d[s+5|0];b[t+(l*10|0)+6>>1]=d[s+6|0]<<8|d[s+7|0];w=s+8|0}b[t+(l*10|0)+8>>1]=d[w]<<8|d[w+1|0];v=l+1|0;if((v|0)>=(c[k>>2]|0)){break L50}l=v;s=w+2|0;t=c[o>>2]|0;u=a[r]|0}}}while(0);c[j>>2]=q;BH(e,f,j,1);AB(e,c[o>>2]|0);i=h;return}function A4(f,g,h){f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;j=i;i=i+272|0;k=j|0;l=j+256|0;m=j+264|0;n=c[f+208>>2]|0;if((n&1|0)==0){Aq(f,15744)}if((n&4|0)!=0){AU(f,h)|0;Au(f,18536);i=j;return}do{if((g|0)!=0){if((c[g+8>>2]&16|0)==0){break}AU(f,h)|0;Au(f,14640);i=j;return}}while(0);o=a[f+435|0]|0;if((o<<24>>24|0)==2){if((h|0)!=6){AU(f,h)|0;Au(f,17120);i=j;return}p=m|0;if((f|0)==0){q=0;r=0;s=0;t=0;u=0;v=0}else{CP(f,p,6);Cc(f,p,6);q=(d[p]|0)<<8;r=d[m+1|0]|0;s=(d[m+2|0]|0)<<8;t=d[m+3|0]|0;u=(d[m+4|0]|0)<<8;v=d[m+5|0]|0}b[f+428>>1]=1;b[f+534>>1]=q|r;b[f+536>>1]=s|t;b[f+538>>1]=u|v}else if((o<<24>>24|0)==0){if((h|0)!=2){AU(f,h)|0;Au(f,17120);i=j;return}v=l|0;if((f|0)==0){w=0;x=0}else{CP(f,v,2);Cc(f,v,2);w=(d[v]|0)<<8;x=d[l+1|0]|0}b[f+428>>1]=1;b[f+540>>1]=w|x}else if((o<<24>>24|0)==3){if((n&2|0)==0){AU(f,h)|0;Au(f,18536);i=j;return}if((e[f+420>>1]|0)>>>0<h>>>0|h>>>0>256>>>0|(h|0)==0){AU(f,h)|0;Au(f,17120);i=j;return}n=k|0;if((f|0)!=0){CP(f,n,h);Cc(f,n,h)}b[f+428>>1]=h}else{AU(f,h)|0;Au(f,21312);i=j;return}if((AU(f,0)|0)==0){BG(f,g,k|0,e[f+428>>1]|0,f+532|0);i=j;return}else{b[f+428>>1]=0;i=j;return}}function A5(e,f,g){e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;h=i;i=i+24|0;j=h|0;k=h+8|0;l=c[e+208>>2]|0;if((l&1|0)==0){Aq(e,15744)}do{if((l&4|0)==0){m=e+435|0;n=a[m]|0;o=n<<24>>24==3;if(o){if((l&2|0)==0){break}}p=(f|0)!=0;do{if(p){if((c[f+8>>2]&32|0)==0){break}AU(e,g)|0;Au(e,14640);i=h;return}}while(0);if(o){q=1}else{q=(n&2)==0?2:6}if((q|0)!=(g|0)){AU(e,g)|0;Au(e,17120);i=h;return}r=j|0;if((e|0)!=0){CP(e,r,g);Cc(e,r,g)}if((AU(e,0)|0)!=0){i=h;return}s=a[m]|0;do{if(s<<24>>24==3){t=a[r]|0;a[k|0]=t;do{if(p){u=b[f+20>>1]|0;if(u<<16>>16==0){v=23;break}w=t&255;if(w>>>0<(u&65535)>>>0){u=c[e+416>>2]|0;b[k+2>>1]=d[u+(w*3|0)|0]|0;b[k+4>>1]=d[u+(w*3|0)+1|0]|0;b[k+6>>1]=d[u+(w*3|0)+2|0]|0;break}Au(e,21200);i=h;return}else{v=23}}while(0);if((v|0)==23){b[k+6>>1]=0;b[k+4>>1]=0;b[k+2>>1]=0}b[k+8>>1]=0}else{a[k|0]=0;t=(d[r]|0)<<8|(d[j+1|0]|0);if((s&2)==0){b[k+8>>1]=t;b[k+6>>1]=t;b[k+4>>1]=t;b[k+2>>1]=t;break}else{b[k+2>>1]=t;b[k+4>>1]=(d[j+2|0]|0)<<8|(d[j+3|0]|0);b[k+6>>1]=(d[j+4|0]|0)<<8|(d[j+5|0]|0);b[k+8>>1]=0;break}}}while(0);Bv(e,f,k);i=h;return}}while(0);AU(e,g)|0;Au(e,18536);i=h;return}function A6(a,f,g){a=a|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0;h=i;i=i+520|0;j=h|0;k=h+512|0;l=c[a+208>>2]|0;if((l&1|0)==0){Aq(a,15744)}if((l&6|0)!=2){AU(a,g)|0;Au(a,18536);i=h;return}do{if((f|0)!=0){if((c[f+8>>2]&64|0)==0){break}AU(a,g)|0;Au(a,14640);i=h;return}}while(0);l=g>>>1;if((l|0)!=(e[a+420>>1]|0|0)|g>>>0>513>>>0){AU(a,g)|0;Au(a,17120);i=h;return}if((l|0)!=0){g=k|0;m=k+1|0;if((a|0)==0){k=0;do{b[j+(k<<1)>>1]=0;k=k+1|0;}while(k>>>0<l>>>0)}else{k=0;do{CP(a,g,2);Cc(a,g,2);b[j+(k<<1)>>1]=(d[g]|0)<<8|(d[m]|0);k=k+1|0;}while(k>>>0<l>>>0)}}if((AU(a,0)|0)!=0){i=h;return}Bw(a,f,j|0);i=h;return}function A7(a,b,e){a=a|0;b=b|0;e=e|0;var f=0,g=0,h=0;f=i;i=i+16|0;g=f|0;h=c[a+208>>2]|0;if((h&1|0)==0){Aq(a,15744)}if((h&4|0)!=0){AU(a,e)|0;Au(a,18536);i=f;return}do{if((b|0)!=0){if((c[b+8>>2]&128|0)==0){break}AU(a,e)|0;Au(a,14640);i=f;return}}while(0);if((e|0)!=9){AU(a,e)|0;Au(a,17120);i=f;return}e=g|0;if((a|0)!=0){CP(a,e,9);Cc(a,e,9)}if((AU(a,0)|0)!=0){i=f;return}BB(a,b,(d[g+1|0]|0)<<16|(d[e]|0)<<24|(d[g+2|0]|0)<<8|(d[g+3|0]|0),(d[g+5|0]|0)<<16|(d[g+4|0]|0)<<24|(d[g+6|0]|0)<<8|(d[g+7|0]|0),d[g+8|0]|0);i=f;return}function A8(a,b,e){a=a|0;b=b|0;e=e|0;var f=0,g=0,h=0;f=i;i=i+16|0;g=f|0;h=c[a+208>>2]|0;if((h&1|0)==0){Aq(a,15744)}if((h&4|0)!=0){AU(a,e)|0;Au(a,18536);i=f;return}do{if((b|0)!=0){if((c[b+8>>2]&256|0)==0){break}AU(a,e)|0;Au(a,14640);i=f;return}}while(0);if((e|0)!=9){AU(a,e)|0;Au(a,17120);i=f;return}e=g|0;if((a|0)!=0){CP(a,e,9);Cc(a,e,9)}if((AU(a,0)|0)!=0){i=f;return}By(a,b,(d[g+1|0]|0)<<16|(d[e]|0)<<24|(d[g+2|0]|0)<<8|(d[g+3|0]|0),(d[g+5|0]|0)<<16|(d[g+4|0]|0)<<24|(d[g+6|0]|0)<<8|(d[g+7|0]|0),d[g+8|0]|0);i=f;return}function A9(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;g=c[b+208>>2]|0;if((g&1|0)==0){Aq(b,15744)}if((g&4|0)!=0){AU(b,f)|0;Au(b,18536);return}do{if((e|0)!=0){if((c[e+8>>2]&1024|0)==0){break}AU(b,f)|0;Au(b,14640);return}}while(0);g=f+1|0;h=b+788|0;i=c[h>>2]|0;do{if((i|0)==0){j=11}else{k=b+792|0;if((c[k>>2]|0)>>>0>=g>>>0){l=i;j=14;break}c[h>>2]=0;c[k>>2]=0;AB(b,i);j=11}}while(0);do{if((j|0)==11){i=AE(b,g)|0;if((i|0)!=0){c[h>>2]=i;c[b+792>>2]=g;if((b|0)==0){m=i;break}else{l=i;j=14;break}}AU(b,f)|0;Au(b,23288);return}}while(0);if((j|0)==14){CP(b,l,f);Cc(b,l,f);m=l}if((AU(b,0)|0)!=0){return}l=m+f|0;a[l]=0;f=m;while(1){n=f+1|0;if((a[f]|0)==0){break}else{f=n}}if(l>>>0<=(f+12|0)>>>0){Au(b,17120);return}j=d[f+2|0]<<16|d[n]<<24|d[f+3|0]<<8|d[f+4|0];n=d[f+6|0]<<16|d[f+5|0]<<24|d[f+7|0]<<8|d[f+8|0];g=a[f+9|0]|0;h=a[f+10|0]|0;i=f+11|0;f=g&255;do{if(g<<24>>24!=0|h<<24>>24==2){if(!((g-1&255)>>>0>1>>>0|h<<24>>24==3)){break}if(!(g<<24>>24!=3|h<<24>>24==4)){break}if((g&255)>>>0>3>>>0){Au(b,20768);o=i}else{o=i}while(1){if((a[o]|0)==0){break}else{o=o+1|0}}k=h&255;p=AH(b,k<<2)|0;q=p;if((p|0)==0){Au(b,23288);return}L48:do{if(h<<24>>24!=0){r=o;s=0;L49:while(1){t=r+1|0;c[q+(s<<2)>>2]=t;u=t;while(1){if(u>>>0>l>>>0){break L49}if((a[u]|0)==0){break}else{u=u+1|0}}t=s+1|0;if((t|0)<(k|0)){r=u;s=t}else{break L48}}AB(b,p);Au(b,20640);return}}while(0);Bz(b,e,m,j,n,f,k,i,q);AB(b,p);return}}while(0);Au(b,21e3);return}function Ba(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;g=i;i=i+16|0;h=g|0;j=g+8|0;k=c[b+208>>2]|0;if((k&1|0)==0){Aq(b,15744)}if((k&4|0)!=0){AU(b,f)|0;Au(b,18536);i=g;return}do{if((e|0)!=0){if((c[e+8>>2]&16384|0)==0){break}AU(b,f)|0;Au(b,14640);i=g;return}}while(0);if(f>>>0<4>>>0){AU(b,f)|0;Au(b,17120);i=g;return}k=f+1|0;l=b+788|0;m=c[l>>2]|0;do{if((m|0)==0){n=13}else{o=b+792|0;if((c[o>>2]|0)>>>0>=k>>>0){p=m;n=16;break}c[l>>2]=0;c[o>>2]=0;AB(b,m);n=13}}while(0);do{if((n|0)==13){m=AE(b,k)|0;if((m|0)!=0){c[l>>2]=m;c[b+792>>2]=k;if((b|0)==0){q=m;break}else{p=m;n=16;break}}Au(b,23288);AU(b,f)|0;i=g;return}}while(0);if((n|0)==16){CP(b,p,f);Cc(b,p,f);q=p}a[q+f|0]=0;if((AU(b,0)|0)!=0){i=g;return}if(((a[q]|0)-1&255)>>>0>=2>>>0){Au(b,20520);i=g;return}c[h>>2]=1;c[j>>2]=0;do{if((CA(q,f,j,h)|0)!=0){p=c[h>>2]|0;if(p>>>0>=f>>>0){break}n=p+1|0;c[h>>2]=n;if((a[q+p|0]|0)!=0){break}if((c[j>>2]&392|0)!=264){Au(b,20088);i=g;return}c[j>>2]=0;p=(CA(q,f,j,h)|0)!=0;if(!(p&(c[h>>2]|0)==(f|0))){Au(b,19976);i=g;return}if((c[j>>2]&392|0)==264){BA(b,e,d[q]|0,q+1|0,q+n|0);i=g;return}else{Au(b,19832);i=g;return}}}while(0);Au(b,20384);i=g;return}function Bb(e,f,g){e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0;h=i;i=i+16|0;j=h|0;k=h+8|0;l=e+208|0;m=c[l>>2]|0;if((m&1|0)==0){Aq(e,15744)}do{if((f|0)!=0){if((c[f+8>>2]&512|0)==0){break}AU(e,g)|0;Au(e,14640);i=h;return}}while(0);if((m&4|0)!=0){c[l>>2]=m|8}if((g|0)!=7){AU(e,g)|0;Au(e,17120);i=h;return}g=j|0;if((e|0)!=0){CP(e,g,7);Cc(e,g,7)}if((AU(e,0)|0)!=0){i=h;return}a[k+6|0]=a[j+6|0]|0;a[k+5|0]=a[j+5|0]|0;a[k+4|0]=a[j+4|0]|0;a[k+3|0]=a[j+3|0]|0;a[k+2|0]=a[j+2|0]|0;b[k>>1]=(d[g]|0)<<8|(d[j+1|0]|0);BF(e,f,k);i=h;return}function Bc(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;f=i;i=i+32|0;g=f|0;h=b+756|0;j=c[h>>2]|0;if((j|0)==1){AU(b,e)|0;i=f;return}else if((j|0)!=0){k=3}do{if((k|0)==3){l=j-1|0;c[h>>2]=l;if((l|0)!=1){break}AU(b,e)|0;Au(b,19696);i=f;return}}while(0);h=b+208|0;j=c[h>>2]|0;if((j&1|0)==0){Aq(b,15744)}if((j&4|0)!=0){c[h>>2]=j|8}j=e+1|0;h=b+788|0;l=c[h>>2]|0;do{if((l|0)==0){k=12}else{m=b+792|0;if((c[m>>2]|0)>>>0>=j>>>0){n=l;k=15;break}c[h>>2]=0;c[m>>2]=0;AB(b,l);k=12}}while(0);do{if((k|0)==12){l=AE(b,j)|0;if((l|0)!=0){c[h>>2]=l;c[b+792>>2]=j;if((b|0)==0){o=l;break}else{n=l;k=15;break}}Ap(b,16552);Au(b,23288);i=f;return}}while(0);if((k|0)==15){CP(b,n,e);Cc(b,n,e);o=n}if((AU(b,0)|0)!=0){i=f;return}n=o+e|0;a[n]=0;e=o;while(1){p=e+1|0;if((a[e]|0)==0){break}else{e=p}}k=(e|0)==(n|0)?e:p;c[g>>2]=-1;c[g+4>>2]=o;c[g+20>>2]=0;c[g+24>>2]=0;c[g+16>>2]=0;c[g+8>>2]=k;c[g+12>>2]=K0(k|0)|0;if((BE(b,d,g,1)|0)==0){i=f;return}An(b,19432);i=f;return}function Bd(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;f=i;i=i+40|0;g=f|0;h=f+8|0;j=b+756|0;k=c[j>>2]|0;if((k|0)==1){AU(b,e)|0;i=f;return}else if((k|0)!=0){l=3}do{if((l|0)==3){m=k-1|0;c[j>>2]=m;if((m|0)!=1){break}AU(b,e)|0;Au(b,19696);i=f;return}}while(0);j=b+208|0;k=c[j>>2]|0;if((k&1|0)==0){Aq(b,15744)}if((k&4|0)!=0){c[j>>2]=k|8}k=b+788|0;j=c[k>>2]|0;do{if((j|0)==0){l=12}else{m=b+792|0;if((c[m>>2]|0)>>>0>=e>>>0){n=j;l=15;break}c[k>>2]=0;c[m>>2]=0;AB(b,j);l=12}}while(0);do{if((l|0)==12){j=AE(b,e)|0;if((j|0)!=0){c[k>>2]=j;c[b+792>>2]=e;if((b|0)==0){o=j;break}else{n=j;l=15;break}}AU(b,e)|0;Au(b,23288);i=f;return}}while(0);if((l|0)==15){CP(b,n,e);Cc(b,n,e);o=n}if((AU(b,0)|0)==0){p=0}else{i=f;return}while(1){if(p>>>0>=e>>>0){break}if((a[o+p|0]|0)==0){break}else{p=p+1|0}}do{if(p>>>0>79>>>0|(p|0)==0){q=22528}else{if((p+3|0)>>>0>e>>>0){q=23016;break}if((a[o+(p+1)|0]|0)!=0){q=19264;break}c[g>>2]=-1;n=p+2|0;if((Be(b,e,n,g)|0)==1){l=c[k>>2]|0;j=c[g>>2]|0;a[l+(j+n)|0]=0;c[h>>2]=0;c[h+4>>2]=l;c[h+8>>2]=l+n;c[h+12>>2]=j;c[h+16>>2]=0;c[h+20>>2]=0;c[h+24>>2]=0;j=(BE(b,d,h,1)|0)==0;r=j?0:19088}else{r=c[b+248>>2]|0}if((r|0)!=0){q=r;break}i=f;return}}while(0);Au(b,q);i=f;return}function Be(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;g=i;i=i+8|0;h=g|0;j=c[b+760>>2]|0;do{if((j|0)==0|(j|0)==(-1|0)){k=-1;l=e+1|0}else{m=e+1|0;if(j>>>0>=m>>>0){k=j;l=m;break}Ck(b,-4);n=-4;i=g;return n|0}}while(0);j=k-l|0;if(j>>>0<(c[f>>2]|0)>>>0){c[f>>2]=j}j=b+376|0;l=A1(b,c[j>>2]|0)|0;if((l|0)==1){n=-7;i=g;return n|0}else if((l|0)==0){k=d-e|0;c[h>>2]=k;d=b+788|0;m=Bu(b,c[j>>2]|0,(c[d>>2]|0)+e|0,h,0,f)|0;do{if((m|0)==1){if((z6(b+224|0)|0)!=0){Ck(b,1);o=-7;break}p=c[f>>2]|0;q=e+1+p|0;r=AE(b,q)|0;if((r|0)==0){Ck(b,-4);o=-4;break}s=Bu(b,c[j>>2]|0,(c[d>>2]|0)+e|0,h,r+e|0,f)|0;do{if((s|0)==0){t=r;u=-7}else if((s|0)==1){if((p|0)!=(c[f>>2]|0)){t=r;u=-7;break}a[r+(p+e)|0]=0;v=c[d>>2]|0;if((e|0)!=0){K2(r|0,v|0,e)|0}c[d>>2]=r;c[b+792>>2]=q;t=v;u=1}else{t=r;u=s}}while(0);AB(b,t);if((u|0)!=1|(k|0)==(c[h>>2]|0)){o=u;break}Au(b,23504);o=1}else{o=(m|0)==0?-7:m}}while(0);c[b+220>>2]=0;n=o;i=g;return n|0}else{n=l;i=g;return n|0}return 0}function Bf(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;f=i;i=i+40|0;g=f|0;h=f+8|0;j=b+756|0;k=c[j>>2]|0;if((k|0)==1){AU(b,e)|0;i=f;return}else if((k|0)!=0){l=3}do{if((l|0)==3){m=k-1|0;c[j>>2]=m;if((m|0)!=1){break}AU(b,e)|0;Au(b,19696);i=f;return}}while(0);j=b+208|0;k=c[j>>2]|0;if((k&1|0)==0){Aq(b,15744)}if((k&4|0)!=0){c[j>>2]=k|8}k=e+1|0;j=b+788|0;m=c[j>>2]|0;do{if((m|0)==0){l=12}else{n=b+792|0;if((c[n>>2]|0)>>>0>=k>>>0){o=m;l=15;break}c[j>>2]=0;c[n>>2]=0;AB(b,m);l=12}}while(0);do{if((l|0)==12){m=AE(b,k)|0;if((m|0)!=0){c[j>>2]=m;c[b+792>>2]=k;if((b|0)==0){p=m;break}else{o=m;l=15;break}}Ap(b,16552);AU(b,e)|0;Au(b,23288);i=f;return}}while(0);if((l|0)==15){CP(b,o,e);Cc(b,o,e);p=o}if((AU(b,0)|0)==0){q=0}else{i=f;return}while(1){if(q>>>0>=e>>>0){break}if((a[p+q|0]|0)==0){break}else{q=q+1|0}}L33:do{if(q>>>0>79>>>0|(q|0)==0){r=22528}else{if((q+5|0)>>>0>e>>>0){r=23016;break}o=a[p+(q+1)|0]|0;if((o<<24>>24|0)==1){if((a[p+(q+2)|0]|0)!=0){r=18960;break}}else if((o<<24>>24|0)!=0){r=18960;break}k=o<<24>>24!=0;c[g>>2]=0;o=q+3|0;m=o;while(1){if(m>>>0>=e>>>0){l=25;break}n=m+1|0;if((a[p+m|0]|0)==0){s=n;break}else{m=n}}if((l|0)==25){s=m+1|0}n=s;while(1){if(n>>>0>=e>>>0){l=29;break}t=n+1|0;if((a[p+n|0]|0)==0){u=t;break}else{n=t}}if((l|0)==29){u=n+1|0}do{if(k|u>>>0>e>>>0){if(!(k&u>>>0<e>>>0)){r=23016;break L33}c[g>>2]=-1;if((Be(b,e,u,g)|0)==1){v=c[j>>2]|0;break}else{m=c[b+248>>2]|0;if((m|0)==0){v=p;break}else{r=m;break L33}}}else{c[g>>2]=e-u;v=p}}while(0);a[v+((c[g>>2]|0)+u)|0]=0;c[h>>2]=k?1:2;c[h+4>>2]=v;c[h+20>>2]=v+o;c[h+24>>2]=v+s;c[h+8>>2]=v+u;c[h+12>>2]=0;c[h+16>>2]=c[g>>2];n=(BE(b,d,h,1)|0)==0;if(!n){r=n?0:19088;break}i=f;return}}while(0);Au(b,r);i=f;return}function Bg(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0;e=a+376|0;f=Cj(a,c[e>>2]|0)|0;g=a+684|0;do{if((c[g>>2]|0)==0){if((f|0)==0){h=c[a+688>>2]|0}else{h=f}if((h|0)==3){i=13}else if((h|0)==2){if((c[e>>2]&536870912|0)==0){i=14}else{i=13}}else{i=14}if((i|0)==13){j=(Bh(a,d)|0)==0;k=j?1:h;i=15;break}else if((i|0)==14){AU(a,d)|0;k=h;i=15;break}}else{if((Bh(a,d)|0)==0){l=0;break}j=hx[c[g>>2]&127](a,a+764|0)|0;if((j|0)<0){Aq(a,18768)}if((j|0)!=0){l=1;break}if((f|0)>=2){k=f;i=15;break}if((c[a+688>>2]|0)>=2){i=16;break}Ap(a,18616);Ar(a,18360);i=16}}while(0);if((i|0)==15){if((k|0)==2){i=16}else if((k|0)==3){i=17}else{l=0}}if((i|0)==16){if((c[e>>2]&536870912|0)==0){l=0}else{i=17}}do{if((i|0)==17){k=a+756|0;f=c[k>>2]|0;if((f|0)==2){c[k>>2]=1;Au(a,19696);l=0;break}else if((f|0)==1){l=0;break}else if((f|0)!=0){c[k>>2]=f-1}BI(a,b,a+764|0,1);l=1}}while(0);b=a+772|0;i=c[b>>2]|0;if((i|0)!=0){AB(a,i)}c[b>>2]=0;if((l|0)!=0){return}if((c[e>>2]&536870912|0)==0){Aq(a,18272)}else{return}}function Bh(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;e=b+772|0;f=c[e>>2]|0;if((f|0)!=0){AB(b,f);c[e>>2]=0}f=c[b+760>>2]|0;if((f|0)==0|(f|0)==(-1|0)){g=5}else{if(f>>>0<d>>>0){h=0;g=8}else{g=5}}do{if((g|0)==5){f=c[b+376>>2]|0;a[b+764|0]=f>>>24;a[b+765|0]=f>>>16;a[b+766|0]=f>>>8;a[b+767|0]=f;a[b+768|0]=0;c[b+776>>2]=d;a[b+780|0]=c[b+208>>2];if((d|0)==0){c[e>>2]=0;break}else{f=AH(b,d)|0;c[e>>2]=f;h=f;g=8;break}}}while(0);do{if((g|0)==8){e=(d|0)==0;if((h|0)!=0|e){if(e|(b|0)==0){break}CP(b,h,d);Cc(b,h,d);break}else{AU(b,d)|0;Au(b,16864);i=0;return i|0}}}while(0);AU(b,0)|0;i=1;return i|0}function Bi(e,f,g){e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0;h=a[e+443|0]|0;i=h&255;j=c[e+384>>2]|0;k=j+1|0;l=c[e+348>>2]|0;m=a[e+433|0]|0;n=m&255;if(h<<24>>24==0){Ak(e,18040)}o=c[e+404>>2]|0;do{if((o|0)!=0){if((h&255)>>>0>7>>>0){p=ag(l,i>>>3)|0}else{p=((ag(l,i)|0)+7|0)>>>3}if((o|0)==(p|0)){break}Ak(e,17920)}}while(0);if((l|0)==0){Ak(e,17784)}p=ag(l,i)|0;o=p&7;do{if((o|0)==0){q=0;r=0;s=0}else{if((h&255)>>>0>7>>>0){t=ag(l,i>>>3)|0}else{t=(p+7|0)>>>3}u=f+(t-1)|0;v=a[u]|0;if((c[e+216>>2]&65536|0)==0){q=u;r=255>>>(o>>>0);s=v;break}else{q=u;r=255<<o;s=v;break}}}while(0);L25:do{if((a[e+432|0]|0)==0){w=83}else{o=c[e+216>>2]|0;if(!((o&2|0)!=0&(m&255)>>>0<6>>>0)){w=83;break}if((g|0)==0){x=n&1}else if((g|0)==1){t=n&1;if((t|0)==0){w=83;break}else{x=t}}else{w=83;break}t=x<<3-((n+1|0)>>>1)&7;if(l>>>0<=t>>>0){return}if((h&255)>>>0<8>>>0){v=8/(i>>>0)|0;u=(g|0)!=0;do{if((o&65536|0)==0){if(u){if(h<<24>>24==1){y=0}else{y=h<<24>>24==2?1:2}z=1508+(y*12|0)+(n>>>1<<2)|0;break}else{if(h<<24>>24==1){A=0}else{A=h<<24>>24==2?1:2}z=1400+(A*24|0)+(n<<2)|0;break}}else{if(u){if(h<<24>>24==1){B=0}else{B=h<<24>>24==2?1:2}z=1472+(B*12|0)+(n>>>1<<2)|0;break}else{if(h<<24>>24==1){C=0}else{C=h<<24>>24==2?1:2}z=1328+(C*24|0)+(n<<2)|0;break}}}while(0);u=f;o=k;D=l;E=c[z>>2]|0;while(1){F=E>>>8|E<<24;G=E&255;if((G|0)==255){a[u]=a[o]|0}else if((G|0)!=0){a[u]=d[o]&E|d[u]&(E^255)}if(D>>>0<=v>>>0){break L25}u=u+1|0;o=o+1|0;D=D-v|0;E=F}}if((i&7|0)!=0){Ak(e,17672)}E=i>>>3;v=ag(t,E)|0;D=(ag(l,E)|0)-v|0;o=f+v|0;u=v+1|0;F=j+u|0;if((g|0)==0){H=E}else{G=E<<((6-n|0)>>>1);H=G>>>0>D>>>0?D:G}G=E<<((7-n|0)>>>1);if((H|0)==3){a[o]=a[F]|0;E=v+2|0;a[f+u|0]=a[j+E|0]|0;a[f+E|0]=a[j+(v+3)|0]|0;if(D>>>0>G>>>0){I=D;J=F;K=o}else{return}while(1){v=J+G|0;E=K+G|0;u=I-G|0;a[E]=a[v]|0;L=G+1|0;a[K+L|0]=a[J+L|0]|0;L=G+2|0;a[K+L|0]=a[J+L|0]|0;if(u>>>0>G>>>0){I=u;J=v;K=E}else{break}}return}else if((H|0)==1){a[o]=a[F]|0;if(D>>>0>G>>>0){M=D;N=F;O=o}else{return}do{O=O+G|0;N=N+G|0;M=M-G|0;a[O]=a[N]|0;}while(M>>>0>G>>>0);return}else if((H|0)==2){t=o;E=F;v=D;do{a[t]=a[E]|0;a[t+1|0]=a[E+1|0]|0;if(v>>>0<=G>>>0){w=104;break}E=E+G|0;t=t+G|0;v=v-G|0;}while(v>>>0>1>>>0);if((w|0)==104){return}a[t]=a[E]|0;return}else{do{if(H>>>0<16>>>0){v=o;if((v&1|0)!=0){break}u=F;if((u&1|0)!=0){break}if((H&1|0)!=0){break}if((G&1|0)!=0){break}do{if((v&3|0)==0){if((u&3|0)!=0){break}if((H&3|0)!=0){break}if((G&3|0)!=0){break}L=((G-H|0)>>>2)+1|0;P=F;Q=o;R=D;do{S=H;T=P;U=Q;while(1){c[U>>2]=c[T>>2];V=S-4|0;if((V|0)==0){break}else{S=V;T=T+4|0;U=U+4|0}}if(R>>>0<=G>>>0){w=102;break}Q=U+(L<<2)|0;P=T+(L<<2)|0;R=R-G|0;}while(H>>>0<=R>>>0);if((w|0)==102){return}L=Q;S=P;V=R;while(1){a[L]=a[S]|0;W=V-1|0;if((W|0)==0){break}else{L=L+1|0;S=S+1|0;V=W}}return}}while(0);u=((G-H|0)>>>1)+1|0;v=F;V=o;S=D;do{L=H;R=v;P=V;while(1){b[P>>1]=b[R>>1]|0;Q=L-2|0;if((Q|0)==0){break}else{L=Q;R=R+2|0;P=P+2|0}}if(S>>>0<=G>>>0){w=95;break}V=P+(u<<1)|0;v=R+(u<<1)|0;S=S-G|0;}while(H>>>0<=S>>>0);if((w|0)==95){return}u=V;L=v;Q=S;while(1){a[u]=a[L]|0;W=Q-1|0;if((W|0)==0){break}else{u=u+1|0;L=L+1|0;Q=W}}return}}while(0);K2(o|0,F|0,H)|0;if(D>>>0>G>>>0){X=H;Y=D;Z=F;_=o}else{return}do{Z=Z+G|0;_=_+G|0;Y=Y-G|0;X=X>>>0>Y>>>0?Y:X;K2(_|0,Z|0,X)|0;}while(Y>>>0>G>>>0);return}}}while(0);if((w|0)==83){if((h&255)>>>0>7>>>0){$=ag(l,i>>>3)|0}else{$=(p+7|0)>>>3}K2(f|0,k|0,$)|0}if((q|0)==0){return}a[q]=d[q]&(r^255)|s&255&r;return}function Bj(b,e,f,g){b=b|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0;h=i;i=i+8|0;j=h|0;if((e|0)==0|(b|0)==0){i=h;return}k=b|0;l=c[k>>2]|0;m=c[1280+(f<<2)>>2]|0;f=ag(m,l)|0;n=b+11|0;o=d[n]|0;do{if((o|0)==2){p=(l<<1)+6&6;if((g&65536|0)==0){q=2;r=6;s=0;t=(f<<1)+6&6^6;u=p^6}else{q=-2;r=0;s=6;t=(f<<1)+6&6;u=p}if((l|0)==0){break}else{v=e+((l-1|0)>>>2)|0;w=e+((f-1|0)>>>2)|0;x=u;y=t;z=0}while(1){p=(d[v]|0)>>>(x>>>0)&3;A=w;B=y;C=0;do{a[A]=(d[A]|0)&16191>>>((6-B|0)>>>0)|p<<B;D=(B|0)==(r|0);A=D?A-1|0:A;B=D?s:B+q|0;C=C+1|0;}while((C|0)<(m|0));C=(x|0)==(r|0);p=z+1|0;if(p>>>0<(c[k>>2]|0)>>>0){v=C?v-1|0:v;w=A;x=C?s:x+q|0;y=B;z=p}else{break}}}else if((o|0)==4){p=l&1;if((g&65536|0)==0){E=4;F=4;G=0;H=f&1;I=p}else{E=-4;F=0;G=4;H=f&1^1;I=p^1}if((l|0)==0){break}p=e+((l-1|0)>>>1)|0;C=e+((f-1|0)>>>1)|0;D=I<<2;J=H<<2;K=0;while(1){L=(d[p]|0)>>>(D>>>0)&15;M=C;N=J;O=0;do{a[M]=(d[M]|0)&3855>>>((4-N|0)>>>0)|L<<N;P=(N|0)==(F|0);M=P?M-1|0:M;N=P?G:N+E|0;O=O+1|0;}while((O|0)<(m|0));O=(D|0)==(F|0);L=K+1|0;if(L>>>0<(c[k>>2]|0)>>>0){p=O?p-1|0:p;C=M;D=O?G:D+E|0;J=N;K=L}else{break}}}else if((o|0)==1){K=l+7&7;if((g&65536|0)==0){Q=K^7;R=f+7&7^7;S=0;T=7;U=1}else{Q=K;R=f+7&7;S=7;T=0;U=-1}if((l|0)==0){break}else{V=0;W=R;X=Q;Y=e+((f-1|0)>>>3)|0;Z=e+((l-1|0)>>>3)|0}while(1){K=(d[Z]|0)>>>(X>>>0)&1;J=0;D=W;C=Y;do{a[C]=(d[C]|0)&32639>>>((7-D|0)>>>0)|K<<D;p=(D|0)==(T|0);D=p?S:D+U|0;C=p?C-1|0:C;J=J+1|0;}while((J|0)<(m|0));J=(X|0)==(T|0);K=V+1|0;if(K>>>0<(c[k>>2]|0)>>>0){V=K;W=D;X=J?S:X+U|0;Y=C;Z=J?Z-1|0:Z}else{break}}}else{J=o>>>3;if((l|0)==0){break}K=e+(ag(J,f-1|0)|0)|0;N=e+(ag(J,l-1|0)|0)|0;M=j|0;p=-J|0;L=-(ag((m|0)>1?m:1,J)|0)|0;O=N;N=K;K=0;while(1){K2(M|0,O|0,J)|0;B=N;A=0;while(1){K2(B|0,M|0,J)|0;P=A+1|0;if((P|0)<(m|0)){B=B+p|0;A=P}else{break}}A=K+1|0;if(A>>>0<(c[k>>2]|0)>>>0){O=O+p|0;N=N+L|0;K=A}else{break}}}}while(0);c[k>>2]=f;k=a[n]|0;n=k&255;if((k&255)>>>0>7>>>0){_=ag(n>>>3,f)|0}else{_=((ag(n,f)|0)+7|0)>>>3}c[b+4>>2]=_;i=h;return}function Bk(a,b,e,f,g){a=a|0;b=b|0;e=e|0;f=f|0;g=g|0;var h=0,i=0;h=g-1|0;if(h>>>0>=4>>>0){return}g=a+808|0;if((c[g>>2]|0)==0){i=(d[a+438|0]|0)+7|0;c[g>>2]=70;c[a+812>>2]=42;c[a+816>>2]=138;c[a+820>>2]=(i&504|0)==8?108:88}hF[c[a+808+(h<<2)>>2]&255](b,e,f);return}function Bl(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;e=i;i=i+1024|0;f=a+224|0;g=a+236|0;c[g>>2]=b;h=a+240|0;c[h>>2]=0;j=a+228|0;k=(b|0)!=0;l=e|0;m=a+408|0;n=a+376|0;o=a+796|0;p=a+788|0;q=a+792|0;r=(a|0)==0;s=f|0;t=(b|0)==0?0:d;L1:while(1){if((c[j>>2]|0)==0){d=c[m>>2]|0;while(1){if((d|0)!=0){break}AU(a,0)|0;b=AT(a)|0;c[m>>2]=b;if((c[n>>2]|0)==1229209940){d=b}else{u=6;break L1}}b=c[o>>2]|0;v=b>>>0>d>>>0?d:b;b=c[p>>2]|0;do{if((b|0)==0){u=10}else{if((c[q>>2]|0)>>>0>=v>>>0){w=b;break}c[p>>2]=0;c[q>>2]=0;AB(a,b);u=10}}while(0);if((u|0)==10){u=0;b=AE(a,v)|0;if((b|0)==0){u=12;break}c[p>>2]=b;c[q>>2]=v;w=b}if(!r){CP(a,w,v);Cc(a,w,v)}c[m>>2]=(c[m>>2]|0)-v;c[s>>2]=w;c[j>>2]=v}if(k){x=0;y=t}else{c[g>>2]=l;x=t;y=1024}c[h>>2]=y;z=z9(f,0)|0;b=c[h>>2]|0;A=(k?b:1024-b|0)+x|0;c[h>>2]=0;if((z|0)==1){u=19;break}else if((z|0)!=0){u=22;break}if((A|0)==0){u=33;break}else{t=A}}if((u|0)==22){Ck(a,z);z=c[a+248>>2]|0;if(k){Aq(a,z)}Au(a,z);i=e;return}else if((u|0)==6){Ak(a,17584)}else if((u|0)==33){i=e;return}else if((u|0)==19){c[g>>2]=0;g=a+208|0;c[g>>2]=c[g>>2]|8;g=a+212|0;c[g>>2]=c[g>>2]|8;if((c[j>>2]|0)==0){if((c[m>>2]|0)!=0){u=21}}else{u=21}if((u|0)==21){Au(a,17352)}if((A|0)==0){i=e;return}if(k){Ak(a,17584)}Au(a,17176);i=e;return}else if((u|0)==12){Aq(a,16552)}}function Bm(a){a=a|0;var b=0,d=0,e=0;b=a+212|0;do{if((c[b>>2]&8|0)==0){Bl(a,0,0);c[a+236>>2]=0;d=c[b>>2]|0;if((d&8|0)!=0){break}e=a+208|0;c[e>>2]=c[e>>2]|8;c[b>>2]=d|8}}while(0);b=a+220|0;if((c[b>>2]|0)!=1229209940){return}c[a+224>>2]=0;c[a+228>>2]=0;c[b>>2]=0;AU(a,c[a+408>>2]|0)|0;return}function Bn(b){b=b|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;e=b+372|0;f=(c[e>>2]|0)+1|0;c[e>>2]=f;g=b+356|0;if(f>>>0<(c[g>>2]|0)>>>0){return}do{if((a[b+432|0]|0)!=0){c[e>>2]=0;K1(c[b+380>>2]|0,0,(c[b+364>>2]|0)+1|0)|0;f=b+433|0;h=(a[f]|0)+1&255;a[f]=h;if((h&255)>>>0>6>>>0){break}i=(c[b+348>>2]|0)-1|0;j=b+368|0;k=(c[b+216>>2]&2|0)==0;l=b+352|0;m=h;while(1){h=m&255;n=d[1232+h|0]|0;o=((i+n-(d[1224+h|0]|0)|0)>>>0)/(n>>>0)|0;if(!k){break}n=d[1248+h|0]|0;p=(((c[l>>2]|0)-1+n-(d[1240+h|0]|0)|0)>>>0)/(n>>>0)|0;c[g>>2]=p;if(!((p|0)==0|(o|0)==0)){break}p=m+1&255;a[f]=p;if((p&255)>>>0>6>>>0){q=9;break}else{m=p}}if((q|0)==9){c[j>>2]=o;break}c[j>>2]=o;if((m&255)>>>0>=7>>>0){break}return}}while(0);o=b+212|0;do{if((c[o>>2]&8|0)==0){Bl(b,0,0);c[b+236>>2]=0;q=c[o>>2]|0;if((q&8|0)!=0){break}g=b+208|0;c[g>>2]=c[g>>2]|8;c[o>>2]=q|8}}while(0);o=b+220|0;if((c[o>>2]|0)!=1229209940){return}c[b+224>>2]=0;c[b+228>>2]=0;c[o>>2]=0;AU(b,c[b+408>>2]|0)|0;return}function Bo(e){e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;BU(e);f=e+432|0;if((a[f]|0)==0){c[e+356>>2]=c[e+352>>2];g=c[e+348>>2]|0;c[e+368>>2]=g;h=c[e+216>>2]|0;i=g}else{g=c[e+216>>2]|0;j=c[e+352>>2]|0;if((g&2|0)==0){c[e+356>>2]=(j+7|0)>>>3}else{c[e+356>>2]=j}j=c[e+348>>2]|0;k=d[e+433|0]|0;l=d[1232+k|0]|0;c[e+368>>2]=((j-1+l-(d[1224+k|0]|0)|0)>>>0)/(l>>>0)|0;h=g;i=j}j=d[e+438|0]|0;g=e+216|0;if((h&4|0)==0){m=j}else{m=(d[e+436|0]|0)>>>0<8>>>0?8:j}j=c[g>>2]|0;h=(j&4096|0)==0;do{if(h){n=m}else{l=a[e+435|0]|0;if((l<<24>>24|0)==2){if((b[e+428>>1]|0)==0){n=m;break}n=(m<<2>>>0)/3|0;break}else if((l<<24>>24|0)==0){k=m>>>0<8>>>0?8:m;if((b[e+428>>1]|0)==0){n=k;break}n=k<<1;break}else if((l<<24>>24|0)==3){n=(b[e+428>>1]|0)==0?24:32;break}else{n=m;break}}}while(0);do{if((j&512|0)==0){o=n;p=j}else{if(h){m=j&-513;c[g>>2]=m;o=n;p=m;break}else{o=n<<((d[e+436|0]|0)>>>0<16>>>0);p=j;break}}}while(0);j=(p&32768|0)==0;do{if(j){q=o}else{n=a[e+435|0]|0;if((n<<24>>24|0)==2|(n<<24>>24|0)==3){q=(o|0)<33?32:64;break}else if((n<<24>>24|0)==0){q=(o|0)<9?16:32;break}else{q=o;break}}}while(0);L33:do{if((p&16384|0)==0){r=q}else{if((b[e+428>>1]|0)==0){if(j){s=28}}else{if(!((p&4096|0)!=0|j^1)){s=28}}do{if((s|0)==28){o=a[e+435|0]|0;if(o<<24>>24==4){break}n=o<<24>>24==6;if((q|0)<9){r=n?32:24;break L33}else{r=n?64:48;break L33}}}while(0);r=(q|0)<17?32:64}}while(0);if((p&1048576|0)==0){t=r}else{p=ag(d[e+205|0]|0,d[e+204|0]|0)|0;t=(p|0)>(r|0)?p:r}a[e+442|0]=t;a[e+443|0]=0;r=i+7&-8;if((t|0)>7){u=ag(r,t>>>3)|0}else{u=(ag(r,t)|0)>>>3}r=(t+7>>3)+49+u|0;u=e+784|0;if(r>>>0>(c[u>>2]|0)>>>0){t=e+728|0;AB(e,c[t>>2]|0);i=e+804|0;AB(e,c[i>>2]|0);if((a[f]|0)==0){v=AD(e,r)|0}else{v=AC(e,r)|0}c[t>>2]=v;v=AD(e,r)|0;c[i>>2]=v;i=c[t>>2]|0;c[e+384>>2]=i+(i+32&15^31);c[e+380>>2]=v+(v+32&15^31);c[u>>2]=r}r=c[e+364>>2]|0;if((r|0)==-1){Ak(e,16984)}K1(c[e+380>>2]|0,0,r+1|0)|0;r=e+788|0;u=c[r>>2]|0;if((u|0)!=0){c[e+792>>2]=0;c[r>>2]=0;AB(e,u)}if((A1(e,1229209940)|0)==0){u=e+212|0;c[u>>2]=c[u>>2]|64;return}else{Ak(e,c[e+248>>2]|0)}}function Bp(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,i=0;f=c[b+4>>2]|0;g=((d[b+11|0]|0)+7|0)>>>3;if(g>>>0>=f>>>0){return}b=-g|0;h=g;i=e+g|0;while(1){a[i]=(a[i+b|0]|0)+(a[i]|0);g=h+1|0;if(g>>>0<f>>>0){h=g;i=i+1|0}else{break}}return}function Bq(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;f=c[b+4>>2]|0;if((f|0)==0){return}else{g=0;h=d;i=e}while(1){a[h]=(a[i]|0)+(a[h]|0);e=g+1|0;if(e>>>0<f>>>0){g=e;h=h+1|0;i=i+1|0}else{break}}return}function Br(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;g=((d[b+11|0]|0)+7|0)>>>3;h=c[b+4>>2]|0;b=h-g|0;if((g|0)==0){i=f;j=e}else{k=e+g|0;l=f;m=e;e=0;while(1){a[m]=((d[l]|0)>>>1)+(a[m]|0);n=e+1|0;if(n>>>0<g>>>0){l=l+1|0;m=m+1|0;e=n}else{break}}i=f+g|0;j=k}if((h|0)==(g|0)){return}h=-g|0;g=i;i=j;j=0;while(1){a[i]=(((d[i+h|0]|0)+(d[g]|0)|0)>>>1)+(d[i]|0);k=j+1|0;if(k>>>0<b>>>0){g=g+1|0;i=i+1|0;j=k}else{break}}return}function Bs(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;g=c[b+4>>2]|0;b=e+g|0;h=d[f]|0;i=(d[e]|0)+h|0;a[e]=i;if((g|0)<=1){return}g=h;h=i;i=e+1|0;e=f;while(1){f=e+1|0;j=h&255;k=d[f]|0;l=k-g|0;m=j-g|0;n=(l|0)<0?-l|0:l;o=(m|0)<0?-m|0:m;p=l+m|0;m=(o|0)<(n|0);l=((((p|0)<0?-p|0:p)|0)<((m?o:n)|0)?g:m?k:j)+(d[i]|0)|0;a[i]=l;j=i+1|0;if(j>>>0<b>>>0){g=k;h=l;i=j;e=f}else{break}}return}function Bt(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;g=((d[b+11|0]|0)+7|0)>>>3;h=e+g|0;if((g|0)==0){i=f;j=e}else{k=e+1|0;l=(h>>>0>k>>>0?h:k)+(-e|0)|0;k=f;m=e;while(1){n=m+1|0;a[m]=(a[k]|0)+(a[m]|0);if(n>>>0<h>>>0){k=k+1|0;m=n}else{break}}i=f+l|0;j=n}n=e+(c[b+4>>2]|0)|0;if(j>>>0>=n>>>0){return}b=-g|0;g=i;i=j;while(1){j=a[g+b|0]|0;e=j&255;l=a[i+b|0]|0;f=a[g]|0;m=(f&255)-e|0;k=(l&255)-e|0;e=(m|0)<0?-m|0:m;h=(k|0)<0?-k|0:k;o=m+k|0;k=(h|0)<(e|0);m=i+1|0;a[i]=((((o|0)<0?-o|0:o)|0)<((k?h:e)|0)?j:k?f:l)+(a[i]|0);if(m>>>0<n>>>0){g=g+1|0;i=m}else{break}}return}function Bu(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;h=i;i=i+1024|0;if((c[a+220>>2]|0)!=(b|0)){c[a+248>>2]=16672;j=-2;i=h;return j|0}b=c[g>>2]|0;k=c[e>>2]|0;l=a+224|0;c[l>>2]=d;d=a+228|0;c[d>>2]=0;m=a+240|0;c[m>>2]=0;n=(f|0)==0;o=a+236|0;if(!n){c[o>>2]=f}f=h|0;p=k;k=b;b=0;q=0;while(1){c[d>>2]=b+p;r=q+k|0;if(n){c[o>>2]=f;s=1024}else{s=-1}t=r>>>0<s>>>0?r:s;c[m>>2]=t;u=r-t|0;v=z9(l,(r|0)==(t|0)?4:0)|0;if((v|0)!=0){break}p=0;k=u;b=c[d>>2]|0;q=c[m>>2]|0}if(n){c[o>>2]=0}o=c[d>>2]|0;d=(c[m>>2]|0)+u|0;if((d|0)!=0){c[g>>2]=(c[g>>2]|0)-d}if((o|0)!=0){c[e>>2]=(c[e>>2]|0)-o}Ck(a,v);j=v;i=h;return j|0}function Bv(a,d,e){a=a|0;d=d|0;e=e|0;var f=0;if((a|0)==0|(d|0)==0|(e|0)==0){return}a=d+170|0;f=e|0;b[a>>1]=b[f>>1]|0;b[a+2>>1]=b[f+2>>1]|0;b[a+4>>1]=b[f+4>>1]|0;b[a+6>>1]=b[f+6>>1]|0;b[a+8>>1]=b[f+8>>1]|0;f=d+8|0;c[f>>2]=c[f>>2]|32;return}function Bw(a,d,f){a=a|0;d=d|0;f=f|0;var g=0,h=0,i=0,j=0,k=0;if((a|0)==0|(d|0)==0){return}g=d+20|0;h=b[g>>1]|0;if(h<<16>>16==0|(h&65535)>>>0>256>>>0){An(a,25816);return}Ch(a,d,8,0);h=AH(a,512)|0;i=h;j=d+204|0;c[j>>2]=i;if((h|0)==0){An(a,25088);return}a=d+232|0;c[a>>2]=c[a>>2]|8;L12:do{if((b[g>>1]|0)!=0){a=0;h=i;while(1){b[h+(a<<1)>>1]=b[f+(a<<1)>>1]|0;k=a+1|0;if((k|0)>=(e[g>>1]|0)){break L12}a=k;h=c[j>>2]|0}}}while(0);j=d+8|0;c[j>>2]=c[j>>2]|64;return}function Bx(b,d,e,f,g,h,i,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0;if((b|0)==0|(d|0)==0){return}c[d>>2]=e;c[d+4>>2]=f;l=d+24|0;a[l]=g;m=d+25|0;a[m]=h;a[d+26|0]=j;a[d+27|0]=k;a[d+28|0]=i;Cz(b,e,f,g&255,h&255,i&255,j&255,k&255);k=a[m]|0;do{if(k<<24>>24==3){a[d+29|0]=1;n=1}else{if((k&2)==0){o=1;p=1}else{o=3;p=3}a[d+29|0]=p;if((k&4)==0){n=o;break}m=o+1&255;a[d+29|0]=m;n=m}}while(0);o=ag(a[l]|0,n)|0;a[d+30|0]=o;n=o&255;if((o&255)>>>0>7>>>0){q=ag(n>>>3,e)|0}else{q=((ag(n,e)|0)+7|0)>>>3}c[d+12>>2]=q;return}function By(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;if((b|0)==0|(d|0)==0){return}c[d+180>>2]=e;c[d+184>>2]=f;a[d+188|0]=g;g=d+8|0;c[g>>2]=c[g>>2]|256;return}function Bz(b,d,e,f,g,h,i,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0;if((b|0)==0|(d|0)==0|(e|0)==0|(j|0)==0){return}l=(i|0)>0;if(l&(k|0)==0){return}m=(K0(e|0)|0)+1|0;if(h>>>0>3>>>0){Ak(b,24272)}if(i>>>0>255>>>0){Ak(b,23952)}else{n=0}while(1){if((n|0)>=(i|0)){o=11;break}p=c[k+(n<<2)>>2]|0;if((p|0)==0){o=30;break}if((CB(p,K0(p|0)|0)|0)==0){o=31;break}else{n=n+1|0}}if((o|0)==31){Ak(b,23664)}else if((o|0)==30){Ak(b,23664)}else if((o|0)==11){o=AH(b,m)|0;c[d+208>>2]=o;if((o|0)==0){An(b,23464);return}K2(o|0,e|0,m)|0;c[d+212>>2]=f;c[d+216>>2]=g;a[d+228|0]=h;a[d+229|0]=i;h=(K0(j|0)|0)+1|0;g=AH(b,h)|0;c[d+220>>2]=g;if((g|0)==0){An(b,23248);return}K2(g|0,j|0,h)|0;h=(i<<2)+4|0;j=AH(b,h)|0;g=d+224|0;c[g>>2]=j;if((j|0)==0){An(b,22976);return}K1(j|0,0,h|0)|0;L32:do{if(l){h=0;while(1){j=k+(h<<2)|0;f=(K0(c[j>>2]|0)|0)+1|0;m=AH(b,f)|0;c[(c[g>>2]|0)+(h<<2)>>2]=m;m=c[(c[g>>2]|0)+(h<<2)>>2]|0;if((m|0)==0){break}K2(m|0,c[j>>2]|0,f)|0;h=h+1|0;if((h|0)>=(i|0)){break L32}}An(b,22680);return}}while(0);b=d+8|0;c[b>>2]=c[b>>2]|1024;b=d+232|0;c[b>>2]=c[b>>2]|128;return}}function BA(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0;if((b|0)==0|(d|0)==0){return}if((e-1|0)>>>0>1>>>0){Ak(b,22504)}if((f|0)==0){Ak(b,22296)}h=K0(f|0)|0;if((h|0)==0){Ak(b,22296)}if((a[f]|0)==45){Ak(b,22296)}if((CB(f,h)|0)==0){Ak(b,22296)}if((g|0)==0){Ak(b,22e3)}i=K0(g|0)|0;if((i|0)==0){Ak(b,22e3)}if((a[g]|0)==45){Ak(b,22e3)}if((CB(g,i)|0)==0){Ak(b,22e3)}a[d+252|0]=e;e=h+1|0;h=AH(b,e)|0;j=d+256|0;c[j>>2]=h;if((h|0)==0){An(b,21632);return}K2(h|0,f|0,e)|0;e=i+1|0;i=AH(b,e)|0;c[d+260>>2]=i;if((i|0)==0){AB(b,c[j>>2]|0);c[j>>2]=0;An(b,21632);return}else{K2(i|0,g|0,e)|0;e=d+8|0;c[e>>2]=c[e>>2]|16384;e=d+232|0;c[e>>2]=c[e>>2]|256;return}}function BB(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;if((b|0)==0|(d|0)==0){return}c[d+192>>2]=e;c[d+196>>2]=f;a[d+200|0]=g;g=d+8|0;c[g>>2]=c[g>>2]|128;return}function BC(d,e,f,g){d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0;if((d|0)==0|(e|0)==0){return}if(g>>>0>256>>>0){if((a[e+25|0]|0)==3){Ak(d,21288)}An(d,21288);return}h=(g|0)>0;do{if(!(h&(f|0)==0)){if((g|0)==0){if((c[d+708>>2]&1|0)==0){break}}Ch(d,e,4096,0);i=AC(d,768)|0;j=i;c[d+416>>2]=j;if(h){K2(i|0,f|0,g*3|0)|0}c[e+16>>2]=j;j=g&65535;b[d+420>>1]=j;b[e+20>>1]=j;j=e+232|0;c[j>>2]=c[j>>2]|4096;j=e+8|0;c[j>>2]=c[j>>2]|8;return}}while(0);Av(d,21184,2);return}function BD(b,d,e){b=b|0;d=d|0;e=e|0;var f=0;if((b|0)==0|(d|0)==0|(e|0)==0){return}b=d+148|0;f=e|0;a[b]=a[f]|0;a[b+1|0]=a[f+1|0]|0;a[b+2|0]=a[f+2|0]|0;a[b+3|0]=a[f+3|0]|0;a[b+4|0]=a[f+4|0]|0;f=d+8|0;c[f>>2]=c[f>>2]|2;return}function BE(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;if((b|0)==0|(d|0)==0|(f|0)<1|(e|0)==0){g=0;return g|0}h=d+132|0;i=d+128|0;j=c[i>>2]|0;L4:do{if(((c[h>>2]|0)-j|0)<(f|0)){do{if((2147483647-j|0)>=(f|0)){k=j+f|0;if((k|0)<2147483639){l=k+8&-8}else{l=2147483647}k=d+136|0;m=AG(b,c[k>>2]|0,j,l-j|0,28)|0;if((m|0)==0){break}AB(b,c[k>>2]|0);c[k>>2]=m;m=d+232|0;c[m>>2]=c[m>>2]|16384;c[h>>2]=l;break L4}}while(0);Av(b,20360,1);g=1;return g|0}}while(0);if((f|0)<=0){g=0;return g|0}l=d+136|0;d=0;L18:while(1){h=c[i>>2]|0;j=c[l>>2]|0;m=j+(h*28|0)|0;k=e+(d*28|0)+4|0;n=c[k>>2]|0;do{if((n|0)!=0){o=e+(d*28|0)|0;p=c[o>>2]|0;if((p+1|0)>>>0>3>>>0){Av(b,20048,1);break}q=K0(n|0)|0;do{if((p|0)<1){r=0;s=0}else{t=c[e+(d*28|0)+20>>2]|0;if((t|0)==0){u=0}else{u=K0(t|0)|0}t=c[e+(d*28|0)+24>>2]|0;if((t|0)==0){r=0;s=u;break}r=K0(t|0)|0;s=u}}while(0);t=e+(d*28|0)+8|0;v=c[t>>2]|0;do{if((v|0)==0){w=21}else{if((a[v]|0)==0){w=21;break}x=K0(v|0)|0;c[m>>2]=p;y=x}}while(0);do{if((w|0)==21){w=0;v=m|0;if((p|0)>0){c[v>>2]=1;y=0;break}else{c[v>>2]=-1;y=0;break}}}while(0);p=AE(b,q+4+s+r+y|0)|0;v=j+(h*28|0)+4|0;c[v>>2]=p;if((p|0)==0){break L18}K2(p|0,c[k>>2]|0,q)|0;a[(c[v>>2]|0)+q|0]=0;if((c[o>>2]|0)>0){p=(c[v>>2]|0)+(q+1)|0;x=j+(h*28|0)+20|0;c[x>>2]=p;K2(p|0,c[e+(d*28|0)+20>>2]|0,s)|0;a[(c[x>>2]|0)+s|0]=0;p=(c[x>>2]|0)+(s+1)|0;x=j+(h*28|0)+24|0;c[x>>2]=p;K2(p|0,c[e+(d*28|0)+24>>2]|0,r)|0;a[(c[x>>2]|0)+r|0]=0;p=(c[x>>2]|0)+(r+1)|0;c[j+(h*28|0)+8>>2]=p;z=p}else{c[j+(h*28|0)+20>>2]=0;c[j+(h*28|0)+24>>2]=0;p=(c[v>>2]|0)+(q+1)|0;c[j+(h*28|0)+8>>2]=p;z=p}if((y|0)==0){A=z}else{K2(z|0,c[t>>2]|0,y)|0;A=c[j+(h*28|0)+8>>2]|0}a[A+y|0]=0;p=j+(h*28|0)+12|0;if((c[m>>2]|0)>0){c[p>>2]=0;c[j+(h*28|0)+16>>2]=y}else{c[p>>2]=y;c[j+(h*28|0)+16>>2]=0}c[i>>2]=(c[i>>2]|0)+1}}while(0);h=d+1|0;if((h|0)<(f|0)){d=h}else{g=0;w=40;break}}if((w|0)==40){return g|0}Av(b,19944,1);g=1;return g|0}function BF(f,g,h){f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0;if((f|0)==0|(g|0)==0|(h|0)==0){return}if((c[f+208>>2]&512|0)!=0){return}i=a[h+2|0]|0;do{if(!(i<<24>>24==0|(i&255)>>>0>12>>>0)){j=a[h+3|0]|0;if(j<<24>>24==0|(j&255)>>>0>31>>>0){break}if((d[h+4|0]|0)>>>0>23>>>0){break}if((d[h+5|0]|0)>>>0>59>>>0){break}if((d[h+6|0]|0)>>>0>60>>>0){break}j=h;k=g+140|0;l=j|0;m=j+4|0;j=e[m>>1]|e[m+2>>1]<<16;m=k|0;C=e[l>>1]|e[l+2>>1]<<16;b[m>>1]=C;b[m+2>>1]=C>>16;m=k+4|0;C=j;b[m>>1]=C;b[m+2>>1]=C>>16;m=g+8|0;c[m>>2]=c[m>>2]|512;return}}while(0);An(f,19800);return}function BG(f,g,h,i,j){f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;var k=0,l=0;if((f|0)==0|(g|0)==0){return}do{if((h|0)!=0){Ch(f,g,8192,0);k=AD(f,256)|0;c[g+156>>2]=k;c[f+528>>2]=k;if((i-1|0)>>>0>=256>>>0){break}K2(k|0,h|0,i)|0}}while(0);do{if((j|0)==0){b[g+22>>1]=i;if((i|0)!=0){break}return}else{h=1<<(d[g+24|0]|0);k=a[g+25|0]|0;do{if((k<<24>>24|0)==2){if((e[j+2>>1]|0|0)>(h|0)){l=11;break}if((e[j+4>>1]|0|0)>(h|0)){l=11;break}if((e[j+6>>1]|0|0)>(h|0)){l=11}}else if((k<<24>>24|0)==0){if((e[j+8>>1]|0|0)>(h|0)){l=11}}}while(0);if((l|0)==11){An(f,19640)}h=g+160|0;k=j|0;b[h>>1]=b[k>>1]|0;b[h+2>>1]=b[k+2>>1]|0;b[h+4>>1]=b[k+4>>1]|0;b[h+6>>1]=b[k+6>>1]|0;b[h+8>>1]=b[k+8>>1]|0;b[g+22>>1]=(i|0)==0?1:i&65535}}while(0);i=g+8|0;c[i>>2]=c[i>>2]|16;i=g+232|0;c[i>>2]=c[i>>2]|8192;return}function BH(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;if((b|0)==0|(d|0)==0|(f|0)<1|(e|0)==0){return}g=d+244|0;h=d+248|0;i=AG(b,c[g>>2]|0,c[h>>2]|0,f,16)|0;j=i;if((i|0)==0){Av(b,19408,1);return}AB(b,c[g>>2]|0);c[g>>2]=j;g=d+232|0;c[g>>2]=c[g>>2]|32;g=d+8|0;d=e;e=j+(c[h>>2]<<4)|0;j=f;L8:while(1){f=d|0;do{if((c[f>>2]|0)==0){k=7}else{i=d+8|0;if((c[i>>2]|0)==0){k=7;break}a[e+4|0]=a[d+4|0]|0;l=(K0(c[f>>2]|0)|0)+1|0;m=AE(b,l)|0;n=e|0;c[n>>2]=m;if((m|0)==0){break L8}K2(m|0,c[f>>2]|0,l)|0;l=d+12|0;m=AF(b,c[l>>2]|0,10)|0;c[e+8>>2]=m;if((m|0)==0){k=10;break L8}c[e+12>>2]=c[l>>2];K2(m|0,c[i>>2]|0,(c[l>>2]|0)*10|0)|0;c[g>>2]=c[g>>2]|8192;c[h>>2]=(c[h>>2]|0)+1;o=e+16|0}}while(0);if((k|0)==7){k=0;As(b,19232);o=e}f=j-1|0;if((f|0)==0){k=18;break}else{d=d+16|0;e=o;j=f}}if((k|0)==10){AB(b,c[n>>2]|0)}else if((k|0)==18){return}if((j|0)<=0){return}Av(b,19064,1);return}function BI(b,e,f,g){b=b|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;if((b|0)==0|(e|0)==0|(g|0)<1|(f|0)==0){return}h=e+236|0;i=e+240|0;j=AG(b,c[h>>2]|0,c[i>>2]|0,g,20)|0;k=j;if((j|0)==0){Av(b,18936,1);return}AB(b,c[h>>2]|0);c[h>>2]=k;h=e+232|0;c[h>>2]=c[h>>2]|512;if((g|0)<=0){return}h=b+208|0;e=f;f=g;g=k+((c[i>>2]|0)*20|0)|0;while(1){k=e;j=g;C=d[k]|d[k+1|0]<<8|d[k+2|0]<<16|d[k+3|0]<<24|0;a[j]=C;C=C>>8;a[j+1|0]=C;C=C>>8;a[j+2|0]=C;C=C>>8;a[j+3|0]=C;a[g+4|0]=0;j=a[e+16|0]&11;if((j|0)==0){if((c[h>>2]&32768|0)!=0){l=20;break}Ar(b,17528);k=c[h>>2]&11;if((k|0)==0){l=19;break}else{m=k}}else{m=j}while(1){j=m&-m;if((m|0)==(j|0)){break}else{m=j^m}}a[g+16|0]=m;j=e+12|0;k=c[j>>2]|0;do{if((k|0)==0){c[g+8>>2]=0;c[g+12>>2]=0;l=16}else{n=AE(b,k)|0;c[g+8>>2]=n;if((n|0)==0){Av(b,18736,1);o=g;break}else{K2(n|0,c[e+8>>2]|0,c[j>>2]|0)|0;c[g+12>>2]=c[j>>2];l=16;break}}}while(0);if((l|0)==16){l=0;c[i>>2]=(c[i>>2]|0)+1;o=g+20|0}j=f-1|0;if((j|0)>0){e=e+20|0;f=j;g=o}else{l=23;break}}if((l|0)==23){return}else if((l|0)==19){Ak(b,17304)}else if((l|0)==20){Ak(b,17304)}}function BJ(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0;f=Ce(a,b,d,e,0,0,0)|0;if((f|0)==0){return f|0}c[f+208>>2]=32768;c[f+796>>2]=8192;e=f+212|0;c[e>>2]=c[e>>2]|3145728;CR(f,0,0);return f|0}function BK(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;if((b|0)==0|(d|0)==0){return}AS(b,d);e=b+376|0;f=b+208|0;g=b+435|0;L4:while(1){h=AT(b)|0;i=c[e>>2]|0;j=(i|0)==1229209940;k=c[f>>2]|0;do{if(j){if((k&1|0)==0){l=5;break L4}if((a[g]|0)==3){if((k&2|0)==0){l=8;break L4}}if((k&8|0)==0){m=k}else{Au(b,21864);m=c[f>>2]|0}c[f>>2]=m|4}else{if((k&4|0)==0){break}c[f>>2]=k|8}}while(0);if((i|0)==1229472850){AV(b,d,h);continue}else if((i|0)==1229278788){AX(b,d,h);continue}else{k=Cj(b,i)|0;if((k|0)!=0){Bg(b,d,h,k);if((i|0)==1347179589){c[f>>2]=c[f>>2]|2;continue}else{if(j){l=21;break}else{continue}}}if((i|0)==1347179589){AW(b,d,h);continue}if(j){l=25;break}if((i|0)==1933723988){AZ(b,d,h);continue}else if((i|0)==1883789683){A7(b,d,h);continue}else if((i|0)==1866876531){A8(b,d,h);continue}else if((i|0)==1950701684){Bc(b,d,h);continue}else if((i|0)==1732332865){AY(b,d,h);continue}else if((i|0)==1749635924){A6(b,d,h);continue}else if((i|0)==1950960965){Bb(b,d,h);continue}else if((i|0)==1951551059){A4(b,d,h);continue}else if((i|0)==1883455820){A9(b,d,h);continue}else if((i|0)==2052348020){Bd(b,d,h);continue}else if((i|0)==1767135348){Bf(b,d,h);continue}else if((i|0)==1649100612){A5(b,d,h);continue}else if((i|0)==1665684045){A_(b,d,h);continue}else if((i|0)==1933787468){Ba(b,d,h);continue}else if((i|0)==1766015824){A0(b,d,h);continue}else if((i|0)==1934642260){A3(b,d,h);continue}else if((i|0)==1934772034){A$(b,d,h);continue}else{Bg(b,d,h,0);continue}}}if((l|0)==21){c[b+408>>2]=0;return}else if((l|0)==5){Aq(b,23816)}else if((l|0)==8){Aq(b,24736)}else if((l|0)==25){c[b+408>>2]=h;return}}function BL(a,b){a=a|0;b=b|0;if((a|0)==0){return}if((c[a+212>>2]&64|0)==0){Bo(a);BV(a,b);return}else{As(a,20224);return}}function BM(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;g=i;i=i+16|0;h=g|0;if((b|0)==0){i=g;return}if((c[b+212>>2]&64|0)==0){Bo(b)}j=c[b+368>>2]|0;c[h>>2]=j;a[h+8|0]=a[b+435|0]|0;a[h+9|0]=a[b+436|0]|0;a[h+10|0]=a[b+439|0]|0;k=a[b+438|0]|0;l=h+11|0;a[l]=k;m=k&255;if((k&255)>>>0>7>>>0){n=ag(m>>>3,j)|0}else{n=((ag(j,m)|0)+7|0)>>>3}m=h+4|0;c[m>>2]=n;j=b+372|0;k=c[j>>2]|0;o=b+432|0;L11:do{if((a[o]|0)!=0){if((c[b+216>>2]&2|0)==0){break}switch(d[b+433|0]|0){case 0:{if((k&7|0)==0){break L11}if((f|0)!=0){Bi(b,f,1)}Bn(b);i=g;return};case 3:{if((k&3|0)==0){if((c[b+348>>2]|0)>>>0>=3>>>0){break L11}}if((f|0)!=0){Bi(b,f,1)}Bn(b);i=g;return};case 5:{if((k&1|0)==0){if((c[b+348>>2]|0)>>>0>=2>>>0){break L11}}if((f|0)!=0){Bi(b,f,1)}Bn(b);i=g;return};case 1:{if((k&7|0)==0){if((c[b+348>>2]|0)>>>0>=5>>>0){break L11}}if((f|0)!=0){Bi(b,f,1)}Bn(b);i=g;return};case 4:{if((k&3|0)==2){break L11}do{if((f|0)!=0){if((k&2|0)==0){break}Bi(b,f,1)}}while(0);Bn(b);i=g;return};case 2:{if((k&7|0)==4){break L11}do{if((f|0)!=0){if((k&4|0)==0){break}Bi(b,f,1)}}while(0);Bn(b);i=g;return};default:{if((k&1|0)!=0){break L11}Bn(b);i=g;return}}}}while(0);if((c[b+208>>2]&4|0)==0){Ak(b,17080)}k=b+384|0;Bl(b,c[k>>2]|0,n+1|0);p=c[k>>2]|0;q=a[p]|0;r=q&255;do{if(q<<24>>24==0){s=p;t=n;u=b+380|0}else{if((q&255)>>>0<5>>>0){v=b+380|0;Bk(b,h,p+1|0,(c[v>>2]|0)+1|0,r);s=c[k>>2]|0;t=c[m>>2]|0;u=v;break}else{Ak(b,15712)}}}while(0);K2(c[u>>2]|0,s|0,t+1|0)|0;do{if((c[b+708>>2]&4|0)!=0){if((a[b+712|0]|0)!=64){break}B7(h,(c[k>>2]|0)+1|0)}}while(0);t=b+216|0;if((c[t>>2]|0)!=0){BW(b,h)}s=b+443|0;u=a[s]|0;m=a[l]|0;do{if(u<<24>>24==0){a[s]=m;if((m&255)>>>0<=(d[b+442|0]|0)>>>0){break}Ak(b,14592)}else{if(u<<24>>24==m<<24>>24){break}Ak(b,13632)}}while(0);do{if((a[o]|0)==0){w=66}else{m=c[t>>2]|0;if((m&2|0)==0){w=66;break}u=a[b+433|0]|0;if((u&255)>>>0<6>>>0){Bj(h,(c[k>>2]|0)+1|0,u&255,m)}if((f|0)!=0){Bi(b,f,1)}if((e|0)==0){break}Bi(b,e,0)}}while(0);do{if((w|0)==66){if((e|0)!=0){Bi(b,e,-1)}if((f|0)==0){break}Bi(b,f,-1)}}while(0);Bn(b);f=c[b+544>>2]|0;if((f|0)==0){i=g;return}hF[f&255](b,c[j>>2]|0,d[b+433|0]|0);i=g;return}function BN(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0;if((b|0)==0){return}e=b+212|0;do{if((c[e>>2]&64|0)==0){f=AK(b)|0;if((c[e>>2]&64|0)==0){Bo(b);g=f;break}else{As(b,18472);g=f;break}}else{do{if((a[b+432|0]|0)!=0){if((c[b+216>>2]&2|0)!=0){break}An(b,13168);c[b+356>>2]=c[b+352>>2]}}while(0);g=AK(b)|0}}while(0);e=c[b+352>>2]|0;if((g|0)<1|(e|0)==0){return}else{h=0}do{f=0;i=d;while(1){BM(b,c[i>>2]|0,0);j=f+1|0;if(j>>>0<e>>>0){f=j;i=i+4|0}else{break}}h=h+1|0;}while((h|0)<(g|0));return}function BO(b,d){b=b|0;d=d|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0;if((b|0)==0){return}if((Cj(b,1229209940)|0)==0){Bm(b)}do{if((a[b+435|0]|0)==3){if((c[b+424>>2]|0)<=(e[b+420>>1]|0)){break}Ao(b,25768)}}while(0);f=b+376|0;g=b+208|0;do{h=AT(b)|0;i=c[f>>2]|0;do{if((i|0)==1229278788){AX(b,d,h)}else if((i|0)==1229472850){AV(b,d,h)}else{j=Cj(b,i)|0;k=(i|0)==1229209940;if((j|0)!=0){do{if(k){if((h|0)==0){if((c[g>>2]&8192|0)==0){break}}Ao(b,21864)}}while(0);Bg(b,d,h,j);if((i|0)!=1347179589){break}c[g>>2]=c[g>>2]|2;break}if(k){if((h|0)==0){if((c[g>>2]&8192|0)!=0){l=21}}else{l=21}if((l|0)==21){l=0;Ao(b,21864)}AU(b,h)|0;break}if((i|0)==1950960965){Bb(b,d,h);break}else if((i|0)==1347179589){AW(b,d,h);break}else if((i|0)==1649100612){A5(b,d,h);break}else if((i|0)==1933723988){AZ(b,d,h);break}else if((i|0)==1934772034){A$(b,d,h);break}else if((i|0)==1933787468){Ba(b,d,h);break}else if((i|0)==1883789683){A7(b,d,h);break}else if((i|0)==1665684045){A_(b,d,h);break}else if((i|0)==1934642260){A3(b,d,h);break}else if((i|0)==1951551059){A4(b,d,h);break}else if((i|0)==1732332865){AY(b,d,h);break}else if((i|0)==1950701684){Bc(b,d,h);break}else if((i|0)==1749635924){A6(b,d,h);break}else if((i|0)==1766015824){A0(b,d,h);break}else if((i|0)==1767135348){Bf(b,d,h);break}else if((i|0)==2052348020){Bd(b,d,h);break}else if((i|0)==1866876531){A8(b,d,h);break}else if((i|0)==1883455820){A9(b,d,h);break}else{Bg(b,d,h,0);break}}}while(0);}while((c[g>>2]&16|0)==0);return}function BP(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;if((a|0)==0){return}e=c[a>>2]|0;if((e|0)==0){return}Cg(e,d);Cg(e,b);c[a>>2]=0;CH(e);AB(e,c[e+728>>2]|0);AB(e,c[e+804>>2]|0);AB(e,c[e+788>>2]|0);AB(e,c[e+612>>2]|0);AB(e,c[e+616>>2]|0);a=e+676|0;b=c[a>>2]|0;if((b&4096|0)==0){f=b}else{Ca(e,c[e+416>>2]|0);f=c[a>>2]|0}b=f&-4097;c[a>>2]=b;if((f&8192|0)==0){g=b}else{AB(e,c[e+528>>2]|0);g=c[a>>2]|0}c[a>>2]=g&-8193;Ab(e+224|0)|0;AB(e,c[e+568>>2]|0);AB(e,c[e+772>>2]|0);AB(e,c[e+696>>2]|0);AA(e);return}function BQ(a){a=a|0;var b=0,d=0;if((a|0)==0){return}b=a+212|0;d=c[b>>2]|0;if((d&64|0)==0){c[b>>2]=d|16384;d=a+216|0;c[d>>2]=c[d>>2]|67108864;return}else{As(a,22232);return}}function BR(a){a=a|0;var b=0,d=0;if((a|0)==0){return}b=a+212|0;d=c[b>>2]|0;if((d&64|0)==0){c[b>>2]=d|16384;d=a+216|0;c[d>>2]=c[d>>2]|33558528;return}else{As(a,22232);return}}function BS(a){a=a|0;var b=0,d=0;if((a|0)==0){return}b=a+212|0;d=c[b>>2]|0;if((d&64|0)==0){c[b>>2]=d|16384;d=a+216|0;c[d>>2]=c[d>>2]|4096;return}else{As(a,22232);return}}function BT(a){a=a|0;var b=0,d=0;if((a|0)==0){return}b=a+212|0;d=c[b>>2]|0;if((d&64|0)==0){c[b>>2]=d|16384;d=a+216|0;c[d>>2]=c[d>>2]|33558528;return}else{As(a,22232);return}}function BU(f){f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0;g=i;i=i+8|0;h=g|0;j=f+824|0;k=c[j>>2]|0;l=f+488|0;m=c[l>>2]|0;n=(m|0)!=0;do{if((k|0)==0){if(n){c[j>>2]=CC(m)|0;o=0;break}else{c[j>>2]=1e5;c[l>>2]=1e5;o=0;break}}else{if(!n){c[l>>2]=CC(k)|0;o=0;break}if((Cy(h,k,m,1e5)|0)==0){o=1;break}o=(CD(c[h>>2]|0)|0)!=0}}while(0);h=f+898|0;b[h>>1]=b[h>>1]|1;h=f+216|0;m=c[h>>2]|0;k=o?m|8192:m&-8193;c[h>>2]=k;if((k&262272|0)==262144){c[h>>2]=k&-41943297;k=f+212|0;c[k>>2]=c[k>>2]&-8193;b[f+428>>1]=0}k=(CD(c[l>>2]|0)|0)==0;m=c[h>>2]|0;if(k){k=m&-8388609;c[h>>2]=k;o=f+212|0;c[o>>2]=c[o>>2]&-8193;p=k}else{p=m}if((p&6291456|0)==0){q=p}else{Cx(f);q=c[h>>2]|0}do{if((q&256|0)==0){if((q&16512|0)!=16512){break}p=b[f+454>>1]|0;if(p<<16>>16!=(b[f+456>>1]|0)){break}if(p<<16>>16!=(b[f+458>>1]|0)){break}m=f+208|0;c[m>>2]=c[m>>2]|2048;b[f+460>>1]=p}else{if((a[f+435|0]&2)!=0){break}p=f+208|0;c[p>>2]=c[p>>2]|2048}}while(0);p=f+435|0;m=a[p]|0;do{if(m<<24>>24==3){k=b[f+428>>1]|0;L31:do{if(k<<16>>16==0){r=0;s=0;t=28}else{o=c[f+528>>2]|0;n=k&65535;u=0;v=0;while(1){w=a[o+v|0]|0;if(w<<24>>24==-1){x=u}else{if(w<<24>>24==0){x=1}else{y=q;z=k;break L31}}w=v+1|0;if((w|0)<(n|0)){u=x;v=w}else{r=x;s=k;t=28;break}}}}while(0);do{if((t|0)==28){k=q&-8388609;c[h>>2]=k;v=f+212|0;c[v>>2]=c[v>>2]&-8193;if((r|0)!=0){y=k;z=s;break}k=q&-8388993;c[h>>2]=k;y=k;z=s}}while(0);if((y&4352|0)!=4352){A=y;break}k=d[f+452|0]|0;v=c[f+416>>2]|0;b[f+454>>1]=d[v+(k*3|0)|0]|0;b[f+456>>1]=d[v+(k*3|0)+1|0]|0;b[f+458>>1]=d[v+(k*3|0)+2|0]|0;if((y&34078720|0)!=524288){A=y;break}k=z&65535;if(z<<16>>16==0){A=y;break}v=c[f+528>>2]|0;u=0;do{n=v+u|0;a[n]=~a[n];u=u+1|0;}while((u|0)<(k|0));A=c[h>>2]|0}else{do{if((m&4)==0){k=(b[f+428>>1]|0)==0;u=q&-8388609;c[h>>2]=u;v=f+212|0;c[v>>2]=c[v>>2]&-8193;if(!k){B=u;break}u=q&-8388993;c[h>>2]=u;B=u}else{B=q}}while(0);if((B&4352|0)!=4352){A=B;break}if((m&2)!=0){A=B;break}u=b[f+460>>1]|0;k=b[f+540>>1]|0;v=d[f+436|0]|0;if((v|0)==1){C=k*255&65535;D=u*255&65535}else if((v|0)==2){C=k*85&65535;D=u*85&65535}else if((v|0)==4){C=k*17&65535;D=u*17&65535}else{C=k;D=u}b[f+458>>1]=D;b[f+456>>1]=D;b[f+454>>1]=D;if((B&33554432|0)!=0){A=B;break}b[f+538>>1]=C;b[f+536>>1]=C;b[f+534>>1]=C;A=B}}while(0);do{if((A&896|0)==640){if((a[f+436|0]|0)==16){break}B=f+454|0;b[B>>1]=(((e[B>>1]|0)*255|0)+32895|0)>>>16;B=f+456|0;b[B>>1]=(((e[B>>1]|0)*255|0)+32895|0)>>>16;B=f+458|0;b[B>>1]=(((e[B>>1]|0)*255|0)+32895|0)>>>16;B=f+460|0;b[B>>1]=(((e[B>>1]|0)*255|0)+32895|0)>>>16}}while(0);do{if((A&128|0)!=0&(A&67109888|0)!=0&(A&256|0)==0){if((a[f+436|0]|0)!=16){break}B=f+454|0;b[B>>1]=(b[B>>1]|0)*257;B=f+456|0;b[B>>1]=(b[B>>1]|0)*257;B=f+458|0;b[B>>1]=(b[B>>1]|0)*257;B=f+460|0;b[B>>1]=(b[B>>1]|0)*257}}while(0);B=f+462|0;C=f+452|0;b[B>>1]=b[C>>1]|0;b[B+2>>1]=b[C+2>>1]|0;b[B+4>>1]=b[C+4>>1]|0;b[B+6>>1]=b[C+6>>1]|0;b[B+8>>1]=b[C+8>>1]|0;L70:do{if((A&8192|0)==0){if((A&6291456|0)==0){E=A}else{if((CD(c[j>>2]|0)|0)!=0){t=66;break}if((CD(c[l>>2]|0)|0)!=0){t=66;break}E=c[h>>2]|0}do{if((E&128|0)!=0){if((CD(c[j>>2]|0)|0)!=0){t=66;break L70}if((CD(c[l>>2]|0)|0)!=0){t=66;break L70}if((a[f+446|0]|0)!=3){break}if((CD(c[f+448>>2]|0)|0)!=0){t=66;break L70}}}while(0);C=c[h>>2]|0;if((C&8388608|0)==0){F=C}else{if((CD(c[l>>2]|0)|0)!=0){t=66;break}F=c[h>>2]|0}if((F&128|0)==0){G=F;break}if((a[p]|0)!=3){G=F;break}C=b[f+428>>1]|0;B=C&65535;D=c[f+416>>2]|0;m=b[f+454>>1]|0;q=m&255;y=b[f+456>>1]|0;z=y&255;s=b[f+458>>1]|0;r=s&255;if(C<<16>>16==0){H=F}else{C=f+528|0;x=m&255;m=y&255;y=s&255;s=0;do{u=a[(c[C>>2]|0)+s|0]|0;if((u<<24>>24|0)==0){a[D+(s*3|0)|0]=q;a[D+(s*3|0)+1|0]=z;a[D+(s*3|0)+2|0]=r}else if((u<<24>>24|0)!=(-1|0)){k=D+(s*3|0)|0;v=u&255;u=(ag(v^255,x)|0)+128+(ag(d[k]|0,v)|0)|0;a[k]=((u>>>8&255)+u|0)>>>8;u=D+(s*3|0)+1|0;k=d[(c[C>>2]|0)+s|0]|0;v=(ag(k,d[u]|0)|0)+128+(ag(k^255,m)|0)|0;a[u]=((v>>>8&255)+v|0)>>>8;v=D+(s*3|0)+2|0;u=d[(c[C>>2]|0)+s|0]|0;k=(ag(u,d[v]|0)|0)+128+(ag(u^255,y)|0)|0;a[v]=((k>>>8&255)+k|0)>>>8}s=s+1|0;}while((s|0)<(B|0));H=c[h>>2]|0}B=H&-129;c[h>>2]=B;G=B}else{t=66}}while(0);do{if((t|0)==66){CI(f,d[f+436|0]|0);H=c[h>>2]|0;if((H&128|0)==0){if((a[p]|0)!=3){G=H;break}if(!((H&4096|0)==0|(H&6291456|0)==0)){G=H;break}F=c[f+416>>2]|0;E=b[f+420>>1]|0;A=E&65535;if(E<<16>>16==0){I=H}else{E=f+492|0;B=0;do{s=F+(B*3|0)|0;a[s]=a[(c[E>>2]|0)+(d[s]|0)|0]|0;s=F+(B*3|0)+1|0;a[s]=a[(c[E>>2]|0)+(d[s]|0)|0]|0;s=F+(B*3|0)+2|0;a[s]=a[(c[E>>2]|0)+(d[s]|0)|0]|0;B=B+1|0;}while((B|0)<(A|0));I=c[h>>2]|0}A=I&-8193;c[h>>2]=A;G=A;break}if((H&6291456|0)!=0){An(f,24216)}if((a[p]|0)!=3){A=f+446|0;B=d[A]|0;if((B|0)==1){J=c[l>>2]|0;K=1e5}else if((B|0)==2){E=CC(c[j>>2]|0)|0;J=E;K=CE(c[j>>2]|0,c[l>>2]|0)|0}else if((B|0)==3){B=f+448|0;E=CC(c[B>>2]|0)|0;J=E;K=CE(c[B>>2]|0,c[l>>2]|0)|0}else{Ak(f,23920)}B=CD(J)|0;E=CD(K)|0;F=(B|0)!=0;if(F){b[f+470>>1]=CG(f,e[f+460>>1]|0,J)|0}B=(E|0)!=0;if(B){E=f+460|0;b[E>>1]=CG(f,e[E>>1]|0,K)|0}E=f+454|0;s=b[E>>1]|0;y=f+456|0;do{if(s<<16>>16==(b[y>>1]|0)){C=f+458|0;if(s<<16>>16!=(b[C>>1]|0)){t=104;break}if(s<<16>>16!=(b[f+460>>1]|0)){t=104;break}D=b[f+470>>1]|0;b[f+468>>1]=D;b[f+466>>1]=D;b[f+464>>1]=D;b[C>>1]=s;b[y>>1]=s;b[E>>1]=s}else{t=104}}while(0);do{if((t|0)==104){if(F){b[f+464>>1]=CG(f,s&65535,J)|0;b[f+466>>1]=CG(f,e[y>>1]|0,J)|0;b[f+468>>1]=CG(f,e[f+458>>1]|0,J)|0}if(!B){break}b[E>>1]=CG(f,e[E>>1]|0,K)|0;b[y>>1]=CG(f,e[y>>1]|0,K)|0;H=f+458|0;b[H>>1]=CG(f,e[H>>1]|0,K)|0}}while(0);a[A]=1;G=c[h>>2]|0;break}y=c[f+416>>2]|0;E=b[f+420>>1]|0;B=E&65535;s=a[f+446|0]|0;do{if(s<<24>>24==2){F=e[f+454>>1]|0;H=c[f+492>>2]|0;C=e[f+456>>1]|0;D=e[f+458>>1]|0;m=c[f+504>>2]|0;L=a[H+D|0]|0;M=a[H+C|0]|0;N=a[H+F|0]|0;O=a[m+D|0]|0;P=a[m+C|0]|0;Q=a[m+F|0]|0}else{F=s&255;if((F|0)==2){m=CC(c[j>>2]|0)|0;R=m;S=CE(c[j>>2]|0,c[l>>2]|0)|0}else if((F|0)==3){m=f+448|0;C=CC(c[m>>2]|0)|0;R=C;S=CE(c[m>>2]|0,c[l>>2]|0)|0}else if((F|0)==1){R=c[l>>2]|0;S=1e5}else{R=1e5;S=1e5}F=(CD(S)|0)==0;m=f+454|0;C=b[m>>1]|0;if(F){T=b[f+458>>1]&255;U=b[f+456>>1]&255;V=C&255}else{F=CF(C&65535,S)|0;C=CF(e[f+456>>1]|0,S)|0;T=CF(e[f+458>>1]|0,S)|0;U=C;V=F}F=(CD(R)|0)==0;C=b[m>>1]|0;if(F){L=T;M=U;N=V;O=b[f+458>>1]&255;P=b[f+456>>1]&255;Q=C&255;break}else{F=CF(C&65535,R)|0;C=CF(e[f+456>>1]|0,R)|0;L=T;M=U;N=V;O=CF(e[f+458>>1]|0,R)|0;P=C;Q=F;break}}}while(0);if(E<<16>>16!=0){s=f+428|0;A=f+528|0;F=f+504|0;C=Q&255;m=f+500|0;D=P&255;H=O&255;x=f+492|0;r=0;do{do{if((r|0)<(e[s>>1]|0)){z=a[(c[A>>2]|0)+r|0]|0;if(z<<24>>24==-1){t=89;break}q=y+(r*3|0)|0;if(z<<24>>24==0){a[q]=N;a[y+(r*3|0)+1|0]=M;a[y+(r*3|0)+2|0]=L;break}else{k=z&255;z=(ag(k^255,C)|0)+128+(ag(d[(c[F>>2]|0)+(d[q]|0)|0]|0,k)|0)|0;a[q]=a[(c[m>>2]|0)+(((z>>>8&255)+z|0)>>>8&255)|0]|0;z=y+(r*3|0)+1|0;q=d[(c[A>>2]|0)+r|0]|0;k=(ag(q,d[(c[F>>2]|0)+(d[z]|0)|0]|0)|0)+128+(ag(q^255,D)|0)|0;a[z]=a[(c[m>>2]|0)+(((k>>>8&255)+k|0)>>>8&255)|0]|0;k=y+(r*3|0)+2|0;z=d[(c[A>>2]|0)+r|0]|0;q=(ag(z,d[(c[F>>2]|0)+(d[k]|0)|0]|0)|0)+128+(ag(z^255,H)|0)|0;a[k]=a[(c[m>>2]|0)+(((q>>>8&255)+q|0)>>>8&255)|0]|0;break}}else{t=89}}while(0);if((t|0)==89){t=0;q=y+(r*3|0)|0;a[q]=a[(c[x>>2]|0)+(d[q]|0)|0]|0;q=y+(r*3|0)+1|0;a[q]=a[(c[x>>2]|0)+(d[q]|0)|0]|0;q=y+(r*3|0)+2|0;a[q]=a[(c[x>>2]|0)+(d[q]|0)|0]|0}r=r+1|0;}while((r|0)<(B|0))}B=c[h>>2]&-8321;c[h>>2]=B;G=B}}while(0);if((G&4104|0)!=8){i=g;return}if((a[p]|0)!=3){i=g;return}p=b[f+420>>1]|0;t=p&65535;L=a[f+516|0]|0;M=8-(L&255)|0;c[h>>2]=G&-9;if(!(L<<24>>24==0|(M|0)<1|p<<16>>16==0)){L=f+416|0;G=0;do{h=(c[L>>2]|0)+(G*3|0)|0;a[h]=(d[h]|0)>>>(M>>>0);G=G+1|0;}while((G|0)<(t|0))}G=a[f+517|0]|0;M=8-(G&255)|0;if(!(G<<24>>24==0|(M|0)<1|p<<16>>16==0)){G=f+416|0;L=0;do{h=(c[G>>2]|0)+(L*3|0)+1|0;a[h]=(d[h]|0)>>>(M>>>0);L=L+1|0;}while((L|0)<(t|0))}L=a[f+518|0]|0;M=8-(L&255)|0;if(L<<24>>24==0|(M|0)<1|p<<16>>16==0){i=g;return}p=f+416|0;f=0;do{L=(c[p>>2]|0)+(f*3|0)+2|0;a[L]=(d[L]|0)>>>(M>>>0);f=f+1|0;}while((f|0)<(t|0));i=g;return}function BV(e,f){e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;g=c[e+216>>2]|0;do{if((g&4096|0)!=0){h=f+25|0;i=a[h]|0;j=(b[e+428>>1]|0)==0;if(i<<24>>24==3){a[h]=j?2:6;a[f+24|0]=8;b[f+22>>1]=0;break}do{if(!j){if((g&33554432|0)==0){break}a[h]=i|4}}while(0);i=f+24|0;if((d[i]|0)>>>0<8>>>0){a[i]=8}b[f+22>>1]=0}}while(0);if((g&128|0)!=0){i=f+170|0;h=e+452|0;b[i>>1]=b[h>>1]|0;b[i+2>>1]=b[h+2>>1]|0;b[i+4>>1]=b[h+4>>1]|0;b[i+6>>1]=b[h+6>>1]|0;b[i+8>>1]=b[h+8>>1]|0}c[f+40>>2]=c[e+824>>2];h=f+24|0;i=a[h]|0;do{if(i<<24>>24==16){if((g&67108864|0)==0){k=16}else{a[h]=8;k=8}if((g&1024|0)==0){l=k;break}a[h]=8;l=8}else{l=i}}while(0);if((g&16384|0)!=0){i=f+25|0;a[i]=a[i]|2}if((g&6291456|0)!=0){i=f+25|0;a[i]=a[i]&-3}do{if((g&64|0)==0){m=l}else{i=f+25|0;k=a[i]|0;if(!((k<<24>>24|0)==2|(k<<24>>24|0)==6)){m=l;break}if(!((c[e+612>>2]|0)!=0&l<<24>>24==8)){m=l;break}a[i]=3;m=8}}while(0);do{if((g&512|0)!=0&m<<24>>24==8){if((a[f+25|0]|0)==3){n=8;break}a[h]=16;n=16}else{n=m}}while(0);if((g&4|0)!=0&(n&255)>>>0<8>>>0){a[h]=8;o=8}else{o=n}n=f+25|0;m=a[n]|0;do{if(m<<24>>24==3){a[f+29|0]=1;p=1}else{l=f+29|0;if((m&2)==0){a[l]=1;p=1;break}else{a[l]=3;p=3;break}}}while(0);if((g&262144|0)==0){q=m}else{l=m&-5;a[n]=l;b[f+22>>1]=0;q=l}if((q&4)==0){r=p}else{l=p+1&255;a[f+29|0]=l;r=l}do{if((g&32768|0)==0){s=r}else{if(!((q<<24>>24|0)==2|(q<<24>>24|0)==0)){s=r;break}l=r+1&255;a[f+29|0]=l;if((g&16777216|0)==0){s=l;break}a[n]=q|4;s=l}}while(0);do{if((g&1048576|0)==0){t=s;u=o}else{q=a[e+204|0]|0;if((o&255)>>>0<(q&255)>>>0){a[h]=q;v=q}else{v=o}q=a[e+205|0]|0;if((s&255)>>>0>=(q&255)>>>0){t=s;u=v;break}a[f+29|0]=q;t=q;u=v}}while(0);v=ag(u,t)|0;a[f+30|0]=v;t=v&255;u=c[f>>2]|0;if((v&255)>>>0>7>>>0){w=ag(t>>>3,u)|0;x=f+12|0;c[x>>2]=w;y=e+404|0;c[y>>2]=w;return}else{w=((ag(t,u)|0)+7|0)>>>3;x=f+12|0;c[x>>2]=w;y=e+404|0;c[y>>2]=w;return}}function BW(f,g){f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0;h=f+384|0;i=c[h>>2]|0;if((i|0)==0){Ak(f,23648)}j=f+212|0;if((c[j>>2]&16448|0)==16384){Ak(f,23440)}k=f+216|0;l=c[k>>2]|0;L7:do{if((l&4096|0)!=0){if((a[g+8|0]|0)==3){BX(g,i+1|0,c[f+416>>2]|0,c[f+528>>2]|0,e[f+428>>1]|0);break}do{if((b[f+428>>1]|0)!=0){if((l&33554432|0)==0){break}BY(g,i+1|0,f+532|0);break L7}}while(0);BY(g,i+1|0,0)}}while(0);i=c[k>>2]|0;do{if((i&262272|0)==262144){l=a[g+8|0]|0;if(!((l<<24>>24|0)==6|(l<<24>>24|0)==4)){m=i;break}AP(g,(c[h>>2]|0)+1|0,0);m=c[k>>2]|0}else{m=i}}while(0);do{if((m&6291456|0)==0){n=m}else{if((BZ(f,g,(c[h>>2]|0)+1|0)|0)==0){n=c[k>>2]|0;break}a[f+700|0]=1;i=c[k>>2]|0;if((i&6291456|0)==4194304){An(f,23192);o=c[k>>2]|0}else{o=i}if((o&6291456|0)!=2097152){n=o;break}Ak(f,23192)}}while(0);do{if((n&16384|0)==0){p=n}else{if((c[f+208>>2]&2048|0)!=0){p=n;break}B_(g,(c[h>>2]|0)+1|0);p=c[k>>2]|0}}while(0);if((p&128|0)==0){q=p}else{B$(g,(c[h>>2]|0)+1|0,f);q=c[k>>2]|0}do{if((q&6299648|0)==8192){if((q&128|0)==0){r=a[f+435|0]|0}else{if((b[f+428>>1]|0)!=0){s=q;break}p=a[f+435|0]|0;if((p&4)==0){r=p}else{s=q;break}}if(r<<24>>24==3){s=q;break}B0(g,(c[h>>2]|0)+1|0,f);s=c[k>>2]|0}else{s=q}}while(0);do{if((s&262272|0)==262272){q=a[g+8|0]|0;if(!((q<<24>>24|0)==6|(q<<24>>24|0)==4)){t=s;break}AP(g,(c[h>>2]|0)+1|0,0);t=c[k>>2]|0}else{t=s}}while(0);do{if((t&8388608|0)==0){u=t}else{if((a[g+8|0]&4)==0){u=t;break}B1(g,(c[h>>2]|0)+1|0,f);u=c[k>>2]|0}}while(0);do{if((u&67108864|0)==0){v=u}else{t=c[h>>2]|0;s=t+1|0;q=g+9|0;if((a[q]|0)!=16){v=u;break}r=g+4|0;p=c[r>>2]|0;n=t+(p+1)|0;if((p|0)>0){p=s;t=s;while(1){s=d[t]|0;o=t+2|0;a[p]=(((((d[t+1|0]|0)-s|0)*65535|0)+8388480|0)>>>24)+s;if(o>>>0<n>>>0){p=p+1|0;t=o}else{break}}}a[q]=8;t=a[g+10|0]|0;a[g+11|0]=t<<3;c[r>>2]=ag(t&255,c[g>>2]|0)|0;v=c[k>>2]|0}}while(0);do{if((v&1024|0)==0){w=v}else{u=c[h>>2]|0;t=u+1|0;p=g+9|0;if((a[p]|0)!=16){w=v;break}n=g+4|0;o=c[n>>2]|0;s=u+(o+1)|0;if((o|0)>0){o=t;u=t;while(1){a[o]=a[u]|0;t=u+2|0;if(t>>>0<s>>>0){o=o+1|0;u=t}else{break}}}a[p]=8;u=a[g+10|0]|0;a[g+11|0]=u<<3;c[n>>2]=ag(u&255,c[g>>2]|0)|0;w=c[k>>2]|0}}while(0);do{if((w&64|0)==0){x=w}else{B2(g,(c[h>>2]|0)+1|0,c[f+612>>2]|0,c[f+616>>2]|0);if((c[g+4>>2]|0)==0){Ak(f,22936)}else{x=c[k>>2]|0;break}}}while(0);do{if((x&512|0)==0){y=x}else{w=c[h>>2]|0;v=g+9|0;if((a[v]|0)!=8){y=x;break}if((a[g+8|0]|0)==3){y=x;break}u=g+4|0;o=c[u>>2]|0;s=o<<1;if((s|0)>(o|0)){r=w+(o+1)|0;q=w+(s|1)|0;do{r=r-1|0;s=a[r]|0;a[q-1|0]=s;q=q-2|0;a[q]=s;}while(q>>>0>r>>>0);z=c[u>>2]|0}else{z=o}c[u>>2]=z<<1;a[v]=16;a[g+11|0]=a[g+10|0]<<4;y=c[k>>2]|0}}while(0);do{if((y&16384|0)==0){A=y}else{if((c[f+208>>2]&2048|0)==0){A=y;break}B_(g,(c[h>>2]|0)+1|0);A=c[k>>2]|0}}while(0);if((A&32|0)==0){B=A}else{AM(g,(c[h>>2]|0)+1|0);B=c[k>>2]|0}if((B&8|0)==0){C=B}else{B3(g,(c[h>>2]|0)+1|0,f+521|0);C=c[k>>2]|0}if((C&4|0)!=0){B4(g,(c[h>>2]|0)+1|0)}C=g+8|0;do{if((a[C]|0)==3){if((c[f+424>>2]|0)<=-1){break}AR(f,g)}}while(0);B=c[k>>2]|0;if((B&1|0)==0){D=B}else{AQ(g,(c[h>>2]|0)+1|0);D=c[k>>2]|0}if((D&65536|0)==0){E=D}else{AO(g,(c[h>>2]|0)+1|0);E=c[k>>2]|0}if((E&32768|0)==0){F=E}else{B5(g,(c[h>>2]|0)+1|0,e[f+444>>1]|0,c[j>>2]|0);F=c[k>>2]|0}do{if((F&524288|0)!=0){j=c[h>>2]|0;E=c[g>>2]|0;D=a[C]|0;if((D<<24>>24|0)==6){B=j+((c[g+4>>2]|0)+1)|0;A=(E|0)==0;if((a[g+9|0]|0)==8){if(A){break}else{G=B;H=0}while(1){y=G-1|0;a[y]=~a[y];y=H+1|0;if(y>>>0<E>>>0){G=G-4|0;H=y}else{break}}}else{if(A){break}else{I=B;J=0}while(1){v=I-1|0;a[v]=~a[v];v=I-2|0;a[v]=~a[v];v=J+1|0;if(v>>>0<E>>>0){I=I-8|0;J=v}else{break}}}}else if((D<<24>>24|0)==4){B=j+((c[g+4>>2]|0)+1)|0;A=(E|0)==0;if((a[g+9|0]|0)==8){if(A){break}else{K=B;L=0}while(1){v=K-1|0;a[v]=~a[v];v=L+1|0;if(v>>>0<E>>>0){K=K-2|0;L=v}else{break}}}else{if(A){break}else{M=B;N=0}while(1){j=M-1|0;a[j]=~a[j];j=M-2|0;a[j]=~a[j];j=N+1|0;if(j>>>0<E>>>0){M=M-4|0;N=j}else{break}}}}else{break}}}while(0);N=c[k>>2]|0;if((N&131072|0)==0){O=N}else{B6(g,(c[h>>2]|0)+1|0);O=c[k>>2]|0}if((O&16|0)==0){P=O}else{AN(g,(c[h>>2]|0)+1|0);P=c[k>>2]|0}if((P&1048576|0)==0){return}P=c[f+192>>2]|0;if((P|0)!=0){hF[P&255](f,g,(c[h>>2]|0)+1|0)}h=a[f+204|0]|0;if(h<<24>>24!=0){a[g+9|0]=h}h=a[f+205|0]|0;f=g+10|0;if(h<<24>>24==0){Q=a[f]|0}else{a[f]=h;Q=h}h=ag(Q,a[g+9|0]|0)|0;a[g+11|0]=h;Q=h&255;f=c[g>>2]|0;if((h&255)>>>0>7>>>0){R=ag(Q>>>3,f)|0}else{R=((ag(Q,f)|0)+7|0)>>>3}c[g+4>>2]=R;return}function BX(b,e,f,g,h){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;i=c[b>>2]|0;j=b+8|0;if((a[j]|0)!=3){return}k=b+9|0;l=a[k]|0;do{if((l&255)>>>0<8>>>0){m=l&255;do{if((m|0)==1){n=i-1|0;if((i|0)==0){break}o=e+(n>>>3)|0;p=e+n|0;n=0;q=i+7&7^7;while(1){a[p]=(d[o]&1<<q|0)!=0|0;r=(q|0)==7;s=n+1|0;if(s>>>0<i>>>0){o=r?o-1|0:o;p=p-1|0;n=s;q=r?0:q+1|0}else{break}}}else if((m|0)==4){q=i-1|0;if((i|0)==0){break}n=e+(q>>>1)|0;p=e+q|0;q=0;o=i<<2&4;while(1){a[p]=(d[n]|0)>>>(o>>>0)&15;r=(o|0)==4;s=q+1|0;if(s>>>0<i>>>0){n=r?n-1|0:n;p=p-1|0;q=s;o=r?0:o+4|0}else{break}}}else if((m|0)==2){o=i-1|0;if((i|0)==0){break}q=e+(o>>>2)|0;p=e+o|0;o=0;n=(i<<1)+6&6^6;while(1){a[p]=(d[q]|0)>>>(n>>>0)&3;r=(n|0)==6;s=o+1|0;if(s>>>0<i>>>0){q=r?q-1|0:q;p=p-1|0;o=s;n=r?0:n+2|0}else{break}}}}while(0);a[k]=8;a[b+11|0]=8;c[b+4>>2]=i}else{if(l<<24>>24==8){break}return}}while(0);l=e+(i-1)|0;if((h|0)<=0){m=i*3|0;if((i|0)!=0){n=l;o=e+(m-1)|0;p=0;while(1){a[o]=a[f+((d[n]|0)*3|0)+2|0]|0;a[o-1|0]=a[f+((d[n]|0)*3|0)+1|0]|0;a[o-2|0]=a[f+((d[n]|0)*3|0)|0]|0;q=p+1|0;if(q>>>0<i>>>0){n=n-1|0;o=o-3|0;p=q}else{break}}}a[k]=8;a[b+11|0]=24;c[b+4>>2]=m;a[j]=2;a[b+10|0]=3;return}m=i<<2;if((i|0)!=0){p=l;l=e+(m-1)|0;e=0;while(1){o=d[p]|0;if((o|0)<(h|0)){t=a[g+o|0]|0}else{t=-1}a[l]=t;a[l-1|0]=a[f+((d[p]|0)*3|0)+2|0]|0;a[l-2|0]=a[f+((d[p]|0)*3|0)+1|0]|0;a[l-3|0]=a[f+((d[p]|0)*3|0)|0]|0;o=e+1|0;if(o>>>0<i>>>0){p=p-1|0;l=l-4|0;e=o}else{break}}}a[k]=8;a[b+11|0]=32;c[b+4>>2]=m;a[j]=6;a[b+10|0]=4;return}
function BY(f,g,h){f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0;i=c[f>>2]|0;j=f+8|0;k=a[j]|0;if((k<<24>>24|0)==2){if((h|0)==0){return}l=f+9|0;m=a[l]|0;do{if((m<<24>>24|0)==8){if((i|0)==0){break}n=b[h+2>>1]&255;o=b[h+4>>1]&255;p=b[h+6>>1]&255;q=0;r=g+((i<<2)-1)|0;s=g+((c[f+4>>2]|0)-1)|0;while(1){t=s-2|0;u=s-1|0;do{if((d[t]|0)==(n|0)){if((d[u]|0)!=(o|0)){v=39;break}if((d[s]|0)==(p|0)){w=0}else{v=39}}else{v=39}}while(0);if((v|0)==39){v=0;w=-1}a[r]=w;a[r-1|0]=a[s]|0;a[r-2|0]=a[u]|0;a[r-3|0]=a[t]|0;x=q+1|0;if(x>>>0<i>>>0){q=x;r=r-4|0;s=s-3|0}else{break}}}else if((m<<24>>24|0)==16){s=b[h+2>>1]|0;r=b[h+4>>1]|0;q=b[h+6>>1]|0;if((i|0)==0){break}p=(s&65535)>>>8&65535;o=s&255;s=(r&65535)>>>8&65535;n=r&255;r=(q&65535)>>>8&65535;x=q&255;q=0;y=g+((i<<3)-1)|0;z=g+((c[f+4>>2]|0)-1)|0;while(1){A=z-5|0;B=z-4|0;do{if((d[A]|0)==(p|0)){if((d[B]|0)!=(o|0)){v=50;break}C=z-3|0;if((d[C]|0)!=(s|0)){v=50;break}D=z-2|0;if((d[D]|0)!=(n|0)){v=50;break}E=z-1|0;if((d[E]|0)!=(r|0)){v=50;break}if((d[z]|0)!=(x|0)){v=50;break}a[y]=0;a[y-1|0]=0;F=E;G=D;H=C}else{v=50}}while(0);if((v|0)==50){v=0;a[y]=-1;a[y-1|0]=-1;F=z-1|0;G=z-2|0;H=z-3|0}a[y-2|0]=a[z]|0;a[y-3|0]=a[F]|0;a[y-4|0]=a[G]|0;a[y-5|0]=a[H]|0;a[y-6|0]=a[B]|0;a[y-7|0]=a[A]|0;t=q+1|0;if(t>>>0<i>>>0){q=t;y=y-8|0;z=z-6|0}else{break}}}}while(0);a[j]=6;a[f+10|0]=4;H=a[l]<<2;a[f+11|0]=H;l=H&255;if((H&255)>>>0>7>>>0){I=ag(l>>>3,i)|0}else{I=((ag(l,i)|0)+7|0)>>>3}c[f+4>>2]=I;return}else if((k<<24>>24|0)==0){k=(h|0)!=0;if(k){J=e[h+8>>1]|0}else{J=0}h=f+9|0;I=a[h]|0;l=J&255;H=J>>>8&255;if((I&255)>>>0<8>>>0){G=I&255;do{if((G|0)==4){F=(J&15)*17|0;m=i-1|0;w=F&255;z=F>>>8&255;if((i|0)==0){K=z;L=w;break}F=0;y=g+m|0;q=g+(m>>>1)|0;m=i<<2&4;while(1){x=(d[q]|0)>>>(m>>>0)&15;a[y]=x<<4|x;x=(m|0)==4;r=F+1|0;if(r>>>0<i>>>0){F=r;y=y-1|0;q=x?q-1|0:q;m=x?0:4}else{K=z;L=w;break}}}else if((G|0)==2){w=(J&3)*85|0;z=i-1|0;m=w&255;q=w>>>8&255;if((i|0)==0){K=q;L=m;break}w=0;y=g+z|0;F=g+(z>>>2)|0;z=(i<<1)+6&6^6;while(1){x=(d[F]|0)>>>(z>>>0)&3;a[y]=x<<2|x|x<<4|x<<6;x=(z|0)==6;r=w+1|0;if(r>>>0<i>>>0){w=r;y=y-1|0;F=x?F-1|0:F;z=x?0:z+2|0}else{K=q;L=m;break}}}else if((G|0)==1){m=i-1|0;q=-(J&1)&255;if((i|0)==0){K=0;L=q;break}z=0;F=g+m|0;y=g+(m>>>3)|0;m=i+7&7^7;while(1){a[F]=((d[y]&1<<m|0)!=0)<<31>>31;w=(m|0)==7;x=z+1|0;if(x>>>0<i>>>0){z=x;F=F-1|0;y=w?y-1|0:y;m=w?0:m+1|0}else{K=0;L=q;break}}}else{K=H;L=l}}while(0);a[h]=8;a[f+11|0]=8;c[f+4>>2]=i;M=K;N=L;O=8}else{M=H;N=l;O=I}if(!k){return}do{if((O<<24>>24|0)==8){if((i|0)==0){break}k=0;I=g+((i<<1)-1)|0;l=g+(i-1)|0;while(1){a[I]=((a[l]|0)!=N<<24>>24)<<31>>31;a[I-1|0]=a[l]|0;H=k+1|0;if(H>>>0<i>>>0){k=H;I=I-2|0;l=l-1|0}else{break}}}else if((O<<24>>24|0)==16){l=c[f+4>>2]|0;if((i|0)==0){break}I=0;k=g+((l<<1)-1)|0;H=g+(l-1)|0;while(1){l=H-1|0;do{if((a[l]|0)==M<<24>>24){if((a[H]|0)!=N<<24>>24){v=26;break}a[k]=0;a[k-1|0]=0}else{v=26}}while(0);if((v|0)==26){v=0;a[k]=-1;a[k-1|0]=-1}a[k-2|0]=a[H]|0;a[k-3|0]=a[l]|0;A=I+1|0;if(A>>>0<i>>>0){I=A;k=k-4|0;H=H-2|0}else{break}}}}while(0);a[j]=4;a[f+10|0]=2;j=a[h]<<1;a[f+11|0]=j;h=j&255;if((j&255)>>>0>7>>>0){P=ag(h>>>3,i)|0}else{P=((ag(h,i)|0)+7|0)>>>3}c[f+4>>2]=P;return}else{return}}function BZ(f,g,h){f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0;i=g+8|0;j=d[i]|0;if((j&3|0)!=2){k=0;return k|0}l=e[f+702>>1]|0;m=e[f+704>>1]|0;n=32768-l-m|0;o=c[g>>2]|0;p=(j&4|0)!=0;j=g+9|0;L4:do{if((a[j]|0)==8){q=f+500|0;do{if((c[q>>2]|0)!=0){r=f+504|0;if((c[r>>2]|0)==0){break}if((o|0)==0){s=0;break L4}t=f+492|0;u=0;v=h;w=h;x=0;while(1){y=a[w]|0;z=a[w+1|0]|0;A=w+3|0;B=a[w+2|0]|0;C=y&255;do{if(y<<24>>24==z<<24>>24&y<<24>>24==B<<24>>24){D=c[t>>2]|0;if((D|0)==0){E=x;F=y;break}E=x;F=a[D+C|0]|0}else{D=c[r>>2]|0;G=((ag(d[D+C|0]|0,l)|0)+16384+(ag(d[D+(z&255)|0]|0,m)|0)+(ag(d[D+(B&255)|0]|0,n)|0)|0)>>>15;E=x|1;F=a[(c[q>>2]|0)+G|0]|0}}while(0);B=v+1|0;a[v]=F;if(p){a[B]=a[A]|0;H=w+4|0;I=v+2|0}else{H=A;I=B}B=u+1|0;if(B>>>0<o>>>0){u=B;v=I;w=H;x=E}else{s=E;break L4}}}}while(0);if((o|0)==0){s=0;break}if(p){q=0;x=h;w=h;v=0;while(1){u=a[w]|0;r=a[w+1|0]|0;t=a[w+2|0]|0;if(u<<24>>24==r<<24>>24&u<<24>>24==t<<24>>24){J=v;K=u}else{J=v|1;K=((ag(r&255,m)|0)+(ag(u&255,l)|0)+(ag(t&255,n)|0)|0)>>>15&255}a[x]=K;a[x+1|0]=a[w+3|0]|0;t=q+1|0;if(t>>>0<o>>>0){q=t;x=x+2|0;w=w+4|0;v=J}else{s=J;break}}}else{v=0;w=h;x=h;q=0;while(1){t=a[x]|0;u=a[x+1|0]|0;r=a[x+2|0]|0;if(t<<24>>24==u<<24>>24&t<<24>>24==r<<24>>24){L=q;M=t}else{L=q|1;M=((ag(u&255,m)|0)+(ag(t&255,l)|0)+(ag(r&255,n)|0)|0)>>>15&255}a[w]=M;r=v+1|0;if(r>>>0<o>>>0){v=r;w=w+1|0;x=x+3|0;q=L}else{s=L;break}}}}else{q=f+512|0;do{if((c[q>>2]|0)!=0){x=f+508|0;if((c[x>>2]|0)==0){break}if((o|0)==0){s=0;break L4}w=f+496|0;v=f+484|0;r=h;t=0;u=h;B=0;while(1){z=a[u]|0;C=a[u+1|0]|0;y=(z&255)<<8|C&255;G=d[u+2|0]<<8|d[u+3|0];D=d[u+4|0]<<8|d[u+5|0];N=u+6|0;O=y&65535;P=G&65535;do{if(y<<16>>16==G<<16>>16&y<<16>>16==D<<16>>16){Q=c[w>>2]|0;if((Q|0)==0){R=B;S=z;T=C;break}U=b[(c[Q+((O&255)>>>((c[v>>2]|0)>>>0)<<2)>>2]|0)+(O>>>8<<1)>>1]|0;R=B;S=(U&65535)>>>8&255;T=U&255}else{U=c[v>>2]|0;Q=c[q>>2]|0;V=D&65535;W=(ag(e[(c[Q+((O&255)>>>(U>>>0)<<2)>>2]|0)+(O>>>8<<1)>>1]|0,l)|0)+16384+(ag(e[(c[Q+((P&255)>>>(U>>>0)<<2)>>2]|0)+(P>>>8<<1)>>1]|0,m)|0)+(ag(e[(c[Q+((V&255)>>>(U>>>0)<<2)>>2]|0)+(V>>>8<<1)>>1]|0,n)|0)|0;V=b[(c[(c[x>>2]|0)+((W>>>15&255)>>>(U>>>0)<<2)>>2]|0)+((W>>>23&255)<<1)>>1]|0;R=B|1;S=(V&65535)>>>8&255;T=V&255}}while(0);a[r]=S;P=r+2|0;a[r+1|0]=T;if(p){a[P]=a[N]|0;a[r+3|0]=a[u+7|0]|0;X=u+8|0;Y=r+4|0}else{X=N;Y=P}P=t+1|0;if(P>>>0<o>>>0){r=Y;t=P;u=X;B=R}else{s=R;break L4}}}}while(0);if((o|0)==0){s=0;break}else{Z=h;_=h;$=0;aa=0}while(1){q=d[Z]<<8|d[Z+1|0];B=d[Z+2|0]<<8|d[Z+3|0];u=d[Z+4|0]<<8|d[Z+5|0];t=Z+6|0;r=q<<16>>16==B<<16>>16&q<<16>>16==u<<16>>16&1^1|aa;x=(ag(q&65535,l)|0)+16384+(ag(B&65535,m)|0)+(ag(u&65535,n)|0)|0;a[_]=x>>>23;u=_+2|0;a[_+1|0]=x>>>15;if(p){a[u]=a[t]|0;a[_+3|0]=a[Z+7|0]|0;ab=_+4|0;ac=Z+8|0}else{ab=u;ac=t}t=$+1|0;if(t>>>0<o>>>0){Z=ac;_=ab;$=t;aa=r}else{s=r;break}}}}while(0);aa=g+10|0;$=(a[aa]|0)-2&255;a[aa]=$;a[i]=a[i]&-3;i=ag(a[j]|0,$)|0;a[g+11|0]=i;$=i&255;if((i&255)>>>0>7>>>0){ad=ag($>>>3,o)|0}else{ad=((ag($,o)|0)+7|0)>>>3}c[g+4>>2]=ad;k=s;return k|0}function B_(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;e=c[b>>2]|0;f=b+9|0;g=a[f]|0;if((g&255)>>>0<=7>>>0){return}h=b+8|0;i=a[h]|0;if((i&2)!=0){return}do{if((i<<24>>24|0)==0){if(g<<24>>24==8){j=e-1|0;if((e|0)==0){break}k=0;l=d+j|0;m=d+(j+(e<<1))|0;while(1){a[m]=a[l]|0;a[m-1|0]=a[l]|0;a[m-2|0]=a[l]|0;j=k+1|0;if(j>>>0<e>>>0){k=j;l=l-1|0;m=m-3|0}else{break}}}else{m=(e<<1)-1|0;if((e|0)==0){break}l=0;k=d+m|0;j=d+(m+(e<<2))|0;while(1){a[j]=a[k]|0;m=k-1|0;a[j-1|0]=a[m]|0;a[j-2|0]=a[k]|0;a[j-3|0]=a[m]|0;a[j-4|0]=a[k]|0;a[j-5|0]=a[m]|0;m=l+1|0;if(m>>>0<e>>>0){l=m;k=k-2|0;j=j-6|0}else{break}}}}else if((i<<24>>24|0)==4){if(g<<24>>24==8){j=e<<1;k=j-1|0;if((e|0)==0){break}l=0;m=d+k|0;n=d+(k+j)|0;while(1){j=m-1|0;a[n]=a[m]|0;a[n-1|0]=a[j]|0;a[n-2|0]=a[j]|0;a[n-3|0]=a[j]|0;j=l+1|0;if(j>>>0<e>>>0){l=j;m=m-2|0;n=n-4|0}else{break}}}else{n=e<<2;m=n-1|0;if((e|0)==0){break}l=0;j=d+m|0;k=d+(m+n)|0;while(1){a[k]=a[j]|0;n=j-2|0;a[k-1|0]=a[j-1|0]|0;a[k-2|0]=a[n]|0;m=j-3|0;a[k-3|0]=a[m]|0;a[k-4|0]=a[n]|0;a[k-5|0]=a[m]|0;a[k-6|0]=a[n]|0;a[k-7|0]=a[m]|0;m=l+1|0;if(m>>>0<e>>>0){l=m;j=j-4|0;k=k-8|0}else{break}}}}}while(0);d=b+10|0;g=(a[d]|0)+2&255;a[d]=g;a[h]=a[h]|2;h=ag(a[f]|0,g)|0;a[b+11|0]=h;g=h&255;if((h&255)>>>0>7>>>0){o=ag(g>>>3,e)|0}else{o=((ag(g,e)|0)+7|0)>>>3}c[b+4>>2]=o;return}function B$(f,g,h){f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0;i=c[h+492>>2]|0;j=c[h+500>>2]|0;k=c[h+504>>2]|0;l=c[h+496>>2]|0;m=c[h+508>>2]|0;n=c[h+512>>2]|0;o=c[h+484>>2]|0;p=(c[h+212>>2]&8192|0)!=0;q=c[f>>2]|0;r=d[f+8|0]|0;if((r|0)==0){switch(d[f+9|0]|0){case 16:{s=(q|0)==0;if((l|0)==0){if(s){return}t=h+540|0;u=h+460|0;v=1;w=g;while(1){x=w+1|0;if((d[w]<<8|d[x])<<16>>16==(b[t>>1]|0)){a[w]=(e[u>>1]|0)>>>8;a[x]=b[u>>1]}if(v>>>0>=q>>>0){break}v=v+1|0;w=w+2|0}return}else{if(s){return}s=h+540|0;w=h+460|0;v=0;u=g;while(1){t=d[u]|0;x=u+1|0;y=d[x]|0;if((t<<8|y|0)==(e[s>>1]|0)){a[u]=(e[w>>1]|0)>>>8;z=b[w>>1]&255}else{A=b[(c[l+(y>>>(o>>>0)<<2)>>2]|0)+(t<<1)>>1]|0;a[u]=(A&65535)>>>8;z=A&255}a[x]=z;x=v+1|0;if(x>>>0<q>>>0){v=x;u=u+2|0}else{break}}return}break};case 4:{u=(q|0)==0;if((i|0)==0){if(u){return}v=h+540|0;z=h+460|0;w=4;s=1;x=g;while(1){A=d[x]|0;if((A>>>(w>>>0)&15|0)==(e[v>>1]|0)){a[x]=e[z>>1]<<w|A&3855>>>((4-w|0)>>>0)}A=(w|0)==0;if(s>>>0>=q>>>0){break}w=A?4:w-4|0;s=s+1|0;x=A?x+1|0:x}return}else{if(u){return}u=h+540|0;x=h+460|0;s=4;w=0;z=g;while(1){v=d[z]|0;A=v>>>(s>>>0)&15;if((A|0)==(e[u>>1]|0)){B=(e[x>>1]<<s|v&3855>>>((4-s|0)>>>0))&255}else{B=((d[i+(A<<4|A)|0]|0)>>>4<<s|v&3855>>>((4-s|0)>>>0))&255}a[z]=B;v=(s|0)==0;A=w+1|0;if(A>>>0<q>>>0){s=v?4:s-4|0;w=A;z=v?z+1|0:z}else{break}}return}break};case 1:{if((q|0)==0){return}z=h+540|0;w=h+460|0;s=7;B=1;x=g;while(1){u=d[x]|0;if((u>>>(s>>>0)&1|0)==(e[z>>1]|0)){a[x]=e[w>>1]<<s|u&32639>>>((7-s|0)>>>0)}u=(s|0)==0;if(B>>>0>=q>>>0){break}s=u?7:s-1|0;B=B+1|0;x=u?x+1|0:x}return};case 2:{x=(q|0)==0;if((i|0)==0){if(x){return}B=h+540|0;s=h+460|0;w=6;z=1;u=g;while(1){v=d[u]|0;if((v>>>(w>>>0)&3|0)==(e[B>>1]|0)){a[u]=e[s>>1]<<w|v&16191>>>((6-w|0)>>>0)}v=(w|0)==0;if(z>>>0>=q>>>0){break}w=v?6:w-2|0;z=z+1|0;u=v?u+1|0:u}return}else{if(x){return}x=h+540|0;u=h+460|0;z=6;w=0;s=g;while(1){B=d[s]|0;v=B>>>(z>>>0)&3;if((v|0)==(e[x>>1]|0)){C=(e[u>>1]<<z|B&16191>>>((6-z|0)>>>0))&255}else{C=((d[i+(v<<2|v|v<<4|v<<6)|0]|0)>>>6<<z|B&16191>>>((6-z|0)>>>0))&255}a[s]=C;B=(z|0)==0;v=w+1|0;if(v>>>0<q>>>0){z=B?6:z-2|0;w=v;s=B?s+1|0:s}else{break}}return}break};case 8:{s=(q|0)==0;if((i|0)==0){if(s){return}w=h+540|0;z=h+460|0;C=1;u=g;while(1){if((d[u]|0)==(e[w>>1]|0)){a[u]=b[z>>1]}if(C>>>0>=q>>>0){break}C=C+1|0;u=u+1|0}return}else{if(s){return}s=h+540|0;u=h+460|0;C=0;z=g;while(1){w=d[z]|0;if((w|0)==(e[s>>1]|0)){D=b[u>>1]&255}else{D=a[i+w|0]|0}a[z]=D;w=C+1|0;if(w>>>0<q>>>0){C=w;z=z+1|0}else{break}}return}break};default:{return}}}else if((r|0)==6){if((a[f+9|0]|0)==8){z=(q|0)==0;if((k|0)==0|(j|0)==0|(i|0)==0){if(z){return}C=h+454|0;D=h+456|0;u=h+458|0;s=0;w=g;while(1){x=a[w+3|0]|0;if((x<<24>>24|0)==0){a[w]=b[C>>1];a[w+1|0]=b[D>>1];a[w+2|0]=b[u>>1]}else if((x<<24>>24|0)!=(-1|0)){B=x&255;x=ag(d[w]|0,B)|0;v=B^255;A=x+128+(ag(e[C>>1]|0,v)|0)|0;a[w]=((A>>>8&255)+A|0)>>>8;A=w+1|0;x=ag(d[A]|0,B)|0;t=x+128+(ag(e[D>>1]|0,v)|0)|0;a[A]=((t>>>8&255)+t|0)>>>8;t=w+2|0;A=ag(d[t]|0,B)|0;B=A+128+(ag(e[u>>1]|0,v)|0)|0;a[t]=((B>>>8&255)+B|0)>>>8}B=s+1|0;if(B>>>0<q>>>0){s=B;w=w+4|0}else{break}}return}if(z){return}z=h+464|0;w=h+466|0;s=h+468|0;u=h+454|0;D=h+456|0;C=h+458|0;B=0;t=g;while(1){v=a[t+3|0]|0;if((v<<24>>24|0)==(-1|0)){a[t]=a[i+(d[t]|0)|0]|0;A=t+1|0;a[A]=a[i+(d[A]|0)|0]|0;A=t+2|0;a[A]=a[i+(d[A]|0)|0]|0}else if((v<<24>>24|0)==0){a[t]=b[u>>1];a[t+1|0]=b[D>>1];a[t+2|0]=b[C>>1]}else{A=v&255;v=ag(d[k+(d[t]|0)|0]|0,A)|0;x=A^255;y=v+128+(ag(e[z>>1]|0,x)|0)|0;v=((y>>>8&255)+y|0)>>>8;if(p){E=v&255}else{E=a[j+(v&255)|0]|0}a[t]=E;v=t+1|0;y=ag(d[k+(d[v]|0)|0]|0,A)|0;F=y+128+(ag(e[w>>1]|0,x)|0)|0;y=((F>>>8&255)+F|0)>>>8;if(p){G=y&255}else{G=a[j+(y&255)|0]|0}a[v]=G;v=t+2|0;y=ag(d[k+(d[v]|0)|0]|0,A)|0;A=y+128+(ag(e[s>>1]|0,x)|0)|0;x=((A>>>8&255)+A|0)>>>8;if(p){H=x&255}else{H=a[j+(x&255)|0]|0}a[v]=H}v=B+1|0;if(v>>>0<q>>>0){B=v;t=t+4|0}else{break}}return}else{t=(q|0)==0;if((l|0)==0|(m|0)==0|(n|0)==0){if(t){return}B=h+454|0;H=h+456|0;s=h+458|0;G=0;w=g;while(1){E=d[w+6|0]<<8|d[w+7|0];z=E&65535;if((E<<16>>16|0)==0){a[w]=(e[B>>1]|0)>>>8;a[w+1|0]=b[B>>1];a[w+2|0]=(e[H>>1]|0)>>>8;a[w+3|0]=b[H>>1];a[w+4|0]=(e[s>>1]|0)>>>8;a[w+5|0]=b[s>>1]}else if((E<<16>>16|0)!=(-1|0)){E=w+1|0;C=w+2|0;D=w+3|0;u=d[C]<<8|d[D];v=w+4|0;x=w+5|0;A=d[v]<<8|d[x];y=ag((d[w]<<8|d[E])&65535,z)|0;F=z^65535;I=y+32768+(ag(e[B>>1]|0,F)|0)|0;y=(I>>>16)+I|0;a[w]=y>>>24;a[E]=y>>>16;y=ag(u&65535,z)|0;u=y+32768+(ag(e[H>>1]|0,F)|0)|0;y=(u>>>16)+u|0;a[C]=y>>>24;a[D]=y>>>16;y=ag(A&65535,z)|0;z=y+32768+(ag(e[s>>1]|0,F)|0)|0;F=(z>>>16)+z|0;a[v]=F>>>24;a[x]=F>>>16}F=G+1|0;if(F>>>0<q>>>0){G=F;w=w+8|0}else{break}}return}if(t){return}t=h+464|0;w=h+466|0;G=h+468|0;s=h+454|0;H=h+456|0;B=h+458|0;F=0;x=g;while(1){v=d[x+6|0]<<8|d[x+7|0];z=v&65535;if((v<<16>>16|0)==(-1|0)){y=x+1|0;A=b[(c[l+((d[y]|0)>>>(o>>>0)<<2)>>2]|0)+(d[x]<<1)>>1]|0;a[x]=(A&65535)>>>8;a[y]=A;A=x+2|0;y=x+3|0;D=b[(c[l+((d[y]|0)>>>(o>>>0)<<2)>>2]|0)+(d[A]<<1)>>1]|0;a[A]=(D&65535)>>>8;a[y]=D;D=x+4|0;y=x+5|0;A=b[(c[l+((d[y]|0)>>>(o>>>0)<<2)>>2]|0)+(d[D]<<1)>>1]|0;a[D]=(A&65535)>>>8;a[y]=A}else if((v<<16>>16|0)==0){a[x]=(e[s>>1]|0)>>>8;a[x+1|0]=b[s>>1];a[x+2|0]=(e[H>>1]|0)>>>8;a[x+3|0]=b[H>>1];a[x+4|0]=(e[B>>1]|0)>>>8;a[x+5|0]=b[B>>1]}else{v=x+1|0;A=ag(e[(c[n+((d[v]|0)>>>(o>>>0)<<2)>>2]|0)+(d[x]<<1)>>1]|0,z)|0;y=z^65535;D=A+32768+(ag(e[t>>1]|0,y)|0)|0;A=(D>>>16)+D|0;D=A>>>16;C=A>>>24;if(p){J=C&255;K=D&255}else{A=b[(c[m+((D&255)>>>(o>>>0)<<2)>>2]|0)+(C<<1)>>1]|0;J=(A&65535)>>>8&255;K=A&255}a[x]=J;a[v]=K;v=x+2|0;A=x+3|0;C=ag(e[(c[n+((d[A]|0)>>>(o>>>0)<<2)>>2]|0)+(d[v]<<1)>>1]|0,z)|0;D=C+32768+(ag(e[w>>1]|0,y)|0)|0;C=(D>>>16)+D|0;D=C>>>16;u=C>>>24;if(p){L=u&255;M=D&255}else{C=b[(c[m+((D&255)>>>(o>>>0)<<2)>>2]|0)+(u<<1)>>1]|0;L=(C&65535)>>>8&255;M=C&255}a[v]=L;a[A]=M;A=x+4|0;v=x+5|0;C=ag(e[(c[n+((d[v]|0)>>>(o>>>0)<<2)>>2]|0)+(d[A]<<1)>>1]|0,z)|0;z=C+32768+(ag(e[G>>1]|0,y)|0)|0;y=(z>>>16)+z|0;z=y>>>16;C=y>>>24;if(p){N=C&255;O=z&255}else{y=b[(c[m+((z&255)>>>(o>>>0)<<2)>>2]|0)+(C<<1)>>1]|0;N=(y&65535)>>>8&255;O=y&255}a[A]=N;a[v]=O}v=F+1|0;if(v>>>0<q>>>0){F=v;x=x+8|0}else{break}}return}}else if((r|0)==2){if((a[f+9|0]|0)==8){x=(q|0)==0;if((i|0)==0){if(x){return}F=h+534|0;O=h+536|0;N=h+538|0;G=h+454|0;M=h+456|0;L=h+458|0;w=1;K=g;while(1){do{if((d[K]|0)==(e[F>>1]|0)){J=K+1|0;if((d[J]|0)!=(e[O>>1]|0)){break}t=K+2|0;if((d[t]|0)!=(e[N>>1]|0)){break}a[K]=b[G>>1];a[J]=b[M>>1];a[t]=b[L>>1]}}while(0);if(w>>>0>=q>>>0){break}w=w+1|0;K=K+3|0}return}else{if(x){return}x=h+534|0;K=h+536|0;w=h+538|0;L=h+454|0;M=h+456|0;G=h+458|0;N=0;O=g;while(1){F=d[O]|0;t=O+1|0;J=a[t]|0;do{if((F|0)==(e[x>>1]|0)){if((J&255|0)!=(e[K>>1]|0)){P=71;break}B=O+2|0;if((d[B]|0)!=(e[w>>1]|0)){P=71;break}a[O]=b[L>>1];a[t]=b[M>>1];a[B]=b[G>>1]}else{P=71}}while(0);if((P|0)==71){P=0;a[O]=a[i+F|0]|0;a[O+1|0]=a[i+(J&255)|0]|0;t=O+2|0;a[t]=a[i+(d[t]|0)|0]|0}t=N+1|0;if(t>>>0<q>>>0){N=t;O=O+3|0}else{break}}return}}O=(q|0)==0;if((l|0)==0){if(O){return}N=h+534|0;G=h+536|0;M=h+538|0;L=h+454|0;w=h+456|0;K=h+458|0;x=1;t=g;while(1){B=t+1|0;H=t+2|0;s=t+3|0;v=t+4|0;A=t+5|0;y=d[v]<<8|d[A];do{if((d[t]<<8|d[B])<<16>>16==(b[N>>1]|0)){if((d[H]<<8|d[s])<<16>>16!=(b[G>>1]|0)){break}if(y<<16>>16!=(b[M>>1]|0)){break}a[t]=(e[L>>1]|0)>>>8;a[B]=b[L>>1];a[H]=(e[w>>1]|0)>>>8;a[s]=b[w>>1];a[v]=(e[K>>1]|0)>>>8;a[A]=b[K>>1]}}while(0);if(x>>>0>=q>>>0){break}x=x+1|0;t=t+6|0}return}if(O){return}O=h+534|0;t=h+536|0;x=h+538|0;K=h+454|0;w=h+456|0;L=h+458|0;M=0;G=g;while(1){N=a[G]|0;A=G+1|0;v=a[A]|0;s=G+2|0;H=G+3|0;B=G+4|0;y=a[B]|0;J=G+5|0;F=a[J]|0;C=(y&255)<<8|F&255;do{if(((N&255)<<8|v&255)<<16>>16==(b[O>>1]|0)){z=a[H]|0;u=a[s]|0;if(((u&255)<<8|z&255)<<16>>16!=(b[t>>1]|0)){Q=u;R=z;P=89;break}if(C<<16>>16!=(b[x>>1]|0)){Q=u;R=z;P=89;break}a[G]=(e[K>>1]|0)>>>8;a[A]=b[K>>1];a[s]=(e[w>>1]|0)>>>8;a[H]=b[w>>1];a[B]=(e[L>>1]|0)>>>8;S=b[L>>1]&255}else{Q=a[s]|0;R=a[H]|0;P=89}}while(0);if((P|0)==89){P=0;C=b[(c[l+((v&255)>>>(o>>>0)<<2)>>2]|0)+((N&255)<<1)>>1]|0;a[G]=(C&65535)>>>8;a[A]=C;C=b[(c[l+((R&255)>>>(o>>>0)<<2)>>2]|0)+((Q&255)<<1)>>1]|0;a[s]=(C&65535)>>>8;a[H]=C;C=b[(c[l+((F&255)>>>(o>>>0)<<2)>>2]|0)+((y&255)<<1)>>1]|0;a[B]=(C&65535)>>>8;S=C&255}a[J]=S;C=M+1|0;if(C>>>0<q>>>0){M=C;G=G+6|0}else{break}}return}else if((r|0)==4){if((a[f+9|0]|0)==8){f=(q|0)==0;if((k|0)==0|(j|0)==0|(i|0)==0){if(f){return}r=h+460|0;G=0;M=g;while(1){S=a[M+1|0]|0;if((S<<24>>24|0)==0){a[M]=b[r>>1]}else if((S<<24>>24|0)!=(-1|0)){Q=S&255;S=ag(d[M]|0,Q)|0;R=S+128+(ag(e[r>>1]|0,Q^255)|0)|0;a[M]=((R>>>8&255)+R|0)>>>8}R=G+1|0;if(R>>>0<q>>>0){G=R;M=M+2|0}else{break}}return}if(f){return}f=h+470|0;M=h+460|0;G=0;r=g;while(1){R=a[r+1|0]|0;Q=R&255;if((R<<24>>24|0)==(-1|0)){a[r]=a[i+(d[r]|0)|0]|0}else if((R<<24>>24|0)==0){a[r]=b[M>>1]}else{R=ag(d[k+(d[r]|0)|0]|0,Q)|0;S=R+128+(ag(e[f>>1]|0,Q^255)|0)|0;Q=((S>>>8&255)+S|0)>>>8;if(p){T=Q&255}else{T=a[j+(Q&255)|0]|0}a[r]=T}Q=G+1|0;if(Q>>>0<q>>>0){G=Q;r=r+2|0}else{break}}return}r=(q|0)==0;if((l|0)==0|(m|0)==0|(n|0)==0){if(r){return}G=h+460|0;T=0;j=g;while(1){f=d[j+2|0]<<8|d[j+3|0];k=f&65535;if((f<<16>>16|0)==0){a[j]=(e[G>>1]|0)>>>8;a[j+1|0]=b[G>>1]}else if((f<<16>>16|0)!=(-1|0)){f=j+1|0;M=ag((d[j]<<8|d[f])&65535,k)|0;i=(ag(e[G>>1]|0,k^65535)|0)+32768+M|0;M=(i>>>16)+i|0;a[j]=M>>>24;a[f]=M>>>16}M=T+1|0;if(M>>>0<q>>>0){T=M;j=j+4|0}else{break}}return}if(r){return}r=h+470|0;j=h+460|0;h=0;T=g;while(1){g=d[T+2|0]<<8|d[T+3|0];G=g&65535;if((g<<16>>16|0)==(-1|0)){M=T+1|0;f=b[(c[l+((d[M]|0)>>>(o>>>0)<<2)>>2]|0)+(d[T]<<1)>>1]|0;a[T]=(f&65535)>>>8;a[M]=f}else if((g<<16>>16|0)==0){a[T]=(e[j>>1]|0)>>>8;a[T+1|0]=b[j>>1]}else{g=T+1|0;f=ag(e[(c[n+((d[g]|0)>>>(o>>>0)<<2)>>2]|0)+(d[T]<<1)>>1]|0,G)|0;M=f+32768+(ag(e[r>>1]|0,G^65535)|0)|0;G=(M>>>16)+M|0;M=G>>>16;if(p){U=G>>>24&255;V=M&255}else{f=b[(c[m+((M&255)>>>(o>>>0)<<2)>>2]|0)+(G>>>24<<1)>>1]|0;U=(f&65535)>>>8&255;V=f&255}a[T]=U;a[g]=V}g=h+1|0;if(g>>>0<q>>>0){h=g;T=T+4|0}else{break}}return}else{return}}function B0(e,f,g){e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0;h=c[g+492>>2]|0;i=c[g+496>>2]|0;j=c[g+484>>2]|0;g=c[e>>2]|0;k=e+9|0;l=a[k]|0;do{if((l&255)>>>0>8>>>0|(h|0)==0){if(!(l<<24>>24!=16|(i|0)==0)){break}return}}while(0);m=d[e+8|0]|0;if((m|0)==4){e=(g|0)==0;if(l<<24>>24==8){if(e){return}else{n=0;o=f}while(1){a[o]=a[h+(d[o]|0)|0]|0;p=n+1|0;if(p>>>0<g>>>0){n=p;o=o+2|0}else{break}}return}else{if(e){return}else{q=0;r=f}while(1){e=r+1|0;o=b[(c[i+((d[e]|0)>>>(j>>>0)<<2)>>2]|0)+((d[r]|0)<<1)>>1]|0;a[r]=(o&65535)>>>8;a[e]=o;o=q+1|0;if(o>>>0<g>>>0){q=o;r=r+4|0}else{break}}return}}else if((m|0)==0){if(l<<24>>24==2){if((g|0)==0){return}else{s=0;t=f}while(1){r=d[t]|0;q=r&192;o=r&48;e=r&12;n=r&3;a[t]=(d[h+(o<<2|o|o>>>2|o>>>4)|0]|0)>>>2&48|a[h+(r>>>6|q|q>>>2|q>>>4)|0]&-64|(d[h+(e<<2|e|e<<4|e>>>2)|0]|0)>>>4&12|(d[h+(n<<4|n|n<<6|n<<2)|0]|0)>>>6;n=s+4|0;if(n>>>0<g>>>0){s=n;t=t+1|0}else{break}}u=a[k]|0}else{u=l}if((u<<24>>24|0)==16){if((g|0)==0){return}else{v=0;w=f}while(1){k=w+1|0;t=b[(c[i+((d[k]|0)>>>(j>>>0)<<2)>>2]|0)+((d[w]|0)<<1)>>1]|0;a[w]=(t&65535)>>>8;a[k]=t;t=v+1|0;if(t>>>0<g>>>0){v=t;w=w+2|0}else{break}}return}else if((u<<24>>24|0)==8){if((g|0)==0){return}else{x=0;y=f}while(1){a[y]=a[h+(d[y]|0)|0]|0;w=x+1|0;if(w>>>0<g>>>0){x=w;y=y+1|0}else{break}}return}else if((u<<24>>24|0)==4){if((g|0)==0){return}else{z=0;A=f}while(1){u=d[A]|0;y=u&15;a[A]=(d[h+(y<<4|y)|0]|0)>>>4|a[h+(u&240|u>>>4)|0]&-16;u=z+2|0;if(u>>>0<g>>>0){z=u;A=A+1|0}else{break}}return}else{return}}else if((m|0)==6){A=(g|0)==0;if(l<<24>>24==8){if(A){return}else{B=0;C=f}while(1){a[C]=a[h+(d[C]|0)|0]|0;z=C+1|0;a[z]=a[h+(d[z]|0)|0]|0;z=C+2|0;a[z]=a[h+(d[z]|0)|0]|0;z=B+1|0;if(z>>>0<g>>>0){B=z;C=C+4|0}else{break}}return}else{if(A){return}else{D=0;E=f}while(1){A=E+1|0;C=b[(c[i+((d[A]|0)>>>(j>>>0)<<2)>>2]|0)+((d[E]|0)<<1)>>1]|0;a[E]=(C&65535)>>>8;a[A]=C;C=E+2|0;A=E+3|0;B=b[(c[i+((d[A]|0)>>>(j>>>0)<<2)>>2]|0)+((d[C]|0)<<1)>>1]|0;a[C]=(B&65535)>>>8;a[A]=B;B=E+4|0;A=E+5|0;C=b[(c[i+((d[A]|0)>>>(j>>>0)<<2)>>2]|0)+((d[B]|0)<<1)>>1]|0;a[B]=(C&65535)>>>8;a[A]=C;C=D+1|0;if(C>>>0<g>>>0){D=C;E=E+8|0}else{break}}return}}else if((m|0)==2){m=(g|0)==0;if(l<<24>>24==8){if(m){return}else{F=0;G=f}while(1){a[G]=a[h+(d[G]|0)|0]|0;l=G+1|0;a[l]=a[h+(d[l]|0)|0]|0;l=G+2|0;a[l]=a[h+(d[l]|0)|0]|0;l=F+1|0;if(l>>>0<g>>>0){F=l;G=G+3|0}else{break}}return}else{if(m){return}else{H=0;I=f}while(1){f=I+1|0;m=b[(c[i+((d[f]|0)>>>(j>>>0)<<2)>>2]|0)+((d[I]|0)<<1)>>1]|0;a[I]=(m&65535)>>>8;a[f]=m;m=I+2|0;f=I+3|0;G=b[(c[i+((d[f]|0)>>>(j>>>0)<<2)>>2]|0)+((d[m]|0)<<1)>>1]|0;a[m]=(G&65535)>>>8;a[f]=G;G=I+4|0;f=I+5|0;m=b[(c[i+((d[f]|0)>>>(j>>>0)<<2)>>2]|0)+((d[G]|0)<<1)>>1]|0;a[G]=(m&65535)>>>8;a[f]=m;m=H+1|0;if(m>>>0<g>>>0){H=m;I=I+6|0}else{break}}return}}else{return}}function B1(e,f,g){e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;h=c[e>>2]|0;i=d[e+8|0]|0;do{if((i&4|0)!=0){j=a[e+9|0]|0;if((j<<24>>24|0)==8){k=c[g+500>>2]|0;if((k|0)==0){break}l=i&2;m=l+2|0;if((h|0)==0){return}n=h;o=f+(l|1)|0;while(1){a[o]=a[k+(d[o]|0)|0]|0;l=n-1|0;if((l|0)==0){break}else{n=l;o=o+m|0}}return}else if((j<<24>>24|0)==16){m=c[g+508>>2]|0;o=c[g+484>>2]|0;if((m|0)==0){break}n=i<<1&4;k=n+4|0;if((h|0)==0){return}l=h;p=f+(n|2)|0;while(1){n=p+1|0;q=b[(c[m+((d[n]|0)>>>(o>>>0)<<2)>>2]|0)+((d[p]|0)<<1)>>1]|0;a[p]=(q&65535)>>>8;a[n]=q;q=l-1|0;if((q|0)==0){break}else{l=q;p=p+k|0}}return}else{break}}}while(0);An(g,22640);return}function B2(b,e,f,g){b=b|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;h=c[b>>2]|0;i=b+9|0;if((a[i]|0)!=8){return}j=b+8|0;k=a[j]|0;l=(f|0)==0;if(!(k<<24>>24!=2|l)){if((h|0)==0){m=8}else{n=0;o=e;p=e;while(1){a[o]=a[f+((d[p+1|0]|0)>>>3<<5|(d[p]|0)>>>3<<10|(d[p+2|0]|0)>>>3)|0]|0;q=n+1|0;if(q>>>0<h>>>0){n=q;o=o+1|0;p=p+3|0}else{break}}m=a[i]|0}a[j]=3;a[b+10|0]=1;a[b+11|0]=m;p=m&255;if((m&255)>>>0>7>>>0){r=ag(p>>>3,h)|0}else{r=((ag(p,h)|0)+7|0)>>>3}c[b+4>>2]=r;return}if(k<<24>>24!=6|l){if(k<<24>>24!=3|(g|0)==0|(h|0)==0){return}else{s=0;t=e}while(1){a[t]=a[g+(d[t]|0)|0]|0;k=s+1|0;if(k>>>0<h>>>0){s=k;t=t+1|0}else{break}}return}if((h|0)==0){u=8}else{t=0;s=e;g=e;while(1){a[s]=a[f+((d[g+1|0]|0)>>>3<<5|(d[g]|0)>>>3<<10|(d[g+2|0]|0)>>>3)|0]|0;e=t+1|0;if(e>>>0<h>>>0){t=e;s=s+1|0;g=g+4|0}else{break}}u=a[i]|0}a[j]=3;a[b+10|0]=1;a[b+11|0]=u;j=u&255;if((u&255)>>>0>7>>>0){v=ag(j>>>3,h)|0}else{v=((ag(j,h)|0)+7|0)>>>3}c[b+4>>2]=v;return}function B3(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;g=i;i=i+16|0;h=g|0;j=a[b+8|0]|0;k=j&255;if(j<<24>>24==3){i=g;return}j=d[b+9|0]|0;if((k&2|0)==0){c[h>>2]=j-(d[f+3|0]|0);l=1}else{c[h>>2]=j-(d[f|0]|0);c[h+4>>2]=j-(d[f+1|0]|0);c[h+8>>2]=j-(d[f+2|0]|0);l=3}if((k&4|0)==0){m=l}else{c[h+(l<<2)>>2]=j-(d[f+4|0]|0);m=l+1|0}l=0;f=0;while(1){k=h+(f<<2)|0;n=c[k>>2]|0;if((n|0)>0&(n|0)<(j|0)){o=1}else{c[k>>2]=0;o=l}k=f+1|0;if((k|0)<(m|0)){l=o;f=k}else{break}}if((o|0)==0){i=g;return}if((j|0)==2){o=c[b+4>>2]|0;f=e+o|0;if((o|0)>0){p=e}else{i=g;return}while(1){o=p+1|0;a[p]=(d[p]|0)>>>1&85;if(o>>>0<f>>>0){p=o}else{break}}i=g;return}else if((j|0)==16){p=c[b+4>>2]|0;f=e+p|0;if((p|0)>0){q=e;r=0}else{i=g;return}while(1){p=q+1|0;o=((d[q]|0)<<8|(d[p]|0))>>>((c[h+(r<<2)>>2]|0)>>>0);l=r+1|0;a[q]=o>>>8;k=q+2|0;a[p]=o;if(k>>>0>=f>>>0){break}q=k;r=(l|0)<(m|0)?l:0}i=g;return}else if((j|0)==4){r=c[b+4>>2]|0;q=e+r|0;f=c[h>>2]|0;l=15>>>(f>>>0);k=l<<4|l;if((r|0)>0){s=e}else{i=g;return}while(1){r=s+1|0;a[s]=(d[s]|0)>>>(f>>>0)&k;if(r>>>0<q>>>0){s=r}else{break}}i=g;return}else if((j|0)==8){j=c[b+4>>2]|0;b=e+j|0;if((j|0)>0){t=e;u=0}else{i=g;return}while(1){e=u+1|0;j=t+1|0;a[t]=(d[t]|0)>>>((c[h+(u<<2)>>2]|0)>>>0);if(j>>>0>=b>>>0){break}t=j;u=(e|0)<(m|0)?e:0}i=g;return}else{i=g;return}}function B4(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;f=b+9|0;g=a[f]|0;if((g&255)>>>0>=8>>>0){return}h=g&255;g=c[b>>2]|0;do{if((h|0)==1){i=g-1|0;if((g|0)==0){break}j=0;k=e+(i>>>3)|0;l=e+i|0;i=g+7&7^7;while(1){a[l]=(d[k]|0)>>>(i>>>0)&1;m=(i|0)==7;n=j+1|0;if(n>>>0<g>>>0){j=n;k=m?k-1|0:k;l=l-1|0;i=m?0:i+1|0}else{break}}}else if((h|0)==4){i=g-1|0;if((g|0)==0){break}l=0;k=e+(i>>>1)|0;j=e+i|0;i=g<<2&4;while(1){a[j]=(d[k]|0)>>>(i>>>0)&15;m=(i|0)==4;n=l+1|0;if(n>>>0<g>>>0){l=n;k=m?k-1|0:k;j=j-1|0;i=m?0:4}else{break}}}else if((h|0)==2){i=g-1|0;if((g|0)==0){break}j=0;k=e+(i>>>2)|0;l=e+i|0;i=(g<<1)+6&6^6;while(1){a[l]=(d[k]|0)>>>(i>>>0)&3;m=(i|0)==6;n=j+1|0;if(n>>>0<g>>>0){j=n;k=m?k-1|0:k;l=l-1|0;i=m?0:i+2|0}else{break}}}}while(0);a[f]=8;f=a[b+10|0]|0;a[b+11|0]=f<<3;c[b+4>>2]=ag(f&255,g)|0;return}function B5(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;g=c[b>>2]|0;h=e>>>8&255;i=e&255;e=a[b+8|0]|0;if((e<<24>>24|0)==0){j=a[b+9|0]|0;if((j<<24>>24|0)==16){k=d+(g<<1)|0;l=g<<2;m=d+l|0;if((f&128|0)==0){if((g|0)!=0){n=0;o=k;p=m;do{a[p-1|0]=a[o-1|0]|0;o=o-2|0;a[p-2|0]=a[o]|0;a[p-3|0]=h;p=p-4|0;a[p]=i;n=n+1|0;}while(n>>>0<g>>>0)}a[b+10|0]=2;a[b+11|0]=32;c[b+4>>2]=l;return}else{a[d+(l-1)|0]=h;a[d+(l-2)|0]=i;if(g>>>0>1>>>0){n=1;p=k;k=m;while(1){a[k-3|0]=a[p-1|0]|0;m=p-2|0;o=k-4|0;a[o]=a[m]|0;q=n+1|0;a[k-5|0]=h;a[k-6|0]=i;if(q>>>0<g>>>0){n=q;p=m;k=o}else{break}}}a[b+10|0]=2;a[b+11|0]=32;c[b+4>>2]=l;return}}else if((j<<24>>24|0)==8){j=d+g|0;l=g<<1;k=d+l|0;if((f&128|0)==0){if((g|0)!=0){p=0;n=j;o=k;do{n=n-1|0;a[o-1|0]=a[n]|0;o=o-2|0;a[o]=i;p=p+1|0;}while(p>>>0<g>>>0)}a[b+10|0]=2;a[b+11|0]=16;c[b+4>>2]=l;return}else{a[d+(l-1)|0]=i;if(g>>>0>1>>>0){p=1;o=j;j=k;while(1){k=o-1|0;n=j-2|0;a[n]=a[k]|0;m=p+1|0;a[j-3|0]=i;if(m>>>0<g>>>0){p=m;o=k;j=n}else{break}}}a[b+10|0]=2;a[b+11|0]=16;c[b+4>>2]=l;return}}else{return}}else if((e<<24>>24|0)==2){e=a[b+9|0]|0;if((e<<24>>24|0)==8){l=g*3|0;j=d+l|0;o=l+g|0;l=d+o|0;if((f&128|0)==0){if((g|0)!=0){p=0;n=j;k=l;do{a[k-1|0]=a[n-1|0]|0;a[k-2|0]=a[n-2|0]|0;n=n-3|0;a[k-3|0]=a[n]|0;k=k-4|0;a[k]=i;p=p+1|0;}while(p>>>0<g>>>0)}a[b+10|0]=4;a[b+11|0]=32;c[b+4>>2]=g<<2;return}else{a[d+(o-1)|0]=i;if(g>>>0>1>>>0){o=1;p=j;j=l;while(1){a[j-2|0]=a[p-1|0]|0;a[j-3|0]=a[p-2|0]|0;l=p-3|0;k=j-4|0;a[k]=a[l]|0;n=o+1|0;a[j-5|0]=i;if(n>>>0<g>>>0){o=n;p=l;j=k}else{break}}}a[b+10|0]=4;a[b+11|0]=32;c[b+4>>2]=g<<2;return}}else if((e<<24>>24|0)==16){e=g*6|0;j=d+e|0;p=e+(g<<1)|0;e=d+p|0;if((f&128|0)==0){if((g|0)!=0){f=0;o=j;k=e;do{a[k-1|0]=a[o-1|0]|0;a[k-2|0]=a[o-2|0]|0;a[k-3|0]=a[o-3|0]|0;a[k-4|0]=a[o-4|0]|0;a[k-5|0]=a[o-5|0]|0;o=o-6|0;a[k-6|0]=a[o]|0;a[k-7|0]=h;k=k-8|0;a[k]=i;f=f+1|0;}while(f>>>0<g>>>0)}a[b+10|0]=4;a[b+11|0]=64;c[b+4>>2]=g<<3;return}else{a[d+(p-1)|0]=h;a[d+(p-2)|0]=i;if(g>>>0>1>>>0){p=1;d=j;j=e;while(1){a[j-3|0]=a[d-1|0]|0;a[j-4|0]=a[d-2|0]|0;a[j-5|0]=a[d-3|0]|0;a[j-6|0]=a[d-4|0]|0;a[j-7|0]=a[d-5|0]|0;e=d-6|0;f=j-8|0;a[f]=a[e]|0;k=p+1|0;a[j-9|0]=h;a[j-10|0]=i;if(k>>>0<g>>>0){p=k;d=e;j=f}else{break}}}a[b+10|0]=4;a[b+11|0]=64;c[b+4>>2]=g<<3;return}}else{return}}else{return}}function B6(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;e=c[b>>2]|0;f=a[b+8|0]|0;if((f<<24>>24|0)==6){g=d+(c[b+4>>2]|0)|0;h=(e|0)==0;if((a[b+9|0]|0)==8){if(h){return}else{i=0;j=g}do{k=j-1|0;l=a[k]|0;m=j-2|0;a[k]=a[m]|0;k=j-3|0;a[m]=a[k]|0;j=j-4|0;a[k]=a[j]|0;a[j]=l;i=i+1|0;}while(i>>>0<e>>>0);return}else{if(h){return}else{n=g;o=0}do{g=n-1|0;h=a[g]|0;i=n-2|0;j=a[i]|0;l=n-3|0;a[g]=a[l]|0;g=n-4|0;a[i]=a[g]|0;i=n-5|0;a[l]=a[i]|0;l=n-6|0;a[g]=a[l]|0;g=n-7|0;a[i]=a[g]|0;n=n-8|0;a[l]=a[n]|0;a[g]=h;a[n]=j;o=o+1|0;}while(o>>>0<e>>>0);return}}else if((f<<24>>24|0)==4){f=d+(c[b+4>>2]|0)|0;d=(e|0)==0;if((a[b+9|0]|0)==8){if(d){return}else{p=f;q=0}do{b=p-1|0;o=a[b]|0;p=p-2|0;a[b]=a[p]|0;a[p]=o;q=q+1|0;}while(q>>>0<e>>>0);return}else{if(d){return}else{r=f;s=0}do{f=r-1|0;d=a[f]|0;q=r-2|0;p=a[q]|0;o=r-3|0;a[f]=a[o]|0;r=r-4|0;a[q]=a[r]|0;a[o]=d;a[r]=p;s=s+1|0;}while(s>>>0<e>>>0);return}}else{return}}function B7(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;f=a[b+8|0]|0;if((f&2)==0){return}g=c[b>>2]|0;h=a[b+9|0]|0;if((h<<24>>24|0)==8){if((f<<24>>24|0)==2){i=3}else if((f<<24>>24|0)==6){i=4}else{return}if((g|0)==0){return}else{j=0;k=e}while(1){b=a[k+1|0]|0;a[k]=b+(a[k]|0);l=k+2|0;a[l]=b+(a[l]|0);l=j+1|0;if(l>>>0<g>>>0){j=l;k=k+i|0}else{break}}return}else if((h<<24>>24|0)==16){if((f<<24>>24|0)==6){m=8}else if((f<<24>>24|0)==2){m=6}else{return}if((g|0)==0){return}else{n=0;o=e}while(1){e=o+1|0;f=(d[o+2|0]|0)<<8|(d[o+3|0]|0);h=o+4|0;i=o+5|0;k=f+((d[o]|0)<<8|(d[e]|0))|0;j=((d[h]|0)<<8|(d[i]|0))+f|0;a[o]=k>>>8;a[e]=k;a[h]=j>>>8;a[i]=j;j=n+1|0;if(j>>>0<g>>>0){n=j;o=o+m|0}else{break}}return}else{return}}function B8(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;e=i;i=i+8|0;f=e|0;g=f;c[f>>2]=1196314761;c[f+4>>2]=169478669;do{if(d>>>0>8>>>0){h=8}else{if((d|0)==0){j=-1}else{h=d;break}i=e;return j|0}}while(0);if(b>>>0>7>>>0){j=-1;i=e;return j|0}j=K4(a+b|0,g+b|0,((h+b|0)>>>0>8>>>0?8-b|0:h)|0)|0;i=e;return j|0}function B9(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;if((a|0)==0){d=0;return d|0}if((4294967295/(c>>>0)|0)>>>0>b>>>0){d=AH(a,ag(c,b)|0)|0;return d|0}else{An(a,24664);d=0;return d|0}return 0}function Ca(a,b){a=a|0;b=b|0;AB(a,b);return}function Cb(a){a=a|0;c[a+412>>2]=z4(0,0,0)|0;return}function Cc(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=c[a+212>>2]|0;if((c[a+376>>2]&536870912|0)==0){f=(e&2048|0)==0}else{f=(e&768|0)!=768}if((d|0)==0|f^1){return}f=a+412|0;a=c[f>>2]|0;e=d;d=b;while(1){b=(e|0)==0?-1:e;g=z4(a,d,b)|0;if((e|0)==(b|0)){break}else{a=g;e=e-b|0;d=d+b|0}}c[f>>2]=g;return}function Cd(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;e=i;i=i+128|0;f=e|0;g=(d|0)==0;h=b+212|0;do{if(g){j=c[h>>2]|131072;c[h>>2]=j;k=j}else{if((a[d]|0)!=49){c[h>>2]=c[h>>2]|131072}if((a[d+1|0]|0)!=46){c[h>>2]=c[h>>2]|131072}if((a[d+2|0]|0)!=54){c[h>>2]=c[h>>2]|131072}if((a[d+3|0]|0)!=46){c[h>>2]=c[h>>2]|131072}if((a[d+4|0]|0)!=54){c[h>>2]=c[h>>2]|131072}j=c[h>>2]|0;if((a[d+5|0]|0)==0){k=j;break}l=j|131072;c[h>>2]=l;k=l}}while(0);if((k&131072|0)==0){m=1;i=e;return m|0}do{if(!g){if((a[d]|0)!=49){break}if((a[d+2|0]|0)!=54){break}if((a[d+3|0]|0)==46){m=1}else{break}i=e;return m|0}}while(0);g=f|0;Al(g,128,Al(g,128,Al(g,128,Al(g,128,0,21808)|0,d)|0,20200)|0,13624)|0;An(b,g);m=0;i=e;return m|0}function Ce(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;j=i;i=i+1064|0;k=1;l=0;m=i;i=i+168|0;c[m>>2]=0;while(1)switch(k|0){case 1:n=j|0;o=j+904|0;p=n;K1(p|0,0,900)|0;c[n+748>>2]=2147483647;c[n+752>>2]=2147483647;c[n+756>>2]=0;c[n+760>>2]=0;bb(130,n|0,f|0,g|0,h|0);if((x|0)!=0&(y|0)!=0){l=K7(c[x>>2]|0,m)|0;if((l|0)>0){k=-1;break}else return 0}x=y=0;bb(48,n|0,b|0,d|0,e|0);if((x|0)!=0&(y|0)!=0){l=K7(c[x>>2]|0,m)|0;if((l|0)>0){k=-1;break}else return 0}x=y=0;q=K6(o|0,k,m)|0;k=6;break;case 6:if((q|0)==0){k=2;break}else{r=0;k=5;break};case 2:s=n+160|0;c[s>>2]=o;t=n+164|0;c[t>>2]=0;u=n+156|0;c[u>>2]=204;v=aY(58,n|0,a|0)|0;if((x|0)!=0&(y|0)!=0){l=K7(c[x>>2]|0,m)|0;if((l|0)>0){k=-1;break}else return 0}x=y=0;if((v|0)==0){r=0;k=5;break}else{k=3;break};case 3:w=aY(62,n|0,900)|0;if((x|0)!=0&(y|0)!=0){l=K7(c[x>>2]|0,m)|0;if((l|0)>0){k=-1;break}else return 0}x=y=0;if((w|0)==0){r=0;k=5;break}else{k=4;break};case 4:c[n+256>>2]=30;c[n+260>>2]=274;c[n+264>>2]=w;c[s>>2]=0;c[t>>2]=0;c[u>>2]=0;K2(w|0,p|0,900)|0;r=w;k=5;break;case 5:i=j;return r|0;case-1:if((l|0)==1){q=y;k=6}x=y=0;break}return 0}function Cf(a){a=a|0;var b=0,c=0,d=0;do{if((a|0)==0){b=0}else{c=AE(a,268)|0;d=c;if((c|0)==0){b=d;break}K1(c|0,0,268)|0;b=d}}while(0);return b|0}function Cg(a,b){a=a|0;b=b|0;var d=0;if((a|0)==0|(b|0)==0){return}d=c[b>>2]|0;if((d|0)==0){return}c[b>>2]=0;Ch(a,d,32767,-1);b=d;K1(b|0,0,268)|0;AB(a,b);return}function Ch(e,f,g,h){e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;if((e|0)==0|(f|0)==0){return}i=f+232|0;do{if((g&16384&c[i>>2]|0)!=0){if((h|0)==-1){j=f+128|0;if((c[j>>2]|0)>0){k=0;do{Ch(e,f,16384,k);k=k+1|0;}while((k|0)<(c[j>>2]|0))}k=f+136|0;AB(e,c[k>>2]|0);c[k>>2]=0;c[j>>2]=0;break}else{k=f+136|0;l=c[k>>2]|0;if((l|0)==0){break}m=c[l+(h*28|0)+4>>2]|0;if((m|0)==0){break}AB(e,m);c[(c[k>>2]|0)+(h*28|0)+4>>2]=0;break}}}while(0);k=c[i>>2]|0;if((g&8192&k|0)==0){n=k}else{k=f+156|0;AB(e,c[k>>2]|0);c[k>>2]=0;k=f+8|0;c[k>>2]=c[k>>2]&-17;n=c[i>>2]|0}if((g&256&n|0)==0){o=n}else{n=f+256|0;AB(e,c[n>>2]|0);k=f+260|0;AB(e,c[k>>2]|0);c[n>>2]=0;c[k>>2]=0;k=f+8|0;c[k>>2]=c[k>>2]&-16385;o=c[i>>2]|0}if((g&128&o|0)==0){p=o}else{o=f+208|0;AB(e,c[o>>2]|0);k=f+220|0;AB(e,c[k>>2]|0);c[o>>2]=0;c[k>>2]=0;k=f+224|0;o=c[k>>2]|0;if((o|0)!=0){n=f+229|0;if((a[n]|0)==0){q=o}else{m=0;l=o;while(1){AB(e,c[l+(m<<2)>>2]|0);c[(c[k>>2]|0)+(m<<2)>>2]=0;o=m+1|0;r=c[k>>2]|0;if(o>>>0<(d[n]|0)>>>0){m=o;l=r}else{q=r;break}}}AB(e,q);c[k>>2]=0}k=f+8|0;c[k>>2]=c[k>>2]&-1025;p=c[i>>2]|0}if((g&16&p|0)==0){s=p}else{p=f+116|0;AB(e,c[p>>2]|0);k=f+120|0;AB(e,c[k>>2]|0);c[p>>2]=0;c[k>>2]=0;k=f+8|0;c[k>>2]=c[k>>2]&-4097;s=c[i>>2]|0}do{if((g&32&s|0)!=0){if((h|0)!=-1){k=f+244|0;p=c[k>>2]|0;if((p|0)==0){break}AB(e,c[p+(h<<4)>>2]|0);AB(e,c[(c[k>>2]|0)+(h<<4)+8>>2]|0);c[(c[k>>2]|0)+(h<<4)>>2]=0;c[(c[k>>2]|0)+(h<<4)+8>>2]=0;break}k=f+248|0;p=c[k>>2]|0;if((p|0)!=0){if((p|0)>0){p=0;do{Ch(e,f,32,p);p=p+1|0;}while((p|0)<(c[k>>2]|0))}p=f+244|0;AB(e,c[p>>2]|0);c[p>>2]=0;c[k>>2]=0}p=f+8|0;c[p>>2]=c[p>>2]&-8193}}while(0);do{if((g&512&c[i>>2]|0)!=0){if((h|0)!=-1){s=f+236|0;p=c[s>>2]|0;if((p|0)==0){break}AB(e,c[p+(h*20|0)+8>>2]|0);c[(c[s>>2]|0)+(h*20|0)+8>>2]=0;break}s=f+240|0;p=c[s>>2]|0;if((p|0)==0){break}if((p|0)>0){p=0;do{Ch(e,f,512,p);p=p+1|0;}while((p|0)<(c[s>>2]|0))}p=f+236|0;AB(e,c[p>>2]|0);c[p>>2]=0;c[s>>2]=0}}while(0);p=c[i>>2]|0;if((g&8&p|0)==0){t=p}else{p=f+204|0;AB(e,c[p>>2]|0);c[p>>2]=0;p=f+8|0;c[p>>2]=c[p>>2]&-65;t=c[i>>2]|0}if((g&4096&t|0)==0){u=t}else{t=f+16|0;AB(e,c[t>>2]|0);c[t>>2]=0;t=f+8|0;c[t>>2]=c[t>>2]&-9;b[f+20>>1]=0;u=c[i>>2]|0}if((g&64&u|0)==0){v=u}else{t=f+264|0;p=c[t>>2]|0;if((p|0)==0){w=u}else{u=f+4|0;if((c[u>>2]|0)==0){x=p}else{k=0;j=p;while(1){AB(e,c[j+(k<<2)>>2]|0);c[(c[t>>2]|0)+(k<<2)>>2]=0;p=k+1|0;q=c[t>>2]|0;if(p>>>0<(c[u>>2]|0)>>>0){k=p;j=q}else{x=q;break}}}AB(e,x);c[t>>2]=0;w=c[i>>2]|0}t=f+8|0;c[t>>2]=c[t>>2]&-32769;v=w}c[i>>2]=v&~((h|0)==-1?g:g&-16929);return}function Ci(a){a=a|0;var b=0;if((a|0)==0){b=0}else{b=c[a+188>>2]|0}return b|0}function Cj(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,j=0,k=0;f=i;i=i+8|0;g=f|0;h=g|0;a[h]=e>>>24;a[g+1|0]=e>>>16;a[g+2|0]=e>>>8;a[g+3|0]=e;a[g+4|0]=0;if((b|0)==0){j=0;i=f;return j|0}g=c[b+692>>2]|0;if((g|0)==0){j=0;i=f;return j|0}e=c[b+696>>2]|0;b=e+(g*5|0)|0;while(1){g=b-5|0;if((K4(h|0,g|0,4)|0)==0){break}if(g>>>0>e>>>0){b=g}else{j=0;k=8;break}}if((k|0)==8){i=f;return j|0}j=d[b-1|0]|0;i=f;return j|0}function Ck(a,b){a=a|0;b=b|0;var d=0;d=a+248|0;L1:do{if((c[d>>2]|0)==0){switch(b|0){case-4:{c[d>>2]=23168;break L1;break};case-1:{c[d>>2]=23904;break L1;break};case-2:{c[d>>2]=23624;break L1;break};case-3:{c[d>>2]=23416;break L1;break};case-5:{c[d>>2]=22920;break L1;break};case-6:{c[d>>2]=22608;break L1;break};case 2:{c[d>>2]=24192;break L1;break};case 1:{c[d>>2]=25024;break L1;break};case-7:{c[d>>2]=22480;break L1;break};default:{c[d>>2]=25736;break L1}}}}while(0);return}function Cl(a,d,e){a=a|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0.0;do{if((e-16|0)>>>0>624999984>>>0){f=22200;g=b[d+74>>1]|0}else{h=b[d+74>>1]|0;if((c[a+208>>2]&32768|0)!=0){if((h&8)!=0){f=21944;g=h;break}}i=d+74|0;if(h<<16>>16<0){return}j=d|0;L9:do{if((h&1)!=0){k=c[j>>2]|0;do{if(!((e|0)==0|(k|0)==0)){l=+U(+(k|0)*1.0e5/+(e|0)+.5);if(!(l<=2147483647.0&l>=-2147483648.0)){break}if((~~l-95e3|0)>>>0<=1e4>>>0){break L9}}}while(0);if((h&32)==0){Av(a,14096,0);break}Av(a,14248,2);return}}while(0);c[j>>2]=e;b[i>>1]=h|9;return}}while(0);b[d+74>>1]=g|-32768;Av(a,f,1);return}function Cm(a,d){a=a|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0;e=b[d+114>>1]|0;f=e&65535;if((f&32768|0)==0){g=d+8|0;h=c[g>>2]|0;i=(f&128|0)==0?h&-2049:h|2048;h=(e&2)==0?i&-5:i|4;c[g>>2]=h;if((e&1)==0){c[g>>2]=h&-2;return}else{c[g>>2]=h|1;return}}h=d+8|0;g=c[h>>2]&-6150;c[h>>2]=g;if((a|0)==0){return}e=d+232|0;i=c[e>>2]|0;if((i&16|0)!=0){f=d+116|0;AB(a,c[f>>2]|0);j=d+120|0;AB(a,c[j>>2]|0);c[f>>2]=0;c[j>>2]=0;c[h>>2]=g}c[e>>2]=i&-17;return}function Cn(a,b){a=a|0;b=b|0;if((b|0)==0){return}K2(b+40|0,a+824|0,76)|0;Cm(a,b);return}function Co(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0;f=i;i=i+40|0;g=f|0;h=Cp(g,d)|0;if((h|0)==0){j=c+74|0;k=b[j>>1]|0;l=k&65535;if((l&32768|0)!=0){m=0;i=f;return m|0}do{if((e|0)<2){if((l&2|0)==0){break}if((Cs(d,c+4|0,100)|0)==0){b[j>>1]=k|-32768;Ao(a,14296);m=0;i=f;return m|0}else{if((e|0)==0){m=1}else{break}i=f;return m|0}}}while(0);K2(c+4|0,d|0,32)|0;K2(c+36|0,g|0,36)|0;g=(Cs(d,896,1e3)|0)==0;b[j>>1]=g?k&-67|2:k|66;m=2;i=f;return m|0}else if((h|0)==1){h=c+74|0;b[h>>1]=b[h>>1]|-32768;Ao(a,21608);m=0;i=f;return m|0}else{m=c+74|0;b[m>>1]=b[m>>1]|-32768;Ak(a,21480);return 0}return 0}function Cp(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0.0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0.0,N=0,O=0.0,P=0,Q=0,R=0,S=0,T=0,V=0,W=0,X=0,Y=0,Z=0;d=i;i=i+32|0;e=d|0;f=b|0;g=c[f>>2]|0;if(g>>>0>1e5>>>0){h=1;i=d;return h|0}j=b+4|0;k=c[j>>2]|0;if((k|0)<0){h=1;i=d;return h|0}if((k|0)>(1e5-g|0)){h=1;i=d;return h|0}l=b+8|0;m=c[l>>2]|0;if(m>>>0>1e5>>>0){h=1;i=d;return h|0}n=b+12|0;o=c[n>>2]|0;if((o|0)<0){h=1;i=d;return h|0}if((o|0)>(1e5-m|0)){h=1;i=d;return h|0}p=b+16|0;q=c[p>>2]|0;if(q>>>0>1e5>>>0){h=1;i=d;return h|0}r=b+20|0;s=c[r>>2]|0;if((s|0)<0){h=1;i=d;return h|0}if((s|0)>(1e5-q|0)){h=1;i=d;return h|0}t=b+24|0;u=c[t>>2]|0;if(u>>>0>1e5>>>0){h=1;i=d;return h|0}v=b+28|0;b=c[v>>2]|0;if((b|0)<0){h=1;i=d;return h|0}if((b|0)>(1e5-u|0)){h=1;i=d;return h|0}w=(m|0)==(q|0);x=(k|0)==(s|0);do{if(w|x){y=0}else{z=+U(+(m-q|0)*+(k-s|0)/7.0+.5);if(z<=2147483647.0&z>=-2147483648.0){y=~~z;break}else{h=2;i=d;return h|0}}}while(0);A=(o|0)==(s|0);B=(g|0)==(q|0);do{if(A|B){C=0}else{z=+U(+(g-q|0)*+(o-s|0)/7.0+.5);if(z<=2147483647.0&z>=-2147483648.0){C=~~z;break}else{h=2;i=d;return h|0}}}while(0);D=y-C|0;E=(b|0)==(s|0);do{if(w|E){F=0}else{z=+U(+(m-q|0)*+(b-s|0)/7.0+.5);if(z<=2147483647.0&z>=-2147483648.0){F=~~z;break}else{h=2;i=d;return h|0}}}while(0);m=(u|0)==(q|0);do{if(A|m){G=0}else{z=+U(+(o-s|0)*+(u-q|0)/7.0+.5);if(z<=2147483647.0&z>=-2147483648.0){G=~~z;break}else{h=2;i=d;return h|0}}}while(0);if((F|0)==(G|0)){h=1;i=d;return h|0}o=(b|0)==0|(y|0)==(C|0);do{if(o){H=0}else{z=+U(+(b|0)*+(D|0)/+(F-G|0)+.5);if(z<=2147483647.0&z>=-2147483648.0){H=~~z;break}else{h=1;i=d;return h|0}}}while(0);if((H|0)<=(b|0)){h=1;i=d;return h|0}do{if(x|m){I=0}else{z=+U(+(k-s|0)*+(u-q|0)/7.0+.5);if(z<=2147483647.0&z>=-2147483648.0){I=~~z;break}else{h=2;i=d;return h|0}}}while(0);do{if(B|E){J=0}else{z=+U(+(g-q|0)*+(b-s|0)/7.0+.5);if(z<=2147483647.0&z>=-2147483648.0){J=~~z;break}else{h=2;i=d;return h|0}}}while(0);if((I|0)==(J|0)){h=1;i=d;return h|0}do{if(o){K=0}else{z=+U(+(b|0)*+(D|0)/+(I-J|0)+.5);if(z<=2147483647.0&z>=-2147483648.0){K=~~z;break}else{h=1;i=d;return h|0}}}while(0);if((K|0)<=(b|0)){h=1;i=d;return h|0}z=+U(1.0e10/+(b|0)+.5);if(z<=2147483647.0&z>=-2147483648.0){L=~~z}else{L=0}z=+(H|0);M=+U(1.0e10/z+.5);if(M<=2147483647.0&M>=-2147483648.0){N=~~M}else{N=0}b=L-N|0;M=+(K|0);O=+U(1.0e10/M+.5);if(O<=2147483647.0&O>=-2147483648.0){P=~~O}else{P=0}N=b-P|0;if((N|0)<1){h=1;i=d;return h|0}L=a|0;if((H|0)==0){h=1;i=d;return h|0}do{if((g|0)==0){Q=0}else{O=+U(+(g|0)*1.0e5/z+.5);if(O<=2147483647.0&O>=-2147483648.0){Q=~~O;break}else{h=1;i=d;return h|0}}}while(0);c[L>>2]=Q;Q=a+4|0;L=c[j>>2]|0;do{if((L|0)==0){R=0}else{O=+U(+(L|0)*1.0e5/z+.5);if(O<=2147483647.0&O>=-2147483648.0){R=~~O;break}else{h=1;i=d;return h|0}}}while(0);c[Q>>2]=R;R=a+8|0;Q=1e5-(c[f>>2]|0)|0;L=c[j>>2]|0;do{if((Q|0)==(L|0)){S=0}else{O=+U(+(Q-L|0)*1.0e5/z+.5);if(O<=2147483647.0&O>=-2147483648.0){S=~~O;break}else{h=1;i=d;return h|0}}}while(0);c[R>>2]=S;S=a+12|0;R=c[l>>2]|0;if((K|0)==0){h=1;i=d;return h|0}do{if((R|0)==0){T=0}else{z=+U(+(R|0)*1.0e5/M+.5);if(z<=2147483647.0&z>=-2147483648.0){T=~~z;break}else{h=1;i=d;return h|0}}}while(0);c[S>>2]=T;T=a+16|0;S=c[n>>2]|0;do{if((S|0)==0){V=0}else{z=+U(+(S|0)*1.0e5/M+.5);if(z<=2147483647.0&z>=-2147483648.0){V=~~z;break}else{h=1;i=d;return h|0}}}while(0);c[T>>2]=V;V=a+20|0;T=1e5-(c[l>>2]|0)|0;S=c[n>>2]|0;do{if((T|0)==(S|0)){W=0}else{z=+U(+(T-S|0)*1.0e5/M+.5);if(z<=2147483647.0&z>=-2147483648.0){W=~~z;break}else{h=1;i=d;return h|0}}}while(0);c[V>>2]=W;W=a+24|0;V=c[p>>2]|0;S=(b|0)==(P|0);do{if((V|0)==0|S){X=0}else{M=+U(+(N|0)*+(V|0)/1.0e5+.5);if(M<=2147483647.0&M>=-2147483648.0){X=~~M;break}else{h=1;i=d;return h|0}}}while(0);c[W>>2]=X;X=a+28|0;W=c[r>>2]|0;do{if((W|0)==0|S){Y=0}else{M=+U(+(N|0)*+(W|0)/1.0e5+.5);if(M<=2147483647.0&M>=-2147483648.0){Y=~~M;break}else{h=1;i=d;return h|0}}}while(0);c[X>>2]=Y;Y=a+32|0;X=1e5-(c[p>>2]|0)|0;W=c[r>>2]|0;do{if((X|0)==(W|0)|S){Z=0}else{M=+U(+(N|0)*+(X-W|0)/1.0e5+.5);if(M<=2147483647.0&M>=-2147483648.0){Z=~~M;break}else{h=1;i=d;return h|0}}}while(0);c[Y>>2]=Z;Z=CK(e,a)|0;if((Z|0)!=0){h=Z;i=d;return h|0}Z=c[t>>2]|0;t=c[e+24>>2]|0;if((Z|0)<(t-5|0)|(Z|0)>(t+5|0)){h=1;i=d;return h|0}t=c[v>>2]|0;v=c[e+28>>2]|0;if((t|0)<(v-5|0)|(t|0)>(v+5|0)){h=1;i=d;return h|0}v=c[f>>2]|0;f=c[e>>2]|0;if((v|0)<(f-5|0)|(v|0)>(f+5|0)){h=1;i=d;return h|0}f=c[j>>2]|0;j=c[e+4>>2]|0;if((f|0)<(j-5|0)|(f|0)>(j+5|0)){h=1;i=d;return h|0}j=c[l>>2]|0;l=c[e+8>>2]|0;if((j|0)<(l-5|0)|(j|0)>(l+5|0)){h=1;i=d;return h|0}l=c[n>>2]|0;n=c[e+12>>2]|0;if((l|0)<(n-5|0)|(l|0)>(n+5|0)){h=1;i=d;return h|0}n=c[p>>2]|0;p=c[e+16>>2]|0;if((n|0)<(p-5|0)|(n|0)>(p+5|0)){h=1;i=d;return h|0}p=c[r>>2]|0;r=c[e+20>>2]|0;if((p|0)<(r-5|0)){h=1;i=d;return h|0}h=(p|0)>(r+5|0)|0;i=d;return h|0}function Cq(a,d,f){a=a|0;d=d|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0.0;g=d+74|0;h=b[g>>1]|0;i=h&65535;if((i&32768|0)!=0){j=0;return j|0}if(f>>>0>3>>>0){Cr(a,d,21280,f,21128);j=0;return j|0}do{if((i&4|0)!=0){if((e[d+72>>1]|0|0)==(f|0)){break}Cr(a,d,21280,f,20968);j=0;return j|0}}while(0);if((i&32|0)!=0){Ao(a,20728);j=0;return j|0}do{if((i&2|0)==0){k=h}else{if((Cs(896,d+4|0,100)|0)!=0){k=h;break}Av(a,20608,2);k=b[g>>1]|0}}while(0);h=d|0;L21:do{if((k&1)==0){l=k}else{i=c[h>>2]|0;do{if((i|0)!=0){m=+U(+(i|0)*1.0e5/45455.0+.5);if(!(m<=2147483647.0&m>=-2147483648.0)){break}if((~~m-95e3|0)>>>0<=1e4>>>0){l=k;break L21}}}while(0);Av(a,14248,2);l=b[g>>1]|0}}while(0);b[d+72>>1]=f;K2(d+4|0,896,32)|0;K2(d+36|0,1544,36)|0;c[h>>2]=45455;b[g>>1]=l|231;j=1;return j|0}function Cr(c,d,e,f,g){c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;h=i;i=i+224|0;j=h|0;k=h+200|0;l=(d|0)!=0;if(l){m=d+74|0;b[m>>1]=b[m>>1]|-32768}m=j|0;d=Al(m,196,0,14496)|0;n=Al(m,196,Al(m,d+79|0,d,e)|0,14416)|0;e=f>>>24;if((e|0)==32|(e-48|0)>>>0<10>>>0|(e-65|0)>>>0<26>>>0){o=5}else{if((f-1627389952|0)>>>0<436207616>>>0){o=5}}do{if((o|0)==5){d=f>>>16;p=d&255;if(!((p|0)==32|(p-48|0)>>>0<10>>>0|(p-65|0)>>>0<26>>>0|(p-97|0)>>>0<26>>>0)){break}q=f>>>8;r=q&255;if(!((r|0)==32|(r-48|0)>>>0<10>>>0|(r-65|0)>>>0<26>>>0|(r-97|0)>>>0<26>>>0)){break}s=f&255;if(!((s|0)==32|(s-48|0)>>>0<10>>>0|(s-65|0)>>>0<26>>>0|(s-97|0)>>>0<26>>>0)){break}a[j+n|0]=39;a[j+(n+1)|0]=(e-32|0)>>>0<95>>>0?e&255:63;a[j+(n+2)|0]=(p-32|0)>>>0<95>>>0?d&255:63;a[j+(n+3)|0]=(r-32|0)>>>0<95>>>0?q&255:63;a[j+(n+4)|0]=(s-32|0)>>>0<95>>>0?f&255:63;a[j+(n+5)|0]=39;a[j+(n+6)|0]=58;a[j+(n+7)|0]=32;t=n+8|0;u=Al(m,196,t,g)|0;v=l?2:1;Av(c,m,v);i=h;return}}while(0);t=Al(m,196,Al(m,196,n,Am(k|0,k+24|0,3,f)|0)|0,14376)|0;u=Al(m,196,t,g)|0;v=l?2:1;Av(c,m,v);i=h;return}function Cs(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=c[a+24>>2]|0;f=c[b+24>>2]|0;if((e|0)<(f-d|0)|(e|0)>(f+d|0)){g=0;return g|0}f=c[a+28>>2]|0;e=c[b+28>>2]|0;if((f|0)<(e-d|0)|(f|0)>(e+d|0)){g=0;return g|0}e=c[a>>2]|0;f=c[b>>2]|0;if((e|0)<(f-d|0)|(e|0)>(f+d|0)){g=0;return g|0}f=c[a+4>>2]|0;e=c[b+4>>2]|0;if((f|0)<(e-d|0)|(f|0)>(e+d|0)){g=0;return g|0}e=c[a+8>>2]|0;f=c[b+8>>2]|0;if((e|0)<(f-d|0)|(e|0)>(f+d|0)){g=0;return g|0}f=c[a+12>>2]|0;e=c[b+12>>2]|0;if((f|0)<(e-d|0)|(f|0)>(e+d|0)){g=0;return g|0}e=c[a+16>>2]|0;f=c[b+16>>2]|0;if((e|0)<(f-d|0)|(e|0)>(f+d|0)){g=0;return g|0}f=c[a+20>>2]|0;a=c[b+20>>2]|0;if((f|0)<(a-d|0)){g=0;return g|0}g=(f|0)<=(a+d|0)|0;return g|0}function Ct(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;if(d>>>0<132>>>0){Cr(a,b,c,d,20504);e=0;return e|0}if((d&3|0)==0){e=1;return e|0}Cr(a,b,c,d,20344);e=0;return e|0}function Cu(a,b,c,e,f,g){a=a|0;b=b|0;c=c|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;h=i;i=i+224|0;j=h|0;k=h+200|0;l=(d[f+1|0]|0)<<16|(d[f]|0)<<24|(d[f+2|0]|0)<<8|(d[f+3|0]|0);if((l|0)!=(e|0)){Cr(a,b,c,l,20016);m=0;i=h;return m|0}l=(d[f+129|0]|0)<<16|(d[f+128|0]|0)<<24|(d[f+130|0]|0)<<8|(d[f+131|0]|0);do{if(l>>>0<=357913930>>>0){if(((l*12|0)+132|0)>>>0>e>>>0){break}n=(d[f+65|0]|0)<<16|(d[f+64|0]|0)<<24|(d[f+66|0]|0)<<8|(d[f+67|0]|0);if(n>>>0>65534>>>0){Cr(a,b,c,n,19768);m=0;i=h;return m|0}if(n>>>0>3>>>0){Cr(a,0,c,n,19608)}n=(d[f+37|0]|0)<<16|(d[f+36|0]|0)<<24|(d[f+38|0]|0)<<8|(d[f+39|0]|0);if((n|0)!=1633907568){Cr(a,b,c,n,19384);m=0;i=h;return m|0}if((K4(f+68|0,49176,12)|0)!=0){n=j|0;o=Al(n,196,0,14496)|0;p=Al(n,196,Al(n,o+79|0,o,c)|0,14416)|0;Al(n,196,Al(n,196,Al(n,196,p,Am(k|0,k+24|0,3,0)|0)|0,14376)|0,19200)|0;Av(a,n,1)}n=(d[f+17|0]|0)<<16|(d[f+16|0]|0)<<24|(d[f+18|0]|0)<<8|(d[f+19|0]|0);do{if((n|0)==1380401696){if((g&2|0)!=0){break}Cr(a,b,c,1380401696,19016);m=0;i=h;return m|0}else if((n|0)==1196573017){if((g&2|0)==0){break}Cr(a,b,c,1196573017,18888);m=0;i=h;return m|0}else{Cr(a,b,c,n,18704);m=0;i=h;return m|0}}while(0);n=(d[f+13|0]|0)<<16|(d[f+12|0]|0)<<24|(d[f+14|0]|0)<<8|(d[f+15|0]|0);if((n|0)==1852662636){Cr(a,0,c,1852662636,18232)}else if((n|0)==1633842036){Cr(a,b,c,1633842036,18552);m=0;i=h;return m|0}else if((n|0)==1818848875){Cr(a,b,c,1818848875,18320);m=0;i=h;return m|0}else if(!((n|0)==1935896178|(n|0)==1835955314|(n|0)==1886549106|(n|0)==1936744803)){Cr(a,0,c,n,18088)}n=(d[f+21|0]|0)<<16|(d[f+20|0]|0)<<24|(d[f+22|0]|0)<<8|(d[f+23|0]|0);if((n|0)==1482250784|(n|0)==1281450528){m=1;i=h;return m|0}Cr(a,b,c,n,18008);m=0;i=h;return m|0}}while(0);Cr(a,b,c,l,19920);m=0;i=h;return m|0}function Cv(a,b,c,e,f){a=a|0;b=b|0;c=c|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;g=(d[f+129|0]|0)<<16|(d[f+128|0]|0)<<24|(d[f+130|0]|0)<<8|(d[f+131|0]|0);if((g|0)==0){h=1;return h|0}i=f+132|0;f=0;while(1){j=(d[i+1|0]|0)<<16|(d[i]|0)<<24|(d[i+2|0]|0)<<8|(d[i+3|0]|0);k=d[i+7|0]|0;l=(d[i+5|0]|0)<<16|(d[i+4|0]|0)<<24|(d[i+6|0]|0)<<8|k;m=(d[i+9|0]|0)<<16|(d[i+8|0]|0)<<24|(d[i+10|0]|0)<<8|(d[i+11|0]|0);if((k&3|0)!=0){Cr(a,0,c,j,17872)}if(l>>>0>e>>>0|m>>>0>(e-l|0)>>>0){break}l=f+1|0;if(l>>>0<g>>>0){i=i+12|0;f=l}else{h=1;n=9;break}}if((n|0)==9){return h|0}Cr(a,b,c,j,17752);h=0;return h|0}function Cw(a,b,f,g){a=a|0;b=b|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0;h=f+84|0;i=f+85|0;j=f+86|0;k=f+87|0;l=f+88|0;m=f+89|0;n=f+90|0;o=f+91|0;p=f+92|0;q=f+93|0;r=f+94|0;s=f+95|0;t=f+96|0;u=f+97|0;v=f+98|0;w=f+99|0;x=f+1|0;y=f+2|0;z=f+3|0;A=f+64|0;B=f+65|0;C=f+66|0;D=f+67|0;E=g;g=0;F=65536;G=0;H=0;L1:while(1){do{if(((d[i]|0)<<16|(d[h]|0)<<24|(d[j]|0)<<8|(d[k]|0)|0)==(c[1012+(H<<5)>>2]|0)){if(((d[m]|0)<<16|(d[l]|0)<<24|(d[n]|0)<<8|(d[o]|0)|0)!=(c[1016+(H<<5)>>2]|0)){I=G;J=F;K=g;L=E;break}if(((d[q]|0)<<16|(d[p]|0)<<24|(d[r]|0)<<8|(d[s]|0)|0)!=(c[1020+(H<<5)>>2]|0)){I=G;J=F;K=g;L=E;break}if(((d[u]|0)<<16|(d[t]|0)<<24|(d[v]|0)<<8|(d[w]|0)|0)!=(c[1024+(H<<5)>>2]|0)){I=G;J=F;K=g;L=E;break}if((g|0)==0){M=(d[B]|0)<<16|(d[A]|0)<<24|(d[C]|0)<<8|(d[D]|0);N=(d[x]|0)<<16|(d[f]|0)<<24|(d[y]|0)<<8|(d[z]|0)}else{M=F;N=g}do{if((N|0)==(c[1008+(H<<5)>>2]|0)){if((M|0)!=(e[1030+(H<<5)>>1]|0|0)){O=G;P=E;break}if((E|0)==0){Q=z3(z3(0,0,0)|0,f,N)|0}else{Q=E}if((Q|0)!=(c[1e3+(H<<5)>>2]|0)){O=G;P=Q;break}if((G|0)==0){R=z4(z4(0,0,0)|0,f,N)|0}else{R=G}if((R|0)==(c[1004+(H<<5)>>2]|0)){break L1}else{O=R;P=Q}}else{O=G;P=E}}while(0);if(H>>>0>=4>>>0){I=O;J=M;K=N;L=P;break}Ao(a,14672);I=O;J=M;K=N;L=P}else{I=G;J=F;K=g;L=E}}while(0);S=H+1|0;if(S>>>0<7>>>0){E=L;g=K;F=J;G=I;H=S}else{T=26;break}}if((T|0)==26){return}do{if((H-5|0)>>>0<2>>>0){Av(a,14992,2)}else{if(H>>>0<4>>>0){break}Av(a,14840,0)}}while(0);Cq(a,b,(d[B]|0)<<16|(d[A]|0)<<24|(d[C]|0)<<8|(d[D]|0))|0;return}function Cx(d){d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0.0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;if((a[d+701|0]|0)!=0){return}if((b[d+898>>1]&2)==0){return}e=c[d+864>>2]|0;f=c[d+876>>2]|0;g=c[d+888>>2]|0;h=f+e+g|0;if((e|0)<0|(h|0)<1|(h|0)==0){Ak(d,17488)}do{if((e|0)==0){i=0}else{j=+U(+(e|0)*32768.0/+(h|0)+.5);if(j<=2147483647.0&j>=-2147483648.0){i=~~j;break}else{Ak(d,17488)}}}while(0);if((f|0)<0|i>>>0>32768>>>0){Ak(d,17488)}do{if((f|0)==0){k=0}else{j=+U(+(f|0)*32768.0/+(h|0)+.5);if(j<=2147483647.0&j>=-2147483648.0){k=~~j;break}else{Ak(d,17488)}}}while(0);if((g|0)<0|k>>>0>32768>>>0){Ak(d,17488)}do{if((g|0)==0){l=0}else{j=+U(+(g|0)*32768.0/+(h|0)+.5);if(!(j<=2147483647.0&j>=-2147483648.0)){Ak(d,17488)}f=~~j;if(f>>>0<32769>>>0){l=f;break}Ak(d,17488)}}while(0);h=k+i+l|0;if((h|0)>=32770){Ak(d,17488)}if((h|0)>32768){m=-1;n=18}else{g=(h|0)<32768;if(g){m=g&1;n=18}else{o=l;p=k;q=i}}do{if((n|0)==18){if(!((k|0)<(i|0)|(k|0)<(l|0))){o=l;p=m+k|0;q=i;break}if((i|0)<(k|0)|(i|0)<(l|0)){o=m+l|0;p=k;q=i;break}else{o=l;p=k;q=m+i|0;break}}}while(0);if((p+q+o|0)!=32768){Ak(d,17624)}b[d+702>>1]=q;b[d+704>>1]=p;return}function Cy(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0.0;if((e|0)==0){f=0;return f|0}if((b|0)==0|(d|0)==0){c[a>>2]=0;f=1;return f|0}g=+U(+(b|0)*+(d|0)/+(e|0)+.5);if(!(g<=2147483647.0&g>=-2147483648.0)){f=0;return f|0}c[a>>2]=~~g;f=1;return f|0}function Cz(a,b,d,e,f,g,h,i){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;if((b|0)==0){An(a,17272);j=1}else{j=0}if((d|0)==0){An(a,17144);k=1}else{k=j}if((c[a+748>>2]|0)>>>0<b>>>0){An(a,16944);l=1}else{l=k}if((c[a+752>>2]|0)>>>0<d>>>0){An(a,16824);m=1}else{m=l}if((b|0)<0){An(a,16640);n=1}else{n=m}if((d|0)<0){An(a,16520);o=1}else{o=n}if(b>>>0>536870798>>>0){An(a,16384)}if((e-1|0)>>>0>1>>>0&(e|0)!=4&(e|0)!=8&(e|0)!=16){An(a,16256);p=1}else{p=o}if((f|0)<0|(f|0)==1|(f|0)==5|(f|0)>6){An(a,16144);q=1}else{q=p}do{if((f|0)==3&(e|0)>8){r=22}else{if(!((f|0)==6|(f|0)==4|(f|0)==2)){s=q;break}if((e|0)<8){r=22}else{s=q}}}while(0);if((r|0)==22){An(a,16048);s=1}if((g|0)>1){An(a,15896);t=1}else{t=s}if((h|0)==0){u=t}else{An(a,15776);u=1}t=a+208|0;do{if((c[t>>2]&4096|0)!=0){if((c[a+708>>2]|0)==0){break}An(a,15632)}}while(0);do{if((i|0)==0){v=u}else{do{if((c[a+708>>2]&4|0)!=0&(i|0)==64){h=c[t>>2]|0;if((h&4096|0)!=0){r=34;break}if((f|0)==6|(f|0)==2){w=u;x=h}else{r=34}}else{r=34}}while(0);if((r|0)==34){An(a,15552);w=1;x=c[t>>2]|0}if((x&4096|0)==0){v=w;break}An(a,15496);Ak(a,15424)}}while(0);if((v|0)==1){Ak(a,15424)}else{return}}function CA(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;g=c[e>>2]|0;h=c[f>>2]|0;L1:do{if(h>>>0<d>>>0){i=g;j=h;while(1){switch(a[b+j|0]|0){case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:{k=264;break};case 46:{k=16;break};case 48:{k=8;break};case 69:case 101:{k=32;break};case 43:{k=4;break};case 45:{k=132;break};default:{l=i;m=j;break L1}}L11:do{switch(k&60|i&3|0){case 33:{if((i&8|0)==0){l=i;m=j;break L1}n=i&448|2;break};case 8:{if((i&16|0)==0){o=i}else{o=i&448|17}n=k|o|64;break};case 9:{n=i|k|64;break};case 32:{if((i&8|0)==0){l=i;m=j;break L1}n=i&448|2;break};case 4:{if((i&60|0)!=0){l=i;m=j;break L1}n=k|i;break};case 10:{n=i|72;break};case 6:{if((i&60|0)!=0){l=i;m=j;break L1}n=i|4;break};case 16:{if((i&16|0)!=0){l=i;m=j;break L1}if((i&8|0)==0){n=i&448|k|1;break L11}else{n=k|i;break L11}break};default:{l=i;m=j;break L1}}}while(0);p=j+1|0;if(p>>>0<d>>>0){i=n;j=p}else{l=n;m=p;break L1}}}else{l=g;m=h}}while(0);c[e>>2]=l;c[f>>2]=m;return l>>>3&1|0}function CB(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;e=i;i=i+16|0;f=e|0;g=e+8|0;c[f>>2]=0;c[g>>2]=0;if((CA(b,d,f,g)|0)==0){h=0;i=e;return h|0}j=c[g>>2]|0;do{if((j|0)!=(d|0)){if((a[b+j|0]|0)==0){break}else{h=0}i=e;return h|0}}while(0);h=c[f>>2]|0;i=e;return h|0}function CC(a){a=a|0;var b=0.0,c=0;b=+U(1.0e10/+(a|0)+.5);if(!(b<=2147483647.0&b>=-2147483648.0)){c=0;return c|0}c=~~b;return c|0}function CD(a){a=a|0;var b=0;if((a|0)<95e3){b=1}else{b=(a|0)>105e3|0}return b|0}function CE(a,b){a=a|0;b=b|0;var c=0.0,d=0;c=+U(1.0e15/+(a|0)/+(b|0)+.5);if(!(c<=2147483647.0&c>=-2147483648.0)){d=0;return d|0}d=~~c;return d|0}function CF(a,b){a=a|0;b=b|0;var c=0;if((a|0)!=0&a>>>0<255>>>0){c=~~+U(+X(+(+(a>>>0>>>0)/255.0),+(+(b|0)*1.0e-5))*255.0+.5);return c|0}else{c=a&255;return c|0}return 0}function CG(b,c,d){b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0;e=(c|0)!=0;if((a[b+436|0]|0)==8){if(e&c>>>0<255>>>0){f=~~+U(+X(+(+(c>>>0>>>0)/255.0),+(+(d|0)*1.0e-5))*255.0+.5)}else{f=c&255}g=f&255;return g|0}else{if(e&c>>>0<65535>>>0){g=~~+U(+X(+(+(c>>>0>>>0)/65535.0),+(+(d|0)*1.0e-5))*65535.0+.5);return g|0}else{g=c&65535;return g|0}}return 0}function CH(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;b=a+492|0;AB(a,c[b>>2]|0);c[b>>2]=0;b=a+496|0;d=c[b>>2]|0;if((d|0)!=0){e=1<<8-(c[a+484>>2]|0);if((e|0)>0){f=0;g=d;while(1){AB(a,c[g+(f<<2)>>2]|0);h=f+1|0;i=c[b>>2]|0;if((h|0)<(e|0)){f=h;g=i}else{j=i;break}}}else{j=d}AB(a,j);c[b>>2]=0}b=a+500|0;AB(a,c[b>>2]|0);c[b>>2]=0;b=a+504|0;AB(a,c[b>>2]|0);c[b>>2]=0;b=a+508|0;j=c[b>>2]|0;if((j|0)!=0){d=1<<8-(c[a+484>>2]|0);if((d|0)>0){g=0;f=j;while(1){AB(a,c[f+(g<<2)>>2]|0);e=g+1|0;i=c[b>>2]|0;if((e|0)<(d|0)){g=e;f=i}else{k=i;break}}}else{k=j}AB(a,k);c[b>>2]=0}b=a+512|0;k=c[b>>2]|0;if((k|0)==0){return}j=1<<8-(c[a+484>>2]|0);if((j|0)>0){f=0;g=k;while(1){AB(a,c[g+(f<<2)>>2]|0);d=f+1|0;i=c[b>>2]|0;if((d|0)<(j|0)){f=d;g=i}else{l=i;break}}}else{l=k}AB(a,l);c[b>>2]=0;return}function CI(d,e){d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0.0,n=0,o=0.0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0;f=d+492|0;if((c[f>>2]|0)==0){if((c[d+496>>2]|0)!=0){g=3}}else{g=3}if((g|0)==3){An(d,15112);CH(d)}if((e|0)>=9){if((a[d+435|0]&2)==0){h=a[d+519|0]|0}else{e=a[d+516|0]|0;g=a[d+517|0]|0;i=(g&255)>>>0>(e&255)>>>0?g:e;e=a[d+518|0]|0;h=(e&255)>>>0>(i&255)>>>0?e:i}i=h<<24>>24!=0&(h&255)>>>0<16>>>0?16-h&255:0;h=d+216|0;e=c[h>>2]&67109888;g=(e|0)!=0&(i&255)>>>0<5>>>0?5:i;i=(g&255)>>>0>8>>>0?8:g&255;c[d+484>>2]=i;g=d+496|0;j=d+488|0;k=c[j>>2]|0;l=(k|0)>0;do{if((e|0)==0){do{if(l){m=+U(1.0e15/+(c[d+824>>2]|0)/+(k|0)+.5);if(!(m<=2147483647.0&m>=-2147483648.0)){n=0;break}n=~~m}else{n=1e5}}while(0);CJ(d,g,i,n)}else{do{if(l){m=+U(+(k|0)*+(c[d+824>>2]|0)*1.0e-5+.5);if(!(m<=2147483647.0&m>=-2147483648.0)){o=0.0;break}o=+(~~m|0)*1.0e-5}else{o=1.0}}while(0);p=8-i|0;q=1<<p;r=16-i|0;s=AC(d,q<<2)|0;c[g>>2]=s;t=0;do{c[s+(t<<2)>>2]=AD(d,512)|0;t=t+1|0;}while(t>>>0<q>>>0);t=(1<<r)-1|0;u=255>>>(i>>>0);v=0;w=0;while(1){x=w*257|0;y=x&65535;z=((((ag(~~+U(+X(+(+((x+128|0)>>>0>>>0)/65535.0),+o)*65535.0+.5)&65535,t)|0)+32768|0)>>>0)/65535|0)+1|0;if(v>>>0<z>>>0){x=v;while(1){b[(c[s+((x&u)<<2)>>2]|0)+(x>>>(p>>>0)<<1)>>1]=y;A=x+1|0;if(A>>>0<z>>>0){x=A}else{B=z;break}}}else{B=v}z=w+1|0;if(z>>>0<255>>>0){v=B;w=z}else{break}}w=q<<8;if(B>>>0<w>>>0){C=B}else{break}do{b[(c[s+((C&u)<<2)>>2]|0)+(C>>>(p>>>0)<<1)>>1]=-1;C=C+1|0;}while(C>>>0<w>>>0)}}while(0);if((c[h>>2]&6291584|0)==0){return}h=d+824|0;o=+U(1.0e10/+(c[h>>2]|0)+.5);if(o<=2147483647.0&o>=-2147483648.0){D=~~o}else{D=0}CJ(d,d+512|0,i,D);D=d+508|0;C=c[j>>2]|0;do{if((C|0)>0){o=+U(1.0e10/+(C|0)+.5);if(!(o<=2147483647.0&o>=-2147483648.0)){E=0;break}E=~~o}else{E=c[h>>2]|0}}while(0);CJ(d,D,i,E);return}E=d+488|0;i=c[E>>2]|0;do{if((i|0)>0){o=+U(1.0e15/+(c[d+824>>2]|0)/+(i|0)+.5);if(!(o<=2147483647.0&o>=-2147483648.0)){F=0;break}F=~~o}else{F=1e5}}while(0);i=AD(d,256)|0;c[f>>2]=i;if((F-95e3|0)>>>0>1e4>>>0){o=+(F|0)*1.0e-5;F=0;do{if((F|0)!=0&F>>>0<255>>>0){G=~~+U(+X(+(+(F>>>0>>>0)/255.0),+o)*255.0+.5)}else{G=F&255}a[i+F|0]=G;F=F+1|0;}while(F>>>0<256>>>0)}else{F=0;do{a[i+F|0]=F;F=F+1|0;}while(F>>>0<256>>>0)}if((c[d+216>>2]&6291584|0)==0){return}F=d+824|0;o=+U(1.0e10/+(c[F>>2]|0)+.5);if(o<=2147483647.0&o>=-2147483648.0){H=~~o}else{H=0}i=AD(d,256)|0;c[d+504>>2]=i;if((H-95e3|0)>>>0>1e4>>>0){o=+(H|0)*1.0e-5;H=0;do{if((H|0)!=0&H>>>0<255>>>0){I=~~+U(+X(+(+(H>>>0>>>0)/255.0),+o)*255.0+.5)}else{I=H&255}a[i+H|0]=I;H=H+1|0;}while(H>>>0<256>>>0)}else{H=0;do{a[i+H|0]=H;H=H+1|0;}while(H>>>0<256>>>0)}H=d+500|0;i=c[E>>2]|0;do{if((i|0)>0){o=+U(1.0e10/+(i|0)+.5);if(!(o<=2147483647.0&o>=-2147483648.0)){J=0;break}J=~~o}else{J=c[F>>2]|0}}while(0);F=AD(d,256)|0;c[H>>2]=F;if((J-95e3|0)>>>0<=1e4>>>0){H=0;do{a[F+H|0]=H;H=H+1|0;}while(H>>>0<256>>>0);return}o=+(J|0)*1.0e-5;J=0;do{if((J|0)!=0&J>>>0<255>>>0){K=~~+U(+X(+(+(J>>>0>>>0)/255.0),+o)*255.0+.5)}else{K=J&255}a[F+J|0]=K;J=J+1|0;}while(J>>>0<256>>>0);return}function CJ(a,d,e,f){a=a|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0.0,m=0.0,n=0,o=0;g=8-e|0;h=1<<g;i=(1<<16-e)-1|0;j=1<<15-e;k=AC(a,h<<2)|0;c[d>>2]=k;d=(e|0)==0;l=+(i>>>0>>>0);m=+(f|0)*1.0e-5;if((f-95e3|0)>>>0>1e4>>>0){f=0;do{e=AD(a,512)|0;c[k+(f<<2)>>2]=e;n=0;do{b[e+(n<<1)>>1]=~~+U(+X(+(+(((n<<g)+f|0)>>>0>>>0)/l),+m)*65535.0+.5);n=n+1|0;}while(n>>>0<256>>>0);f=f+1|0;}while(f>>>0<h>>>0);return}else{o=0}do{f=AD(a,512)|0;c[k+(o<<2)>>2]=f;if(d){n=0;do{b[f+(n<<1)>>1]=(n<<g)+o;n=n+1|0;}while(n>>>0<256>>>0)}else{n=0;do{b[f+(n<<1)>>1]=(((((n<<g)+o|0)*65535|0)+j|0)>>>0)/(i>>>0)|0;n=n+1|0;}while(n>>>0<256>>>0)}o=o+1|0;}while(o>>>0<h>>>0);return}function CK(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0.0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;d=b|0;e=c[d>>2]|0;f=b+4|0;g=(c[f>>2]|0)+e+(c[b+8>>2]|0)|0;h=a|0;if((g|0)==0){i=1;return i|0}do{if((e|0)==0){j=0}else{k=+U(+(e|0)*1.0e5/+(g|0)+.5);if(k<=2147483647.0&k>=-2147483648.0){j=~~k;break}else{i=1;return i|0}}}while(0);c[h>>2]=j;j=a+4|0;h=c[f>>2]|0;do{if((h|0)==0){l=0}else{k=+U(+(h|0)*1.0e5/+(g|0)+.5);if(k<=2147483647.0&k>=-2147483648.0){l=~~k;break}else{i=1;return i|0}}}while(0);c[j>>2]=l;l=c[d>>2]|0;d=c[f>>2]|0;f=b+12|0;j=c[f>>2]|0;h=b+16|0;e=(c[h>>2]|0)+j+(c[b+20>>2]|0)|0;m=a+8|0;if((e|0)==0){i=1;return i|0}do{if((j|0)==0){n=0}else{k=+U(+(j|0)*1.0e5/+(e|0)+.5);if(k<=2147483647.0&k>=-2147483648.0){n=~~k;break}else{i=1;return i|0}}}while(0);c[m>>2]=n;n=a+12|0;m=c[h>>2]|0;do{if((m|0)==0){o=0}else{k=+U(+(m|0)*1.0e5/+(e|0)+.5);if(k<=2147483647.0&k>=-2147483648.0){o=~~k;break}else{i=1;return i|0}}}while(0);c[n>>2]=o;o=e+g|0;g=(c[f>>2]|0)+l|0;l=(c[h>>2]|0)+d|0;d=b+24|0;h=c[d>>2]|0;f=b+28|0;e=(c[f>>2]|0)+h+(c[b+32>>2]|0)|0;b=a+16|0;if((e|0)==0){i=1;return i|0}do{if((h|0)==0){p=0}else{k=+U(+(h|0)*1.0e5/+(e|0)+.5);if(k<=2147483647.0&k>=-2147483648.0){p=~~k;break}else{i=1;return i|0}}}while(0);c[b>>2]=p;p=a+20|0;b=c[f>>2]|0;do{if((b|0)==0){q=0}else{k=+U(+(b|0)*1.0e5/+(e|0)+.5);if(k<=2147483647.0&k>=-2147483648.0){q=~~k;break}else{i=1;return i|0}}}while(0);c[p>>2]=q;q=o+e|0;e=g+(c[d>>2]|0)|0;d=c[f>>2]|0;f=a+24|0;if((q|0)==0){i=1;return i|0}do{if((e|0)==0){r=0}else{k=+U(+(e|0)*1.0e5/+(q|0)+.5);if(k<=2147483647.0&k>=-2147483648.0){r=~~k;break}else{i=1;return i|0}}}while(0);c[f>>2]=r;r=l+d|0;d=a+28|0;if((r|0)==0){c[d>>2]=0;i=0;return i|0}k=+U(+(r|0)*1.0e5/+(q|0)+.5);if(!(k<=2147483647.0&k>=-2147483648.0)){i=1;return i|0}c[d>>2]=~~k;i=0;return i|0}function CL(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;if((a|0)==0|(b|0)==0){e=0;return e|0}e=c[b+8>>2]&d;return e|0}function CM(a,b){a=a|0;b=b|0;var d=0;if((a|0)==0|(b|0)==0){d=0;return d|0}d=c[b+12>>2]|0;return d|0}function CN(b,c){b=b|0;c=c|0;var d=0;if((b|0)==0|(c|0)==0){d=0;return d|0}d=a[c+25|0]|0;return d|0}function CO(a,b,e,f,g,h,i,j,k){a=a|0;b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;var l=0,m=0;if((a|0)==0|(b|0)==0|(e|0)==0|(f|0)==0|(g|0)==0|(h|0)==0){l=0;return l|0}m=b|0;c[e>>2]=c[m>>2];e=b+4|0;c[f>>2]=c[e>>2];f=b+24|0;c[g>>2]=d[f]|0;g=b+25|0;c[h>>2]=d[g]|0;if((j|0)!=0){c[j>>2]=d[b+26|0]|0}if((k|0)!=0){c[k>>2]=d[b+27|0]|0}k=b+28|0;if((i|0)!=0){c[i>>2]=d[k]|0}Cz(a,c[m>>2]|0,c[e>>2]|0,d[f]|0,d[g]|0,d[k]|0,d[b+26|0]|0,d[b+27|0]|0);l=1;return l|0}function CP(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;e=c[a+184>>2]|0;if((e|0)==0){Ak(a,23088)}else{hF[e&255](a,b,d);return}}function CQ(a,b,d){a=a|0;b=b|0;d=d|0;if((a|0)==0){return}if((gx(b|0,1,d|0,c[a+188>>2]|0)|0)==(d|0)){return}else{Ak(a,24616)}}function CR(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;if((a|0)==0){return}c[a+188>>2]=b;if((d|0)==0){e=140}else{e=d}c[a+184>>2]=e;e=a+180|0;if((c[e>>2]|0)!=0){c[e>>2]=0;An(a,21736)}c[a+472>>2]=0;return}function CS(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;b=i;i=i+32|0;d=b|0;e=b+8|0;f=b+16|0;g=b+24|0;h=c[r>>2]|0;Dc(54032,h,54160);c[13756]=29620;c[13758]=29640;c[13757]=0;D6(55032,54032);c[13776]=0;c[13777]=-1;j=c[p>>2]|0;c[13484]=29400;Ir(53940);K1(53944,0,24)|0;c[13484]=29768;c[13492]=j;Is(g,53940);k=Iu(g,54360)|0;l=k;It(g);c[13493]=l;c[13494]=54168;a[53980]=(g3[c[(c[k>>2]|0)+28>>2]&511](l)|0)&1;c[13690]=29524;c[13691]=29544;D6(54764,53936);c[13709]=0;c[13710]=-1;l=c[t>>2]|0;c[13496]=29400;Ir(53988);K1(53992,0,24)|0;c[13496]=29768;c[13504]=l;Is(f,53988);k=Iu(f,54360)|0;g=k;It(f);c[13505]=g;c[13506]=54176;a[54028]=(g3[c[(c[k>>2]|0)+28>>2]&511](g)|0)&1;c[13734]=29524;c[13735]=29544;D6(54940,53984);c[13753]=0;c[13754]=-1;g=c[(c[(c[13734]|0)-12>>2]|0)+54960>>2]|0;c[13712]=29524;c[13713]=29544;D6(54852,g);c[13731]=0;c[13732]=-1;c[(c[(c[13756]|0)-12>>2]|0)+55096>>2]=54760;g=(c[(c[13734]|0)-12>>2]|0)+54940|0;c[g>>2]=c[g>>2]|8192;c[(c[(c[13734]|0)-12>>2]|0)+55008>>2]=54760;C_(53880,h,54184);c[13668]=29572;c[13670]=29592;c[13669]=0;D6(54680,53880);c[13688]=0;c[13689]=-1;c[13446]=29328;Ir(53788);K1(53792,0,24)|0;c[13446]=29696;c[13454]=j;Is(e,53788);j=Iu(e,54352)|0;h=j;It(e);c[13455]=h;c[13456]=54192;a[53828]=(g3[c[(c[j>>2]|0)+28>>2]&511](h)|0)&1;c[13598]=29476;c[13599]=29496;D6(54396,53784);c[13617]=0;c[13618]=-1;c[13458]=29328;Ir(53836);K1(53840,0,24)|0;c[13458]=29696;c[13466]=l;Is(d,53836);l=Iu(d,54352)|0;h=l;It(d);c[13467]=h;c[13468]=54200;a[53876]=(g3[c[(c[l>>2]|0)+28>>2]&511](h)|0)&1;c[13642]=29476;c[13643]=29496;D6(54572,53832);c[13661]=0;c[13662]=-1;h=c[(c[(c[13642]|0)-12>>2]|0)+54592>>2]|0;c[13620]=29476;c[13621]=29496;D6(54484,h);c[13639]=0;c[13640]=-1;c[(c[(c[13668]|0)-12>>2]|0)+54744>>2]=54392;h=(c[(c[13642]|0)-12>>2]|0)+54572|0;c[h>>2]=c[h>>2]|8192;c[(c[(c[13642]|0)-12>>2]|0)+54640>>2]=54392;i=b;return}function CT(a){a=a|0;ED(54760)|0;ED(54848)|0;EJ(54392)|0;EJ(54480)|0;return}function CU(a){a=a|0;c[a>>2]=29328;It(a+4|0);return}function CV(a){a=a|0;c[a>>2]=29328;It(a+4|0);KU(a);return}function CW(b,d){b=b|0;d=d|0;var e=0;g3[c[(c[b>>2]|0)+24>>2]&511](b)|0;e=Iu(d,54352)|0;d=e;c[b+36>>2]=d;a[b+44|0]=(g3[c[(c[e>>2]|0)+28>>2]&511](d)|0)&1;return}function CX(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;b=i;i=i+16|0;d=b|0;e=b+8|0;f=a+36|0;g=a+40|0;h=d|0;j=d+8|0;k=d;d=a+32|0;while(1){a=c[f>>2]|0;l=hy[c[(c[a>>2]|0)+20>>2]&31](a,c[g>>2]|0,h,j,e)|0;a=(c[e>>2]|0)-k|0;if((cW(h|0,1,a|0,c[d>>2]|0)|0)!=(a|0)){m=-1;n=6;break}if((l|0)==2){m=-1;n=7;break}else if((l|0)!=1){n=4;break}}if((n|0)==6){i=b;return m|0}else if((n|0)==7){i=b;return m|0}else if((n|0)==4){m=((fA(c[d>>2]|0)|0)!=0)<<31>>31;i=b;return m|0}return 0}function CY(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0;if((a[b+44|0]&1)!=0){f=cW(d|0,4,e|0,c[b+32>>2]|0)|0;return f|0}g=b;if((e|0)>0){h=d;i=0}else{f=0;return f|0}while(1){if((hx[c[(c[g>>2]|0)+52>>2]&127](b,c[h>>2]|0)|0)==-1){f=i;j=10;break}d=i+1|0;if((d|0)<(e|0)){h=h+4|0;i=d}else{f=d;j=9;break}}if((j|0)==10){return f|0}else if((j|0)==9){return f|0}return 0}function CZ(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;e=i;i=i+32|0;f=e|0;g=e+8|0;h=e+16|0;j=e+24|0;k=(d|0)==-1;L1:do{if(!k){c[g>>2]=d;if((a[b+44|0]&1)!=0){if((cW(g|0,4,1,c[b+32>>2]|0)|0)==1){break}else{l=-1}i=e;return l|0}m=f|0;c[h>>2]=m;n=g+4|0;o=b+36|0;p=b+40|0;q=f+8|0;r=f;s=b+32|0;t=g;while(1){u=c[o>>2]|0;v=hI[c[(c[u>>2]|0)+12>>2]&31](u,c[p>>2]|0,t,n,j,m,q,h)|0;if((c[j>>2]|0)==(t|0)){l=-1;w=16;break}if((v|0)==3){w=7;break}u=(v|0)==1;if(v>>>0>=2>>>0){l=-1;w=14;break}v=(c[h>>2]|0)-r|0;if((cW(m|0,1,v|0,c[s>>2]|0)|0)!=(v|0)){l=-1;w=17;break}if(u){t=u?c[j>>2]|0:t}else{break L1}}if((w|0)==7){if((cW(t|0,1,1,c[s>>2]|0)|0)==1){break}else{l=-1}i=e;return l|0}else if((w|0)==14){i=e;return l|0}else if((w|0)==17){i=e;return l|0}else if((w|0)==16){i=e;return l|0}}}while(0);l=k?0:d;i=e;return l|0}function C_(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0;f=i;i=i+8|0;g=f|0;h=b|0;c[h>>2]=29328;j=b+4|0;Ir(j);K1(b+8|0,0,24)|0;c[h>>2]=30096;c[b+32>>2]=d;c[b+40>>2]=e;c[b+48>>2]=-1;a[b+52|0]=0;Is(g,j);j=Iu(g,54352)|0;e=j;d=b+36|0;c[d>>2]=e;h=b+44|0;c[h>>2]=g3[c[(c[j>>2]|0)+24>>2]&511](e)|0;e=c[d>>2]|0;a[b+53|0]=(g3[c[(c[e>>2]|0)+28>>2]&511](e)|0)&1;if((c[h>>2]|0)<=8){It(g);i=f;return}HN(13096);It(g);i=f;return}function C$(a){a=a|0;c[a>>2]=29328;It(a+4|0);return}function C0(a){a=a|0;c[a>>2]=29328;It(a+4|0);KU(a);return}function C1(b,d){b=b|0;d=d|0;var e=0,f=0,g=0;e=Iu(d,54352)|0;d=e;f=b+36|0;c[f>>2]=d;g=b+44|0;c[g>>2]=g3[c[(c[e>>2]|0)+24>>2]&511](d)|0;d=c[f>>2]|0;a[b+53|0]=(g3[c[(c[d>>2]|0)+28>>2]&511](d)|0)&1;if((c[g>>2]|0)<=8){return}HN(13096);return}function C2(a){a=a|0;return C5(a,0)|0}function C3(a){a=a|0;return C5(a,1)|0}function C4(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;e=i;i=i+32|0;f=e|0;g=e+8|0;h=e+16|0;j=e+24|0;k=b+52|0;l=(a[k]&1)!=0;if((d|0)==-1){if(l){m=-1;i=e;return m|0}n=c[b+48>>2]|0;a[k]=(n|0)!=-1|0;m=n;i=e;return m|0}n=b+48|0;L8:do{if(l){c[h>>2]=c[n>>2];o=c[b+36>>2]|0;p=f|0;q=hI[c[(c[o>>2]|0)+12>>2]&31](o,c[b+40>>2]|0,h,h+4|0,j,p,f+8|0,g)|0;if((q|0)==2|(q|0)==1){m=-1;i=e;return m|0}else if((q|0)==3){a[p]=c[n>>2];c[g>>2]=f+1}q=b+32|0;while(1){o=c[g>>2]|0;if(o>>>0<=p>>>0){break L8}r=o-1|0;c[g>>2]=r;if((gs(a[r]|0,c[q>>2]|0)|0)==-1){m=-1;break}}i=e;return m|0}}while(0);c[n>>2]=d;a[k]=1;m=d;i=e;return m|0}function C5(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;e=i;i=i+32|0;f=e|0;g=e+8|0;h=e+16|0;j=e+24|0;k=b+52|0;if((a[k]&1)!=0){l=b+48|0;m=c[l>>2]|0;if(!d){n=m;i=e;return n|0}c[l>>2]=-1;a[k]=0;n=m;i=e;return n|0}m=c[b+44>>2]|0;k=(m|0)>1?m:1;L8:do{if((k|0)>0){m=b+32|0;l=0;while(1){o=fT(c[m>>2]|0)|0;if((o|0)==-1){n=-1;break}a[f+l|0]=o;l=l+1|0;if((l|0)>=(k|0)){break L8}}i=e;return n|0}}while(0);L15:do{if((a[b+53|0]&1)==0){l=b+40|0;m=b+36|0;o=f|0;p=g+4|0;q=b+32|0;r=k;while(1){s=c[l>>2]|0;t=s;u=c[t>>2]|0;v=c[t+4>>2]|0;t=c[m>>2]|0;w=f+r|0;x=hI[c[(c[t>>2]|0)+16>>2]&31](t,s,o,w,h,g,p,j)|0;if((x|0)==2){n=-1;y=24;break}else if((x|0)==3){y=14;break}else if((x|0)!=1){z=r;break L15}x=c[l>>2]|0;c[x>>2]=u;c[x+4>>2]=v;if((r|0)==8){n=-1;y=25;break}v=fT(c[q>>2]|0)|0;if((v|0)==-1){n=-1;y=30;break}a[w]=v;r=r+1|0}if((y|0)==24){i=e;return n|0}else if((y|0)==30){i=e;return n|0}else if((y|0)==25){i=e;return n|0}else if((y|0)==14){c[g>>2]=a[o]|0;z=r;break}}else{c[g>>2]=a[f|0]|0;z=k}}while(0);if(d){d=c[g>>2]|0;c[b+48>>2]=d;n=d;i=e;return n|0}d=b+32|0;b=z;while(1){if((b|0)<=0){break}z=b-1|0;if((gs(a[f+z|0]|0,c[d>>2]|0)|0)==-1){n=-1;y=31;break}else{b=z}}if((y|0)==31){i=e;return n|0}n=c[g>>2]|0;i=e;return n|0}function C6(a){a=a|0;c[a>>2]=29400;It(a+4|0);return}function C7(a){a=a|0;c[a>>2]=29400;It(a+4|0);KU(a);return}function C8(b,d){b=b|0;d=d|0;var e=0;g3[c[(c[b>>2]|0)+24>>2]&511](b)|0;e=Iu(d,54360)|0;d=e;c[b+36>>2]=d;a[b+44|0]=(g3[c[(c[e>>2]|0)+28>>2]&511](d)|0)&1;return}function C9(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;b=i;i=i+16|0;d=b|0;e=b+8|0;f=a+36|0;g=a+40|0;h=d|0;j=d+8|0;k=d;d=a+32|0;while(1){a=c[f>>2]|0;l=hy[c[(c[a>>2]|0)+20>>2]&31](a,c[g>>2]|0,h,j,e)|0;a=(c[e>>2]|0)-k|0;if((cW(h|0,1,a|0,c[d>>2]|0)|0)!=(a|0)){m=-1;n=7;break}if((l|0)==2){m=-1;n=8;break}else if((l|0)!=1){n=4;break}}if((n|0)==4){m=((fA(c[d>>2]|0)|0)!=0)<<31>>31;i=b;return m|0}else if((n|0)==7){i=b;return m|0}else if((n|0)==8){i=b;return m|0}return 0}function Da(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0;if((a[b+44|0]&1)!=0){g=cW(e|0,1,f|0,c[b+32>>2]|0)|0;return g|0}h=b;if((f|0)>0){i=e;j=0}else{g=0;return g|0}while(1){if((hx[c[(c[h>>2]|0)+52>>2]&127](b,d[i]|0)|0)==-1){g=j;k=9;break}e=j+1|0;if((e|0)<(f|0)){i=i+1|0;j=e}else{g=e;k=7;break}}if((k|0)==9){return g|0}else if((k|0)==7){return g|0}return 0}function Db(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;e=i;i=i+32|0;f=e|0;g=e+8|0;h=e+16|0;j=e+24|0;k=(d|0)==-1;L1:do{if(!k){a[g]=d;if((a[b+44|0]&1)!=0){if((cW(g|0,1,1,c[b+32>>2]|0)|0)==1){break}else{l=-1}i=e;return l|0}m=f|0;c[h>>2]=m;n=g+1|0;o=b+36|0;p=b+40|0;q=f+8|0;r=f;s=b+32|0;t=g;while(1){u=c[o>>2]|0;v=hI[c[(c[u>>2]|0)+12>>2]&31](u,c[p>>2]|0,t,n,j,m,q,h)|0;if((c[j>>2]|0)==(t|0)){l=-1;w=14;break}if((v|0)==3){w=7;break}u=(v|0)==1;if(v>>>0>=2>>>0){l=-1;w=13;break}v=(c[h>>2]|0)-r|0;if((cW(m|0,1,v|0,c[s>>2]|0)|0)!=(v|0)){l=-1;w=18;break}if(u){t=u?c[j>>2]|0:t}else{break L1}}if((w|0)==18){i=e;return l|0}else if((w|0)==14){i=e;return l|0}else if((w|0)==13){i=e;return l|0}else if((w|0)==7){if((cW(t|0,1,1,c[s>>2]|0)|0)==1){break}else{l=-1}i=e;return l|0}}}while(0);l=k?0:d;i=e;return l|0}function Dc(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0;f=i;i=i+8|0;g=f|0;h=b|0;c[h>>2]=29400;j=b+4|0;Ir(j);K1(b+8|0,0,24)|0;c[h>>2]=30168;c[b+32>>2]=d;c[b+40>>2]=e;c[b+48>>2]=-1;a[b+52|0]=0;Is(g,j);j=Iu(g,54360)|0;e=j;d=b+36|0;c[d>>2]=e;h=b+44|0;c[h>>2]=g3[c[(c[j>>2]|0)+24>>2]&511](e)|0;e=c[d>>2]|0;a[b+53|0]=(g3[c[(c[e>>2]|0)+28>>2]&511](e)|0)&1;if((c[h>>2]|0)<=8){It(g);i=f;return}HN(13096);It(g);i=f;return}function Dd(a){a=a|0;c[a>>2]=29400;It(a+4|0);return}function De(a){a=a|0;c[a>>2]=29400;It(a+4|0);KU(a);return}function Df(b,d){b=b|0;d=d|0;var e=0,f=0,g=0;e=Iu(d,54360)|0;d=e;f=b+36|0;c[f>>2]=d;g=b+44|0;c[g>>2]=g3[c[(c[e>>2]|0)+24>>2]&511](d)|0;d=c[f>>2]|0;a[b+53|0]=(g3[c[(c[d>>2]|0)+28>>2]&511](d)|0)&1;if((c[g>>2]|0)<=8){return}HN(13096);return}function Dg(a){a=a|0;return Dj(a,0)|0}function Dh(a){a=a|0;return Dj(a,1)|0}function Di(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;e=i;i=i+32|0;f=e|0;g=e+8|0;h=e+16|0;j=e+24|0;k=b+52|0;l=(a[k]&1)!=0;if((d|0)==-1){if(l){m=-1;i=e;return m|0}n=c[b+48>>2]|0;a[k]=(n|0)!=-1|0;m=n;i=e;return m|0}n=b+48|0;L8:do{if(l){a[h]=c[n>>2];o=c[b+36>>2]|0;p=f|0;q=hI[c[(c[o>>2]|0)+12>>2]&31](o,c[b+40>>2]|0,h,h+1|0,j,p,f+8|0,g)|0;if((q|0)==2|(q|0)==1){m=-1;i=e;return m|0}else if((q|0)==3){a[p]=c[n>>2];c[g>>2]=f+1}q=b+32|0;while(1){o=c[g>>2]|0;if(o>>>0<=p>>>0){break L8}r=o-1|0;c[g>>2]=r;if((gs(a[r]|0,c[q>>2]|0)|0)==-1){m=-1;break}}i=e;return m|0}}while(0);c[n>>2]=d;a[k]=1;m=d;i=e;return m|0}function Dj(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0;f=i;i=i+32|0;g=f|0;h=f+8|0;j=f+16|0;k=f+24|0;l=b+52|0;if((a[l]&1)!=0){m=b+48|0;n=c[m>>2]|0;if(!e){o=n;i=f;return o|0}c[m>>2]=-1;a[l]=0;o=n;i=f;return o|0}n=c[b+44>>2]|0;l=(n|0)>1?n:1;L8:do{if((l|0)>0){n=b+32|0;m=0;while(1){p=fT(c[n>>2]|0)|0;if((p|0)==-1){o=-1;break}a[g+m|0]=p;m=m+1|0;if((m|0)>=(l|0)){break L8}}i=f;return o|0}}while(0);L15:do{if((a[b+53|0]&1)==0){m=b+40|0;n=b+36|0;p=g|0;q=h+1|0;r=b+32|0;s=l;while(1){t=c[m>>2]|0;u=t;v=c[u>>2]|0;w=c[u+4>>2]|0;u=c[n>>2]|0;x=g+s|0;y=hI[c[(c[u>>2]|0)+16>>2]&31](u,t,p,x,j,h,q,k)|0;if((y|0)==2){o=-1;z=29;break}else if((y|0)==3){z=14;break}else if((y|0)!=1){A=s;break L15}y=c[m>>2]|0;c[y>>2]=v;c[y+4>>2]=w;if((s|0)==8){o=-1;z=25;break}w=fT(c[r>>2]|0)|0;if((w|0)==-1){o=-1;z=26;break}a[x]=w;s=s+1|0}if((z|0)==26){i=f;return o|0}else if((z|0)==29){i=f;return o|0}else if((z|0)==25){i=f;return o|0}else if((z|0)==14){a[h]=a[p]|0;A=s;break}}else{a[h]=a[g|0]|0;A=l}}while(0);do{if(e){l=a[h]|0;c[b+48>>2]=l&255;B=l}else{l=b+32|0;k=A;while(1){if((k|0)<=0){z=21;break}j=k-1|0;if((gs(d[g+j|0]|0|0,c[l>>2]|0)|0)==-1){o=-1;z=28;break}else{k=j}}if((z|0)==21){B=a[h]|0;break}else if((z|0)==28){i=f;return o|0}}}while(0);o=B&255;i=f;return o|0}function Dk(){CS(0);ep(478,55112,q|0)|0;return}function Dl(a){a=a|0;return}function Dm(a){a=a|0;var b=0;b=a+4|0;I=c[b>>2]|0,c[b>>2]=I+1,I;return}function Dn(a){a=a|0;var b=0,d=0;b=a+4|0;if(((I=c[b>>2]|0,c[b>>2]=I+ -1,I)|0)!=0){d=0;return d|0}g$[c[(c[a>>2]|0)+8>>2]&1023](a);d=1;return d|0}function Do(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;c[a>>2]=27560;d=a+4|0;if((d|0)==0){return}a=K0(b|0)|0;e=KT(a+13|0)|0;c[e+4>>2]=a;c[e>>2]=a;f=e+12|0;c[d>>2]=f;c[e+8>>2]=0;K2(f|0,b|0,a+1|0)|0;return}function Dp(a){a=a|0;var b=0,d=0,e=0;c[a>>2]=27560;b=a+4|0;d=(c[b>>2]|0)-4|0;if(((I=c[d>>2]|0,c[d>>2]=I+ -1,I)-1|0)>=0){e=a;KU(e);return}d=(c[b>>2]|0)-12|0;if((d|0)==0){e=a;KU(e);return}KV(d);e=a;KU(e);return}function Dq(a){a=a|0;var b=0;c[a>>2]=27560;b=a+4|0;a=(c[b>>2]|0)-4|0;if(((I=c[a>>2]|0,c[a>>2]=I+ -1,I)-1|0)>=0){return}a=(c[b>>2]|0)-12|0;if((a|0)==0){return}KV(a);return}function Dr(a){a=a|0;return c[a+4>>2]|0}function Ds(b,d){b=b|0;d=d|0;var e=0,f=0,g=0;c[b>>2]=27496;e=b+4|0;if((e|0)==0){return}if((a[d]&1)==0){f=d+1|0}else{f=c[d+8>>2]|0}d=K0(f|0)|0;b=KT(d+13|0)|0;c[b+4>>2]=d;c[b>>2]=d;g=b+12|0;c[e>>2]=g;c[b+8>>2]=0;K2(g|0,f|0,d+1|0)|0;return}function Dt(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;c[a>>2]=27496;d=a+4|0;if((d|0)==0){return}a=K0(b|0)|0;e=KT(a+13|0)|0;c[e+4>>2]=a;c[e>>2]=a;f=e+12|0;c[d>>2]=f;c[e+8>>2]=0;K2(f|0,b|0,a+1|0)|0;return}function Du(a){a=a|0;var b=0,d=0,e=0;c[a>>2]=27496;b=a+4|0;d=(c[b>>2]|0)-4|0;if(((I=c[d>>2]|0,c[d>>2]=I+ -1,I)-1|0)>=0){e=a;KU(e);return}d=(c[b>>2]|0)-12|0;if((d|0)==0){e=a;KU(e);return}KV(d);e=a;KU(e);return}function Dv(a){a=a|0;var b=0;c[a>>2]=27496;b=a+4|0;a=(c[b>>2]|0)-4|0;if(((I=c[a>>2]|0,c[a>>2]=I+ -1,I)-1|0)>=0){return}a=(c[b>>2]|0)-12|0;if((a|0)==0){return}KV(a);return}function Dw(a){a=a|0;return c[a+4>>2]|0}function Dx(a){a=a|0;var b=0,d=0,e=0;c[a>>2]=27560;b=a+4|0;d=(c[b>>2]|0)-4|0;if(((I=c[d>>2]|0,c[d>>2]=I+ -1,I)-1|0)>=0){e=a;KU(e);return}d=(c[b>>2]|0)-12|0;if((d|0)==0){e=a;KU(e);return}KV(d);e=a;KU(e);return}function Dy(a){a=a|0;return}function Dz(a,b,d){a=a|0;b=b|0;d=d|0;c[a>>2]=d;c[a+4>>2]=b;return}function DA(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=i;i=i+8|0;f=e|0;hF[c[(c[a>>2]|0)+12>>2]&255](f,a,b);if((c[f+4>>2]|0)!=(c[d+4>>2]|0)){g=0;i=e;return g|0}g=(c[f>>2]|0)==(c[d>>2]|0);i=e;return g|0}function DB(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;if((c[b+4>>2]|0)!=(a|0)){e=0;return e|0}e=(c[b>>2]|0)==(d|0);return e|0}function DC(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;d=cj(e|0)|0;e=K0(d|0)|0;if(e>>>0>4294967279>>>0){DI(0)}if(e>>>0<11>>>0){a[b]=e<<1;f=b+1|0;K2(f|0,d|0,e)|0;g=f+e|0;a[g]=0;return}else{h=e+16&-16;i=KS(h)|0;c[b+8>>2]=i;c[b>>2]=h|1;c[b+4>>2]=e;f=i;K2(f|0,d|0,e)|0;g=f+e|0;a[g]=0;return}}function DD(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;g=i;h=f;j=i;i=i+12|0;i=i+7&-8;k=e|0;l=c[k>>2]|0;do{if((l|0)!=0){m=d[h]|0;if((m&1|0)==0){n=m>>>1}else{n=c[f+4>>2]|0}if((n|0)==0){o=l}else{DT(f,21416,2)|0;o=c[k>>2]|0}m=c[e+4>>2]|0;hF[c[(c[m>>2]|0)+24>>2]&255](j,m,o);m=j;p=a[m]|0;if((p&1)==0){q=j+1|0}else{q=c[j+8>>2]|0}r=p&255;if((r&1|0)==0){s=r>>>1}else{s=c[j+4>>2]|0}DT(f,q,s)|0;if((a[m]&1)==0){break}KU(c[j+8>>2]|0)}}while(0);j=b;c[j>>2]=c[h>>2];c[j+4>>2]=c[h+4>>2];c[j+8>>2]=c[h+8>>2];K1(h|0,0,12)|0;i=g;return}function DE(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0;f=i;i=i+32|0;g=d;d=i;i=i+8|0;c[d>>2]=c[g>>2];c[d+4>>2]=c[g+4>>2];g=f|0;h=f+16|0;j=K0(e|0)|0;if(j>>>0>4294967279>>>0){DI(0)}if(j>>>0<11>>>0){a[h]=j<<1;k=h+1|0}else{l=j+16&-16;m=KS(l)|0;c[h+8>>2]=m;c[h>>2]=l|1;c[h+4>>2]=j;k=m}K2(k|0,e|0,j)|0;a[k+j|0]=0;DD(g,d,h);Ds(b|0,g);if((a[g]&1)!=0){KU(c[g+8>>2]|0)}if((a[h]&1)!=0){KU(c[h+8>>2]|0)}c[b>>2]=29664;h=d;d=b+8|0;b=c[h+4>>2]|0;c[d>>2]=c[h>>2];c[d+4>>2]=b;i=f;return}function DF(a){a=a|0;Dv(a|0);KU(a);return}function DG(a){a=a|0;Dv(a|0);return}function DH(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;e;if((c[a>>2]|0)==1){do{ei(54112,54088)|0;}while((c[a>>2]|0)==1)}if((c[a>>2]|0)!=0){f;return}c[a>>2]=1;g;g$[d&1023](b);h;c[a>>2]=-1;i;cc(54112)|0;return}function DI(a){a=a|0;a=gJ(8)|0;Do(a,13736);c[a>>2]=27528;eR(a|0,45592,84)}function DJ(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=d;if((a[e]&1)==0){f=b;c[f>>2]=c[e>>2];c[f+4>>2]=c[e+4>>2];c[f+8>>2]=c[e+8>>2];return}e=c[d+8>>2]|0;f=c[d+4>>2]|0;if(f>>>0>4294967279>>>0){DI(0)}if(f>>>0<11>>>0){a[b]=f<<1;g=b+1|0}else{d=f+16&-16;h=KS(d)|0;c[b+8>>2]=h;c[b>>2]=d|1;c[b+4>>2]=f;g=h}K2(g|0,e|0,f)|0;a[g+f|0]=0;return}function DK(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;if(e>>>0>4294967279>>>0){DI(0)}if(e>>>0<11>>>0){a[b]=e<<1;f=b+1|0;K2(f|0,d|0,e)|0;g=f+e|0;a[g]=0;return}else{h=e+16&-16;i=KS(h)|0;c[b+8>>2]=i;c[b>>2]=h|1;c[b+4>>2]=e;f=i;K2(f|0,d|0,e)|0;g=f+e|0;a[g]=0;return}}function DL(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;if(d>>>0>4294967279>>>0){DI(0)}if(d>>>0<11>>>0){a[b]=d<<1;f=b+1|0}else{g=d+16&-16;h=KS(g)|0;c[b+8>>2]=h;c[b>>2]=g|1;c[b+4>>2]=d;f=h}K1(f|0,e|0,d|0)|0;a[f+d|0]=0;return}function DM(b){b=b|0;if((a[b]&1)==0){return}KU(c[b+8>>2]|0);return}function DN(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;if((b|0)==(d|0)){return b|0}e=a[d]|0;if((e&1)==0){f=d+1|0}else{f=c[d+8>>2]|0}g=e&255;if((g&1|0)==0){h=g>>>1}else{h=c[d+4>>2]|0}d=b;g=b;e=a[g]|0;if((e&1)==0){i=10;j=e}else{e=c[b>>2]|0;i=(e&-2)-1|0;j=e&255}if(i>>>0<h>>>0){e=j&255;if((e&1|0)==0){k=e>>>1}else{k=c[b+4>>2]|0}DU(b,i,h-i|0,k,0,k,h,f);return b|0}if((j&1)==0){l=d+1|0}else{l=c[b+8>>2]|0}K3(l|0,f|0,h|0)|0;a[l+h|0]=0;if((a[g]&1)==0){a[g]=h<<1;return b|0}else{c[b+4>>2]=h;return b|0}return 0}function DO(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;e=K0(d|0)|0;f=b;g=b;h=a[g]|0;if((h&1)==0){i=10;j=h}else{h=c[b>>2]|0;i=(h&-2)-1|0;j=h&255}if(i>>>0<e>>>0){h=j&255;if((h&1|0)==0){k=h>>>1}else{k=c[b+4>>2]|0}DU(b,i,e-i|0,k,0,k,e,d);return b|0}if((j&1)==0){l=f+1|0}else{l=c[b+8>>2]|0}K3(l|0,d|0,e|0)|0;a[l+e|0]=0;if((a[g]&1)==0){a[g]=e<<1;return b|0}else{c[b+4>>2]=e;return b|0}return 0}function DP(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;f=b;g=a[f]|0;h=g&255;if((h&1|0)==0){i=h>>>1}else{i=c[b+4>>2]|0}if(i>>>0<d>>>0){DQ(b,d-i|0,e)|0;return}if((g&1)==0){a[b+1+d|0]=0;a[f]=d<<1;return}else{a[(c[b+8>>2]|0)+d|0]=0;c[b+4>>2]=d;return}}function DQ(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0;if((d|0)==0){return b|0}f=b;g=a[f]|0;if((g&1)==0){h=10;i=g}else{g=c[b>>2]|0;h=(g&-2)-1|0;i=g&255}g=i&255;if((g&1|0)==0){j=g>>>1}else{j=c[b+4>>2]|0}if((h-j|0)>>>0<d>>>0){DV(b,h,d-h+j|0,j,j,0,0);k=a[f]|0}else{k=i}if((k&1)==0){l=b+1|0}else{l=c[b+8>>2]|0}K1(l+j|0,e|0,d|0)|0;e=j+d|0;if((a[f]&1)==0){a[f]=e<<1}else{c[b+4>>2]=e}a[l+e|0]=0;return b|0}function DR(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;if(d>>>0>4294967279>>>0){DI(0)}e=b;f=b;g=a[f]|0;if((g&1)==0){h=10;i=g}else{g=c[b>>2]|0;h=(g&-2)-1|0;i=g&255}g=i&255;if((g&1|0)==0){j=g>>>1}else{j=c[b+4>>2]|0}g=j>>>0>d>>>0?j:d;if(g>>>0<11>>>0){k=11}else{k=g+16&-16}g=k-1|0;if((g|0)==(h|0)){return}if((g|0)==10){l=e+1|0;m=c[b+8>>2]|0;n=1;o=0}else{if(g>>>0>h>>>0){p=KS(k)|0}else{p=KS(k)|0}h=i&1;if(h<<24>>24==0){q=e+1|0}else{q=c[b+8>>2]|0}l=p;m=q;n=h<<24>>24!=0;o=1}h=i&255;if((h&1|0)==0){r=h>>>1}else{r=c[b+4>>2]|0}K2(l|0,m|0,r+1|0)|0;if(n){KU(m)}if(o){c[b>>2]=k|1;c[b+4>>2]=j;c[b+8>>2]=l;return}else{a[f]=j<<1;return}}function DS(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;e=b;f=a[e]|0;if((f&1)==0){g=(f&255)>>>1;h=10}else{g=c[b+4>>2]|0;h=(c[b>>2]&-2)-1|0}if((g|0)==(h|0)){DV(b,h,1,h,h,0,0);i=a[e]|0}else{i=f}if((i&1)==0){a[e]=(g<<1)+2;j=b+1|0;k=g+1|0;l=j+g|0;a[l]=d;m=j+k|0;a[m]=0;return}else{e=c[b+8>>2]|0;i=g+1|0;c[b+4>>2]=i;j=e;k=i;l=j+g|0;a[l]=d;m=j+k|0;a[m]=0;return}}function DT(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0;f=b;g=a[f]|0;if((g&1)==0){h=10;i=g}else{g=c[b>>2]|0;h=(g&-2)-1|0;i=g&255}g=i&255;if((g&1|0)==0){j=g>>>1}else{j=c[b+4>>2]|0}if((h-j|0)>>>0<e>>>0){DU(b,h,e-h+j|0,j,j,0,e,d);return b|0}if((e|0)==0){return b|0}if((i&1)==0){k=b+1|0}else{k=c[b+8>>2]|0}K2(k+j|0,d|0,e)|0;d=j+e|0;if((a[f]&1)==0){a[f]=d<<1}else{c[b+4>>2]=d}a[k+d|0]=0;return b|0}function DU(b,d,e,f,g,h,i,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;if((-18-d|0)>>>0<e>>>0){DI(0)}if((a[b]&1)==0){k=b+1|0}else{k=c[b+8>>2]|0}do{if(d>>>0<2147483623>>>0){l=e+d|0;m=d<<1;n=l>>>0<m>>>0?m:l;if(n>>>0<11>>>0){o=11;break}o=n+16&-16}else{o=-17}}while(0);e=KS(o)|0;if((g|0)!=0){K2(e|0,k|0,g)|0}if((i|0)!=0){K2(e+g|0,j|0,i)|0}j=f-h|0;if((j|0)!=(g|0)){K2(e+(i+g)|0,k+(h+g)|0,j-g|0)|0}if((d|0)==10){p=b+8|0;c[p>>2]=e;q=o|1;r=b|0;c[r>>2]=q;s=j+i|0;t=b+4|0;c[t>>2]=s;u=e+s|0;a[u]=0;return}KU(k);p=b+8|0;c[p>>2]=e;q=o|1;r=b|0;c[r>>2]=q;s=j+i|0;t=b+4|0;c[t>>2]=s;u=e+s|0;a[u]=0;return}function DV(b,d,e,f,g,h,i){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;if((-17-d|0)>>>0<e>>>0){DI(0)}if((a[b]&1)==0){j=b+1|0}else{j=c[b+8>>2]|0}do{if(d>>>0<2147483623>>>0){k=e+d|0;l=d<<1;m=k>>>0<l>>>0?l:k;if(m>>>0<11>>>0){n=11;break}n=m+16&-16}else{n=-17}}while(0);e=KS(n)|0;if((g|0)!=0){K2(e|0,j|0,g)|0}m=f-h|0;if((m|0)!=(g|0)){K2(e+(i+g)|0,j+(h+g)|0,m-g|0)|0}if((d|0)==10){o=b+8|0;c[o>>2]=e;p=n|1;q=b|0;c[q>>2]=p;return}KU(j);o=b+8|0;c[o>>2]=e;p=n|1;q=b|0;c[q>>2]=p;return}function DW(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0;if(e>>>0>1073741807>>>0){DI(0)}if(e>>>0<2>>>0){a[b]=e<<1;f=b+4|0;g=Kn(f,d,e)|0;h=f+(e<<2)|0;c[h>>2]=0;return}else{i=e+4&-4;j=KS(i<<2)|0;c[b+8>>2]=j;c[b>>2]=i|1;c[b+4>>2]=e;f=j;g=Kn(f,d,e)|0;h=f+(e<<2)|0;c[h>>2]=0;return}}function DX(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0;if(d>>>0>1073741807>>>0){DI(0)}if(d>>>0<2>>>0){a[b]=d<<1;f=b+4|0;g=Kp(f,e,d)|0;h=f+(d<<2)|0;c[h>>2]=0;return}else{i=d+4&-4;j=KS(i<<2)|0;c[b+8>>2]=j;c[b>>2]=i|1;c[b+4>>2]=d;f=j;g=Kp(f,e,d)|0;h=f+(d<<2)|0;c[h>>2]=0;return}}function DY(b){b=b|0;if((a[b]&1)==0){return}KU(c[b+8>>2]|0);return}function DZ(a,b){a=a|0;b=b|0;return D_(a,b,Km(b)|0)|0}function D_(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0;f=b;g=a[f]|0;if((g&1)==0){h=1;i=g}else{g=c[b>>2]|0;h=(g&-2)-1|0;i=g&255}if(h>>>0<e>>>0){g=i&255;if((g&1|0)==0){j=g>>>1}else{j=c[b+4>>2]|0}D1(b,h,e-h|0,j,0,j,e,d);return b|0}if((i&1)==0){k=b+4|0}else{k=c[b+8>>2]|0}Ko(k,d,e)|0;c[k+(e<<2)>>2]=0;if((a[f]&1)==0){a[f]=e<<1;return b|0}else{c[b+4>>2]=e;return b|0}return 0}function D$(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;if(d>>>0>1073741807>>>0){DI(0)}e=b;f=a[e]|0;if((f&1)==0){g=1;h=f}else{f=c[b>>2]|0;g=(f&-2)-1|0;h=f&255}f=h&255;if((f&1|0)==0){i=f>>>1}else{i=c[b+4>>2]|0}f=i>>>0>d>>>0?i:d;if(f>>>0<2>>>0){j=2}else{j=f+4&-4}f=j-1|0;if((f|0)==(g|0)){return}if((f|0)==1){k=b+4|0;l=c[b+8>>2]|0;m=1;n=0}else{d=j<<2;if(f>>>0>g>>>0){o=KS(d)|0}else{o=KS(d)|0}d=h&1;if(d<<24>>24==0){p=b+4|0}else{p=c[b+8>>2]|0}k=o;l=p;m=d<<24>>24!=0;n=1}d=k;k=h&255;if((k&1|0)==0){q=k>>>1}else{q=c[b+4>>2]|0}Kn(d,l,q+1|0)|0;if(m){KU(l)}if(n){c[b>>2]=j|1;c[b+4>>2]=i;c[b+8>>2]=d;return}else{a[e]=i<<1;return}}function D0(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;e=b;f=a[e]|0;if((f&1)==0){g=(f&255)>>>1;h=1}else{g=c[b+4>>2]|0;h=(c[b>>2]&-2)-1|0}if((g|0)==(h|0)){D2(b,h,1,h,h,0,0);i=a[e]|0}else{i=f}if((i&1)==0){a[e]=(g<<1)+2;j=b+4|0;k=g+1|0;l=j+(g<<2)|0;c[l>>2]=d;m=j+(k<<2)|0;c[m>>2]=0;return}else{e=c[b+8>>2]|0;i=g+1|0;c[b+4>>2]=i;j=e;k=i;l=j+(g<<2)|0;c[l>>2]=d;m=j+(k<<2)|0;c[m>>2]=0;return}}function D1(b,d,e,f,g,h,i,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;if((1073741806-d|0)>>>0<e>>>0){DI(0)}if((a[b]&1)==0){k=b+4|0}else{k=c[b+8>>2]|0}do{if(d>>>0<536870887>>>0){l=e+d|0;m=d<<1;n=l>>>0<m>>>0?m:l;if(n>>>0<2>>>0){o=2;break}o=n+4&-4}else{o=1073741807}}while(0);e=KS(o<<2)|0;if((g|0)!=0){Kn(e,k,g)|0}if((i|0)!=0){Kn(e+(g<<2)|0,j,i)|0}j=f-h|0;if((j|0)!=(g|0)){Kn(e+(i+g<<2)|0,k+(h+g<<2)|0,j-g|0)|0}if((d|0)==1){p=b+8|0;c[p>>2]=e;q=o|1;r=b|0;c[r>>2]=q;s=j+i|0;t=b+4|0;c[t>>2]=s;u=e+(s<<2)|0;c[u>>2]=0;return}KU(k);p=b+8|0;c[p>>2]=e;q=o|1;r=b|0;c[r>>2]=q;s=j+i|0;t=b+4|0;c[t>>2]=s;u=e+(s<<2)|0;c[u>>2]=0;return}function D2(b,d,e,f,g,h,i){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;if((1073741807-d|0)>>>0<e>>>0){DI(0)}if((a[b]&1)==0){j=b+4|0}else{j=c[b+8>>2]|0}do{if(d>>>0<536870887>>>0){k=e+d|0;l=d<<1;m=k>>>0<l>>>0?l:k;if(m>>>0<2>>>0){n=2;break}n=m+4&-4}else{n=1073741807}}while(0);e=KS(n<<2)|0;if((g|0)!=0){Kn(e,j,g)|0}m=f-h|0;if((m|0)!=(g|0)){Kn(e+(i+g<<2)|0,j+(h+g<<2)|0,m-g|0)|0}if((d|0)==1){o=b+8|0;c[o>>2]=e;p=n|1;q=b|0;c[q>>2]=p;return}KU(j);o=b+8|0;c[o>>2]=e;p=n|1;q=b|0;c[q>>2]=p;return}function D3(b,d){b=b|0;d=d|0;var e=0,f=0,g=0;e=i;i=i+8|0;f=e|0;g=(c[b+24>>2]|0)==0;if(g){c[b+16>>2]=d|1}else{c[b+16>>2]=d}if(((g&1|d)&c[b+20>>2]|0)==0){i=e;return}e=gJ(16)|0;do{if((a[55408]|0)==0){if((bN(55408)|0)==0){break}c[13028]=29024;ep(208,52112,q|0)|0}}while(0);b=La(52112,0,32)|0;c[f>>2]=b&0|1;c[f+4>>2]=K|0;DE(e,f,21848);c[e>>2]=28208;eR(e|0,46136,72)}function D4(a){a=a|0;var b=0,d=0,e=0,f=0;c[a>>2]=28184;b=c[a+40>>2]|0;d=a+32|0;e=a+36|0;if((b|0)!=0){f=b;do{f=f-1|0;hF[c[(c[d>>2]|0)+(f<<2)>>2]&255](0,a,c[(c[e>>2]|0)+(f<<2)>>2]|0);}while((f|0)!=0)}It(a+28|0);KN(c[d>>2]|0);KN(c[e>>2]|0);KN(c[a+48>>2]|0);KN(c[a+60>>2]|0);return}function D5(a,b){a=a|0;b=b|0;Is(a,b+28|0);return}function D6(a,b){a=a|0;b=b|0;c[a+24>>2]=b;c[a+16>>2]=(b|0)==0;c[a+20>>2]=0;c[a+4>>2]=4098;c[a+12>>2]=0;c[a+8>>2]=6;b=a+28|0;K1(a+32|0,0,40)|0;if((b|0)==0){return}Ir(b);return}function D7(a){a=a|0;c[a>>2]=29400;It(a+4|0);KU(a);return}function D8(a){a=a|0;c[a>>2]=29400;It(a+4|0);return}function D9(a,b){a=a|0;b=b|0;return}function Ea(a,b,c){a=a|0;b=b|0;c=c|0;return a|0}function Eb(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;g=a;c[g>>2]=0;c[g+4>>2]=0;g=a+8|0;c[g>>2]=-1;c[g+4>>2]=-1;return}function Ec(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;e=i;b=d;d=i;i=i+16|0;c[d>>2]=c[b>>2];c[d+4>>2]=c[b+4>>2];c[d+8>>2]=c[b+8>>2];c[d+12>>2]=c[b+12>>2];b=a;c[b>>2]=0;c[b+4>>2]=0;b=a+8|0;c[b>>2]=-1;c[b+4>>2]=-1;i=e;return}function Ed(a){a=a|0;return 0}function Ee(a){a=a|0;return 0}function Ef(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;f=b;if((e|0)<=0){g=0;return g|0}h=b+12|0;i=b+16|0;j=d;d=0;while(1){k=c[h>>2]|0;if(k>>>0<(c[i>>2]|0)>>>0){c[h>>2]=k+1;l=a[k]|0}else{k=g3[c[(c[f>>2]|0)+40>>2]&511](b)|0;if((k|0)==-1){g=d;m=10;break}l=k&255}a[j]=l;k=d+1|0;if((k|0)<(e|0)){j=j+1|0;d=k}else{g=k;m=11;break}}if((m|0)==10){return g|0}else if((m|0)==11){return g|0}return 0}function Eg(a){a=a|0;return-1|0}function Eh(a){a=a|0;var b=0,e=0;if((g3[c[(c[a>>2]|0)+36>>2]&511](a)|0)==-1){b=-1;return b|0}e=a+12|0;a=c[e>>2]|0;c[e>>2]=a+1;b=d[a]|0;return b|0}function Ei(a,b){a=a|0;b=b|0;return-1|0}function Ej(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;g=b;if((f|0)<=0){h=0;return h|0}i=b+24|0;j=b+28|0;k=0;l=e;while(1){e=c[i>>2]|0;if(e>>>0<(c[j>>2]|0)>>>0){m=a[l]|0;c[i>>2]=e+1;a[e]=m}else{if((hx[c[(c[g>>2]|0)+52>>2]&127](b,d[l]|0)|0)==-1){h=k;n=9;break}}m=k+1|0;if((m|0)<(f|0)){k=m;l=l+1|0}else{h=m;n=8;break}}if((n|0)==8){return h|0}else if((n|0)==9){return h|0}return 0}function Ek(a,b){a=a|0;b=b|0;return-1|0}function El(a){a=a|0;c[a>>2]=29328;It(a+4|0);KU(a);return}function Em(a){a=a|0;c[a>>2]=29328;It(a+4|0);return}function En(a,b){a=a|0;b=b|0;return}function Eo(a,b,c){a=a|0;b=b|0;c=c|0;return a|0}function Ep(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;g=a;c[g>>2]=0;c[g+4>>2]=0;g=a+8|0;c[g>>2]=-1;c[g+4>>2]=-1;return}function Eq(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;e=i;b=d;d=i;i=i+16|0;c[d>>2]=c[b>>2];c[d+4>>2]=c[b+4>>2];c[d+8>>2]=c[b+8>>2];c[d+12>>2]=c[b+12>>2];b=a;c[b>>2]=0;c[b+4>>2]=0;b=a+8|0;c[b>>2]=-1;c[b+4>>2]=-1;i=e;return}function Er(a){a=a|0;return 0}function Es(a){a=a|0;return 0}function Et(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;e=a;if((d|0)<=0){f=0;return f|0}g=a+12|0;h=a+16|0;i=b;b=0;while(1){j=c[g>>2]|0;if(j>>>0<(c[h>>2]|0)>>>0){c[g>>2]=j+4;k=c[j>>2]|0}else{j=g3[c[(c[e>>2]|0)+40>>2]&511](a)|0;if((j|0)==-1){f=b;l=10;break}else{k=j}}c[i>>2]=k;j=b+1|0;if((j|0)<(d|0)){i=i+4|0;b=j}else{f=j;l=8;break}}if((l|0)==8){return f|0}else if((l|0)==10){return f|0}return 0}function Eu(a){a=a|0;return-1|0}function Ev(a){a=a|0;var b=0,d=0;if((g3[c[(c[a>>2]|0)+36>>2]&511](a)|0)==-1){b=-1;return b|0}d=a+12|0;a=c[d>>2]|0;c[d>>2]=a+4;b=c[a>>2]|0;return b|0}function Ew(a,b){a=a|0;b=b|0;return-1|0}function Ex(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;e=a;if((d|0)<=0){f=0;return f|0}g=a+24|0;h=a+28|0;i=0;j=b;while(1){b=c[g>>2]|0;if(b>>>0<(c[h>>2]|0)>>>0){k=c[j>>2]|0;c[g>>2]=b+4;c[b>>2]=k}else{if((hx[c[(c[e>>2]|0)+52>>2]&127](a,c[j>>2]|0)|0)==-1){f=i;l=9;break}}k=i+1|0;if((k|0)<(d|0)){i=k;j=j+4|0}else{f=k;l=10;break}}if((l|0)==10){return f|0}else if((l|0)==9){return f|0}return 0}function Ey(a,b){a=a|0;b=b|0;return-1|0}function Ez(a){a=a|0;D4(a+8|0);KU(a);return}function EA(a){a=a|0;D4(a+8|0);return}function EB(a){a=a|0;var b=0,d=0;b=a;d=c[(c[a>>2]|0)-12>>2]|0;D4(b+(d+8)|0);KU(b+d|0);return}function EC(a){a=a|0;D4(a+((c[(c[a>>2]|0)-12>>2]|0)+8)|0);return}function ED(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0;d=i;i=i+8|0;e=d|0;f=b;g=c[(c[f>>2]|0)-12>>2]|0;h=b;if((c[h+(g+24)>>2]|0)==0){i=d;return b|0}j=e|0;a[j]=0;c[e+4>>2]=b;do{if((c[h+(g+16)>>2]|0)==0){k=c[h+(g+72)>>2]|0;if((k|0)!=0){ED(k)|0}a[j]=1;k=c[h+((c[(c[f>>2]|0)-12>>2]|0)+24)>>2]|0;if((g3[c[(c[k>>2]|0)+24>>2]&511](k)|0)!=-1){break}k=c[(c[f>>2]|0)-12>>2]|0;D3(h+k|0,c[h+(k+16)>>2]|1)}}while(0);EO(e);i=d;return b|0}function EE(a){a=a|0;var b=0;b=a+16|0;c[b>>2]=c[b>>2]|1;if((c[a+20>>2]&1|0)==0){return}else{c1()}}function EF(a){a=a|0;D4(a+8|0);KU(a);return}function EG(a){a=a|0;D4(a+8|0);return}function EH(a){a=a|0;var b=0,d=0;b=a;d=c[(c[a>>2]|0)-12>>2]|0;D4(b+(d+8)|0);KU(b+d|0);return}function EI(a){a=a|0;D4(a+((c[(c[a>>2]|0)-12>>2]|0)+8)|0);return}function EJ(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0;d=i;i=i+8|0;e=d|0;f=b;g=c[(c[f>>2]|0)-12>>2]|0;h=b;if((c[h+(g+24)>>2]|0)==0){i=d;return b|0}j=e|0;a[j]=0;c[e+4>>2]=b;do{if((c[h+(g+16)>>2]|0)==0){k=c[h+(g+72)>>2]|0;if((k|0)!=0){EJ(k)|0}a[j]=1;k=c[h+((c[(c[f>>2]|0)-12>>2]|0)+24)>>2]|0;if((g3[c[(c[k>>2]|0)+24>>2]&511](k)|0)!=-1){break}k=c[(c[f>>2]|0)-12>>2]|0;D3(h+k|0,c[h+(k+16)>>2]|1)}}while(0);EU(e);i=d;return b|0}function EK(a){a=a|0;D4(a+4|0);KU(a);return}function EL(a){a=a|0;D4(a+4|0);return}function EM(a){a=a|0;var b=0,d=0;b=a;d=c[(c[a>>2]|0)-12>>2]|0;D4(b+(d+4)|0);KU(b+d|0);return}function EN(a){a=a|0;D4(a+((c[(c[a>>2]|0)-12>>2]|0)+4)|0);return}function EO(a){a=a|0;var b=0,d=0,e=0;b=a+4|0;a=c[b>>2]|0;d=c[(c[a>>2]|0)-12>>2]|0;e=a;if((c[e+(d+24)>>2]|0)==0){return}if((c[e+(d+16)>>2]|0)!=0){return}if((c[e+(d+4)>>2]&8192|0)==0){return}if(dn()|0){return}d=c[b>>2]|0;e=c[d+((c[(c[d>>2]|0)-12>>2]|0)+24)>>2]|0;if((g3[c[(c[e>>2]|0)+24>>2]&511](e)|0)!=-1){return}e=c[b>>2]|0;b=c[(c[e>>2]|0)-12>>2]|0;d=e;D3(d+b|0,c[d+(b+16)>>2]|1);return}function EP(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;e=i;i=i+40|0;f=e|0;g=e+8|0;h=e+16|0;j=e+24|0;k=e+32|0;l=h|0;a[l]=0;c[h+4>>2]=b;m=b;n=c[(c[m>>2]|0)-12>>2]|0;o=b;do{if((c[o+(n+16)>>2]|0)==0){p=c[o+(n+72)>>2]|0;if((p|0)!=0){ED(p)|0}a[l]=1;Is(j,o+((c[(c[m>>2]|0)-12>>2]|0)+28)|0);p=Iu(j,54312)|0;It(j);q=c[(c[m>>2]|0)-12>>2]|0;r=c[o+(q+24)>>2]|0;s=o+(q+76)|0;t=c[s>>2]|0;if((t|0)==-1){Is(g,o+(q+28)|0);u=Iu(g,54664)|0;v=hx[c[(c[u>>2]|0)+28>>2]&127](u,32)|0;It(g);c[s>>2]=v<<24>>24;w=v}else{w=t&255}t=c[(c[p>>2]|0)+24>>2]|0;c[f>>2]=r;hk[t&63](k,p,f,o+q|0,w,d);if((c[k>>2]|0)!=0){break}q=c[(c[m>>2]|0)-12>>2]|0;D3(o+q|0,c[o+(q+16)>>2]|5)}}while(0);EO(h);i=e;return b|0}function EQ(a){a=a|0;D4(a+4|0);KU(a);return}function ER(a){a=a|0;D4(a+4|0);return}function ES(a){a=a|0;var b=0,d=0;b=a;d=c[(c[a>>2]|0)-12>>2]|0;D4(b+(d+4)|0);KU(b+d|0);return}function ET(a){a=a|0;D4(a+((c[(c[a>>2]|0)-12>>2]|0)+4)|0);return}function EU(a){a=a|0;var b=0,d=0,e=0;b=a+4|0;a=c[b>>2]|0;d=c[(c[a>>2]|0)-12>>2]|0;e=a;if((c[e+(d+24)>>2]|0)==0){return}if((c[e+(d+16)>>2]|0)!=0){return}if((c[e+(d+4)>>2]&8192|0)==0){return}if(dn()|0){return}d=c[b>>2]|0;e=c[d+((c[(c[d>>2]|0)-12>>2]|0)+24)>>2]|0;if((g3[c[(c[e>>2]|0)+24>>2]&511](e)|0)!=-1){return}e=c[b>>2]|0;b=c[(c[e>>2]|0)-12>>2]|0;d=e;D3(d+b|0,c[d+(b+16)>>2]|1);return}function EV(a){a=a|0;return 23864}function EW(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)==1){DK(a,24768,35);return}else{DC(a,b|0,c);return}}function EX(a){a=a|0;Dy(a|0);return}function EY(a){a=a|0;DG(a|0);KU(a);return}function EZ(a){a=a|0;DG(a|0);return}function E_(a){a=a|0;D4(a);KU(a);return}function E$(a){a=a|0;Dy(a|0);KU(a);return}function E0(a){a=a|0;Dl(a|0);KU(a);return}function E1(a){a=a|0;Dl(a|0);return}function E2(a){a=a|0;Dl(a|0);return}function E3(b,c,d,e,f){b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0;L1:do{if((e|0)==(f|0)){g=c}else{b=c;h=e;while(1){if((b|0)==(d|0)){i=-1;j=11;break}k=a[b]|0;l=a[h]|0;if(k<<24>>24<l<<24>>24){i=-1;j=9;break}if(l<<24>>24<k<<24>>24){i=1;j=10;break}k=b+1|0;l=h+1|0;if((l|0)==(f|0)){g=k;break L1}else{b=k;h=l}}if((j|0)==10){return i|0}else if((j|0)==9){return i|0}else if((j|0)==11){return i|0}}}while(0);i=(g|0)!=(d|0)|0;return i|0}function E4(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0;d=e;g=f-d|0;if(g>>>0>4294967279>>>0){DI(b)}if(g>>>0<11>>>0){a[b]=g<<1;h=b+1|0}else{i=g+16&-16;j=KS(i)|0;c[b+8>>2]=j;c[b>>2]=i|1;c[b+4>>2]=g;h=j}if((e|0)==(f|0)){k=h;a[k]=0;return}j=f+(-d|0)|0;d=h;g=e;while(1){a[d]=a[g]|0;e=g+1|0;if((e|0)==(f|0)){break}else{d=d+1|0;g=e}}k=h+j|0;a[k]=0;return}function E5(b,c,d){b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0;if((c|0)==(d|0)){e=0;return e|0}else{f=c;g=0}while(1){c=(a[f]|0)+(g<<4)|0;b=c&-268435456;h=(b>>>24|b)^c;c=f+1|0;if((c|0)==(d|0)){e=h;break}else{f=c;g=h}}return e|0}function E6(a){a=a|0;Dl(a|0);KU(a);return}function E7(a){a=a|0;Dl(a|0);return}function E8(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0;L1:do{if((e|0)==(f|0)){g=b}else{a=b;h=e;while(1){if((a|0)==(d|0)){i=-1;j=9;break}k=c[a>>2]|0;l=c[h>>2]|0;if((k|0)<(l|0)){i=-1;j=8;break}if((l|0)<(k|0)){i=1;j=11;break}k=a+4|0;l=h+4|0;if((l|0)==(f|0)){g=k;break L1}else{a=k;h=l}}if((j|0)==9){return i|0}else if((j|0)==8){return i|0}else if((j|0)==11){return i|0}}}while(0);i=(g|0)!=(d|0)|0;return i|0}function E9(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0;d=e;g=f-d|0;h=g>>2;if(h>>>0>1073741807>>>0){DI(b)}if(h>>>0<2>>>0){a[b]=g>>>1;i=b+4|0}else{g=h+4&-4;j=KS(g<<2)|0;c[b+8>>2]=j;c[b>>2]=g|1;c[b+4>>2]=h;i=j}if((e|0)==(f|0)){k=i;c[k>>2]=0;return}j=(f-4+(-d|0)|0)>>>2;d=i;h=e;while(1){c[d>>2]=c[h>>2];e=h+4|0;if((e|0)==(f|0)){break}else{d=d+4|0;h=e}}k=i+(j+1<<2)|0;c[k>>2]=0;return}function Fa(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;if((b|0)==(d|0)){e=0;return e|0}else{f=b;g=0}while(1){b=(c[f>>2]|0)+(g<<4)|0;a=b&-268435456;h=(a>>>24|a)^b;b=f+4|0;if((b|0)==(d|0)){e=h;break}else{f=b;g=h}}return e|0}function Fb(a){a=a|0;Dl(a|0);KU(a);return}function Fc(a){a=a|0;Dl(a|0);return}function Fd(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;k=i;i=i+112|0;l=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[l>>2];l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=k|0;m=k+16|0;n=k+32|0;o=k+40|0;p=k+48|0;q=k+56|0;r=k+64|0;s=k+72|0;t=k+80|0;u=k+104|0;if((c[g+4>>2]&1|0)==0){c[n>>2]=-1;v=c[(c[d>>2]|0)+16>>2]|0;w=e|0;c[p>>2]=c[w>>2];c[q>>2]=c[f>>2];hr[v&127](o,d,p,q,g,h,n);q=c[o>>2]|0;c[w>>2]=q;w=c[n>>2]|0;if((w|0)==0){a[j]=0}else if((w|0)==1){a[j]=1}else{a[j]=1;c[h>>2]=4}c[b>>2]=q;i=k;return}D5(r,g);q=r|0;r=c[q>>2]|0;if((c[13666]|0)!=-1){c[m>>2]=54664;c[m+4>>2]=32;c[m+8>>2]=0;DH(54664,m,286)}m=(c[13667]|0)-1|0;w=c[r+8>>2]|0;do{if((c[r+12>>2]|0)-w>>2>>>0>m>>>0){n=c[w+(m<<2)>>2]|0;if((n|0)==0){break}o=n;Dn(c[q>>2]|0)|0;D5(s,g);n=s|0;p=c[n>>2]|0;if((c[13570]|0)!=-1){c[l>>2]=54280;c[l+4>>2]=32;c[l+8>>2]=0;DH(54280,l,286)}d=(c[13571]|0)-1|0;v=c[p+8>>2]|0;do{if((c[p+12>>2]|0)-v>>2>>>0>d>>>0){x=c[v+(d<<2)>>2]|0;if((x|0)==0){break}y=x;Dn(c[n>>2]|0)|0;z=t|0;A=x;g0[c[(c[A>>2]|0)+24>>2]&511](z,y);g0[c[(c[A>>2]|0)+28>>2]&511](t+12|0,y);c[u>>2]=c[f>>2];a[j]=(Fe(e,u,z,t+24|0,o,h,1)|0)==(z|0)|0;c[b>>2]=c[e>>2];DM(t+12|0);DM(t|0);i=k;return}}while(0);o=gJ(4)|0;Kr(o);eR(o|0,45560,458)}}while(0);k=gJ(4)|0;Kr(k);eR(k|0,45560,458)}function Fe(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0;l=i;i=i+104|0;m=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[m>>2];m=(g-f|0)/12|0;n=l|0;do{if(m>>>0>100>>>0){o=KM(m)|0;if((o|0)!=0){p=o;q=o;break}KZ();p=0;q=0}else{p=n;q=0}}while(0);n=(f|0)==(g|0);if(n){r=m;s=0}else{o=m;m=0;t=p;u=f;while(1){v=d[u]|0;if((v&1|0)==0){w=v>>>1}else{w=c[u+4>>2]|0}if((w|0)==0){a[t]=2;x=m+1|0;y=o-1|0}else{a[t]=1;x=m;y=o}v=u+12|0;if((v|0)==(g|0)){r=y;s=x;break}else{o=y;m=x;t=t+1|0;u=v}}}u=b|0;b=e|0;e=h;t=0;x=s;s=r;while(1){r=c[u>>2]|0;do{if((r|0)==0){z=0}else{if((c[r+12>>2]|0)!=(c[r+16>>2]|0)){z=r;break}if((g3[c[(c[r>>2]|0)+36>>2]&511](r)|0)==-1){c[u>>2]=0;z=0;break}else{z=c[u>>2]|0;break}}}while(0);r=(z|0)==0;m=c[b>>2]|0;if((m|0)==0){A=z;B=0}else{do{if((c[m+12>>2]|0)==(c[m+16>>2]|0)){if((g3[c[(c[m>>2]|0)+36>>2]&511](m)|0)!=-1){C=m;break}c[b>>2]=0;C=0}else{C=m}}while(0);A=c[u>>2]|0;B=C}D=(B|0)==0;if(!((r^D)&(s|0)!=0)){break}m=c[A+12>>2]|0;if((m|0)==(c[A+16>>2]|0)){E=(g3[c[(c[A>>2]|0)+36>>2]&511](A)|0)&255}else{E=a[m]|0}if(k){F=E}else{F=hx[c[(c[e>>2]|0)+12>>2]&127](h,E)|0}do{if(n){G=x;H=s}else{m=t+1|0;L46:do{if(k){y=s;o=x;w=p;v=0;I=f;while(1){do{if((a[w]|0)==1){J=I;if((a[J]&1)==0){K=I+1|0}else{K=c[I+8>>2]|0}if(F<<24>>24!=(a[K+t|0]|0)){a[w]=0;L=v;M=o;N=y-1|0;break}O=d[J]|0;if((O&1|0)==0){P=O>>>1}else{P=c[I+4>>2]|0}if((P|0)!=(m|0)){L=1;M=o;N=y;break}a[w]=2;L=1;M=o+1|0;N=y-1|0}else{L=v;M=o;N=y}}while(0);O=I+12|0;if((O|0)==(g|0)){Q=N;R=M;S=L;break L46}y=N;o=M;w=w+1|0;v=L;I=O}}else{I=s;v=x;w=p;o=0;y=f;while(1){do{if((a[w]|0)==1){O=y;if((a[O]&1)==0){T=y+1|0}else{T=c[y+8>>2]|0}if(F<<24>>24!=(hx[c[(c[e>>2]|0)+12>>2]&127](h,a[T+t|0]|0)|0)<<24>>24){a[w]=0;U=o;V=v;W=I-1|0;break}J=d[O]|0;if((J&1|0)==0){X=J>>>1}else{X=c[y+4>>2]|0}if((X|0)!=(m|0)){U=1;V=v;W=I;break}a[w]=2;U=1;V=v+1|0;W=I-1|0}else{U=o;V=v;W=I}}while(0);J=y+12|0;if((J|0)==(g|0)){Q=W;R=V;S=U;break L46}I=W;v=V;w=w+1|0;o=U;y=J}}}while(0);if(!S){G=R;H=Q;break}m=c[u>>2]|0;y=m+12|0;o=c[y>>2]|0;if((o|0)==(c[m+16>>2]|0)){g3[c[(c[m>>2]|0)+40>>2]&511](m)|0}else{c[y>>2]=o+1}if((R+Q|0)>>>0<2>>>0|n){G=R;H=Q;break}o=t+1|0;y=R;m=p;w=f;while(1){do{if((a[m]|0)==2){v=d[w]|0;if((v&1|0)==0){Y=v>>>1}else{Y=c[w+4>>2]|0}if((Y|0)==(o|0)){Z=y;break}a[m]=0;Z=y-1|0}else{Z=y}}while(0);v=w+12|0;if((v|0)==(g|0)){G=Z;H=Q;break}else{y=Z;m=m+1|0;w=v}}}}while(0);t=t+1|0;x=G;s=H}do{if((A|0)==0){_=0}else{if((c[A+12>>2]|0)!=(c[A+16>>2]|0)){_=A;break}if((g3[c[(c[A>>2]|0)+36>>2]&511](A)|0)==-1){c[u>>2]=0;_=0;break}else{_=c[u>>2]|0;break}}}while(0);u=(_|0)==0;do{if(D){$=93}else{if((c[B+12>>2]|0)!=(c[B+16>>2]|0)){if(u){break}else{$=95;break}}if((g3[c[(c[B>>2]|0)+36>>2]&511](B)|0)==-1){c[b>>2]=0;$=93;break}else{if(u^(B|0)==0){break}else{$=95;break}}}}while(0);if(($|0)==93){if(u){$=95}}if(($|0)==95){c[j>>2]=c[j>>2]|2}L125:do{if(n){$=100}else{u=f;B=p;while(1){if((a[B]|0)==2){aa=u;break L125}b=u+12|0;if((b|0)==(g|0)){$=100;break L125}u=b;B=B+1|0}}}while(0);if(($|0)==100){c[j>>2]=c[j>>2]|4;aa=g}if((q|0)==0){i=l;return aa|0}KN(q);i=l;return aa|0}function Ff(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];Fg(a,0,j,k,f,g,h);i=b;return}function Fg(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0;e=i;i=i+72|0;l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=g;g=i;i=i+4|0;i=i+7&-8;c[g>>2]=c[l>>2];l=e|0;m=e+32|0;n=e+40|0;o=e+56|0;p=o;q=i;i=i+4|0;i=i+7&-8;r=i;i=i+160|0;s=i;i=i+4|0;i=i+7&-8;t=i;i=i+4|0;i=i+7&-8;u=c[h+4>>2]&74;if((u|0)==64){v=8}else if((u|0)==0){v=0}else if((u|0)==8){v=16}else{v=10}u=l|0;FY(n,h,u,m);K1(p|0,0,12)|0;h=o;DP(o,10,0);if((a[p]&1)==0){l=h+1|0;w=l;x=l;y=o+8|0}else{l=o+8|0;w=c[l>>2]|0;x=h+1|0;y=l}c[q>>2]=w;l=r|0;c[s>>2]=l;c[t>>2]=0;h=f|0;f=g|0;g=o|0;z=o+4|0;A=a[m]|0;m=w;w=c[h>>2]|0;L11:while(1){do{if((w|0)==0){B=0}else{if((c[w+12>>2]|0)!=(c[w+16>>2]|0)){B=w;break}if((g3[c[(c[w>>2]|0)+36>>2]&511](w)|0)!=-1){B=w;break}c[h>>2]=0;B=0}}while(0);C=(B|0)==0;D=c[f>>2]|0;do{if((D|0)==0){E=21}else{if((c[D+12>>2]|0)!=(c[D+16>>2]|0)){if(C){F=D;G=0;break}else{H=m;I=D;J=0;break L11}}if((g3[c[(c[D>>2]|0)+36>>2]&511](D)|0)==-1){c[f>>2]=0;E=21;break}else{K=(D|0)==0;if(C^K){F=D;G=K;break}else{H=m;I=D;J=K;break L11}}}}while(0);if((E|0)==21){E=0;if(C){H=m;I=0;J=1;break}else{F=0;G=1}}D=d[p]|0;K=(D&1|0)==0;if(((c[q>>2]|0)-m|0)==((K?D>>>1:c[z>>2]|0)|0)){if(K){L=D>>>1;M=D>>>1}else{D=c[z>>2]|0;L=D;M=D}DP(o,L<<1,0);if((a[p]&1)==0){N=10}else{N=(c[g>>2]&-2)-1|0}DP(o,N,0);if((a[p]&1)==0){O=x}else{O=c[y>>2]|0}c[q>>2]=O+M;P=O}else{P=m}D=B+12|0;K=c[D>>2]|0;Q=B+16|0;if((K|0)==(c[Q>>2]|0)){R=(g3[c[(c[B>>2]|0)+36>>2]&511](B)|0)&255}else{R=a[K]|0}if((Fy(R,v,P,q,t,A,n,l,s,u)|0)!=0){H=P;I=F;J=G;break}K=c[D>>2]|0;if((K|0)==(c[Q>>2]|0)){g3[c[(c[B>>2]|0)+40>>2]&511](B)|0;m=P;w=B;continue}else{c[D>>2]=K+1;m=P;w=B;continue}}w=d[n]|0;if((w&1|0)==0){S=w>>>1}else{S=c[n+4>>2]|0}do{if((S|0)!=0){w=c[s>>2]|0;if((w-r|0)>=160){break}P=c[t>>2]|0;c[s>>2]=w+4;c[w>>2]=P}}while(0);c[k>>2]=J5(H,c[q>>2]|0,j,v)|0;HR(n,l,c[s>>2]|0,j);do{if(C){T=0}else{if((c[B+12>>2]|0)!=(c[B+16>>2]|0)){T=B;break}if((g3[c[(c[B>>2]|0)+36>>2]&511](B)|0)!=-1){T=B;break}c[h>>2]=0;T=0}}while(0);h=(T|0)==0;L71:do{if(J){E=62}else{do{if((c[I+12>>2]|0)==(c[I+16>>2]|0)){if((g3[c[(c[I>>2]|0)+36>>2]&511](I)|0)!=-1){break}c[f>>2]=0;E=62;break L71}}while(0);if(!(h^(I|0)==0)){break}U=b|0;c[U>>2]=T;DM(o);DM(n);i=e;return}}while(0);do{if((E|0)==62){if(h){break}U=b|0;c[U>>2]=T;DM(o);DM(n);i=e;return}}while(0);c[j>>2]=c[j>>2]|2;U=b|0;c[U>>2]=T;DM(o);DM(n);i=e;return}function Fh(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];Fi(a,0,j,k,f,g,h);i=b;return}function Fi(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0;e=i;i=i+72|0;l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=g;g=i;i=i+4|0;i=i+7&-8;c[g>>2]=c[l>>2];l=e|0;m=e+32|0;n=e+40|0;o=e+56|0;p=o;q=i;i=i+4|0;i=i+7&-8;r=i;i=i+160|0;s=i;i=i+4|0;i=i+7&-8;t=i;i=i+4|0;i=i+7&-8;u=c[h+4>>2]&74;if((u|0)==0){v=0}else if((u|0)==64){v=8}else if((u|0)==8){v=16}else{v=10}u=l|0;FY(n,h,u,m);K1(p|0,0,12)|0;h=o;DP(o,10,0);if((a[p]&1)==0){l=h+1|0;w=l;x=l;y=o+8|0}else{l=o+8|0;w=c[l>>2]|0;x=h+1|0;y=l}c[q>>2]=w;l=r|0;c[s>>2]=l;c[t>>2]=0;h=f|0;f=g|0;g=o|0;z=o+4|0;A=a[m]|0;m=w;w=c[h>>2]|0;L11:while(1){do{if((w|0)==0){B=0}else{if((c[w+12>>2]|0)!=(c[w+16>>2]|0)){B=w;break}if((g3[c[(c[w>>2]|0)+36>>2]&511](w)|0)!=-1){B=w;break}c[h>>2]=0;B=0}}while(0);C=(B|0)==0;D=c[f>>2]|0;do{if((D|0)==0){E=21}else{if((c[D+12>>2]|0)!=(c[D+16>>2]|0)){if(C){F=D;G=0;break}else{H=m;I=D;J=0;break L11}}if((g3[c[(c[D>>2]|0)+36>>2]&511](D)|0)==-1){c[f>>2]=0;E=21;break}else{L=(D|0)==0;if(C^L){F=D;G=L;break}else{H=m;I=D;J=L;break L11}}}}while(0);if((E|0)==21){E=0;if(C){H=m;I=0;J=1;break}else{F=0;G=1}}D=d[p]|0;L=(D&1|0)==0;if(((c[q>>2]|0)-m|0)==((L?D>>>1:c[z>>2]|0)|0)){if(L){M=D>>>1;N=D>>>1}else{D=c[z>>2]|0;M=D;N=D}DP(o,M<<1,0);if((a[p]&1)==0){O=10}else{O=(c[g>>2]&-2)-1|0}DP(o,O,0);if((a[p]&1)==0){P=x}else{P=c[y>>2]|0}c[q>>2]=P+N;Q=P}else{Q=m}D=B+12|0;L=c[D>>2]|0;R=B+16|0;if((L|0)==(c[R>>2]|0)){S=(g3[c[(c[B>>2]|0)+36>>2]&511](B)|0)&255}else{S=a[L]|0}if((Fy(S,v,Q,q,t,A,n,l,s,u)|0)!=0){H=Q;I=F;J=G;break}L=c[D>>2]|0;if((L|0)==(c[R>>2]|0)){g3[c[(c[B>>2]|0)+40>>2]&511](B)|0;m=Q;w=B;continue}else{c[D>>2]=L+1;m=Q;w=B;continue}}w=d[n]|0;if((w&1|0)==0){T=w>>>1}else{T=c[n+4>>2]|0}do{if((T|0)!=0){w=c[s>>2]|0;if((w-r|0)>=160){break}Q=c[t>>2]|0;c[s>>2]=w+4;c[w>>2]=Q}}while(0);t=J4(H,c[q>>2]|0,j,v)|0;c[k>>2]=t;c[k+4>>2]=K;HR(n,l,c[s>>2]|0,j);do{if(C){U=0}else{if((c[B+12>>2]|0)!=(c[B+16>>2]|0)){U=B;break}if((g3[c[(c[B>>2]|0)+36>>2]&511](B)|0)!=-1){U=B;break}c[h>>2]=0;U=0}}while(0);h=(U|0)==0;L71:do{if(J){E=62}else{do{if((c[I+12>>2]|0)==(c[I+16>>2]|0)){if((g3[c[(c[I>>2]|0)+36>>2]&511](I)|0)!=-1){break}c[f>>2]=0;E=62;break L71}}while(0);if(!(h^(I|0)==0)){break}V=b|0;c[V>>2]=U;DM(o);DM(n);i=e;return}}while(0);do{if((E|0)==62){if(h){break}V=b|0;c[V>>2]=U;DM(o);DM(n);i=e;return}}while(0);c[j>>2]=c[j>>2]|2;V=b|0;c[V>>2]=U;DM(o);DM(n);i=e;return}function Fj(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];Fk(a,0,j,k,f,g,h);i=b;return}function Fk(e,f,g,h,j,k,l){e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0;f=i;i=i+72|0;m=g;g=i;i=i+4|0;i=i+7&-8;c[g>>2]=c[m>>2];m=h;h=i;i=i+4|0;i=i+7&-8;c[h>>2]=c[m>>2];m=f|0;n=f+32|0;o=f+40|0;p=f+56|0;q=p;r=i;i=i+4|0;i=i+7&-8;s=i;i=i+160|0;t=i;i=i+4|0;i=i+7&-8;u=i;i=i+4|0;i=i+7&-8;v=c[j+4>>2]&74;if((v|0)==64){w=8}else if((v|0)==0){w=0}else if((v|0)==8){w=16}else{w=10}v=m|0;FY(o,j,v,n);K1(q|0,0,12)|0;j=p;DP(p,10,0);if((a[q]&1)==0){m=j+1|0;x=m;y=m;z=p+8|0}else{m=p+8|0;x=c[m>>2]|0;y=j+1|0;z=m}c[r>>2]=x;m=s|0;c[t>>2]=m;c[u>>2]=0;j=g|0;g=h|0;h=p|0;A=p+4|0;B=a[n]|0;n=x;x=c[j>>2]|0;L11:while(1){do{if((x|0)==0){C=0}else{if((c[x+12>>2]|0)!=(c[x+16>>2]|0)){C=x;break}if((g3[c[(c[x>>2]|0)+36>>2]&511](x)|0)!=-1){C=x;break}c[j>>2]=0;C=0}}while(0);D=(C|0)==0;E=c[g>>2]|0;do{if((E|0)==0){F=21}else{if((c[E+12>>2]|0)!=(c[E+16>>2]|0)){if(D){G=E;H=0;break}else{I=n;J=E;K=0;break L11}}if((g3[c[(c[E>>2]|0)+36>>2]&511](E)|0)==-1){c[g>>2]=0;F=21;break}else{L=(E|0)==0;if(D^L){G=E;H=L;break}else{I=n;J=E;K=L;break L11}}}}while(0);if((F|0)==21){F=0;if(D){I=n;J=0;K=1;break}else{G=0;H=1}}E=d[q]|0;L=(E&1|0)==0;if(((c[r>>2]|0)-n|0)==((L?E>>>1:c[A>>2]|0)|0)){if(L){M=E>>>1;N=E>>>1}else{E=c[A>>2]|0;M=E;N=E}DP(p,M<<1,0);if((a[q]&1)==0){O=10}else{O=(c[h>>2]&-2)-1|0}DP(p,O,0);if((a[q]&1)==0){P=y}else{P=c[z>>2]|0}c[r>>2]=P+N;Q=P}else{Q=n}E=C+12|0;L=c[E>>2]|0;R=C+16|0;if((L|0)==(c[R>>2]|0)){S=(g3[c[(c[C>>2]|0)+36>>2]&511](C)|0)&255}else{S=a[L]|0}if((Fy(S,w,Q,r,u,B,o,m,t,v)|0)!=0){I=Q;J=G;K=H;break}L=c[E>>2]|0;if((L|0)==(c[R>>2]|0)){g3[c[(c[C>>2]|0)+40>>2]&511](C)|0;n=Q;x=C;continue}else{c[E>>2]=L+1;n=Q;x=C;continue}}x=d[o]|0;if((x&1|0)==0){T=x>>>1}else{T=c[o+4>>2]|0}do{if((T|0)!=0){x=c[t>>2]|0;if((x-s|0)>=160){break}Q=c[u>>2]|0;c[t>>2]=x+4;c[x>>2]=Q}}while(0);b[l>>1]=J3(I,c[r>>2]|0,k,w)|0;HR(o,m,c[t>>2]|0,k);do{if(D){U=0}else{if((c[C+12>>2]|0)!=(c[C+16>>2]|0)){U=C;break}if((g3[c[(c[C>>2]|0)+36>>2]&511](C)|0)!=-1){U=C;break}c[j>>2]=0;U=0}}while(0);j=(U|0)==0;L71:do{if(K){F=62}else{do{if((c[J+12>>2]|0)==(c[J+16>>2]|0)){if((g3[c[(c[J>>2]|0)+36>>2]&511](J)|0)!=-1){break}c[g>>2]=0;F=62;break L71}}while(0);if(!(j^(J|0)==0)){break}V=e|0;c[V>>2]=U;DM(p);DM(o);i=f;return}}while(0);do{if((F|0)==62){if(j){break}V=e|0;c[V>>2]=U;DM(p);DM(o);i=f;return}}while(0);c[k>>2]=c[k>>2]|2;V=e|0;c[V>>2]=U;DM(p);DM(o);i=f;return}function Fl(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];Fm(a,0,j,k,f,g,h);i=b;return}function Fm(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0;e=i;i=i+72|0;l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=g;g=i;i=i+4|0;i=i+7&-8;c[g>>2]=c[l>>2];l=e|0;m=e+32|0;n=e+40|0;o=e+56|0;p=o;q=i;i=i+4|0;i=i+7&-8;r=i;i=i+160|0;s=i;i=i+4|0;i=i+7&-8;t=i;i=i+4|0;i=i+7&-8;u=c[h+4>>2]&74;if((u|0)==0){v=0}else if((u|0)==64){v=8}else if((u|0)==8){v=16}else{v=10}u=l|0;FY(n,h,u,m);K1(p|0,0,12)|0;h=o;DP(o,10,0);if((a[p]&1)==0){l=h+1|0;w=l;x=l;y=o+8|0}else{l=o+8|0;w=c[l>>2]|0;x=h+1|0;y=l}c[q>>2]=w;l=r|0;c[s>>2]=l;c[t>>2]=0;h=f|0;f=g|0;g=o|0;z=o+4|0;A=a[m]|0;m=w;w=c[h>>2]|0;L11:while(1){do{if((w|0)==0){B=0}else{if((c[w+12>>2]|0)!=(c[w+16>>2]|0)){B=w;break}if((g3[c[(c[w>>2]|0)+36>>2]&511](w)|0)!=-1){B=w;break}c[h>>2]=0;B=0}}while(0);C=(B|0)==0;D=c[f>>2]|0;do{if((D|0)==0){E=21}else{if((c[D+12>>2]|0)!=(c[D+16>>2]|0)){if(C){F=D;G=0;break}else{H=m;I=D;J=0;break L11}}if((g3[c[(c[D>>2]|0)+36>>2]&511](D)|0)==-1){c[f>>2]=0;E=21;break}else{K=(D|0)==0;if(C^K){F=D;G=K;break}else{H=m;I=D;J=K;break L11}}}}while(0);if((E|0)==21){E=0;if(C){H=m;I=0;J=1;break}else{F=0;G=1}}D=d[p]|0;K=(D&1|0)==0;if(((c[q>>2]|0)-m|0)==((K?D>>>1:c[z>>2]|0)|0)){if(K){L=D>>>1;M=D>>>1}else{D=c[z>>2]|0;L=D;M=D}DP(o,L<<1,0);if((a[p]&1)==0){N=10}else{N=(c[g>>2]&-2)-1|0}DP(o,N,0);if((a[p]&1)==0){O=x}else{O=c[y>>2]|0}c[q>>2]=O+M;P=O}else{P=m}D=B+12|0;K=c[D>>2]|0;Q=B+16|0;if((K|0)==(c[Q>>2]|0)){R=(g3[c[(c[B>>2]|0)+36>>2]&511](B)|0)&255}else{R=a[K]|0}if((Fy(R,v,P,q,t,A,n,l,s,u)|0)!=0){H=P;I=F;J=G;break}K=c[D>>2]|0;if((K|0)==(c[Q>>2]|0)){g3[c[(c[B>>2]|0)+40>>2]&511](B)|0;m=P;w=B;continue}else{c[D>>2]=K+1;m=P;w=B;continue}}w=d[n]|0;if((w&1|0)==0){S=w>>>1}else{S=c[n+4>>2]|0}do{if((S|0)!=0){w=c[s>>2]|0;if((w-r|0)>=160){break}P=c[t>>2]|0;c[s>>2]=w+4;c[w>>2]=P}}while(0);c[k>>2]=J2(H,c[q>>2]|0,j,v)|0;HR(n,l,c[s>>2]|0,j);do{if(C){T=0}else{if((c[B+12>>2]|0)!=(c[B+16>>2]|0)){T=B;break}if((g3[c[(c[B>>2]|0)+36>>2]&511](B)|0)!=-1){T=B;break}c[h>>2]=0;T=0}}while(0);h=(T|0)==0;L71:do{if(J){E=62}else{do{if((c[I+12>>2]|0)==(c[I+16>>2]|0)){if((g3[c[(c[I>>2]|0)+36>>2]&511](I)|0)!=-1){break}c[f>>2]=0;E=62;break L71}}while(0);if(!(h^(I|0)==0)){break}U=b|0;c[U>>2]=T;DM(o);DM(n);i=e;return}}while(0);do{if((E|0)==62){if(h){break}U=b|0;c[U>>2]=T;DM(o);DM(n);i=e;return}}while(0);c[j>>2]=c[j>>2]|2;U=b|0;c[U>>2]=T;DM(o);DM(n);i=e;return}function Fn(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];Fo(a,0,j,k,f,g,h);i=b;return}function Fo(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0;e=i;i=i+72|0;l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=g;g=i;i=i+4|0;i=i+7&-8;c[g>>2]=c[l>>2];l=e|0;m=e+32|0;n=e+40|0;o=e+56|0;p=o;q=i;i=i+4|0;i=i+7&-8;r=i;i=i+160|0;s=i;i=i+4|0;i=i+7&-8;t=i;i=i+4|0;i=i+7&-8;u=c[h+4>>2]&74;if((u|0)==0){v=0}else if((u|0)==8){v=16}else if((u|0)==64){v=8}else{v=10}u=l|0;FY(n,h,u,m);K1(p|0,0,12)|0;h=o;DP(o,10,0);if((a[p]&1)==0){l=h+1|0;w=l;x=l;y=o+8|0}else{l=o+8|0;w=c[l>>2]|0;x=h+1|0;y=l}c[q>>2]=w;l=r|0;c[s>>2]=l;c[t>>2]=0;h=f|0;f=g|0;g=o|0;z=o+4|0;A=a[m]|0;m=w;w=c[h>>2]|0;L11:while(1){do{if((w|0)==0){B=0}else{if((c[w+12>>2]|0)!=(c[w+16>>2]|0)){B=w;break}if((g3[c[(c[w>>2]|0)+36>>2]&511](w)|0)!=-1){B=w;break}c[h>>2]=0;B=0}}while(0);C=(B|0)==0;D=c[f>>2]|0;do{if((D|0)==0){E=21}else{if((c[D+12>>2]|0)!=(c[D+16>>2]|0)){if(C){F=D;G=0;break}else{H=m;I=D;J=0;break L11}}if((g3[c[(c[D>>2]|0)+36>>2]&511](D)|0)==-1){c[f>>2]=0;E=21;break}else{K=(D|0)==0;if(C^K){F=D;G=K;break}else{H=m;I=D;J=K;break L11}}}}while(0);if((E|0)==21){E=0;if(C){H=m;I=0;J=1;break}else{F=0;G=1}}D=d[p]|0;K=(D&1|0)==0;if(((c[q>>2]|0)-m|0)==((K?D>>>1:c[z>>2]|0)|0)){if(K){L=D>>>1;M=D>>>1}else{D=c[z>>2]|0;L=D;M=D}DP(o,L<<1,0);if((a[p]&1)==0){N=10}else{N=(c[g>>2]&-2)-1|0}DP(o,N,0);if((a[p]&1)==0){O=x}else{O=c[y>>2]|0}c[q>>2]=O+M;P=O}else{P=m}D=B+12|0;K=c[D>>2]|0;Q=B+16|0;if((K|0)==(c[Q>>2]|0)){R=(g3[c[(c[B>>2]|0)+36>>2]&511](B)|0)&255}else{R=a[K]|0}if((Fy(R,v,P,q,t,A,n,l,s,u)|0)!=0){H=P;I=F;J=G;break}K=c[D>>2]|0;if((K|0)==(c[Q>>2]|0)){g3[c[(c[B>>2]|0)+40>>2]&511](B)|0;m=P;w=B;continue}else{c[D>>2]=K+1;m=P;w=B;continue}}w=d[n]|0;if((w&1|0)==0){S=w>>>1}else{S=c[n+4>>2]|0}do{if((S|0)!=0){w=c[s>>2]|0;if((w-r|0)>=160){break}P=c[t>>2]|0;c[s>>2]=w+4;c[w>>2]=P}}while(0);c[k>>2]=J1(H,c[q>>2]|0,j,v)|0;HR(n,l,c[s>>2]|0,j);do{if(C){T=0}else{if((c[B+12>>2]|0)!=(c[B+16>>2]|0)){T=B;break}if((g3[c[(c[B>>2]|0)+36>>2]&511](B)|0)!=-1){T=B;break}c[h>>2]=0;T=0}}while(0);h=(T|0)==0;L71:do{if(J){E=62}else{do{if((c[I+12>>2]|0)==(c[I+16>>2]|0)){if((g3[c[(c[I>>2]|0)+36>>2]&511](I)|0)!=-1){break}c[f>>2]=0;E=62;break L71}}while(0);if(!(h^(I|0)==0)){break}U=b|0;c[U>>2]=T;DM(o);DM(n);i=e;return}}while(0);do{if((E|0)==62){if(h){break}U=b|0;c[U>>2]=T;DM(o);DM(n);i=e;return}}while(0);c[j>>2]=c[j>>2]|2;U=b|0;c[U>>2]=T;DM(o);DM(n);i=e;return}function Fp(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];Fq(a,0,j,k,f,g,h);i=b;return}function Fq(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0;e=i;i=i+72|0;l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=g;g=i;i=i+4|0;i=i+7&-8;c[g>>2]=c[l>>2];l=e|0;m=e+32|0;n=e+40|0;o=e+56|0;p=o;q=i;i=i+4|0;i=i+7&-8;r=i;i=i+160|0;s=i;i=i+4|0;i=i+7&-8;t=i;i=i+4|0;i=i+7&-8;u=c[h+4>>2]&74;if((u|0)==8){v=16}else if((u|0)==0){v=0}else if((u|0)==64){v=8}else{v=10}u=l|0;FY(n,h,u,m);K1(p|0,0,12)|0;h=o;DP(o,10,0);if((a[p]&1)==0){l=h+1|0;w=l;x=l;y=o+8|0}else{l=o+8|0;w=c[l>>2]|0;x=h+1|0;y=l}c[q>>2]=w;l=r|0;c[s>>2]=l;c[t>>2]=0;h=f|0;f=g|0;g=o|0;z=o+4|0;A=a[m]|0;m=w;w=c[h>>2]|0;L11:while(1){do{if((w|0)==0){B=0}else{if((c[w+12>>2]|0)!=(c[w+16>>2]|0)){B=w;break}if((g3[c[(c[w>>2]|0)+36>>2]&511](w)|0)!=-1){B=w;break}c[h>>2]=0;B=0}}while(0);C=(B|0)==0;D=c[f>>2]|0;do{if((D|0)==0){E=21}else{if((c[D+12>>2]|0)!=(c[D+16>>2]|0)){if(C){F=D;G=0;break}else{H=m;I=D;J=0;break L11}}if((g3[c[(c[D>>2]|0)+36>>2]&511](D)|0)==-1){c[f>>2]=0;E=21;break}else{L=(D|0)==0;if(C^L){F=D;G=L;break}else{H=m;I=D;J=L;break L11}}}}while(0);if((E|0)==21){E=0;if(C){H=m;I=0;J=1;break}else{F=0;G=1}}D=d[p]|0;L=(D&1|0)==0;if(((c[q>>2]|0)-m|0)==((L?D>>>1:c[z>>2]|0)|0)){if(L){M=D>>>1;N=D>>>1}else{D=c[z>>2]|0;M=D;N=D}DP(o,M<<1,0);if((a[p]&1)==0){O=10}else{O=(c[g>>2]&-2)-1|0}DP(o,O,0);if((a[p]&1)==0){P=x}else{P=c[y>>2]|0}c[q>>2]=P+N;Q=P}else{Q=m}D=B+12|0;L=c[D>>2]|0;R=B+16|0;if((L|0)==(c[R>>2]|0)){S=(g3[c[(c[B>>2]|0)+36>>2]&511](B)|0)&255}else{S=a[L]|0}if((Fy(S,v,Q,q,t,A,n,l,s,u)|0)!=0){H=Q;I=F;J=G;break}L=c[D>>2]|0;if((L|0)==(c[R>>2]|0)){g3[c[(c[B>>2]|0)+40>>2]&511](B)|0;m=Q;w=B;continue}else{c[D>>2]=L+1;m=Q;w=B;continue}}w=d[n]|0;if((w&1|0)==0){T=w>>>1}else{T=c[n+4>>2]|0}do{if((T|0)!=0){w=c[s>>2]|0;if((w-r|0)>=160){break}Q=c[t>>2]|0;c[s>>2]=w+4;c[w>>2]=Q}}while(0);t=J0(H,c[q>>2]|0,j,v)|0;c[k>>2]=t;c[k+4>>2]=K;HR(n,l,c[s>>2]|0,j);do{if(C){U=0}else{if((c[B+12>>2]|0)!=(c[B+16>>2]|0)){U=B;break}if((g3[c[(c[B>>2]|0)+36>>2]&511](B)|0)!=-1){U=B;break}c[h>>2]=0;U=0}}while(0);h=(U|0)==0;L71:do{if(J){E=62}else{do{if((c[I+12>>2]|0)==(c[I+16>>2]|0)){if((g3[c[(c[I>>2]|0)+36>>2]&511](I)|0)!=-1){break}c[f>>2]=0;E=62;break L71}}while(0);if(!(h^(I|0)==0)){break}V=b|0;c[V>>2]=U;DM(o);DM(n);i=e;return}}while(0);do{if((E|0)==62){if(h){break}V=b|0;c[V>>2]=U;DM(o);DM(n);i=e;return}}while(0);c[j>>2]=c[j>>2]|2;V=b|0;c[V>>2]=U;DM(o);DM(n);i=e;return}function Fr(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];Fs(a,0,j,k,f,g,h);i=b;return}function Fs(b,e,f,h,j,k,l){b=b|0;e=e|0;f=f|0;h=h|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0;e=i;i=i+80|0;m=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[m>>2];m=h;h=i;i=i+4|0;i=i+7&-8;c[h>>2]=c[m>>2];m=e+32|0;n=e+40|0;o=e+48|0;p=e+64|0;q=p;r=i;i=i+4|0;i=i+7&-8;s=i;i=i+160|0;t=i;i=i+4|0;i=i+7&-8;u=i;i=i+4|0;i=i+7&-8;v=i;i=i+1|0;i=i+7&-8;w=i;i=i+1|0;i=i+7&-8;x=e|0;FZ(o,j,x,m,n);K1(q|0,0,12)|0;j=p;DP(p,10,0);if((a[q]&1)==0){y=j+1|0;z=y;A=y;B=p+8|0}else{y=p+8|0;z=c[y>>2]|0;A=j+1|0;B=y}c[r>>2]=z;y=s|0;c[t>>2]=y;c[u>>2]=0;a[v]=1;a[w]=69;j=f|0;f=h|0;h=p|0;C=p+4|0;D=a[m]|0;m=a[n]|0;n=z;z=c[j>>2]|0;L6:while(1){do{if((z|0)==0){E=0}else{if((c[z+12>>2]|0)!=(c[z+16>>2]|0)){E=z;break}if((g3[c[(c[z>>2]|0)+36>>2]&511](z)|0)!=-1){E=z;break}c[j>>2]=0;E=0}}while(0);F=(E|0)==0;G=c[f>>2]|0;do{if((G|0)==0){H=17}else{if((c[G+12>>2]|0)!=(c[G+16>>2]|0)){if(F){I=G;J=0;break}else{K=n;L=G;M=0;break L6}}if((g3[c[(c[G>>2]|0)+36>>2]&511](G)|0)==-1){c[f>>2]=0;H=17;break}else{N=(G|0)==0;if(F^N){I=G;J=N;break}else{K=n;L=G;M=N;break L6}}}}while(0);if((H|0)==17){H=0;if(F){K=n;L=0;M=1;break}else{I=0;J=1}}G=d[q]|0;N=(G&1|0)==0;if(((c[r>>2]|0)-n|0)==((N?G>>>1:c[C>>2]|0)|0)){if(N){O=G>>>1;P=G>>>1}else{G=c[C>>2]|0;O=G;P=G}DP(p,O<<1,0);if((a[q]&1)==0){Q=10}else{Q=(c[h>>2]&-2)-1|0}DP(p,Q,0);if((a[q]&1)==0){R=A}else{R=c[B>>2]|0}c[r>>2]=R+P;S=R}else{S=n}G=E+12|0;N=c[G>>2]|0;T=E+16|0;if((N|0)==(c[T>>2]|0)){U=(g3[c[(c[E>>2]|0)+36>>2]&511](E)|0)&255}else{U=a[N]|0}if((F_(U,v,w,S,r,D,m,o,y,t,u,x)|0)!=0){K=S;L=I;M=J;break}N=c[G>>2]|0;if((N|0)==(c[T>>2]|0)){g3[c[(c[E>>2]|0)+40>>2]&511](E)|0;n=S;z=E;continue}else{c[G>>2]=N+1;n=S;z=E;continue}}z=d[o]|0;if((z&1|0)==0){V=z>>>1}else{V=c[o+4>>2]|0}do{if((V|0)!=0){if((a[v]&1)==0){break}z=c[t>>2]|0;if((z-s|0)>=160){break}S=c[u>>2]|0;c[t>>2]=z+4;c[z>>2]=S}}while(0);g[l>>2]=+J$(K,c[r>>2]|0,k);HR(o,y,c[t>>2]|0,k);do{if(F){W=0}else{if((c[E+12>>2]|0)!=(c[E+16>>2]|0)){W=E;break}if((g3[c[(c[E>>2]|0)+36>>2]&511](E)|0)!=-1){W=E;break}c[j>>2]=0;W=0}}while(0);j=(W|0)==0;L67:do{if(M){H=59}else{do{if((c[L+12>>2]|0)==(c[L+16>>2]|0)){if((g3[c[(c[L>>2]|0)+36>>2]&511](L)|0)!=-1){break}c[f>>2]=0;H=59;break L67}}while(0);if(!(j^(L|0)==0)){break}X=b|0;c[X>>2]=W;DM(p);DM(o);i=e;return}}while(0);do{if((H|0)==59){if(j){break}X=b|0;c[X>>2]=W;DM(p);DM(o);i=e;return}}while(0);c[k>>2]=c[k>>2]|2;X=b|0;c[X>>2]=W;DM(p);DM(o);i=e;return}function Ft(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];Fu(a,0,j,k,f,g,h);i=b;return}function Fu(b,e,f,g,j,k,l){b=b|0;e=e|0;f=f|0;g=g|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0;e=i;i=i+80|0;m=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[m>>2];m=g;g=i;i=i+4|0;i=i+7&-8;c[g>>2]=c[m>>2];m=e+32|0;n=e+40|0;o=e+48|0;p=e+64|0;q=p;r=i;i=i+4|0;i=i+7&-8;s=i;i=i+160|0;t=i;i=i+4|0;i=i+7&-8;u=i;i=i+4|0;i=i+7&-8;v=i;i=i+1|0;i=i+7&-8;w=i;i=i+1|0;i=i+7&-8;x=e|0;FZ(o,j,x,m,n);K1(q|0,0,12)|0;j=p;DP(p,10,0);if((a[q]&1)==0){y=j+1|0;z=y;A=y;B=p+8|0}else{y=p+8|0;z=c[y>>2]|0;A=j+1|0;B=y}c[r>>2]=z;y=s|0;c[t>>2]=y;c[u>>2]=0;a[v]=1;a[w]=69;j=f|0;f=g|0;g=p|0;C=p+4|0;D=a[m]|0;m=a[n]|0;n=z;z=c[j>>2]|0;L6:while(1){do{if((z|0)==0){E=0}else{if((c[z+12>>2]|0)!=(c[z+16>>2]|0)){E=z;break}if((g3[c[(c[z>>2]|0)+36>>2]&511](z)|0)!=-1){E=z;break}c[j>>2]=0;E=0}}while(0);F=(E|0)==0;G=c[f>>2]|0;do{if((G|0)==0){H=17}else{if((c[G+12>>2]|0)!=(c[G+16>>2]|0)){if(F){I=G;J=0;break}else{K=n;L=G;M=0;break L6}}if((g3[c[(c[G>>2]|0)+36>>2]&511](G)|0)==-1){c[f>>2]=0;H=17;break}else{N=(G|0)==0;if(F^N){I=G;J=N;break}else{K=n;L=G;M=N;break L6}}}}while(0);if((H|0)==17){H=0;if(F){K=n;L=0;M=1;break}else{I=0;J=1}}G=d[q]|0;N=(G&1|0)==0;if(((c[r>>2]|0)-n|0)==((N?G>>>1:c[C>>2]|0)|0)){if(N){O=G>>>1;P=G>>>1}else{G=c[C>>2]|0;O=G;P=G}DP(p,O<<1,0);if((a[q]&1)==0){Q=10}else{Q=(c[g>>2]&-2)-1|0}DP(p,Q,0);if((a[q]&1)==0){R=A}else{R=c[B>>2]|0}c[r>>2]=R+P;S=R}else{S=n}G=E+12|0;N=c[G>>2]|0;T=E+16|0;if((N|0)==(c[T>>2]|0)){U=(g3[c[(c[E>>2]|0)+36>>2]&511](E)|0)&255}else{U=a[N]|0}if((F_(U,v,w,S,r,D,m,o,y,t,u,x)|0)!=0){K=S;L=I;M=J;break}N=c[G>>2]|0;if((N|0)==(c[T>>2]|0)){g3[c[(c[E>>2]|0)+40>>2]&511](E)|0;n=S;z=E;continue}else{c[G>>2]=N+1;n=S;z=E;continue}}z=d[o]|0;if((z&1|0)==0){V=z>>>1}else{V=c[o+4>>2]|0}do{if((V|0)!=0){if((a[v]&1)==0){break}z=c[t>>2]|0;if((z-s|0)>=160){break}S=c[u>>2]|0;c[t>>2]=z+4;c[z>>2]=S}}while(0);h[l>>3]=+J_(K,c[r>>2]|0,k);HR(o,y,c[t>>2]|0,k);do{if(F){W=0}else{if((c[E+12>>2]|0)!=(c[E+16>>2]|0)){W=E;break}if((g3[c[(c[E>>2]|0)+36>>2]&511](E)|0)!=-1){W=E;break}c[j>>2]=0;W=0}}while(0);j=(W|0)==0;L67:do{if(M){H=59}else{do{if((c[L+12>>2]|0)==(c[L+16>>2]|0)){if((g3[c[(c[L>>2]|0)+36>>2]&511](L)|0)!=-1){break}c[f>>2]=0;H=59;break L67}}while(0);if(!(j^(L|0)==0)){break}X=b|0;c[X>>2]=W;DM(p);DM(o);i=e;return}}while(0);do{if((H|0)==59){if(j){break}X=b|0;c[X>>2]=W;DM(p);DM(o);i=e;return}}while(0);c[k>>2]=c[k>>2]|2;X=b|0;c[X>>2]=W;DM(p);DM(o);i=e;return}function Fv(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];Fw(a,0,j,k,f,g,h);i=b;return}function Fw(b,e,f,g,j,k,l){b=b|0;e=e|0;f=f|0;g=g|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0;e=i;i=i+80|0;m=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[m>>2];m=g;g=i;i=i+4|0;i=i+7&-8;c[g>>2]=c[m>>2];m=e+32|0;n=e+40|0;o=e+48|0;p=e+64|0;q=p;r=i;i=i+4|0;i=i+7&-8;s=i;i=i+160|0;t=i;i=i+4|0;i=i+7&-8;u=i;i=i+4|0;i=i+7&-8;v=i;i=i+1|0;i=i+7&-8;w=i;i=i+1|0;i=i+7&-8;x=e|0;FZ(o,j,x,m,n);K1(q|0,0,12)|0;j=p;DP(p,10,0);if((a[q]&1)==0){y=j+1|0;z=y;A=y;B=p+8|0}else{y=p+8|0;z=c[y>>2]|0;A=j+1|0;B=y}c[r>>2]=z;y=s|0;c[t>>2]=y;c[u>>2]=0;a[v]=1;a[w]=69;j=f|0;f=g|0;g=p|0;C=p+4|0;D=a[m]|0;m=a[n]|0;n=z;z=c[j>>2]|0;L6:while(1){do{if((z|0)==0){E=0}else{if((c[z+12>>2]|0)!=(c[z+16>>2]|0)){E=z;break}if((g3[c[(c[z>>2]|0)+36>>2]&511](z)|0)!=-1){E=z;break}c[j>>2]=0;E=0}}while(0);F=(E|0)==0;G=c[f>>2]|0;do{if((G|0)==0){H=17}else{if((c[G+12>>2]|0)!=(c[G+16>>2]|0)){if(F){I=G;J=0;break}else{K=n;L=G;M=0;break L6}}if((g3[c[(c[G>>2]|0)+36>>2]&511](G)|0)==-1){c[f>>2]=0;H=17;break}else{N=(G|0)==0;if(F^N){I=G;J=N;break}else{K=n;L=G;M=N;break L6}}}}while(0);if((H|0)==17){H=0;if(F){K=n;L=0;M=1;break}else{I=0;J=1}}G=d[q]|0;N=(G&1|0)==0;if(((c[r>>2]|0)-n|0)==((N?G>>>1:c[C>>2]|0)|0)){if(N){O=G>>>1;P=G>>>1}else{G=c[C>>2]|0;O=G;P=G}DP(p,O<<1,0);if((a[q]&1)==0){Q=10}else{Q=(c[g>>2]&-2)-1|0}DP(p,Q,0);if((a[q]&1)==0){R=A}else{R=c[B>>2]|0}c[r>>2]=R+P;S=R}else{S=n}G=E+12|0;N=c[G>>2]|0;T=E+16|0;if((N|0)==(c[T>>2]|0)){U=(g3[c[(c[E>>2]|0)+36>>2]&511](E)|0)&255}else{U=a[N]|0}if((F_(U,v,w,S,r,D,m,o,y,t,u,x)|0)!=0){K=S;L=I;M=J;break}N=c[G>>2]|0;if((N|0)==(c[T>>2]|0)){g3[c[(c[E>>2]|0)+40>>2]&511](E)|0;n=S;z=E;continue}else{c[G>>2]=N+1;n=S;z=E;continue}}z=d[o]|0;if((z&1|0)==0){V=z>>>1}else{V=c[o+4>>2]|0}do{if((V|0)!=0){if((a[v]&1)==0){break}z=c[t>>2]|0;if((z-s|0)>=160){break}S=c[u>>2]|0;c[t>>2]=z+4;c[z>>2]=S}}while(0);h[l>>3]=+JZ(K,c[r>>2]|0,k);HR(o,y,c[t>>2]|0,k);do{if(F){W=0}else{if((c[E+12>>2]|0)!=(c[E+16>>2]|0)){W=E;break}if((g3[c[(c[E>>2]|0)+36>>2]&511](E)|0)!=-1){W=E;break}c[j>>2]=0;W=0}}while(0);j=(W|0)==0;L67:do{if(M){H=59}else{do{if((c[L+12>>2]|0)==(c[L+16>>2]|0)){if((g3[c[(c[L>>2]|0)+36>>2]&511](L)|0)!=-1){break}c[f>>2]=0;H=59;break L67}}while(0);if(!(j^(L|0)==0)){break}X=b|0;c[X>>2]=W;DM(p);DM(o);i=e;return}}while(0);do{if((H|0)==59){if(j){break}X=b|0;c[X>>2]=W;DM(p);DM(o);i=e;return}}while(0);c[k>>2]=c[k>>2]|2;X=b|0;c[X>>2]=W;DM(p);DM(o);i=e;return}function Fx(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0;e=i;i=i+64|0;l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=g;g=i;i=i+4|0;i=i+7&-8;c[g>>2]=c[l>>2];l=e|0;m=e+16|0;n=e+48|0;o=i;i=i+4|0;i=i+7&-8;p=i;i=i+12|0;i=i+7&-8;q=i;i=i+4|0;i=i+7&-8;r=i;i=i+160|0;s=i;i=i+4|0;i=i+7&-8;t=i;i=i+4|0;i=i+7&-8;K1(n|0,0,12)|0;u=p;D5(o,h);h=o|0;o=c[h>>2]|0;if((c[13666]|0)!=-1){c[l>>2]=54664;c[l+4>>2]=32;c[l+8>>2]=0;DH(54664,l,286)}l=(c[13667]|0)-1|0;v=c[o+8>>2]|0;do{if((c[o+12>>2]|0)-v>>2>>>0>l>>>0){w=c[v+(l<<2)>>2]|0;if((w|0)==0){break}x=m|0;hD[c[(c[w>>2]|0)+32>>2]&63](w,49e3,49026,x)|0;Dn(c[h>>2]|0)|0;K1(u|0,0,12)|0;w=p;DP(p,10,0);if((a[u]&1)==0){y=w+1|0;z=y;A=y;B=p+8|0}else{y=p+8|0;z=c[y>>2]|0;A=w+1|0;B=y}c[q>>2]=z;y=r|0;c[s>>2]=y;c[t>>2]=0;w=f|0;C=g|0;D=p|0;E=p+4|0;F=z;G=c[w>>2]|0;L14:while(1){do{if((G|0)==0){H=0}else{if((c[G+12>>2]|0)!=(c[G+16>>2]|0)){H=G;break}if((g3[c[(c[G>>2]|0)+36>>2]&511](G)|0)!=-1){H=G;break}c[w>>2]=0;H=0}}while(0);I=(H|0)==0;J=c[C>>2]|0;do{if((J|0)==0){K=25}else{if((c[J+12>>2]|0)!=(c[J+16>>2]|0)){if(I){break}else{L=F;break L14}}if((g3[c[(c[J>>2]|0)+36>>2]&511](J)|0)==-1){c[C>>2]=0;K=25;break}else{if(I^(J|0)==0){break}else{L=F;break L14}}}}while(0);if((K|0)==25){K=0;if(I){L=F;break}}J=d[u]|0;M=(J&1|0)==0;if(((c[q>>2]|0)-F|0)==((M?J>>>1:c[E>>2]|0)|0)){if(M){N=J>>>1;O=J>>>1}else{J=c[E>>2]|0;N=J;O=J}DP(p,N<<1,0);if((a[u]&1)==0){P=10}else{P=(c[D>>2]&-2)-1|0}DP(p,P,0);if((a[u]&1)==0){Q=A}else{Q=c[B>>2]|0}c[q>>2]=Q+O;R=Q}else{R=F}J=H+12|0;M=c[J>>2]|0;S=H+16|0;if((M|0)==(c[S>>2]|0)){T=(g3[c[(c[H>>2]|0)+36>>2]&511](H)|0)&255}else{T=a[M]|0}if((Fy(T,16,R,q,t,0,n,y,s,x)|0)!=0){L=R;break}M=c[J>>2]|0;if((M|0)==(c[S>>2]|0)){g3[c[(c[H>>2]|0)+40>>2]&511](H)|0;F=R;G=H;continue}else{c[J>>2]=M+1;F=R;G=H;continue}}a[L+3|0]=0;do{if((a[55400]|0)==0){if((bN(55400)|0)==0){break}c[13026]=fM(2147483647,22888,0)|0}}while(0);G=Fz(L,c[13026]|0,20912,(F=i,i=i+8|0,c[F>>2]=k,F)|0)|0;i=F;if((G|0)!=1){c[j>>2]=4}G=c[w>>2]|0;do{if((G|0)==0){U=0}else{if((c[G+12>>2]|0)!=(c[G+16>>2]|0)){U=G;break}if((g3[c[(c[G>>2]|0)+36>>2]&511](G)|0)!=-1){U=G;break}c[w>>2]=0;U=0}}while(0);w=(U|0)==0;G=c[C>>2]|0;do{if((G|0)==0){K=70}else{if((c[G+12>>2]|0)!=(c[G+16>>2]|0)){if(!w){break}V=b|0;c[V>>2]=U;DM(p);DM(n);i=e;return}if((g3[c[(c[G>>2]|0)+36>>2]&511](G)|0)==-1){c[C>>2]=0;K=70;break}if(!(w^(G|0)==0)){break}V=b|0;c[V>>2]=U;DM(p);DM(n);i=e;return}}while(0);do{if((K|0)==70){if(w){break}V=b|0;c[V>>2]=U;DM(p);DM(n);i=e;return}}while(0);c[j>>2]=c[j>>2]|2;V=b|0;c[V>>2]=U;DM(p);DM(n);i=e;return}}while(0);e=gJ(4)|0;Kr(e);eR(e|0,45560,458)}function Fy(b,e,f,g,h,i,j,k,l,m){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0;n=c[g>>2]|0;o=(n|0)==(f|0);do{if(o){p=(a[m+24|0]|0)==b<<24>>24;if(!p){if((a[m+25|0]|0)!=b<<24>>24){break}}c[g>>2]=f+1;a[f]=p?43:45;c[h>>2]=0;q=0;return q|0}}while(0);p=d[j]|0;if((p&1|0)==0){r=p>>>1}else{r=c[j+4>>2]|0}if((r|0)!=0&b<<24>>24==i<<24>>24){i=c[l>>2]|0;if((i-k|0)>=160){q=0;return q|0}k=c[h>>2]|0;c[l>>2]=i+4;c[i>>2]=k;c[h>>2]=0;q=0;return q|0}k=m+26|0;i=m;while(1){if((i|0)==(k|0)){s=k;break}if((a[i]|0)==b<<24>>24){s=i;break}else{i=i+1|0}}i=s-m|0;if((i|0)>23){q=-1;return q|0}do{if((e|0)==8|(e|0)==10){if((i|0)<(e|0)){break}else{q=-1}return q|0}else if((e|0)==16){if((i|0)<22){break}if(o){q=-1;return q|0}if((n-f|0)>=3){q=-1;return q|0}if((a[n-1|0]|0)!=48){q=-1;return q|0}c[h>>2]=0;m=a[49e3+i|0]|0;s=c[g>>2]|0;c[g>>2]=s+1;a[s]=m;q=0;return q|0}}while(0);f=a[49e3+i|0]|0;c[g>>2]=n+1;a[n]=f;c[h>>2]=(c[h>>2]|0)+1;q=0;return q|0}function Fz(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=i;i=i+16|0;g=f|0;h=g;c[h>>2]=e;c[h+4>>2]=0;h=gt(b|0)|0;b=c5(a|0,d|0,g|0)|0;if((h|0)==0){i=f;return b|0}gt(h|0)|0;i=f;return b|0}function FA(a){a=a|0;Dl(a|0);KU(a);return}function FB(a){a=a|0;Dl(a|0);return}function FC(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;k=i;i=i+112|0;l=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[l>>2];l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=k|0;m=k+16|0;n=k+32|0;o=k+40|0;p=k+48|0;q=k+56|0;r=k+64|0;s=k+72|0;t=k+80|0;u=k+104|0;if((c[g+4>>2]&1|0)==0){c[n>>2]=-1;v=c[(c[d>>2]|0)+16>>2]|0;w=e|0;c[p>>2]=c[w>>2];c[q>>2]=c[f>>2];hr[v&127](o,d,p,q,g,h,n);q=c[o>>2]|0;c[w>>2]=q;w=c[n>>2]|0;if((w|0)==0){a[j]=0}else if((w|0)==1){a[j]=1}else{a[j]=1;c[h>>2]=4}c[b>>2]=q;i=k;return}D5(r,g);q=r|0;r=c[q>>2]|0;if((c[13664]|0)!=-1){c[m>>2]=54656;c[m+4>>2]=32;c[m+8>>2]=0;DH(54656,m,286)}m=(c[13665]|0)-1|0;w=c[r+8>>2]|0;do{if((c[r+12>>2]|0)-w>>2>>>0>m>>>0){n=c[w+(m<<2)>>2]|0;if((n|0)==0){break}o=n;Dn(c[q>>2]|0)|0;D5(s,g);n=s|0;p=c[n>>2]|0;if((c[13568]|0)!=-1){c[l>>2]=54272;c[l+4>>2]=32;c[l+8>>2]=0;DH(54272,l,286)}d=(c[13569]|0)-1|0;v=c[p+8>>2]|0;do{if((c[p+12>>2]|0)-v>>2>>>0>d>>>0){x=c[v+(d<<2)>>2]|0;if((x|0)==0){break}y=x;Dn(c[n>>2]|0)|0;z=t|0;A=x;g0[c[(c[A>>2]|0)+24>>2]&511](z,y);g0[c[(c[A>>2]|0)+28>>2]&511](t+12|0,y);c[u>>2]=c[f>>2];a[j]=(FD(e,u,z,t+24|0,o,h,1)|0)==(z|0)|0;c[b>>2]=c[e>>2];DY(t+12|0);DY(t|0);i=k;return}}while(0);o=gJ(4)|0;Kr(o);eR(o|0,45560,458)}}while(0);k=gJ(4)|0;Kr(k);eR(k|0,45560,458)}function FD(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0;l=i;i=i+104|0;m=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[m>>2];m=(g-f|0)/12|0;n=l|0;do{if(m>>>0>100>>>0){o=KM(m)|0;if((o|0)!=0){p=o;q=o;break}KZ();p=0;q=0}else{p=n;q=0}}while(0);n=(f|0)==(g|0);if(n){r=m;s=0}else{o=m;m=0;t=p;u=f;while(1){v=d[u]|0;if((v&1|0)==0){w=v>>>1}else{w=c[u+4>>2]|0}if((w|0)==0){a[t]=2;x=m+1|0;y=o-1|0}else{a[t]=1;x=m;y=o}v=u+12|0;if((v|0)==(g|0)){r=y;s=x;break}else{o=y;m=x;t=t+1|0;u=v}}}u=b|0;b=e|0;e=h;t=0;x=s;s=r;while(1){r=c[u>>2]|0;do{if((r|0)==0){z=0}else{m=c[r+12>>2]|0;if((m|0)==(c[r+16>>2]|0)){A=g3[c[(c[r>>2]|0)+36>>2]&511](r)|0}else{A=c[m>>2]|0}if((A|0)==-1){c[u>>2]=0;z=0;break}else{z=c[u>>2]|0;break}}}while(0);r=(z|0)==0;m=c[b>>2]|0;if((m|0)==0){B=z;C=0}else{y=c[m+12>>2]|0;if((y|0)==(c[m+16>>2]|0)){D=g3[c[(c[m>>2]|0)+36>>2]&511](m)|0}else{D=c[y>>2]|0}if((D|0)==-1){c[b>>2]=0;E=0}else{E=m}B=c[u>>2]|0;C=E}F=(C|0)==0;if(!((r^F)&(s|0)!=0)){break}r=c[B+12>>2]|0;if((r|0)==(c[B+16>>2]|0)){G=g3[c[(c[B>>2]|0)+36>>2]&511](B)|0}else{G=c[r>>2]|0}if(k){H=G}else{H=hx[c[(c[e>>2]|0)+28>>2]&127](h,G)|0}do{if(n){I=x;J=s}else{r=t+1|0;L49:do{if(k){m=s;y=x;o=p;w=0;v=f;while(1){do{if((a[o]|0)==1){K=v;if((a[K]&1)==0){L=v+4|0}else{L=c[v+8>>2]|0}if((H|0)!=(c[L+(t<<2)>>2]|0)){a[o]=0;M=w;N=y;O=m-1|0;break}P=d[K]|0;if((P&1|0)==0){Q=P>>>1}else{Q=c[v+4>>2]|0}if((Q|0)!=(r|0)){M=1;N=y;O=m;break}a[o]=2;M=1;N=y+1|0;O=m-1|0}else{M=w;N=y;O=m}}while(0);P=v+12|0;if((P|0)==(g|0)){R=O;S=N;T=M;break L49}m=O;y=N;o=o+1|0;w=M;v=P}}else{v=s;w=x;o=p;y=0;m=f;while(1){do{if((a[o]|0)==1){P=m;if((a[P]&1)==0){U=m+4|0}else{U=c[m+8>>2]|0}if((H|0)!=(hx[c[(c[e>>2]|0)+28>>2]&127](h,c[U+(t<<2)>>2]|0)|0)){a[o]=0;V=y;W=w;X=v-1|0;break}K=d[P]|0;if((K&1|0)==0){Y=K>>>1}else{Y=c[m+4>>2]|0}if((Y|0)!=(r|0)){V=1;W=w;X=v;break}a[o]=2;V=1;W=w+1|0;X=v-1|0}else{V=y;W=w;X=v}}while(0);K=m+12|0;if((K|0)==(g|0)){R=X;S=W;T=V;break L49}v=X;w=W;o=o+1|0;y=V;m=K}}}while(0);if(!T){I=S;J=R;break}r=c[u>>2]|0;m=r+12|0;y=c[m>>2]|0;if((y|0)==(c[r+16>>2]|0)){g3[c[(c[r>>2]|0)+40>>2]&511](r)|0}else{c[m>>2]=y+4}if((S+R|0)>>>0<2>>>0|n){I=S;J=R;break}y=t+1|0;m=S;r=p;o=f;while(1){do{if((a[r]|0)==2){w=d[o]|0;if((w&1|0)==0){Z=w>>>1}else{Z=c[o+4>>2]|0}if((Z|0)==(y|0)){_=m;break}a[r]=0;_=m-1|0}else{_=m}}while(0);w=o+12|0;if((w|0)==(g|0)){I=_;J=R;break}else{m=_;r=r+1|0;o=w}}}}while(0);t=t+1|0;x=I;s=J}do{if((B|0)==0){$=1}else{J=c[B+12>>2]|0;if((J|0)==(c[B+16>>2]|0)){aa=g3[c[(c[B>>2]|0)+36>>2]&511](B)|0}else{aa=c[J>>2]|0}if((aa|0)==-1){c[u>>2]=0;$=1;break}else{$=(c[u>>2]|0)==0;break}}}while(0);do{if(F){ab=95}else{u=c[C+12>>2]|0;if((u|0)==(c[C+16>>2]|0)){ac=g3[c[(c[C>>2]|0)+36>>2]&511](C)|0}else{ac=c[u>>2]|0}if((ac|0)==-1){c[b>>2]=0;ab=95;break}else{if($^(C|0)==0){break}else{ab=97;break}}}}while(0);if((ab|0)==95){if($){ab=97}}if((ab|0)==97){c[j>>2]=c[j>>2]|2}L130:do{if(n){ab=102}else{$=f;C=p;while(1){if((a[C]|0)==2){ad=$;break L130}b=$+12|0;if((b|0)==(g|0)){ab=102;break L130}$=b;C=C+1|0}}}while(0);if((ab|0)==102){c[j>>2]=c[j>>2]|4;ad=g}if((q|0)==0){i=l;return ad|0}KN(q);i=l;return ad|0}function FE(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];FF(a,0,j,k,f,g,h);i=b;return}function FF(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0;e=i;i=i+144|0;l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=g;g=i;i=i+4|0;i=i+7&-8;c[g>>2]=c[l>>2];l=e|0;m=e+104|0;n=e+112|0;o=e+128|0;p=o;q=i;i=i+4|0;i=i+7&-8;r=i;i=i+160|0;s=i;i=i+4|0;i=i+7&-8;t=i;i=i+4|0;i=i+7&-8;u=c[h+4>>2]&74;if((u|0)==8){v=16}else if((u|0)==0){v=0}else if((u|0)==64){v=8}else{v=10}u=l|0;F$(n,h,u,m);K1(p|0,0,12)|0;h=o;DP(o,10,0);if((a[p]&1)==0){l=h+1|0;w=l;x=l;y=o+8|0}else{l=o+8|0;w=c[l>>2]|0;x=h+1|0;y=l}c[q>>2]=w;l=r|0;c[s>>2]=l;c[t>>2]=0;h=f|0;f=g|0;g=o|0;z=o+4|0;A=c[m>>2]|0;m=w;w=c[h>>2]|0;L11:while(1){do{if((w|0)==0){B=0}else{C=c[w+12>>2]|0;if((C|0)==(c[w+16>>2]|0)){D=g3[c[(c[w>>2]|0)+36>>2]&511](w)|0}else{D=c[C>>2]|0}if((D|0)!=-1){B=w;break}c[h>>2]=0;B=0}}while(0);E=(B|0)==0;C=c[f>>2]|0;do{if((C|0)==0){F=22}else{G=c[C+12>>2]|0;if((G|0)==(c[C+16>>2]|0)){H=g3[c[(c[C>>2]|0)+36>>2]&511](C)|0}else{H=c[G>>2]|0}if((H|0)==-1){c[f>>2]=0;F=22;break}else{G=(C|0)==0;if(E^G){I=C;J=G;break}else{K=m;L=C;M=G;break L11}}}}while(0);if((F|0)==22){F=0;if(E){K=m;L=0;M=1;break}else{I=0;J=1}}C=d[p]|0;G=(C&1|0)==0;if(((c[q>>2]|0)-m|0)==((G?C>>>1:c[z>>2]|0)|0)){if(G){N=C>>>1;O=C>>>1}else{C=c[z>>2]|0;N=C;O=C}DP(o,N<<1,0);if((a[p]&1)==0){P=10}else{P=(c[g>>2]&-2)-1|0}DP(o,P,0);if((a[p]&1)==0){Q=x}else{Q=c[y>>2]|0}c[q>>2]=Q+O;R=Q}else{R=m}C=B+12|0;G=c[C>>2]|0;S=B+16|0;if((G|0)==(c[S>>2]|0)){T=g3[c[(c[B>>2]|0)+36>>2]&511](B)|0}else{T=c[G>>2]|0}if((FX(T,v,R,q,t,A,n,l,s,u)|0)!=0){K=R;L=I;M=J;break}G=c[C>>2]|0;if((G|0)==(c[S>>2]|0)){g3[c[(c[B>>2]|0)+40>>2]&511](B)|0;m=R;w=B;continue}else{c[C>>2]=G+4;m=R;w=B;continue}}w=d[n]|0;if((w&1|0)==0){U=w>>>1}else{U=c[n+4>>2]|0}do{if((U|0)!=0){w=c[s>>2]|0;if((w-r|0)>=160){break}R=c[t>>2]|0;c[s>>2]=w+4;c[w>>2]=R}}while(0);c[k>>2]=J5(K,c[q>>2]|0,j,v)|0;HR(n,l,c[s>>2]|0,j);do{if(E){V=0}else{s=c[B+12>>2]|0;if((s|0)==(c[B+16>>2]|0)){W=g3[c[(c[B>>2]|0)+36>>2]&511](B)|0}else{W=c[s>>2]|0}if((W|0)!=-1){V=B;break}c[h>>2]=0;V=0}}while(0);h=(V|0)==0;do{if(M){F=64}else{B=c[L+12>>2]|0;if((B|0)==(c[L+16>>2]|0)){X=g3[c[(c[L>>2]|0)+36>>2]&511](L)|0}else{X=c[B>>2]|0}if((X|0)==-1){c[f>>2]=0;F=64;break}if(!(h^(L|0)==0)){break}Y=b|0;c[Y>>2]=V;DM(o);DM(n);i=e;return}}while(0);do{if((F|0)==64){if(h){break}Y=b|0;c[Y>>2]=V;DM(o);DM(n);i=e;return}}while(0);c[j>>2]=c[j>>2]|2;Y=b|0;c[Y>>2]=V;DM(o);DM(n);i=e;return}function FG(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];FH(a,0,j,k,f,g,h);i=b;return}function FH(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0;e=i;i=i+144|0;l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=g;g=i;i=i+4|0;i=i+7&-8;c[g>>2]=c[l>>2];l=e|0;m=e+104|0;n=e+112|0;o=e+128|0;p=o;q=i;i=i+4|0;i=i+7&-8;r=i;i=i+160|0;s=i;i=i+4|0;i=i+7&-8;t=i;i=i+4|0;i=i+7&-8;u=c[h+4>>2]&74;if((u|0)==64){v=8}else if((u|0)==8){v=16}else if((u|0)==0){v=0}else{v=10}u=l|0;F$(n,h,u,m);K1(p|0,0,12)|0;h=o;DP(o,10,0);if((a[p]&1)==0){l=h+1|0;w=l;x=l;y=o+8|0}else{l=o+8|0;w=c[l>>2]|0;x=h+1|0;y=l}c[q>>2]=w;l=r|0;c[s>>2]=l;c[t>>2]=0;h=f|0;f=g|0;g=o|0;z=o+4|0;A=c[m>>2]|0;m=w;w=c[h>>2]|0;L11:while(1){do{if((w|0)==0){B=0}else{C=c[w+12>>2]|0;if((C|0)==(c[w+16>>2]|0)){D=g3[c[(c[w>>2]|0)+36>>2]&511](w)|0}else{D=c[C>>2]|0}if((D|0)!=-1){B=w;break}c[h>>2]=0;B=0}}while(0);E=(B|0)==0;C=c[f>>2]|0;do{if((C|0)==0){F=22}else{G=c[C+12>>2]|0;if((G|0)==(c[C+16>>2]|0)){H=g3[c[(c[C>>2]|0)+36>>2]&511](C)|0}else{H=c[G>>2]|0}if((H|0)==-1){c[f>>2]=0;F=22;break}else{G=(C|0)==0;if(E^G){I=C;J=G;break}else{L=m;M=C;N=G;break L11}}}}while(0);if((F|0)==22){F=0;if(E){L=m;M=0;N=1;break}else{I=0;J=1}}C=d[p]|0;G=(C&1|0)==0;if(((c[q>>2]|0)-m|0)==((G?C>>>1:c[z>>2]|0)|0)){if(G){O=C>>>1;P=C>>>1}else{C=c[z>>2]|0;O=C;P=C}DP(o,O<<1,0);if((a[p]&1)==0){Q=10}else{Q=(c[g>>2]&-2)-1|0}DP(o,Q,0);if((a[p]&1)==0){R=x}else{R=c[y>>2]|0}c[q>>2]=R+P;S=R}else{S=m}C=B+12|0;G=c[C>>2]|0;T=B+16|0;if((G|0)==(c[T>>2]|0)){U=g3[c[(c[B>>2]|0)+36>>2]&511](B)|0}else{U=c[G>>2]|0}if((FX(U,v,S,q,t,A,n,l,s,u)|0)!=0){L=S;M=I;N=J;break}G=c[C>>2]|0;if((G|0)==(c[T>>2]|0)){g3[c[(c[B>>2]|0)+40>>2]&511](B)|0;m=S;w=B;continue}else{c[C>>2]=G+4;m=S;w=B;continue}}w=d[n]|0;if((w&1|0)==0){V=w>>>1}else{V=c[n+4>>2]|0}do{if((V|0)!=0){w=c[s>>2]|0;if((w-r|0)>=160){break}S=c[t>>2]|0;c[s>>2]=w+4;c[w>>2]=S}}while(0);t=J4(L,c[q>>2]|0,j,v)|0;c[k>>2]=t;c[k+4>>2]=K;HR(n,l,c[s>>2]|0,j);do{if(E){W=0}else{s=c[B+12>>2]|0;if((s|0)==(c[B+16>>2]|0)){X=g3[c[(c[B>>2]|0)+36>>2]&511](B)|0}else{X=c[s>>2]|0}if((X|0)!=-1){W=B;break}c[h>>2]=0;W=0}}while(0);h=(W|0)==0;do{if(N){F=64}else{B=c[M+12>>2]|0;if((B|0)==(c[M+16>>2]|0)){Y=g3[c[(c[M>>2]|0)+36>>2]&511](M)|0}else{Y=c[B>>2]|0}if((Y|0)==-1){c[f>>2]=0;F=64;break}if(!(h^(M|0)==0)){break}Z=b|0;c[Z>>2]=W;DM(o);DM(n);i=e;return}}while(0);do{if((F|0)==64){if(h){break}Z=b|0;c[Z>>2]=W;DM(o);DM(n);i=e;return}}while(0);c[j>>2]=c[j>>2]|2;Z=b|0;c[Z>>2]=W;DM(o);DM(n);i=e;return}function FI(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];FJ(a,0,j,k,f,g,h);i=b;return}function FJ(e,f,g,h,j,k,l){e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0;f=i;i=i+144|0;m=g;g=i;i=i+4|0;i=i+7&-8;c[g>>2]=c[m>>2];m=h;h=i;i=i+4|0;i=i+7&-8;c[h>>2]=c[m>>2];m=f|0;n=f+104|0;o=f+112|0;p=f+128|0;q=p;r=i;i=i+4|0;i=i+7&-8;s=i;i=i+160|0;t=i;i=i+4|0;i=i+7&-8;u=i;i=i+4|0;i=i+7&-8;v=c[j+4>>2]&74;if((v|0)==8){w=16}else if((v|0)==64){w=8}else if((v|0)==0){w=0}else{w=10}v=m|0;F$(o,j,v,n);K1(q|0,0,12)|0;j=p;DP(p,10,0);if((a[q]&1)==0){m=j+1|0;x=m;y=m;z=p+8|0}else{m=p+8|0;x=c[m>>2]|0;y=j+1|0;z=m}c[r>>2]=x;m=s|0;c[t>>2]=m;c[u>>2]=0;j=g|0;g=h|0;h=p|0;A=p+4|0;B=c[n>>2]|0;n=x;x=c[j>>2]|0;L11:while(1){do{if((x|0)==0){C=0}else{D=c[x+12>>2]|0;if((D|0)==(c[x+16>>2]|0)){E=g3[c[(c[x>>2]|0)+36>>2]&511](x)|0}else{E=c[D>>2]|0}if((E|0)!=-1){C=x;break}c[j>>2]=0;C=0}}while(0);F=(C|0)==0;D=c[g>>2]|0;do{if((D|0)==0){G=22}else{H=c[D+12>>2]|0;if((H|0)==(c[D+16>>2]|0)){I=g3[c[(c[D>>2]|0)+36>>2]&511](D)|0}else{I=c[H>>2]|0}if((I|0)==-1){c[g>>2]=0;G=22;break}else{H=(D|0)==0;if(F^H){J=D;K=H;break}else{L=n;M=D;N=H;break L11}}}}while(0);if((G|0)==22){G=0;if(F){L=n;M=0;N=1;break}else{J=0;K=1}}D=d[q]|0;H=(D&1|0)==0;if(((c[r>>2]|0)-n|0)==((H?D>>>1:c[A>>2]|0)|0)){if(H){O=D>>>1;P=D>>>1}else{D=c[A>>2]|0;O=D;P=D}DP(p,O<<1,0);if((a[q]&1)==0){Q=10}else{Q=(c[h>>2]&-2)-1|0}DP(p,Q,0);if((a[q]&1)==0){R=y}else{R=c[z>>2]|0}c[r>>2]=R+P;S=R}else{S=n}D=C+12|0;H=c[D>>2]|0;T=C+16|0;if((H|0)==(c[T>>2]|0)){U=g3[c[(c[C>>2]|0)+36>>2]&511](C)|0}else{U=c[H>>2]|0}if((FX(U,w,S,r,u,B,o,m,t,v)|0)!=0){L=S;M=J;N=K;break}H=c[D>>2]|0;if((H|0)==(c[T>>2]|0)){g3[c[(c[C>>2]|0)+40>>2]&511](C)|0;n=S;x=C;continue}else{c[D>>2]=H+4;n=S;x=C;continue}}x=d[o]|0;if((x&1|0)==0){V=x>>>1}else{V=c[o+4>>2]|0}do{if((V|0)!=0){x=c[t>>2]|0;if((x-s|0)>=160){break}S=c[u>>2]|0;c[t>>2]=x+4;c[x>>2]=S}}while(0);b[l>>1]=J3(L,c[r>>2]|0,k,w)|0;HR(o,m,c[t>>2]|0,k);do{if(F){W=0}else{t=c[C+12>>2]|0;if((t|0)==(c[C+16>>2]|0)){X=g3[c[(c[C>>2]|0)+36>>2]&511](C)|0}else{X=c[t>>2]|0}if((X|0)!=-1){W=C;break}c[j>>2]=0;W=0}}while(0);j=(W|0)==0;do{if(N){G=64}else{C=c[M+12>>2]|0;if((C|0)==(c[M+16>>2]|0)){Y=g3[c[(c[M>>2]|0)+36>>2]&511](M)|0}else{Y=c[C>>2]|0}if((Y|0)==-1){c[g>>2]=0;G=64;break}if(!(j^(M|0)==0)){break}Z=e|0;c[Z>>2]=W;DM(p);DM(o);i=f;return}}while(0);do{if((G|0)==64){if(j){break}Z=e|0;c[Z>>2]=W;DM(p);DM(o);i=f;return}}while(0);c[k>>2]=c[k>>2]|2;Z=e|0;c[Z>>2]=W;DM(p);DM(o);i=f;return}function FK(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];FL(a,0,j,k,f,g,h);i=b;return}function FL(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0;e=i;i=i+144|0;l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=g;g=i;i=i+4|0;i=i+7&-8;c[g>>2]=c[l>>2];l=e|0;m=e+104|0;n=e+112|0;o=e+128|0;p=o;q=i;i=i+4|0;i=i+7&-8;r=i;i=i+160|0;s=i;i=i+4|0;i=i+7&-8;t=i;i=i+4|0;i=i+7&-8;u=c[h+4>>2]&74;if((u|0)==8){v=16}else if((u|0)==0){v=0}else if((u|0)==64){v=8}else{v=10}u=l|0;F$(n,h,u,m);K1(p|0,0,12)|0;h=o;DP(o,10,0);if((a[p]&1)==0){l=h+1|0;w=l;x=l;y=o+8|0}else{l=o+8|0;w=c[l>>2]|0;x=h+1|0;y=l}c[q>>2]=w;l=r|0;c[s>>2]=l;c[t>>2]=0;h=f|0;f=g|0;g=o|0;z=o+4|0;A=c[m>>2]|0;m=w;w=c[h>>2]|0;L11:while(1){do{if((w|0)==0){B=0}else{C=c[w+12>>2]|0;if((C|0)==(c[w+16>>2]|0)){D=g3[c[(c[w>>2]|0)+36>>2]&511](w)|0}else{D=c[C>>2]|0}if((D|0)!=-1){B=w;break}c[h>>2]=0;B=0}}while(0);E=(B|0)==0;C=c[f>>2]|0;do{if((C|0)==0){F=22}else{G=c[C+12>>2]|0;if((G|0)==(c[C+16>>2]|0)){H=g3[c[(c[C>>2]|0)+36>>2]&511](C)|0}else{H=c[G>>2]|0}if((H|0)==-1){c[f>>2]=0;F=22;break}else{G=(C|0)==0;if(E^G){I=C;J=G;break}else{K=m;L=C;M=G;break L11}}}}while(0);if((F|0)==22){F=0;if(E){K=m;L=0;M=1;break}else{I=0;J=1}}C=d[p]|0;G=(C&1|0)==0;if(((c[q>>2]|0)-m|0)==((G?C>>>1:c[z>>2]|0)|0)){if(G){N=C>>>1;O=C>>>1}else{C=c[z>>2]|0;N=C;O=C}DP(o,N<<1,0);if((a[p]&1)==0){P=10}else{P=(c[g>>2]&-2)-1|0}DP(o,P,0);if((a[p]&1)==0){Q=x}else{Q=c[y>>2]|0}c[q>>2]=Q+O;R=Q}else{R=m}C=B+12|0;G=c[C>>2]|0;S=B+16|0;if((G|0)==(c[S>>2]|0)){T=g3[c[(c[B>>2]|0)+36>>2]&511](B)|0}else{T=c[G>>2]|0}if((FX(T,v,R,q,t,A,n,l,s,u)|0)!=0){K=R;L=I;M=J;break}G=c[C>>2]|0;if((G|0)==(c[S>>2]|0)){g3[c[(c[B>>2]|0)+40>>2]&511](B)|0;m=R;w=B;continue}else{c[C>>2]=G+4;m=R;w=B;continue}}w=d[n]|0;if((w&1|0)==0){U=w>>>1}else{U=c[n+4>>2]|0}do{if((U|0)!=0){w=c[s>>2]|0;if((w-r|0)>=160){break}R=c[t>>2]|0;c[s>>2]=w+4;c[w>>2]=R}}while(0);c[k>>2]=J2(K,c[q>>2]|0,j,v)|0;HR(n,l,c[s>>2]|0,j);do{if(E){V=0}else{s=c[B+12>>2]|0;if((s|0)==(c[B+16>>2]|0)){W=g3[c[(c[B>>2]|0)+36>>2]&511](B)|0}else{W=c[s>>2]|0}if((W|0)!=-1){V=B;break}c[h>>2]=0;V=0}}while(0);h=(V|0)==0;do{if(M){F=64}else{B=c[L+12>>2]|0;if((B|0)==(c[L+16>>2]|0)){X=g3[c[(c[L>>2]|0)+36>>2]&511](L)|0}else{X=c[B>>2]|0}if((X|0)==-1){c[f>>2]=0;F=64;break}if(!(h^(L|0)==0)){break}Y=b|0;c[Y>>2]=V;DM(o);DM(n);i=e;return}}while(0);do{if((F|0)==64){if(h){break}Y=b|0;c[Y>>2]=V;DM(o);DM(n);i=e;return}}while(0);c[j>>2]=c[j>>2]|2;Y=b|0;c[Y>>2]=V;DM(o);DM(n);i=e;return}function FM(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];FN(a,0,j,k,f,g,h);i=b;return}function FN(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0;e=i;i=i+144|0;l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=g;g=i;i=i+4|0;i=i+7&-8;c[g>>2]=c[l>>2];l=e|0;m=e+104|0;n=e+112|0;o=e+128|0;p=o;q=i;i=i+4|0;i=i+7&-8;r=i;i=i+160|0;s=i;i=i+4|0;i=i+7&-8;t=i;i=i+4|0;i=i+7&-8;u=c[h+4>>2]&74;if((u|0)==8){v=16}else if((u|0)==0){v=0}else if((u|0)==64){v=8}else{v=10}u=l|0;F$(n,h,u,m);K1(p|0,0,12)|0;h=o;DP(o,10,0);if((a[p]&1)==0){l=h+1|0;w=l;x=l;y=o+8|0}else{l=o+8|0;w=c[l>>2]|0;x=h+1|0;y=l}c[q>>2]=w;l=r|0;c[s>>2]=l;c[t>>2]=0;h=f|0;f=g|0;g=o|0;z=o+4|0;A=c[m>>2]|0;m=w;w=c[h>>2]|0;L11:while(1){do{if((w|0)==0){B=0}else{C=c[w+12>>2]|0;if((C|0)==(c[w+16>>2]|0)){D=g3[c[(c[w>>2]|0)+36>>2]&511](w)|0}else{D=c[C>>2]|0}if((D|0)!=-1){B=w;break}c[h>>2]=0;B=0}}while(0);E=(B|0)==0;C=c[f>>2]|0;do{if((C|0)==0){F=22}else{G=c[C+12>>2]|0;if((G|0)==(c[C+16>>2]|0)){H=g3[c[(c[C>>2]|0)+36>>2]&511](C)|0}else{H=c[G>>2]|0}if((H|0)==-1){c[f>>2]=0;F=22;break}else{G=(C|0)==0;if(E^G){I=C;J=G;break}else{K=m;L=C;M=G;break L11}}}}while(0);if((F|0)==22){F=0;if(E){K=m;L=0;M=1;break}else{I=0;J=1}}C=d[p]|0;G=(C&1|0)==0;if(((c[q>>2]|0)-m|0)==((G?C>>>1:c[z>>2]|0)|0)){if(G){N=C>>>1;O=C>>>1}else{C=c[z>>2]|0;N=C;O=C}DP(o,N<<1,0);if((a[p]&1)==0){P=10}else{P=(c[g>>2]&-2)-1|0}DP(o,P,0);if((a[p]&1)==0){Q=x}else{Q=c[y>>2]|0}c[q>>2]=Q+O;R=Q}else{R=m}C=B+12|0;G=c[C>>2]|0;S=B+16|0;if((G|0)==(c[S>>2]|0)){T=g3[c[(c[B>>2]|0)+36>>2]&511](B)|0}else{T=c[G>>2]|0}if((FX(T,v,R,q,t,A,n,l,s,u)|0)!=0){K=R;L=I;M=J;break}G=c[C>>2]|0;if((G|0)==(c[S>>2]|0)){g3[c[(c[B>>2]|0)+40>>2]&511](B)|0;m=R;w=B;continue}else{c[C>>2]=G+4;m=R;w=B;continue}}w=d[n]|0;if((w&1|0)==0){U=w>>>1}else{U=c[n+4>>2]|0}do{if((U|0)!=0){w=c[s>>2]|0;if((w-r|0)>=160){break}R=c[t>>2]|0;c[s>>2]=w+4;c[w>>2]=R}}while(0);c[k>>2]=J1(K,c[q>>2]|0,j,v)|0;HR(n,l,c[s>>2]|0,j);do{if(E){V=0}else{s=c[B+12>>2]|0;if((s|0)==(c[B+16>>2]|0)){W=g3[c[(c[B>>2]|0)+36>>2]&511](B)|0}else{W=c[s>>2]|0}if((W|0)!=-1){V=B;break}c[h>>2]=0;V=0}}while(0);h=(V|0)==0;do{if(M){F=64}else{B=c[L+12>>2]|0;if((B|0)==(c[L+16>>2]|0)){X=g3[c[(c[L>>2]|0)+36>>2]&511](L)|0}else{X=c[B>>2]|0}if((X|0)==-1){c[f>>2]=0;F=64;break}if(!(h^(L|0)==0)){break}Y=b|0;c[Y>>2]=V;DM(o);DM(n);i=e;return}}while(0);do{if((F|0)==64){if(h){break}Y=b|0;c[Y>>2]=V;DM(o);DM(n);i=e;return}}while(0);c[j>>2]=c[j>>2]|2;Y=b|0;c[Y>>2]=V;DM(o);DM(n);i=e;return}function FO(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];FP(a,0,j,k,f,g,h);i=b;return}function FP(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0;e=i;i=i+144|0;l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=g;g=i;i=i+4|0;i=i+7&-8;c[g>>2]=c[l>>2];l=e|0;m=e+104|0;n=e+112|0;o=e+128|0;p=o;q=i;i=i+4|0;i=i+7&-8;r=i;i=i+160|0;s=i;i=i+4|0;i=i+7&-8;t=i;i=i+4|0;i=i+7&-8;u=c[h+4>>2]&74;if((u|0)==64){v=8}else if((u|0)==0){v=0}else if((u|0)==8){v=16}else{v=10}u=l|0;F$(n,h,u,m);K1(p|0,0,12)|0;h=o;DP(o,10,0);if((a[p]&1)==0){l=h+1|0;w=l;x=l;y=o+8|0}else{l=o+8|0;w=c[l>>2]|0;x=h+1|0;y=l}c[q>>2]=w;l=r|0;c[s>>2]=l;c[t>>2]=0;h=f|0;f=g|0;g=o|0;z=o+4|0;A=c[m>>2]|0;m=w;w=c[h>>2]|0;L11:while(1){do{if((w|0)==0){B=0}else{C=c[w+12>>2]|0;if((C|0)==(c[w+16>>2]|0)){D=g3[c[(c[w>>2]|0)+36>>2]&511](w)|0}else{D=c[C>>2]|0}if((D|0)!=-1){B=w;break}c[h>>2]=0;B=0}}while(0);E=(B|0)==0;C=c[f>>2]|0;do{if((C|0)==0){F=22}else{G=c[C+12>>2]|0;if((G|0)==(c[C+16>>2]|0)){H=g3[c[(c[C>>2]|0)+36>>2]&511](C)|0}else{H=c[G>>2]|0}if((H|0)==-1){c[f>>2]=0;F=22;break}else{G=(C|0)==0;if(E^G){I=C;J=G;break}else{L=m;M=C;N=G;break L11}}}}while(0);if((F|0)==22){F=0;if(E){L=m;M=0;N=1;break}else{I=0;J=1}}C=d[p]|0;G=(C&1|0)==0;if(((c[q>>2]|0)-m|0)==((G?C>>>1:c[z>>2]|0)|0)){if(G){O=C>>>1;P=C>>>1}else{C=c[z>>2]|0;O=C;P=C}DP(o,O<<1,0);if((a[p]&1)==0){Q=10}else{Q=(c[g>>2]&-2)-1|0}DP(o,Q,0);if((a[p]&1)==0){R=x}else{R=c[y>>2]|0}c[q>>2]=R+P;S=R}else{S=m}C=B+12|0;G=c[C>>2]|0;T=B+16|0;if((G|0)==(c[T>>2]|0)){U=g3[c[(c[B>>2]|0)+36>>2]&511](B)|0}else{U=c[G>>2]|0}if((FX(U,v,S,q,t,A,n,l,s,u)|0)!=0){L=S;M=I;N=J;break}G=c[C>>2]|0;if((G|0)==(c[T>>2]|0)){g3[c[(c[B>>2]|0)+40>>2]&511](B)|0;m=S;w=B;continue}else{c[C>>2]=G+4;m=S;w=B;continue}}w=d[n]|0;if((w&1|0)==0){V=w>>>1}else{V=c[n+4>>2]|0}do{if((V|0)!=0){w=c[s>>2]|0;if((w-r|0)>=160){break}S=c[t>>2]|0;c[s>>2]=w+4;c[w>>2]=S}}while(0);t=J0(L,c[q>>2]|0,j,v)|0;c[k>>2]=t;c[k+4>>2]=K;HR(n,l,c[s>>2]|0,j);do{if(E){W=0}else{s=c[B+12>>2]|0;if((s|0)==(c[B+16>>2]|0)){X=g3[c[(c[B>>2]|0)+36>>2]&511](B)|0}else{X=c[s>>2]|0}if((X|0)!=-1){W=B;break}c[h>>2]=0;W=0}}while(0);h=(W|0)==0;do{if(N){F=64}else{B=c[M+12>>2]|0;if((B|0)==(c[M+16>>2]|0)){Y=g3[c[(c[M>>2]|0)+36>>2]&511](M)|0}else{Y=c[B>>2]|0}if((Y|0)==-1){c[f>>2]=0;F=64;break}if(!(h^(M|0)==0)){break}Z=b|0;c[Z>>2]=W;DM(o);DM(n);i=e;return}}while(0);do{if((F|0)==64){if(h){break}Z=b|0;c[Z>>2]=W;DM(o);DM(n);i=e;return}}while(0);c[j>>2]=c[j>>2]|2;Z=b|0;c[Z>>2]=W;DM(o);DM(n);i=e;return}function FQ(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];FR(a,0,j,k,f,g,h);i=b;return}function FR(b,e,f,h,j,k,l){b=b|0;e=e|0;f=f|0;h=h|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0;e=i;i=i+176|0;m=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[m>>2];m=h;h=i;i=i+4|0;i=i+7&-8;c[h>>2]=c[m>>2];m=e+128|0;n=e+136|0;o=e+144|0;p=e+160|0;q=p;r=i;i=i+4|0;i=i+7&-8;s=i;i=i+160|0;t=i;i=i+4|0;i=i+7&-8;u=i;i=i+4|0;i=i+7&-8;v=i;i=i+1|0;i=i+7&-8;w=i;i=i+1|0;i=i+7&-8;x=e|0;F0(o,j,x,m,n);K1(q|0,0,12)|0;j=p;DP(p,10,0);if((a[q]&1)==0){y=j+1|0;z=y;A=y;B=p+8|0}else{y=p+8|0;z=c[y>>2]|0;A=j+1|0;B=y}c[r>>2]=z;y=s|0;c[t>>2]=y;c[u>>2]=0;a[v]=1;a[w]=69;j=f|0;f=h|0;h=p|0;C=p+4|0;D=c[m>>2]|0;m=c[n>>2]|0;n=z;z=c[j>>2]|0;L6:while(1){do{if((z|0)==0){E=0}else{F=c[z+12>>2]|0;if((F|0)==(c[z+16>>2]|0)){G=g3[c[(c[z>>2]|0)+36>>2]&511](z)|0}else{G=c[F>>2]|0}if((G|0)!=-1){E=z;break}c[j>>2]=0;E=0}}while(0);H=(E|0)==0;F=c[f>>2]|0;do{if((F|0)==0){I=18}else{J=c[F+12>>2]|0;if((J|0)==(c[F+16>>2]|0)){K=g3[c[(c[F>>2]|0)+36>>2]&511](F)|0}else{K=c[J>>2]|0}if((K|0)==-1){c[f>>2]=0;I=18;break}else{J=(F|0)==0;if(H^J){L=F;M=J;break}else{N=n;O=F;P=J;break L6}}}}while(0);if((I|0)==18){I=0;if(H){N=n;O=0;P=1;break}else{L=0;M=1}}F=d[q]|0;J=(F&1|0)==0;if(((c[r>>2]|0)-n|0)==((J?F>>>1:c[C>>2]|0)|0)){if(J){Q=F>>>1;R=F>>>1}else{F=c[C>>2]|0;Q=F;R=F}DP(p,Q<<1,0);if((a[q]&1)==0){S=10}else{S=(c[h>>2]&-2)-1|0}DP(p,S,0);if((a[q]&1)==0){T=A}else{T=c[B>>2]|0}c[r>>2]=T+R;U=T}else{U=n}F=E+12|0;J=c[F>>2]|0;V=E+16|0;if((J|0)==(c[V>>2]|0)){W=g3[c[(c[E>>2]|0)+36>>2]&511](E)|0}else{W=c[J>>2]|0}if((F1(W,v,w,U,r,D,m,o,y,t,u,x)|0)!=0){N=U;O=L;P=M;break}J=c[F>>2]|0;if((J|0)==(c[V>>2]|0)){g3[c[(c[E>>2]|0)+40>>2]&511](E)|0;n=U;z=E;continue}else{c[F>>2]=J+4;n=U;z=E;continue}}z=d[o]|0;if((z&1|0)==0){X=z>>>1}else{X=c[o+4>>2]|0}do{if((X|0)!=0){if((a[v]&1)==0){break}z=c[t>>2]|0;if((z-s|0)>=160){break}U=c[u>>2]|0;c[t>>2]=z+4;c[z>>2]=U}}while(0);g[l>>2]=+J$(N,c[r>>2]|0,k);HR(o,y,c[t>>2]|0,k);do{if(H){Y=0}else{t=c[E+12>>2]|0;if((t|0)==(c[E+16>>2]|0)){Z=g3[c[(c[E>>2]|0)+36>>2]&511](E)|0}else{Z=c[t>>2]|0}if((Z|0)!=-1){Y=E;break}c[j>>2]=0;Y=0}}while(0);j=(Y|0)==0;do{if(P){I=61}else{E=c[O+12>>2]|0;if((E|0)==(c[O+16>>2]|0)){_=g3[c[(c[O>>2]|0)+36>>2]&511](O)|0}else{_=c[E>>2]|0}if((_|0)==-1){c[f>>2]=0;I=61;break}if(!(j^(O|0)==0)){break}$=b|0;c[$>>2]=Y;DM(p);DM(o);i=e;return}}while(0);do{if((I|0)==61){if(j){break}$=b|0;c[$>>2]=Y;DM(p);DM(o);i=e;return}}while(0);c[k>>2]=c[k>>2]|2;$=b|0;c[$>>2]=Y;DM(p);DM(o);i=e;return}function FS(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];FT(a,0,j,k,f,g,h);i=b;return}function FT(b,e,f,g,j,k,l){b=b|0;e=e|0;f=f|0;g=g|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0;e=i;i=i+176|0;m=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[m>>2];m=g;g=i;i=i+4|0;i=i+7&-8;c[g>>2]=c[m>>2];m=e+128|0;n=e+136|0;o=e+144|0;p=e+160|0;q=p;r=i;i=i+4|0;i=i+7&-8;s=i;i=i+160|0;t=i;i=i+4|0;i=i+7&-8;u=i;i=i+4|0;i=i+7&-8;v=i;i=i+1|0;i=i+7&-8;w=i;i=i+1|0;i=i+7&-8;x=e|0;F0(o,j,x,m,n);K1(q|0,0,12)|0;j=p;DP(p,10,0);if((a[q]&1)==0){y=j+1|0;z=y;A=y;B=p+8|0}else{y=p+8|0;z=c[y>>2]|0;A=j+1|0;B=y}c[r>>2]=z;y=s|0;c[t>>2]=y;c[u>>2]=0;a[v]=1;a[w]=69;j=f|0;f=g|0;g=p|0;C=p+4|0;D=c[m>>2]|0;m=c[n>>2]|0;n=z;z=c[j>>2]|0;L6:while(1){do{if((z|0)==0){E=0}else{F=c[z+12>>2]|0;if((F|0)==(c[z+16>>2]|0)){G=g3[c[(c[z>>2]|0)+36>>2]&511](z)|0}else{G=c[F>>2]|0}if((G|0)!=-1){E=z;break}c[j>>2]=0;E=0}}while(0);H=(E|0)==0;F=c[f>>2]|0;do{if((F|0)==0){I=18}else{J=c[F+12>>2]|0;if((J|0)==(c[F+16>>2]|0)){K=g3[c[(c[F>>2]|0)+36>>2]&511](F)|0}else{K=c[J>>2]|0}if((K|0)==-1){c[f>>2]=0;I=18;break}else{J=(F|0)==0;if(H^J){L=F;M=J;break}else{N=n;O=F;P=J;break L6}}}}while(0);if((I|0)==18){I=0;if(H){N=n;O=0;P=1;break}else{L=0;M=1}}F=d[q]|0;J=(F&1|0)==0;if(((c[r>>2]|0)-n|0)==((J?F>>>1:c[C>>2]|0)|0)){if(J){Q=F>>>1;R=F>>>1}else{F=c[C>>2]|0;Q=F;R=F}DP(p,Q<<1,0);if((a[q]&1)==0){S=10}else{S=(c[g>>2]&-2)-1|0}DP(p,S,0);if((a[q]&1)==0){T=A}else{T=c[B>>2]|0}c[r>>2]=T+R;U=T}else{U=n}F=E+12|0;J=c[F>>2]|0;V=E+16|0;if((J|0)==(c[V>>2]|0)){W=g3[c[(c[E>>2]|0)+36>>2]&511](E)|0}else{W=c[J>>2]|0}if((F1(W,v,w,U,r,D,m,o,y,t,u,x)|0)!=0){N=U;O=L;P=M;break}J=c[F>>2]|0;if((J|0)==(c[V>>2]|0)){g3[c[(c[E>>2]|0)+40>>2]&511](E)|0;n=U;z=E;continue}else{c[F>>2]=J+4;n=U;z=E;continue}}z=d[o]|0;if((z&1|0)==0){X=z>>>1}else{X=c[o+4>>2]|0}do{if((X|0)!=0){if((a[v]&1)==0){break}z=c[t>>2]|0;if((z-s|0)>=160){break}U=c[u>>2]|0;c[t>>2]=z+4;c[z>>2]=U}}while(0);h[l>>3]=+J_(N,c[r>>2]|0,k);HR(o,y,c[t>>2]|0,k);do{if(H){Y=0}else{t=c[E+12>>2]|0;if((t|0)==(c[E+16>>2]|0)){Z=g3[c[(c[E>>2]|0)+36>>2]&511](E)|0}else{Z=c[t>>2]|0}if((Z|0)!=-1){Y=E;break}c[j>>2]=0;Y=0}}while(0);j=(Y|0)==0;do{if(P){I=61}else{E=c[O+12>>2]|0;if((E|0)==(c[O+16>>2]|0)){_=g3[c[(c[O>>2]|0)+36>>2]&511](O)|0}else{_=c[E>>2]|0}if((_|0)==-1){c[f>>2]=0;I=61;break}if(!(j^(O|0)==0)){break}$=b|0;c[$>>2]=Y;DM(p);DM(o);i=e;return}}while(0);do{if((I|0)==61){if(j){break}$=b|0;c[$>>2]=Y;DM(p);DM(o);i=e;return}}while(0);c[k>>2]=c[k>>2]|2;$=b|0;c[$>>2]=Y;DM(p);DM(o);i=e;return}function FU(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];FV(a,0,j,k,f,g,h);i=b;return}function FV(b,e,f,g,j,k,l){b=b|0;e=e|0;f=f|0;g=g|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0;e=i;i=i+176|0;m=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[m>>2];m=g;g=i;i=i+4|0;i=i+7&-8;c[g>>2]=c[m>>2];m=e+128|0;n=e+136|0;o=e+144|0;p=e+160|0;q=p;r=i;i=i+4|0;i=i+7&-8;s=i;i=i+160|0;t=i;i=i+4|0;i=i+7&-8;u=i;i=i+4|0;i=i+7&-8;v=i;i=i+1|0;i=i+7&-8;w=i;i=i+1|0;i=i+7&-8;x=e|0;F0(o,j,x,m,n);K1(q|0,0,12)|0;j=p;DP(p,10,0);if((a[q]&1)==0){y=j+1|0;z=y;A=y;B=p+8|0}else{y=p+8|0;z=c[y>>2]|0;A=j+1|0;B=y}c[r>>2]=z;y=s|0;c[t>>2]=y;c[u>>2]=0;a[v]=1;a[w]=69;j=f|0;f=g|0;g=p|0;C=p+4|0;D=c[m>>2]|0;m=c[n>>2]|0;n=z;z=c[j>>2]|0;L6:while(1){do{if((z|0)==0){E=0}else{F=c[z+12>>2]|0;if((F|0)==(c[z+16>>2]|0)){G=g3[c[(c[z>>2]|0)+36>>2]&511](z)|0}else{G=c[F>>2]|0}if((G|0)!=-1){E=z;break}c[j>>2]=0;E=0}}while(0);H=(E|0)==0;F=c[f>>2]|0;do{if((F|0)==0){I=18}else{J=c[F+12>>2]|0;if((J|0)==(c[F+16>>2]|0)){K=g3[c[(c[F>>2]|0)+36>>2]&511](F)|0}else{K=c[J>>2]|0}if((K|0)==-1){c[f>>2]=0;I=18;break}else{J=(F|0)==0;if(H^J){L=F;M=J;break}else{N=n;O=F;P=J;break L6}}}}while(0);if((I|0)==18){I=0;if(H){N=n;O=0;P=1;break}else{L=0;M=1}}F=d[q]|0;J=(F&1|0)==0;if(((c[r>>2]|0)-n|0)==((J?F>>>1:c[C>>2]|0)|0)){if(J){Q=F>>>1;R=F>>>1}else{F=c[C>>2]|0;Q=F;R=F}DP(p,Q<<1,0);if((a[q]&1)==0){S=10}else{S=(c[g>>2]&-2)-1|0}DP(p,S,0);if((a[q]&1)==0){T=A}else{T=c[B>>2]|0}c[r>>2]=T+R;U=T}else{U=n}F=E+12|0;J=c[F>>2]|0;V=E+16|0;if((J|0)==(c[V>>2]|0)){W=g3[c[(c[E>>2]|0)+36>>2]&511](E)|0}else{W=c[J>>2]|0}if((F1(W,v,w,U,r,D,m,o,y,t,u,x)|0)!=0){N=U;O=L;P=M;break}J=c[F>>2]|0;if((J|0)==(c[V>>2]|0)){g3[c[(c[E>>2]|0)+40>>2]&511](E)|0;n=U;z=E;continue}else{c[F>>2]=J+4;n=U;z=E;continue}}z=d[o]|0;if((z&1|0)==0){X=z>>>1}else{X=c[o+4>>2]|0}do{if((X|0)!=0){if((a[v]&1)==0){break}z=c[t>>2]|0;if((z-s|0)>=160){break}U=c[u>>2]|0;c[t>>2]=z+4;c[z>>2]=U}}while(0);h[l>>3]=+JZ(N,c[r>>2]|0,k);HR(o,y,c[t>>2]|0,k);do{if(H){Y=0}else{t=c[E+12>>2]|0;if((t|0)==(c[E+16>>2]|0)){Z=g3[c[(c[E>>2]|0)+36>>2]&511](E)|0}else{Z=c[t>>2]|0}if((Z|0)!=-1){Y=E;break}c[j>>2]=0;Y=0}}while(0);j=(Y|0)==0;do{if(P){I=61}else{E=c[O+12>>2]|0;if((E|0)==(c[O+16>>2]|0)){_=g3[c[(c[O>>2]|0)+36>>2]&511](O)|0}else{_=c[E>>2]|0}if((_|0)==-1){c[f>>2]=0;I=61;break}if(!(j^(O|0)==0)){break}$=b|0;c[$>>2]=Y;DM(p);DM(o);i=e;return}}while(0);do{if((I|0)==61){if(j){break}$=b|0;c[$>>2]=Y;DM(p);DM(o);i=e;return}}while(0);c[k>>2]=c[k>>2]|2;$=b|0;c[$>>2]=Y;DM(p);DM(o);i=e;return}function FW(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0;e=i;i=i+136|0;l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=g;g=i;i=i+4|0;i=i+7&-8;c[g>>2]=c[l>>2];l=e|0;m=e+16|0;n=e+120|0;o=i;i=i+4|0;i=i+7&-8;p=i;i=i+12|0;i=i+7&-8;q=i;i=i+4|0;i=i+7&-8;r=i;i=i+160|0;s=i;i=i+4|0;i=i+7&-8;t=i;i=i+4|0;i=i+7&-8;K1(n|0,0,12)|0;u=p;D5(o,h);h=o|0;o=c[h>>2]|0;if((c[13664]|0)!=-1){c[l>>2]=54656;c[l+4>>2]=32;c[l+8>>2]=0;DH(54656,l,286)}l=(c[13665]|0)-1|0;v=c[o+8>>2]|0;do{if((c[o+12>>2]|0)-v>>2>>>0>l>>>0){w=c[v+(l<<2)>>2]|0;if((w|0)==0){break}x=m|0;hD[c[(c[w>>2]|0)+48>>2]&63](w,49e3,49026,x)|0;Dn(c[h>>2]|0)|0;K1(u|0,0,12)|0;w=p;DP(p,10,0);if((a[u]&1)==0){y=w+1|0;z=y;A=y;B=p+8|0}else{y=p+8|0;z=c[y>>2]|0;A=w+1|0;B=y}c[q>>2]=z;y=r|0;c[s>>2]=y;c[t>>2]=0;w=f|0;C=g|0;D=p|0;E=p+4|0;F=z;G=c[w>>2]|0;L14:while(1){do{if((G|0)==0){H=0}else{I=c[G+12>>2]|0;if((I|0)==(c[G+16>>2]|0)){J=g3[c[(c[G>>2]|0)+36>>2]&511](G)|0}else{J=c[I>>2]|0}if((J|0)!=-1){H=G;break}c[w>>2]=0;H=0}}while(0);I=(H|0)==0;K=c[C>>2]|0;do{if((K|0)==0){L=26}else{M=c[K+12>>2]|0;if((M|0)==(c[K+16>>2]|0)){N=g3[c[(c[K>>2]|0)+36>>2]&511](K)|0}else{N=c[M>>2]|0}if((N|0)==-1){c[C>>2]=0;L=26;break}else{if(I^(K|0)==0){break}else{O=F;break L14}}}}while(0);if((L|0)==26){L=0;if(I){O=F;break}}K=d[u]|0;M=(K&1|0)==0;if(((c[q>>2]|0)-F|0)==((M?K>>>1:c[E>>2]|0)|0)){if(M){P=K>>>1;Q=K>>>1}else{K=c[E>>2]|0;P=K;Q=K}DP(p,P<<1,0);if((a[u]&1)==0){R=10}else{R=(c[D>>2]&-2)-1|0}DP(p,R,0);if((a[u]&1)==0){S=A}else{S=c[B>>2]|0}c[q>>2]=S+Q;T=S}else{T=F}K=H+12|0;M=c[K>>2]|0;U=H+16|0;if((M|0)==(c[U>>2]|0)){V=g3[c[(c[H>>2]|0)+36>>2]&511](H)|0}else{V=c[M>>2]|0}if((FX(V,16,T,q,t,0,n,y,s,x)|0)!=0){O=T;break}M=c[K>>2]|0;if((M|0)==(c[U>>2]|0)){g3[c[(c[H>>2]|0)+40>>2]&511](H)|0;F=T;G=H;continue}else{c[K>>2]=M+4;F=T;G=H;continue}}a[O+3|0]=0;do{if((a[55400]|0)==0){if((bN(55400)|0)==0){break}c[13026]=fM(2147483647,22888,0)|0}}while(0);G=Fz(O,c[13026]|0,20912,(F=i,i=i+8|0,c[F>>2]=k,F)|0)|0;i=F;if((G|0)!=1){c[j>>2]=4}G=c[w>>2]|0;do{if((G|0)==0){W=0}else{F=c[G+12>>2]|0;if((F|0)==(c[G+16>>2]|0)){X=g3[c[(c[G>>2]|0)+36>>2]&511](G)|0}else{X=c[F>>2]|0}if((X|0)!=-1){W=G;break}c[w>>2]=0;W=0}}while(0);w=(W|0)==0;G=c[C>>2]|0;do{if((G|0)==0){L=71}else{F=c[G+12>>2]|0;if((F|0)==(c[G+16>>2]|0)){Y=g3[c[(c[G>>2]|0)+36>>2]&511](G)|0}else{Y=c[F>>2]|0}if((Y|0)==-1){c[C>>2]=0;L=71;break}if(!(w^(G|0)==0)){break}Z=b|0;c[Z>>2]=W;DM(p);DM(n);i=e;return}}while(0);do{if((L|0)==71){if(w){break}Z=b|0;c[Z>>2]=W;DM(p);DM(n);i=e;return}}while(0);c[j>>2]=c[j>>2]|2;Z=b|0;c[Z>>2]=W;DM(p);DM(n);i=e;return}}while(0);e=gJ(4)|0;Kr(e);eR(e|0,45560,458)}function FX(b,e,f,g,h,i,j,k,l,m){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0;n=c[g>>2]|0;o=(n|0)==(f|0);do{if(o){p=(c[m+96>>2]|0)==(b|0);if(!p){if((c[m+100>>2]|0)!=(b|0)){break}}c[g>>2]=f+1;a[f]=p?43:45;c[h>>2]=0;q=0;return q|0}}while(0);p=d[j]|0;if((p&1|0)==0){r=p>>>1}else{r=c[j+4>>2]|0}if((r|0)!=0&(b|0)==(i|0)){i=c[l>>2]|0;if((i-k|0)>=160){q=0;return q|0}k=c[h>>2]|0;c[l>>2]=i+4;c[i>>2]=k;c[h>>2]=0;q=0;return q|0}k=m+104|0;i=m;while(1){if((i|0)==(k|0)){s=k;break}if((c[i>>2]|0)==(b|0)){s=i;break}else{i=i+4|0}}i=s-m|0;m=i>>2;if((i|0)>92){q=-1;return q|0}do{if((e|0)==16){if((i|0)<88){break}if(o){q=-1;return q|0}if((n-f|0)>=3){q=-1;return q|0}if((a[n-1|0]|0)!=48){q=-1;return q|0}c[h>>2]=0;s=a[49e3+m|0]|0;b=c[g>>2]|0;c[g>>2]=b+1;a[b]=s;q=0;return q|0}else if((e|0)==8|(e|0)==10){if((m|0)<(e|0)){break}else{q=-1}return q|0}}while(0);e=a[49e3+m|0]|0;c[g>>2]=n+1;a[n]=e;c[h>>2]=(c[h>>2]|0)+1;q=0;return q|0}function FY(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;g=i;i=i+40|0;h=g|0;j=g+16|0;k=g+32|0;D5(k,d);d=k|0;k=c[d>>2]|0;if((c[13666]|0)!=-1){c[j>>2]=54664;c[j+4>>2]=32;c[j+8>>2]=0;DH(54664,j,286)}j=(c[13667]|0)-1|0;l=c[k+8>>2]|0;do{if((c[k+12>>2]|0)-l>>2>>>0>j>>>0){m=c[l+(j<<2)>>2]|0;if((m|0)==0){break}hD[c[(c[m>>2]|0)+32>>2]&63](m,49e3,49026,e)|0;m=c[d>>2]|0;if((c[13570]|0)!=-1){c[h>>2]=54280;c[h+4>>2]=32;c[h+8>>2]=0;DH(54280,h,286)}n=(c[13571]|0)-1|0;o=c[m+8>>2]|0;do{if((c[m+12>>2]|0)-o>>2>>>0>n>>>0){p=c[o+(n<<2)>>2]|0;if((p|0)==0){break}q=p;a[f]=g3[c[(c[p>>2]|0)+16>>2]&511](q)|0;g0[c[(c[p>>2]|0)+20>>2]&511](b,q);Dn(c[d>>2]|0)|0;i=g;return}}while(0);n=gJ(4)|0;Kr(n);eR(n|0,45560,458)}}while(0);g=gJ(4)|0;Kr(g);eR(g|0,45560,458)}function FZ(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;h=i;i=i+40|0;j=h|0;k=h+16|0;l=h+32|0;D5(l,d);d=l|0;l=c[d>>2]|0;if((c[13666]|0)!=-1){c[k>>2]=54664;c[k+4>>2]=32;c[k+8>>2]=0;DH(54664,k,286)}k=(c[13667]|0)-1|0;m=c[l+8>>2]|0;do{if((c[l+12>>2]|0)-m>>2>>>0>k>>>0){n=c[m+(k<<2)>>2]|0;if((n|0)==0){break}hD[c[(c[n>>2]|0)+32>>2]&63](n,49e3,49032,e)|0;n=c[d>>2]|0;if((c[13570]|0)!=-1){c[j>>2]=54280;c[j+4>>2]=32;c[j+8>>2]=0;DH(54280,j,286)}o=(c[13571]|0)-1|0;p=c[n+8>>2]|0;do{if((c[n+12>>2]|0)-p>>2>>>0>o>>>0){q=c[p+(o<<2)>>2]|0;if((q|0)==0){break}r=q;s=q;a[f]=g3[c[(c[s>>2]|0)+12>>2]&511](r)|0;a[g]=g3[c[(c[s>>2]|0)+16>>2]&511](r)|0;g0[c[(c[q>>2]|0)+20>>2]&511](b,r);Dn(c[d>>2]|0)|0;i=h;return}}while(0);o=gJ(4)|0;Kr(o);eR(o|0,45560,458)}}while(0);h=gJ(4)|0;Kr(h);eR(h|0,45560,458)}function F_(b,e,f,g,h,i,j,k,l,m,n,o){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;var p=0,q=0,r=0,s=0,t=0;if(b<<24>>24==i<<24>>24){if((a[e]&1)==0){p=-1;return p|0}a[e]=0;i=c[h>>2]|0;c[h>>2]=i+1;a[i]=46;i=d[k]|0;if((i&1|0)==0){q=i>>>1}else{q=c[k+4>>2]|0}if((q|0)==0){p=0;return p|0}q=c[m>>2]|0;if((q-l|0)>=160){p=0;return p|0}i=c[n>>2]|0;c[m>>2]=q+4;c[q>>2]=i;p=0;return p|0}do{if(b<<24>>24==j<<24>>24){i=d[k]|0;if((i&1|0)==0){r=i>>>1}else{r=c[k+4>>2]|0}if((r|0)==0){break}if((a[e]&1)==0){p=-1;return p|0}i=c[m>>2]|0;if((i-l|0)>=160){p=0;return p|0}q=c[n>>2]|0;c[m>>2]=i+4;c[i>>2]=q;c[n>>2]=0;p=0;return p|0}}while(0);r=o+32|0;j=o;while(1){if((j|0)==(r|0)){s=r;break}if((a[j]|0)==b<<24>>24){s=j;break}else{j=j+1|0}}j=s-o|0;if((j|0)>31){p=-1;return p|0}o=a[49e3+j|0]|0;if((j|0)==22|(j|0)==23){a[f]=80;s=c[h>>2]|0;c[h>>2]=s+1;a[s]=o;p=0;return p|0}else if((j|0)==25|(j|0)==24){s=c[h>>2]|0;do{if((s|0)!=(g|0)){if((a[s-1|0]&95|0)==(a[f]&127|0)){break}else{p=-1}return p|0}}while(0);c[h>>2]=s+1;a[s]=o;p=0;return p|0}else{s=a[f]|0;do{if((o&95|0)==(s<<24>>24|0)){a[f]=s|-128;if((a[e]&1)==0){break}a[e]=0;g=d[k]|0;if((g&1|0)==0){t=g>>>1}else{t=c[k+4>>2]|0}if((t|0)==0){break}g=c[m>>2]|0;if((g-l|0)>=160){break}b=c[n>>2]|0;c[m>>2]=g+4;c[g>>2]=b}}while(0);m=c[h>>2]|0;c[h>>2]=m+1;a[m]=o;if((j|0)>21){p=0;return p|0}c[n>>2]=(c[n>>2]|0)+1;p=0;return p|0}return 0}function F$(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;f=i;i=i+40|0;g=f|0;h=f+16|0;j=f+32|0;D5(j,b);b=j|0;j=c[b>>2]|0;if((c[13664]|0)!=-1){c[h>>2]=54656;c[h+4>>2]=32;c[h+8>>2]=0;DH(54656,h,286)}h=(c[13665]|0)-1|0;k=c[j+8>>2]|0;do{if((c[j+12>>2]|0)-k>>2>>>0>h>>>0){l=c[k+(h<<2)>>2]|0;if((l|0)==0){break}hD[c[(c[l>>2]|0)+48>>2]&63](l,49e3,49026,d)|0;l=c[b>>2]|0;if((c[13568]|0)!=-1){c[g>>2]=54272;c[g+4>>2]=32;c[g+8>>2]=0;DH(54272,g,286)}m=(c[13569]|0)-1|0;n=c[l+8>>2]|0;do{if((c[l+12>>2]|0)-n>>2>>>0>m>>>0){o=c[n+(m<<2)>>2]|0;if((o|0)==0){break}p=o;c[e>>2]=g3[c[(c[o>>2]|0)+16>>2]&511](p)|0;g0[c[(c[o>>2]|0)+20>>2]&511](a,p);Dn(c[b>>2]|0)|0;i=f;return}}while(0);m=gJ(4)|0;Kr(m);eR(m|0,45560,458)}}while(0);f=gJ(4)|0;Kr(f);eR(f|0,45560,458)}function F0(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;g=i;i=i+40|0;h=g|0;j=g+16|0;k=g+32|0;D5(k,b);b=k|0;k=c[b>>2]|0;if((c[13664]|0)!=-1){c[j>>2]=54656;c[j+4>>2]=32;c[j+8>>2]=0;DH(54656,j,286)}j=(c[13665]|0)-1|0;l=c[k+8>>2]|0;do{if((c[k+12>>2]|0)-l>>2>>>0>j>>>0){m=c[l+(j<<2)>>2]|0;if((m|0)==0){break}hD[c[(c[m>>2]|0)+48>>2]&63](m,49e3,49032,d)|0;m=c[b>>2]|0;if((c[13568]|0)!=-1){c[h>>2]=54272;c[h+4>>2]=32;c[h+8>>2]=0;DH(54272,h,286)}n=(c[13569]|0)-1|0;o=c[m+8>>2]|0;do{if((c[m+12>>2]|0)-o>>2>>>0>n>>>0){p=c[o+(n<<2)>>2]|0;if((p|0)==0){break}q=p;r=p;c[e>>2]=g3[c[(c[r>>2]|0)+12>>2]&511](q)|0;c[f>>2]=g3[c[(c[r>>2]|0)+16>>2]&511](q)|0;g0[c[(c[p>>2]|0)+20>>2]&511](a,q);Dn(c[b>>2]|0)|0;i=g;return}}while(0);n=gJ(4)|0;Kr(n);eR(n|0,45560,458)}}while(0);g=gJ(4)|0;Kr(g);eR(g|0,45560,458)}function F1(b,e,f,g,h,i,j,k,l,m,n,o){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;var p=0,q=0,r=0,s=0,t=0;if((b|0)==(i|0)){if((a[e]&1)==0){p=-1;return p|0}a[e]=0;i=c[h>>2]|0;c[h>>2]=i+1;a[i]=46;i=d[k]|0;if((i&1|0)==0){q=i>>>1}else{q=c[k+4>>2]|0}if((q|0)==0){p=0;return p|0}q=c[m>>2]|0;if((q-l|0)>=160){p=0;return p|0}i=c[n>>2]|0;c[m>>2]=q+4;c[q>>2]=i;p=0;return p|0}do{if((b|0)==(j|0)){i=d[k]|0;if((i&1|0)==0){r=i>>>1}else{r=c[k+4>>2]|0}if((r|0)==0){break}if((a[e]&1)==0){p=-1;return p|0}i=c[m>>2]|0;if((i-l|0)>=160){p=0;return p|0}q=c[n>>2]|0;c[m>>2]=i+4;c[i>>2]=q;c[n>>2]=0;p=0;return p|0}}while(0);r=o+128|0;j=o;while(1){if((j|0)==(r|0)){s=r;break}if((c[j>>2]|0)==(b|0)){s=j;break}else{j=j+4|0}}j=s-o|0;o=j>>2;if((j|0)>124){p=-1;return p|0}s=a[49e3+o|0]|0;do{if((o|0)==22|(o|0)==23){a[f]=80}else if((o|0)==25|(o|0)==24){b=c[h>>2]|0;do{if((b|0)!=(g|0)){if((a[b-1|0]&95|0)==(a[f]&127|0)){break}else{p=-1}return p|0}}while(0);c[h>>2]=b+1;a[b]=s;p=0;return p|0}else{r=a[f]|0;if((s&95|0)!=(r<<24>>24|0)){break}a[f]=r|-128;if((a[e]&1)==0){break}a[e]=0;r=d[k]|0;if((r&1|0)==0){t=r>>>1}else{t=c[k+4>>2]|0}if((t|0)==0){break}r=c[m>>2]|0;if((r-l|0)>=160){break}q=c[n>>2]|0;c[m>>2]=r+4;c[r>>2]=q}}while(0);m=c[h>>2]|0;c[h>>2]=m+1;a[m]=s;if((j|0)>84){p=0;return p|0}c[n>>2]=(c[n>>2]|0)+1;p=0;return p|0}function F2(a){a=a|0;Dl(a|0);KU(a);return}function F3(a){a=a|0;Dl(a|0);return}function F4(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;j=i;i=i+48|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=j|0;l=j+16|0;m=j+24|0;n=j+32|0;if((c[f+4>>2]&1|0)==0){o=c[(c[d>>2]|0)+24>>2]|0;c[l>>2]=c[e>>2];hk[o&63](b,d,l,f,g,h&1);i=j;return}D5(m,f);f=m|0;m=c[f>>2]|0;if((c[13570]|0)!=-1){c[k>>2]=54280;c[k+4>>2]=32;c[k+8>>2]=0;DH(54280,k,286)}k=(c[13571]|0)-1|0;g=c[m+8>>2]|0;do{if((c[m+12>>2]|0)-g>>2>>>0>k>>>0){l=c[g+(k<<2)>>2]|0;if((l|0)==0){break}d=l;Dn(c[f>>2]|0)|0;o=c[l>>2]|0;if(h){g0[c[o+24>>2]&511](n,d)}else{g0[c[o+28>>2]&511](n,d)}d=n;o=n;l=a[o]|0;if((l&1)==0){p=d+1|0;q=p;r=p;s=n+8|0}else{p=n+8|0;q=c[p>>2]|0;r=d+1|0;s=p}p=e|0;d=n+4|0;t=q;u=l;while(1){if((u&1)==0){v=r}else{v=c[s>>2]|0}l=u&255;if((t|0)==(v+((l&1|0)==0?l>>>1:c[d>>2]|0)|0)){break}l=a[t]|0;w=c[p>>2]|0;do{if((w|0)!=0){x=w+24|0;y=c[x>>2]|0;if((y|0)!=(c[w+28>>2]|0)){c[x>>2]=y+1;a[y]=l;break}if((hx[c[(c[w>>2]|0)+52>>2]&127](w,l&255)|0)!=-1){break}c[p>>2]=0}}while(0);t=t+1|0;u=a[o]|0}c[b>>2]=c[p>>2];DM(n);i=j;return}}while(0);j=gJ(4)|0;Kr(j);eR(j|0,45560,458)}function F5(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;d=i;i=i+80|0;j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=d|0;k=d+8|0;l=d+24|0;m=d+48|0;n=d+56|0;o=d+64|0;p=d+72|0;q=j|0;a[q]=a[26592]|0;a[q+1|0]=a[26593]|0;a[q+2|0]=a[26594]|0;a[q+3|0]=a[26595]|0;a[q+4|0]=a[26596]|0;a[q+5|0]=a[26597]|0;r=j+1|0;s=f+4|0;t=c[s>>2]|0;if((t&2048|0)==0){u=r}else{a[r]=43;u=j+2|0}if((t&512|0)==0){v=u}else{a[u]=35;v=u+1|0}a[v]=108;u=v+1|0;v=t&74;do{if((v|0)==64){a[u]=111}else if((v|0)==8){if((t&16384|0)==0){a[u]=120;break}else{a[u]=88;break}}else{a[u]=100}}while(0);u=k|0;do{if((a[55400]|0)==0){if((bN(55400)|0)==0){break}c[13026]=fM(2147483647,22888,0)|0}}while(0);t=F6(u,12,c[13026]|0,q,(q=i,i=i+8|0,c[q>>2]=h,q)|0)|0;i=q;q=k+t|0;h=c[s>>2]&176;do{if((h|0)==16){s=a[u]|0;if((s<<24>>24|0)==45|(s<<24>>24|0)==43){w=k+1|0;break}if(!((t|0)>1&s<<24>>24==48)){x=22;break}s=a[k+1|0]|0;if(!((s<<24>>24|0)==120|(s<<24>>24|0)==88)){x=22;break}w=k+2|0}else if((h|0)==32){w=q}else{x=22}}while(0);if((x|0)==22){w=u}x=l|0;D5(o,f);F7(u,w,q,x,m,n,o);Dn(c[o>>2]|0)|0;c[p>>2]=c[e>>2];ip(b,p,x,c[m>>2]|0,c[n>>2]|0,f,g);i=d;return}function F6(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0;g=i;i=i+16|0;h=g|0;j=h;c[j>>2]=f;c[j+4>>2]=0;j=gt(d|0)|0;d=dI(a|0,b|0,e|0,h|0)|0;if((j|0)==0){i=g;return d|0}gt(j|0)|0;i=g;return d|0}function F7(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0;l=i;i=i+48|0;m=l|0;n=l+16|0;o=l+32|0;p=k|0;k=c[p>>2]|0;if((c[13666]|0)!=-1){c[n>>2]=54664;c[n+4>>2]=32;c[n+8>>2]=0;DH(54664,n,286)}n=(c[13667]|0)-1|0;q=c[k+8>>2]|0;if((c[k+12>>2]|0)-q>>2>>>0<=n>>>0){r=gJ(4)|0;s=r;Kr(s);eR(r|0,45560,458)}k=c[q+(n<<2)>>2]|0;if((k|0)==0){r=gJ(4)|0;s=r;Kr(s);eR(r|0,45560,458)}r=k;s=c[p>>2]|0;if((c[13570]|0)!=-1){c[m>>2]=54280;c[m+4>>2]=32;c[m+8>>2]=0;DH(54280,m,286)}m=(c[13571]|0)-1|0;p=c[s+8>>2]|0;if((c[s+12>>2]|0)-p>>2>>>0<=m>>>0){t=gJ(4)|0;u=t;Kr(u);eR(t|0,45560,458)}s=c[p+(m<<2)>>2]|0;if((s|0)==0){t=gJ(4)|0;u=t;Kr(u);eR(t|0,45560,458)}t=s;g0[c[(c[s>>2]|0)+20>>2]&511](o,t);u=o;m=o;p=d[m]|0;if((p&1|0)==0){v=p>>>1}else{v=c[o+4>>2]|0}do{if((v|0)==0){hD[c[(c[k>>2]|0)+32>>2]&63](r,b,f,g)|0;c[j>>2]=g+(f-b)}else{c[j>>2]=g;p=a[b]|0;if((p<<24>>24|0)==45|(p<<24>>24|0)==43){n=hx[c[(c[k>>2]|0)+28>>2]&127](r,p)|0;p=c[j>>2]|0;c[j>>2]=p+1;a[p]=n;w=b+1|0}else{w=b}do{if((f-w|0)>1){if((a[w]|0)!=48){x=w;break}n=w+1|0;p=a[n]|0;if(!((p<<24>>24|0)==120|(p<<24>>24|0)==88)){x=w;break}p=k;q=hx[c[(c[p>>2]|0)+28>>2]&127](r,48)|0;y=c[j>>2]|0;c[j>>2]=y+1;a[y]=q;q=hx[c[(c[p>>2]|0)+28>>2]&127](r,a[n]|0)|0;n=c[j>>2]|0;c[j>>2]=n+1;a[n]=q;x=w+2|0}else{x=w}}while(0);do{if((x|0)!=(f|0)){q=f-1|0;if(x>>>0<q>>>0){z=x;A=q}else{break}do{q=a[z]|0;a[z]=a[A]|0;a[A]=q;z=z+1|0;A=A-1|0;}while(z>>>0<A>>>0)}}while(0);q=g3[c[(c[s>>2]|0)+16>>2]&511](t)|0;if(x>>>0<f>>>0){n=u+1|0;p=k;y=o+4|0;B=o+8|0;C=0;D=0;E=x;while(1){F=(a[m]&1)==0;do{if((a[(F?n:c[B>>2]|0)+D|0]|0)==0){G=D;H=C}else{if((C|0)!=(a[(F?n:c[B>>2]|0)+D|0]|0)){G=D;H=C;break}I=c[j>>2]|0;c[j>>2]=I+1;a[I]=q;I=d[m]|0;G=(D>>>0<(((I&1|0)==0?I>>>1:c[y>>2]|0)-1|0)>>>0)+D|0;H=0}}while(0);F=hx[c[(c[p>>2]|0)+28>>2]&127](r,a[E]|0)|0;I=c[j>>2]|0;c[j>>2]=I+1;a[I]=F;F=E+1|0;if(F>>>0<f>>>0){C=H+1|0;D=G;E=F}else{break}}}E=g+(x-b)|0;D=c[j>>2]|0;if((E|0)==(D|0)){break}C=D-1|0;if(E>>>0<C>>>0){J=E;K=C}else{break}do{C=a[J]|0;a[J]=a[K]|0;a[K]=C;J=J+1|0;K=K-1|0;}while(J>>>0<K>>>0)}}while(0);if((e|0)==(f|0)){L=c[j>>2]|0;c[h>>2]=L;DM(o);i=l;return}else{L=g+(e-b)|0;c[h>>2]=L;DM(o);i=l;return}}function F8(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;d=i;i=i+112|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=d|0;l=d+8|0;m=d+32|0;n=d+80|0;o=d+88|0;p=d+96|0;q=d+104|0;c[k>>2]=37;c[k+4>>2]=0;r=k;k=r+1|0;s=f+4|0;t=c[s>>2]|0;if((t&2048|0)==0){u=k}else{a[k]=43;u=r+2|0}if((t&512|0)==0){v=u}else{a[u]=35;v=u+1|0}a[v]=108;a[v+1|0]=108;u=v+2|0;v=t&74;do{if((v|0)==64){a[u]=111}else if((v|0)==8){if((t&16384|0)==0){a[u]=120;break}else{a[u]=88;break}}else{a[u]=100}}while(0);u=l|0;do{if((a[55400]|0)==0){if((bN(55400)|0)==0){break}c[13026]=fM(2147483647,22888,0)|0}}while(0);t=F6(u,22,c[13026]|0,r,(r=i,i=i+16|0,c[r>>2]=h,c[r+8>>2]=j,r)|0)|0;i=r;r=l+t|0;j=c[s>>2]&176;do{if((j|0)==32){w=r}else if((j|0)==16){s=a[u]|0;if((s<<24>>24|0)==45|(s<<24>>24|0)==43){w=l+1|0;break}if(!((t|0)>1&s<<24>>24==48)){x=22;break}s=a[l+1|0]|0;if(!((s<<24>>24|0)==120|(s<<24>>24|0)==88)){x=22;break}w=l+2|0}else{x=22}}while(0);if((x|0)==22){w=u}x=m|0;D5(p,f);F7(u,w,r,x,n,o,p);Dn(c[p>>2]|0)|0;c[q>>2]=c[e>>2];ip(b,q,x,c[n>>2]|0,c[o>>2]|0,f,g);i=d;return}function F9(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;d=i;i=i+80|0;j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=d|0;k=d+8|0;l=d+24|0;m=d+48|0;n=d+56|0;o=d+64|0;p=d+72|0;q=j|0;a[q]=a[26592]|0;a[q+1|0]=a[26593]|0;a[q+2|0]=a[26594]|0;a[q+3|0]=a[26595]|0;a[q+4|0]=a[26596]|0;a[q+5|0]=a[26597]|0;r=j+1|0;s=f+4|0;t=c[s>>2]|0;if((t&2048|0)==0){u=r}else{a[r]=43;u=j+2|0}if((t&512|0)==0){v=u}else{a[u]=35;v=u+1|0}a[v]=108;u=v+1|0;v=t&74;do{if((v|0)==64){a[u]=111}else if((v|0)==8){if((t&16384|0)==0){a[u]=120;break}else{a[u]=88;break}}else{a[u]=117}}while(0);u=k|0;do{if((a[55400]|0)==0){if((bN(55400)|0)==0){break}c[13026]=fM(2147483647,22888,0)|0}}while(0);t=F6(u,12,c[13026]|0,q,(q=i,i=i+8|0,c[q>>2]=h,q)|0)|0;i=q;q=k+t|0;h=c[s>>2]&176;do{if((h|0)==16){s=a[u]|0;if((s<<24>>24|0)==45|(s<<24>>24|0)==43){w=k+1|0;break}if(!((t|0)>1&s<<24>>24==48)){x=22;break}s=a[k+1|0]|0;if(!((s<<24>>24|0)==120|(s<<24>>24|0)==88)){x=22;break}w=k+2|0}else if((h|0)==32){w=q}else{x=22}}while(0);if((x|0)==22){w=u}x=l|0;D5(o,f);F7(u,w,q,x,m,n,o);Dn(c[o>>2]|0)|0;c[p>>2]=c[e>>2];ip(b,p,x,c[m>>2]|0,c[n>>2]|0,f,g);i=d;return}function Ga(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;d=i;i=i+112|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=d|0;l=d+8|0;m=d+32|0;n=d+80|0;o=d+88|0;p=d+96|0;q=d+104|0;c[k>>2]=37;c[k+4>>2]=0;r=k;k=r+1|0;s=f+4|0;t=c[s>>2]|0;if((t&2048|0)==0){u=k}else{a[k]=43;u=r+2|0}if((t&512|0)==0){v=u}else{a[u]=35;v=u+1|0}a[v]=108;a[v+1|0]=108;u=v+2|0;v=t&74;do{if((v|0)==64){a[u]=111}else if((v|0)==8){if((t&16384|0)==0){a[u]=120;break}else{a[u]=88;break}}else{a[u]=117}}while(0);u=l|0;do{if((a[55400]|0)==0){if((bN(55400)|0)==0){break}c[13026]=fM(2147483647,22888,0)|0}}while(0);t=F6(u,23,c[13026]|0,r,(r=i,i=i+16|0,c[r>>2]=h,c[r+8>>2]=j,r)|0)|0;i=r;r=l+t|0;j=c[s>>2]&176;do{if((j|0)==32){w=r}else if((j|0)==16){s=a[u]|0;if((s<<24>>24|0)==45|(s<<24>>24|0)==43){w=l+1|0;break}if(!((t|0)>1&s<<24>>24==48)){x=22;break}s=a[l+1|0]|0;if(!((s<<24>>24|0)==120|(s<<24>>24|0)==88)){x=22;break}w=l+2|0}else{x=22}}while(0);if((x|0)==22){w=u}x=m|0;D5(p,f);F7(u,w,r,x,n,o,p);Dn(c[p>>2]|0)|0;c[q>>2]=c[e>>2];ip(b,q,x,c[n>>2]|0,c[o>>2]|0,f,g);i=d;return}function Gb(b,d,e,f,g,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;j=+j;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;d=i;i=i+152|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=d|0;l=d+8|0;m=d+40|0;n=d+48|0;o=d+112|0;p=d+120|0;q=d+128|0;r=d+136|0;s=d+144|0;c[k>>2]=37;c[k+4>>2]=0;t=k;k=t+1|0;u=f+4|0;v=c[u>>2]|0;if((v&2048|0)==0){w=k}else{a[k]=43;w=t+2|0}if((v&1024|0)==0){x=w}else{a[w]=35;x=w+1|0}w=v&260;k=v>>>14;do{if((w|0)==260){if((k&1|0)==0){a[x]=97;y=0;break}else{a[x]=65;y=0;break}}else{a[x]=46;v=x+2|0;a[x+1|0]=42;if((w|0)==4){if((k&1|0)==0){a[v]=102;y=1;break}else{a[v]=70;y=1;break}}else if((w|0)==256){if((k&1|0)==0){a[v]=101;y=1;break}else{a[v]=69;y=1;break}}else{if((k&1|0)==0){a[v]=103;y=1;break}else{a[v]=71;y=1;break}}}}while(0);k=l|0;c[m>>2]=k;do{if((a[55400]|0)==0){if((bN(55400)|0)==0){break}c[13026]=fM(2147483647,22888,0)|0}}while(0);l=c[13026]|0;if(y){w=F6(k,30,l,t,(z=i,i=i+16|0,c[z>>2]=c[f+8>>2],h[z+8>>3]=j,z)|0)|0;i=z;A=w}else{w=F6(k,30,l,t,(z=i,i=i+8|0,h[z>>3]=j,z)|0)|0;i=z;A=w}do{if((A|0)>29){w=(a[55400]|0)==0;if(y){do{if(w){if((bN(55400)|0)==0){break}c[13026]=fM(2147483647,22888,0)|0}}while(0);l=Gc(m,c[13026]|0,t,(z=i,i=i+16|0,c[z>>2]=c[f+8>>2],h[z+8>>3]=j,z)|0)|0;i=z;B=l}else{do{if(w){if((bN(55400)|0)==0){break}c[13026]=fM(2147483647,22888,0)|0}}while(0);w=Gc(m,c[13026]|0,t,(z=i,i=i+16|0,c[z>>2]=c[f+8>>2],h[z+8>>3]=j,z)|0)|0;i=z;B=w}w=c[m>>2]|0;if((w|0)!=0){C=B;D=w;E=w;break}KZ();w=c[m>>2]|0;C=B;D=w;E=w}else{C=A;D=0;E=c[m>>2]|0}}while(0);A=E+C|0;B=c[u>>2]&176;do{if((B|0)==32){F=A}else if((B|0)==16){u=a[E]|0;if((u<<24>>24|0)==45|(u<<24>>24|0)==43){F=E+1|0;break}if(!((C|0)>1&u<<24>>24==48)){G=53;break}u=a[E+1|0]|0;if(!((u<<24>>24|0)==120|(u<<24>>24|0)==88)){G=53;break}F=E+2|0}else{G=53}}while(0);if((G|0)==53){F=E}do{if((E|0)==(k|0)){H=n|0;I=0;J=k}else{G=KM(C<<1)|0;if((G|0)!=0){H=G;I=G;J=E;break}KZ();H=0;I=0;J=c[m>>2]|0}}while(0);D5(q,f);Gd(J,F,A,H,o,p,q);Dn(c[q>>2]|0)|0;q=e|0;c[s>>2]=c[q>>2];ip(r,s,H,c[o>>2]|0,c[p>>2]|0,f,g);g=c[r>>2]|0;c[q>>2]=g;c[b>>2]=g;if((I|0)!=0){KN(I)}if((D|0)==0){i=d;return}KN(D);i=d;return}function Gc(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=i;i=i+16|0;g=f|0;h=g;c[h>>2]=e;c[h+4>>2]=0;h=gt(b|0)|0;b=cD(a|0,d|0,g|0)|0;if((h|0)==0){i=f;return b|0}gt(h|0)|0;i=f;return b|0}function Gd(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0;l=i;i=i+48|0;m=l|0;n=l+16|0;o=l+32|0;p=k|0;k=c[p>>2]|0;if((c[13666]|0)!=-1){c[n>>2]=54664;c[n+4>>2]=32;c[n+8>>2]=0;DH(54664,n,286)}n=(c[13667]|0)-1|0;q=c[k+8>>2]|0;if((c[k+12>>2]|0)-q>>2>>>0<=n>>>0){r=gJ(4)|0;s=r;Kr(s);eR(r|0,45560,458)}k=c[q+(n<<2)>>2]|0;if((k|0)==0){r=gJ(4)|0;s=r;Kr(s);eR(r|0,45560,458)}r=k;s=c[p>>2]|0;if((c[13570]|0)!=-1){c[m>>2]=54280;c[m+4>>2]=32;c[m+8>>2]=0;DH(54280,m,286)}m=(c[13571]|0)-1|0;p=c[s+8>>2]|0;if((c[s+12>>2]|0)-p>>2>>>0<=m>>>0){t=gJ(4)|0;u=t;Kr(u);eR(t|0,45560,458)}s=c[p+(m<<2)>>2]|0;if((s|0)==0){t=gJ(4)|0;u=t;Kr(u);eR(t|0,45560,458)}t=s;g0[c[(c[s>>2]|0)+20>>2]&511](o,t);c[j>>2]=g;u=a[b]|0;if((u<<24>>24|0)==45|(u<<24>>24|0)==43){m=hx[c[(c[k>>2]|0)+28>>2]&127](r,u)|0;u=c[j>>2]|0;c[j>>2]=u+1;a[u]=m;v=b+1|0}else{v=b}m=f;L23:do{if((m-v|0)>1){if((a[v]|0)!=48){w=v;x=34;break}u=v+1|0;p=a[u]|0;if(!((p<<24>>24|0)==120|(p<<24>>24|0)==88)){w=v;x=34;break}p=k;n=hx[c[(c[p>>2]|0)+28>>2]&127](r,48)|0;q=c[j>>2]|0;c[j>>2]=q+1;a[q]=n;n=v+2|0;q=hx[c[(c[p>>2]|0)+28>>2]&127](r,a[u]|0)|0;u=c[j>>2]|0;c[j>>2]=u+1;a[u]=q;q=n;while(1){if(q>>>0>=f>>>0){y=q;z=n;break L23}u=a[q]|0;do{if((a[55400]|0)==0){if((bN(55400)|0)==0){break}c[13026]=fM(2147483647,22888,0)|0}}while(0);if((bi(u<<24>>24|0,c[13026]|0)|0)==0){y=q;z=n;break}else{q=q+1|0}}}else{w=v;x=34}}while(0);L38:do{if((x|0)==34){while(1){x=0;if(w>>>0>=f>>>0){y=w;z=v;break L38}q=a[w]|0;do{if((a[55400]|0)==0){if((bN(55400)|0)==0){break}c[13026]=fM(2147483647,22888,0)|0}}while(0);if((gF(q<<24>>24|0,c[13026]|0)|0)==0){y=w;z=v;break}else{w=w+1|0;x=34}}}}while(0);x=o;w=o;v=d[w]|0;if((v&1|0)==0){A=v>>>1}else{A=c[o+4>>2]|0}do{if((A|0)==0){hD[c[(c[k>>2]|0)+32>>2]&63](r,z,y,c[j>>2]|0)|0;c[j>>2]=(c[j>>2]|0)+(y-z)}else{do{if((z|0)!=(y|0)){v=y-1|0;if(z>>>0<v>>>0){B=z;C=v}else{break}do{v=a[B]|0;a[B]=a[C]|0;a[C]=v;B=B+1|0;C=C-1|0;}while(B>>>0<C>>>0)}}while(0);q=g3[c[(c[s>>2]|0)+16>>2]&511](t)|0;if(z>>>0<y>>>0){v=x+1|0;u=o+4|0;n=o+8|0;p=k;D=0;E=0;F=z;while(1){G=(a[w]&1)==0;do{if((a[(G?v:c[n>>2]|0)+E|0]|0)>0){if((D|0)!=(a[(G?v:c[n>>2]|0)+E|0]|0)){H=E;I=D;break}J=c[j>>2]|0;c[j>>2]=J+1;a[J]=q;J=d[w]|0;H=(E>>>0<(((J&1|0)==0?J>>>1:c[u>>2]|0)-1|0)>>>0)+E|0;I=0}else{H=E;I=D}}while(0);G=hx[c[(c[p>>2]|0)+28>>2]&127](r,a[F]|0)|0;J=c[j>>2]|0;c[j>>2]=J+1;a[J]=G;G=F+1|0;if(G>>>0<y>>>0){D=I+1|0;E=H;F=G}else{break}}}F=g+(z-b)|0;E=c[j>>2]|0;if((F|0)==(E|0)){break}D=E-1|0;if(F>>>0<D>>>0){K=F;L=D}else{break}do{D=a[K]|0;a[K]=a[L]|0;a[L]=D;K=K+1|0;L=L-1|0;}while(K>>>0<L>>>0)}}while(0);L77:do{if(y>>>0<f>>>0){L=k;K=y;while(1){z=a[K]|0;if(z<<24>>24==46){break}H=hx[c[(c[L>>2]|0)+28>>2]&127](r,z)|0;z=c[j>>2]|0;c[j>>2]=z+1;a[z]=H;H=K+1|0;if(H>>>0<f>>>0){K=H}else{M=H;break L77}}L=g3[c[(c[s>>2]|0)+12>>2]&511](t)|0;H=c[j>>2]|0;c[j>>2]=H+1;a[H]=L;M=K+1|0}else{M=y}}while(0);hD[c[(c[k>>2]|0)+32>>2]&63](r,M,f,c[j>>2]|0)|0;r=(c[j>>2]|0)+(m-M)|0;c[j>>2]=r;if((e|0)==(f|0)){N=r;c[h>>2]=N;DM(o);i=l;return}N=g+(e-b)|0;c[h>>2]=N;DM(o);i=l;return}function Ge(b,d,e,f,g,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;j=+j;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;d=i;i=i+152|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=d|0;l=d+8|0;m=d+40|0;n=d+48|0;o=d+112|0;p=d+120|0;q=d+128|0;r=d+136|0;s=d+144|0;c[k>>2]=37;c[k+4>>2]=0;t=k;k=t+1|0;u=f+4|0;v=c[u>>2]|0;if((v&2048|0)==0){w=k}else{a[k]=43;w=t+2|0}if((v&1024|0)==0){x=w}else{a[w]=35;x=w+1|0}w=v&260;k=v>>>14;do{if((w|0)==260){a[x]=76;v=x+1|0;if((k&1|0)==0){a[v]=97;y=0;break}else{a[v]=65;y=0;break}}else{a[x]=46;a[x+1|0]=42;a[x+2|0]=76;v=x+3|0;if((w|0)==256){if((k&1|0)==0){a[v]=101;y=1;break}else{a[v]=69;y=1;break}}else if((w|0)==4){if((k&1|0)==0){a[v]=102;y=1;break}else{a[v]=70;y=1;break}}else{if((k&1|0)==0){a[v]=103;y=1;break}else{a[v]=71;y=1;break}}}}while(0);k=l|0;c[m>>2]=k;do{if((a[55400]|0)==0){if((bN(55400)|0)==0){break}c[13026]=fM(2147483647,22888,0)|0}}while(0);l=c[13026]|0;if(y){w=F6(k,30,l,t,(z=i,i=i+16|0,c[z>>2]=c[f+8>>2],h[z+8>>3]=j,z)|0)|0;i=z;A=w}else{w=F6(k,30,l,t,(z=i,i=i+8|0,h[z>>3]=j,z)|0)|0;i=z;A=w}do{if((A|0)>29){w=(a[55400]|0)==0;if(y){do{if(w){if((bN(55400)|0)==0){break}c[13026]=fM(2147483647,22888,0)|0}}while(0);l=Gc(m,c[13026]|0,t,(z=i,i=i+16|0,c[z>>2]=c[f+8>>2],h[z+8>>3]=j,z)|0)|0;i=z;B=l}else{do{if(w){if((bN(55400)|0)==0){break}c[13026]=fM(2147483647,22888,0)|0}}while(0);w=Gc(m,c[13026]|0,t,(z=i,i=i+8|0,h[z>>3]=j,z)|0)|0;i=z;B=w}w=c[m>>2]|0;if((w|0)!=0){C=B;D=w;E=w;break}KZ();w=c[m>>2]|0;C=B;D=w;E=w}else{C=A;D=0;E=c[m>>2]|0}}while(0);A=E+C|0;B=c[u>>2]&176;do{if((B|0)==16){u=a[E]|0;if((u<<24>>24|0)==45|(u<<24>>24|0)==43){F=E+1|0;break}if(!((C|0)>1&u<<24>>24==48)){G=53;break}u=a[E+1|0]|0;if(!((u<<24>>24|0)==120|(u<<24>>24|0)==88)){G=53;break}F=E+2|0}else if((B|0)==32){F=A}else{G=53}}while(0);if((G|0)==53){F=E}do{if((E|0)==(k|0)){H=n|0;I=0;J=k}else{G=KM(C<<1)|0;if((G|0)!=0){H=G;I=G;J=E;break}KZ();H=0;I=0;J=c[m>>2]|0}}while(0);D5(q,f);Gd(J,F,A,H,o,p,q);Dn(c[q>>2]|0)|0;q=e|0;c[s>>2]=c[q>>2];ip(r,s,H,c[o>>2]|0,c[p>>2]|0,f,g);g=c[r>>2]|0;c[q>>2]=g;c[b>>2]=g;if((I|0)!=0){KN(I)}if((D|0)==0){i=d;return}KN(D);i=d;return}function Gf(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;d=i;i=i+104|0;j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=d|0;k=d+24|0;l=d+48|0;m=d+88|0;n=d+96|0;o=d+16|0;a[o]=a[26600]|0;a[o+1|0]=a[26601]|0;a[o+2|0]=a[26602]|0;a[o+3|0]=a[26603]|0;a[o+4|0]=a[26604]|0;a[o+5|0]=a[26605]|0;p=k|0;do{if((a[55400]|0)==0){if((bN(55400)|0)==0){break}c[13026]=fM(2147483647,22888,0)|0}}while(0);q=F6(p,20,c[13026]|0,o,(o=i,i=i+8|0,c[o>>2]=h,o)|0)|0;i=o;o=k+q|0;h=c[f+4>>2]&176;do{if((h|0)==32){r=o}else if((h|0)==16){s=a[p]|0;if((s<<24>>24|0)==45|(s<<24>>24|0)==43){r=k+1|0;break}if(!((q|0)>1&s<<24>>24==48)){t=12;break}s=a[k+1|0]|0;if(!((s<<24>>24|0)==120|(s<<24>>24|0)==88)){t=12;break}r=k+2|0}else{t=12}}while(0);if((t|0)==12){r=p}D5(m,f);t=m|0;m=c[t>>2]|0;if((c[13666]|0)!=-1){c[j>>2]=54664;c[j+4>>2]=32;c[j+8>>2]=0;DH(54664,j,286)}j=(c[13667]|0)-1|0;h=c[m+8>>2]|0;do{if((c[m+12>>2]|0)-h>>2>>>0>j>>>0){s=c[h+(j<<2)>>2]|0;if((s|0)==0){break}Dn(c[t>>2]|0)|0;u=l|0;hD[c[(c[s>>2]|0)+32>>2]&63](s,p,o,u)|0;s=l+q|0;if((r|0)==(o|0)){v=s;w=e|0;x=c[w>>2]|0;y=n|0;c[y>>2]=x;ip(b,n,u,v,s,f,g);i=d;return}v=l+(r-k)|0;w=e|0;x=c[w>>2]|0;y=n|0;c[y>>2]=x;ip(b,n,u,v,s,f,g);i=d;return}}while(0);d=gJ(4)|0;Kr(d);eR(d|0,45560,458)}function Gg(a){a=a|0;Dl(a|0);KU(a);return}function Gh(a){a=a|0;Dl(a|0);return}function Gi(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;j=i;i=i+48|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=j|0;l=j+16|0;m=j+24|0;n=j+32|0;if((c[f+4>>2]&1|0)==0){o=c[(c[d>>2]|0)+24>>2]|0;c[l>>2]=c[e>>2];hk[o&63](b,d,l,f,g,h&1);i=j;return}D5(m,f);f=m|0;m=c[f>>2]|0;if((c[13568]|0)!=-1){c[k>>2]=54272;c[k+4>>2]=32;c[k+8>>2]=0;DH(54272,k,286)}k=(c[13569]|0)-1|0;g=c[m+8>>2]|0;do{if((c[m+12>>2]|0)-g>>2>>>0>k>>>0){l=c[g+(k<<2)>>2]|0;if((l|0)==0){break}d=l;Dn(c[f>>2]|0)|0;o=c[l>>2]|0;if(h){g0[c[o+24>>2]&511](n,d)}else{g0[c[o+28>>2]&511](n,d)}d=n;o=a[d]|0;if((o&1)==0){l=n+4|0;p=l;q=l;r=n+8|0}else{l=n+8|0;p=c[l>>2]|0;q=n+4|0;r=l}l=e|0;s=p;t=o;while(1){if((t&1)==0){u=q}else{u=c[r>>2]|0}o=t&255;if((o&1|0)==0){v=o>>>1}else{v=c[q>>2]|0}if((s|0)==(u+(v<<2)|0)){break}o=c[s>>2]|0;w=c[l>>2]|0;do{if((w|0)!=0){x=w+24|0;y=c[x>>2]|0;if((y|0)==(c[w+28>>2]|0)){z=hx[c[(c[w>>2]|0)+52>>2]&127](w,o)|0}else{c[x>>2]=y+4;c[y>>2]=o;z=o}if((z|0)!=-1){break}c[l>>2]=0}}while(0);s=s+4|0;t=a[d]|0}c[b>>2]=c[l>>2];DY(n);i=j;return}}while(0);j=gJ(4)|0;Kr(j);eR(j|0,45560,458)}function Gj(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;d=i;i=i+144|0;j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=d|0;k=d+8|0;l=d+24|0;m=d+112|0;n=d+120|0;o=d+128|0;p=d+136|0;q=j|0;a[q]=a[26592]|0;a[q+1|0]=a[26593]|0;a[q+2|0]=a[26594]|0;a[q+3|0]=a[26595]|0;a[q+4|0]=a[26596]|0;a[q+5|0]=a[26597]|0;r=j+1|0;s=f+4|0;t=c[s>>2]|0;if((t&2048|0)==0){u=r}else{a[r]=43;u=j+2|0}if((t&512|0)==0){v=u}else{a[u]=35;v=u+1|0}a[v]=108;u=v+1|0;v=t&74;do{if((v|0)==64){a[u]=111}else if((v|0)==8){if((t&16384|0)==0){a[u]=120;break}else{a[u]=88;break}}else{a[u]=100}}while(0);u=k|0;do{if((a[55400]|0)==0){if((bN(55400)|0)==0){break}c[13026]=fM(2147483647,22888,0)|0}}while(0);t=F6(u,12,c[13026]|0,q,(q=i,i=i+8|0,c[q>>2]=h,q)|0)|0;i=q;q=k+t|0;h=c[s>>2]&176;do{if((h|0)==16){s=a[u]|0;if((s<<24>>24|0)==45|(s<<24>>24|0)==43){w=k+1|0;break}if(!((t|0)>1&s<<24>>24==48)){x=22;break}s=a[k+1|0]|0;if(!((s<<24>>24|0)==120|(s<<24>>24|0)==88)){x=22;break}w=k+2|0}else if((h|0)==32){w=q}else{x=22}}while(0);if((x|0)==22){w=u}x=l|0;D5(o,f);Gk(u,w,q,x,m,n,o);Dn(c[o>>2]|0)|0;c[p>>2]=c[e>>2];Gl(b,p,x,c[m>>2]|0,c[n>>2]|0,f,g);i=d;return}function Gk(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0;l=i;i=i+48|0;m=l|0;n=l+16|0;o=l+32|0;p=k|0;k=c[p>>2]|0;if((c[13664]|0)!=-1){c[n>>2]=54656;c[n+4>>2]=32;c[n+8>>2]=0;DH(54656,n,286)}n=(c[13665]|0)-1|0;q=c[k+8>>2]|0;if((c[k+12>>2]|0)-q>>2>>>0<=n>>>0){r=gJ(4)|0;s=r;Kr(s);eR(r|0,45560,458)}k=c[q+(n<<2)>>2]|0;if((k|0)==0){r=gJ(4)|0;s=r;Kr(s);eR(r|0,45560,458)}r=k;s=c[p>>2]|0;if((c[13568]|0)!=-1){c[m>>2]=54272;c[m+4>>2]=32;c[m+8>>2]=0;DH(54272,m,286)}m=(c[13569]|0)-1|0;p=c[s+8>>2]|0;if((c[s+12>>2]|0)-p>>2>>>0<=m>>>0){t=gJ(4)|0;u=t;Kr(u);eR(t|0,45560,458)}s=c[p+(m<<2)>>2]|0;if((s|0)==0){t=gJ(4)|0;u=t;Kr(u);eR(t|0,45560,458)}t=s;g0[c[(c[s>>2]|0)+20>>2]&511](o,t);u=o;m=o;p=d[m]|0;if((p&1|0)==0){v=p>>>1}else{v=c[o+4>>2]|0}do{if((v|0)==0){hD[c[(c[k>>2]|0)+48>>2]&63](r,b,f,g)|0;c[j>>2]=g+(f-b<<2)}else{c[j>>2]=g;p=a[b]|0;if((p<<24>>24|0)==45|(p<<24>>24|0)==43){n=hx[c[(c[k>>2]|0)+44>>2]&127](r,p)|0;p=c[j>>2]|0;c[j>>2]=p+4;c[p>>2]=n;w=b+1|0}else{w=b}do{if((f-w|0)>1){if((a[w]|0)!=48){x=w;break}n=w+1|0;p=a[n]|0;if(!((p<<24>>24|0)==120|(p<<24>>24|0)==88)){x=w;break}p=k;q=hx[c[(c[p>>2]|0)+44>>2]&127](r,48)|0;y=c[j>>2]|0;c[j>>2]=y+4;c[y>>2]=q;q=hx[c[(c[p>>2]|0)+44>>2]&127](r,a[n]|0)|0;n=c[j>>2]|0;c[j>>2]=n+4;c[n>>2]=q;x=w+2|0}else{x=w}}while(0);do{if((x|0)!=(f|0)){q=f-1|0;if(x>>>0<q>>>0){z=x;A=q}else{break}do{q=a[z]|0;a[z]=a[A]|0;a[A]=q;z=z+1|0;A=A-1|0;}while(z>>>0<A>>>0)}}while(0);q=g3[c[(c[s>>2]|0)+16>>2]&511](t)|0;if(x>>>0<f>>>0){n=u+1|0;p=k;y=o+4|0;B=o+8|0;C=0;D=0;E=x;while(1){F=(a[m]&1)==0;do{if((a[(F?n:c[B>>2]|0)+D|0]|0)==0){G=D;H=C}else{if((C|0)!=(a[(F?n:c[B>>2]|0)+D|0]|0)){G=D;H=C;break}I=c[j>>2]|0;c[j>>2]=I+4;c[I>>2]=q;I=d[m]|0;G=(D>>>0<(((I&1|0)==0?I>>>1:c[y>>2]|0)-1|0)>>>0)+D|0;H=0}}while(0);F=hx[c[(c[p>>2]|0)+44>>2]&127](r,a[E]|0)|0;I=c[j>>2]|0;c[j>>2]=I+4;c[I>>2]=F;F=E+1|0;if(F>>>0<f>>>0){C=H+1|0;D=G;E=F}else{break}}}E=g+(x-b<<2)|0;D=c[j>>2]|0;if((E|0)==(D|0)){break}C=D-4|0;if(E>>>0<C>>>0){J=E;K=C}else{break}do{C=c[J>>2]|0;c[J>>2]=c[K>>2];c[K>>2]=C;J=J+4|0;K=K-4|0;}while(J>>>0<K>>>0)}}while(0);if((e|0)==(f|0)){L=c[j>>2]|0;c[h>>2]=L;DM(o);i=l;return}else{L=g+(e-b<<2)|0;c[h>>2]=L;DM(o);i=l;return}}function Gl(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;k=i;i=i+16|0;l=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[l>>2];l=k|0;m=d|0;d=c[m>>2]|0;if((d|0)==0){c[b>>2]=0;i=k;return}n=g;g=e;o=n-g>>2;p=h+12|0;h=c[p>>2]|0;q=(h|0)>(o|0)?h-o|0:0;o=f;h=o-g|0;g=h>>2;do{if((h|0)>0){if((hd[c[(c[d>>2]|0)+48>>2]&127](d,e,g)|0)==(g|0)){break}c[m>>2]=0;c[b>>2]=0;i=k;return}}while(0);do{if((q|0)>0){DX(l,q,j);if((a[l]&1)==0){r=l+4|0}else{r=c[l+8>>2]|0}if((hd[c[(c[d>>2]|0)+48>>2]&127](d,r,q)|0)==(q|0)){DY(l);break}c[m>>2]=0;c[b>>2]=0;DY(l);i=k;return}}while(0);l=n-o|0;o=l>>2;do{if((l|0)>0){if((hd[c[(c[d>>2]|0)+48>>2]&127](d,f,o)|0)==(o|0)){break}c[m>>2]=0;c[b>>2]=0;i=k;return}}while(0);c[p>>2]=0;c[b>>2]=d;i=k;return}function Gm(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;d=i;i=i+232|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=d|0;l=d+8|0;m=d+32|0;n=d+200|0;o=d+208|0;p=d+216|0;q=d+224|0;c[k>>2]=37;c[k+4>>2]=0;r=k;k=r+1|0;s=f+4|0;t=c[s>>2]|0;if((t&2048|0)==0){u=k}else{a[k]=43;u=r+2|0}if((t&512|0)==0){v=u}else{a[u]=35;v=u+1|0}a[v]=108;a[v+1|0]=108;u=v+2|0;v=t&74;do{if((v|0)==8){if((t&16384|0)==0){a[u]=120;break}else{a[u]=88;break}}else if((v|0)==64){a[u]=111}else{a[u]=100}}while(0);u=l|0;do{if((a[55400]|0)==0){if((bN(55400)|0)==0){break}c[13026]=fM(2147483647,22888,0)|0}}while(0);v=F6(u,22,c[13026]|0,r,(r=i,i=i+16|0,c[r>>2]=h,c[r+8>>2]=j,r)|0)|0;i=r;r=l+v|0;j=c[s>>2]&176;do{if((j|0)==16){s=a[u]|0;if((s<<24>>24|0)==45|(s<<24>>24|0)==43){w=l+1|0;break}if(!((v|0)>1&s<<24>>24==48)){x=22;break}s=a[l+1|0]|0;if(!((s<<24>>24|0)==120|(s<<24>>24|0)==88)){x=22;break}w=l+2|0}else if((j|0)==32){w=r}else{x=22}}while(0);if((x|0)==22){w=u}x=m|0;D5(p,f);Gk(u,w,r,x,n,o,p);Dn(c[p>>2]|0)|0;c[q>>2]=c[e>>2];Gl(b,q,x,c[n>>2]|0,c[o>>2]|0,f,g);i=d;return}function Gn(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;d=i;i=i+144|0;j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=d|0;k=d+8|0;l=d+24|0;m=d+112|0;n=d+120|0;o=d+128|0;p=d+136|0;q=j|0;a[q]=a[26592]|0;a[q+1|0]=a[26593]|0;a[q+2|0]=a[26594]|0;a[q+3|0]=a[26595]|0;a[q+4|0]=a[26596]|0;a[q+5|0]=a[26597]|0;r=j+1|0;s=f+4|0;t=c[s>>2]|0;if((t&2048|0)==0){u=r}else{a[r]=43;u=j+2|0}if((t&512|0)==0){v=u}else{a[u]=35;v=u+1|0}a[v]=108;u=v+1|0;v=t&74;do{if((v|0)==64){a[u]=111}else if((v|0)==8){if((t&16384|0)==0){a[u]=120;break}else{a[u]=88;break}}else{a[u]=117}}while(0);u=k|0;do{if((a[55400]|0)==0){if((bN(55400)|0)==0){break}c[13026]=fM(2147483647,22888,0)|0}}while(0);t=F6(u,12,c[13026]|0,q,(q=i,i=i+8|0,c[q>>2]=h,q)|0)|0;i=q;q=k+t|0;h=c[s>>2]&176;do{if((h|0)==32){w=q}else if((h|0)==16){s=a[u]|0;if((s<<24>>24|0)==45|(s<<24>>24|0)==43){w=k+1|0;break}if(!((t|0)>1&s<<24>>24==48)){x=22;break}s=a[k+1|0]|0;if(!((s<<24>>24|0)==120|(s<<24>>24|0)==88)){x=22;break}w=k+2|0}else{x=22}}while(0);if((x|0)==22){w=u}x=l|0;D5(o,f);Gk(u,w,q,x,m,n,o);Dn(c[o>>2]|0)|0;c[p>>2]=c[e>>2];Gl(b,p,x,c[m>>2]|0,c[n>>2]|0,f,g);i=d;return}function Go(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;d=i;i=i+240|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=d|0;l=d+8|0;m=d+32|0;n=d+208|0;o=d+216|0;p=d+224|0;q=d+232|0;c[k>>2]=37;c[k+4>>2]=0;r=k;k=r+1|0;s=f+4|0;t=c[s>>2]|0;if((t&2048|0)==0){u=k}else{a[k]=43;u=r+2|0}if((t&512|0)==0){v=u}else{a[u]=35;v=u+1|0}a[v]=108;a[v+1|0]=108;u=v+2|0;v=t&74;do{if((v|0)==8){if((t&16384|0)==0){a[u]=120;break}else{a[u]=88;break}}else if((v|0)==64){a[u]=111}else{a[u]=117}}while(0);u=l|0;do{if((a[55400]|0)==0){if((bN(55400)|0)==0){break}c[13026]=fM(2147483647,22888,0)|0}}while(0);v=F6(u,23,c[13026]|0,r,(r=i,i=i+16|0,c[r>>2]=h,c[r+8>>2]=j,r)|0)|0;i=r;r=l+v|0;j=c[s>>2]&176;do{if((j|0)==32){w=r}else if((j|0)==16){s=a[u]|0;if((s<<24>>24|0)==45|(s<<24>>24|0)==43){w=l+1|0;break}if(!((v|0)>1&s<<24>>24==48)){x=22;break}s=a[l+1|0]|0;if(!((s<<24>>24|0)==120|(s<<24>>24|0)==88)){x=22;break}w=l+2|0}else{x=22}}while(0);if((x|0)==22){w=u}x=m|0;D5(p,f);Gk(u,w,r,x,n,o,p);Dn(c[p>>2]|0)|0;c[q>>2]=c[e>>2];Gl(b,q,x,c[n>>2]|0,c[o>>2]|0,f,g);i=d;return}function Gp(b,d,e,f,g,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;j=+j;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;d=i;i=i+320|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=d|0;l=d+8|0;m=d+40|0;n=d+48|0;o=d+280|0;p=d+288|0;q=d+296|0;r=d+304|0;s=d+312|0;c[k>>2]=37;c[k+4>>2]=0;t=k;k=t+1|0;u=f+4|0;v=c[u>>2]|0;if((v&2048|0)==0){w=k}else{a[k]=43;w=t+2|0}if((v&1024|0)==0){x=w}else{a[w]=35;x=w+1|0}w=v&260;k=v>>>14;do{if((w|0)==260){if((k&1|0)==0){a[x]=97;y=0;break}else{a[x]=65;y=0;break}}else{a[x]=46;v=x+2|0;a[x+1|0]=42;if((w|0)==4){if((k&1|0)==0){a[v]=102;y=1;break}else{a[v]=70;y=1;break}}else if((w|0)==256){if((k&1|0)==0){a[v]=101;y=1;break}else{a[v]=69;y=1;break}}else{if((k&1|0)==0){a[v]=103;y=1;break}else{a[v]=71;y=1;break}}}}while(0);k=l|0;c[m>>2]=k;do{if((a[55400]|0)==0){if((bN(55400)|0)==0){break}c[13026]=fM(2147483647,22888,0)|0}}while(0);l=c[13026]|0;if(y){w=F6(k,30,l,t,(z=i,i=i+16|0,c[z>>2]=c[f+8>>2],h[z+8>>3]=j,z)|0)|0;i=z;A=w}else{w=F6(k,30,l,t,(z=i,i=i+8|0,h[z>>3]=j,z)|0)|0;i=z;A=w}do{if((A|0)>29){w=(a[55400]|0)==0;if(y){do{if(w){if((bN(55400)|0)==0){break}c[13026]=fM(2147483647,22888,0)|0}}while(0);l=Gc(m,c[13026]|0,t,(z=i,i=i+16|0,c[z>>2]=c[f+8>>2],h[z+8>>3]=j,z)|0)|0;i=z;B=l}else{do{if(w){if((bN(55400)|0)==0){break}c[13026]=fM(2147483647,22888,0)|0}}while(0);w=Gc(m,c[13026]|0,t,(z=i,i=i+16|0,c[z>>2]=c[f+8>>2],h[z+8>>3]=j,z)|0)|0;i=z;B=w}w=c[m>>2]|0;if((w|0)!=0){C=B;D=w;E=w;break}KZ();w=c[m>>2]|0;C=B;D=w;E=w}else{C=A;D=0;E=c[m>>2]|0}}while(0);A=E+C|0;B=c[u>>2]&176;do{if((B|0)==32){F=A}else if((B|0)==16){u=a[E]|0;if((u<<24>>24|0)==45|(u<<24>>24|0)==43){F=E+1|0;break}if(!((C|0)>1&u<<24>>24==48)){G=53;break}u=a[E+1|0]|0;if(!((u<<24>>24|0)==120|(u<<24>>24|0)==88)){G=53;break}F=E+2|0}else{G=53}}while(0);if((G|0)==53){F=E}do{if((E|0)==(k|0)){H=n|0;I=0;J=k}else{G=KM(C<<3)|0;B=G;if((G|0)!=0){H=B;I=B;J=E;break}KZ();H=B;I=B;J=c[m>>2]|0}}while(0);D5(q,f);Gq(J,F,A,H,o,p,q);Dn(c[q>>2]|0)|0;q=e|0;c[s>>2]=c[q>>2];Gl(r,s,H,c[o>>2]|0,c[p>>2]|0,f,g);g=c[r>>2]|0;c[q>>2]=g;c[b>>2]=g;if((I|0)!=0){KN(I)}if((D|0)==0){i=d;return}KN(D);i=d;return}function Gq(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0;l=i;i=i+48|0;m=l|0;n=l+16|0;o=l+32|0;p=k|0;k=c[p>>2]|0;if((c[13664]|0)!=-1){c[n>>2]=54656;c[n+4>>2]=32;c[n+8>>2]=0;DH(54656,n,286)}n=(c[13665]|0)-1|0;q=c[k+8>>2]|0;if((c[k+12>>2]|0)-q>>2>>>0<=n>>>0){r=gJ(4)|0;s=r;Kr(s);eR(r|0,45560,458)}k=c[q+(n<<2)>>2]|0;if((k|0)==0){r=gJ(4)|0;s=r;Kr(s);eR(r|0,45560,458)}r=k;s=c[p>>2]|0;if((c[13568]|0)!=-1){c[m>>2]=54272;c[m+4>>2]=32;c[m+8>>2]=0;DH(54272,m,286)}m=(c[13569]|0)-1|0;p=c[s+8>>2]|0;if((c[s+12>>2]|0)-p>>2>>>0<=m>>>0){t=gJ(4)|0;u=t;Kr(u);eR(t|0,45560,458)}s=c[p+(m<<2)>>2]|0;if((s|0)==0){t=gJ(4)|0;u=t;Kr(u);eR(t|0,45560,458)}t=s;g0[c[(c[s>>2]|0)+20>>2]&511](o,t);c[j>>2]=g;u=a[b]|0;if((u<<24>>24|0)==45|(u<<24>>24|0)==43){m=hx[c[(c[k>>2]|0)+44>>2]&127](r,u)|0;u=c[j>>2]|0;c[j>>2]=u+4;c[u>>2]=m;v=b+1|0}else{v=b}m=f;L23:do{if((m-v|0)>1){if((a[v]|0)!=48){w=v;x=34;break}u=v+1|0;p=a[u]|0;if(!((p<<24>>24|0)==120|(p<<24>>24|0)==88)){w=v;x=34;break}p=k;n=hx[c[(c[p>>2]|0)+44>>2]&127](r,48)|0;q=c[j>>2]|0;c[j>>2]=q+4;c[q>>2]=n;n=v+2|0;q=hx[c[(c[p>>2]|0)+44>>2]&127](r,a[u]|0)|0;u=c[j>>2]|0;c[j>>2]=u+4;c[u>>2]=q;q=n;while(1){if(q>>>0>=f>>>0){y=q;z=n;break L23}u=a[q]|0;do{if((a[55400]|0)==0){if((bN(55400)|0)==0){break}c[13026]=fM(2147483647,22888,0)|0}}while(0);if((bi(u<<24>>24|0,c[13026]|0)|0)==0){y=q;z=n;break}else{q=q+1|0}}}else{w=v;x=34}}while(0);L38:do{if((x|0)==34){while(1){x=0;if(w>>>0>=f>>>0){y=w;z=v;break L38}q=a[w]|0;do{if((a[55400]|0)==0){if((bN(55400)|0)==0){break}c[13026]=fM(2147483647,22888,0)|0}}while(0);if((gF(q<<24>>24|0,c[13026]|0)|0)==0){y=w;z=v;break}else{w=w+1|0;x=34}}}}while(0);x=o;w=o;v=d[w]|0;if((v&1|0)==0){A=v>>>1}else{A=c[o+4>>2]|0}do{if((A|0)==0){hD[c[(c[k>>2]|0)+48>>2]&63](r,z,y,c[j>>2]|0)|0;c[j>>2]=(c[j>>2]|0)+(y-z<<2)}else{do{if((z|0)!=(y|0)){v=y-1|0;if(z>>>0<v>>>0){B=z;C=v}else{break}do{v=a[B]|0;a[B]=a[C]|0;a[C]=v;B=B+1|0;C=C-1|0;}while(B>>>0<C>>>0)}}while(0);q=g3[c[(c[s>>2]|0)+16>>2]&511](t)|0;if(z>>>0<y>>>0){v=x+1|0;u=o+4|0;n=o+8|0;p=k;D=0;E=0;F=z;while(1){G=(a[w]&1)==0;do{if((a[(G?v:c[n>>2]|0)+E|0]|0)>0){if((D|0)!=(a[(G?v:c[n>>2]|0)+E|0]|0)){H=E;I=D;break}J=c[j>>2]|0;c[j>>2]=J+4;c[J>>2]=q;J=d[w]|0;H=(E>>>0<(((J&1|0)==0?J>>>1:c[u>>2]|0)-1|0)>>>0)+E|0;I=0}else{H=E;I=D}}while(0);G=hx[c[(c[p>>2]|0)+44>>2]&127](r,a[F]|0)|0;J=c[j>>2]|0;c[j>>2]=J+4;c[J>>2]=G;G=F+1|0;if(G>>>0<y>>>0){D=I+1|0;E=H;F=G}else{break}}}F=g+(z-b<<2)|0;E=c[j>>2]|0;if((F|0)==(E|0)){break}D=E-4|0;if(F>>>0<D>>>0){K=F;L=D}else{break}do{D=c[K>>2]|0;c[K>>2]=c[L>>2];c[L>>2]=D;K=K+4|0;L=L-4|0;}while(K>>>0<L>>>0)}}while(0);L77:do{if(y>>>0<f>>>0){L=k;K=y;while(1){z=a[K]|0;if(z<<24>>24==46){break}H=hx[c[(c[L>>2]|0)+44>>2]&127](r,z)|0;z=c[j>>2]|0;c[j>>2]=z+4;c[z>>2]=H;H=K+1|0;if(H>>>0<f>>>0){K=H}else{M=H;break L77}}L=g3[c[(c[s>>2]|0)+12>>2]&511](t)|0;H=c[j>>2]|0;c[j>>2]=H+4;c[H>>2]=L;M=K+1|0}else{M=y}}while(0);hD[c[(c[k>>2]|0)+48>>2]&63](r,M,f,c[j>>2]|0)|0;r=(c[j>>2]|0)+(m-M<<2)|0;c[j>>2]=r;if((e|0)==(f|0)){N=r;c[h>>2]=N;DM(o);i=l;return}N=g+(e-b<<2)|0;c[h>>2]=N;DM(o);i=l;return}function Gr(b,d,e,f,g,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;j=+j;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;d=i;i=i+320|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=d|0;l=d+8|0;m=d+40|0;n=d+48|0;o=d+280|0;p=d+288|0;q=d+296|0;r=d+304|0;s=d+312|0;c[k>>2]=37;c[k+4>>2]=0;t=k;k=t+1|0;u=f+4|0;v=c[u>>2]|0;if((v&2048|0)==0){w=k}else{a[k]=43;w=t+2|0}if((v&1024|0)==0){x=w}else{a[w]=35;x=w+1|0}w=v&260;k=v>>>14;do{if((w|0)==260){a[x]=76;v=x+1|0;if((k&1|0)==0){a[v]=97;y=0;break}else{a[v]=65;y=0;break}}else{a[x]=46;a[x+1|0]=42;a[x+2|0]=76;v=x+3|0;if((w|0)==4){if((k&1|0)==0){a[v]=102;y=1;break}else{a[v]=70;y=1;break}}else if((w|0)==256){if((k&1|0)==0){a[v]=101;y=1;break}else{a[v]=69;y=1;break}}else{if((k&1|0)==0){a[v]=103;y=1;break}else{a[v]=71;y=1;break}}}}while(0);k=l|0;c[m>>2]=k;do{if((a[55400]|0)==0){if((bN(55400)|0)==0){break}c[13026]=fM(2147483647,22888,0)|0}}while(0);l=c[13026]|0;if(y){w=F6(k,30,l,t,(z=i,i=i+16|0,c[z>>2]=c[f+8>>2],h[z+8>>3]=j,z)|0)|0;i=z;A=w}else{w=F6(k,30,l,t,(z=i,i=i+8|0,h[z>>3]=j,z)|0)|0;i=z;A=w}do{if((A|0)>29){w=(a[55400]|0)==0;if(y){do{if(w){if((bN(55400)|0)==0){break}c[13026]=fM(2147483647,22888,0)|0}}while(0);l=Gc(m,c[13026]|0,t,(z=i,i=i+16|0,c[z>>2]=c[f+8>>2],h[z+8>>3]=j,z)|0)|0;i=z;B=l}else{do{if(w){if((bN(55400)|0)==0){break}c[13026]=fM(2147483647,22888,0)|0}}while(0);w=Gc(m,c[13026]|0,t,(z=i,i=i+8|0,h[z>>3]=j,z)|0)|0;i=z;B=w}w=c[m>>2]|0;if((w|0)!=0){C=B;D=w;E=w;break}KZ();w=c[m>>2]|0;C=B;D=w;E=w}else{C=A;D=0;E=c[m>>2]|0}}while(0);A=E+C|0;B=c[u>>2]&176;do{if((B|0)==32){F=A}else if((B|0)==16){u=a[E]|0;if((u<<24>>24|0)==45|(u<<24>>24|0)==43){F=E+1|0;break}if(!((C|0)>1&u<<24>>24==48)){G=53;break}u=a[E+1|0]|0;if(!((u<<24>>24|0)==120|(u<<24>>24|0)==88)){G=53;break}F=E+2|0}else{G=53}}while(0);if((G|0)==53){F=E}do{if((E|0)==(k|0)){H=n|0;I=0;J=k}else{G=KM(C<<3)|0;B=G;if((G|0)!=0){H=B;I=B;J=E;break}KZ();H=B;I=B;J=c[m>>2]|0}}while(0);D5(q,f);Gq(J,F,A,H,o,p,q);Dn(c[q>>2]|0)|0;q=e|0;c[s>>2]=c[q>>2];Gl(r,s,H,c[o>>2]|0,c[p>>2]|0,f,g);g=c[r>>2]|0;c[q>>2]=g;c[b>>2]=g;if((I|0)!=0){KN(I)}if((D|0)==0){i=d;return}KN(D);i=d;return}function Gs(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;d=i;i=i+216|0;j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=d|0;k=d+24|0;l=d+48|0;m=d+200|0;n=d+208|0;o=d+16|0;a[o]=a[26600]|0;a[o+1|0]=a[26601]|0;a[o+2|0]=a[26602]|0;a[o+3|0]=a[26603]|0;a[o+4|0]=a[26604]|0;a[o+5|0]=a[26605]|0;p=k|0;do{if((a[55400]|0)==0){if((bN(55400)|0)==0){break}c[13026]=fM(2147483647,22888,0)|0}}while(0);q=F6(p,20,c[13026]|0,o,(o=i,i=i+8|0,c[o>>2]=h,o)|0)|0;i=o;o=k+q|0;h=c[f+4>>2]&176;do{if((h|0)==16){r=a[p]|0;if((r<<24>>24|0)==45|(r<<24>>24|0)==43){s=k+1|0;break}if(!((q|0)>1&r<<24>>24==48)){t=12;break}r=a[k+1|0]|0;if(!((r<<24>>24|0)==120|(r<<24>>24|0)==88)){t=12;break}s=k+2|0}else if((h|0)==32){s=o}else{t=12}}while(0);if((t|0)==12){s=p}D5(m,f);t=m|0;m=c[t>>2]|0;if((c[13664]|0)!=-1){c[j>>2]=54656;c[j+4>>2]=32;c[j+8>>2]=0;DH(54656,j,286)}j=(c[13665]|0)-1|0;h=c[m+8>>2]|0;do{if((c[m+12>>2]|0)-h>>2>>>0>j>>>0){r=c[h+(j<<2)>>2]|0;if((r|0)==0){break}Dn(c[t>>2]|0)|0;u=l|0;hD[c[(c[r>>2]|0)+48>>2]&63](r,p,o,u)|0;r=l+(q<<2)|0;if((s|0)==(o|0)){v=r;w=e|0;x=c[w>>2]|0;y=n|0;c[y>>2]=x;Gl(b,n,u,v,r,f,g);i=d;return}v=l+(s-k<<2)|0;w=e|0;x=c[w>>2]|0;y=n|0;c[y>>2]=x;Gl(b,n,u,v,r,f,g);i=d;return}}while(0);d=gJ(4)|0;Kr(d);eR(d|0,45560,458)}function Gt(d,e,f,g,h,j,k,l,m){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0;n=i;i=i+48|0;o=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[o>>2];o=g;g=i;i=i+4|0;i=i+7&-8;c[g>>2]=c[o>>2];o=n|0;p=n+16|0;q=n+24|0;r=n+32|0;s=n+40|0;D5(p,h);t=p|0;p=c[t>>2]|0;if((c[13666]|0)!=-1){c[o>>2]=54664;c[o+4>>2]=32;c[o+8>>2]=0;DH(54664,o,286)}o=(c[13667]|0)-1|0;u=c[p+8>>2]|0;do{if((c[p+12>>2]|0)-u>>2>>>0>o>>>0){v=c[u+(o<<2)>>2]|0;if((v|0)==0){break}w=v;Dn(c[t>>2]|0)|0;c[j>>2]=0;x=f|0;L7:do{if((l|0)==(m|0)){y=67}else{z=g|0;A=v;B=v;C=v+8|0;D=e;E=r|0;F=s|0;G=q|0;H=l;I=0;L9:while(1){J=I;while(1){if((J|0)!=0){y=67;break L7}K=c[x>>2]|0;do{if((K|0)==0){L=0}else{if((c[K+12>>2]|0)!=(c[K+16>>2]|0)){L=K;break}if((g3[c[(c[K>>2]|0)+36>>2]&511](K)|0)!=-1){L=K;break}c[x>>2]=0;L=0}}while(0);K=(L|0)==0;M=c[z>>2]|0;L19:do{if((M|0)==0){y=20}else{do{if((c[M+12>>2]|0)==(c[M+16>>2]|0)){if((g3[c[(c[M>>2]|0)+36>>2]&511](M)|0)!=-1){break}c[z>>2]=0;y=20;break L19}}while(0);if(K){N=M}else{y=21;break L9}}}while(0);if((y|0)==20){y=0;if(K){y=21;break L9}else{N=0}}if((hd[c[(c[A>>2]|0)+36>>2]&127](w,a[H]|0,0)|0)<<24>>24==37){y=24;break}M=a[H]|0;if(M<<24>>24>=0){O=c[C>>2]|0;if((b[O+(M<<24>>24<<1)>>1]&8192)!=0){P=H;y=35;break}}Q=L+12|0;M=c[Q>>2]|0;R=L+16|0;if((M|0)==(c[R>>2]|0)){S=(g3[c[(c[L>>2]|0)+36>>2]&511](L)|0)&255}else{S=a[M]|0}M=hx[c[(c[B>>2]|0)+12>>2]&127](w,S)|0;if(M<<24>>24==(hx[c[(c[B>>2]|0)+12>>2]&127](w,a[H]|0)|0)<<24>>24){y=62;break}c[j>>2]=4;J=4}L37:do{if((y|0)==35){while(1){y=0;J=P+1|0;if((J|0)==(m|0)){T=m;break}M=a[J]|0;if(M<<24>>24<0){T=J;break}if((b[O+(M<<24>>24<<1)>>1]&8192)==0){T=J;break}else{P=J;y=35}}K=L;J=N;while(1){do{if((K|0)==0){U=0}else{if((c[K+12>>2]|0)!=(c[K+16>>2]|0)){U=K;break}if((g3[c[(c[K>>2]|0)+36>>2]&511](K)|0)!=-1){U=K;break}c[x>>2]=0;U=0}}while(0);M=(U|0)==0;do{if((J|0)==0){y=48}else{if((c[J+12>>2]|0)!=(c[J+16>>2]|0)){if(M){V=J;break}else{W=T;break L37}}if((g3[c[(c[J>>2]|0)+36>>2]&511](J)|0)==-1){c[z>>2]=0;y=48;break}else{if(M^(J|0)==0){V=J;break}else{W=T;break L37}}}}while(0);if((y|0)==48){y=0;if(M){W=T;break L37}else{V=0}}X=U+12|0;Y=c[X>>2]|0;Z=U+16|0;if((Y|0)==(c[Z>>2]|0)){_=(g3[c[(c[U>>2]|0)+36>>2]&511](U)|0)&255}else{_=a[Y]|0}if(_<<24>>24<0){W=T;break L37}if((b[(c[C>>2]|0)+(_<<24>>24<<1)>>1]&8192)==0){W=T;break L37}Y=c[X>>2]|0;if((Y|0)==(c[Z>>2]|0)){g3[c[(c[U>>2]|0)+40>>2]&511](U)|0;K=U;J=V;continue}else{c[X>>2]=Y+1;K=U;J=V;continue}}}else if((y|0)==24){y=0;J=H+1|0;if((J|0)==(m|0)){y=25;break L9}K=hd[c[(c[A>>2]|0)+36>>2]&127](w,a[J]|0,0)|0;if((K<<24>>24|0)==69|(K<<24>>24|0)==48){Y=H+2|0;if((Y|0)==(m|0)){y=28;break L9}$=K;aa=hd[c[(c[A>>2]|0)+36>>2]&127](w,a[Y]|0,0)|0;ab=Y}else{$=0;aa=K;ab=J}J=c[(c[D>>2]|0)+36>>2]|0;c[E>>2]=L;c[F>>2]=N;hv[J&15](q,e,r,s,h,j,k,aa,$);c[x>>2]=c[G>>2];W=ab+1|0}else if((y|0)==62){y=0;J=c[Q>>2]|0;if((J|0)==(c[R>>2]|0)){g3[c[(c[L>>2]|0)+40>>2]&511](L)|0}else{c[Q>>2]=J+1}W=H+1|0}}while(0);if((W|0)==(m|0)){y=67;break L7}H=W;I=c[j>>2]|0}if((y|0)==25){c[j>>2]=4;ac=L;break}else if((y|0)==28){c[j>>2]=4;ac=L;break}else if((y|0)==21){c[j>>2]=4;ac=L;break}}}while(0);if((y|0)==67){ac=c[x>>2]|0}w=f|0;do{if((ac|0)!=0){if((c[ac+12>>2]|0)!=(c[ac+16>>2]|0)){break}if((g3[c[(c[ac>>2]|0)+36>>2]&511](ac)|0)!=-1){break}c[w>>2]=0}}while(0);x=c[w>>2]|0;v=(x|0)==0;I=g|0;H=c[I>>2]|0;L95:do{if((H|0)==0){y=77}else{do{if((c[H+12>>2]|0)==(c[H+16>>2]|0)){if((g3[c[(c[H>>2]|0)+36>>2]&511](H)|0)!=-1){break}c[I>>2]=0;y=77;break L95}}while(0);if(!v){break}ad=d|0;c[ad>>2]=x;i=n;return}}while(0);do{if((y|0)==77){if(v){break}ad=d|0;c[ad>>2]=x;i=n;return}}while(0);c[j>>2]=c[j>>2]|2;ad=d|0;c[ad>>2]=x;i=n;return}}while(0);n=gJ(4)|0;Kr(n);eR(n|0,45560,458)}function Gu(a){a=a|0;Dl(a|0);KU(a);return}function Gv(a){a=a|0;Dl(a|0);return}function Gw(a){a=a|0;return 2}function Gx(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0;j=i;i=i+16|0;k=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[k>>2];k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=j|0;l=j+8|0;c[k>>2]=c[d>>2];c[l>>2]=c[e>>2];Gt(a,b,k,l,f,g,h,26584,26592);i=j;return}function Gy(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;k=i;i=i+16|0;l=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[l>>2];l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=k|0;m=k+8|0;n=d+8|0;o=g3[c[(c[n>>2]|0)+20>>2]&511](n)|0;c[l>>2]=c[e>>2];c[m>>2]=c[f>>2];f=o;e=a[o]|0;if((e&1)==0){p=f+1|0;q=f+1|0}else{f=c[o+8>>2]|0;p=f;q=f}f=e&255;if((f&1|0)==0){r=f>>>1}else{r=c[o+4>>2]|0}Gt(b,d,l,m,g,h,j,q,p+r|0);i=k;return}function Gz(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;j=i;i=i+32|0;k=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[k>>2];k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=j|0;l=j+8|0;m=j+24|0;D5(m,f);f=m|0;m=c[f>>2]|0;if((c[13666]|0)!=-1){c[l>>2]=54664;c[l+4>>2]=32;c[l+8>>2]=0;DH(54664,l,286)}l=(c[13667]|0)-1|0;n=c[m+8>>2]|0;do{if((c[m+12>>2]|0)-n>>2>>>0>l>>>0){o=c[n+(l<<2)>>2]|0;if((o|0)==0){break}Dn(c[f>>2]|0)|0;p=c[e>>2]|0;q=b+8|0;r=g3[c[c[q>>2]>>2]&511](q)|0;c[k>>2]=p;p=(Fe(d,k,r,r+168|0,o,g,0)|0)-r|0;if((p|0)>=168){s=d|0;t=c[s>>2]|0;u=a|0;c[u>>2]=t;i=j;return}c[h+24>>2]=((p|0)/12|0|0)%7|0;s=d|0;t=c[s>>2]|0;u=a|0;c[u>>2]=t;i=j;return}}while(0);j=gJ(4)|0;Kr(j);eR(j|0,45560,458)}function GA(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;j=i;i=i+32|0;k=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[k>>2];k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=j|0;l=j+8|0;m=j+24|0;D5(m,f);f=m|0;m=c[f>>2]|0;if((c[13666]|0)!=-1){c[l>>2]=54664;c[l+4>>2]=32;c[l+8>>2]=0;DH(54664,l,286)}l=(c[13667]|0)-1|0;n=c[m+8>>2]|0;do{if((c[m+12>>2]|0)-n>>2>>>0>l>>>0){o=c[n+(l<<2)>>2]|0;if((o|0)==0){break}Dn(c[f>>2]|0)|0;p=c[e>>2]|0;q=b+8|0;r=g3[c[(c[q>>2]|0)+4>>2]&511](q)|0;c[k>>2]=p;p=(Fe(d,k,r,r+288|0,o,g,0)|0)-r|0;if((p|0)>=288){s=d|0;t=c[s>>2]|0;u=a|0;c[u>>2]=t;i=j;return}c[h+16>>2]=((p|0)/12|0|0)%12|0;s=d|0;t=c[s>>2]|0;u=a|0;c[u>>2]=t;i=j;return}}while(0);j=gJ(4)|0;Kr(j);eR(j|0,45560,458)}function GB(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;b=i;i=i+32|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;l=b+24|0;D5(l,f);f=l|0;l=c[f>>2]|0;if((c[13666]|0)!=-1){c[k>>2]=54664;c[k+4>>2]=32;c[k+8>>2]=0;DH(54664,k,286)}k=(c[13667]|0)-1|0;m=c[l+8>>2]|0;do{if((c[l+12>>2]|0)-m>>2>>>0>k>>>0){n=c[m+(k<<2)>>2]|0;if((n|0)==0){break}Dn(c[f>>2]|0)|0;c[j>>2]=c[e>>2];o=GG(d,j,g,n,4)|0;if((c[g>>2]&4|0)!=0){p=d|0;q=c[p>>2]|0;r=a|0;c[r>>2]=q;i=b;return}if((o|0)<69){s=o+2e3|0}else{s=(o-69|0)>>>0<31>>>0?o+1900|0:o}c[h+20>>2]=s-1900;p=d|0;q=c[p>>2]|0;r=a|0;c[r>>2]=q;i=b;return}}while(0);b=gJ(4)|0;Kr(b);eR(b|0,45560,458)}function GC(b,d,e,f,g,h,j,k,l){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0,ai=0,aj=0,ak=0,al=0,am=0;l=i;i=i+328|0;m=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[m>>2];m=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[m>>2];m=l|0;n=l+8|0;o=l+16|0;p=l+24|0;q=l+32|0;r=l+40|0;s=l+48|0;t=l+56|0;u=l+64|0;v=l+72|0;w=l+80|0;x=l+88|0;y=l+96|0;z=l+112|0;A=l+120|0;B=l+128|0;C=l+136|0;D=l+144|0;E=l+152|0;F=l+160|0;G=l+168|0;H=l+176|0;I=l+184|0;J=l+192|0;K=l+200|0;L=l+208|0;M=l+216|0;N=l+224|0;O=l+232|0;P=l+240|0;Q=l+248|0;R=l+256|0;S=l+264|0;T=l+272|0;U=l+280|0;V=l+288|0;W=l+296|0;X=l+304|0;Y=l+312|0;Z=l+320|0;c[h>>2]=0;D5(z,g);_=z|0;z=c[_>>2]|0;if((c[13666]|0)!=-1){c[y>>2]=54664;c[y+4>>2]=32;c[y+8>>2]=0;DH(54664,y,286)}y=(c[13667]|0)-1|0;$=c[z+8>>2]|0;do{if((c[z+12>>2]|0)-$>>2>>>0>y>>>0){aa=c[$+(y<<2)>>2]|0;if((aa|0)==0){break}ab=aa;Dn(c[_>>2]|0)|0;L7:do{switch(k<<24>>24|0){case 77:{c[q>>2]=c[f>>2];aa=GG(e,q,h,ab,2)|0;ac=c[h>>2]|0;if((ac&4|0)==0&(aa|0)<60){c[j+4>>2]=aa;break L7}else{c[h>>2]=ac|4;break L7}break};case 37:{c[Z>>2]=c[f>>2];GF(0,e,Z,h,ab);break};case 89:{c[m>>2]=c[f>>2];ac=GG(e,m,h,ab,4)|0;if((c[h>>2]&4|0)!=0){break L7}c[j+20>>2]=ac-1900;break};case 98:case 66:case 104:{ac=c[f>>2]|0;aa=d+8|0;ad=g3[c[(c[aa>>2]|0)+4>>2]&511](aa)|0;c[w>>2]=ac;ac=(Fe(e,w,ad,ad+288|0,ab,h,0)|0)-ad|0;if((ac|0)>=288){break L7}c[j+16>>2]=((ac|0)/12|0|0)%12|0;break};case 99:{ac=d+8|0;ad=g3[c[(c[ac>>2]|0)+12>>2]&511](ac)|0;ac=e|0;c[B>>2]=c[ac>>2];c[C>>2]=c[f>>2];aa=ad;ae=a[ad]|0;if((ae&1)==0){af=aa+1|0;ag=aa+1|0}else{aa=c[ad+8>>2]|0;af=aa;ag=aa}aa=ae&255;if((aa&1|0)==0){ah=aa>>>1}else{ah=c[ad+4>>2]|0}Gt(A,d,B,C,g,h,j,ag,af+ah|0);c[ac>>2]=c[A>>2];break};case 72:{c[u>>2]=c[f>>2];ac=GG(e,u,h,ab,2)|0;ad=c[h>>2]|0;if((ad&4|0)==0&(ac|0)<24){c[j+8>>2]=ac;break L7}else{c[h>>2]=ad|4;break L7}break};case 70:{ad=e|0;c[H>>2]=c[ad>>2];c[I>>2]=c[f>>2];Gt(G,d,H,I,g,h,j,26568,26576);c[ad>>2]=c[G>>2];break};case 73:{ad=j+8|0;c[t>>2]=c[f>>2];ac=GG(e,t,h,ab,2)|0;aa=c[h>>2]|0;do{if((aa&4|0)==0){if((ac-1|0)>>>0>=12>>>0){break}c[ad>>2]=ac;break L7}}while(0);c[h>>2]=aa|4;break};case 84:{ac=e|0;c[S>>2]=c[ac>>2];c[T>>2]=c[f>>2];Gt(R,d,S,T,g,h,j,26536,26544);c[ac>>2]=c[R>>2];break};case 119:{c[o>>2]=c[f>>2];ac=GG(e,o,h,ab,1)|0;ad=c[h>>2]|0;if((ad&4|0)==0&(ac|0)<7){c[j+24>>2]=ac;break L7}else{c[h>>2]=ad|4;break L7}break};case 120:{ad=c[(c[d>>2]|0)+20>>2]|0;c[U>>2]=c[e>>2];c[V>>2]=c[f>>2];hr[ad&127](b,d,U,V,g,h,j);i=l;return};case 88:{ad=d+8|0;ac=g3[c[(c[ad>>2]|0)+24>>2]&511](ad)|0;ad=e|0;c[X>>2]=c[ad>>2];c[Y>>2]=c[f>>2];ae=ac;ai=a[ac]|0;if((ai&1)==0){aj=ae+1|0;ak=ae+1|0}else{ae=c[ac+8>>2]|0;aj=ae;ak=ae}ae=ai&255;if((ae&1|0)==0){al=ae>>>1}else{al=c[ac+4>>2]|0}Gt(W,d,X,Y,g,h,j,ak,aj+al|0);c[ad>>2]=c[W>>2];break};case 121:{c[n>>2]=c[f>>2];ad=GG(e,n,h,ab,4)|0;if((c[h>>2]&4|0)!=0){break L7}if((ad|0)<69){am=ad+2e3|0}else{am=(ad-69|0)>>>0<31>>>0?ad+1900|0:ad}c[j+20>>2]=am-1900;break};case 109:{c[r>>2]=c[f>>2];ad=(GG(e,r,h,ab,2)|0)-1|0;ac=c[h>>2]|0;if((ac&4|0)==0&(ad|0)<12){c[j+16>>2]=ad;break L7}else{c[h>>2]=ac|4;break L7}break};case 106:{c[s>>2]=c[f>>2];ac=GG(e,s,h,ab,3)|0;ad=c[h>>2]|0;if((ad&4|0)==0&(ac|0)<366){c[j+28>>2]=ac;break L7}else{c[h>>2]=ad|4;break L7}break};case 114:{ad=e|0;c[M>>2]=c[ad>>2];c[N>>2]=c[f>>2];Gt(L,d,M,N,g,h,j,26552,26563);c[ad>>2]=c[L>>2];break};case 82:{ad=e|0;c[P>>2]=c[ad>>2];c[Q>>2]=c[f>>2];Gt(O,d,P,Q,g,h,j,26544,26549);c[ad>>2]=c[O>>2];break};case 97:case 65:{ad=c[f>>2]|0;ac=d+8|0;ae=g3[c[c[ac>>2]>>2]&511](ac)|0;c[x>>2]=ad;ad=(Fe(e,x,ae,ae+168|0,ab,h,0)|0)-ae|0;if((ad|0)>=168){break L7}c[j+24>>2]=((ad|0)/12|0|0)%7|0;break};case 100:case 101:{ad=j+12|0;c[v>>2]=c[f>>2];ae=GG(e,v,h,ab,2)|0;ac=c[h>>2]|0;do{if((ac&4|0)==0){if((ae-1|0)>>>0>=31>>>0){break}c[ad>>2]=ae;break L7}}while(0);c[h>>2]=ac|4;break};case 110:case 116:{c[J>>2]=c[f>>2];GD(0,e,J,h,ab);break};case 112:{c[K>>2]=c[f>>2];GE(d,j+8|0,e,K,h,ab);break};case 68:{ae=e|0;c[E>>2]=c[ae>>2];c[F>>2]=c[f>>2];Gt(D,d,E,F,g,h,j,26576,26584);c[ae>>2]=c[D>>2];break};case 83:{c[p>>2]=c[f>>2];ae=GG(e,p,h,ab,2)|0;ad=c[h>>2]|0;if((ad&4|0)==0&(ae|0)<61){c[j>>2]=ae;break L7}else{c[h>>2]=ad|4;break L7}break};default:{c[h>>2]=c[h>>2]|4}}}while(0);c[b>>2]=c[e>>2];i=l;return}}while(0);l=gJ(4)|0;Kr(l);eR(l|0,45560,458)}function GD(d,e,f,g,h){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;d=i;j=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[j>>2];j=e|0;e=f|0;f=h+8|0;L1:while(1){h=c[j>>2]|0;do{if((h|0)==0){k=0}else{if((c[h+12>>2]|0)!=(c[h+16>>2]|0)){k=h;break}if((g3[c[(c[h>>2]|0)+36>>2]&511](h)|0)==-1){c[j>>2]=0;k=0;break}else{k=c[j>>2]|0;break}}}while(0);h=(k|0)==0;l=c[e>>2]|0;L10:do{if((l|0)==0){m=12}else{do{if((c[l+12>>2]|0)==(c[l+16>>2]|0)){if((g3[c[(c[l>>2]|0)+36>>2]&511](l)|0)!=-1){break}c[e>>2]=0;m=12;break L10}}while(0);if(h){n=l;o=0}else{p=l;q=0;break L1}}}while(0);if((m|0)==12){m=0;if(h){p=0;q=1;break}else{n=0;o=1}}l=c[j>>2]|0;r=c[l+12>>2]|0;if((r|0)==(c[l+16>>2]|0)){s=(g3[c[(c[l>>2]|0)+36>>2]&511](l)|0)&255}else{s=a[r]|0}if(s<<24>>24<0){p=n;q=o;break}if((b[(c[f>>2]|0)+(s<<24>>24<<1)>>1]&8192)==0){p=n;q=o;break}r=c[j>>2]|0;l=r+12|0;t=c[l>>2]|0;if((t|0)==(c[r+16>>2]|0)){g3[c[(c[r>>2]|0)+40>>2]&511](r)|0;continue}else{c[l>>2]=t+1;continue}}o=c[j>>2]|0;do{if((o|0)==0){u=0}else{if((c[o+12>>2]|0)!=(c[o+16>>2]|0)){u=o;break}if((g3[c[(c[o>>2]|0)+36>>2]&511](o)|0)==-1){c[j>>2]=0;u=0;break}else{u=c[j>>2]|0;break}}}while(0);j=(u|0)==0;do{if(q){m=31}else{if((c[p+12>>2]|0)!=(c[p+16>>2]|0)){if(!(j^(p|0)==0)){break}i=d;return}if((g3[c[(c[p>>2]|0)+36>>2]&511](p)|0)==-1){c[e>>2]=0;m=31;break}if(!j){break}i=d;return}}while(0);do{if((m|0)==31){if(j){break}i=d;return}}while(0);c[g>>2]=c[g>>2]|2;i=d;return}function GE(a,b,e,f,g,h){a=a|0;b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0;j=i;i=i+8|0;k=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[k>>2];k=j|0;l=a+8|0;a=g3[c[(c[l>>2]|0)+8>>2]&511](l)|0;l=d[a]|0;if((l&1|0)==0){m=l>>>1}else{m=c[a+4>>2]|0}l=d[a+12|0]|0;if((l&1|0)==0){n=l>>>1}else{n=c[a+16>>2]|0}if((m|0)==(-n|0)){c[g>>2]=c[g>>2]|4;i=j;return}c[k>>2]=c[f>>2];f=Fe(e,k,a,a+24|0,h,g,0)|0;g=f-a|0;do{if((f|0)==(a|0)){if((c[b>>2]|0)!=12){break}c[b>>2]=0;i=j;return}}while(0);if((g|0)!=12){i=j;return}g=c[b>>2]|0;if((g|0)>=12){i=j;return}c[b>>2]=g+12;i=j;return}function GF(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0;b=i;h=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[h>>2];h=d|0;d=c[h>>2]|0;do{if((d|0)==0){j=0}else{if((c[d+12>>2]|0)!=(c[d+16>>2]|0)){j=d;break}if((g3[c[(c[d>>2]|0)+36>>2]&511](d)|0)==-1){c[h>>2]=0;j=0;break}else{j=c[h>>2]|0;break}}}while(0);d=(j|0)==0;j=e|0;e=c[j>>2]|0;L8:do{if((e|0)==0){k=11}else{do{if((c[e+12>>2]|0)==(c[e+16>>2]|0)){if((g3[c[(c[e>>2]|0)+36>>2]&511](e)|0)!=-1){break}c[j>>2]=0;k=11;break L8}}while(0);if(d){l=e;m=0}else{k=12}}}while(0);if((k|0)==11){if(d){k=12}else{l=0;m=1}}if((k|0)==12){c[f>>2]=c[f>>2]|6;i=b;return}d=c[h>>2]|0;e=c[d+12>>2]|0;if((e|0)==(c[d+16>>2]|0)){n=(g3[c[(c[d>>2]|0)+36>>2]&511](d)|0)&255}else{n=a[e]|0}if((hd[c[(c[g>>2]|0)+36>>2]&127](g,n,0)|0)<<24>>24!=37){c[f>>2]=c[f>>2]|4;i=b;return}n=c[h>>2]|0;g=n+12|0;e=c[g>>2]|0;if((e|0)==(c[n+16>>2]|0)){g3[c[(c[n>>2]|0)+40>>2]&511](n)|0}else{c[g>>2]=e+1}e=c[h>>2]|0;do{if((e|0)==0){o=0}else{if((c[e+12>>2]|0)!=(c[e+16>>2]|0)){o=e;break}if((g3[c[(c[e>>2]|0)+36>>2]&511](e)|0)==-1){c[h>>2]=0;o=0;break}else{o=c[h>>2]|0;break}}}while(0);h=(o|0)==0;do{if(m){k=31}else{if((c[l+12>>2]|0)!=(c[l+16>>2]|0)){if(!(h^(l|0)==0)){break}i=b;return}if((g3[c[(c[l>>2]|0)+36>>2]&511](l)|0)==-1){c[j>>2]=0;k=31;break}if(!h){break}i=b;return}}while(0);do{if((k|0)==31){if(h){break}i=b;return}}while(0);c[f>>2]=c[f>>2]|2;i=b;return}function GG(d,e,f,g,h){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0;j=i;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=d|0;d=c[k>>2]|0;do{if((d|0)==0){l=0}else{if((c[d+12>>2]|0)!=(c[d+16>>2]|0)){l=d;break}if((g3[c[(c[d>>2]|0)+36>>2]&511](d)|0)==-1){c[k>>2]=0;l=0;break}else{l=c[k>>2]|0;break}}}while(0);d=(l|0)==0;l=e|0;e=c[l>>2]|0;L8:do{if((e|0)==0){m=11}else{do{if((c[e+12>>2]|0)==(c[e+16>>2]|0)){if((g3[c[(c[e>>2]|0)+36>>2]&511](e)|0)!=-1){break}c[l>>2]=0;m=11;break L8}}while(0);if(d){n=e}else{m=12}}}while(0);if((m|0)==11){if(d){m=12}else{n=0}}if((m|0)==12){c[f>>2]=c[f>>2]|6;o=0;i=j;return o|0}d=c[k>>2]|0;e=c[d+12>>2]|0;if((e|0)==(c[d+16>>2]|0)){p=(g3[c[(c[d>>2]|0)+36>>2]&511](d)|0)&255}else{p=a[e]|0}do{if(p<<24>>24>=0){e=g+8|0;if((b[(c[e>>2]|0)+(p<<24>>24<<1)>>1]&2048)==0){break}d=g;q=(hd[c[(c[d>>2]|0)+36>>2]&127](g,p,0)|0)<<24>>24;r=c[k>>2]|0;s=r+12|0;t=c[s>>2]|0;if((t|0)==(c[r+16>>2]|0)){g3[c[(c[r>>2]|0)+40>>2]&511](r)|0;u=q;v=h;w=n}else{c[s>>2]=t+1;u=q;v=h;w=n}while(1){x=u-48|0;q=v-1|0;t=c[k>>2]|0;do{if((t|0)==0){y=0}else{if((c[t+12>>2]|0)!=(c[t+16>>2]|0)){y=t;break}if((g3[c[(c[t>>2]|0)+36>>2]&511](t)|0)==-1){c[k>>2]=0;y=0;break}else{y=c[k>>2]|0;break}}}while(0);t=(y|0)==0;if((w|0)==0){z=y;A=0}else{do{if((c[w+12>>2]|0)==(c[w+16>>2]|0)){if((g3[c[(c[w>>2]|0)+36>>2]&511](w)|0)!=-1){B=w;break}c[l>>2]=0;B=0}else{B=w}}while(0);z=c[k>>2]|0;A=B}C=(A|0)==0;if(!((t^C)&(q|0)>0)){m=41;break}s=c[z+12>>2]|0;if((s|0)==(c[z+16>>2]|0)){D=(g3[c[(c[z>>2]|0)+36>>2]&511](z)|0)&255}else{D=a[s]|0}if(D<<24>>24<0){o=x;m=60;break}if((b[(c[e>>2]|0)+(D<<24>>24<<1)>>1]&2048)==0){o=x;m=58;break}s=((hd[c[(c[d>>2]|0)+36>>2]&127](g,D,0)|0)<<24>>24)+(x*10|0)|0;r=c[k>>2]|0;E=r+12|0;F=c[E>>2]|0;if((F|0)==(c[r+16>>2]|0)){g3[c[(c[r>>2]|0)+40>>2]&511](r)|0;u=s;v=q;w=A;continue}else{c[E>>2]=F+1;u=s;v=q;w=A;continue}}if((m|0)==41){do{if((z|0)==0){G=0}else{if((c[z+12>>2]|0)!=(c[z+16>>2]|0)){G=z;break}if((g3[c[(c[z>>2]|0)+36>>2]&511](z)|0)==-1){c[k>>2]=0;G=0;break}else{G=c[k>>2]|0;break}}}while(0);d=(G|0)==0;L65:do{if(C){m=51}else{do{if((c[A+12>>2]|0)==(c[A+16>>2]|0)){if((g3[c[(c[A>>2]|0)+36>>2]&511](A)|0)!=-1){break}c[l>>2]=0;m=51;break L65}}while(0);if(d){o=x}else{break}i=j;return o|0}}while(0);do{if((m|0)==51){if(d){break}else{o=x}i=j;return o|0}}while(0);c[f>>2]=c[f>>2]|2;o=x;i=j;return o|0}else if((m|0)==58){i=j;return o|0}else if((m|0)==60){i=j;return o|0}}}while(0);c[f>>2]=c[f>>2]|4;o=0;i=j;return o|0}function GH(a,b,d,e,f,g,h,j,k){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0;l=i;i=i+48|0;m=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[m>>2];m=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[m>>2];m=l|0;n=l+16|0;o=l+24|0;p=l+32|0;q=l+40|0;D5(n,f);r=n|0;n=c[r>>2]|0;if((c[13664]|0)!=-1){c[m>>2]=54656;c[m+4>>2]=32;c[m+8>>2]=0;DH(54656,m,286)}m=(c[13665]|0)-1|0;s=c[n+8>>2]|0;do{if((c[n+12>>2]|0)-s>>2>>>0>m>>>0){t=c[s+(m<<2)>>2]|0;if((t|0)==0){break}u=t;Dn(c[r>>2]|0)|0;c[g>>2]=0;v=d|0;L7:do{if((j|0)==(k|0)){w=71}else{x=e|0;y=t;z=t;A=t;B=b;C=p|0;D=q|0;E=o|0;F=j;G=0;L9:while(1){H=G;while(1){if((H|0)!=0){w=71;break L7}I=c[v>>2]|0;do{if((I|0)==0){J=0}else{K=c[I+12>>2]|0;if((K|0)==(c[I+16>>2]|0)){L=g3[c[(c[I>>2]|0)+36>>2]&511](I)|0}else{L=c[K>>2]|0}if((L|0)!=-1){J=I;break}c[v>>2]=0;J=0}}while(0);I=(J|0)==0;K=c[x>>2]|0;do{if((K|0)==0){w=23}else{M=c[K+12>>2]|0;if((M|0)==(c[K+16>>2]|0)){N=g3[c[(c[K>>2]|0)+36>>2]&511](K)|0}else{N=c[M>>2]|0}if((N|0)==-1){c[x>>2]=0;w=23;break}else{if(I^(K|0)==0){O=K;break}else{w=25;break L9}}}}while(0);if((w|0)==23){w=0;if(I){w=25;break L9}else{O=0}}if((hd[c[(c[y>>2]|0)+52>>2]&127](u,c[F>>2]|0,0)|0)<<24>>24==37){w=28;break}if(hd[c[(c[z>>2]|0)+12>>2]&127](u,8192,c[F>>2]|0)|0){P=F;w=38;break}Q=J+12|0;K=c[Q>>2]|0;R=J+16|0;if((K|0)==(c[R>>2]|0)){S=g3[c[(c[J>>2]|0)+36>>2]&511](J)|0}else{S=c[K>>2]|0}K=hx[c[(c[A>>2]|0)+28>>2]&127](u,S)|0;if((K|0)==(hx[c[(c[A>>2]|0)+28>>2]&127](u,c[F>>2]|0)|0)){w=66;break}c[g>>2]=4;H=4}L41:do{if((w|0)==66){w=0;H=c[Q>>2]|0;if((H|0)==(c[R>>2]|0)){g3[c[(c[J>>2]|0)+40>>2]&511](J)|0}else{c[Q>>2]=H+4}T=F+4|0}else if((w|0)==28){w=0;H=F+4|0;if((H|0)==(k|0)){w=29;break L9}K=hd[c[(c[y>>2]|0)+52>>2]&127](u,c[H>>2]|0,0)|0;if((K<<24>>24|0)==69|(K<<24>>24|0)==48){M=F+8|0;if((M|0)==(k|0)){w=32;break L9}U=K;V=hd[c[(c[y>>2]|0)+52>>2]&127](u,c[M>>2]|0,0)|0;W=M}else{U=0;V=K;W=H}H=c[(c[B>>2]|0)+36>>2]|0;c[C>>2]=J;c[D>>2]=O;hv[H&15](o,b,p,q,f,g,h,V,U);c[v>>2]=c[E>>2];T=W+4|0}else if((w|0)==38){while(1){w=0;H=P+4|0;if((H|0)==(k|0)){X=k;break}if(hd[c[(c[z>>2]|0)+12>>2]&127](u,8192,c[H>>2]|0)|0){P=H;w=38}else{X=H;break}}I=J;H=O;while(1){do{if((I|0)==0){Y=0}else{K=c[I+12>>2]|0;if((K|0)==(c[I+16>>2]|0)){Z=g3[c[(c[I>>2]|0)+36>>2]&511](I)|0}else{Z=c[K>>2]|0}if((Z|0)!=-1){Y=I;break}c[v>>2]=0;Y=0}}while(0);K=(Y|0)==0;do{if((H|0)==0){w=53}else{M=c[H+12>>2]|0;if((M|0)==(c[H+16>>2]|0)){_=g3[c[(c[H>>2]|0)+36>>2]&511](H)|0}else{_=c[M>>2]|0}if((_|0)==-1){c[x>>2]=0;w=53;break}else{if(K^(H|0)==0){$=H;break}else{T=X;break L41}}}}while(0);if((w|0)==53){w=0;if(K){T=X;break L41}else{$=0}}M=Y+12|0;aa=c[M>>2]|0;ab=Y+16|0;if((aa|0)==(c[ab>>2]|0)){ac=g3[c[(c[Y>>2]|0)+36>>2]&511](Y)|0}else{ac=c[aa>>2]|0}if(!(hd[c[(c[z>>2]|0)+12>>2]&127](u,8192,ac)|0)){T=X;break L41}aa=c[M>>2]|0;if((aa|0)==(c[ab>>2]|0)){g3[c[(c[Y>>2]|0)+40>>2]&511](Y)|0;I=Y;H=$;continue}else{c[M>>2]=aa+4;I=Y;H=$;continue}}}}while(0);if((T|0)==(k|0)){w=71;break L7}F=T;G=c[g>>2]|0}if((w|0)==25){c[g>>2]=4;ad=J;break}else if((w|0)==29){c[g>>2]=4;ad=J;break}else if((w|0)==32){c[g>>2]=4;ad=J;break}}}while(0);if((w|0)==71){ad=c[v>>2]|0}u=d|0;do{if((ad|0)!=0){t=c[ad+12>>2]|0;if((t|0)==(c[ad+16>>2]|0)){ae=g3[c[(c[ad>>2]|0)+36>>2]&511](ad)|0}else{ae=c[t>>2]|0}if((ae|0)!=-1){break}c[u>>2]=0}}while(0);v=c[u>>2]|0;t=(v|0)==0;G=e|0;F=c[G>>2]|0;do{if((F|0)==0){w=84}else{z=c[F+12>>2]|0;if((z|0)==(c[F+16>>2]|0)){af=g3[c[(c[F>>2]|0)+36>>2]&511](F)|0}else{af=c[z>>2]|0}if((af|0)==-1){c[G>>2]=0;w=84;break}if(!(t^(F|0)==0)){break}ag=a|0;c[ag>>2]=v;i=l;return}}while(0);do{if((w|0)==84){if(t){break}ag=a|0;c[ag>>2]=v;i=l;return}}while(0);c[g>>2]=c[g>>2]|2;ag=a|0;c[ag>>2]=v;i=l;return}}while(0);l=gJ(4)|0;Kr(l);eR(l|0,45560,458)}function GI(a){a=a|0;Dl(a|0);KU(a);return}function GJ(a){a=a|0;Dl(a|0);return}function GK(a){a=a|0;return 2}function GL(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0;j=i;i=i+16|0;k=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[k>>2];k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=j|0;l=j+8|0;c[k>>2]=c[d>>2];c[l>>2]=c[e>>2];GH(a,b,k,l,f,g,h,26504,26536);i=j;return}function GM(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;k=i;i=i+16|0;l=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[l>>2];l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=k|0;m=k+8|0;n=d+8|0;o=g3[c[(c[n>>2]|0)+20>>2]&511](n)|0;c[l>>2]=c[e>>2];c[m>>2]=c[f>>2];f=a[o]|0;if((f&1)==0){p=o+4|0;q=o+4|0}else{e=c[o+8>>2]|0;p=e;q=e}e=f&255;if((e&1|0)==0){r=e>>>1}else{r=c[o+4>>2]|0}GH(b,d,l,m,g,h,j,q,p+(r<<2)|0);i=k;return}function GN(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;j=i;i=i+32|0;k=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[k>>2];k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=j|0;l=j+8|0;m=j+24|0;D5(m,f);f=m|0;m=c[f>>2]|0;if((c[13664]|0)!=-1){c[l>>2]=54656;c[l+4>>2]=32;c[l+8>>2]=0;DH(54656,l,286)}l=(c[13665]|0)-1|0;n=c[m+8>>2]|0;do{if((c[m+12>>2]|0)-n>>2>>>0>l>>>0){o=c[n+(l<<2)>>2]|0;if((o|0)==0){break}Dn(c[f>>2]|0)|0;p=c[e>>2]|0;q=b+8|0;r=g3[c[c[q>>2]>>2]&511](q)|0;c[k>>2]=p;p=(FD(d,k,r,r+168|0,o,g,0)|0)-r|0;if((p|0)>=168){s=d|0;t=c[s>>2]|0;u=a|0;c[u>>2]=t;i=j;return}c[h+24>>2]=((p|0)/12|0|0)%7|0;s=d|0;t=c[s>>2]|0;u=a|0;c[u>>2]=t;i=j;return}}while(0);j=gJ(4)|0;Kr(j);eR(j|0,45560,458)}function GO(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;j=i;i=i+32|0;k=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[k>>2];k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=j|0;l=j+8|0;m=j+24|0;D5(m,f);f=m|0;m=c[f>>2]|0;if((c[13664]|0)!=-1){c[l>>2]=54656;c[l+4>>2]=32;c[l+8>>2]=0;DH(54656,l,286)}l=(c[13665]|0)-1|0;n=c[m+8>>2]|0;do{if((c[m+12>>2]|0)-n>>2>>>0>l>>>0){o=c[n+(l<<2)>>2]|0;if((o|0)==0){break}Dn(c[f>>2]|0)|0;p=c[e>>2]|0;q=b+8|0;r=g3[c[(c[q>>2]|0)+4>>2]&511](q)|0;c[k>>2]=p;p=(FD(d,k,r,r+288|0,o,g,0)|0)-r|0;if((p|0)>=288){s=d|0;t=c[s>>2]|0;u=a|0;c[u>>2]=t;i=j;return}c[h+16>>2]=((p|0)/12|0|0)%12|0;s=d|0;t=c[s>>2]|0;u=a|0;c[u>>2]=t;i=j;return}}while(0);j=gJ(4)|0;Kr(j);eR(j|0,45560,458)}function GP(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;b=i;i=i+32|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;l=b+24|0;D5(l,f);f=l|0;l=c[f>>2]|0;if((c[13664]|0)!=-1){c[k>>2]=54656;c[k+4>>2]=32;c[k+8>>2]=0;DH(54656,k,286)}k=(c[13665]|0)-1|0;m=c[l+8>>2]|0;do{if((c[l+12>>2]|0)-m>>2>>>0>k>>>0){n=c[m+(k<<2)>>2]|0;if((n|0)==0){break}Dn(c[f>>2]|0)|0;c[j>>2]=c[e>>2];o=GU(d,j,g,n,4)|0;if((c[g>>2]&4|0)!=0){p=d|0;q=c[p>>2]|0;r=a|0;c[r>>2]=q;i=b;return}if((o|0)<69){s=o+2e3|0}else{s=(o-69|0)>>>0<31>>>0?o+1900|0:o}c[h+20>>2]=s-1900;p=d|0;q=c[p>>2]|0;r=a|0;c[r>>2]=q;i=b;return}}while(0);b=gJ(4)|0;Kr(b);eR(b|0,45560,458)}function GQ(b,d,e,f,g,h,j,k,l){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0,ai=0,aj=0,ak=0,al=0,am=0;l=i;i=i+328|0;m=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[m>>2];m=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[m>>2];m=l|0;n=l+8|0;o=l+16|0;p=l+24|0;q=l+32|0;r=l+40|0;s=l+48|0;t=l+56|0;u=l+64|0;v=l+72|0;w=l+80|0;x=l+88|0;y=l+96|0;z=l+112|0;A=l+120|0;B=l+128|0;C=l+136|0;D=l+144|0;E=l+152|0;F=l+160|0;G=l+168|0;H=l+176|0;I=l+184|0;J=l+192|0;K=l+200|0;L=l+208|0;M=l+216|0;N=l+224|0;O=l+232|0;P=l+240|0;Q=l+248|0;R=l+256|0;S=l+264|0;T=l+272|0;U=l+280|0;V=l+288|0;W=l+296|0;X=l+304|0;Y=l+312|0;Z=l+320|0;c[h>>2]=0;D5(z,g);_=z|0;z=c[_>>2]|0;if((c[13664]|0)!=-1){c[y>>2]=54656;c[y+4>>2]=32;c[y+8>>2]=0;DH(54656,y,286)}y=(c[13665]|0)-1|0;$=c[z+8>>2]|0;do{if((c[z+12>>2]|0)-$>>2>>>0>y>>>0){aa=c[$+(y<<2)>>2]|0;if((aa|0)==0){break}ab=aa;Dn(c[_>>2]|0)|0;L7:do{switch(k<<24>>24|0){case 84:{aa=e|0;c[S>>2]=c[aa>>2];c[T>>2]=c[f>>2];GH(R,d,S,T,g,h,j,26368,26400);c[aa>>2]=c[R>>2];break};case 119:{c[o>>2]=c[f>>2];aa=GU(e,o,h,ab,1)|0;ac=c[h>>2]|0;if((ac&4|0)==0&(aa|0)<7){c[j+24>>2]=aa;break L7}else{c[h>>2]=ac|4;break L7}break};case 88:{ac=d+8|0;aa=g3[c[(c[ac>>2]|0)+24>>2]&511](ac)|0;ac=e|0;c[X>>2]=c[ac>>2];c[Y>>2]=c[f>>2];ad=a[aa]|0;if((ad&1)==0){ae=aa+4|0;af=aa+4|0}else{ag=c[aa+8>>2]|0;ae=ag;af=ag}ag=ad&255;if((ag&1|0)==0){ah=ag>>>1}else{ah=c[aa+4>>2]|0}GH(W,d,X,Y,g,h,j,af,ae+(ah<<2)|0);c[ac>>2]=c[W>>2];break};case 120:{ac=c[(c[d>>2]|0)+20>>2]|0;c[U>>2]=c[e>>2];c[V>>2]=c[f>>2];hr[ac&127](b,d,U,V,g,h,j);i=l;return};case 100:case 101:{ac=j+12|0;c[v>>2]=c[f>>2];aa=GU(e,v,h,ab,2)|0;ag=c[h>>2]|0;do{if((ag&4|0)==0){if((aa-1|0)>>>0>=31>>>0){break}c[ac>>2]=aa;break L7}}while(0);c[h>>2]=ag|4;break};case 89:{c[m>>2]=c[f>>2];aa=GU(e,m,h,ab,4)|0;if((c[h>>2]&4|0)!=0){break L7}c[j+20>>2]=aa-1900;break};case 83:{c[p>>2]=c[f>>2];aa=GU(e,p,h,ab,2)|0;ac=c[h>>2]|0;if((ac&4|0)==0&(aa|0)<61){c[j>>2]=aa;break L7}else{c[h>>2]=ac|4;break L7}break};case 70:{ac=e|0;c[H>>2]=c[ac>>2];c[I>>2]=c[f>>2];GH(G,d,H,I,g,h,j,26336,26368);c[ac>>2]=c[G>>2];break};case 109:{c[r>>2]=c[f>>2];ac=(GU(e,r,h,ab,2)|0)-1|0;aa=c[h>>2]|0;if((aa&4|0)==0&(ac|0)<12){c[j+16>>2]=ac;break L7}else{c[h>>2]=aa|4;break L7}break};case 77:{c[q>>2]=c[f>>2];aa=GU(e,q,h,ab,2)|0;ac=c[h>>2]|0;if((ac&4|0)==0&(aa|0)<60){c[j+4>>2]=aa;break L7}else{c[h>>2]=ac|4;break L7}break};case 110:case 116:{c[J>>2]=c[f>>2];GR(0,e,J,h,ab);break};case 112:{c[K>>2]=c[f>>2];GS(d,j+8|0,e,K,h,ab);break};case 37:{c[Z>>2]=c[f>>2];GT(0,e,Z,h,ab);break};case 99:{ac=d+8|0;aa=g3[c[(c[ac>>2]|0)+12>>2]&511](ac)|0;ac=e|0;c[B>>2]=c[ac>>2];c[C>>2]=c[f>>2];ad=a[aa]|0;if((ad&1)==0){ai=aa+4|0;aj=aa+4|0}else{ak=c[aa+8>>2]|0;ai=ak;aj=ak}ak=ad&255;if((ak&1|0)==0){al=ak>>>1}else{al=c[aa+4>>2]|0}GH(A,d,B,C,g,h,j,aj,ai+(al<<2)|0);c[ac>>2]=c[A>>2];break};case 98:case 66:case 104:{ac=c[f>>2]|0;aa=d+8|0;ak=g3[c[(c[aa>>2]|0)+4>>2]&511](aa)|0;c[w>>2]=ac;ac=(FD(e,w,ak,ak+288|0,ab,h,0)|0)-ak|0;if((ac|0)>=288){break L7}c[j+16>>2]=((ac|0)/12|0|0)%12|0;break};case 97:case 65:{ac=c[f>>2]|0;ak=d+8|0;aa=g3[c[c[ak>>2]>>2]&511](ak)|0;c[x>>2]=ac;ac=(FD(e,x,aa,aa+168|0,ab,h,0)|0)-aa|0;if((ac|0)>=168){break L7}c[j+24>>2]=((ac|0)/12|0|0)%7|0;break};case 72:{c[u>>2]=c[f>>2];ac=GU(e,u,h,ab,2)|0;aa=c[h>>2]|0;if((aa&4|0)==0&(ac|0)<24){c[j+8>>2]=ac;break L7}else{c[h>>2]=aa|4;break L7}break};case 106:{c[s>>2]=c[f>>2];aa=GU(e,s,h,ab,3)|0;ac=c[h>>2]|0;if((ac&4|0)==0&(aa|0)<366){c[j+28>>2]=aa;break L7}else{c[h>>2]=ac|4;break L7}break};case 121:{c[n>>2]=c[f>>2];ac=GU(e,n,h,ab,4)|0;if((c[h>>2]&4|0)!=0){break L7}if((ac|0)<69){am=ac+2e3|0}else{am=(ac-69|0)>>>0<31>>>0?ac+1900|0:ac}c[j+20>>2]=am-1900;break};case 73:{ac=j+8|0;c[t>>2]=c[f>>2];aa=GU(e,t,h,ab,2)|0;ak=c[h>>2]|0;do{if((ak&4|0)==0){if((aa-1|0)>>>0>=12>>>0){break}c[ac>>2]=aa;break L7}}while(0);c[h>>2]=ak|4;break};case 68:{aa=e|0;c[E>>2]=c[aa>>2];c[F>>2]=c[f>>2];GH(D,d,E,F,g,h,j,26472,26504);c[aa>>2]=c[D>>2];break};case 114:{aa=e|0;c[M>>2]=c[aa>>2];c[N>>2]=c[f>>2];GH(L,d,M,N,g,h,j,26424,26468);c[aa>>2]=c[L>>2];break};case 82:{aa=e|0;c[P>>2]=c[aa>>2];c[Q>>2]=c[f>>2];GH(O,d,P,Q,g,h,j,26400,26420);c[aa>>2]=c[O>>2];break};default:{c[h>>2]=c[h>>2]|4}}}while(0);c[b>>2]=c[e>>2];i=l;return}}while(0);l=gJ(4)|0;Kr(l);eR(l|0,45560,458)}function GR(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;a=i;g=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[g>>2];g=b|0;b=d|0;d=f;L1:while(1){h=c[g>>2]|0;do{if((h|0)==0){j=1}else{k=c[h+12>>2]|0;if((k|0)==(c[h+16>>2]|0)){l=g3[c[(c[h>>2]|0)+36>>2]&511](h)|0}else{l=c[k>>2]|0}if((l|0)==-1){c[g>>2]=0;j=1;break}else{j=(c[g>>2]|0)==0;break}}}while(0);h=c[b>>2]|0;do{if((h|0)==0){m=15}else{k=c[h+12>>2]|0;if((k|0)==(c[h+16>>2]|0)){n=g3[c[(c[h>>2]|0)+36>>2]&511](h)|0}else{n=c[k>>2]|0}if((n|0)==-1){c[b>>2]=0;m=15;break}else{k=(h|0)==0;if(j^k){o=h;p=k;break}else{q=h;r=k;break L1}}}}while(0);if((m|0)==15){m=0;if(j){q=0;r=1;break}else{o=0;p=1}}h=c[g>>2]|0;k=c[h+12>>2]|0;if((k|0)==(c[h+16>>2]|0)){s=g3[c[(c[h>>2]|0)+36>>2]&511](h)|0}else{s=c[k>>2]|0}if(!(hd[c[(c[d>>2]|0)+12>>2]&127](f,8192,s)|0)){q=o;r=p;break}k=c[g>>2]|0;h=k+12|0;t=c[h>>2]|0;if((t|0)==(c[k+16>>2]|0)){g3[c[(c[k>>2]|0)+40>>2]&511](k)|0;continue}else{c[h>>2]=t+4;continue}}p=c[g>>2]|0;do{if((p|0)==0){u=1}else{o=c[p+12>>2]|0;if((o|0)==(c[p+16>>2]|0)){v=g3[c[(c[p>>2]|0)+36>>2]&511](p)|0}else{v=c[o>>2]|0}if((v|0)==-1){c[g>>2]=0;u=1;break}else{u=(c[g>>2]|0)==0;break}}}while(0);do{if(r){m=37}else{g=c[q+12>>2]|0;if((g|0)==(c[q+16>>2]|0)){w=g3[c[(c[q>>2]|0)+36>>2]&511](q)|0}else{w=c[g>>2]|0}if((w|0)==-1){c[b>>2]=0;m=37;break}if(!(u^(q|0)==0)){break}i=a;return}}while(0);do{if((m|0)==37){if(u){break}i=a;return}}while(0);c[e>>2]=c[e>>2]|2;i=a;return}function GS(a,b,e,f,g,h){a=a|0;b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0;j=i;i=i+8|0;k=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[k>>2];k=j|0;l=a+8|0;a=g3[c[(c[l>>2]|0)+8>>2]&511](l)|0;l=d[a]|0;if((l&1|0)==0){m=l>>>1}else{m=c[a+4>>2]|0}l=d[a+12|0]|0;if((l&1|0)==0){n=l>>>1}else{n=c[a+16>>2]|0}if((m|0)==(-n|0)){c[g>>2]=c[g>>2]|4;i=j;return}c[k>>2]=c[f>>2];f=FD(e,k,a,a+24|0,h,g,0)|0;g=f-a|0;do{if((f|0)==(a|0)){if((c[b>>2]|0)!=12){break}c[b>>2]=0;i=j;return}}while(0);if((g|0)!=12){i=j;return}g=c[b>>2]|0;if((g|0)>=12){i=j;return}c[b>>2]=g+12;i=j;return}function GT(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;a=i;g=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[g>>2];g=b|0;b=c[g>>2]|0;do{if((b|0)==0){h=1}else{j=c[b+12>>2]|0;if((j|0)==(c[b+16>>2]|0)){k=g3[c[(c[b>>2]|0)+36>>2]&511](b)|0}else{k=c[j>>2]|0}if((k|0)==-1){c[g>>2]=0;h=1;break}else{h=(c[g>>2]|0)==0;break}}}while(0);k=d|0;d=c[k>>2]|0;do{if((d|0)==0){l=14}else{b=c[d+12>>2]|0;if((b|0)==(c[d+16>>2]|0)){m=g3[c[(c[d>>2]|0)+36>>2]&511](d)|0}else{m=c[b>>2]|0}if((m|0)==-1){c[k>>2]=0;l=14;break}else{b=(d|0)==0;if(h^b){n=d;o=b;break}else{l=16;break}}}}while(0);if((l|0)==14){if(h){l=16}else{n=0;o=1}}if((l|0)==16){c[e>>2]=c[e>>2]|6;i=a;return}h=c[g>>2]|0;d=c[h+12>>2]|0;if((d|0)==(c[h+16>>2]|0)){p=g3[c[(c[h>>2]|0)+36>>2]&511](h)|0}else{p=c[d>>2]|0}if((hd[c[(c[f>>2]|0)+52>>2]&127](f,p,0)|0)<<24>>24!=37){c[e>>2]=c[e>>2]|4;i=a;return}p=c[g>>2]|0;f=p+12|0;d=c[f>>2]|0;if((d|0)==(c[p+16>>2]|0)){g3[c[(c[p>>2]|0)+40>>2]&511](p)|0}else{c[f>>2]=d+4}d=c[g>>2]|0;do{if((d|0)==0){q=1}else{f=c[d+12>>2]|0;if((f|0)==(c[d+16>>2]|0)){r=g3[c[(c[d>>2]|0)+36>>2]&511](d)|0}else{r=c[f>>2]|0}if((r|0)==-1){c[g>>2]=0;q=1;break}else{q=(c[g>>2]|0)==0;break}}}while(0);do{if(o){l=38}else{g=c[n+12>>2]|0;if((g|0)==(c[n+16>>2]|0)){s=g3[c[(c[n>>2]|0)+36>>2]&511](n)|0}else{s=c[g>>2]|0}if((s|0)==-1){c[k>>2]=0;l=38;break}if(!(q^(n|0)==0)){break}i=a;return}}while(0);do{if((l|0)==38){if(q){break}i=a;return}}while(0);c[e>>2]=c[e>>2]|2;i=a;return}function GU(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0;g=i;h=b;b=i;i=i+4|0;i=i+7&-8;c[b>>2]=c[h>>2];h=a|0;a=c[h>>2]|0;do{if((a|0)==0){j=1}else{k=c[a+12>>2]|0;if((k|0)==(c[a+16>>2]|0)){l=g3[c[(c[a>>2]|0)+36>>2]&511](a)|0}else{l=c[k>>2]|0}if((l|0)==-1){c[h>>2]=0;j=1;break}else{j=(c[h>>2]|0)==0;break}}}while(0);l=b|0;b=c[l>>2]|0;do{if((b|0)==0){m=14}else{a=c[b+12>>2]|0;if((a|0)==(c[b+16>>2]|0)){n=g3[c[(c[b>>2]|0)+36>>2]&511](b)|0}else{n=c[a>>2]|0}if((n|0)==-1){c[l>>2]=0;m=14;break}else{if(j^(b|0)==0){o=b;break}else{m=16;break}}}}while(0);if((m|0)==14){if(j){m=16}else{o=0}}if((m|0)==16){c[d>>2]=c[d>>2]|6;p=0;i=g;return p|0}j=c[h>>2]|0;b=c[j+12>>2]|0;if((b|0)==(c[j+16>>2]|0)){q=g3[c[(c[j>>2]|0)+36>>2]&511](j)|0}else{q=c[b>>2]|0}b=e;if(!(hd[c[(c[b>>2]|0)+12>>2]&127](e,2048,q)|0)){c[d>>2]=c[d>>2]|4;p=0;i=g;return p|0}j=e;n=(hd[c[(c[j>>2]|0)+52>>2]&127](e,q,0)|0)<<24>>24;q=c[h>>2]|0;a=q+12|0;k=c[a>>2]|0;if((k|0)==(c[q+16>>2]|0)){g3[c[(c[q>>2]|0)+40>>2]&511](q)|0;r=n;s=f;t=o}else{c[a>>2]=k+4;r=n;s=f;t=o}while(1){u=r-48|0;o=s-1|0;f=c[h>>2]|0;do{if((f|0)==0){v=0}else{n=c[f+12>>2]|0;if((n|0)==(c[f+16>>2]|0)){w=g3[c[(c[f>>2]|0)+36>>2]&511](f)|0}else{w=c[n>>2]|0}if((w|0)==-1){c[h>>2]=0;v=0;break}else{v=c[h>>2]|0;break}}}while(0);f=(v|0)==0;if((t|0)==0){x=v;y=0}else{n=c[t+12>>2]|0;if((n|0)==(c[t+16>>2]|0)){z=g3[c[(c[t>>2]|0)+36>>2]&511](t)|0}else{z=c[n>>2]|0}if((z|0)==-1){c[l>>2]=0;A=0}else{A=t}x=c[h>>2]|0;y=A}B=(y|0)==0;if(!((f^B)&(o|0)>0)){break}f=c[x+12>>2]|0;if((f|0)==(c[x+16>>2]|0)){C=g3[c[(c[x>>2]|0)+36>>2]&511](x)|0}else{C=c[f>>2]|0}if(!(hd[c[(c[b>>2]|0)+12>>2]&127](e,2048,C)|0)){p=u;m=68;break}f=((hd[c[(c[j>>2]|0)+52>>2]&127](e,C,0)|0)<<24>>24)+(u*10|0)|0;n=c[h>>2]|0;k=n+12|0;a=c[k>>2]|0;if((a|0)==(c[n+16>>2]|0)){g3[c[(c[n>>2]|0)+40>>2]&511](n)|0;r=f;s=o;t=y;continue}else{c[k>>2]=a+4;r=f;s=o;t=y;continue}}if((m|0)==68){i=g;return p|0}do{if((x|0)==0){D=1}else{t=c[x+12>>2]|0;if((t|0)==(c[x+16>>2]|0)){E=g3[c[(c[x>>2]|0)+36>>2]&511](x)|0}else{E=c[t>>2]|0}if((E|0)==-1){c[h>>2]=0;D=1;break}else{D=(c[h>>2]|0)==0;break}}}while(0);do{if(B){m=60}else{h=c[y+12>>2]|0;if((h|0)==(c[y+16>>2]|0)){F=g3[c[(c[y>>2]|0)+36>>2]&511](y)|0}else{F=c[h>>2]|0}if((F|0)==-1){c[l>>2]=0;m=60;break}if(D^(y|0)==0){p=u}else{break}i=g;return p|0}}while(0);do{if((m|0)==60){if(D){break}else{p=u}i=g;return p|0}}while(0);c[d>>2]=c[d>>2]|2;p=u;i=g;return p|0}function GV(b){b=b|0;var d=0,e=0,f=0,g=0;d=b;e=b+8|0;f=c[e>>2]|0;do{if((a[55400]|0)==0){if((bN(55400)|0)==0){break}c[13026]=fM(2147483647,22888,0)|0}}while(0);if((f|0)==(c[13026]|0)){g=b|0;Dl(g);KU(d);return}ex(c[e>>2]|0);g=b|0;Dl(g);KU(d);return}function GW(b){b=b|0;var d=0,e=0,f=0;d=b+8|0;e=c[d>>2]|0;do{if((a[55400]|0)==0){if((bN(55400)|0)==0){break}c[13026]=fM(2147483647,22888,0)|0}}while(0);if((e|0)==(c[13026]|0)){f=b|0;Dl(f);return}ex(c[d>>2]|0);f=b|0;Dl(f);return}function GX(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;g=i;i=i+112|0;f=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[f>>2];f=g|0;l=g+8|0;m=l|0;n=f|0;a[n]=37;o=f+1|0;a[o]=j;p=f+2|0;a[p]=k;a[f+3|0]=0;if(k<<24>>24!=0){a[o]=k;a[p]=j}j=eM(m|0,100,n|0,h|0,c[d+8>>2]|0)|0;d=l+j|0;l=c[e>>2]|0;if((j|0)==0){q=l;r=b|0;c[r>>2]=q;i=g;return}else{s=l;t=m}while(1){m=a[t]|0;if((s|0)==0){u=0}else{l=s+24|0;j=c[l>>2]|0;if((j|0)==(c[s+28>>2]|0)){v=hx[c[(c[s>>2]|0)+52>>2]&127](s,m&255)|0}else{c[l>>2]=j+1;a[j]=m;v=m&255}u=(v|0)==-1?0:s}m=t+1|0;if((m|0)==(d|0)){q=u;break}else{s=u;t=m}}r=b|0;c[r>>2]=q;i=g;return}function GY(b){b=b|0;var d=0,e=0,f=0,g=0;d=b;e=b+8|0;f=c[e>>2]|0;do{if((a[55400]|0)==0){if((bN(55400)|0)==0){break}c[13026]=fM(2147483647,22888,0)|0}}while(0);if((f|0)==(c[13026]|0)){g=b|0;Dl(g);KU(d);return}ex(c[e>>2]|0);g=b|0;Dl(g);KU(d);return}function GZ(b){b=b|0;var d=0,e=0,f=0;d=b+8|0;e=c[d>>2]|0;do{if((a[55400]|0)==0){if((bN(55400)|0)==0){break}c[13026]=fM(2147483647,22888,0)|0}}while(0);if((e|0)==(c[13026]|0)){f=b|0;Dl(f);return}ex(c[d>>2]|0);f=b|0;Dl(f);return}function G_(a,b,d,e,f,g,h,j){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;f=i;i=i+408|0;e=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[e>>2];e=f|0;k=f+400|0;l=e|0;c[k>>2]=e+400;G$(b+8|0,l,k,g,h,j);j=c[k>>2]|0;k=c[d>>2]|0;if((l|0)==(j|0)){m=k;n=a|0;c[n>>2]=m;i=f;return}else{o=k;p=l}while(1){l=c[p>>2]|0;if((o|0)==0){q=0}else{k=o+24|0;d=c[k>>2]|0;if((d|0)==(c[o+28>>2]|0)){r=hx[c[(c[o>>2]|0)+52>>2]&127](o,l)|0}else{c[k>>2]=d+4;c[d>>2]=l;r=l}q=(r|0)==-1?0:o}l=p+4|0;if((l|0)==(j|0)){m=q;break}else{o=q;p=l}}n=a|0;c[n>>2]=m;i=f;return}function G$(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;j=i;i=i+120|0;k=j|0;l=j+112|0;m=i;i=i+4|0;i=i+7&-8;n=j+8|0;o=k|0;a[o]=37;p=k+1|0;a[p]=g;q=k+2|0;a[q]=h;a[k+3|0]=0;if(h<<24>>24!=0){a[p]=h;a[q]=g}g=b|0;eM(n|0,100,o|0,f|0,c[g>>2]|0)|0;c[l>>2]=0;c[l+4>>2]=0;c[m>>2]=n;n=(c[e>>2]|0)-d>>2;f=gt(c[g>>2]|0)|0;g=Kh(d,m,n,l)|0;if((f|0)!=0){gt(f|0)|0}if((g|0)==-1){HN(18864)}else{c[e>>2]=d+(g<<2);i=j;return}}function G0(a){a=a|0;Dl(a|0);KU(a);return}function G1(a){a=a|0;Dl(a|0);return}function G2(a){a=a|0;return 127}function G3(a){a=a|0;return 127}function G4(a,b){a=a|0;b=b|0;K1(a|0,0,12)|0;return}function G5(a,b){a=a|0;b=b|0;K1(a|0,0,12)|0;return}function G6(a,b){a=a|0;b=b|0;K1(a|0,0,12)|0;return}function G7(a,b){a=a|0;b=b|0;DL(a,1,45);return}function G8(a){a=a|0;return 0}function G9(b,c){b=b|0;c=c|0;c=b;C=67109634;a[c]=C;C=C>>8;a[c+1|0]=C;C=C>>8;a[c+2|0]=C;C=C>>8;a[c+3|0]=C;return}function Ha(b,c){b=b|0;c=c|0;c=b;C=67109634;a[c]=C;C=C>>8;a[c+1|0]=C;C=C>>8;a[c+2|0]=C;C=C>>8;a[c+3|0]=C;return}function Hb(a){a=a|0;Dl(a|0);KU(a);return}function Hc(a){a=a|0;Dl(a|0);return}function Hd(a){a=a|0;return 127}function He(a){a=a|0;return 127}function Hf(a,b){a=a|0;b=b|0;K1(a|0,0,12)|0;return}function Hg(a,b){a=a|0;b=b|0;K1(a|0,0,12)|0;return}function Hh(a,b){a=a|0;b=b|0;K1(a|0,0,12)|0;return}function Hi(a,b){a=a|0;b=b|0;DL(a,1,45);return}function Hj(a){a=a|0;return 0}function Hk(b,c){b=b|0;c=c|0;c=b;C=67109634;a[c]=C;C=C>>8;a[c+1|0]=C;C=C>>8;a[c+2|0]=C;C=C>>8;a[c+3|0]=C;return}function Hl(b,c){b=b|0;c=c|0;c=b;C=67109634;a[c]=C;C=C>>8;a[c+1|0]=C;C=C>>8;a[c+2|0]=C;C=C>>8;a[c+3|0]=C;return}function Hm(a){a=a|0;Dl(a|0);KU(a);return}function Hn(a){a=a|0;Dl(a|0);return}function Ho(a){a=a|0;return 2147483647}function Hp(a){a=a|0;return 2147483647}function Hq(a,b){a=a|0;b=b|0;K1(a|0,0,12)|0;return}function Hr(a,b){a=a|0;b=b|0;K1(a|0,0,12)|0;return}function Hs(a,b){a=a|0;b=b|0;K1(a|0,0,12)|0;return}function Ht(a,b){a=a|0;b=b|0;DX(a,1,45);return}function Hu(a){a=a|0;return 0}function Hv(b,c){b=b|0;c=c|0;c=b;C=67109634;a[c]=C;C=C>>8;a[c+1|0]=C;C=C>>8;a[c+2|0]=C;C=C>>8;a[c+3|0]=C;return}function Hw(b,c){b=b|0;c=c|0;c=b;C=67109634;a[c]=C;C=C>>8;a[c+1|0]=C;C=C>>8;a[c+2|0]=C;C=C>>8;a[c+3|0]=C;return}function Hx(a){a=a|0;Dl(a|0);KU(a);return}function Hy(a){a=a|0;Dl(a|0);return}function Hz(a){a=a|0;return 2147483647}function HA(a){a=a|0;return 2147483647}function HB(a,b){a=a|0;b=b|0;K1(a|0,0,12)|0;return}function HC(a,b){a=a|0;b=b|0;K1(a|0,0,12)|0;return}function HD(a,b){a=a|0;b=b|0;K1(a|0,0,12)|0;return}function HE(a,b){a=a|0;b=b|0;DX(a,1,45);return}function HF(a){a=a|0;return 0}function HG(b,c){b=b|0;c=c|0;c=b;C=67109634;a[c]=C;C=C>>8;a[c+1|0]=C;C=C>>8;a[c+2|0]=C;C=C>>8;a[c+3|0]=C;return}function HH(b,c){b=b|0;c=c|0;c=b;C=67109634;a[c]=C;C=C>>8;a[c+1|0]=C;C=C>>8;a[c+2|0]=C;C=C>>8;a[c+3|0]=C;return}function HI(a){a=a|0;Dl(a|0);KU(a);return}function HJ(a){a=a|0;Dl(a|0);return}function HK(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0;d=i;i=i+280|0;l=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[l>>2];l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=d|0;m=d+16|0;n=d+120|0;o=d+128|0;p=d+136|0;q=d+144|0;r=d+152|0;s=d+160|0;t=d+176|0;u=n|0;c[u>>2]=m;v=n+4|0;c[v>>2]=446;w=m+100|0;D5(p,h);m=p|0;x=c[m>>2]|0;if((c[13666]|0)!=-1){c[l>>2]=54664;c[l+4>>2]=32;c[l+8>>2]=0;DH(54664,l,286)}l=(c[13667]|0)-1|0;y=c[x+8>>2]|0;do{if((c[x+12>>2]|0)-y>>2>>>0>l>>>0){z=c[y+(l<<2)>>2]|0;if((z|0)==0){break}A=z;a[q]=0;B=f|0;c[r>>2]=c[B>>2];do{if(HM(e,r,g,p,c[h+4>>2]|0,j,q,A,n,o,w)|0){C=s|0;hD[c[(c[z>>2]|0)+32>>2]&63](A,26320,26330,C)|0;D=t|0;E=c[o>>2]|0;F=c[u>>2]|0;G=E-F|0;do{if((G|0)>98){H=KM(G+2|0)|0;if((H|0)!=0){I=H;J=H;break}KZ();I=0;J=0}else{I=D;J=0}}while(0);if((a[q]&1)==0){K=I}else{a[I]=45;K=I+1|0}if(F>>>0<E>>>0){G=s+10|0;H=s;L=K;M=F;while(1){N=C;while(1){if((N|0)==(G|0)){O=G;break}if((a[N]|0)==(a[M]|0)){O=N;break}else{N=N+1|0}}a[L]=a[26320+(O-H)|0]|0;N=M+1|0;P=L+1|0;if(N>>>0<(c[o>>2]|0)>>>0){L=P;M=N}else{Q=P;break}}}else{Q=K}a[Q]=0;M=gu(D|0,23880,(L=i,i=i+8|0,c[L>>2]=k,L)|0)|0;i=L;if((M|0)==1){if((J|0)==0){break}KN(J);break}M=gJ(8)|0;Dt(M,23608);eR(M|0,45576,48)}}while(0);A=e|0;z=c[A>>2]|0;do{if((z|0)==0){R=0}else{if((c[z+12>>2]|0)!=(c[z+16>>2]|0)){R=z;break}if((g3[c[(c[z>>2]|0)+36>>2]&511](z)|0)!=-1){R=z;break}c[A>>2]=0;R=0}}while(0);A=(R|0)==0;z=c[B>>2]|0;do{if((z|0)==0){S=45}else{if((c[z+12>>2]|0)!=(c[z+16>>2]|0)){if(A){break}else{S=47;break}}if((g3[c[(c[z>>2]|0)+36>>2]&511](z)|0)==-1){c[B>>2]=0;S=45;break}else{if(A^(z|0)==0){break}else{S=47;break}}}}while(0);if((S|0)==45){if(A){S=47}}if((S|0)==47){c[j>>2]=c[j>>2]|2}c[b>>2]=R;Dn(c[m>>2]|0)|0;z=c[u>>2]|0;c[u>>2]=0;if((z|0)==0){i=d;return}g$[c[v>>2]&1023](z);i=d;return}}while(0);d=gJ(4)|0;Kr(d);eR(d|0,45560,458)}function HL(a){a=a|0;return}
function hN(a){a=a|0;var b=0;b=i;i=i+a|0;i=i+7&-8;return b|0}function hO(){return i|0}function hP(a){a=a|0;i=a}function hQ(a,b){a=a|0;b=b|0;if((x|0)==0){x=a;y=b}}function hR(b){b=b|0;a[k]=a[b];a[k+1|0]=a[b+1|0];a[k+2|0]=a[b+2|0];a[k+3|0]=a[b+3|0]}function hS(b){b=b|0;a[k]=a[b];a[k+1|0]=a[b+1|0];a[k+2|0]=a[b+2|0];a[k+3|0]=a[b+3|0];a[k+4|0]=a[b+4|0];a[k+5|0]=a[b+5|0];a[k+6|0]=a[b+6|0];a[k+7|0]=a[b+7|0]}function hT(a){a=a|0;K=a}function hU(a){a=a|0;L=a}function hV(a){a=a|0;M=a}function hW(a){a=a|0;N=a}function hX(a){a=a|0;O=a}function hY(a){a=a|0;P=a}function hZ(a){a=a|0;Q=a}function h_(a){a=a|0;R=a}function h$(a){a=a|0;S=a}function h0(a){a=a|0;T=a}function h1(){c[11306]=s+8;c[11310]=s+8;c[11314]=s+8;c[11318]=s+8;c[11322]=s+8;c[11326]=s+8;c[11330]=s+8;c[11334]=s+8;c[11338]=s+8;c[11342]=s+8;c[11346]=s+8;c[11350]=s+8;c[11354]=s+8;c[11358]=s+8;c[11362]=s+8;c[11366]=s+8;c[11370]=s+8;c[11374]=s+8;c[11378]=s+8;c[11382]=o+8;c[11384]=o+8;c[11386]=s+8;c[11390]=s+8;c[11394]=s+8;c[11398]=s+8;c[11402]=s+8;c[11406]=o+8;c[11440]=s+8;c[11444]=s+8;c[11508]=s+8;c[11512]=s+8;c[11532]=o+8;c[11534]=s+8;c[11570]=s+8;c[11574]=s+8;c[11610]=s+8;c[11614]=s+8;c[11634]=o+8;c[11636]=o+8;c[11638]=s+8;c[11642]=s+8;c[11646]=s+8;c[11650]=s+8;c[11654]=s+8;c[11658]=o+8;c[11660]=o+8;c[11662]=o+8;c[11672]=o+8;c[11674]=o+8;c[11676]=o+8;c[11678]=o+8;c[11704]=s+8;c[11708]=o+8;c[11710]=s+8;c[11714]=s+8;c[11718]=s+8;c[11722]=o+8;c[11724]=o+8;c[11726]=o+8;c[11728]=o+8;c[11762]=o+8;c[11764]=o+8;c[11766]=o+8;c[11768]=s+8;c[11772]=s+8;c[11776]=o+8;c[11778]=o+8;c[11780]=s+8;c[11784]=s+8;c[11788]=s+8;c[11792]=s+8;c[11796]=s+8;c[11800]=s+8;c[11804]=s+8;c[11808]=s+8;c[11812]=o+8;c[11814]=s+8;c[11818]=s+8;c[11822]=s+8;c[11826]=s+8;c[11830]=o+8;c[11832]=o+8;c[11834]=o+8;c[11836]=o+8;c[11838]=s+8;c[11842]=s+8;c[11846]=s+8;c[11850]=s+8;c[11854]=s+8;c[11858]=o+8;c[11860]=o+8;c[11862]=s+8;c[11866]=s+8;c[11870]=o+8;c[11872]=s+8;c[11876]=o+8;c[11878]=s+8;c[11882]=s+8;c[11886]=s+8;c[11890]=s+8;c[11894]=s+8;c[11898]=s+8;c[11902]=o+8;c[11904]=s+8;c[11908]=s+8;c[11912]=s+8;c[11916]=o+8;c[11918]=o+8;c[11920]=s+8;c[11924]=s+8;c[11928]=s+8;c[11932]=s+8;c[11936]=s+8;c[11940]=s+8;c[11944]=s+8;c[11948]=s+8;c[11952]=s+8;c[11956]=s+8;c[11960]=o+8;c[11962]=o+8;c[11964]=s+8;c[11968]=s+8;c[11972]=o+8;c[11974]=o+8;c[11976]=o+8;c[11978]=s+8;c[11982]=s+8;c[11986]=s+8;c[11990]=s+8;c[11994]=s+8;c[11998]=s+8;c[12002]=s+8;c[12006]=s+8;c[12010]=s+8;c[12014]=s+8;c[12018]=s+8;c[12022]=o+8;c[12024]=s+8;c[12028]=s+8;c[12032]=s+8;c[12036]=s+8;c[12040]=s+8;c[12044]=s+8;c[12048]=o+8;c[12050]=s+8;c[12054]=s+8;c[12058]=s+8;c[12062]=o+8;c[12064]=s+8;c[12068]=s+8;c[12072]=o+8;c[12074]=s+8;c[12078]=s+8;c[12082]=s+8;c[12086]=s+8;c[12090]=s+8;c[12094]=o+8;c[12096]=s+8;c[12100]=o+8;c[12102]=o+8;c[12110]=o+8;c[12112]=s+8;c[12116]=s+8;c[12120]=o+8;c[12130]=o+8;c[12132]=s+8;c[12136]=s+8;c[12140]=s+8;c[12144]=s+8;c[12148]=s+8;c[12152]=o+8;c[12154]=o+8;c[12156]=s+8;c[12160]=s+8;c[12164]=s+8;c[12168]=s+8;c[12172]=s+8;c[12176]=s+8;c[12180]=s+8;c[12184]=s+8;c[12188]=o+8;c[12190]=s+8;c[12194]=s+8;c[12198]=s+8;c[12202]=o+8;c[12204]=o+8;c[12206]=s+8;c[12210]=o+8;c[12212]=s+8;c[12216]=s+8;c[12220]=o+8;c[12222]=o+8;c[12224]=o+8;c[12226]=s+8;c[12230]=s+8;c[12234]=o+8;c[12236]=s+8}function h2(){var a=0,b=0,d=0,e=0,f=0,g=0,h=0;a=i;i=i+72|0;b=a|0;d=a+48|0;e=a+56|0;f=a+64|0;gg(b|0)|0;g=c[b>>2]|0;if((g|0)==768){h=h4()|0;h8(h,c[b+12>>2]|0)}else if((g|0)==769){h=h4()|0;h9(h,c[b+12>>2]|0)}else if((g|0)==28673){eC(d|0,e|0,f|0);f=c[e>>2]|0;bX(26008,(g=i,i=i+16|0,c[g>>2]=c[d>>2],c[g+8>>2]=f,g)|0)|0;i=g;c[2]=c[d>>2];c[534]=c[e>>2]}e=h4()|0;ia(e,c[2]|0,c[534]|0);i=a;return}function h3(){var a=0,b=0,d=0,e=0;a=i;if((f8(32)|0)!=0){b=b7()|0;bX(25976,(d=i,i=i+8|0,c[d>>2]=b,d)|0)|0;i=d;e=1;i=a;return e|0}eW(5,1)|0;if((dv(c[2]|0,c[534]|0,24,67108864)|0)==0){b=b7()|0;bX(22384,(d=i,i=i+8|0,c[d>>2]=b,d)|0)|0;i=d;e=1;i=a;return e|0}else{h7(h4()|0);cE(14,0,1);e=0;i=a;return e|0}return 0}function h4(){var a=0,b=0,d=0;a=c[13790]|0;if((a|0)!=0){b=a;return b|0}a=KS(8)|0;d=a;c[a>>2]=30736;c[13790]=d;b=d;return b|0}function h5(a){a=a|0;var b=0,d=0;c[a>>2]=30736;b=c[a+4>>2]|0;if((b|0)==0){d=a;KU(d);return}ij(b);d=a;KU(d);return}function h6(a){a=a|0;var b=0;c[a>>2]=30736;b=c[a+4>>2]|0;if((b|0)==0){return}ij(b);return}function h7(a){a=a|0;var b=0,d=0;b=i;eY(880)|0;c[12430]=d8(25456)|0;c[12434]=d8(21712)|0;c[12432]=d8(20536)|0;bX(18808,(d=i,i=i+8|0,c[d>>2]=c[12430],d)|0)|0;i=d;bX(17392,(d=i,i=i+8|0,c[d>>2]=c[12434],d)|0)|0;i=d;bX(15936,(d=i,i=i+8|0,c[d>>2]=c[12432],d)|0)|0;i=d;if((c[12430]|0)==0|(c[12434]|0)==0|(c[12432]|0)==0){eY(824)|0}d=KS(64)|0;ig(d,50088);c[a+4>>2]=d;ih(d);i=b;return}function h8(a,b){a=a|0;b=b|0;var d=0,e=0;a=i;switch(b|0){case 80:{d=-2302;break};case 81:{d=-2303;break};case 79:{d=-2301;break};case 30:case 31:case 32:case 33:{d=b+19&65535;break};case 82:{d=-2304;break};case 21:{d=114;break};default:{bX(13440,(e=i,i=i+8|0,c[e>>2]=b,e)|0)|0;i=e;i=a;return}}jO(jI()|0,d);i=a;return}function h9(a,b){a=a|0;b=b|0;var d=0,e=0;a=i;switch(b|0){case 82:{d=-2304;break};case 30:case 31:case 32:case 33:{d=b+19&65535;break};case 21:{d=114;break};case 79:{d=-2301;break};case 80:{d=-2302;break};case 81:{d=-2303;break};default:{bX(25960,(e=i,i=i+8|0,c[e>>2]=b,e)|0)|0;i=e;i=a;return}}jP(jI()|0,d);i=a;return}function ia(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;e=a+4|0;a=c[e>>2]|0;if((a|0)==0){return}ik(a);il(c[e>>2]|0,+(b>>>0>>>0),+(d>>>0>>>0));return}function ib(){var a=0,b=0;a=c[13788]|0;if((a|0)!=0){b=a;return b|0}a=KS(1)|0;c[13788]=a;b=a;return b|0}function ic(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;b=i;if((d|0)==0){dK(24056,24720,45,26176)}e=ge(d|0,21840)|0;if((e|0)==0){bX(20168,(f=i,i=i+8|0,c[f>>2]=d,f)|0)|0;i=f;dK(18456,24720,51,26176)}dO(e|0,0,2)|0;f=f_(e|0)|0;dO(e|0,0,0)|0;d=f+1|0;g=KM(d)|0;K1(g|0,0,d|0)|0;gx(g|0,f|0,1,e|0)|0;if((dh(e|0)|0)==0){bd(e|0)|0;c[a>>2]=f;c[a+4>>2]=g;c[a+8>>2]=0;i=b;return}else{dK(17056,24720,62,26176)}}function id(a,b){a=a|0;b=b|0;if((b|0)==0){dK(15688,24720,71,26160)}a=c[b+4>>2]|0;if((a|0)==0){dK(14928,24720,72,26160)}else{KN(a);return}}function ie(a){a=a|0;iF(a);return}function ig(a,b){a=a|0;b=b|0;k3(b);iI(iH()|0,b);return}function ih(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;d=i;i=i+256|0;e=d|0;f=d+24|0;g=d+32|0;h=d+56|0;j=d+64|0;k=d+80|0;l=d+88|0;m=d+152|0;n=d+176|0;o=d+216|0;p=d+232|0;q=d+248|0;r=kx(22360)|0;s=b+20|0;a[s]=r&1;if(r){eY(520)|0}else{eY(696)|0}r=kx(14512)|0;t=b+21|0;u=r&1;a[t]=u;if(r){kw(b+24|0);r=(c[b+44>>2]|0)!=0|0;a[t]=r;v=r}else{v=u}if(v<<24>>24==0){eY(464)|0}else{eY(576)|0}DO(49968,25704)|0;DO(49980,24824)|0;v=e;a[e]=16;u=v+1|0;r=u|0;C=1700163177;a[r]=C;C=C>>8;a[r+1|0]=C;C=C>>8;a[r+2|0]=C;C=C>>8;a[r+3|0]=C;r=u+4|0;C=2019914866;a[r]=C;C=C>>8;a[r+1|0]=C;C=C>>8;a[r+2|0]=C;C=C>>8;a[r+3|0]=C;a[v+9|0]=0;v=e+12|0;a[v]=14;r=v+1|0;a[r]=a[23888]|0;a[r+1|0]=a[23889]|0;a[r+2|0]=a[23890]|0;a[r+3|0]=a[23891]|0;a[r+4|0]=a[23892]|0;a[r+5|0]=a[23893]|0;a[r+6|0]=a[23894]|0;a[e+20|0]=0;iE(5e4,e|0,e+24|0);if((a[e+12|0]&1)!=0){KU(c[e+20>>2]|0)}if((a[e]&1)!=0){KU(c[e+8>>2]|0)}e=f|0;c[e>>2]=0;c[f+4>>2]=3;iD(50012,e,f+8|0);DO(49456,23752)|0;DO(49468,23552)|0;f=g;a[g]=16;e=f+1|0;r=e|0;C=1700163177;a[r]=C;C=C>>8;a[r+1|0]=C;C=C>>8;a[r+2|0]=C;C=C>>8;a[r+3|0]=C;r=e+4|0;C=2019914866;a[r]=C;C=C>>8;a[r+1|0]=C;C=C>>8;a[r+2|0]=C;C=C>>8;a[r+3|0]=C;a[f+9|0]=0;f=g+12|0;r=f;a[f]=20;K2(r+1|0,23336,10)|0;a[r+11|0]=0;iE(49488,g|0,g+24|0);if((a[g+12|0]&1)!=0){KU(c[g+20>>2]|0)}if((a[g]&1)!=0){KU(c[g+8>>2]|0)}g=h|0;c[g>>2]=0;c[h+4>>2]=2;iD(49500,g,h+8|0);DO(49576,23056)|0;DO(49588,22768)|0;h=j;a[j]=16;g=h+1|0;r=g|0;C=1700163177;a[r]=C;C=C>>8;a[r+1|0]=C;C=C>>8;a[r+2|0]=C;C=C>>8;a[r+3|0]=C;r=g+4|0;C=2019914866;a[r]=C;C=C>>8;a[r+1|0]=C;C=C>>8;a[r+2|0]=C;C=C>>8;a[r+3|0]=C;a[h+9|0]=0;iE(49608,j|0,j+12|0);if((a[j]&1)!=0){KU(c[j+8>>2]|0)}j=k|0;c[j>>2]=0;iD(49620,j,k+4|0);DO(49192,22544)|0;DO(49204,22168)|0;k=l;a[l]=16;j=k+1|0;h=j|0;C=1700163177;a[h]=C;C=C>>8;a[h+1|0]=C;C=C>>8;a[h+2|0]=C;C=C>>8;a[h+3|0]=C;h=j+4|0;C=2019914866;a[h]=C;C=C>>8;a[h+1|0]=C;C=C>>8;a[h+2|0]=C;C=C>>8;a[h+3|0]=C;a[k+9|0]=0;k=l+12|0;h=k;a[k]=16;k=h+1|0;j=k|0;C=1867411049;a[j]=C;C=C>>8;a[j+1|0]=C;C=C>>8;a[j+2|0]=C;C=C>>8;a[j+3|0]=C;j=k+4|0;C=1818324338;a[j]=C;C=C>>8;a[j+1|0]=C;C=C>>8;a[j+2|0]=C;C=C>>8;a[j+3|0]=C;a[h+9|0]=0;h=l+24|0;j=h;a[h]=20;K2(j+1|0,23336,10)|0;a[j+11|0]=0;j=KS(16)|0;c[l+44>>2]=j;c[l+36>>2]=17;c[l+40>>2]=11;K2(j|0,21592,11)|0;a[j+11|0]=0;j=KS(16)|0;c[l+56>>2]=j;c[l+48>>2]=17;c[l+52>>2]=13;K2(j|0,21576,13)|0;a[j+13|0]=0;iE(49224,l|0,l+60|0);if((a[l+48|0]&1)!=0){KU(c[l+56>>2]|0)}if((a[l+36|0]&1)!=0){KU(c[l+44>>2]|0)}if((a[l+24|0]&1)!=0){KU(c[l+32>>2]|0)}if((a[l+12|0]&1)!=0){KU(c[l+20>>2]|0)}if((a[l]&1)!=0){KU(c[l+8>>2]|0)}l=m|0;c[l>>2]=0;c[m+4>>2]=1;c[m+8>>2]=2;c[m+12>>2]=4;c[m+16>>2]=5;iD(49236,l,m+20|0);DO(49312,21424)|0;DO(49324,22768)|0;m=n;a[n]=16;l=m+1|0;j=l|0;C=1700163177;a[j]=C;C=C>>8;a[j+1|0]=C;C=C>>8;a[j+2|0]=C;C=C>>8;a[j+3|0]=C;j=l+4|0;C=2019914866;a[j]=C;C=C>>8;a[j+1|0]=C;C=C>>8;a[j+2|0]=C;C=C>>8;a[j+3|0]=C;a[m+9|0]=0;m=KS(16)|0;c[n+20>>2]=m;c[n+12>>2]=17;c[n+16>>2]=11;K2(m|0,21592,11)|0;a[m+11|0]=0;m=KS(16)|0;c[n+32>>2]=m;c[n+24>>2]=17;c[n+28>>2]=13;K2(m|0,21576,13)|0;a[m+13|0]=0;iE(49344,n|0,n+36|0);if((a[n+24|0]&1)!=0){KU(c[n+32>>2]|0)}if((a[n+12|0]&1)!=0){KU(c[n+20>>2]|0)}if((a[n]&1)!=0){KU(c[n+8>>2]|0)}n=o|0;c[n>>2]=0;c[o+4>>2]=4;c[o+8>>2]=5;iD(49356,n,o+12|0);le(p);if(!(ii(b,49968,p)|0)){o=lh(p)|0;bX(21344,(w=i,i=i+8|0,c[w>>2]=o,w)|0)|0;i=w}if(!(ii(b,49456,p)|0)){o=lh(p)|0;bX(21216,(w=i,i=i+8|0,c[w>>2]=o,w)|0)|0;i=w}if(!(ii(b,49576,p)|0)){o=lh(p)|0;bX(21024,(w=i,i=i+8|0,c[w>>2]=o,w)|0)|0;i=w}if(!(ii(b,49192,p)|0)){o=lh(p)|0;bX(20800,(w=i,i=i+8|0,c[w>>2]=o,w)|0)|0;i=w}if(!(ii(b,49312,p)|0)){o=lh(p)|0;bX(20656,(w=i,i=i+8|0,c[w>>2]=o,w)|0)|0;i=w}c[b>>2]=jI()|0;dS(1029);cx(2884);cx(2929);fz(+.6000000238418579,+.800000011920929,+1.0,+1.0);o=b+16|0;c[o>>2]=512;n=b+4|0;gq(36006,n|0);m=KT(4)|0;j=b+12|0;c[j>>2]=m;l=b+8|0;c[l>>2]=KT(4)|0;c0(1,m|0);ch(1,c[l>>2]|0);gh(33985);c0(1,q|0);d6(3553,c[q>>2]|0);m=c[o>>2]|0;gv(3553,0,6408,m|0,m|0,0,6408,5121,0);d6(3553,c[c[j>>2]>>2]|0);m=c[o>>2]|0;gv(3553,0,6402,m|0,m|0,0,6402,5125,0);dX(3553,10242,33071);dX(3553,10243,33071);if((a[s]&1)==0){dX(3553,10241,9728);dX(3553,10240,9728)}else{dX(3553,34892,34894);dX(3553,34893,515);dX(3553,10241,9729);dX(3553,10240,9729)}er(36160,c[c[l>>2]>>2]|0);b8(36160,36064,3553,c[q>>2]|0,0);b8(36160,36096,3553,c[c[j>>2]>>2]|0,0);if((f1(36160)|0)!=36053){eY(368)|0}j=gl()|0;do{if((j|0)==1281){x=15360;y=110}else if((j|0)==1282){x=15256;y=110}else if((j|0)==1280){x=15448;y=110}else if((j|0)==0){q=f1(36160)|0;if((q|0)==36055){z=14544}else if((q|0)==36061){z=14424}else if((q|0)==36054){z=14784}else if((q|0)==36053){break}else{bX(14328,(w=i,i=i+8|0,c[w>>2]=q,w)|0)|0;i=w;z=50096}bX(14888,(w=i,i=i+16|0,c[w>>2]=20440,c[w+8>>2]=z,w)|0)|0;i=w}else{x=15144;y=110}}while(0);if((y|0)==110){bX(15024,(w=i,i=i+16|0,c[w>>2]=20440,c[w+8>>2]=x,w)|0)|0;i=w}er(36160,c[n>>2]|0);gh(33984);if((f1(36160)|0)!=36053){eY(368)|0}n=gl()|0;if((n|0)==1281){A=15360}else if((n|0)==1282){A=15256}else if((n|0)==1280){A=15448}else if((n|0)==0){lg(p);i=d;return}else{A=15144}bX(20128,(w=i,i=i+8|0,c[w>>2]=A,w)|0)|0;i=w;lg(p);i=d;return}function ii(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0.0,s=0.0,t=0.0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0;f=i;i=i+16|0;h=f|0;j=h;k=i;i=i+4|0;i=i+7&-8;l=i;i=i+144|0;m=i;i=i+12|0;i=i+7&-8;n=i;i=i+8|0;o=i;i=i+12|0;i=i+7&-8;p=i;i=i+12|0;i=i+7&-8;g[k>>2]=0.0;gu(bP(35724)|0,19856,(q=i,i=i+8|0,c[q>>2]=k,q)|0)|0;i=q;r=+g[k>>2];do{if(r==0.0){gu(bP(35724)|0,19720,(q=i,i=i+8|0,c[q>>2]=k,q)|0)|0;i=q;s=+g[k>>2];if(s!=0.0){t=s;break}gu(bP(35724)|0,19480,(q=i,i=i+8|0,c[q>>2]=k,q)|0)|0;i=q;t=+g[k>>2]}else{t=r}}while(0);k=l|0;u=l+8|0;v=u|0;c[v>>2]=29096;w=l+12|0;c[k>>2]=48972;x=l+64|0;c[x>>2]=48992;c[l+4>>2]=0;D6(l+64|0,w);c[l+136>>2]=0;c[l+140>>2]=-1;y=l+8|0;c[k>>2]=29076;c[l+64>>2]=29116;c[v>>2]=29096;v=w|0;c[v>>2]=29400;z=l+16|0;Ir(z);A=l+20|0;K1(A|0,0,24)|0;c[v>>2]=29256;v=l+44|0;B=l+56|0;C=l+60|0;K1(l+44|0,0,16)|0;c[C>>2]=24;K1(j|0,0,12)|0;iC(w,h);if((a[j]&1)!=0){KU(c[h+8>>2]|0)}EP(im(u,19296)|0,~~(t*100.0))|0;u=m;h=c[C>>2]|0;do{if((h&16|0)==0){if((h&8|0)==0){K1(u|0,0,12)|0;break}C=c[A>>2]|0;j=c[l+28>>2]|0;w=C;D=j-w|0;if(D>>>0>4294967279>>>0){DI(0);return 0}if(D>>>0<11>>>0){a[u]=D<<1;E=m+1|0}else{F=D+16&-16;G=KS(F)|0;c[m+8>>2]=G;c[m>>2]=F|1;c[m+4>>2]=D;E=G}if((C|0)==(j|0)){H=E}else{G=j+(-w|0)|0;w=E;D=C;while(1){a[w]=a[D]|0;C=D+1|0;if((C|0)==(j|0)){break}else{w=w+1|0;D=C}}H=E+G|0}a[H]=0}else{D=c[B>>2]|0;w=c[l+36>>2]|0;if(D>>>0<w>>>0){c[B>>2]=w;I=w}else{I=D}D=c[l+32>>2]|0;w=D;j=I-w|0;if(j>>>0>4294967279>>>0){DI(0);return 0}if(j>>>0<11>>>0){a[u]=j<<1;J=m+1|0}else{C=j+16&-16;F=KS(C)|0;c[m+8>>2]=F;c[m>>2]=C|1;c[m+4>>2]=j;J=F}if((D|0)==(I|0)){K=J}else{F=I+(-w|0)|0;w=J;j=D;while(1){a[w]=a[j]|0;D=j+1|0;if((D|0)==(I|0)){break}else{w=w+1|0;j=D}}K=J+F|0}a[K]=0}}while(0);K=26672;J=c[K+4>>2]|0;c[n>>2]=c[K>>2];c[n+4>>2]=J;J=(a[b+20|0]&1)==0?1:2;b=ib()|0;if((a[d]&1)==0){L=d+1|0}else{L=c[d+8>>2]|0}ic(o,b,L);L=ib()|0;b=d+12|0;if((a[b]&1)==0){M=b+1|0}else{M=c[d+20>>2]|0}ic(p,L,M);M=d+24|0;L=n;do{if((ky(c[o+4>>2]|0,35633,M,e,L,J)|0)==0){n=d+28|0;if((ky(c[p+4>>2]|0,35632,n,e,L,J)|0)!=0){N=0;break}id(ib()|0,o);id(ib()|0,p);b=d+36|0;K=d+32|0;I=(c[b>>2]|0)-(c[K>>2]|0)|0;B=(I|0)/12|0;H=bS()|0;E=i;i=i+(B*4|0)|0;i=i+7&-8;A=i;i=i+(B*4|0)|0;i=i+7&-8;if((I|0)>0){I=d+44|0;h=c[K>>2]|0;j=0;do{w=h+(j*12|0)|0;if((a[w]&1)==0){O=w+1|0}else{O=c[h+(j*12|0)+8>>2]|0}c[E+(j<<2)>>2]=O;c[A+(j<<2)>>2]=c[(c[I>>2]|0)+(j<<2)>>2];j=j+1|0;}while((j|0)<(B|0))}j=d+56|0;do{if((kz(j,c[M>>2]|0,c[n>>2]|0,E,A,B,e)|0)==0){I=c[K>>2]|0;if((c[b>>2]|0)!=(I|0)){h=d+44|0;F=1;w=0;G=I;while(1){I=c[(c[h>>2]|0)+(w<<2)>>2]|0;D=G+(w*12|0)|0;if((a[D]&1)==0){P=D+1|0}else{P=c[G+(w*12|0)+8>>2]|0}if((I|0)==(cA(c[j>>2]|0,P|0)|0)){Q=F}else{I=c[K>>2]|0;D=I+(w*12|0)|0;if((a[D]&1)==0){R=D+1|0}else{R=c[I+(w*12|0)+8>>2]|0}bX(18792,(q=i,i=i+8|0,c[q>>2]=R,q)|0)|0;i=q;Q=0}I=w+1|0;D=c[K>>2]|0;if(I>>>0<(((c[b>>2]|0)-D|0)/12|0)>>>0){F=Q;w=I;G=D}else{break}}if(!Q){S=0;break}}el(fX(c[j>>2]|0,18688)|0,0);el(fX(c[j>>2]|0,18440)|0,1);el(fX(c[j>>2]|0,18304)|0,2);el(fX(c[j>>2]|0,18144)|0,3);c[d+60>>2]=fX(c[j>>2]|0,18072)|0;c[d+68>>2]=fX(c[j>>2]|0,17960)|0;c[d+76>>2]=fX(c[j>>2]|0,17816)|0;c[d+72>>2]=fX(c[j>>2]|0,17712)|0;c[d+80>>2]=fX(c[j>>2]|0,17608)|0;c[d+96>>2]=fX(c[j>>2]|0,17376)|0;c[d+100>>2]=fX(c[j>>2]|0,17248)|0;c[d+104>>2]=fX(c[j>>2]|0,17032)|0;c[d+108>>2]=fX(c[j>>2]|0,16904)|0;c[d+88>>2]=fX(c[j>>2]|0,16696)|0;c[d+92>>2]=fX(c[j>>2]|0,16592)|0;c[d+112>>2]=fX(c[j>>2]|0,16472)|0;c[d+116>>2]=fX(c[j>>2]|0,16296)|0;c[d+64>>2]=fX(c[j>>2]|0,16176)|0;S=1}else{S=0}}while(0);fB(H|0);N=S}else{N=0}}while(0);if((a[u]&1)!=0){KU(c[m+8>>2]|0)}c[k>>2]=29076;c[x>>2]=29116;c[y>>2]=29096;y=l+12|0;c[y>>2]=29256;if((a[v]&1)==0){c[y>>2]=29400;It(z);T=l+64|0;D4(T);i=f;return N|0}KU(c[l+52>>2]|0);c[y>>2]=29400;It(z);T=l+64|0;D4(T);i=f;return N|0}function ij(a){a=a|0;return}function ik(a){a=a|0;jS(c[a>>2]|0);return}function il(b,d,e){b=b|0;d=+d;e=+e;var f=0,h=0,j=0,k=0,l=0;f=i;i=i+72|0;h=f|0;j=f+8|0;k=b|0;er(36160,c[c[b+8>>2]>>2]|0);ec(0,0,0,0);dS(1028);b2(256);l=(c[b+16>>2]|0)-2|0;dT(1,1,l|0,l|0);jT(c[k>>2]|0,0);dS(1029);ec(1,1,1,1);if((a[b+21|0]&1)!=0){c[h>>2]=36064;hF[c[b+44>>2]&255](36160,1,h)}er(36160,c[b+4>>2]|0);b2(16640);dT(0,0,~~d|0,~~e|0);b=c[k>>2]|0;g[j>>2]=10.0/(d/e*4.1421356201171875);K1(j+4|0,0,16)|0;g[j+20>>2]=2.4142136573791504;K1(j+24|0,0,16)|0;g[j+40>>2]=-1.0253164768218994;g[j+44>>2]=-1.0;g[j+48>>2]=0.0;g[j+52>>2]=0.0;g[j+56>>2]=-10.126582145690918;g[j+60>>2]=0.0;jU(b,j);i=f;return}function im(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;e=i;i=i+32|0;f=e|0;g=e+8|0;h=e+16|0;j=e+24|0;k=g|0;a[k]=0;c[g+4>>2]=b;l=b;m=c[(c[l>>2]|0)-12>>2]|0;n=b;do{if((c[n+(m+16)>>2]|0)==0){o=c[n+(m+72)>>2]|0;if((o|0)!=0){ED(o)|0}a[k]=1;o=K0(d|0)|0;p=c[(c[l>>2]|0)-12>>2]|0;c[h>>2]=c[n+(p+24)>>2];q=d+o|0;o=(c[n+(p+4)>>2]&176|0)==32?q:d;r=n+p|0;s=n+(p+76)|0;p=c[s>>2]|0;if((p|0)==-1){D5(f,r);t=Iu(f,54664)|0;u=hx[c[(c[t>>2]|0)+28>>2]&127](t,32)|0;It(f);c[s>>2]=u<<24>>24;v=u}else{v=p&255}ip(j,h,d,o,q,r,v);if((c[j>>2]|0)!=0){break}r=c[(c[l>>2]|0)-12>>2]|0;D3(n+r|0,c[n+(r+16)>>2]|5)}}while(0);EO(g);i=e;return b|0}function io(b){b=b|0;var d=0;c[b>>2]=29076;c[b+64>>2]=29116;c[b+8>>2]=29096;d=b+12|0;c[d>>2]=29256;if((a[b+44|0]&1)!=0){KU(c[b+52>>2]|0)}c[d>>2]=29400;It(b+16|0);D4(b+64|0);return}function ip(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;k=i;i=i+16|0;l=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[l>>2];l=k|0;m=d|0;d=c[m>>2]|0;if((d|0)==0){c[b>>2]=0;i=k;return}n=g;g=e;o=n-g|0;p=h+12|0;h=c[p>>2]|0;q=(h|0)>(o|0)?h-o|0:0;o=f;h=o-g|0;do{if((h|0)>0){if((hd[c[(c[d>>2]|0)+48>>2]&127](d,e,h)|0)==(h|0)){break}c[m>>2]=0;c[b>>2]=0;i=k;return}}while(0);do{if((q|0)>0){if(q>>>0<11>>>0){h=q<<1&255;e=l;a[e]=h;r=l+1|0;s=h;t=e}else{e=q+16&-16;h=KS(e)|0;c[l+8>>2]=h;g=e|1;c[l>>2]=g;c[l+4>>2]=q;r=h;s=g&255;t=l}K1(r|0,j|0,q|0)|0;a[r+q|0]=0;if((s&1)==0){u=l+1|0}else{u=c[l+8>>2]|0}if((hd[c[(c[d>>2]|0)+48>>2]&127](d,u,q)|0)==(q|0)){if((a[t]&1)==0){break}KU(c[l+8>>2]|0);break}c[m>>2]=0;c[b>>2]=0;if((a[t]&1)==0){i=k;return}KU(c[l+8>>2]|0);i=k;return}}while(0);l=n-o|0;do{if((l|0)>0){if((hd[c[(c[d>>2]|0)+48>>2]&127](d,f,l)|0)==(l|0)){break}c[m>>2]=0;c[b>>2]=0;i=k;return}}while(0);c[p>>2]=0;c[b>>2]=d;i=k;return}function iq(b){b=b|0;var d=0;c[b>>2]=29076;c[b+64>>2]=29116;c[b+8>>2]=29096;d=b+12|0;c[d>>2]=29256;if((a[b+44|0]&1)!=0){KU(c[b+52>>2]|0)}c[d>>2]=29400;It(b+16|0);D4(b+64|0);KU(b);return}function ir(b){b=b|0;var d=0,e=0;d=b-144+136|0;c[d>>2]=29076;b=d+64|0;c[b>>2]=29116;c[d+8>>2]=29096;e=d+12|0;c[e>>2]=29256;if((a[d+44|0]&1)!=0){KU(c[d+52>>2]|0)}c[e>>2]=29400;It(d+16|0);D4(b);return}function is(b){b=b|0;var d=0,e=0;d=b-144+136|0;c[d>>2]=29076;b=d+64|0;c[b>>2]=29116;c[d+8>>2]=29096;e=d+12|0;c[e>>2]=29256;if((a[d+44|0]&1)!=0){KU(c[d+52>>2]|0)}c[e>>2]=29400;It(d+16|0);D4(b);KU(d);return}function it(b){b=b|0;var d=0,e=0,f=0;d=b;e=c[(c[b>>2]|0)-12>>2]|0;c[d+e>>2]=29076;b=d+(e+64)|0;c[b>>2]=29116;c[d+(e+8)>>2]=29096;f=d+(e+12)|0;c[f>>2]=29256;if((a[d+(e+44)|0]&1)!=0){KU(c[d+(e+52)>>2]|0)}c[f>>2]=29400;It(d+(e+16)|0);D4(b);return}function iu(b){b=b|0;var d=0,e=0,f=0,g=0;d=b;e=c[(c[b>>2]|0)-12>>2]|0;b=d+e|0;c[b>>2]=29076;f=d+(e+64)|0;c[f>>2]=29116;c[d+(e+8)>>2]=29096;g=d+(e+12)|0;c[g>>2]=29256;if((a[d+(e+44)|0]&1)!=0){KU(c[d+(e+52)>>2]|0)}c[g>>2]=29400;It(d+(e+16)|0);D4(f);KU(b);return}function iv(b){b=b|0;var d=0;d=b|0;c[d>>2]=29256;if((a[b+32|0]&1)!=0){KU(c[b+40>>2]|0)}c[d>>2]=29400;It(b+4|0);return}function iw(b){b=b|0;var d=0;d=b|0;c[d>>2]=29256;if((a[b+32|0]&1)!=0){KU(c[b+40>>2]|0)}c[d>>2]=29400;It(b+4|0);KU(b);return}function ix(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;i=d+44|0;j=c[i>>2]|0;k=d+24|0;l=c[k>>2]|0;if(j>>>0<l>>>0){c[i>>2]=l;m=l}else{m=j}j=h&24;do{if((j|0)==0){i=b;c[i>>2]=0;c[i+4>>2]=0;i=b+8|0;c[i>>2]=-1;c[i+4>>2]=-1;return}else if((j|0)==24){if((g|0)==0){n=0;o=0;break}else if((g|0)==2){p=11;break}else if((g|0)!=1){p=15;break}i=b;c[i>>2]=0;c[i+4>>2]=0;i=b+8|0;c[i>>2]=-1;c[i+4>>2]=-1;return}else{if((g|0)==0){n=0;o=0;break}else if((g|0)==2){p=11;break}else if((g|0)!=1){p=15;break}if((h&8|0)==0){i=l-(c[d+20>>2]|0)|0;n=(i|0)<0|0?-1:0;o=i;break}else{i=(c[d+12>>2]|0)-(c[d+8>>2]|0)|0;n=(i|0)<0|0?-1:0;o=i;break}}}while(0);if((p|0)==15){g=b;c[g>>2]=0;c[g+4>>2]=0;g=b+8|0;c[g>>2]=-1;c[g+4>>2]=-1;return}if((p|0)==11){p=d+32|0;if((a[p]&1)==0){q=p+1|0}else{q=c[d+40>>2]|0}p=m-q|0;n=(p|0)<0|0?-1:0;o=p}p=K8(o,n,e,f)|0;f=K;e=0;do{if(!((f|0)<(e|0)|(f|0)==(e|0)&p>>>0<0>>>0)){n=d+32|0;if((a[n]&1)==0){r=n+1|0}else{r=c[d+40>>2]|0}n=m-r|0;o=(n|0)<0|0?-1:0;if((o|0)<(f|0)|(o|0)==(f|0)&n>>>0<p>>>0){break}n=h&8;do{if(!((p|0)==0&(f|0)==0)){do{if((n|0)!=0){if((c[d+12>>2]|0)!=0){break}o=b;c[o>>2]=0;c[o+4>>2]=0;o=b+8|0;c[o>>2]=-1;c[o+4>>2]=-1;return}}while(0);if(!((h&16|0)!=0&(l|0)==0)){break}o=b;c[o>>2]=0;c[o+4>>2]=0;o=b+8|0;c[o>>2]=-1;c[o+4>>2]=-1;return}}while(0);if((n|0)!=0){c[d+12>>2]=(c[d+8>>2]|0)+p;c[d+16>>2]=m}if((h&16|0)!=0){c[k>>2]=(c[d+20>>2]|0)+p}o=b;c[o>>2]=0;c[o+4>>2]=0;o=b+8|0;c[o>>2]=p;c[o+4>>2]=f;return}}while(0);f=b;c[f>>2]=0;c[f+4>>2]=0;f=b+8|0;c[f>>2]=-1;c[f+4>>2]=-1;return}function iy(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;f=i;g=d;d=i;i=i+16|0;c[d>>2]=c[g>>2];c[d+4>>2]=c[g+4>>2];c[d+8>>2]=c[g+8>>2];c[d+12>>2]=c[g+12>>2];g=d+8|0;hk[c[(c[b>>2]|0)+16>>2]&63](a,b,c[g>>2]|0,c[g+4>>2]|0,0,e);i=f;return}function iz(a){a=a|0;var b=0,e=0,f=0,g=0,h=0,i=0;b=a+44|0;e=c[b>>2]|0;f=c[a+24>>2]|0;if(e>>>0<f>>>0){c[b>>2]=f;g=f}else{g=e}if((c[a+48>>2]&8|0)==0){h=-1;return h|0}e=a+16|0;f=c[e>>2]|0;b=c[a+12>>2]|0;if(f>>>0<g>>>0){c[e>>2]=g;i=g}else{i=f}if(b>>>0>=i>>>0){h=-1;return h|0}h=d[b]|0;return h|0}function iA(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0;e=b+44|0;f=c[e>>2]|0;g=c[b+24>>2]|0;if(f>>>0<g>>>0){c[e>>2]=g;h=g}else{h=f}f=b+8|0;g=c[f>>2]|0;e=b+12|0;i=c[e>>2]|0;if(g>>>0>=i>>>0){j=-1;return j|0}if((d|0)==-1){c[f>>2]=g;c[e>>2]=i-1;c[b+16>>2]=h;j=0;return j|0}k=i-1|0;do{if((c[b+48>>2]&16|0)==0){if((d<<24>>24|0)==(a[k]|0)){break}else{j=-1}return j|0}}while(0);c[f>>2]=g;c[e>>2]=k;c[b+16>>2]=h;a[k]=d;j=d;return j|0}function iB(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0;if((d|0)==-1){e=0;return e|0}f=b|0;g=b+12|0;h=b+8|0;i=(c[g>>2]|0)-(c[h>>2]|0)|0;j=b+24|0;k=c[j>>2]|0;l=b+28|0;m=c[l>>2]|0;if((k|0)==(m|0)){n=b+48|0;if((c[n>>2]&16|0)==0){e=-1;return e|0}o=b+20|0;p=c[o>>2]|0;q=k-p|0;r=b+44|0;s=(c[r>>2]|0)-p|0;p=b+32|0;t=p;u=p;v=a[u]|0;if((v&1)==0){w=(v&255)>>>1;x=10}else{w=c[b+36>>2]|0;x=(c[p>>2]&-2)-1|0}if((w|0)==(x|0)){DV(p,x,1,x,x,0,0);y=a[u]|0}else{y=v}if((y&1)==0){a[u]=(w<<1)+2;z=t+1|0;A=w+1|0}else{y=c[b+40>>2]|0;v=w+1|0;c[b+36>>2]=v;z=y;A=v}a[z+w|0]=0;a[z+A|0]=0;A=a[u]|0;if((A&1)==0){B=10;C=A}else{A=c[p>>2]|0;B=(A&-2)-1|0;C=A&255}A=C&255;if((A&1|0)==0){D=A>>>1}else{D=c[b+36>>2]|0}do{if(D>>>0<B>>>0){DQ(p,B-D|0,0)|0}else{if((C&1)==0){a[t+1+B|0]=0;a[u]=B<<1;break}else{a[(c[b+40>>2]|0)+B|0]=0;c[b+36>>2]=B;break}}}while(0);B=a[u]|0;if((B&1)==0){E=t+1|0}else{E=c[b+40>>2]|0}t=B&255;if((t&1|0)==0){F=t>>>1}else{F=c[b+36>>2]|0}t=E+F|0;c[o>>2]=E;c[l>>2]=t;l=E+q|0;c[j>>2]=l;q=E+s|0;c[r>>2]=q;G=l;H=t;I=q;J=n}else{G=k;H=m;I=c[b+44>>2]|0;J=b+48|0}m=G+1|0;k=m>>>0<I>>>0?I:m;c[b+44>>2]=k;if((c[J>>2]&8|0)!=0){J=b+32|0;if((a[J]&1)==0){K=J+1|0}else{K=c[b+40>>2]|0}c[h>>2]=K;c[g>>2]=K+i;c[b+16>>2]=k}if((G|0)==(H|0)){e=hx[c[(c[b>>2]|0)+52>>2]&127](f,d&255)|0;return e|0}else{c[j>>2]=m;a[G]=d;e=d&255;return e|0}return 0}function iC(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;e=b+32|0;DN(e,d)|0;d=b+44|0;c[d>>2]=0;f=b+48|0;g=c[f>>2]|0;if((g&8|0)!=0){h=e;i=a[e]|0;j=(i&1)==0;if(j){k=h+1|0}else{k=c[b+40>>2]|0}l=i&255;if((l&1|0)==0){m=l>>>1}else{m=c[b+36>>2]|0}l=k+m|0;c[d>>2]=l;if(j){n=h+1|0;o=h+1|0}else{h=c[b+40>>2]|0;n=h;o=h}c[b+8>>2]=o;c[b+12>>2]=n;c[b+16>>2]=l}if((g&16|0)==0){return}g=e;l=e;n=a[l]|0;o=n&255;if((o&1|0)==0){p=o>>>1}else{p=c[b+36>>2]|0}if((n&1)==0){c[d>>2]=g+1+p;q=10;r=n}else{c[d>>2]=(c[b+40>>2]|0)+p;d=c[e>>2]|0;q=(d&-2)-1|0;r=d&255}d=r&255;if((d&1|0)==0){s=d>>>1}else{s=c[b+36>>2]|0}do{if(s>>>0<q>>>0){DQ(e,q-s|0,0)|0}else{if((r&1)==0){a[g+1+q|0]=0;a[l]=q<<1;break}else{a[(c[b+40>>2]|0)+q|0]=0;c[b+36>>2]=q;break}}}while(0);q=a[l]|0;if((q&1)==0){t=g+1|0;u=g+1|0}else{g=c[b+40>>2]|0;t=g;u=g}g=q&255;if((g&1|0)==0){v=g>>>1}else{v=c[b+36>>2]|0}g=b+24|0;c[g>>2]=u;c[b+20>>2]=u;c[b+28>>2]=t+v;if((c[f>>2]&3|0)==0){return}c[g>>2]=u+p;return}function iD(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;e=b;f=d-e>>2;g=a+8|0;h=c[g>>2]|0;i=a|0;j=c[i>>2]|0;k=j;if(f>>>0<=h-k>>2>>>0){l=a+4|0;m=(c[l>>2]|0)-k|0;n=m>>2;if(f>>>0<=n>>>0){o=d-e|0;K3(j|0,b|0,o|0)|0;e=j+(o>>2<<2)|0;o=c[l>>2]|0;if((e|0)==(o|0)){return}c[l>>2]=o+(~((o-4+(-e|0)|0)>>>2)<<2);return}e=b+(n<<2)|0;K3(j|0,b|0,m|0)|0;if((e|0)==(d|0)){return}m=e;e=c[l>>2]|0;do{if((e|0)==0){p=0}else{c[e>>2]=c[m>>2];p=c[l>>2]|0}e=p+4|0;c[l>>2]=e;m=m+4|0;}while((m|0)!=(d|0));return}if((j|0)==0){q=h}else{h=a+4|0;m=c[h>>2]|0;if((j|0)!=(m|0)){c[h>>2]=m+(~((m-4+(-k|0)|0)>>>2)<<2)}KU(j);c[g>>2]=0;c[h>>2]=0;c[i>>2]=0;q=0}if(f>>>0>1073741823>>>0){Il(0)}h=q;do{if(h>>2>>>0>536870910>>>0){r=1073741823}else{q=h>>1;j=q>>>0<f>>>0?f:q;if(j>>>0<=1073741823>>>0){r=j;break}Il(0)}}while(0);f=KS(r<<2)|0;h=a+4|0;c[h>>2]=f;c[i>>2]=f;c[g>>2]=f+(r<<2);if((b|0)==(d|0)){return}else{s=b;t=f}do{if((t|0)==0){u=0}else{c[t>>2]=c[s>>2];u=c[h>>2]|0}t=u+4|0;c[h>>2]=t;s=s+4|0;}while((s|0)!=(d|0));return}function iE(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0;f=d;g=(e-f|0)/12|0;h=b+8|0;i=c[h>>2]|0;j=b|0;k=c[j>>2]|0;l=k;if(g>>>0>((i-l|0)/12|0)>>>0){if((k|0)==0){m=i}else{i=b+4|0;n=c[i>>2]|0;if((k|0)==(n|0)){o=k}else{p=n;while(1){n=p-12|0;c[i>>2]=n;if((a[n]&1)==0){q=n}else{KU(c[p-12+8>>2]|0);q=c[i>>2]|0}if((k|0)==(q|0)){break}else{p=q}}o=c[j>>2]|0}KU(o);c[h>>2]=0;c[i>>2]=0;c[j>>2]=0;m=0}if(g>>>0>357913941>>>0){Il(0)}i=(m|0)/12|0;do{if(i>>>0>178956969>>>0){r=357913941}else{m=i<<1;o=m>>>0<g>>>0?g:m;if(o>>>0<=357913941>>>0){r=o;break}Il(0)}}while(0);i=KS(r*12|0)|0;o=b+4|0;c[o>>2]=i;c[j>>2]=i;c[h>>2]=i+(r*12|0);if((d|0)==(e|0)){return}else{s=d;t=i}L23:while(1){do{if((t|0)!=0){i=s;if((a[i]&1)==0){r=t;c[r>>2]=c[i>>2];c[r+4>>2]=c[i+4>>2];c[r+8>>2]=c[i+8>>2];break}i=c[s+8>>2]|0;r=c[s+4>>2]|0;if(r>>>0>4294967279>>>0){u=42;break L23}if(r>>>0<11>>>0){a[t]=r<<1;v=t+1|0}else{h=r+16&-16;j=KS(h)|0;c[t+8>>2]=j;c[t>>2]=h|1;c[t+4>>2]=r;v=j}K2(v|0,i|0,r)|0;a[v+r|0]=0}}while(0);r=(c[o>>2]|0)+12|0;c[o>>2]=r;i=s+12|0;if((i|0)==(e|0)){u=51;break}else{s=i;t=r}}if((u|0)==42){DI(0)}else if((u|0)==51){return}}t=b+4|0;b=((c[t>>2]|0)-l|0)/12|0;if(g>>>0>b>>>0){w=1;x=d+(b*12|0)|0}else{w=0;x=e}if((x|0)==(d|0)){y=k}else{b=(((x-12+(-f|0)|0)>>>0)/12|0)+1|0;f=k;g=d;while(1){DN(f,g)|0;d=g+12|0;if((d|0)==(x|0)){break}else{f=f+12|0;g=d}}y=k+(b*12|0)|0}if(!w){w=c[t>>2]|0;if((y|0)==(w|0)){return}else{z=w}while(1){w=z-12|0;c[t>>2]=w;if((a[w]&1)==0){A=w}else{KU(c[z-12+8>>2]|0);A=c[t>>2]|0}if((y|0)==(A|0)){break}else{z=A}}return}if((x|0)==(e|0)){return}A=x;x=c[t>>2]|0;L63:while(1){do{if((x|0)!=0){z=A;if((a[z]&1)==0){y=x;c[y>>2]=c[z>>2];c[y+4>>2]=c[z+4>>2];c[y+8>>2]=c[z+8>>2];break}z=c[A+8>>2]|0;y=c[A+4>>2]|0;if(y>>>0>4294967279>>>0){u=16;break L63}if(y>>>0<11>>>0){a[x]=y<<1;B=x+1|0}else{w=y+16&-16;b=KS(w)|0;c[x+8>>2]=b;c[x>>2]=w|1;c[x+4>>2]=y;B=b}K2(B|0,z|0,y)|0;a[B+y|0]=0}}while(0);y=(c[t>>2]|0)+12|0;c[t>>2]=y;z=A+12|0;if((z|0)==(e|0)){u=52;break}else{A=z;x=y}}if((u|0)==16){DI(0)}else if((u|0)==52){return}}function iF(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0;d=c[b+44>>2]|0;e=d;if((d|0)!=0){f=b+48|0;g=c[f>>2]|0;if((d|0)!=(g|0)){c[f>>2]=g+(~((g-4+(-e|0)|0)>>>2)<<2)}KU(d)}d=b+32|0;e=c[d>>2]|0;if((e|0)!=0){g=b+36|0;f=c[g>>2]|0;if((e|0)==(f|0)){h=e}else{i=f;while(1){f=i-12|0;c[g>>2]=f;if((a[f]&1)==0){j=f}else{KU(c[i-12+8>>2]|0);j=c[g>>2]|0}if((e|0)==(j|0)){break}else{i=j}}h=c[d>>2]|0}KU(h)}if((a[b+12|0]&1)!=0){KU(c[b+20>>2]|0)}if((a[b]&1)==0){return}KU(c[b+8>>2]|0);return}function iG(){K1(49968|0,0|0,24|0)|0;K1(5e4|0,0|0,24|0)|0;ep(182,49968,q|0)|0;K1(49456|0,0|0,24|0)|0;K1(49488|0,0|0,24|0)|0;ep(182,49456,q|0)|0;K1(49576|0,0|0,24|0)|0;K1(49608|0,0|0,24|0)|0;ep(182,49576,q|0)|0;K1(49192|0,0|0,24|0)|0;K1(49224|0,0|0,24|0)|0;ep(182,49192,q|0)|0;K1(49312|0,0|0,24|0)|0;K1(49344|0,0|0,24|0)|0;ep(182,49312,q|0)|0;return}function iH(){var a=0,b=0,d=0;a=c[13820]|0;if((a|0)!=0){b=a;return b|0}a=KS(12)|0;d=a;K1(a|0,0,12)|0;c[13820]=d;b=d;return b|0}function iI(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0;e=i;i=i+16|0;f=e|0;g=f;h=K0(d|0)|0;if(h>>>0>4294967279>>>0){DI(0)}if(h>>>0<11>>>0){a[g]=h<<1;j=f+1|0}else{k=h+16&-16;l=KS(k)|0;c[f+8>>2]=l;c[f>>2]=k|1;c[f+4>>2]=h;j=l}K2(j|0,d|0,h)|0;a[j+h|0]=0;h=b;if((a[h]&1)==0){a[b+1|0]=0;a[h]=0}else{a[c[b+8>>2]|0]=0;c[b+4>>2]=0}DR(b|0,0);c[h>>2]=c[g>>2];c[h+4>>2]=c[g+4>>2];c[h+8>>2]=c[g+8>>2];i=e;return}function iJ(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0;b=i;i=i+40|0;f=b|0;g=b+16|0;h=ib()|0;if((a[d]&1)==0){j=d+1|0}else{j=c[d+8>>2]|0}ic(f,h,j);Ag(g,c[f+4>>2]|0,c[f>>2]|0);c[e>>2]=Af(c[g>>2]|0,c[g+4>>2]|0,c[g+12>>2]|0,c[g+16>>2]|0)|0;Aj(g);id(ib()|0,f);i=b;return 1}function iK(b,d){b=b|0;d=d|0;var e=0,f=0;c[b>>2]=32656;a[b+12|0]=0;a[b+13|0]=0;K1(b+104|0,0,52)|0;e=KS(492)|0;jp(e,d);f=b+4|0;c[f>>2]=e;e=KS(368)|0;i2(e,d);c[b+8>>2]=e;i6(e,c[f>>2]|0);return}function iL(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,h=0,i=0.0,j=0.0,k=0,l=0.0,m=0.0,n=0,o=0,p=0,q=0,r=0.0,s=0.0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0;e=d+4|0;f=b+4|0;a[(c[f>>2]|0)+13|0]=+g[e>>2]>.5|0;a[(c[f>>2]|0)+14|0]=+g[e>>2]<-.5|0;a[(c[f>>2]|0)+12|0]=0;h=d|0;g[(c[f>>2]|0)+4>>2]=-0.0- +g[h>>2];f=b+120|0;i=+g[f>>2];j=+g[f+4>>2]*.8999999761581421;k=b+104|0;l=+g[k>>2];m=j+(+g[k+4>>2]- +g[e>>2])*.10000000149011612;j=+(i*.8999999761581421+(l- +g[h>>2])*.10000000149011612);l=+m;g[f>>2]=j;g[f+4>>2]=l;f=b+128|0;l=+g[f>>2];j=+g[f+4>>2]*.8999999761581421;h=d+8|0;e=b+112|0;m=+g[e>>2];n=h|0;o=d+12|0;i=l*.8999999761581421+(m- +g[n>>2])*.10000000149011612;m=j+(+g[e+4>>2]- +g[o>>2])*.10000000149011612;j=+i;l=+m;g[f>>2]=j;g[f+4>>2]=l;if(i<-.10000000149011612){c[b+136>>2]=-(c[13826]|0)}if(i>.10000000149011612){c[b+136>>2]=c[13826]}if(m<-.10000000149011612){c[b+140>>2]=c[13826]}if(m<=.10000000149011612){p=b+8|0;q=c[p>>2]|0;r=+g[n>>2];s=+g[o>>2];t=q+4|0;g[t>>2]=r;u=q+8|0;g[u>>2]=s;v=q+12|0;g[v>>2]=0.0;w=q+16|0;g[w>>2]=0.0;x=d;y=x|0;z=c[y>>2]|0;A=x+4|0;B=c[A>>2]|0;C=k|0;c[C>>2]=z;D=k+4|0;c[D>>2]=B;E=h;F=E|0;G=c[F>>2]|0;H=E+4|0;I=c[H>>2]|0;J=e|0;c[J>>2]=G;K=e+4|0;c[K>>2]=I;return}c[b+140>>2]=-(c[13826]|0);p=b+8|0;q=c[p>>2]|0;r=+g[n>>2];s=+g[o>>2];t=q+4|0;g[t>>2]=r;u=q+8|0;g[u>>2]=s;v=q+12|0;g[v>>2]=0.0;w=q+16|0;g[w>>2]=0.0;x=d;y=x|0;z=c[y>>2]|0;A=x+4|0;B=c[A>>2]|0;C=k|0;c[C>>2]=z;D=k+4|0;c[D>>2]=B;E=h;F=E|0;G=c[F>>2]|0;H=E+4|0;I=c[H>>2]|0;J=e|0;c[J>>2]=G;K=e+4|0;c[K>>2]=I;return}function iM(b,d,e){b=b|0;d=d|0;e=e|0;var f=0;f=d&65535;if((f|0)==63235){d=b+4|0;a[(c[d>>2]|0)+12|0]=1;a[(c[d>>2]|0)+15|0]=e&1;return}else if((f|0)==63232){a[(c[b+4>>2]|0)+13|0]=e&1;return}else if((f|0)==63234){d=b+4|0;a[(c[d>>2]|0)+12|0]=1;a[(c[d>>2]|0)+16|0]=e&1;return}else if((f|0)==63233){a[(c[b+4>>2]|0)+14|0]=e&1;return}else{return}}function iN(a){a=a|0;var b=0;b=c[a+4>>2]|0;jv(b,(ju(b)|0)^1);return}function iO(a){a=a|0;i8(c[a+8>>2]|0);return}function iP(b,d){b=b|0;d=d|0;var e=0,f=0,h=0,j=0.0,k=0.0,l=0.0,m=0.0;e=i;i=i+16|0;f=e|0;h=c[d+4>>2]|0;j=+g[h+88>>2];k=+g[h+92>>2];l=+g[h+96>>2];if((a[d+12|0]&1)==0){g[b>>2]=j;g[b+4>>2]=k;g[b+8>>2]=l;i=e;return}else{i7(f,c[d+8>>2]|0);m=(k+ +g[f+4>>2])*.5;k=(l+ +g[f+8>>2])*.5;g[b>>2]=(j+ +g[f>>2])*.5;g[b+4>>2]=m;g[b+8>>2]=k;i=e;return}}function iQ(d){d=d|0;var e=0,f=0,h=0,j=0,k=0,l=0,m=0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0,v=0;e=i;i=i+136|0;f=e|0;h=e+88|0;j=e+104|0;k=e+120|0;l=d+4|0;m=c[l>>2]|0;n=+g[m+88>>2];o=+g[m+92>>2];p=+g[m+96>>2];q=n+0.0;r=o+10.0;s=p+0.0;t=o+-10.0;g[f+4>>2]=1.0;m=f+8|0;c[m>>2]=0;b[f+12>>1]=1;b[f+14>>1]=-1;c[f+16>>2]=0;c[f>>2]=30592;g[f+20>>2]=n;g[f+24>>2]=t;g[f+28>>2]=p;g[f+32>>2]=0.0;g[f+36>>2]=q;g[f+40>>2]=r;g[f+44>>2]=s;g[f+48>>2]=0.0;u=jI()|0;g[h>>2]=n;g[h+4>>2]=t;g[h+8>>2]=p;g[h+12>>2]=0.0;g[j>>2]=q;g[j+4>>2]=r;g[j+8>>2]=s;g[j+12>>2]=0.0;jR(u,h,j,f);if((c[m>>2]|0)==0){v=d+12|0;a[v]=0;i=e;return}s=+g[f+72>>2]- +g[f+56>>2]*2.0;r=+g[f+76>>2]- +g[f+60>>2]*2.0;g[k>>2]=+g[f+68>>2]- +g[f+52>>2]*2.0;g[k+4>>2]=s;g[k+8>>2]=r;g[k+12>>2]=0.0;f=d+8|0;i5(c[f>>2]|0);js(c[l>>2]|0);jx(c[l>>2]|0,k);i9(c[f>>2]|0,k);v=d+12|0;a[v]=0;i=e;return}function iR(a){a=a|0;return}function iS(b,d){b=b|0;d=+d;var e=0,f=0,h=0,j=0,k=0,l=0,m=0,n=0;e=i;i=i+32|0;f=e|0;h=e+16|0;j=b+4|0;k=c[j>>2]|0;if((a[k+17|0]&1)==0){if((a[k+18|0]&1)==0){l=k}else{m=3}}else{m=3}if((m|0)==3){m=b+13|0;if((a[m]&1)==0){n=k}else{jv(k,1);n=c[j>>2]|0}a[m]=0;a[b+14|0]=0;a[b+15|0]=0;l=n}if((+g[l+40>>2]*0.0+ +g[l+44>>2]+ +g[l+48>>2]*0.0)*0.0+(+g[l+56>>2]*0.0+ +g[l+60>>2]+ +g[l+64>>2]*0.0)+(+g[l+72>>2]*0.0+ +g[l+76>>2]+ +g[l+80>>2]*0.0)*0.0<.10000000149011612){jv(l,0)}l=b+13|0;do{if((a[l]&1)==0){n=c[j>>2]|0;if(+g[n+20>>2]<=.1599999964237213){break}if(+g[n+24>>2]<=.1599999964237213){break}n=c[13412]|0;c[13412]=n+1;bX(21088,(m=i,i=i+8|0,c[m>>2]=n,m)|0)|0;i=m;a[l]=1;a[b+14|0]=0;i_((c[j>>2]|0)+40|0,h);m=b+72|0;n=h;c[m>>2]=c[n>>2];c[m+4>>2]=c[n+4>>2];c[m+8>>2]=c[n+8>>2];c[m+12>>2]=c[n+12>>2]}else{if((a[b+15|0]&1)!=0){n=c[j>>2]|0;i_(n+40|0,f);iT(b,d,n+88|0,n+104|0,f);break}if((a[b+14|0]&1)==0){n=c[j>>2]|0;iV(b,0.0,n+88|0,n+104|0);break}else{iU(b,0);break}}}while(0);j=b+68|0;g[j>>2]=+bL(+(+g[j>>2]-d),+0.0);i=e;return}function iT(a,b,d,e,f){a=a|0;b=+b;d=d|0;e=e|0;f=f|0;var h=0,j=0,k=0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0,B=0.0,C=0,D=0,E=0.0,F=0.0,G=0.0,H=0.0,I=0.0,J=0.0,K=0.0,L=0.0,M=0.0,N=0.0,O=0.0,P=0.0,Q=0.0,R=0.0,S=0.0,T=0.0,U=0.0;h=i;i=i+24|0;j=h|0;k=h+8|0;l=+g[d>>2];m=+g[d+8>>2];n=+g[e>>2];o=+g[e+8>>2];p=+g[a+68>>2];if(p<=0.0){i=h;return}e=a+72|0;q=+g[a+84>>2];r=q*0.0;s=+g[a+76>>2];t=s*0.0;u=+g[a+80>>2];v=r+t-u;w=u*0.0;x=+g[e>>2];y=q+w-x*0.0;z=r+x-t;t=-0.0-x;r=x*-0.0-s-w;w=-0.0-s;s=-0.0-u;d=a+32|0;u=+g[d>>2];x=+g[a+36>>2];A=a+40|0;B=+g[A>>2];C=B*(v*w+(q*z+r*s)-y*t)+(u*(y*s+(q*v+r*t)-z*w)+x*(z*t+(q*y+r*w)-v*s))>.5;s=+g[a+148>>2];do{if(s!=0.0){D=a+152|0;v=s*b+ +g[D>>2];g[D>>2]=v;D=c[a+4>>2]|0;w=+g[D+40>>2]+ +g[D+44>>2]*0.0+ +g[D+48>>2]*0.0;r=+g[D+56>>2]+ +g[D+60>>2]*0.0+ +g[D+64>>2]*0.0;y=+g[D+72>>2]+ +g[D+76>>2]*0.0+ +g[D+80>>2]*0.0;q=v*.5;v=+Z(q)/+W(w*w+r*r+y*y);t=w*v;w=r*v;r=y*v;v=+Y(q);q=+g[f>>2];y=+g[f+12>>2];z=+g[f+8>>2];E=+g[f+4>>2];F=v*q+t*y+w*z-r*E;G=r*q+(w*y+v*E)-t*z;H=r*y+v*z+t*E-w*q;I=v*y-t*q-w*E-r*z;J=q;K=E;L=z;M=y}else{y=+g[a+144>>2];if(y==0.0){z=+g[f>>2];E=+g[f+4>>2];q=+g[f+8>>2];r=+g[f+12>>2];F=z;G=E;H=q;I=r;J=z;K=E;L=q;M=r;break}D=a+152|0;r=y*b+ +g[D>>2];g[D>>2]=r;if(C){D=c[a+4>>2]|0;y=+g[D+40>>2]*0.0+ +g[D+44>>2]+ +g[D+48>>2]*0.0;q=+g[D+56>>2]*0.0+ +g[D+60>>2]+ +g[D+64>>2]*0.0;E=+g[D+72>>2]*0.0+ +g[D+76>>2]+ +g[D+80>>2]*0.0;z=r*.5;w=+Z(z)/+W(y*y+q*q+E*E);t=y*w;y=q*w;q=E*w;w=+Y(z);z=+g[f>>2];E=+g[f+12>>2];v=+g[f+8>>2];N=+g[f+4>>2];F=w*z+t*E+y*v-q*N;G=q*z+(y*E+w*N)-t*v;H=q*E+w*v+t*N-y*z;I=w*E-t*z-y*N-q*v;J=z;K=N;L=v;M=E;break}else{E=r*.5;r=+Z(E)/+W(u*u+x*x+B*B);v=u*r;N=x*r;z=B*r;r=+Y(E);E=+g[f+12>>2];q=+g[f>>2];y=+g[f+4>>2];t=+g[f+8>>2];F=v*E+r*q+z*y-N*t;G=v*t+(N*E+r*y)-z*q;H=N*q+(z*E+r*t)-v*y;I=r*E-v*q-N*y-z*t;J=q;K=y;L=t;M=E;break}}}while(0);if(F*J+G*K+H*L+I*M<0.0){O=-0.0-F;P=-0.0-G;Q=-0.0-H;R=-0.0-I}else{O=F;P=G;Q=H;R=I}C=a+64|0;I=+g[C>>2];g[j>>2]=(I-p)/I;iW(k,e,a+88|0,j);I=-0.0-O;O=-0.0-P;P=-0.0-Q;Q=+g[k+12>>2];p=+g[k>>2];H=+g[k+4>>2];G=+g[k+8>>2];F=Q*I+R*p+H*P-G*O;M=G*I+(Q*O+R*H)-p*P;L=p*O+(Q*P+R*G)-H*I;if(p*+g[f>>2]+H*+g[f+4>>2]+G*+g[f+8>>2]+Q*+g[f+12>>2]<0.0){S=-0.0-F;T=-0.0-M;U=-0.0-L}else{S=F;T=M;U=L}L=+W(U*U+(T*T+S*S));f=a+184|0;M=+g[f>>2];k=a+176|0;F=M+ +g[k>>2];g[f>>2]=L;Q=+bL(+-.5,+(+f9(+L,+.5)));g[a+172>>2]=Q;G=+bL(+-4.0,+(+f9(+(F*.949999988079071),+4.0)));g[k>>2]=G;F=+bL(+-.10000000149011612,+(+f9(+(L-M),+.10000000149011612)));g[a+180>>2]=F;M=F*300.0+(Q*20.0+G*1.2000000476837158);G=1.0/L;L=S*G*M;S=T*G*M;T=U*G*M;k=a+4|0;f=c[c[(c[k>>2]|0)+32>>2]>>2]|0;M=(L*+g[f+276>>2]+S*+g[f+280>>2]+T*+g[f+284>>2])*+g[f+544>>2];G=(L*+g[f+292>>2]+S*+g[f+296>>2]+T*+g[f+300>>2])*+g[f+548>>2];j=f+324|0;g[j>>2]=(L*+g[f+260>>2]+S*+g[f+264>>2]+T*+g[f+268>>2])*+g[f+540>>2]+ +g[j>>2];j=f+328|0;g[j>>2]=M+ +g[j>>2];j=f+332|0;g[j>>2]=G+ +g[j>>2];j=c[c[(c[a+8>>2]|0)+84>>2]>>2]|0;G=L*.10000000149011612;L=S*.10000000149011612;S=T*.10000000149011612;T=(G*+g[j+276>>2]+L*+g[j+280>>2]+S*+g[j+284>>2])*+g[j+544>>2];M=(G*+g[j+292>>2]+L*+g[j+296>>2]+S*+g[j+300>>2])*+g[j+548>>2];f=j+324|0;g[f>>2]=(G*+g[j+260>>2]+L*+g[j+264>>2]+S*+g[j+268>>2])*+g[j+540>>2]+ +g[f>>2];f=j+328|0;g[f>>2]=T+ +g[f>>2];f=j+332|0;g[f>>2]=M+ +g[f>>2];M=+g[C>>2];C=c[c[(c[k>>2]|0)+32>>2]>>2]|0;T=1.0/M;S=+g[C+340>>2];L=T*(0.0-(M*0.0+0.0))*10.0*+g[C+348>>2]*S;G=S*T*(+g[A>>2]*3.5+ +g[a+24>>2]-(m+o*M))*10.0*+g[C+352>>2];A=C+308|0;g[A>>2]=T*(+g[d>>2]*3.5+ +g[a+16>>2]-(l+n*M))*10.0*+g[C+344>>2]*S+ +g[A>>2];A=C+312|0;g[A>>2]=L+ +g[A>>2];A=C+316|0;g[A>>2]=G+ +g[A>>2];i=h;return}function iU(d,e){d=d|0;e=e|0;var f=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0.0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0,ai=0.0,aj=0.0,ak=0.0,al=0.0,am=0.0,an=0,ao=0.0,ap=0.0,aq=0.0,ar=0.0,as=0.0;e=i;i=i+328|0;f=e|0;j=e+48|0;k=e+136|0;l=e+152|0;m=e+168|0;n=e+184|0;o=e+200|0;p=e+216|0;q=e+232|0;r=e+248|0;s=e+264|0;t=e+280|0;u=e+296|0;v=e+312|0;w=d+64|0;bX(16320,(x=i,i=i+8|0,h[x>>3]=+g[w>>2],x)|0)|0;i=x;x=d+32|0;y=x|0;z=d+36|0;A=d+40|0;B=+V(+(+g[y>>2]*0.0+ +g[z>>2]+ +g[A>>2]*0.0));C=d+16|0;D=C|0;E=d+20|0;F=d+24|0;G=j|0;H=j+4|0;I=j+8|0;J=j+12|0;K=j+14|0;L=j+16|0;M=j+20|0;N=j+24|0;O=j+28|0;P=j+32|0;Q=j+36|0;R=j+40|0;S=j+44|0;T=j+48|0;U=k|0;X=k+4|0;Y=k+8|0;Z=k+12|0;_=l|0;$=l+4|0;aa=l+8|0;ab=l+12|0;ac=j+52|0;ad=ac|0;ae=j+56|0;af=j+60|0;ag=C;C=j+68|0;ah=x;x=ac;ac=0;ai=+g[d+68>>2]*3.0;aj=B;while(1){B=ai*-.5;ak=2147483648.0/ai;al=B+ +(cT()|0)/ak;am=B+ +(cT()|0)/ak;ak=al+ +g[D>>2]+0.0;al=+g[E>>2]+0.0+10.0;B=am+ +g[F>>2]+0.0;am=al+-20.0;g[H>>2]=1.0;c[I>>2]=0;b[J>>1]=1;b[K>>1]=-1;c[L>>2]=0;c[G>>2]=30592;g[M>>2]=ak;g[N>>2]=al;g[O>>2]=B;g[P>>2]=0.0;g[Q>>2]=ak;g[R>>2]=am;g[S>>2]=B;g[T>>2]=0.0;an=jI()|0;g[U>>2]=ak;g[X>>2]=al;g[Y>>2]=B;g[Z>>2]=0.0;g[_>>2]=ak;g[$>>2]=am;g[aa>>2]=B;g[ab>>2]=0.0;jR(an,k,l,j);do{if((c[I>>2]|0)==0){ao=aj;ap=ai}else{B=+V(+(+g[ad>>2]*0.0+ +g[ae>>2]+ +g[af>>2]*0.0));if(B>=aj){ao=aj;ap=ai;break}c[ag>>2]=c[C>>2];c[ag+4>>2]=c[C+4>>2];c[ag+8>>2]=c[C+8>>2];c[ag+12>>2]=c[C+12>>2];c[ah>>2]=c[x>>2];c[ah+4>>2]=c[x+4>>2];c[ah+8>>2]=c[x+8>>2];c[ah+12>>2]=c[x+12>>2];ao=B;ap=ai*.8999999761581421}}while(0);an=ac+1|0;if((an|0)<8){ac=an;ai=ap;aj=ao}else{break}}ac=d+88|0;ao=+g[d+48>>2];aj=+g[d+52>>2];ap=+g[d+56>>2];ai=+g[y>>2];B=+g[z>>2];am=+g[A>>2];ak=1.0/+W(ai*ai+B*B+am*am);al=ai*ak;ai=B*ak;B=am*ak;ak=aj*B-ap*ai;am=ap*al-ao*B;ap=ao*ai-aj*al;aj=1.0/+W(ap*ap+(ak*ak+am*am));ao=aj*ak;ak=aj*am;am=aj*ap;g[f>>2]=-0.0-ao;g[f+4>>2]=al;g[f+8>>2]=ai*am-B*ak;g[f+12>>2]=0.0;g[f+16>>2]=-0.0-ak;g[f+20>>2]=ai;g[f+24>>2]=B*ao-al*am;g[f+28>>2]=0.0;g[f+32>>2]=-0.0-am;g[f+36>>2]=B;g[f+40>>2]=al*ak-ai*ao;g[f+44>>2]=0.0;i_(f,ac);f=d+144|0;g[f>>2]=0.0;A=d+148|0;g[A>>2]=0.0;g[d+152>>2]=0.0;ao=6.283185307179586/+g[w>>2];w=c[d+136>>2]|0;do{if((w|0)==0){eY(440)|0}else{if((w|0)<0){eY(352)|0;g[f>>2]=ao;break}else{g[f>>2]=-0.0-ao;eY(504)|0;break}}}while(0);g[f>>2]=+f9(+(+bL(-100.0999984741211,+(+g[f>>2]))),100.0999984741211);f=c[d+140>>2]|0;do{if((f|0)==0){aq=+g[A>>2]}else{if((f|0)<0){g[A>>2]=ao;aq=ao;break}else{ai=-0.0-ao;g[A>>2]=ai;aq=ai;break}}}while(0);g[A>>2]=+f9(+(+bL(-100.0999984741211,+aq)),100.0999984741211);A=m;c[A>>2]=c[ag>>2];c[A+4>>2]=c[ag+4>>2];c[A+8>>2]=c[ag+8>>2];c[A+12>>2]=c[ag+12>>2];ag=j$()|0;A=d+100|0;aq=+g[A>>2];f=d+92|0;ao=+g[f>>2];ai=ao*0.0;w=d+96|0;ak=+g[w>>2];al=ak*0.0;B=aq+ai-al;am=aq*0.0;z=ac|0;ap=+g[z>>2];aj=ap*0.0;ar=am+ak-aj;as=am+aj-ao;aj=-0.0-ap;ap=aj-ai-al;al=-0.0-ao;ao=-0.0-ak;ac=m|0;y=m+4|0;ak=+g[y>>2]+(as*aj+(aq*ar+ap*al)-B*ao)*3.0;x=m+8|0;ai=+g[x>>2]+(B*al+(aq*as+ap*ao)-ar*aj)*3.0;g[n>>2]=+g[ac>>2]+(ar*ao+(aq*B+ap*aj)-as*al)*3.0;g[n+4>>2]=ak;g[n+8>>2]=ai;g[n+12>>2]=0.0;g[o>>2]=1.0;g[o+4>>2]=0.0;g[o+8>>2]=0.0;g[o+12>>2]=0.0;g[p>>2]=1.0;g[p+4>>2]=0.0;g[p+8>>2]=0.0;g[p+12>>2]=0.0;j9(ag,m,n,o,p);p=j$()|0;ai=+g[A>>2];ak=ai*0.0;al=+g[f>>2];as=al*0.0;aj=+g[w>>2];ap=ak+as-aj;B=aj*0.0;aq=+g[z>>2];ao=ai+B-aq*0.0;ar=ak+aq-as;as=-0.0-aq;ak=aq*-0.0-al-B;B=-0.0-al;al=-0.0-aj;aj=+g[y>>2]+(ar*as+(ai*ao+ak*B)-ap*al)*3.0;aq=+g[x>>2]+(ap*B+(ai*ar+ak*al)-ao*as)*3.0;g[q>>2]=+g[ac>>2]+(ao*al+(ai*ap+ak*as)-ar*B)*3.0;g[q+4>>2]=aj;g[q+8>>2]=aq;g[q+12>>2]=0.0;g[r>>2]=0.0;g[r+4>>2]=1.0;g[r+8>>2]=0.0;g[r+12>>2]=0.0;g[s>>2]=0.0;g[s+4>>2]=1.0;g[s+8>>2]=0.0;g[s+12>>2]=0.0;j9(p,m,q,r,s);s=j$()|0;aq=+g[A>>2];aj=aq*0.0;B=+g[f>>2];ar=+g[w>>2];as=ar*0.0;ak=aj+B-as;ap=+g[z>>2];ai=aj+as-ap;as=B*0.0;aj=aq+ap*0.0-as;al=-0.0-ap;ao=ap*-0.0-as-ar;as=-0.0-B;B=-0.0-ar;ar=+g[y>>2]+(aj*al+(aq*ai+ao*as)-ak*B)*3.0;ap=+g[x>>2]+(ak*as+(aq*aj+ao*B)-ai*al)*3.0;g[t>>2]=+g[ac>>2]+(ai*B+(aq*ak+ao*al)-aj*as)*3.0;g[t+4>>2]=ar;g[t+8>>2]=ap;g[t+12>>2]=0.0;g[u>>2]=0.0;g[u+4>>2]=0.0;g[u+8>>2]=1.0;g[u+12>>2]=0.0;g[v>>2]=0.0;g[v+4>>2]=0.0;g[v+8>>2]=1.0;g[v+12>>2]=0.0;j9(s,m,t,u,v);a[d+15|0]=1;i=e;return}function iV(d,e,f,h){d=d|0;e=+e;f=f|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0,B=0,C=0,D=0,E=0.0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0.0,ab=0.0,ac=0.0,ad=0.0,ae=0,af=0;j=i;i=i+200|0;k=j|0;l=j+16|0;m=j+32|0;n=j+48|0;o=j+136|0;p=j+152|0;q=j+168|0;r=j+184|0;s=k;t=f;c[s>>2]=c[t>>2];c[s+4>>2]=c[t+4>>2];c[s+8>>2]=c[t+8>>2];c[s+12>>2]=c[t+12>>2];e=+g[h>>2];u=+g[h+4>>2];v=+g[h+8>>2];w=+g[h+12>>2];j5(j$()|0);h=c[(jI()|0)+4>>2]|0;g0[c[(c[h>>2]|0)+76>>2]&511](l,h);x=+g[l>>2]*1.100000023841858;y=+g[l+4>>2]*1.100000023841858;z=+g[l+8>>2]*1.100000023841858;l=d+64|0;g[l>>2]=0.0;h=k|0;t=k+4|0;f=k+8|0;A=m|0;B=m+4|0;C=m+8|0;D=m+12|0;E=x*.3499999940395355;x=y*.3499999940395355;y=z*.3499999940395355;F=n|0;G=n+4|0;H=n+8|0;I=n+12|0;J=n+14|0;K=n+16|0;L=n+20|0;M=n+36|0;N=m;O=o;P=p;Q=q|0;R=q+4|0;S=q+8|0;T=q+12|0;U=r|0;V=r+4|0;W=r+8|0;X=r+12|0;Y=d+14|0;Z=0;z=e;e=u;u=v;while(1){if((Z|0)>=20){_=Z;break}$=Z+1|0;v=e*.3499999940395355+ +g[t>>2];aa=u*.3499999940395355+ +g[f>>2];g[A>>2]=z*.3499999940395355+ +g[h>>2];g[B>>2]=v;g[C>>2]=aa;g[D>>2]=0.0;ab=E+z;ac=x+e;ad=y+u;g[G>>2]=1.0;c[H>>2]=0;b[I>>1]=1;b[J>>1]=-1;c[K>>2]=0;c[F>>2]=30592;c[L>>2]=c[s>>2];c[L+4>>2]=c[s+4>>2];c[L+8>>2]=c[s+8>>2];c[L+12>>2]=c[s+12>>2];c[M>>2]=c[N>>2];c[M+4>>2]=c[N+4>>2];c[M+8>>2]=c[N+8>>2];c[M+12>>2]=c[N+12>>2];ae=jI()|0;c[O>>2]=c[s>>2];c[O+4>>2]=c[s+4>>2];c[O+8>>2]=c[s+8>>2];c[O+12>>2]=c[s+12>>2];c[P>>2]=c[N>>2];c[P+4>>2]=c[N+4>>2];c[P+8>>2]=c[N+8>>2];c[P+12>>2]=c[N+12>>2];jR(ae,o,p,n);ae=j$()|0;g[Q>>2]=1.0;g[R>>2]=0.0;g[S>>2]=0.0;g[T>>2]=0.0;g[U>>2]=0.0;g[V>>2]=1.0;g[W>>2]=0.0;g[X>>2]=0.0;j9(ae,k,m,q,r);c[s>>2]=c[N>>2];c[s+4>>2]=c[N+4>>2];c[s+8>>2]=c[N+8>>2];c[s+12>>2]=c[N+12>>2];ae=(c[H>>2]|0)!=0;a[Y]=ae&1;if(ae){af=4;break}else{Z=$;z=ab;e=ac;u=ad}}if((af|0)==4){af=d+16|0;Y=n+68|0;c[af>>2]=c[Y>>2];c[af+4>>2]=c[Y+4>>2];c[af+8>>2]=c[Y+8>>2];c[af+12>>2]=c[Y+12>>2];Y=d+32|0;af=n+52|0;c[Y>>2]=c[af>>2];c[Y+4>>2]=c[af+4>>2];c[Y+8>>2]=c[af+8>>2];c[Y+12>>2]=c[af+12>>2];g[d+48>>2]=ab;g[d+52>>2]=ac;g[d+56>>2]=ad;g[d+60>>2]=w;w=+(Z|0)*.3499999940395355;g[l>>2]=w;g[d+68>>2]=w;K1(d+156|0,0,32)|0;_=$}if((d+16|0)==0){eY(416)|0;i=j;return}else{bX(19312,(d=i,i=i+8|0,c[d>>2]=_,d)|0)|0;i=d;i=j;return}}function iW(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0.0,h=0.0,i=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0;f=+g[b>>2];h=+g[b+4>>2];i=+g[b+8>>2];j=+g[b+12>>2];k=+g[d>>2];l=+g[d+4>>2];m=+g[d+8>>2];n=+g[d+12>>2];o=(f*k+h*l+i*m+j*n)/+W((f*f+h*h+i*i+j*j)*(k*k+l*l+m*m+n*n));if(+V(+o)!=1.0){p=o<0.0?-1.0:1.0;q=o*p;o=q<-1.0?-1.0:q;q=+$(o>1.0?1.0:o);o=+g[e>>2];r=+Z(q*p*o);p=1.0/+Z(q);s=+Z(q*(1.0-o));g[a>>2]=p*(f*s+r*k);g[a+4>>2]=p*(h*s+r*l);g[a+8>>2]=p*(i*s+r*m);g[a+12>>2]=p*(n*r+j*s);return}else{e=a;a=b;c[e>>2]=c[a>>2];c[e+4>>2]=c[a+4>>2];c[e+8>>2]=c[a+8>>2];c[e+12>>2]=c[a+12>>2];return}}function iX(a,b){a=a|0;b=+b;var d=0,e=0;c[13826]=~~(.5/b);d=a+140|0;e=c[d>>2]|0;if((e|0)!=0){c[d>>2]=e-((e|0)/(((e|0)>-1?e:-e|0)|0)|0)}e=a+136|0;d=c[e>>2]|0;if((d|0)!=0){c[e>>2]=d-((d|0)/(((d|0)>-1?d:-d|0)|0)|0)}d=c[a+4>>2]|0;gY[c[c[d>>2]>>2]&63](d,b);d=c[a+8>>2]|0;gY[c[c[d>>2]>>2]&63](d,b);iS(a,b);return}function iY(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0;f=c[a+4>>2]|0;hM[c[(c[f>>2]|0)+4>>2]&255](f,b,d,e);f=c[a+8>>2]|0;hM[c[(c[f>>2]|0)+4>>2]&255](f,b,d,e);return}function iZ(a,b){a=a|0;b=b|0;jB(c[a+4>>2]|0,b);jf(c[a+8>>2]|0,b);return}function i_(a,b){a=a|0;b=b|0;var c=0,d=0,e=0.0,f=0.0,h=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;c=i;i=i+16|0;d=c|0;e=+g[a>>2];f=+g[a+20>>2];h=+g[a+40>>2];j=e+f+h;if(j>0.0){k=+W(j+1.0);j=k*.5;g[d+12>>2]=j;l=.5/k;k=l*(+g[a+36>>2]- +g[a+24>>2]);g[d>>2]=k;m=l*(+g[a+8>>2]- +g[a+32>>2]);g[d+4>>2]=m;n=l*(+g[a+16>>2]- +g[a+4>>2]);g[d+8>>2]=n;o=k;p=m;q=n;r=j;s=b|0;g[s>>2]=o;t=b+4|0;g[t>>2]=p;u=b+8|0;g[u>>2]=q;v=b+12|0;g[v>>2]=r;i=c;return}if(e<f){w=f<h?2:1}else{w=e<h?2:0}x=((w+1|0)>>>0)%3|0;y=((w+2|0)>>>0)%3|0;h=+W(+g[a+(w<<4)+(w<<2)>>2]- +g[a+(x<<4)+(x<<2)>>2]- +g[a+(y<<4)+(y<<2)>>2]+1.0);g[d+(w<<2)>>2]=h*.5;e=.5/h;z=d+12|0;g[z>>2]=e*(+g[a+(y<<4)+(x<<2)>>2]- +g[a+(x<<4)+(y<<2)>>2]);g[d+(x<<2)>>2]=e*(+g[a+(x<<4)+(w<<2)>>2]+ +g[a+(w<<4)+(x<<2)>>2]);g[d+(y<<2)>>2]=e*(+g[a+(y<<4)+(w<<2)>>2]+ +g[a+(w<<4)+(y<<2)>>2]);o=+g[d>>2];p=+g[d+4>>2];q=+g[d+8>>2];r=+g[z>>2];s=b|0;g[s>>2]=o;t=b+4|0;g[t>>2]=p;u=b+8|0;g[u>>2]=q;v=b+12|0;g[v>>2]=r;i=c;return}function i$(a){a=a|0;KU(a);return}function i0(a,c){a=a|0;c=c|0;var d=0;if((b[a+14>>1]&b[c+4>>1])<<16>>16==0){d=0;return d|0}d=(b[c+6>>1]&b[a+12>>1])<<16>>16!=0;return d|0}function i1(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,h=0,i=0.0,j=0.0,k=0.0,l=0.0,m=0.0;e=b+24|0;g[a+4>>2]=+g[e>>2];f=c[b>>2]|0;c[a+8>>2]=f;if(d){d=a+52|0;h=b+8|0;c[d>>2]=c[h>>2];c[d+4>>2]=c[h+4>>2];c[d+8>>2]=c[h+8>>2];c[d+12>>2]=c[h+12>>2]}else{i=+g[b+8>>2];j=+g[b+12>>2];k=+g[b+16>>2];l=i*+g[f+20>>2]+j*+g[f+24>>2]+k*+g[f+28>>2];m=i*+g[f+36>>2]+j*+g[f+40>>2]+k*+g[f+44>>2];g[a+52>>2]=+g[f+4>>2]*i+ +g[f+8>>2]*j+ +g[f+12>>2]*k;g[a+56>>2]=l;g[a+60>>2]=m;g[a+64>>2]=0.0}m=+g[e>>2];l=1.0-m;g[a+68>>2]=l*+g[a+20>>2]+m*+g[a+36>>2];g[a+72>>2]=l*+g[a+24>>2]+m*+g[a+40>>2];g[a+76>>2]=l*+g[a+28>>2]+m*+g[a+44>>2];return+(+g[e>>2])}function i2(b,d){b=b|0;d=d|0;c[b>>2]=30784;kS(b+88|0);i3(b);i4(b,d);a[b+328|0]=1;return}function i3(b){b=b|0;var d=0,e=0,f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0,ai=0,aj=0,ak=0,al=0.0,am=0.0,an=0.0;d=i;i=i+544|0;e=d|0;f=d+16|0;h=d+32|0;j=d+96|0;k=d+160|0;l=d+224|0;m=d+288|0;n=d+352|0;o=d+416|0;p=d+480|0;q=b|0;r=e;s=e;a[s]=18;K2(r+1|0,14384,9)|0;a[r+10|0]=0;r=b+88|0;t=jC(q,e,r)|0;if((a[s]&1)!=0){KU(c[e+8>>2]|0)}if(!t){eY(312)|0;i=d;return}t=iH()|0;e=KS(16)|0;s=f+8|0;c[s>>2]=e;c[f>>2]=17;c[f+4>>2]=14;K2(e|0,20920,14)|0;a[e+14|0]=0;e=iJ(t,f,b+312|0)|0;if((a[f]&1)!=0){KU(c[s>>2]|0)}if(!e){eY(648)|0}e=b+144|0;s=c[e>>2]|0;f=b+204|0;c[f>>2]=s;t=c[s>>2]|0;s=c[b+132>>2]|0;u=b+208|0;c[u>>2]=s+(t*244|0);c[b+192>>2]=c[s+(t*244|0)+4>>2];t=b+212|0;c[t>>2]=14;s=b+216|0;c[s>>2]=KT(896)|0;v=b+220|0;c[v>>2]=KT(896)|0;w=b+224|0;c[w>>2]=KT(896)|0;x=b+228|0;c[x>>2]=zv(224,16)|0;y=b+232|0;c[y>>2]=zv(160,16)|0;jG(q,b+188|0,0)|0;q=c[x>>2]|0;g[q+112>>2]=0.0;g[q+116>>2]=9.731900215148926;g[q+120>>2]=0.0;g[q+124>>2]=0.0;q=c[x>>2]|0;g[q+96>>2]=0.0;g[q+100>>2]=15.012999534606934;g[q+104>>2]=0.0;g[q+108>>2]=0.0;q=c[x>>2]|0;g[q>>2]=-.7651000022888184;g[q+4>>2]=9.731900215148926;g[q+8>>2]=0.0;g[q+12>>2]=0.0;q=c[x>>2]|0;g[q+144>>2]=.7651000022888184;g[q+148>>2]=9.731900215148926;g[q+152>>2]=0.0;g[q+156>>2]=0.0;q=c[x>>2]|0;g[q+16>>2]=-.7833999991416931;g[q+20>>2]=5.085100173950195;g[q+24>>2]=-.36739999055862427;g[q+28>>2]=0.0;q=c[x>>2]|0;g[q+160>>2]=.7833999991416931;g[q+164>>2]=5.085100173950195;g[q+168>>2]=-.36739999055862427;g[q+172>>2]=0.0;q=c[x>>2]|0;g[q+32>>2]=-.7346000075340271;g[q+36>>2]=.5879999995231628;g[q+40>>2]=0.0;g[q+44>>2]=0.0;q=c[x>>2]|0;g[q+176>>2]=.7346000075340271;g[q+180>>2]=.5879999995231628;g[q+184>>2]=0.0;g[q+188>>2]=0.0;q=c[x>>2]|0;g[q+48>>2]=-1.708899974822998;g[q+52>>2]=14.146699905395508;g[q+56>>2]=.459199994802475;g[q+60>>2]=0.0;q=c[x>>2]|0;g[q+128>>2]=1.708899974822998;g[q+132>>2]=14.146699905395508;g[q+136>>2]=.459199994802475;g[q+140>>2]=0.0;q=c[x>>2]|0;g[q+64>>2]=-4.507199764251709;g[q+68>>2]=14.037400245666504;g[q+72>>2]=.3019999861717224;g[q+76>>2]=0.0;q=c[x>>2]|0;g[q+192>>2]=4.507199764251709;g[q+196>>2]=14.037400245666504;g[q+200>>2]=.3019999861717224;g[q+204>>2]=0.0;q=c[x>>2]|0;g[q+80>>2]=-7.581900119781494;g[q+84>>2]=14.01099967956543;g[q+88>>2]=.2897999882698059;g[q+92>>2]=0.0;q=c[x>>2]|0;g[q+208>>2]=7.581900119781494;g[q+212>>2]=14.01099967956543;g[q+216>>2]=.2897999882698059;g[q+220>>2]=0.0;q=c[y>>2]|0;g[q>>2]=0.0;g[q+4>>2]=12.071900367736816;g[q+8>>2]=0.0;g[q+12>>2]=0.0;q=c[y>>2]|0;g[q+16>>2]=0.0;g[q+20>>2]=15.567700386047363;g[q+24>>2]=0.0;g[q+28>>2]=0.0;q=c[y>>2]|0;g[q+32>>2]=-.7742999792098999;g[q+36>>2]=7.4085001945495605;g[q+40>>2]=-.18369999527931213;g[q+44>>2]=0.0;q=c[y>>2]|0;g[q+64>>2]=.7742999792098999;g[q+68>>2]=7.4085001945495605;g[q+72>>2]=-.18369999527931213;g[q+76>>2]=0.0;q=c[y>>2]|0;g[q+48>>2]=-.7590000033378601;g[q+52>>2]=2.8366000652313232;g[q+56>>2]=-.18369999527931213;g[q+60>>2]=0.0;q=c[y>>2]|0;g[q+80>>2]=.7590000033378601;g[q+84>>2]=2.8366000652313232;g[q+88>>2]=-.18369999527931213;g[q+92>>2]=0.0;q=c[y>>2]|0;g[q+96>>2]=-3.108099937438965;g[q+100>>2]=14.092100143432617;g[q+104>>2]=.3806000053882599;g[q+108>>2]=0.0;q=c[y>>2]|0;g[q+128>>2]=3.108099937438965;g[q+132>>2]=14.092100143432617;g[q+136>>2]=.3806000053882599;g[q+140>>2]=0.0;q=c[y>>2]|0;g[q+112>>2]=-6.044600009918213;g[q+116>>2]=14.024200439453125;g[q+120>>2]=.29589998722076416;g[q+124>>2]=0.0;q=c[y>>2]|0;g[q+144>>2]=6.044600009918213;g[q+148>>2]=14.024200439453125;g[q+152>>2]=.29589998722076416;g[q+156>>2]=0.0;g[b+236>>2]=.550000011920929;K1(b+240|0,0,16)|0;g[b+256>>2]=.550000011920929;K1(b+260|0,0,16)|0;g[b+276>>2]=.550000011920929;K1(b+280|0,0,16)|0;g[b+296>>2]=1.0;if((c[t>>2]|0)<=0){i=d;return}b=h|0;q=h+20|0;z=h+4|0;A=h+40|0;B=h+24|0;C=h+60|0;D=h+44|0;E=k|0;F=k+4|0;G=k+8|0;H=k+12|0;I=k+16|0;J=k+20|0;K=k+24|0;L=k+28|0;M=k+32|0;N=k+36|0;O=k+40|0;P=k+44|0;Q=k+48|0;R=k+52|0;S=k+56|0;T=k+60|0;U=p|0;V=p+4|0;W=p+8|0;X=p+12|0;Y=p+16|0;Z=p+20|0;_=p+24|0;$=p+28|0;aa=p+32|0;ab=p+36|0;ac=p+40|0;ad=p+44|0;ae=p+48|0;af=p+52|0;ag=p+56|0;ah=p+60|0;ai=0;do{aj=c[(c[(c[u>>2]|0)+156>>2]|0)+(ai<<2)>>2]|0;g[b>>2]=.550000011920929;K1(z|0,0,16)|0;g[q>>2]=.550000011920929;K1(B|0,0,16)|0;g[A>>2]=.550000011920929;K1(D|0,0,16)|0;g[C>>2]=1.0;kY(j,r,c[f>>2]|0,(c[e>>2]|0)+(aj*60|0)|0);aj=c[w>>2]|0;ak=c[x>>2]|0;al=+g[ak+(ai<<4)>>2];am=+g[ak+(ai<<4)+4>>2];an=+g[ak+(ai<<4)+8>>2];g[aj+(ai<<6)>>2]=1.0;K1(aj+(ai<<6)+4|0,0,16)|0;g[aj+(ai<<6)+20>>2]=1.0;K1(aj+(ai<<6)+24|0,0,16)|0;g[aj+(ai<<6)+40>>2]=1.0;g[aj+(ai<<6)+44>>2]=0.0;g[aj+(ai<<6)+48>>2]=al;g[aj+(ai<<6)+52>>2]=am;g[aj+(ai<<6)+56>>2]=an;g[aj+(ai<<6)+60>>2]=1.0;aj=c[v>>2]|0;lt(l,(c[w>>2]|0)+(ai<<6)|0);ls(m,h,l);lq(n,3.1415927410125732);ls(o,m,n);ls(k,o,j);g[aj+(ai<<6)>>2]=+g[E>>2];g[aj+(ai<<6)+4>>2]=+g[F>>2];g[aj+(ai<<6)+8>>2]=+g[G>>2];g[aj+(ai<<6)+12>>2]=+g[H>>2];g[aj+(ai<<6)+16>>2]=+g[I>>2];g[aj+(ai<<6)+20>>2]=+g[J>>2];g[aj+(ai<<6)+24>>2]=+g[K>>2];g[aj+(ai<<6)+28>>2]=+g[L>>2];g[aj+(ai<<6)+32>>2]=+g[M>>2];g[aj+(ai<<6)+36>>2]=+g[N>>2];g[aj+(ai<<6)+40>>2]=+g[O>>2];g[aj+(ai<<6)+44>>2]=+g[P>>2];g[aj+(ai<<6)+48>>2]=+g[Q>>2];g[aj+(ai<<6)+52>>2]=+g[R>>2];g[aj+(ai<<6)+56>>2]=+g[S>>2];g[aj+(ai<<6)+60>>2]=+g[T>>2];aj=c[s>>2]|0;ls(p,(c[w>>2]|0)+(ai<<6)|0,(c[v>>2]|0)+(ai<<6)|0);g[aj+(ai<<6)>>2]=+g[U>>2];g[aj+(ai<<6)+4>>2]=+g[V>>2];g[aj+(ai<<6)+8>>2]=+g[W>>2];g[aj+(ai<<6)+12>>2]=+g[X>>2];g[aj+(ai<<6)+16>>2]=+g[Y>>2];g[aj+(ai<<6)+20>>2]=+g[Z>>2];g[aj+(ai<<6)+24>>2]=+g[_>>2];g[aj+(ai<<6)+28>>2]=+g[$>>2];g[aj+(ai<<6)+32>>2]=+g[aa>>2];g[aj+(ai<<6)+36>>2]=+g[ab>>2];g[aj+(ai<<6)+40>>2]=+g[ac>>2];g[aj+(ai<<6)+44>>2]=+g[ad>>2];g[aj+(ai<<6)+48>>2]=+g[ae>>2];g[aj+(ai<<6)+52>>2]=+g[af>>2];g[aj+(ai<<6)+56>>2]=+g[ag>>2];g[aj+(ai<<6)+60>>2]=+g[ah>>2];aj=c[x>>2]|0;ak=aj+(ai<<4)|0;g[ak>>2]=+g[ak>>2]*.550000011920929;ak=aj+(ai<<4)+4|0;g[ak>>2]=+g[ak>>2]*.550000011920929;ak=aj+(ai<<4)+8|0;g[ak>>2]=+g[ak>>2]*.550000011920929;if((ai|0)<10){ak=c[y>>2]|0;aj=ak+(ai<<4)|0;g[aj>>2]=+g[aj>>2]*.550000011920929;aj=ak+(ai<<4)+4|0;g[aj>>2]=+g[aj>>2]*.550000011920929;aj=ak+(ai<<4)+8|0;g[aj>>2]=+g[aj>>2]*.550000011920929}ai=ai+1|0;}while((ai|0)<(c[t>>2]|0));i=d;return}function i4(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0,E=0.0,F=0.0,G=0.0,H=0.0,I=0.0,J=0.0,K=0.0,L=0.0,M=0.0,N=0.0,O=0.0,P=0.0,Q=0.0,R=0.0,S=0.0,T=0.0,U=0.0,V=0.0,W=0.0,X=0.0,Y=0.0,Z=0.0,_=0.0,$=0.0,aa=0.0,ab=0.0,ac=0.0,ad=0.0,ae=0.0,af=0.0,ag=0.0,ah=0.0,ai=0.0,aj=0.0,ak=0.0,al=0.0,am=0.0,an=0.0,ao=0.0,ap=0.0,aq=0.0,ar=0.0,as=0.0,at=0.0,au=0.0,av=0.0,aw=0.0,ax=0.0,ay=0.0,az=0.0,aA=0,aB=0,aC=0,aD=0,aE=0,aF=0,aG=0,aH=0,aI=0,aJ=0,aK=0,aL=0,aM=0,aN=0,aO=0,aP=0,aQ=0,aR=0,aS=0,aT=0,aU=0,aV=0,aW=0,aX=0,aY=0;d=i;i=i+768|0;e=d|0;f=d+64|0;h=d+128|0;j=d+192|0;k=d+256|0;l=d+320|0;m=d+384|0;n=d+448|0;o=d+512|0;p=d+576|0;q=d+640|0;r=d+704|0;s=a+320|0;c[s>>2]=KT(40)|0;t=a+84|0;c[t>>2]=KT(40)|0;u=a+324|0;c[u>>2]=KT(36)|0;v=zv(56,16)|0;mM(v,.5,2.0);c[c[s>>2]>>2]=v;v=zv(56,16)|0;mM(v,.5,.75);c[(c[s>>2]|0)+4>>2]=v;v=zv(56,16)|0;mM(v,.3499999940395355,2.25);c[(c[s>>2]|0)+8>>2]=v;v=zv(56,16)|0;mM(v,.3499999940395355,2.25);c[(c[s>>2]|0)+16>>2]=v;v=zv(56,16)|0;mM(v,.25,1.850000023841858);c[(c[s>>2]|0)+12>>2]=v;v=zv(56,16)|0;mM(v,.25,1.850000023841858);c[(c[s>>2]|0)+20>>2]=v;v=zv(56,16)|0;mQ(v,.25,1.5);c[(c[s>>2]|0)+24>>2]=v;v=zv(56,16)|0;mQ(v,.25,1.5);c[(c[s>>2]|0)+32>>2]=v;v=zv(56,16)|0;mQ(v,.20000000298023224,1.0);c[(c[s>>2]|0)+28>>2]=v;v=zv(56,16)|0;mQ(v,.20000000298023224,1.0);c[(c[s>>2]|0)+36>>2]=v;w=+g[b>>2];x=+g[b+4>>2];y=+g[b+8>>2];b=a+232|0;v=c[b>>2]|0;z=+g[v+16>>2];A=+g[v+20>>2];B=+g[v+24>>2];v=jI()|0;C=A*-0.0;g[e>>2]=-1.0;g[e+4>>2]=-0.0;g[e+8>>2]=-8.742277657347586e-8;g[e+12>>2]=0.0;g[e+16>>2]=0.0;g[e+20>>2]=1.0;g[e+24>>2]=0.0;g[e+28>>2]=0.0;g[e+32>>2]=8.742277657347586e-8;g[e+36>>2]=0.0;g[e+40>>2]=-1.0;g[e+44>>2]=0.0;g[e+48>>2]=w+(z*-1.0+C+B*-8.742277657347586e-8);g[e+52>>2]=x+(z*-0.0+A+B*-0.0);g[e+56>>2]=y+(z*8.742277657347586e-8+C+B*-1.0);g[e+60>>2]=0.0;D=jM(v,.1459999978542328,e,c[(c[s>>2]|0)+4>>2]|0)|0;c[(c[t>>2]|0)+4>>2]=D;D=c[b>>2]|0;B=+g[D>>2];C=+g[D+4>>2];z=+g[D+8>>2];D=jI()|0;A=C*-0.0;g[f>>2]=-1.0;g[f+4>>2]=-0.0;g[f+8>>2]=-8.742277657347586e-8;g[f+12>>2]=0.0;g[f+16>>2]=0.0;g[f+20>>2]=1.0;g[f+24>>2]=0.0;g[f+28>>2]=0.0;g[f+32>>2]=8.742277657347586e-8;g[f+36>>2]=0.0;g[f+40>>2]=-1.0;g[f+44>>2]=0.0;g[f+48>>2]=w+(B*-1.0+A+z*-8.742277657347586e-8);g[f+52>>2]=x+(B*-0.0+C+z*-0.0);g[f+56>>2]=y+(B*8.742277657347586e-8+A+z*-1.0);g[f+60>>2]=0.0;e=jM(D,1.0160000324249268,f,c[c[s>>2]>>2]|0)|0;c[c[t>>2]>>2]=e;e=c[b>>2]|0;z=+g[e+32>>2];A=+g[e+36>>2];B=+g[e+40>>2];e=jI()|0;C=A*-0.0;g[h>>2]=-1.0;g[h+4>>2]=-0.0;g[h+8>>2]=-8.742277657347586e-8;g[h+12>>2]=0.0;g[h+16>>2]=0.0;g[h+20>>2]=1.0;g[h+24>>2]=0.0;g[h+28>>2]=0.0;g[h+32>>2]=8.742277657347586e-8;g[h+36>>2]=0.0;g[h+40>>2]=-1.0;g[h+44>>2]=0.0;g[h+48>>2]=w+(z*-1.0+C+B*-8.742277657347586e-8);g[h+52>>2]=x+(z*-0.0+A+B*-0.0);g[h+56>>2]=y+(z*8.742277657347586e-8+C+B*-1.0);g[h+60>>2]=0.0;f=jM(e,.1979999989271164,h,c[(c[s>>2]|0)+8>>2]|0)|0;c[(c[t>>2]|0)+8>>2]=f;f=c[b>>2]|0;B=+g[f+48>>2];C=+g[f+52>>2];z=+g[f+56>>2];f=jI()|0;A=C*-0.0;g[j>>2]=-1.0;g[j+4>>2]=-0.0;g[j+8>>2]=-8.742277657347586e-8;g[j+12>>2]=0.0;g[j+16>>2]=0.0;g[j+20>>2]=1.0;g[j+24>>2]=0.0;g[j+28>>2]=0.0;g[j+32>>2]=8.742277657347586e-8;g[j+36>>2]=0.0;g[j+40>>2]=-1.0;g[j+44>>2]=0.0;g[j+48>>2]=w+(B*-1.0+A+z*-8.742277657347586e-8);g[j+52>>2]=x+(B*-0.0+C+z*-0.0);g[j+56>>2]=y+(B*8.742277657347586e-8+A+z*-1.0);g[j+60>>2]=0.0;h=jM(f,.09399999678134918,j,c[(c[s>>2]|0)+12>>2]|0)|0;c[(c[t>>2]|0)+12>>2]=h;h=c[b>>2]|0;z=+g[h+64>>2];A=+g[h+68>>2];B=+g[h+72>>2];h=jI()|0;C=A*-0.0;g[k>>2]=-1.0;g[k+4>>2]=-0.0;g[k+8>>2]=-8.742277657347586e-8;g[k+12>>2]=0.0;g[k+16>>2]=0.0;g[k+20>>2]=1.0;g[k+24>>2]=0.0;g[k+28>>2]=0.0;g[k+32>>2]=8.742277657347586e-8;g[k+36>>2]=0.0;g[k+40>>2]=-1.0;g[k+44>>2]=0.0;g[k+48>>2]=w+(z*-1.0+C+B*-8.742277657347586e-8);g[k+52>>2]=x+(z*-0.0+A+B*-0.0);g[k+56>>2]=y+(z*8.742277657347586e-8+C+B*-1.0);g[k+60>>2]=0.0;j=jM(h,.1979999989271164,k,c[(c[s>>2]|0)+16>>2]|0)|0;c[(c[t>>2]|0)+16>>2]=j;j=c[b>>2]|0;B=+g[j+80>>2];C=+g[j+84>>2];z=+g[j+88>>2];j=jI()|0;A=C*-0.0;g[l>>2]=-1.0;g[l+4>>2]=-0.0;g[l+8>>2]=-8.742277657347586e-8;g[l+12>>2]=0.0;g[l+16>>2]=0.0;g[l+20>>2]=1.0;g[l+24>>2]=0.0;g[l+28>>2]=0.0;g[l+32>>2]=8.742277657347586e-8;g[l+36>>2]=0.0;g[l+40>>2]=-1.0;g[l+44>>2]=0.0;g[l+48>>2]=w+(B*-1.0+A+z*-8.742277657347586e-8);g[l+52>>2]=x+(B*-0.0+C+z*-0.0);g[l+56>>2]=y+(B*8.742277657347586e-8+A+z*-1.0);g[l+60>>2]=0.0;k=jM(j,.09399999678134918,l,c[(c[s>>2]|0)+20>>2]|0)|0;c[(c[t>>2]|0)+20>>2]=k;k=c[b>>2]|0;z=+g[k+96>>2];A=+g[k+100>>2];B=+g[k+104>>2];k=jI()|0;C=A*-0.0;g[m>>2]=-1.0;g[m+4>>2]=-0.0;g[m+8>>2]=-8.742277657347586e-8;g[m+12>>2]=0.0;g[m+16>>2]=0.0;g[m+20>>2]=1.0;g[m+24>>2]=0.0;g[m+28>>2]=0.0;g[m+32>>2]=8.742277657347586e-8;g[m+36>>2]=0.0;g[m+40>>2]=-1.0;g[m+44>>2]=0.0;g[m+48>>2]=w+(z*-1.0+C+B*-8.742277657347586e-8);g[m+52>>2]=x+(z*-0.0+A+B*-0.0);g[m+56>>2]=y+(z*8.742277657347586e-8+C+B*-1.0);g[m+60>>2]=0.0;l=jM(k,.05400000140070915,m,c[(c[s>>2]|0)+24>>2]|0)|0;c[(c[t>>2]|0)+24>>2]=l;l=c[b>>2]|0;B=+g[l+112>>2];C=+g[l+116>>2];z=+g[l+120>>2];l=jI()|0;A=C*-0.0;g[n>>2]=-1.0;g[n+4>>2]=-0.0;g[n+8>>2]=-8.742277657347586e-8;g[n+12>>2]=0.0;g[n+16>>2]=0.0;g[n+20>>2]=1.0;g[n+24>>2]=0.0;g[n+28>>2]=0.0;g[n+32>>2]=8.742277657347586e-8;g[n+36>>2]=0.0;g[n+40>>2]=-1.0;g[n+44>>2]=0.0;g[n+48>>2]=w+(B*-1.0+A+z*-8.742277657347586e-8);g[n+52>>2]=x+(B*-0.0+C+z*-0.0);g[n+56>>2]=y+(B*8.742277657347586e-8+A+z*-1.0);g[n+60>>2]=0.0;m=jM(l,.03200000151991844,n,c[(c[s>>2]|0)+28>>2]|0)|0;c[(c[t>>2]|0)+28>>2]=m;m=c[b>>2]|0;z=+g[m+128>>2];A=+g[m+132>>2];B=+g[m+136>>2];m=jI()|0;C=A*-0.0;g[o>>2]=-1.0;g[o+4>>2]=-0.0;g[o+8>>2]=-8.742277657347586e-8;g[o+12>>2]=0.0;g[o+16>>2]=0.0;g[o+20>>2]=1.0;g[o+24>>2]=0.0;g[o+28>>2]=0.0;g[o+32>>2]=8.742277657347586e-8;g[o+36>>2]=0.0;g[o+40>>2]=-1.0;g[o+44>>2]=0.0;g[o+48>>2]=w+(z*-1.0+C+B*-8.742277657347586e-8);g[o+52>>2]=x+(z*-0.0+A+B*-0.0);g[o+56>>2]=y+(z*8.742277657347586e-8+C+B*-1.0);g[o+60>>2]=0.0;n=jM(m,.05400000140070915,o,c[(c[s>>2]|0)+32>>2]|0)|0;c[(c[t>>2]|0)+32>>2]=n;n=c[b>>2]|0;B=+g[n+144>>2];C=+g[n+148>>2];z=+g[n+152>>2];n=jI()|0;A=C*-0.0;g[p>>2]=-1.0;g[p+4>>2]=-0.0;g[p+8>>2]=-8.742277657347586e-8;g[p+12>>2]=0.0;g[p+16>>2]=0.0;g[p+20>>2]=1.0;g[p+24>>2]=0.0;g[p+28>>2]=0.0;g[p+32>>2]=8.742277657347586e-8;g[p+36>>2]=0.0;g[p+40>>2]=-1.0;g[p+44>>2]=0.0;g[p+48>>2]=w+(B*-1.0+A+z*-8.742277657347586e-8);g[p+52>>2]=x+(B*-0.0+C+z*-0.0);g[p+56>>2]=y+(B*8.742277657347586e-8+A+z*-1.0);g[p+60>>2]=0.0;o=jM(n,.03200000151991844,p,c[(c[s>>2]|0)+36>>2]|0)|0;c[(c[t>>2]|0)+36>>2]=o;o=0;do{zb(c[(c[t>>2]|0)+(o<<2)>>2]|0,.05000000074505806,.8500000238418579);g[(c[(c[t>>2]|0)+(o<<2)>>2]|0)+220>>2]=.800000011920929;s=c[(c[t>>2]|0)+(o<<2)>>2]|0;g[s+468>>2]=1.600000023841858;g[s+472>>2]=2.5;o=o+1|0;}while((o|0)<10);o=c[a+228>>2]|0;a=c[b>>2]|0;z=+g[o+96>>2];A=+g[a>>2];B=+g[o+100>>2];y=+g[a+4>>2];C=+g[o+104>>2];x=+g[a+8>>2];w=z- +g[a+16>>2];E=B- +g[a+20>>2];F=C- +g[a+24>>2];G=+g[o>>2];H=+g[o+4>>2];I=+g[o+8>>2];J=+g[a+32>>2];K=+g[a+36>>2];L=+g[a+40>>2];M=+g[o+16>>2];N=+g[o+20>>2];O=+g[o+24>>2];P=M- +g[a+48>>2];Q=N- +g[a+52>>2];R=O- +g[a+56>>2];S=+g[o+144>>2];T=+g[o+148>>2];U=+g[o+152>>2];V=+g[a+64>>2];W=+g[a+68>>2];X=+g[a+72>>2];Y=+g[o+160>>2];Z=+g[o+164>>2];_=+g[o+168>>2];$=Y- +g[a+80>>2];aa=Z- +g[a+84>>2];ab=_- +g[a+88>>2];ac=+g[o+48>>2];ad=+g[o+52>>2];ae=+g[o+56>>2];af=+g[a+96>>2];ag=+g[a+100>>2];ah=+g[a+104>>2];ai=+g[o+64>>2];aj=+g[o+68>>2];ak=+g[o+72>>2];al=ai- +g[a+112>>2];am=aj- +g[a+116>>2];an=ak- +g[a+120>>2];ao=+g[o+128>>2];ap=+g[o+132>>2];aq=+g[o+136>>2];ar=+g[a+128>>2];as=+g[a+132>>2];at=+g[a+136>>2];au=+g[o+192>>2];av=+g[o+196>>2];aw=+g[o+200>>2];ax=au- +g[a+144>>2];ay=av- +g[a+148>>2];az=aw- +g[a+152>>2];a=q|0;o=q+4|0;b=q+20|0;s=o;K1(s|0,0,12)|0;p=q+24|0;n=q+40|0;m=p;K1(m|0,0,12)|0;l=q+44|0;k=l;K1(k|0,0,16)|0;j=r|0;h=r+4|0;f=r+20|0;e=h;K1(e|0,0,12)|0;D=r+24|0;v=r+40|0;aA=D;K1(aA|0,0,12)|0;aB=r+44|0;aC=aB;K1(aC|0,0,16)|0;g[a>>2]=-4.371138828673793e-8;g[o>>2]=-1.0;aD=q+8|0;g[aD>>2]=0.0;aE=q+12|0;g[aE>>2]=0.0;aF=q+16|0;g[aF>>2]=1.0;g[b>>2]=-4.371138828673793e-8;g[p>>2]=0.0;aG=q+28|0;g[aG>>2]=0.0;aH=q+32|0;g[aH>>2]=-0.0;aI=q+36|0;g[aI>>2]=0.0;g[n>>2]=1.0;g[l>>2]=0.0;aJ=q+48|0;g[aJ>>2]=z-A;aK=q+52|0;g[aK>>2]=B-y;aL=q+56|0;g[aL>>2]=C-x;aM=q+60|0;g[aM>>2]=0.0;g[j>>2]=-4.371138828673793e-8;g[h>>2]=-1.0;aN=r+8|0;g[aN>>2]=0.0;aO=r+12|0;g[aO>>2]=0.0;aP=r+16|0;g[aP>>2]=1.0;g[f>>2]=-4.371138828673793e-8;g[D>>2]=0.0;aQ=r+28|0;g[aQ>>2]=0.0;aR=r+32|0;g[aR>>2]=-0.0;aS=r+36|0;g[aS>>2]=0.0;g[v>>2]=1.0;g[aB>>2]=0.0;aT=r+48|0;g[aT>>2]=w;aU=r+52|0;g[aU>>2]=E;aV=r+56|0;g[aV>>2]=F;aW=r+60|0;g[aW>>2]=0.0;aX=zv(608,16)|0;aY=c[t>>2]|0;wo(aX,c[aY>>2]|0,c[aY+4>>2]|0,q,r);g[aX+444>>2]=.7853981852531433;g[aX+448>>2]=1.1780972480773926;g[aX+452>>2]=1.5707963705062866;g[aX+428>>2]=1.0;g[aX+432>>2]=.30000001192092896;g[aX+436>>2]=1.0;c[aX+24>>2]=10;c[c[u>>2]>>2]=aX;aX=c[(jI()|0)+4>>2]|0;hF[c[(c[aX>>2]|0)+56>>2]&255](aX,c[c[u>>2]>>2]|0,1);K1(m|0,0,12)|0;K1(k|0,0,16)|0;K1(aA|0,0,12)|0;K1(aC|0,0,16)|0;g[a>>2]=1.0;K1(o|0,0,16)|0;g[b>>2]=1.0;g[p>>2]=0.0;g[aG>>2]=0.0;g[aH>>2]=-0.0;g[aI>>2]=0.0;g[n>>2]=1.0;g[l>>2]=0.0;g[aJ>>2]=G-A;g[aK>>2]=H-y;g[aL>>2]=I-x;g[aM>>2]=0.0;g[j>>2]=1.0;K1(h|0,0,16)|0;g[f>>2]=1.0;g[D>>2]=0.0;g[aQ>>2]=0.0;g[aR>>2]=-0.0;g[aS>>2]=0.0;g[v>>2]=1.0;g[aB>>2]=0.0;g[aT>>2]=G-J;g[aU>>2]=H-K;g[aV>>2]=I-L;g[aW>>2]=0.0;aX=zv(608,16)|0;aY=c[t>>2]|0;wo(aX,c[aY>>2]|0,c[aY+8>>2]|0,q,r);g[aX+444>>2]=1.5707963705062866;g[aX+448>>2]=.7853981852531433;g[aX+452>>2]=0.0;g[aX+428>>2]=1.0;g[aX+432>>2]=.30000001192092896;g[aX+436>>2]=1.0;c[aX+24>>2]=10;c[(c[u>>2]|0)+4>>2]=aX;aX=c[(jI()|0)+4>>2]|0;hF[c[(c[aX>>2]|0)+56>>2]&255](aX,c[(c[u>>2]|0)+4>>2]|0,1);K1(m|0,0,12)|0;K1(k|0,0,16)|0;K1(aA|0,0,12)|0;K1(aC|0,0,16)|0;g[a>>2]=1.0;K1(o|0,0,16)|0;g[b>>2]=1.0;g[p>>2]=0.0;g[aG>>2]=0.0;g[aH>>2]=-0.0;g[aI>>2]=0.0;g[n>>2]=1.0;g[l>>2]=0.0;g[aJ>>2]=S-A;g[aK>>2]=T-y;g[aL>>2]=U-x;g[aM>>2]=0.0;g[j>>2]=1.0;K1(h|0,0,16)|0;g[f>>2]=1.0;g[D>>2]=0.0;g[aQ>>2]=0.0;g[aR>>2]=-0.0;g[aS>>2]=0.0;g[v>>2]=1.0;g[aB>>2]=0.0;g[aT>>2]=S-V;g[aU>>2]=T-W;g[aV>>2]=U-X;g[aW>>2]=0.0;aX=zv(608,16)|0;aY=c[t>>2]|0;wo(aX,c[aY>>2]|0,c[aY+16>>2]|0,q,r);g[aX+444>>2]=1.5707963705062866;g[aX+448>>2]=.7853981852531433;g[aX+452>>2]=0.0;g[aX+428>>2]=1.0;g[aX+432>>2]=.30000001192092896;g[aX+436>>2]=1.0;c[aX+24>>2]=10;c[(c[u>>2]|0)+12>>2]=aX;aX=c[(jI()|0)+4>>2]|0;hF[c[(c[aX>>2]|0)+56>>2]&255](aX,c[(c[u>>2]|0)+12>>2]|0,1);K1(s|0,0,12)|0;K1(m|0,0,12)|0;K1(k|0,0,16)|0;K1(e|0,0,12)|0;K1(aA|0,0,12)|0;K1(aC|0,0,16)|0;g[a>>2]=-4.371138828673793e-8;g[o>>2]=0.0;g[aD>>2]=1.0;g[aE>>2]=0.0;g[aF>>2]=-0.0;g[b>>2]=1.0;g[p>>2]=0.0;g[aG>>2]=0.0;g[aH>>2]=-1.0;g[aI>>2]=-0.0;g[n>>2]=-4.371138828673793e-8;g[l>>2]=0.0;g[aJ>>2]=M-J;g[aK>>2]=N-K;g[aL>>2]=O-L;g[aM>>2]=0.0;g[j>>2]=-4.371138828673793e-8;g[h>>2]=0.0;g[aN>>2]=1.0;g[aO>>2]=0.0;g[aP>>2]=-0.0;g[f>>2]=1.0;g[D>>2]=0.0;g[aQ>>2]=0.0;g[aR>>2]=-1.0;g[aS>>2]=-0.0;g[v>>2]=-4.371138828673793e-8;g[aB>>2]=0.0;g[aT>>2]=P;g[aU>>2]=Q;g[aV>>2]=R;g[aW>>2]=0.0;aX=zv(764,16)|0;aY=c[t>>2]|0;xg(aX,c[aY+8>>2]|0,c[aY+12>>2]|0,q,r,0);x8(aX+688|0,0.0,2.8274333477020264,.8999999761581421,.30000001192092896,1.0);c[aX+24>>2]=10;c[(c[u>>2]|0)+8>>2]=aX;aX=c[(jI()|0)+4>>2]|0;hF[c[(c[aX>>2]|0)+56>>2]&255](aX,c[(c[u>>2]|0)+8>>2]|0,1);K1(s|0,0,12)|0;K1(m|0,0,12)|0;K1(k|0,0,16)|0;K1(e|0,0,12)|0;K1(aA|0,0,12)|0;K1(aC|0,0,16)|0;g[a>>2]=-4.371138828673793e-8;g[o>>2]=0.0;g[aD>>2]=1.0;g[aE>>2]=0.0;g[aF>>2]=-0.0;g[b>>2]=1.0;g[p>>2]=0.0;g[aG>>2]=0.0;g[aH>>2]=-1.0;g[aI>>2]=-0.0;g[n>>2]=-4.371138828673793e-8;g[l>>2]=0.0;g[aJ>>2]=Y-V;g[aK>>2]=Z-W;g[aL>>2]=_-X;g[aM>>2]=0.0;g[j>>2]=-4.371138828673793e-8;g[h>>2]=0.0;g[aN>>2]=1.0;g[aO>>2]=0.0;g[aP>>2]=-0.0;g[f>>2]=1.0;g[D>>2]=0.0;g[aQ>>2]=0.0;g[aR>>2]=-1.0;g[aS>>2]=-0.0;g[v>>2]=-4.371138828673793e-8;g[aB>>2]=0.0;g[aT>>2]=$;g[aU>>2]=aa;g[aV>>2]=ab;g[aW>>2]=0.0;aX=zv(764,16)|0;aY=c[t>>2]|0;xg(aX,c[aY+16>>2]|0,c[aY+20>>2]|0,q,r,0);x8(aX+688|0,0.0,2.8274333477020264,.8999999761581421,.30000001192092896,1.0);c[aX+24>>2]=10;c[(c[u>>2]|0)+16>>2]=aX;aX=c[(jI()|0)+4>>2]|0;hF[c[(c[aX>>2]|0)+56>>2]&255](aX,c[(c[u>>2]|0)+16>>2]|0,1);K1(m|0,0,12)|0;K1(k|0,0,16)|0;K1(aA|0,0,12)|0;K1(aC|0,0,16)|0;g[a>>2]=1.0;K1(o|0,0,16)|0;g[b>>2]=1.0;g[p>>2]=0.0;g[aG>>2]=0.0;g[aH>>2]=-0.0;g[aI>>2]=0.0;g[n>>2]=1.0;g[l>>2]=0.0;g[aJ>>2]=ac-A;g[aK>>2]=ad-y;g[aL>>2]=ae-x;g[aM>>2]=0.0;g[j>>2]=1.0;K1(h|0,0,16)|0;g[f>>2]=1.0;g[D>>2]=0.0;g[aQ>>2]=0.0;g[aR>>2]=-0.0;g[aS>>2]=0.0;g[v>>2]=1.0;g[aB>>2]=0.0;g[aT>>2]=ac-af;g[aU>>2]=ad-ag;g[aV>>2]=ae-ah;g[aW>>2]=0.0;aX=zv(608,16)|0;aY=c[t>>2]|0;wo(aX,c[aY>>2]|0,c[aY+24>>2]|0,q,r);g[aX+444>>2]=1.5707963705062866;g[aX+448>>2]=1.5707963705062866;g[aX+452>>2]=0.0;g[aX+428>>2]=1.0;g[aX+432>>2]=.30000001192092896;g[aX+436>>2]=1.0;c[aX+24>>2]=10;c[(c[u>>2]|0)+20>>2]=aX;aX=c[(jI()|0)+4>>2]|0;hF[c[(c[aX>>2]|0)+56>>2]&255](aX,c[(c[u>>2]|0)+20>>2]|0,1);K1(m|0,0,12)|0;K1(k|0,0,16)|0;K1(aA|0,0,12)|0;K1(aC|0,0,16)|0;g[a>>2]=1.0;K1(o|0,0,16)|0;g[b>>2]=1.0;g[p>>2]=0.0;g[aG>>2]=0.0;g[aH>>2]=-0.0;g[aI>>2]=0.0;g[n>>2]=1.0;g[l>>2]=0.0;g[aJ>>2]=ao-A;g[aK>>2]=ap-y;g[aL>>2]=aq-x;g[aM>>2]=0.0;g[j>>2]=1.0;K1(h|0,0,16)|0;g[f>>2]=1.0;g[D>>2]=0.0;g[aQ>>2]=0.0;g[aR>>2]=-0.0;g[aS>>2]=0.0;g[v>>2]=1.0;g[aB>>2]=0.0;g[aT>>2]=ao-ar;g[aU>>2]=ap-as;g[aV>>2]=aq-at;g[aW>>2]=0.0;aX=zv(608,16)|0;aY=c[t>>2]|0;wo(aX,c[aY>>2]|0,c[aY+32>>2]|0,q,r);g[aX+444>>2]=1.5707963705062866;g[aX+448>>2]=1.5707963705062866;g[aX+452>>2]=0.0;g[aX+428>>2]=1.0;g[aX+432>>2]=.30000001192092896;g[aX+436>>2]=1.0;c[aX+24>>2]=10;c[(c[u>>2]|0)+28>>2]=aX;aX=c[(jI()|0)+4>>2]|0;hF[c[(c[aX>>2]|0)+56>>2]&255](aX,c[(c[u>>2]|0)+28>>2]|0,1);K1(m|0,0,12)|0;K1(k|0,0,16)|0;K1(aA|0,0,12)|0;K1(aC|0,0,16)|0;g[a>>2]=1.0;K1(o|0,0,16)|0;g[b>>2]=1.0;g[p>>2]=0.0;g[aG>>2]=0.0;g[aH>>2]=-0.0;g[aI>>2]=0.0;g[n>>2]=1.0;g[l>>2]=0.0;g[aJ>>2]=ai-af;g[aK>>2]=aj-ag;g[aL>>2]=ak-ah;g[aM>>2]=0.0;g[j>>2]=1.0;K1(h|0,0,16)|0;g[f>>2]=1.0;g[D>>2]=0.0;g[aQ>>2]=0.0;g[aR>>2]=-0.0;g[aS>>2]=0.0;g[v>>2]=1.0;g[aB>>2]=0.0;g[aT>>2]=al;g[aU>>2]=am;g[aV>>2]=an;g[aW>>2]=0.0;aX=zv(764,16)|0;aY=c[t>>2]|0;xg(aX,c[aY+24>>2]|0,c[aY+28>>2]|0,q,r,0);x8(aX+688|0,0.0,2.356194496154785,.8999999761581421,.30000001192092896,1.0);c[aX+24>>2]=10;c[(c[u>>2]|0)+24>>2]=aX;aX=c[(jI()|0)+4>>2]|0;hF[c[(c[aX>>2]|0)+56>>2]&255](aX,c[(c[u>>2]|0)+24>>2]|0,1);K1(s|0,0,12)|0;K1(m|0,0,12)|0;K1(k|0,0,16)|0;K1(e|0,0,12)|0;K1(aA|0,0,12)|0;K1(aC|0,0,16)|0;g[a>>2]=-1.0;g[o>>2]=0.0;g[aD>>2]=8.742277657347586e-8;g[aE>>2]=0.0;g[aF>>2]=-0.0;g[b>>2]=1.0;g[p>>2]=0.0;g[aG>>2]=0.0;g[aH>>2]=-8.742277657347586e-8;g[aI>>2]=-0.0;g[n>>2]=-1.0;g[l>>2]=0.0;g[aJ>>2]=au-ar;g[aK>>2]=av-as;g[aL>>2]=aw-at;g[aM>>2]=0.0;g[j>>2]=-1.0;g[h>>2]=0.0;g[aN>>2]=8.742277657347586e-8;g[aO>>2]=0.0;g[aP>>2]=-0.0;g[f>>2]=1.0;g[D>>2]=0.0;g[aQ>>2]=0.0;g[aR>>2]=-8.742277657347586e-8;g[aS>>2]=-0.0;g[v>>2]=-1.0;g[aB>>2]=0.0;g[aT>>2]=ax;g[aU>>2]=ay;g[aV>>2]=az;g[aW>>2]=0.0;aW=zv(764,16)|0;aV=c[t>>2]|0;xg(aW,c[aV+32>>2]|0,c[aV+36>>2]|0,q,r,0);c[aW+24>>2]=10;x8(aW+688|0,0.0,2.356194496154785,.8999999761581421,.30000001192092896,1.0);c[(c[u>>2]|0)+32>>2]=aW;aW=c[(jI()|0)+4>>2]|0;hF[c[(c[aW>>2]|0)+56>>2]&255](aW,c[(c[u>>2]|0)+32>>2]|0,1);i=d;return}function i5(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;b=a+332|0;d=c[b>>2]|0;do{if((d|0)!=0){e=c[d>>2]|0;f=c[(jI()|0)+4>>2]|0;g0[c[(c[f>>2]|0)+60>>2]&511](f,e);if((e|0)!=0){g$[c[(c[e>>2]|0)+4>>2]&1023](e)}e=c[(c[b>>2]|0)+4>>2]|0;f=c[(jI()|0)+4>>2]|0;g0[c[(c[f>>2]|0)+60>>2]&511](f,e);if((e|0)!=0){g$[c[(c[e>>2]|0)+4>>2]&1023](e)}e=c[(c[b>>2]|0)+8>>2]|0;f=c[(jI()|0)+4>>2]|0;g0[c[(c[f>>2]|0)+60>>2]&511](f,e);if((e|0)!=0){g$[c[(c[e>>2]|0)+4>>2]&1023](e)}e=c[(c[b>>2]|0)+12>>2]|0;f=c[(jI()|0)+4>>2]|0;g0[c[(c[f>>2]|0)+60>>2]&511](f,e);if((e|0)!=0){g$[c[(c[e>>2]|0)+4>>2]&1023](e)}e=c[(c[b>>2]|0)+16>>2]|0;f=c[(jI()|0)+4>>2]|0;g0[c[(c[f>>2]|0)+60>>2]&511](f,e);if((e|0)!=0){g$[c[(c[e>>2]|0)+4>>2]&1023](e)}e=c[b>>2]|0;if((e|0)==0){break}KU(e)}}while(0);c[b>>2]=0;b=a+324|0;d=c[b>>2]|0;do{if((d|0)!=0){e=d;f=0;do{g=c[e+(f<<2)>>2]|0;h=c[(jI()|0)+4>>2]|0;g0[c[(c[h>>2]|0)+60>>2]&511](h,g);if((g|0)!=0){g$[c[(c[g>>2]|0)+4>>2]&1023](g)}f=f+1|0;e=c[b>>2]|0;}while((f|0)<9);if((e|0)==0){break}KU(e)}}while(0);c[b>>2]=0;b=a+84|0;d=c[b>>2]|0;do{if((d|0)!=0){f=d;g=0;while(1){h=c[f+(g<<2)>>2]|0;if((h|0)==0){i=f}else{j=c[h+476>>2]|0;if((j|0)!=0){g$[c[(c[j>>2]|0)+4>>2]&1023](j)}j=c[(jI()|0)+4>>2]|0;g0[c[(c[j>>2]|0)+92>>2]&511](j,h);g$[c[(c[h>>2]|0)+8>>2]&1023](h);i=c[b>>2]|0}h=g+1|0;if((h|0)<10){f=i;g=h}else{break}}if((i|0)==0){break}KU(i)}}while(0);c[b>>2]=0;b=a+320|0;a=c[b>>2]|0;if((a|0)==0){c[b>>2]=0;return}i=c[a>>2]|0;if((i|0)==0){k=a}else{g$[c[(c[i>>2]|0)+4>>2]&1023](i);k=c[b>>2]|0}i=c[k+4>>2]|0;if((i|0)==0){l=k}else{g$[c[(c[i>>2]|0)+4>>2]&1023](i);l=c[b>>2]|0}i=c[l+8>>2]|0;if((i|0)==0){m=l}else{g$[c[(c[i>>2]|0)+4>>2]&1023](i);m=c[b>>2]|0}i=c[m+12>>2]|0;if((i|0)==0){n=m}else{g$[c[(c[i>>2]|0)+4>>2]&1023](i);n=c[b>>2]|0}i=c[n+16>>2]|0;if((i|0)==0){o=n}else{g$[c[(c[i>>2]|0)+4>>2]&1023](i);o=c[b>>2]|0}i=c[o+20>>2]|0;if((i|0)==0){p=o}else{g$[c[(c[i>>2]|0)+4>>2]&1023](i);p=c[b>>2]|0}i=c[p+24>>2]|0;if((i|0)==0){q=p}else{g$[c[(c[i>>2]|0)+4>>2]&1023](i);q=c[b>>2]|0}i=c[q+28>>2]|0;if((i|0)==0){r=q}else{g$[c[(c[i>>2]|0)+4>>2]&1023](i);r=c[b>>2]|0}i=c[r+32>>2]|0;if((i|0)==0){s=r}else{g$[c[(c[i>>2]|0)+4>>2]&1023](i);s=c[b>>2]|0}i=c[s+36>>2]|0;if((i|0)==0){t=s}else{g$[c[(c[i>>2]|0)+4>>2]&1023](i);t=c[b>>2]|0}if((t|0)==0){c[b>>2]=0;return}KU(t);c[b>>2]=0;return}function i6(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0;d=i;i=i+224|0;e=d|0;f=d+64|0;h=d+128|0;j=d+144|0;k=d+160|0;l=d+176|0;m=d+192|0;n=d+208|0;o=a+316|0;c[o>>2]=b;b=a+332|0;c[b>>2]=KT(20)|0;p=c[a+228>>2]|0;q=c[a+232>>2]|0;r=+g[p+84>>2]- +g[q+116>>2];s=+g[p+88>>2]- +g[q+120>>2];g[h>>2]=+g[p+80>>2]- +g[q+112>>2];g[h+4>>2]=r;g[h+8>>2]=s;g[h+12>>2]=0.0;g[j>>2]=1.7999999523162842;g[j+4>>2]=0.0;g[j+8>>2]=0.0;g[j+12>>2]=0.0;s=+g[p+212>>2]- +g[q+148>>2];r=+g[p+216>>2]- +g[q+152>>2];g[k>>2]=+g[p+208>>2]- +g[q+144>>2];g[k+4>>2]=s;g[k+8>>2]=r;g[k+12>>2]=0.0;g[l>>2]=-1.7999999523162842;g[l+4>>2]=0.0;g[l+8>>2]=0.0;g[l+12>>2]=0.0;r=+g[p+36>>2]- +g[q+52>>2];s=+g[p+40>>2]- +g[q+56>>2];g[m>>2]=+g[p+32>>2]- +g[q+48>>2];g[m+4>>2]=r;g[m+8>>2]=s;g[m+12>>2]=0.0;g[a+336>>2]=.8999999761581421;g[a+340>>2]=-.4000000059604645;g[a+344>>2]=-.17855000495910645;g[a+348>>2]=0.0;s=+g[p+180>>2]- +g[q+84>>2];r=+g[p+184>>2]- +g[q+88>>2];g[n>>2]=+g[p+176>>2]- +g[q+80>>2];g[n+4>>2]=s;g[n+8>>2]=r;g[n+12>>2]=0.0;g[a+352>>2]=-.8999999761581421;g[a+356>>2]=-.4000000059604645;g[a+360>>2]=-.17855000495910645;g[a+364>>2]=0.0;q=zv(360,16)|0;p=a+84|0;xv(q,c[(c[p>>2]|0)+28>>2]|0,c[(c[(c[o>>2]|0)+32>>2]|0)+4>>2]|0,h,j);j=q;c[q+24>>2]=10;c[(c[b>>2]|0)+4>>2]=j;q=c[(jI()|0)+4>>2]|0;hF[c[(c[q>>2]|0)+56>>2]&255](q,j,1);j=zv(360,16)|0;xv(j,c[(c[p>>2]|0)+36>>2]|0,c[(c[(c[o>>2]|0)+32>>2]|0)+4>>2]|0,k,l);l=j;c[j+24>>2]=10;c[(c[b>>2]|0)+8>>2]=l;j=c[(jI()|0)+4>>2]|0;hF[c[(c[j>>2]|0)+56>>2]&255](j,l,1);l=zv(360,16)|0;xv(l,c[(c[p>>2]|0)+12>>2]|0,c[c[(c[o>>2]|0)+32>>2]>>2]|0,m,a+336|0);m=l;c[l+24>>2]=10;c[(c[b>>2]|0)+12>>2]=m;l=c[(jI()|0)+4>>2]|0;hF[c[(c[l>>2]|0)+56>>2]&255](l,m,1);m=zv(360,16)|0;xv(m,c[(c[p>>2]|0)+20>>2]|0,c[c[(c[o>>2]|0)+32>>2]>>2]|0,n,a+352|0);a=m;c[m+24>>2]=10;c[(c[b>>2]|0)+16>>2]=a;m=c[(jI()|0)+4>>2]|0;hF[c[(c[m>>2]|0)+56>>2]&255](m,a,1);g[e>>2]=1.0;K1(e+4|0,0,16)|0;g[e+20>>2]=1.0;K1(e+24|0,0,16)|0;g[e+40>>2]=1.0;K1(e+44|0,0,20)|0;a=f+24|0;K1(a|0,0,12)|0;m=f+44|0;K1(m|0,0,20)|0;g[f>>2]=1.0;K1(f+4|0,0,16)|0;g[f+20>>2]=1.0;g[a>>2]=0.0;g[f+28>>2]=0.0;g[f+32>>2]=-0.0;g[f+36>>2]=0.0;g[f+40>>2]=1.0;g[m>>2]=0.0;m=zv(1312,16)|0;wK(m,c[c[(c[o>>2]|0)+32>>2]>>2]|0,c[c[p>>2]>>2]|0,e,f,1);g[m+680>>2]=-1.5;g[m+696>>2]=1.5;g[m+684>>2]=2.0;g[m+700>>2]=5.0;g[m+688>>2]=-2.0;g[m+704>>2]=1.0;r=+c2(+1.0,6.2831854820251465);do{if(r<-3.1415927410125732){t=r+6.2831854820251465}else{if(r<=3.1415927410125732){t=r;break}t=r+ -6.2831854820251465}}while(0);r=+c2(+0.0,6.2831854820251465);do{if(r<-3.1415927410125732){u=r+6.2831854820251465}else{if(r<=3.1415927410125732){u=r;break}u=r+ -6.2831854820251465}}while(0);g[m+868>>2]=t;g[m+872>>2]=u;u=+c2(+-.7853981852531433,6.2831854820251465);do{if(u<-3.1415927410125732){v=u+6.2831854820251465}else{if(u<=3.1415927410125732){v=u;break}v=u+ -6.2831854820251465}}while(0);u=+c2(+.7853981852531433,6.2831854820251465);do{if(u<-3.1415927410125732){w=u+6.2831854820251465}else{if(u<=3.1415927410125732){w=u;break}w=u+ -6.2831854820251465}}while(0);g[m+932>>2]=v;g[m+936>>2]=w;w=+c2(+1.0,6.2831854820251465);do{if(w<-3.1415927410125732){x=w+6.2831854820251465}else{if(w<=3.1415927410125732){x=w;break}x=w+ -6.2831854820251465}}while(0);w=+c2(+0.0,6.2831854820251465);if(w<-3.1415927410125732){y=w+6.2831854820251465;z=m+996|0;A=z;g[A>>2]=x;B=m+1e3|0;C=B;g[C>>2]=y;D=m;E=m+24|0;F=E;c[F>>2]=10;G=c[b>>2]|0;c[G>>2]=D;H=jI()|0;I=H+4|0;J=c[I>>2]|0;K=J;L=c[K>>2]|0;M=L+56|0;N=c[M>>2]|0;hF[N&255](J,D,0);i=d;return}if(w<=3.1415927410125732){y=w;z=m+996|0;A=z;g[A>>2]=x;B=m+1e3|0;C=B;g[C>>2]=y;D=m;E=m+24|0;F=E;c[F>>2]=10;G=c[b>>2]|0;c[G>>2]=D;H=jI()|0;I=H+4|0;J=c[I>>2]|0;K=J;L=c[K>>2]|0;M=L+56|0;N=c[M>>2]|0;hF[N&255](J,D,0);i=d;return}y=w+ -6.2831854820251465;z=m+996|0;A=z;g[A>>2]=x;B=m+1e3|0;C=B;g[C>>2]=y;D=m;E=m+24|0;F=E;c[F>>2]=10;G=c[b>>2]|0;c[G>>2]=D;H=jI()|0;I=H+4|0;J=c[I>>2]|0;K=J;L=c[K>>2]|0;M=L+56|0;N=c[M>>2]|0;hF[N&255](J,D,0);i=d;return}function i7(a,b){a=a|0;b=b|0;var d=0;d=c[c[b+84>>2]>>2]|0;g[a>>2]=+g[d+52>>2];g[a+4>>2]=+g[d+56>>2];g[a+8>>2]=+g[d+60>>2];return}function i8(b){b=b|0;var d=0;jw(c[b+316>>2]|0);d=b+332|0;a[(c[c[d>>2]>>2]|0)+20|0]=0;a[(c[(c[d>>2]|0)+4>>2]|0)+20|0]=0;a[(c[(c[d>>2]|0)+8>>2]|0)+20|0]=0;a[(c[(c[d>>2]|0)+12>>2]|0)+20|0]=0;a[(c[(c[d>>2]|0)+16>>2]|0)+20|0]=0;a[b+328|0]=0;return}function i9(b,d){b=b|0;d=d|0;i4(b,d);d=c[b+316>>2]|0;if((d|0)!=0){i6(b,d)}d=b+332|0;a[(c[c[d>>2]>>2]|0)+20|0]=1;a[(c[(c[d>>2]|0)+4>>2]|0)+20|0]=1;a[(c[(c[d>>2]|0)+8>>2]|0)+20|0]=1;a[(c[(c[d>>2]|0)+12>>2]|0)+20|0]=1;a[(c[(c[d>>2]|0)+16>>2]|0)+20|0]=1;a[b+328|0]=1;return}function ja(d,e){d=d|0;e=+e;var f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0.0,s=0,t=0,u=0,v=0,w=0,x=0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0;f=i;i=i+128|0;h=f|0;j=f+16|0;k=f+32|0;l=f+48|0;m=f+64|0;n=f+80|0;o=f+96|0;p=f+112|0;q=d+316|0;r=+jt(c[q>>2]|0);s=d+84|0;t=c[c[s>>2]>>2]|0;u=d+20|0;v=t+4|0;c[u>>2]=c[v>>2];c[u+4>>2]=c[v+4>>2];c[u+8>>2]=c[v+8>>2];c[u+12>>2]=c[v+12>>2];v=d+36|0;u=t+20|0;c[v>>2]=c[u>>2];c[v+4>>2]=c[u+4>>2];c[v+8>>2]=c[u+8>>2];c[v+12>>2]=c[u+12>>2];u=d+52|0;v=t+36|0;c[u>>2]=c[v>>2];c[u+4>>2]=c[v+4>>2];c[u+8>>2]=c[v+8>>2];c[u+12>>2]=c[v+12>>2];v=d+68|0;u=t+52|0;c[v>>2]=c[u>>2];c[v+4>>2]=c[u+4>>2];c[v+8>>2]=c[u+8>>2];c[v+12>>2]=c[u+12>>2];b[h+4>>1]=1;b[h+6>>1]=-1;c[h>>2]=32360;u=h+8|0;a[u]=0;g[h+12>>2]=.05000000074505806;v=jI()|0;t=h|0;jQ(v,c[(c[s>>2]|0)+4>>2]|0,t);v=a[u]|0;h=jI()|0;jQ(h,c[(c[s>>2]|0)+24>>2]|0,t);h=a[u]|v;v=jI()|0;jQ(v,c[(c[s>>2]|0)+32>>2]|0,t);if(((h|a[u])&1)==0){w=d+332|0;x=d+328|0}else{jw(c[q>>2]|0);jw(c[q>>2]|0);u=d+332|0;a[(c[c[u>>2]>>2]|0)+20|0]=0;a[(c[(c[u>>2]|0)+4>>2]|0)+20|0]=0;a[(c[(c[u>>2]|0)+8>>2]|0)+20|0]=0;a[(c[(c[u>>2]|0)+12>>2]|0)+20|0]=0;a[(c[(c[u>>2]|0)+16>>2]|0)+20|0]=0;h=d+328|0;a[h]=0;w=u;x=h}y=+g[(c[q>>2]|0)+8>>2];z=+Z(-0.0-y)*1.0800000429153442;A=+Y(y)*1.0800000429153442;h=c[(c[w>>2]|0)+12>>2]|0;y=+g[d+340>>2]-z;B=+g[d+344>>2]-A;g[h+316>>2]=+g[d+336>>2];g[h+320>>2]=y;g[h+324>>2]=B;g[h+328>>2]=0.0;h=c[(c[w>>2]|0)+16>>2]|0;B=z+ +g[d+356>>2];z=A+ +g[d+360>>2];g[h+316>>2]=+g[d+352>>2]+0.0;g[h+320>>2]=B;g[h+324>>2]=z;g[h+328>>2]=0.0;h=c[q>>2]|0;z=+Z(+g[h+8>>2])*.5;B=r*.20000000298023224;A=z*1.2999999523162842;y=r*.7853981633974483;C=+((a[h+13|0]&1)-(a[h+14|0]&1)|0)*.7853981633974483;h=d+324|0;d=c[c[h>>2]>>2]|0;q=d;a[d+552|0]=a[x]&1;g[d+572>>2]=.10000000149011612;a[q+553|0]=0;D=r*-1.5;E=.3826834559440613/+W(D*D+1.0+0.0);g[j>>2]=D*E;g[j+4>>2]=E;g[j+8>>2]=E*0.0;g[j+12>>2]=.9238795042037964;ww(q,j);j=c[(c[h>>2]|0)+4>>2]|0;q=j;a[j+552|0]=a[x]&1;g[j+572>>2]=+bL(+0.0,+(-0.0-r))+5.0;a[q+553|0]=0;E=(-1.5707963705062866-B-A)*.5;D=+Z(E);F=D*0.0;G=+Y(E);g[k>>2]=D;g[k+4>>2]=F;g[k+8>>2]=F;g[k+12>>2]=G;ww(q,k);k=c[(c[h>>2]|0)+12>>2]|0;q=k;a[k+552|0]=a[x]&1;g[k+572>>2]=+bL(+0.0,+r)+5.0;a[q+553|0]=0;r=(B+ -1.5707963705062866+A)*.5;A=+Z(r);B=A*0.0;G=+Y(r);g[l>>2]=A;g[l+4>>2]=B;g[l+8>>2]=B;g[l+12>>2]=G;ww(q,l);l=c[(c[h>>2]|0)+8>>2]|0;q=l;a[q+737|0]=a[x]&1;g[l+684>>2]=5.0;G=(z+1.5707963705062866)*.5;B=+Z(G);A=B*0.0;r=+Y(G);g[m>>2]=B;g[m+4>>2]=A;g[m+8>>2]=A;g[m+12>>2]=r;xn(q,m,e);m=c[(c[h>>2]|0)+16>>2]|0;q=m;a[q+737|0]=a[x]&1;g[m+684>>2]=5.0;r=(1.5707963705062866-z)*.5;z=+Z(r);A=z*0.0;B=+Y(r);g[n>>2]=z;g[n+4>>2]=A;g[n+8>>2]=A;g[n+12>>2]=B;xn(q,n,e);n=c[(c[h>>2]|0)+20>>2]|0;q=n;a[n+552|0]=a[x]&1;g[n+572>>2]=5.0;a[q+553|0]=0;g[o>>2]=.5;g[o+4>>2]=.5;g[o+8>>2]=0.0;g[o+12>>2]=.7071067690849304;ww(q,o);o=c[(c[h>>2]|0)+28>>2]|0;q=o;a[o+552|0]=a[x]&1;g[o+572>>2]=5.0;a[q+553|0]=0;g[p>>2]=.5;g[p+4>>2]=-.5;g[p+8>>2]=0.0;g[p+12>>2]=.7071067690849304;ww(q,p);p=c[(c[h>>2]|0)+24>>2]|0;q=p;a[q+737|0]=a[x]&1;g[p+684>>2]=5.0;xo(q,y+.7853981852531433+C,e);q=c[(c[h>>2]|0)+32>>2]|0;h=q;a[h+737|0]=a[x]&1;g[q+684>>2]=5.0;xo(h,.7853981852531433-y+C,e);i=f;return}function jb(a){a=a|0;return}function jc(a,b){a=a|0;b=+b;var d=0,e=0,f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0,I=0.0,J=0,K=0;d=i;i=i+64|0;e=d|0;g[6664]=+g[6664]+.009999999776482582;f=a+84|0;h=a+216|0;j=a+228|0;k=a+232|0;l=e|0;m=e+20|0;n=e+4|0;o=e+40|0;p=e+24|0;q=e+44|0;r=e+48|0;s=e+52|0;t=e+56|0;u=e+60|0;v=a+220|0;w=0;do{x=c[(c[f>>2]|0)+(w<<2)>>2]|0;y=+g[x+20>>2];z=+g[x+36>>2];A=+g[x+8>>2];B=+g[x+24>>2];C=+g[x+40>>2];D=+g[x+12>>2];E=+g[x+28>>2];F=+g[x+44>>2];G=+g[x+52>>2];H=+g[x+56>>2];I=+g[x+60>>2];J=c[26616+(w<<2)>>2]|0;K=c[h>>2]|0;g[K+(J<<6)>>2]=+g[x+4>>2];g[K+(J<<6)+4>>2]=y;g[K+(J<<6)+8>>2]=z;g[K+(J<<6)+12>>2]=0.0;g[K+(J<<6)+16>>2]=A;g[K+(J<<6)+20>>2]=B;g[K+(J<<6)+24>>2]=C;g[K+(J<<6)+28>>2]=0.0;g[K+(J<<6)+32>>2]=D;g[K+(J<<6)+36>>2]=E;g[K+(J<<6)+40>>2]=F;g[K+(J<<6)+44>>2]=0.0;g[K+(J<<6)+48>>2]=G;g[K+(J<<6)+52>>2]=H;g[K+(J<<6)+56>>2]=I;g[K+(J<<6)+60>>2]=1.0;K=c[j>>2]|0;x=c[k>>2]|0;I=+g[K+(J<<4)>>2]- +g[x+(w<<4)>>2];H=+g[K+(J<<4)+4>>2]- +g[x+(w<<4)+4>>2];G=+g[K+(J<<4)+8>>2]- +g[x+(w<<4)+8>>2];x=(c[h>>2]|0)+(J<<6)|0;g[l>>2]=1.0;K1(n|0,0,16)|0;g[m>>2]=1.0;K1(p|0,0,16)|0;g[o>>2]=1.0;g[q>>2]=0.0;g[r>>2]=I;g[s>>2]=H;g[t>>2]=G;g[u>>2]=1.0;jd(x,e)|0;jd((c[h>>2]|0)+(J<<6)|0,(c[v>>2]|0)+(J<<6)|0)|0;w=w+1|0;}while((w|0)<10);w=c[h>>2]|0;g[w+128>>2]=+g[w+64>>2];g[w+132>>2]=+g[w+68>>2];g[w+136>>2]=+g[w+72>>2];g[w+140>>2]=+g[w+76>>2];g[w+144>>2]=+g[w+80>>2];g[w+148>>2]=+g[w+84>>2];g[w+152>>2]=+g[w+88>>2];g[w+156>>2]=+g[w+92>>2];g[w+160>>2]=+g[w+96>>2];g[w+164>>2]=+g[w+100>>2];g[w+168>>2]=+g[w+104>>2];g[w+172>>2]=+g[w+108>>2];g[w+176>>2]=+g[w+112>>2];g[w+180>>2]=+g[w+116>>2];g[w+184>>2]=+g[w+120>>2];g[w+188>>2]=+g[w+124>>2];w=c[h>>2]|0;g[w+704>>2]=+g[w+640>>2];g[w+708>>2]=+g[w+644>>2];g[w+712>>2]=+g[w+648>>2];g[w+716>>2]=+g[w+652>>2];g[w+720>>2]=+g[w+656>>2];g[w+724>>2]=+g[w+660>>2];g[w+728>>2]=+g[w+664>>2];g[w+732>>2]=+g[w+668>>2];g[w+736>>2]=+g[w+672>>2];g[w+740>>2]=+g[w+676>>2];g[w+744>>2]=+g[w+680>>2];g[w+748>>2]=+g[w+684>>2];g[w+752>>2]=+g[w+688>>2];g[w+756>>2]=+g[w+692>>2];g[w+760>>2]=+g[w+696>>2];g[w+764>>2]=+g[w+700>>2];w=c[h>>2]|0;g[w+320>>2]=+g[w+256>>2];g[w+324>>2]=+g[w+260>>2];g[w+328>>2]=+g[w+264>>2];g[w+332>>2]=+g[w+268>>2];g[w+336>>2]=+g[w+272>>2];g[w+340>>2]=+g[w+276>>2];g[w+344>>2]=+g[w+280>>2];g[w+348>>2]=+g[w+284>>2];g[w+352>>2]=+g[w+288>>2];g[w+356>>2]=+g[w+292>>2];g[w+360>>2]=+g[w+296>>2];g[w+364>>2]=+g[w+300>>2];g[w+368>>2]=+g[w+304>>2];g[w+372>>2]=+g[w+308>>2];g[w+376>>2]=+g[w+312>>2];g[w+380>>2]=+g[w+316>>2];w=c[h>>2]|0;g[w+832>>2]=+g[w+768>>2];g[w+836>>2]=+g[w+772>>2];g[w+840>>2]=+g[w+776>>2];g[w+844>>2]=+g[w+780>>2];g[w+848>>2]=+g[w+784>>2];g[w+852>>2]=+g[w+788>>2];g[w+856>>2]=+g[w+792>>2];g[w+860>>2]=+g[w+796>>2];g[w+864>>2]=+g[w+800>>2];g[w+868>>2]=+g[w+804>>2];g[w+872>>2]=+g[w+808>>2];g[w+876>>2]=+g[w+812>>2];g[w+880>>2]=+g[w+816>>2];g[w+884>>2]=+g[w+820>>2];g[w+888>>2]=+g[w+824>>2];g[w+892>>2]=+g[w+828>>2];ja(a,b);i=d;return}function jd(a,b){a=a|0;b=b|0;var c=0,d=0.0,e=0.0,f=0,h=0.0,i=0.0,j=0,k=0.0,l=0.0,m=0,n=0.0,o=0.0,p=0,q=0.0,r=0,s=0.0,t=0,u=0.0,v=0,w=0.0,x=0,y=0.0,z=0,A=0.0,B=0,C=0.0,D=0,E=0.0,F=0,G=0.0,H=0,I=0.0,J=0,K=0.0,L=0,M=0.0,N=0.0,O=0.0,P=0.0,Q=0.0,R=0.0,S=0.0,T=0.0,U=0.0,V=0.0,W=0.0,X=0.0,Y=0.0;c=a|0;d=+g[c>>2];e=+g[b>>2];f=a+16|0;h=+g[f>>2];i=+g[b+4>>2];j=a+32|0;k=+g[j>>2];l=+g[b+8>>2];m=a+48|0;n=+g[m>>2];o=+g[b+12>>2];p=a+4|0;q=+g[p>>2];r=a+20|0;s=+g[r>>2];t=a+36|0;u=+g[t>>2];v=a+52|0;w=+g[v>>2];x=a+8|0;y=+g[x>>2];z=a+24|0;A=+g[z>>2];B=a+40|0;C=+g[B>>2];D=a+56|0;E=+g[D>>2];F=a+12|0;G=+g[F>>2];H=a+28|0;I=+g[H>>2];J=a+44|0;K=+g[J>>2];L=a+60|0;M=+g[L>>2];N=+g[b+16>>2];O=+g[b+20>>2];P=+g[b+24>>2];Q=+g[b+28>>2];R=+g[b+32>>2];S=+g[b+36>>2];T=+g[b+40>>2];U=+g[b+44>>2];V=+g[b+48>>2];W=+g[b+52>>2];X=+g[b+56>>2];Y=+g[b+60>>2];g[c>>2]=d*e+h*i+k*l+n*o;g[p>>2]=e*q+i*s+l*u+o*w;g[x>>2]=e*y+i*A+l*C+o*E;g[F>>2]=e*G+i*I+l*K+o*M;g[f>>2]=d*N+h*O+k*P+n*Q;g[r>>2]=q*N+s*O+u*P+w*Q;g[z>>2]=y*N+A*O+C*P+E*Q;g[H>>2]=G*N+I*O+K*P+M*Q;g[j>>2]=d*R+h*S+k*T+n*U;g[t>>2]=q*R+s*S+u*T+w*U;g[B>>2]=y*R+A*S+C*T+E*U;g[J>>2]=G*R+I*S+K*T+M*U;g[m>>2]=d*V+h*W+k*X+n*Y;g[v>>2]=q*V+s*W+u*X+w*Y;g[D>>2]=y*V+A*W+C*X+E*Y;g[L>>2]=G*V+I*W+K*X+M*Y;return a|0}function je(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;e=i;i=i+128|0;f=e|0;g=e+64|0;ls(f,b,d);K2(g|0,d|0,64)|0;dJ(c[12312]|0);dJ(c[12312]|0);ej(c[12320]|0,+.4000000059604645);ej(c[12321]|0,+.01666666567325592);d=c[12316]|0;dy(d|0,3,c[(jI()|0)+28>>2]|0);gQ(c[12322]|0,1,0,f|0);gQ(c[12314]|0,1,0,g|0);d6(3553,c[a+312>>2]|0);jH(a|0,49192,a+188|0);i=e;return}function jf(a,b){a=a|0;b=b|0;dJ(c[12342]|0);gQ(c[12352]|0,1,0,b|0);jH(a|0,49312,a+188|0);return}function jg(a){a=a|0;KU(a);return}function jh(a,c){a=a|0;c=c|0;var d=0;if((b[a+6>>1]&b[c+4>>1])<<16>>16==0){d=0;return d|0}d=(b[c+6>>1]&b[a+4>>1])<<16>>16!=0;return d|0}function ji(b,c,d,e,f,h,i,j){b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;h=h|0;i=i|0;j=j|0;if(+g[c+80>>2]>+g[b+12>>2]){return+1.0}a[b+8|0]=1;return+1.0}function jj(a){a=a|0;c[a>>2]=30712;kS(a+12|0);jk(a);jl(a);return}function jk(b){b=b|0;var d=0,e=0,f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;d=i;i=i+128|0;e=d|0;f=d+16|0;h=d+32|0;j=d+96|0;k=d+112|0;l=b|0;m=e;n=e;a[n]=16;o=m+1|0;p=o|0;C=1802658128;a[p]=C;C=C>>8;a[p+1|0]=C;C=C>>8;a[p+2|0]=C;C=C>>8;a[p+3|0]=C;p=o+4|0;C=1685024814;a[p]=C;C=C>>8;a[p+1|0]=C;C=C>>8;a[p+2|0]=C;C=C>>8;a[p+3|0]=C;a[m+9|0]=0;m=b+12|0;p=jC(l,e,m)|0;if((a[n]&1)!=0){KU(c[e+8>>2]|0)}if(!p){eY(272)|0;i=d;return}p=iH()|0;e=KS(16)|0;n=f+8|0;c[n>>2]=e;c[f>>2]=17;c[f+4>>2]=13;K2(e|0,20592,13)|0;a[e+13|0]=0;e=iJ(p,f,b+200|0)|0;if((a[f]&1)!=0){KU(c[n>>2]|0)}if(!e){eY(616)|0}e=c[b+68>>2]|0;c[b+116>>2]=e;c[b+120>>2]=(c[b+56>>2]|0)+((c[e>>2]|0)*244|0);jD(l,b+112|0)|0;lp(h,1.5707963705062866);g[b+124>>2]=+g[h>>2];g[b+128>>2]=+g[h+4>>2];g[b+132>>2]=+g[h+8>>2];g[b+136>>2]=+g[h+12>>2];g[b+140>>2]=+g[h+16>>2];g[b+144>>2]=+g[h+20>>2];g[b+148>>2]=+g[h+24>>2];g[b+152>>2]=+g[h+28>>2];g[b+156>>2]=+g[h+32>>2];g[b+160>>2]=+g[h+36>>2];g[b+164>>2]=+g[h+40>>2];g[b+168>>2]=+g[h+44>>2];g[b+172>>2]=+g[h+48>>2];g[b+176>>2]=+g[h+52>>2];g[b+180>>2]=+g[h+56>>2];g[b+184>>2]=+g[h+60>>2];if((c[b+44>>2]|0)!=3){dK(17448,15992,47,26144)}b=k;kZ(j,m,2);h=jI()|0;lm(k,j);l=h+32|0;e=c[l>>2]|0;if(e>>>0<(c[h+36>>2]|0)>>>0){if((e|0)==0){q=0}else{n=e;c[n>>2]=c[b>>2];c[n+4>>2]=c[b+4>>2];c[n+8>>2]=c[b+8>>2];q=c[l>>2]|0}c[l>>2]=q+12}else{jo(h+28|0,k)}kZ(j,m,1);h=jI()|0;lm(k,j);q=h+32|0;l=c[q>>2]|0;if(l>>>0<(c[h+36>>2]|0)>>>0){if((l|0)==0){r=0}else{n=l;c[n>>2]=c[b>>2];c[n+4>>2]=c[b+4>>2];c[n+8>>2]=c[b+8>>2];r=c[q>>2]|0}c[q>>2]=r+12}else{jo(h+28|0,k)}kZ(j,m,0);m=jI()|0;lm(k,j);j=m+32|0;h=c[j>>2]|0;if(h>>>0<(c[m+36>>2]|0)>>>0){if((h|0)==0){s=0}else{r=h;c[r>>2]=c[b>>2];c[r+4>>2]=c[b+4>>2];c[r+8>>2]=c[b+8>>2];s=c[j>>2]|0}c[j>>2]=s+12}else{jo(m+28|0,k)}dJ(c[12378]|0);ej(c[12386]|0,+.8999999761581421);ej(c[12387]|0,1.9999995231628418);i=d;return}function jl(b){b=b|0;var d=0,f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0.0,u=0,v=0,w=0,x=0;d=i;i=i+64|0;f=d|0;h=c[b+120>>2]|0;j=c[h+4>>2]|0;k=j*3|0;l=e0(k|0,4)|0;m=KT(K?-1:l)|0;l=b+204|0;c[l>>2]=m;n=c[h>>2]|0;o=e0(n*3|0|0,4)|0;p=b+208|0;c[p>>2]=KT(K?-1:o)|0;L1:do{if((k|0)>0){o=h+24|0;q=0;r=m;while(1){c[r+(q<<2)>>2]=e[(c[o>>2]|0)+(q<<1)>>1]|0;s=q+1|0;if((s|0)>=(k|0)){break L1}q=s;r=c[l>>2]|0}}}while(0);if((n|0)>0){k=h+152|0;m=h+44|0;h=0;do{r=h*3|0;t=+g[(c[k>>2]|0)+((ag(c[m>>2]|0,h)|0)>>>2<<2)>>2];g[(c[p>>2]|0)+(r<<2)>>2]=t;t=+g[(c[k>>2]|0)+(((ag(c[m>>2]|0,h)|0)>>>2)+1<<2)>>2];g[(c[p>>2]|0)+(r+1<<2)>>2]=t;t=+g[(c[k>>2]|0)+(((ag(c[m>>2]|0,h)|0)>>>2)+2<<2)>>2];g[(c[p>>2]|0)+(r+2<<2)>>2]=t;h=h+1|0;}while((h|0)<(n|0))}h=zv(84,16)|0;ox(h,j,c[l>>2]|0,12,n,c[p>>2]|0,12);p=b+212|0;c[p>>2]=h;h=zv(76,16)|0;mo(h,c[p>>2]|0,1,1);p=b+8|0;c[p>>2]=h;h=jI()|0;n=c[p>>2]|0;l=h+12|0;j=c[l>>2]|0;m=h+16|0;do{if((j|0)==(c[m>>2]|0)){k=(j|0)==0?1:j<<1;if((j|0)>=(k|0)){u=j;break}if((k|0)==0){v=0;w=j}else{r=zv(k<<2,16)|0;v=r;w=c[l>>2]|0}r=h+20|0;if((w|0)>0){q=0;do{o=v+(q<<2)|0;if((o|0)!=0){c[o>>2]=c[(c[r>>2]|0)+(q<<2)>>2]}q=q+1|0;}while((q|0)<(w|0))}q=c[r>>2]|0;o=h+24|0;if((q|0)!=0){if((a[o]&1)!=0){zw(q)}c[r>>2]=0}a[o]=1;c[r>>2]=v;c[m>>2]=k;u=c[l>>2]|0}else{u=j}}while(0);j=(c[h+20>>2]|0)+(u<<2)|0;if((j|0)==0){x=u}else{c[j>>2]=n;x=c[l>>2]|0}c[l>>2]=x+1;g[f>>2]=+g[b+124>>2];g[f+4>>2]=+g[b+140>>2];g[f+8>>2]=+g[b+156>>2];g[f+12>>2]=0.0;g[f+16>>2]=+g[b+128>>2];g[f+20>>2]=+g[b+144>>2];g[f+24>>2]=+g[b+160>>2];g[f+28>>2]=0.0;g[f+32>>2]=+g[b+132>>2];g[f+36>>2]=+g[b+148>>2];g[f+40>>2]=+g[b+164>>2];g[f+44>>2]=0.0;g[f+48>>2]=+g[b+172>>2];g[f+52>>2]=+g[b+176>>2];g[f+56>>2]=+g[b+180>>2];g[f+60>>2]=0.0;x=jI()|0;l=jM(x,0.0,f,c[p>>2]|0)|0;c[b+4>>2]=l;g[l+224>>2]=1.0;i=d;return}function jm(a,b){a=a|0;b=+b;return}function jn(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,h=0,j=0,k=0,l=0,m=0,n=0;f=i;i=i+160|0;h=f|0;j=f+64|0;k=f+104|0;l=f+120|0;m=a+124|0;ls(h,d,m);dJ(c[12378]|0);ej(c[12386]|0,+.9900000095367432);ej(c[12387]|0,10.000009536743164);g[j+8>>2]=0.0;g[j+4>>2]=0.0;g[j>>2]=0.0;g[j+20>>2]=0.0;g[j+16>>2]=0.0;g[j+12>>2]=0.0;g[j+32>>2]=0.0;g[j+28>>2]=0.0;g[j+24>>2]=0.0;d=k;n=c[(jI()|0)+28>>2]|0;lo(l,m);ln(k,n,l);n=j;c[n>>2]=c[d>>2];c[n+4>>2]=c[d+4>>2];c[n+8>>2]=c[d+8>>2];n=(c[(jI()|0)+28>>2]|0)+12|0;lo(l,m);ln(k,n,l);n=j+12|0;c[n>>2]=c[d>>2];c[n+4>>2]=c[d+4>>2];c[n+8>>2]=c[d+8>>2];n=(c[(jI()|0)+28>>2]|0)+24|0;lo(l,m);ln(k,n,l);l=j+24|0;c[l>>2]=c[d>>2];c[l+4>>2]=c[d+4>>2];c[l+8>>2]=c[d+8>>2];dy(c[12382]|0,3,j|0);gQ(c[12392]|0,1,0,e|0);gQ(c[12393]|0,1,0,b|0);gQ(c[12380]|0,1,0,h|0);d6(3553,c[a+200>>2]|0);jE(a|0,49456,a+112|0);i=f;return}function jo(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;d=a+4|0;e=a|0;f=c[e>>2]|0;g=f;h=(c[d>>2]|0)-g|0;i=(h|0)/12|0;j=i+1|0;if(j>>>0>357913941>>>0){Il(0)}k=a+8|0;a=((c[k>>2]|0)-g|0)/12|0;if(a>>>0>178956969>>>0){l=357913941;m=5}else{g=a<<1;a=g>>>0<j>>>0?j:g;if((a|0)==0){n=0;o=0}else{l=a;m=5}}if((m|0)==5){n=KS(l*12|0)|0;o=l}l=n+(i*12|0)|0;if((l|0)!=0){m=l;l=b;c[m>>2]=c[l>>2];c[m+4>>2]=c[l+4>>2];c[m+8>>2]=c[l+8>>2]}l=n+((((h|0)/-12|0)+i|0)*12|0)|0;i=f;K2(l|0,i|0,h)|0;c[e>>2]=l;c[d>>2]=n+(j*12|0);c[k>>2]=n+(o*12|0);if((f|0)==0){return}KU(i);return}function jp(b,d){b=b|0;d=d|0;var e=0;c[b>>2]=30808;kS(b+120|0);g[b+4>>2]=0.0;g[b+480>>2]=0.0;g[b+484>>2]=0.0;g[b+8>>2]=0.0;a[b+12|0]=1;a[b+488|0]=0;e=b+13|0;C=0;a[e]=C;C=C>>8;a[e+1|0]=C;C=C>>8;a[e+2|0]=C;C=C>>8;a[e+3|0]=C;jq(b);jr(b,d);return}function jq(b){b=b|0;var d=0,e=0,f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0;d=i;i=i+1952|0;e=d|0;f=d+16|0;h=d+32|0;j=d+96|0;k=d+160|0;l=d+224|0;m=d+288|0;n=d+352|0;o=d+416|0;p=d+480|0;q=d+544|0;r=d+608|0;s=d+672|0;t=d+736|0;u=d+800|0;v=d+864|0;w=d+928|0;x=d+992|0;y=d+1056|0;z=d+1120|0;A=d+1184|0;B=d+1248|0;C=d+1312|0;D=d+1376|0;E=d+1440|0;F=d+1504|0;G=d+1568|0;H=d+1632|0;I=d+1696|0;J=d+1760|0;K=d+1824|0;L=d+1888|0;M=b|0;N=KS(32)|0;O=e+8|0;c[O>>2]=N;c[e>>2]=33;c[e+4>>2]=17;K2(N|0,12880,17)|0;a[N+17|0]=0;N=b+120|0;P=jC(M,e,N)|0;if((a[e]&1)!=0){KU(c[O>>2]|0)}if(!P){eY(784)|0;i=d;return}P=iH()|0;O=KS(16)|0;e=f+8|0;c[e>>2]=O;c[f>>2]=17;c[f+4>>2]=13;K2(O|0,17416,13)|0;a[O+13|0]=0;O=b+220|0;Q=b+344|0;R=iJ(P,f,Q)|0;if((a[f]&1)!=0){KU(c[e>>2]|0)}if(!R){eY(752)|0}R=b+176|0;e=c[R>>2]|0;f=b+236|0;c[f>>2]=e;P=c[e>>2]|0;S=c[b+164>>2]|0;T=S+(P*244|0)|0;U=b+240|0;c[U>>2]=T;V=c[S+(P*244|0)+4>>2]|0;c[b+224>>2]=V;P=b+244|0;c[P>>2]=7;S=KT(448)|0;c[b+248>>2]=S;W=KT(448)|0;X=b+252|0;c[X>>2]=W;Y=KT(448)|0;Z=b+256|0;c[Z>>2]=Y;_=b+348|0;c[_>>2]=c[O>>2];c[b+352>>2]=V;c[b+356>>2]=c[b+228>>2];c[b+360>>2]=c[b+232>>2];c[b+364>>2]=e;c[b+368>>2]=T;c[b+372>>2]=7;c[b+376>>2]=S;c[b+380>>2]=W;c[b+384>>2]=Y;c[b+388>>2]=c[b+260>>2];c[b+392>>2]=c[b+264>>2];g[b+396>>2]=+g[b+268>>2];g[b+400>>2]=+g[b+272>>2];g[b+404>>2]=+g[b+276>>2];g[b+408>>2]=+g[b+280>>2];g[b+412>>2]=+g[b+284>>2];g[b+416>>2]=+g[b+288>>2];g[b+420>>2]=+g[b+292>>2];g[b+424>>2]=+g[b+296>>2];g[b+428>>2]=+g[b+300>>2];g[b+432>>2]=+g[b+304>>2];g[b+436>>2]=+g[b+308>>2];g[b+440>>2]=+g[b+312>>2];g[b+444>>2]=+g[b+316>>2];g[b+448>>2]=+g[b+320>>2];g[b+452>>2]=+g[b+324>>2];g[b+456>>2]=+g[b+328>>2];c[b+460>>2]=c[b+332>>2];c[b+464>>2]=c[b+336>>2];c[b+468>>2]=c[b+340>>2];c[b+472>>2]=c[Q>>2];jG(M,O,0)|0;jF(M,_)|0;_=c[c[(c[U>>2]|0)+156>>2]>>2]|0;U=c[X>>2]|0;lq(j,1.5707963705062866);kY(k,N,c[f>>2]|0,(c[R>>2]|0)+(_*60|0)|0);ls(h,j,k);g[U>>2]=+g[h>>2];g[U+4>>2]=+g[h+4>>2];g[U+8>>2]=+g[h+8>>2];g[U+12>>2]=+g[h+12>>2];g[U+16>>2]=+g[h+16>>2];g[U+20>>2]=+g[h+20>>2];g[U+24>>2]=+g[h+24>>2];g[U+28>>2]=+g[h+28>>2];g[U+32>>2]=+g[h+32>>2];g[U+36>>2]=+g[h+36>>2];g[U+40>>2]=+g[h+40>>2];g[U+44>>2]=+g[h+44>>2];g[U+48>>2]=+g[h+48>>2];g[U+52>>2]=+g[h+52>>2];g[U+56>>2]=+g[h+56>>2];g[U+60>>2]=+g[h+60>>2];h=c[X>>2]|0;lr(m,1.5707963705062866);g[o>>2]=1.0;K1(o+4|0,0,16)|0;g[o+20>>2]=1.0;K1(o+24|0,0,16)|0;g[o+40>>2]=1.0;g[o+44>>2]=0.0;g[o+48>>2]=2.8547000885009766;g[o+52>>2]=0.0;g[o+56>>2]=.04019999876618385;g[o+60>>2]=1.0;lq(p,.3149999976158142);ls(q,o,p);lt(n,q);ls(l,m,n);g[h+64>>2]=+g[l>>2];g[h+68>>2]=+g[l+4>>2];g[h+72>>2]=+g[l+8>>2];g[h+76>>2]=+g[l+12>>2];g[h+80>>2]=+g[l+16>>2];g[h+84>>2]=+g[l+20>>2];g[h+88>>2]=+g[l+24>>2];g[h+92>>2]=+g[l+28>>2];g[h+96>>2]=+g[l+32>>2];g[h+100>>2]=+g[l+36>>2];g[h+104>>2]=+g[l+40>>2];g[h+108>>2]=+g[l+44>>2];g[h+112>>2]=+g[l+48>>2];g[h+116>>2]=+g[l+52>>2];g[h+120>>2]=+g[l+56>>2];g[h+124>>2]=+g[l+60>>2];l=c[X>>2]|0;lr(s,1.5707963705062866);g[u>>2]=1.0;K1(u+4|0,0,16)|0;g[u+20>>2]=1.0;K1(u+24|0,0,16)|0;g[u+40>>2]=1.0;g[u+44>>2]=0.0;g[u+48>>2]=3.4096999168395996;g[u+52>>2]=0.0;g[u+56>>2]=-1.0449999570846558;g[u+60>>2]=1.0;lt(t,u);ls(r,s,t);g[l+128>>2]=+g[r>>2];g[l+132>>2]=+g[r+4>>2];g[l+136>>2]=+g[r+8>>2];g[l+140>>2]=+g[r+12>>2];g[l+144>>2]=+g[r+16>>2];g[l+148>>2]=+g[r+20>>2];g[l+152>>2]=+g[r+24>>2];g[l+156>>2]=+g[r+28>>2];g[l+160>>2]=+g[r+32>>2];g[l+164>>2]=+g[r+36>>2];g[l+168>>2]=+g[r+40>>2];g[l+172>>2]=+g[r+44>>2];g[l+176>>2]=+g[r+48>>2];g[l+180>>2]=+g[r+52>>2];g[l+184>>2]=+g[r+56>>2];g[l+188>>2]=+g[r+60>>2];r=c[X>>2]|0;lr(w,1.5707963705062866);g[y>>2]=1.0;K1(y+4|0,0,16)|0;g[y+20>>2]=1.0;K1(y+24|0,0,16)|0;g[y+40>>2]=1.0;g[y+44>>2]=0.0;g[y+48>>2]=-2.298099994659424;g[y+52>>2]=0.0;g[y+56>>2]=-1.0635000467300415;g[y+60>>2]=1.0;lt(x,y);ls(v,w,x);g[r+192>>2]=+g[v>>2];g[r+196>>2]=+g[v+4>>2];g[r+200>>2]=+g[v+8>>2];g[r+204>>2]=+g[v+12>>2];g[r+208>>2]=+g[v+16>>2];g[r+212>>2]=+g[v+20>>2];g[r+216>>2]=+g[v+24>>2];g[r+220>>2]=+g[v+28>>2];g[r+224>>2]=+g[v+32>>2];g[r+228>>2]=+g[v+36>>2];g[r+232>>2]=+g[v+40>>2];g[r+236>>2]=+g[v+44>>2];g[r+240>>2]=+g[v+48>>2];g[r+244>>2]=+g[v+52>>2];g[r+248>>2]=+g[v+56>>2];g[r+252>>2]=+g[v+60>>2];v=c[X>>2]|0;lr(A,1.5707963705062866);g[C>>2]=1.0;K1(C+4|0,0,16)|0;g[C+20>>2]=1.0;K1(C+24|0,0,16)|0;g[C+40>>2]=1.0;g[C+44>>2]=0.0;g[C+48>>2]=-.1785999983549118;g[C+52>>2]=0.0;g[C+56>>2]=-.7646999955177307;g[C+60>>2]=1.0;lt(B,C);ls(z,A,B);g[v+256>>2]=+g[z>>2];g[v+260>>2]=+g[z+4>>2];g[v+264>>2]=+g[z+8>>2];g[v+268>>2]=+g[z+12>>2];g[v+272>>2]=+g[z+16>>2];g[v+276>>2]=+g[z+20>>2];g[v+280>>2]=+g[z+24>>2];g[v+284>>2]=+g[z+28>>2];g[v+288>>2]=+g[z+32>>2];g[v+292>>2]=+g[z+36>>2];g[v+296>>2]=+g[z+40>>2];g[v+300>>2]=+g[z+44>>2];g[v+304>>2]=+g[z+48>>2];g[v+308>>2]=+g[z+52>>2];g[v+312>>2]=+g[z+56>>2];g[v+316>>2]=+g[z+60>>2];z=c[X>>2]|0;lr(E,1.5707963705062866);g[G>>2]=1.0;K1(G+4|0,0,16)|0;g[G+20>>2]=1.0;K1(G+24|0,0,16)|0;g[G+40>>2]=1.0;g[G+44>>2]=0.0;g[G+48>>2]=-1.2620999813079834;g[G+52>>2]=.6811000108718872;g[G+56>>2]=-.7677000164985657;g[G+60>>2]=1.0;lt(F,G);ls(D,E,F);g[z+320>>2]=+g[D>>2];g[z+324>>2]=+g[D+4>>2];g[z+328>>2]=+g[D+8>>2];g[z+332>>2]=+g[D+12>>2];g[z+336>>2]=+g[D+16>>2];g[z+340>>2]=+g[D+20>>2];g[z+344>>2]=+g[D+24>>2];g[z+348>>2]=+g[D+28>>2];g[z+352>>2]=+g[D+32>>2];g[z+356>>2]=+g[D+36>>2];g[z+360>>2]=+g[D+40>>2];g[z+364>>2]=+g[D+44>>2];g[z+368>>2]=+g[D+48>>2];g[z+372>>2]=+g[D+52>>2];g[z+376>>2]=+g[D+56>>2];g[z+380>>2]=+g[D+60>>2];D=c[X>>2]|0;lr(I,1.5707963705062866);g[K>>2]=1.0;K1(K+4|0,0,16)|0;g[K+20>>2]=1.0;K1(K+24|0,0,16)|0;g[K+40>>2]=1.0;g[K+44>>2]=0.0;g[K+48>>2]=.9049999713897705;g[K+52>>2]=-.6753000020980835;g[K+56>>2]=-.7703999876976013;g[K+60>>2]=1.0;lt(J,K);ls(H,I,J);g[D+384>>2]=+g[H>>2];g[D+388>>2]=+g[H+4>>2];g[D+392>>2]=+g[H+8>>2];g[D+396>>2]=+g[H+12>>2];g[D+400>>2]=+g[H+16>>2];g[D+404>>2]=+g[H+20>>2];g[D+408>>2]=+g[H+24>>2];g[D+412>>2]=+g[H+28>>2];g[D+416>>2]=+g[H+32>>2];g[D+420>>2]=+g[H+36>>2];g[D+424>>2]=+g[H+40>>2];g[D+428>>2]=+g[H+44>>2];g[D+432>>2]=+g[H+48>>2];g[D+436>>2]=+g[H+52>>2];g[D+440>>2]=+g[H+56>>2];g[D+444>>2]=+g[H+60>>2];if((c[P>>2]|0)<=0){i=d;return}H=L|0;D=L+4|0;J=L+8|0;I=L+12|0;K=L+16|0;z=L+20|0;F=L+24|0;E=L+28|0;G=L+32|0;v=L+36|0;B=L+40|0;A=L+44|0;C=L+48|0;r=L+52|0;x=L+56|0;w=L+60|0;y=0;do{l=c[Z>>2]|0;lt(L,(c[X>>2]|0)+(y<<6)|0);g[l+(y<<6)>>2]=+g[H>>2];g[l+(y<<6)+4>>2]=+g[D>>2];g[l+(y<<6)+8>>2]=+g[J>>2];g[l+(y<<6)+12>>2]=+g[I>>2];g[l+(y<<6)+16>>2]=+g[K>>2];g[l+(y<<6)+20>>2]=+g[z>>2];g[l+(y<<6)+24>>2]=+g[F>>2];g[l+(y<<6)+28>>2]=+g[E>>2];g[l+(y<<6)+32>>2]=+g[G>>2];g[l+(y<<6)+36>>2]=+g[v>>2];g[l+(y<<6)+40>>2]=+g[B>>2];g[l+(y<<6)+44>>2]=+g[A>>2];g[l+(y<<6)+48>>2]=+g[C>>2];g[l+(y<<6)+52>>2]=+g[r>>2];g[l+(y<<6)+56>>2]=+g[x>>2];g[l+(y<<6)+60>>2]=+g[w>>2];y=y+1|0;}while((y|0)<(c[P>>2]|0));i=d;return}function jr(b,d){b=b|0;d=d|0;var e=0,f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0.0,y=0.0,z=0.0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0.0,J=0.0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0.0,_=0.0,$=0.0,aa=0.0,ab=0.0,ac=0.0,ad=0.0,ae=0.0,af=0.0,ag=0.0,ah=0.0,ai=0.0,aj=0.0,ak=0.0,al=0.0,am=0.0,an=0.0,ao=0.0,ap=0,aq=0,ar=0,as=0,at=0,au=0,av=0,aw=0,ax=0,ay=0,az=0,aA=0,aB=0,aC=0,aD=0,aE=0;e=i;i=i+608|0;f=e|0;h=e+16|0;j=e+80|0;k=e+96|0;l=e+240|0;m=e+256|0;n=e+272|0;o=e+288|0;p=e+352|0;q=e+416|0;r=e+432|0;s=e+448|0;t=e+464|0;u=b+32|0;c[u>>2]=KT(20)|0;v=b+36|0;c[v>>2]=KT(20)|0;w=b+476|0;c[w>>2]=KT(16)|0;x=+g[d>>2]+0.0;y=+g[d+4>>2]+3.0;z=+g[d+8>>2]+0.0;d=zv(56,16)|0;g[j>>2]=.1599999964237213;g[j+4>>2]=1.0;g[j+8>>2]=.3333333432674408;g[j+12>>2]=0.0;l3(d,j);j=d;hh[c[(c[d>>2]|0)+32>>2]&15](j,4.0,f);c[c[w>>2]>>2]=j;g[k>>2]=4.0;c[k+4>>2]=0;c[k+72>>2]=j;j=k+76|0;d=f;c[j>>2]=c[d>>2];c[j+4>>2]=c[d+4>>2];c[j+8>>2]=c[d+8>>2];c[j+12>>2]=c[d+12>>2];g[k+92>>2]=0.0;g[k+96>>2]=0.0;g[k+100>>2]=.5;g[k+104>>2]=0.0;g[k+108>>2]=0.0;g[k+112>>2]=.800000011920929;g[k+116>>2]=1.0;a[k+120|0]=0;g[k+124>>2]=.004999999888241291;g[k+128>>2]=.009999999776482582;g[k+132>>2]=.009999999776482582;g[k+136>>2]=.009999999776482582;g[k+8>>2]=1.0;K1(k+12|0,0,16)|0;g[k+28>>2]=1.0;K1(k+32|0,0,16)|0;g[k+48>>2]=1.0;K1(k+52|0,0,16)|0;g[k+56>>2]=x;g[k+60>>2]=y;g[k+64>>2]=z;g[k+68>>2]=0.0;d=zv(612,16)|0;j=d;y9(j,k);rS(d,4);c[c[u>>2]>>2]=j;d=c[(jI()|0)+4>>2]|0;g0[c[(c[d>>2]|0)+84>>2]&511](d,j);j=zv(56,16)|0;g[l>>2]=.1599999964237213;g[l+4>>2]=1.5;g[l+8>>2]=1.5;g[l+12>>2]=0.0;nB(j,l);l=j;hh[c[(c[j>>2]|0)+32>>2]&15](l,3.0,f);c[(c[w>>2]|0)+8>>2]=l;j=jI()|0;d=j+12|0;k=c[d>>2]|0;b=j+16|0;do{if((k|0)==(c[b>>2]|0)){A=(k|0)==0?1:k<<1;if((k|0)>=(A|0)){B=k;break}if((A|0)==0){C=0;D=k}else{E=zv(A<<2,16)|0;C=E;D=c[d>>2]|0}E=j+20|0;if((D|0)>0){F=0;do{G=C+(F<<2)|0;if((G|0)!=0){c[G>>2]=c[(c[E>>2]|0)+(F<<2)>>2]}F=F+1|0;}while((F|0)<(D|0))}F=c[E>>2]|0;G=j+24|0;if((F|0)!=0){if((a[G]&1)!=0){zw(F)}c[E>>2]=0}a[G]=1;c[E>>2]=C;c[b>>2]=A;B=c[d>>2]|0}else{B=k}}while(0);k=(c[j+20>>2]|0)+(B<<2)|0;if((k|0)==0){H=B}else{c[k>>2]=l;H=c[d>>2]|0}c[d>>2]=H+1;H=h|0;g[H>>2]=1.0;d=h+20|0;k=h+4|0;K1(k|0,0,16)|0;g[d>>2]=1.0;B=h+40|0;j=h+24|0;K1(j|0,0,16)|0;g[B>>2]=1.0;b=h+44|0;K1(b|0,0,16)|0;I=y+ +g[12273];J=z+ +g[12274];C=h+48|0;g[C>>2]=x+ +g[12272];D=h+52|0;g[D>>2]=I;G=h+56|0;g[G>>2]=J;F=h+60|0;g[F>>2]=0.0;K=jM(jI()|0,3.0,h,l)|0;c[(c[u>>2]|0)+8>>2]=K;g[(c[(c[u>>2]|0)+8>>2]|0)+224>>2]=10.0;K=zv(56,16)|0;g[m>>2]=.1599999964237213;g[m+4>>2]=1.5;g[m+8>>2]=1.5;g[m+12>>2]=0.0;nB(K,m);m=K;hh[c[(c[K>>2]|0)+32>>2]&15](m,3.0,f);c[(c[w>>2]|0)+12>>2]=m;K=jI()|0;l=K+12|0;L=c[l>>2]|0;M=K+16|0;do{if((L|0)==(c[M>>2]|0)){N=(L|0)==0?1:L<<1;if((L|0)>=(N|0)){O=L;break}if((N|0)==0){P=0;Q=L}else{R=zv(N<<2,16)|0;P=R;Q=c[l>>2]|0}R=K+20|0;if((Q|0)>0){S=0;do{T=P+(S<<2)|0;if((T|0)!=0){c[T>>2]=c[(c[R>>2]|0)+(S<<2)>>2]}S=S+1|0;}while((S|0)<(Q|0))}S=c[R>>2]|0;A=K+24|0;if((S|0)!=0){if((a[A]&1)!=0){zw(S)}c[R>>2]=0}a[A]=1;c[R>>2]=P;c[M>>2]=N;O=c[l>>2]|0}else{O=L}}while(0);L=(c[K+20>>2]|0)+(O<<2)|0;if((L|0)==0){U=O}else{c[L>>2]=m;U=c[l>>2]|0}c[l>>2]=U+1;g[H>>2]=1.0;K1(k|0,0,16)|0;g[d>>2]=1.0;K1(j|0,0,16)|0;g[B>>2]=1.0;K1(b|0,0,16)|0;J=y+ +g[12269];I=z+ +g[12270];g[C>>2]=x+ +g[12268];g[D>>2]=J;g[G>>2]=I;g[F>>2]=0.0;U=jM(jI()|0,3.0,h,m)|0;c[(c[u>>2]|0)+12>>2]=U;g[(c[(c[u>>2]|0)+12>>2]|0)+224>>2]=10.0;U=zv(56,16)|0;g[n>>2]=2.200000047683716;g[n+4>>2]=.10000000149011612;g[n+8>>2]=.10000000149011612;g[n+12>>2]=0.0;nB(U,n);n=U;hh[c[(c[U>>2]|0)+32>>2]&15](n,3.0,f);f=jI()|0;U=f+12|0;m=c[U>>2]|0;l=f+16|0;do{if((m|0)==(c[l>>2]|0)){L=(m|0)==0?1:m<<1;if((m|0)>=(L|0)){V=m;break}if((L|0)==0){W=0;X=m}else{O=zv(L<<2,16)|0;W=O;X=c[U>>2]|0}O=f+20|0;if((X|0)>0){K=0;do{M=W+(K<<2)|0;if((M|0)!=0){c[M>>2]=c[(c[O>>2]|0)+(K<<2)>>2]}K=K+1|0;}while((K|0)<(X|0))}K=c[O>>2]|0;N=f+24|0;if((K|0)!=0){if((a[N]&1)!=0){zw(K)}c[O>>2]=0}a[N]=1;c[O>>2]=W;c[l>>2]=L;V=c[U>>2]|0}else{V=m}}while(0);m=(c[f+20>>2]|0)+(V<<2)|0;if((m|0)==0){Y=V}else{c[m>>2]=n;Y=c[U>>2]|0}c[U>>2]=Y+1;g[H>>2]=1.0;K1(k|0,0,16)|0;g[d>>2]=1.0;K1(j|0,0,16)|0;g[B>>2]=1.0;K1(b|0,0,16)|0;I=y+ +g[12273]+ +g[12287];y=z+ +g[12274]+ +g[12288];g[C>>2]=x+ +g[12272]+ +g[12286];g[D>>2]=I;g[G>>2]=y;g[F>>2]=0.0;c[(c[w>>2]|0)+4>>2]=n;w=jM(jI()|0,3.0,h,n)|0;c[(c[u>>2]|0)+4>>2]=w;w=o|0;g[w>>2]=1.0;n=o+4|0;h=o+20|0;F=n;K1(F|0,0,16)|0;g[h>>2]=1.0;G=o+24|0;D=o+40|0;C=G;K1(C|0,0,16)|0;g[D>>2]=1.0;b=o+44|0;B=b;K1(B|0,0,20)|0;j=p|0;g[j>>2]=1.0;d=p+20|0;k=p+4|0;K1(k|0,0,16)|0;g[d>>2]=1.0;H=p+40|0;Y=p+24|0;K1(Y|0,0,16)|0;g[H>>2]=1.0;U=p+44|0;K1(U|0,0,16)|0;y=+g[12273]+ +g[12287];I=+g[12274]+ +g[12288];m=p+48|0;g[m>>2]=+g[12272]+ +g[12286];V=p+52|0;g[V>>2]=y;f=p+56|0;g[f>>2]=I;l=p+60|0;g[l>>2]=0.0;W=zv(1388,16)|0;X=W;N=c[u>>2]|0;w6(X,c[N+4>>2]|0,c[N>>2]|0,o,p,1);g[W+680>>2]=0.0;g[W+696>>2]=0.0;g[W+684>>2]=0.0;g[W+700>>2]=0.0;g[W+688>>2]=0.0;g[W+704>>2]=0.0;I=+c2(+0.0,6.2831854820251465);do{if(I<-3.1415927410125732){Z=I+6.2831854820251465}else{if(I<=3.1415927410125732){Z=I;break}Z=I+ -6.2831854820251465}}while(0);I=+c2(+0.0,6.2831854820251465);do{if(I<-3.1415927410125732){_=I+6.2831854820251465}else{if(I<=3.1415927410125732){_=I;break}_=I+ -6.2831854820251465}}while(0);g[W+868>>2]=Z;g[W+872>>2]=_;_=+c2(+0.0,6.2831854820251465);do{if(_<-3.1415927410125732){$=_+6.2831854820251465}else{if(_<=3.1415927410125732){$=_;break}$=_+ -6.2831854820251465}}while(0);_=+c2(+0.0,6.2831854820251465);do{if(_<-3.1415927410125732){aa=_+6.2831854820251465}else{if(_<=3.1415927410125732){aa=_;break}aa=_+ -6.2831854820251465}}while(0);g[W+932>>2]=$;g[W+936>>2]=aa;aa=+c2(+0.0,6.2831854820251465);do{if(aa<-3.1415927410125732){ab=aa+6.2831854820251465}else{if(aa<=3.1415927410125732){ab=aa;break}ab=aa+ -6.2831854820251465}}while(0);aa=+c2(+0.0,6.2831854820251465);do{if(aa<-3.1415927410125732){ac=aa+6.2831854820251465}else{if(aa<=3.1415927410125732){ac=aa;break}ac=aa+ -6.2831854820251465}}while(0);g[W+996>>2]=ab;g[W+1e3>>2]=ac;w7(X,4,1);X=W;c[W+24>>2]=50;c[c[v>>2]>>2]=X;W=c[(jI()|0)+4>>2]|0;hF[c[(c[W>>2]|0)+56>>2]&255](W,X,1);g[q>>2]=1.0;g[q+4>>2]=0.0;g[q+8>>2]=0.0;g[q+12>>2]=0.0;g[w>>2]=1.0;K1(F|0,0,16)|0;g[h>>2]=1.0;K1(C|0,0,16)|0;g[D>>2]=1.0;K1(B|0,0,20)|0;g[j>>2]=1.0;K1(k|0,0,16)|0;g[d>>2]=1.0;K1(Y|0,0,16)|0;g[H>>2]=1.0;K1(U|0,0,16)|0;ac=-0.0- +g[12287];ab=-0.0- +g[12288];g[m>>2]=-0.0- +g[12286];g[V>>2]=ac;g[f>>2]=ab;g[l>>2]=0.0;l=zv(1312,16)|0;f=c[u>>2]|0;wK(l,c[f+8>>2]|0,c[f+4>>2]|0,o,p,1);g[l+680>>2]=0.0;g[l+696>>2]=0.0;g[l+684>>2]=0.0;g[l+700>>2]=0.0;g[l+688>>2]=0.0;g[l+704>>2]=0.0;ab=+c2(-3.1415927410125732,6.2831854820251465);do{if(ab<-3.1415927410125732){ad=ab+6.2831854820251465}else{if(ab<=3.1415927410125732){ad=ab;break}ad=ab+ -6.2831854820251465}}while(0);ab=+c2(3.1415927410125732,6.2831854820251465);do{if(ab<-3.1415927410125732){ae=ab+6.2831854820251465}else{if(ab<=3.1415927410125732){ae=ab;break}ae=ab+ -6.2831854820251465}}while(0);g[l+868>>2]=ad;g[l+872>>2]=ae;ae=+c2(+0.0,6.2831854820251465);do{if(ae<-3.1415927410125732){af=ae+6.2831854820251465}else{if(ae<=3.1415927410125732){af=ae;break}af=ae+ -6.2831854820251465}}while(0);ae=+c2(+0.0,6.2831854820251465);do{if(ae<-3.1415927410125732){ag=ae+6.2831854820251465}else{if(ae<=3.1415927410125732){ag=ae;break}ag=ae+ -6.2831854820251465}}while(0);g[l+932>>2]=af;g[l+936>>2]=ag;ag=+c2(+0.0,6.2831854820251465);do{if(ag<-3.1415927410125732){ah=ag+6.2831854820251465}else{if(ag<=3.1415927410125732){ah=ag;break}ah=ag+ -6.2831854820251465}}while(0);ag=+c2(+0.0,6.2831854820251465);do{if(ag<-3.1415927410125732){ai=ag+6.2831854820251465}else{if(ag<=3.1415927410125732){ai=ag;break}ai=ag+ -6.2831854820251465}}while(0);g[l+996>>2]=ah;g[l+1e3>>2]=ai;f=l;c[l+24>>2]=50;c[(c[v>>2]|0)+4>>2]=f;l=c[(jI()|0)+4>>2]|0;hF[c[(c[l>>2]|0)+56>>2]&255](l,f,1);f=zv(360,16)|0;l=c[u>>2]|0;V=c[l+8>>2]|0;m=c[l>>2]|0;K1(r|0,0,16)|0;xv(f,V,m,r,49088);r=f;c[f+24>>2]=50;c[(c[v>>2]|0)+8>>2]=r;f=c[(jI()|0)+4>>2]|0;hF[c[(c[f>>2]|0)+56>>2]&255](f,r,1);r=zv(764,16)|0;f=c[u>>2]|0;m=c[f+12>>2]|0;V=c[f>>2]|0;K1(s|0,0,16)|0;xf(r,m,V,s,49072,q,q,0);q=r;c[r+24>>2]=50;c[(c[v>>2]|0)+12>>2]=q;r=c[(jI()|0)+4>>2]|0;hF[c[(c[r>>2]|0)+56>>2]&255](r,q,1);q=zv(612,16)|0;r=q;g[t>>2]=0.0;c[t+4>>2]=0;K1(t+72|0,0,28)|0;g[t+100>>2]=.5;g[t+104>>2]=0.0;g[t+108>>2]=0.0;g[t+112>>2]=.800000011920929;g[t+116>>2]=1.0;a[t+120|0]=0;g[t+124>>2]=.004999999888241291;g[t+128>>2]=.009999999776482582;g[t+132>>2]=.009999999776482582;g[t+136>>2]=.009999999776482582;g[t+8>>2]=1.0;K1(t+12|0,0,16)|0;g[t+28>>2]=1.0;K1(t+32|0,0,16)|0;g[t+48>>2]=1.0;K1(t+52|0,0,20)|0;y9(r,t);K1(F|0,0,12)|0;K1(C|0,0,12)|0;K1(B|0,0,16)|0;g[j>>2]=1.0;K1(k|0,0,16)|0;g[d>>2]=1.0;K1(Y|0,0,16)|0;g[H>>2]=1.0;K1(U|0,0,20)|0;g[w>>2]=-4.371138828673793e-8;g[n>>2]=-1.0;g[o+8>>2]=0.0;g[o+12>>2]=0.0;g[o+16>>2]=1.0;g[h>>2]=-4.371138828673793e-8;g[G>>2]=0.0;g[o+28>>2]=0.0;g[o+32>>2]=-0.0;g[o+36>>2]=0.0;g[D>>2]=1.0;g[b>>2]=0.0;g[q+4>>2]=-4.371138828673793e-8;g[q+8>>2]=-1.0;g[q+12>>2]=0.0;g[q+16>>2]=0.0;g[q+20>>2]=1.0;g[q+24>>2]=-4.371138828673793e-8;g[q+28>>2]=0.0;g[q+32>>2]=0.0;g[q+36>>2]=-0.0;g[q+40>>2]=0.0;g[q+44>>2]=1.0;g[q+48>>2]=0.0;g[o+48>>2]=0.0;g[o+52>>2]=-4.5;g[o+56>>2]=0.0;g[o+60>>2]=0.0;c[(c[u>>2]|0)+16>>2]=r;r=zv(1312,16)|0;q=c[u>>2]|0;wK(r,c[q>>2]|0,c[q+16>>2]|0,o,p,1);g[r+680>>2]=-3.4028234663852886e+38;g[r+696>>2]=3.4028234663852886e+38;g[r+684>>2]=-3.4028234663852886e+38;g[r+700>>2]=3.4028234663852886e+38;g[r+688>>2]=-3.4028234663852886e+38;g[r+704>>2]=3.4028234663852886e+38;ai=+c2(-3.1415927410125732,6.2831854820251465);do{if(ai<-3.1415927410125732){aj=ai+6.2831854820251465}else{if(ai<=3.1415927410125732){aj=ai;break}aj=ai+ -6.2831854820251465}}while(0);ai=+c2(3.1415927410125732,6.2831854820251465);do{if(ai<-3.1415927410125732){ak=ai+6.2831854820251465}else{if(ai<=3.1415927410125732){ak=ai;break}ak=ai+ -6.2831854820251465}}while(0);g[r+868>>2]=aj;g[r+872>>2]=ak;ak=+c2(-3.1415927410125732,6.2831854820251465);do{if(ak<-3.1415927410125732){al=ak+6.2831854820251465}else{if(ak<=3.1415927410125732){al=ak;break}al=ak+ -6.2831854820251465}}while(0);ak=+c2(3.1415927410125732,6.2831854820251465);do{if(ak<-3.1415927410125732){am=ak+6.2831854820251465}else{if(ak<=3.1415927410125732){am=ak;break}am=ak+ -6.2831854820251465}}while(0);g[r+932>>2]=al;g[r+936>>2]=am;am=+c2(+0.0,6.2831854820251465);do{if(am<-3.1415927410125732){an=am+6.2831854820251465}else{if(am<=3.1415927410125732){an=am;break}an=am+ -6.2831854820251465}}while(0);am=+c2(+0.0,6.2831854820251465);if(am<-3.1415927410125732){ao=am+6.2831854820251465;ap=r+996|0;aq=ap;g[aq>>2]=an;ar=r+1e3|0;as=ar;g[as>>2]=ao;at=r;au=r+24|0;av=au;c[av>>2]=50;aw=c[v>>2]|0;ax=aw+16|0;c[ax>>2]=at;ay=jI()|0;az=ay+4|0;aA=c[az>>2]|0;aB=aA;aC=c[aB>>2]|0;aD=aC+56|0;aE=c[aD>>2]|0;hF[aE&255](aA,at,1);i=e;return}if(am<=3.1415927410125732){ao=am;ap=r+996|0;aq=ap;g[aq>>2]=an;ar=r+1e3|0;as=ar;g[as>>2]=ao;at=r;au=r+24|0;av=au;c[av>>2]=50;aw=c[v>>2]|0;ax=aw+16|0;c[ax>>2]=at;ay=jI()|0;az=ay+4|0;aA=c[az>>2]|0;aB=aA;aC=c[aB>>2]|0;aD=aC+56|0;aE=c[aD>>2]|0;hF[aE&255](aA,at,1);i=e;return}ao=am+ -6.2831854820251465;ap=r+996|0;aq=ap;g[aq>>2]=an;ar=r+1e3|0;as=ar;g[as>>2]=ao;at=r;au=r+24|0;av=au;c[av>>2]=50;aw=c[v>>2]|0;ax=aw+16|0;c[ax>>2]=at;ay=jI()|0;az=ay+4|0;aA=c[az>>2]|0;aB=aA;aC=c[aB>>2]|0;aD=aC+56|0;aE=c[aD>>2]|0;hF[aE&255](aA,at,1);i=e;return}function js(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;b=a+36|0;d=c[b>>2]|0;do{if((d|0)!=0){e=c[d>>2]|0;f=c[(jI()|0)+4>>2]|0;g0[c[(c[f>>2]|0)+60>>2]&511](f,e);if((e|0)!=0){g$[c[(c[e>>2]|0)+4>>2]&1023](e)}e=c[(c[b>>2]|0)+4>>2]|0;f=c[(jI()|0)+4>>2]|0;g0[c[(c[f>>2]|0)+60>>2]&511](f,e);if((e|0)!=0){g$[c[(c[e>>2]|0)+4>>2]&1023](e)}e=c[(c[b>>2]|0)+8>>2]|0;f=c[(jI()|0)+4>>2]|0;g0[c[(c[f>>2]|0)+60>>2]&511](f,e);if((e|0)!=0){g$[c[(c[e>>2]|0)+4>>2]&1023](e)}e=c[(c[b>>2]|0)+12>>2]|0;f=c[(jI()|0)+4>>2]|0;g0[c[(c[f>>2]|0)+60>>2]&511](f,e);if((e|0)!=0){g$[c[(c[e>>2]|0)+4>>2]&1023](e)}e=c[(c[b>>2]|0)+16>>2]|0;f=c[(jI()|0)+4>>2]|0;g0[c[(c[f>>2]|0)+60>>2]&511](f,e);if((e|0)!=0){g$[c[(c[e>>2]|0)+4>>2]&1023](e)}e=c[b>>2]|0;if((e|0)==0){break}KU(e)}}while(0);c[b>>2]=0;b=a+32|0;d=c[b>>2]|0;do{if((d|0)!=0){e=d;f=0;do{g=c[e+(f<<2)>>2]|0;if((g|0)!=0){h=g+484|0;if((c[h>>2]|0)>0){i=g+492|0;do{j=c[(jI()|0)+4>>2]|0;g0[c[(c[j>>2]|0)+60>>2]&511](j,c[c[i>>2]>>2]|0);}while((c[h>>2]|0)>0)}h=c[g+476>>2]|0;if((h|0)!=0){g$[c[(c[h>>2]|0)+4>>2]&1023](h)}h=c[(jI()|0)+4>>2]|0;g0[c[(c[h>>2]|0)+92>>2]&511](h,g);g$[c[(c[g>>2]|0)+8>>2]&1023](g)}f=f+1|0;e=c[b>>2]|0;}while((f|0)<5);if((e|0)==0){break}KU(e)}}while(0);c[b>>2]=0;b=a+476|0;a=c[b>>2]|0;if((a|0)==0){c[b>>2]=0;return}d=c[a>>2]|0;if((d|0)==0){k=a}else{g$[c[(c[d>>2]|0)+4>>2]&1023](d);k=c[b>>2]|0}d=c[k+4>>2]|0;if((d|0)==0){l=k}else{g$[c[(c[d>>2]|0)+4>>2]&1023](d);l=c[b>>2]|0}d=c[l+8>>2]|0;if((d|0)==0){m=l}else{g$[c[(c[d>>2]|0)+4>>2]&1023](d);m=c[b>>2]|0}d=c[m+12>>2]|0;if((d|0)==0){n=m}else{g$[c[(c[d>>2]|0)+4>>2]&1023](d);n=c[b>>2]|0}if((n|0)==0){c[b>>2]=0;return}KU(n);c[b>>2]=0;return}function jt(a){a=a|0;return+(+g[a+4>>2])}function ju(b){b=b|0;return(a[(c[(c[b+36>>2]|0)+16>>2]|0)+20|0]&1)!=0|0}function jv(b,d){b=b|0;d=d|0;var e=0;if(d){e=a[b+488|0]&1^1}else{e=0}a[(c[(c[b+36>>2]|0)+16>>2]|0)+20|0]=e;return}function jw(b){b=b|0;a[(c[(c[b+36>>2]|0)+16>>2]|0)+20|0]=0;a[b+488|0]=1;return}function jx(b,c){b=b|0;c=c|0;jr(b,c);a[b+488|0]=0;return}function jy(d,e){d=d|0;e=+e;var f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0.0,s=0.0,t=0.0,u=0,v=0,w=0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0,I=0;f=i;i=i+136|0;h=f|0;j=f+16|0;k=f+32|0;l=f+48|0;if((a[d+12|0]&1)!=0){m=d+4|0;g[m>>2]=+g[m>>2]*.8+ +((a[d+16|0]&1)-(a[d+15|0]&1)|0)*.20000000298023224}m=d+36|0;n=c[(c[m>>2]|0)+12>>2]|0;o=d+13|0;p=a[o]&1;q=a[d+14|0]|0;a[n+737|0]=p<<24>>24==0?q&1:1;g[n+680>>2]=+(p&255|0)*30.0- +(q&1|0)*.009999999776482582;g[n+684>>2]=4.0;n=d+32|0;q=c[(c[n>>2]|0)+12>>2]|0;r=+g[q+324>>2];s=+g[q+328>>2];t=+g[q+332>>2];q=d+8|0;do{if((a[o]&1)==0){if(+c2(+(+g[q>>2]),3.1415927410125732)<=-.20000000298023224){u=6;break}if(+c2(+(+g[q>>2]),3.1415927410125732)>=.20000000298023224){u=6}}else{u=6}}while(0);if((u|0)==6){g[q>>2]=+g[q>>2]+ +W(r*r+s*s+t*t)*.004999999888241291}q=d+40|0;u=c[n>>2]|0;o=c[u>>2]|0;p=q;v=o+4|0;c[p>>2]=c[v>>2];c[p+4>>2]=c[v+4>>2];c[p+8>>2]=c[v+8>>2];c[p+12>>2]=c[v+12>>2];v=d+56|0;p=o+20|0;c[v>>2]=c[p>>2];c[v+4>>2]=c[p+4>>2];c[v+8>>2]=c[p+8>>2];c[v+12>>2]=c[p+12>>2];p=d+72|0;v=o+36|0;c[p>>2]=c[v>>2];c[p+4>>2]=c[v+4>>2];c[p+8>>2]=c[v+8>>2];c[p+12>>2]=c[v+12>>2];v=d+88|0;p=o+52|0;c[v>>2]=c[p>>2];c[v+4>>2]=c[p+4>>2];c[v+8>>2]=c[p+8>>2];c[v+12>>2]=c[p+12>>2];p=d+104|0;o=p;w=(c[u>>2]|0)+308|0;c[o>>2]=c[w>>2];c[o+4>>2]=c[w+4>>2];c[o+8>>2]=c[w+8>>2];c[o+12>>2]=c[w+12>>2];t=+g[p>>2];s=+g[d+108>>2];r=+g[d+112>>2];x=+W(t*t+s*s+r*r);r=+g[d+48>>2]+(+g[q>>2]*0.0+ +g[d+44>>2]*0.0);s=+g[d+80>>2]+(+g[d+72>>2]*0.0+ +g[d+76>>2]*0.0);b[h+4>>1]=1;b[h+6>>1]=-1;c[h>>2]=32360;q=h+8|0;a[q]=0;p=h+12|0;g[p>>2]=5.0;w=jI()|0;o=h|0;jQ(w,c[(c[n>>2]|0)+8>>2]|0,o);w=a[q]&1;a[d+17|0]=w;h=d+20|0;if(w<<24>>24==0){y=+g[h>>2]+e}else{y=0.0}g[h>>2]=y;g[p>>2]=5.0;p=jI()|0;jQ(p,c[(c[n>>2]|0)+12>>2]|0,o);o=a[q]&1;a[d+18|0]=o;q=d+24|0;if(o<<24>>24==0){z=+g[q>>2]+e}else{z=0.0}g[q>>2]=z;q=j;c[q>>2]=c[v>>2];c[q+4>>2]=c[v+4>>2];c[q+8>>2]=c[v+8>>2];c[q+12>>2]=c[v+12>>2];z=+g[j+4>>2]+-5.0;e=+g[j+8>>2]+0.0;g[k>>2]=+g[j>>2]+0.0;g[k+4>>2]=z;g[k+8>>2]=e;g[k+12>>2]=0.0;g[l+4>>2]=1.0;v=l+8|0;c[v>>2]=0;b[l+12>>1]=1;b[l+14>>1]=-1;c[l+16>>2]=0;c[l>>2]=30592;o=l+20|0;c[o>>2]=c[q>>2];c[o+4>>2]=c[q+4>>2];c[o+8>>2]=c[q+8>>2];c[o+12>>2]=c[q+12>>2];q=l+36|0;o=k;c[q>>2]=c[o>>2];c[q+4>>2]=c[o+4>>2];c[q+8>>2]=c[o+8>>2];c[q+12>>2]=c[o+12>>2];o=c[(jI()|0)+4>>2]|0;hM[c[(c[o>>2]|0)+32>>2]&255](o|0,j,k,l|0);k=(c[v>>2]|0)!=0;a[d+28|0]=k&1;if(k){A=s*+g[l+52>>2]-r*+g[l+60>>2]}else{A=0.0}r=+bL(+0.0,+(1.0-x/30.0));l=d+480|0;x=+g[l>>2]*.8999999761581421;s=+g[d+4>>2];e=x+ +bL(+r,+.20000000298023224)*s*.10000000149011612*.7853981852531433;g[l>>2]=e;l=d+484|0;g[l>>2]=+g[l>>2]*.949999988079071-(1.0-r)*(A+s)*.05000000074505806;k=c[c[m>>2]>>2]|0;if((a[d+488|0]&1)==0){s=+c2(+e,6.2831854820251465);do{if(s<-3.1415927410125732){B=s+6.2831854820251465}else{if(s<=3.1415927410125732){B=s;break}B=s+ -6.2831854820251465}}while(0);s=+c2(+e,6.2831854820251465);do{if(s<-3.1415927410125732){C=s+6.2831854820251465}else{if(s<=3.1415927410125732){C=s;break}C=s+ -6.2831854820251465}}while(0);g[k+932>>2]=B;g[k+936>>2]=C}else{C=+c2(+1.0,6.2831854820251465);do{if(C<-3.1415927410125732){D=C+6.2831854820251465}else{if(C<=3.1415927410125732){D=C;break}D=C+ -6.2831854820251465}}while(0);C=+c2(+0.0,6.2831854820251465);do{if(C<-3.1415927410125732){E=C+6.2831854820251465}else{if(C<=3.1415927410125732){E=C;break}E=C+ -6.2831854820251465}}while(0);g[k+932>>2]=D;g[k+936>>2]=E}k=c[(c[m>>2]|0)+16>>2]|0;E=+g[l>>2];D=+c2(+E,6.2831854820251465);do{if(D<-3.1415927410125732){F=D+6.2831854820251465}else{if(D<=3.1415927410125732){F=D;break}F=D+ -6.2831854820251465}}while(0);D=+c2(+E,6.2831854820251465);if(D<-3.1415927410125732){G=D+6.2831854820251465;H=k+996|0;g[H>>2]=F;I=k+1e3|0;g[I>>2]=G;i=f;return}if(D<=3.1415927410125732){G=D;H=k+996|0;g[H>>2]=F;I=k+1e3|0;g[I>>2]=G;i=f;return}G=D+ -6.2831854820251465;H=k+996|0;g[H>>2]=F;I=k+1e3|0;g[I>>2]=G;i=f;return}function jz(a,b){a=a|0;b=+b;var d=0,e=0,f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0,I=0.0,J=0.0,K=0.0,L=0.0,M=0.0,N=0.0,O=0.0,P=0.0,Q=0.0,R=0.0,S=0.0,T=0.0,U=0.0,V=0.0,W=0.0,X=0.0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0,ai=0,aj=0;d=i;i=i+448|0;e=d|0;f=d+64|0;h=d+128|0;j=d+192|0;k=d+256|0;l=d+320|0;m=d+384|0;jy(a,b);n=c[a+32>>2]|0;o=c[n>>2]|0;b=+g[o+4>>2];p=+g[o+20>>2];q=+g[o+36>>2];r=+g[o+8>>2];s=+g[o+24>>2];t=+g[o+40>>2];u=+g[o+12>>2];v=+g[o+28>>2];w=+g[o+44>>2];x=+g[o+52>>2];y=+g[o+56>>2];z=+g[o+60>>2];o=c[n+8>>2]|0;A=+g[o+4>>2];B=+g[o+20>>2];C=+g[o+36>>2];D=+g[o+8>>2];E=+g[o+24>>2];F=+g[o+40>>2];G=+g[o+12>>2];H=+g[o+28>>2];I=+g[o+44>>2];J=+g[o+52>>2];K=+g[o+56>>2];L=+g[o+60>>2];o=c[n+12>>2]|0;M=+g[o+4>>2];N=+g[o+20>>2];O=+g[o+36>>2];P=+g[o+8>>2];Q=+g[o+24>>2];R=+g[o+40>>2];S=+g[o+12>>2];T=+g[o+28>>2];U=+g[o+44>>2];V=+g[o+52>>2];W=+g[o+56>>2];X=+g[o+60>>2];o=c[n+4>>2]|0;n=e|0;g[n>>2]=+g[o+4>>2];Y=e+4|0;g[Y>>2]=+g[o+20>>2];Z=e+8|0;g[Z>>2]=+g[o+36>>2];_=e+12|0;g[_>>2]=0.0;$=e+16|0;g[$>>2]=+g[o+8>>2];aa=e+20|0;g[aa>>2]=+g[o+24>>2];ab=e+24|0;g[ab>>2]=+g[o+40>>2];ac=e+28|0;g[ac>>2]=0.0;ad=e+32|0;g[ad>>2]=+g[o+12>>2];ae=e+36|0;g[ae>>2]=+g[o+28>>2];af=e+40|0;g[af>>2]=+g[o+44>>2];ag=e+44|0;g[ag>>2]=0.0;ah=e+48|0;g[ah>>2]=+g[o+52>>2];ai=e+52|0;g[ai>>2]=+g[o+56>>2];aj=e+56|0;g[aj>>2]=+g[o+60>>2];o=e+60|0;g[o>>2]=1.0;g[h>>2]=1.0;K1(h+4|0,0,16)|0;g[h+20>>2]=1.0;K1(h+24|0,0,16)|0;g[h+40>>2]=1.0;g[h+44>>2]=0.0;g[h+48>>2]=0.0;g[h+52>>2]=-2.799999952316284;g[h+56>>2]=.6499999761581421;g[h+60>>2]=1.0;lp(j,1.885796308517456);ls(f,h,j);jd(e,f)|0;f=a+248|0;e=c[f>>2]|0;g[e>>2]=b;g[e+4>>2]=p;g[e+8>>2]=q;g[e+12>>2]=0.0;g[e+16>>2]=r;g[e+20>>2]=s;g[e+24>>2]=t;g[e+28>>2]=0.0;g[e+32>>2]=u;g[e+36>>2]=v;g[e+40>>2]=w;g[e+44>>2]=0.0;g[e+48>>2]=x;g[e+52>>2]=y;g[e+56>>2]=z;g[e+60>>2]=1.0;e=a+252|0;jd(c[f>>2]|0,c[e>>2]|0)|0;j=c[f>>2]|0;g[j+64>>2]=+g[n>>2];g[j+68>>2]=+g[Y>>2];g[j+72>>2]=+g[Z>>2];g[j+76>>2]=+g[_>>2];g[j+80>>2]=+g[$>>2];g[j+84>>2]=+g[aa>>2];g[j+88>>2]=+g[ab>>2];g[j+92>>2]=+g[ac>>2];g[j+96>>2]=+g[ad>>2];g[j+100>>2]=+g[ae>>2];g[j+104>>2]=+g[af>>2];g[j+108>>2]=+g[ag>>2];g[j+112>>2]=+g[ah>>2];g[j+116>>2]=+g[ai>>2];g[j+120>>2]=+g[aj>>2];g[j+124>>2]=+g[o>>2];jd((c[f>>2]|0)+64|0,(c[e>>2]|0)+64|0)|0;o=c[f>>2]|0;g[o+128>>2]=A;g[o+132>>2]=B;g[o+136>>2]=C;g[o+140>>2]=0.0;g[o+144>>2]=D;g[o+148>>2]=E;g[o+152>>2]=F;g[o+156>>2]=0.0;g[o+160>>2]=G;g[o+164>>2]=H;g[o+168>>2]=I;g[o+172>>2]=0.0;g[o+176>>2]=J;g[o+180>>2]=K;g[o+184>>2]=L;g[o+188>>2]=1.0;jd((c[f>>2]|0)+128|0,(c[e>>2]|0)+128|0)|0;o=c[f>>2]|0;g[o+192>>2]=M;g[o+196>>2]=N;g[o+200>>2]=O;g[o+204>>2]=0.0;g[o+208>>2]=P;g[o+212>>2]=Q;g[o+216>>2]=R;g[o+220>>2]=0.0;g[o+224>>2]=S;g[o+228>>2]=T;g[o+232>>2]=U;g[o+236>>2]=0.0;g[o+240>>2]=V;g[o+244>>2]=W;g[o+248>>2]=X;g[o+252>>2]=1.0;jd((c[f>>2]|0)+192|0,(c[e>>2]|0)+192|0)|0;o=c[f>>2]|0;g[o+256>>2]=+g[o>>2];g[o+260>>2]=+g[o+4>>2];g[o+264>>2]=+g[o+8>>2];g[o+268>>2]=+g[o+12>>2];g[o+272>>2]=+g[o+16>>2];g[o+276>>2]=+g[o+20>>2];g[o+280>>2]=+g[o+24>>2];g[o+284>>2]=+g[o+28>>2];g[o+288>>2]=+g[o+32>>2];g[o+292>>2]=+g[o+36>>2];g[o+296>>2]=+g[o+40>>2];g[o+300>>2]=+g[o+44>>2];g[o+304>>2]=+g[o+48>>2];g[o+308>>2]=+g[o+52>>2];g[o+312>>2]=+g[o+56>>2];g[o+316>>2]=+g[o+60>>2];o=a+256|0;jd((c[f>>2]|0)+256|0,(c[o>>2]|0)+256|0)|0;j=(c[f>>2]|0)+256|0;aj=a+8|0;lp(k,-0.0- +g[aj>>2]);jd(j,k)|0;jd((c[f>>2]|0)+256|0,(c[e>>2]|0)+256|0)|0;k=c[f>>2]|0;g[k+320>>2]=+g[k+256>>2];g[k+324>>2]=+g[k+260>>2];g[k+328>>2]=+g[k+264>>2];g[k+332>>2]=+g[k+268>>2];g[k+336>>2]=+g[k+272>>2];g[k+340>>2]=+g[k+276>>2];g[k+344>>2]=+g[k+280>>2];g[k+348>>2]=+g[k+284>>2];g[k+352>>2]=+g[k+288>>2];g[k+356>>2]=+g[k+292>>2];g[k+360>>2]=+g[k+296>>2];g[k+364>>2]=+g[k+300>>2];g[k+368>>2]=+g[k+304>>2];g[k+372>>2]=+g[k+308>>2];g[k+376>>2]=+g[k+312>>2];g[k+380>>2]=+g[k+316>>2];jd((c[f>>2]|0)+320|0,(c[o>>2]|0)+320|0)|0;k=(c[f>>2]|0)+320|0;lp(l,+g[aj>>2]);jd(k,l)|0;jd((c[f>>2]|0)+320|0,(c[e>>2]|0)+320|0)|0;l=c[f>>2]|0;g[l+384>>2]=+g[l+256>>2];g[l+388>>2]=+g[l+260>>2];g[l+392>>2]=+g[l+264>>2];g[l+396>>2]=+g[l+268>>2];g[l+400>>2]=+g[l+272>>2];g[l+404>>2]=+g[l+276>>2];g[l+408>>2]=+g[l+280>>2];g[l+412>>2]=+g[l+284>>2];g[l+416>>2]=+g[l+288>>2];g[l+420>>2]=+g[l+292>>2];g[l+424>>2]=+g[l+296>>2];g[l+428>>2]=+g[l+300>>2];g[l+432>>2]=+g[l+304>>2];g[l+436>>2]=+g[l+308>>2];g[l+440>>2]=+g[l+312>>2];g[l+444>>2]=+g[l+316>>2];jd((c[f>>2]|0)+384|0,(c[o>>2]|0)+384|0)|0;o=(c[f>>2]|0)+384|0;lp(m,+g[aj>>2]);jd(o,m)|0;jd((c[f>>2]|0)+384|0,(c[e>>2]|0)+384|0)|0;i=d;return}function jA(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;e=i;i=i+128|0;f=e|0;g=e+64|0;ls(f,b,d);K2(g|0,d|0,64)|0;dJ(c[12312]|0);dJ(c[12312]|0);ej(c[12320]|0,+.949999988079071);ej(c[12321]|0,17.999996185302734);d=c[12316]|0;dy(d|0,3,c[(jI()|0)+28>>2]|0);gQ(c[12322]|0,1,0,f|0);gQ(c[12314]|0,1,0,g|0);d6(3553,c[a+344>>2]|0);jH(a|0,49192,a+220|0);i=e;return}function jB(a,b){a=a|0;b=b|0;dJ(c[12342]|0);gQ(c[12352]|0,1,0,b|0);jH(a|0,49312,a+348|0);return}function jC(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0;b=i;i=i+16|0;f=b|0;g=ib()|0;if((a[d]&1)==0){h=d+1|0}else{h=c[d+8>>2]|0}ic(f,g,h);if((kO(e,c[f+4>>2]|0,c[f>>2]|0,0,0,0,0)|0)!=0){j=0;i=b;return j|0}id(ib()|0,f);j=1;i=b;return j|0}function jD(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0;a=i;d=c[b+8>>2]|0;e=b+76|0;g0[c[12430]&511](1,e);g$[c[12434]&1023](c[e>>2]|0);e1(0);e1(1);e1(2);e=b+80|0;fk(1,e|0);f=d+44|0;g=ag(c[f>>2]|0,c[d>>2]|0)|0;gi(34962,c[e>>2]|0);gk(34962,g|0,c[d+152>>2]|0,35044);g=b+84|0;c[g>>2]=0;b=d+24|0;if((c[b>>2]|0)!=0){fk(1,g|0);e=(k_(d)|0)<<1;gi(34963,c[g>>2]|0);gk(34963,e|0,c[b>>2]|0,35044)}da(0,3,5126,0,c[f>>2]|0,c[d+48>>2]|0);da(1,3,5126,0,c[d+60>>2]|0,c[d+64>>2]|0);f=c[d+100>>2]|0;da(2,2,5126,0,c[f+8>>2]|0,c[f+12>>2]|0);f=gl()|0;if((f|0)==1282){h=13680}else if((f|0)==1280){h=15760}else if((f|0)==1281){h=14616}else if((f|0)==0){j=1;i=a;return j|0}else{h=13240}bX(24496,(f=i,i=i+8|0,c[f>>2]=h,f)|0)|0;i=f;j=0;i=a;return j|0}function jE(a,b,d){a=a|0;b=b|0;d=d|0;g$[c[12434]&1023](c[d+76>>2]|0);eD(4,(c[(c[d+8>>2]|0)+4>>2]|0)*3|0|0,5123,0);return}function jF(a,b){a=a|0;b=b|0;return jG(0,b,1)|0}function jG(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0;a=i;e=c[b+20>>2]|0;f=b+112|0;g0[c[12430]&511](1,f);g$[c[12434]&1023](c[f>>2]|0);e1(0);if(!d){e1(1);e1(2)}e1(4);e1(5);f=b+116|0;fk(1,f|0);g=e+44|0;h=ag(c[g>>2]|0,c[e>>2]|0)|0;gi(34962,c[f>>2]|0);gk(34962,h|0,c[e+152>>2]|0,35044);h=b+120|0;c[h>>2]=0;b=e+24|0;if((c[b>>2]|0)!=0){fk(1,h|0);f=(k_(e)|0)<<1;gi(34963,c[h>>2]|0);gk(34963,f|0,c[b>>2]|0,35044)}da(0,3,5126,0,c[g>>2]|0,c[e+48>>2]|0);if(!d){da(1,3,5126,0,c[e+60>>2]|0,c[e+64>>2]|0);d=c[e+100>>2]|0;da(2,2,5126,0,c[d+8>>2]|0,c[d+12>>2]|0)}da(4,c[e+124>>2]|0,5121,0,c[e+128>>2]|0,c[e+132>>2]|0);da(5,c[e+140>>2]|0,5121,1,c[e+144>>2]|0,c[e+148>>2]|0);e=gl()|0;if((e|0)==1280){j=15760}else if((e|0)==0){k=1;i=a;return k|0}else if((e|0)==1282){j=13680}else if((e|0)==1281){j=14616}else{j=13240}bX(24952,(e=i,i=i+8|0,c[e>>2]=j,e)|0)|0;i=e;k=0;i=a;return k|0}function jH(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0.0,H=0.0,I=0.0,J=0.0,K=0.0,L=0.0,M=0.0,N=0.0,O=0.0,P=0.0,Q=0.0,R=0.0,S=0.0,T=0.0,U=0,V=0;a=i;i=i+1440|0;e=a|0;f=a+896|0;h=a+1400|0;j=c[d+20>>2]|0;g$[c[12434]&1023](c[d+112>>2]|0);k=j+172|0;if((c[k>>2]|0)<=0){i=a;return}l=b+100|0;m=j+124|0;n=d+24|0;o=b+104|0;p=e|0;q=b+108|0;b=f|0;r=j+164|0;s=j+4|0;j=d+28|0;d=h|0;t=h+16|0;u=h+32|0;v=h+28|0;w=h+20|0;x=h+12|0;y=h+4|0;z=h+8|0;A=h+24|0;B=0;while(1){el(c[l>>2]|0,c[m>>2]|0);C=c[n>>2]|0;if((C|0)>0){D=0;do{E=e+(D<<6)|0;F=c[j>>2]|0;g[E>>2]=+g[F+(D<<6)>>2];g[e+(D<<6)+4>>2]=+g[F+(D<<6)+4>>2];g[e+(D<<6)+8>>2]=+g[F+(D<<6)+8>>2];g[e+(D<<6)+12>>2]=+g[F+(D<<6)+12>>2];g[e+(D<<6)+16>>2]=+g[F+(D<<6)+16>>2];g[e+(D<<6)+20>>2]=+g[F+(D<<6)+20>>2];g[e+(D<<6)+24>>2]=+g[F+(D<<6)+24>>2];g[e+(D<<6)+28>>2]=+g[F+(D<<6)+28>>2];g[e+(D<<6)+32>>2]=+g[F+(D<<6)+32>>2];g[e+(D<<6)+36>>2]=+g[F+(D<<6)+36>>2];g[e+(D<<6)+40>>2]=+g[F+(D<<6)+40>>2];g[e+(D<<6)+44>>2]=+g[F+(D<<6)+44>>2];g[e+(D<<6)+48>>2]=+g[F+(D<<6)+48>>2];g[e+(D<<6)+52>>2]=+g[F+(D<<6)+52>>2];g[e+(D<<6)+56>>2]=+g[F+(D<<6)+56>>2];g[e+(D<<6)+60>>2]=+g[F+(D<<6)+60>>2];lo(h,E);G=+g[d>>2];H=+g[t>>2];I=+g[u>>2];J=+g[v>>2];K=+g[w>>2];L=H*I-J*K;M=+g[x>>2];N=+g[y>>2];O=I*N;P=+g[z>>2];Q=J*P;R=+g[A>>2];S=K*N-H*P;T=1.0/(R*S+(G*L-M*(O-Q)));g[f+(D*36|0)>>2]=L*T;g[f+(D*36|0)+4>>2]=T*(K*R-I*M);g[f+(D*36|0)+8>>2]=T*(J*M-H*R);g[f+(D*36|0)+12>>2]=T*(Q-O);g[f+(D*36|0)+16>>2]=T*(G*I-P*R);g[f+(D*36|0)+20>>2]=T*(N*R-G*J);g[f+(D*36|0)+24>>2]=T*S;g[f+(D*36|0)+28>>2]=T*(M*P-G*K);g[f+(D*36|0)+32>>2]=(G*H-M*N)*T;D=D+1|0;}while((D|0)<(C|0))}gQ(c[o>>2]|0,C|0,0,p|0);e7(c[q>>2]|0,C|0,0,b|0);D=B+1|0;if((D|0)<(c[k>>2]|0)){E=c[r>>2]|0;F=c[E+(B<<2)>>2]|0;U=(c[E+(D<<2)>>2]|0)-F|0;V=F}else{F=c[(c[r>>2]|0)+(B<<2)>>2]|0;U=(c[s>>2]|0)-F|0;V=F}eD(4,U*3|0|0,5123,V*6|0|0);if((D|0)<(c[k>>2]|0)){B=D}else{break}}i=a;return}function jI(){var b=0,d=0,e=0,f=0;b=c[13792]|0;if((b|0)!=0){d=b;return d|0}b=KS(212)|0;e=b;c[b>>2]=30760;a[b+24|0]=1;c[b+20>>2]=0;c[b+12>>2]=0;c[b+16>>2]=0;c[b+28>>2]=0;c[b+32>>2]=0;c[b+36>>2]=0;f=b+56|0;K1(f|0,0,64)|0;g[b+192>>2]=999999984306749400.0;a[b+40|0]=0;c[b+44>>2]=0;K1(f|0,0,16)|0;g[b+72>>2]=8.0;g[b+76>>2]=-16.0;a[b+52|0]=0;a[b+53|0]=1;c[13792]=e;jJ(e);d=c[13792]|0;return d|0}function jJ(b){b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;e=d|0;jK(b);f=c[b+4>>2]|0;c[f+92>>2]=36;c[f+96>>2]=b;K1(e|0,0,16)|0;f=KS(188)|0;iK(f,e);c[b+44>>2]=f;f=KS(216)|0;jj(f);c[b+48>>2]=f;a[b+40|0]=1;i=d;return}function jK(a){a=a|0;var b=0,d=0,e=0,f=0,h=0,j=0,k=0;b=i;i=i+80|0;d=b|0;e=b+32|0;f=b+48|0;h=b+64|0;j=KS(96)|0;k=j;c[d>>2]=0;c[d+4>>2]=0;c[d+8>>2]=0;c[d+12>>2]=4096;c[d+16>>2]=4096;c[d+20>>2]=0;c[d+24>>2]=0;c[d+28>>2]=1;tY(k,d);d=a+208|0;c[d>>2]=k;k=KS(5260)|0;ru(k,j);j=a+200|0;c[j>>2]=k;g[e>>2]=-1.0e3;g[e+4>>2]=-1.0e3;g[e+8>>2]=-1.0e3;g[e+12>>2]=0.0;g[f>>2]=1.0e3;g[f+4>>2]=1.0e3;g[f+8>>2]=1.0e3;g[f+12>>2]=0.0;k=zv(116,16)|0;o$(k,e,f,16384,0,0);f=a+196|0;c[f>>2]=k;k=zv(192,16)|0;xG(k);e=a+204|0;c[e>>2]=k;k=zv(324,16)|0;yf(k,c[j>>2]|0,c[f>>2]|0,c[e>>2]|0,c[d>>2]|0);d=a+4|0;c[d>>2]=k;k=j$()|0;g0[c[(c[k>>2]|0)+44>>2]&511](k,0);k=c[d>>2]|0;a=c[(c[k>>2]|0)+16>>2]|0;e=j$()|0;g0[a&511](k|0,e);e=c[d>>2]|0;d=c[(c[e>>2]|0)+72>>2]|0;g[h>>2]=0.0;g[h+4>>2]=-14.729999542236328;g[h+8>>2]=0.0;g[h+12>>2]=0.0;g0[d&511](e,h);i=b;return}function jL(a,b){a=a|0;b=+b;return}function jM(b,d,e,f){b=b|0;d=+d;e=e|0;f=f|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;h=i;i=i+160|0;j=h|0;k=h+16|0;K1(j|0,0,16)|0;if(d!=0.0){hh[c[(c[f>>2]|0)+32>>2]&15](f,d,j)}l=zv(200,16)|0;do{if((a[55536]|0)==0){if((bN(55536)|0)==0){break}do{if((a[55544]|0)==0){if((bN(55544)|0)==0){break}g[13430]=1.0;K1(53724,0,16)|0;g[13435]=1.0;K1(53744,0,16)|0;g[13440]=1.0;g[13441]=0.0}}while(0);c[13414]=c[13430];c[13415]=c[13431];c[13416]=c[13432];c[13417]=c[13433];c[13418]=c[13434];c[13419]=c[13435];c[13420]=c[13436];c[13421]=c[13437];c[13422]=c[13438];c[13423]=c[13439];c[13424]=c[13440];c[13425]=c[13441];K1(53704,0,16)|0}}while(0);c[l>>2]=33e3;m=l+4|0;n=e;c[m>>2]=c[n>>2];c[m+4>>2]=c[n+4>>2];c[m+8>>2]=c[n+8>>2];c[m+12>>2]=c[n+12>>2];m=l+20|0;o=e+16|0;c[m>>2]=c[o>>2];c[m+4>>2]=c[o+4>>2];c[m+8>>2]=c[o+8>>2];c[m+12>>2]=c[o+12>>2];m=l+36|0;p=e+32|0;c[m>>2]=c[p>>2];c[m+4>>2]=c[p+4>>2];c[m+8>>2]=c[p+8>>2];c[m+12>>2]=c[p+12>>2];m=l+52|0;q=e+48|0;c[m>>2]=c[q>>2];c[m+4>>2]=c[q+4>>2];c[m+8>>2]=c[q+8>>2];c[m+12>>2]=c[q+12>>2];m=l+68|0;c[m>>2]=c[13414];c[m+4>>2]=c[13415];c[m+8>>2]=c[13416];c[m+12>>2]=c[13417];m=l+84|0;c[m>>2]=c[13418];c[m+4>>2]=c[13419];c[m+8>>2]=c[13420];c[m+12>>2]=c[13421];m=l+100|0;c[m>>2]=c[13422];c[m+4>>2]=c[13423];c[m+8>>2]=c[13424];c[m+12>>2]=c[13425];m=l+116|0;c[m>>2]=c[13426];c[m+4>>2]=c[13427];c[m+8>>2]=c[13428];c[m+12>>2]=c[13429];m=l+132|0;c[m>>2]=c[n>>2];c[m+4>>2]=c[n+4>>2];c[m+8>>2]=c[n+8>>2];c[m+12>>2]=c[n+12>>2];n=l+148|0;c[n>>2]=c[o>>2];c[n+4>>2]=c[o+4>>2];c[n+8>>2]=c[o+8>>2];c[n+12>>2]=c[o+12>>2];o=l+164|0;c[o>>2]=c[p>>2];c[o+4>>2]=c[p+4>>2];c[o+8>>2]=c[p+8>>2];c[o+12>>2]=c[p+12>>2];p=l+180|0;c[p>>2]=c[q>>2];c[p+4>>2]=c[q+4>>2];c[p+8>>2]=c[q+8>>2];c[p+12>>2]=c[q+12>>2];c[l+196>>2]=0;g[k>>2]=d;c[k+4>>2]=l;c[k+72>>2]=f;f=k+76|0;l=j;c[f>>2]=c[l>>2];c[f+4>>2]=c[l+4>>2];c[f+8>>2]=c[l+8>>2];c[f+12>>2]=c[l+12>>2];g[k+92>>2]=0.0;g[k+96>>2]=0.0;g[k+100>>2]=.5;g[k+104>>2]=0.0;g[k+108>>2]=0.0;g[k+112>>2]=.800000011920929;g[k+116>>2]=1.0;a[k+120|0]=0;g[k+124>>2]=.004999999888241291;g[k+128>>2]=.009999999776482582;g[k+132>>2]=.009999999776482582;g[k+136>>2]=.009999999776482582;g[k+8>>2]=1.0;K1(k+12|0,0,16)|0;g[k+28>>2]=1.0;K1(k+32|0,0,16)|0;g[k+48>>2]=1.0;K1(k+52|0,0,20)|0;l=zv(612,16)|0;f=l;y9(f,k);g[l+184>>2]=+g[b+192>>2];l=c[b+4>>2]|0;g0[c[(c[l>>2]|0)+84>>2]&511](l,f);i=h;return f|0}function jN(a,b,d){a=a|0;b=b|0;d=d|0;iL(c[a+44>>2]|0,b,d);return}function jO(b,d){b=b|0;d=d|0;var e=0,f=0,g=0;if((a[b+40|0]&1)==0){return}e=d&65535;if((e|0)==51){iN(c[b+44>>2]|0);return}else if((e|0)==114){a[b+52|0]=1;return}else if((e|0)==49){f=j$()|0;g=((g3[c[(c[f>>2]|0)+48>>2]&511](f)|0)+1|0)%3|0;f=j$()|0;g0[c[(c[f>>2]|0)+44>>2]&511](f,g);return}else if((e|0)==63232|(e|0)==63233|(e|0)==63234|(e|0)==63235){iM(c[b+44>>2]|0,d,1);return}else if((e|0)==50){d=b+53|0;a[d]=a[d]&1^1;return}else if((e|0)==52){iO(c[b+44>>2]|0);return}else{return}}function jP(b,d){b=b|0;d=d|0;if((a[b+40|0]&1)==0){return}if(((d&65535)-63232|0)>>>0>=4>>>0){return}iM(c[b+44>>2]|0,d,0);return}function jQ(a,b,d){a=a|0;b=b|0;d=d|0;sg(c[a+4>>2]|0,b|0,c[(c[a+48>>2]|0)+4>>2]|0,d);return}function jR(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0;f=i;i=i+192|0;g=b;b=i;i=i+16|0;c[b>>2]=c[g>>2];c[b+4>>2]=c[g+4>>2];c[b+8>>2]=c[g+8>>2];c[b+12>>2]=c[g+12>>2];g=d;d=i;i=i+16|0;c[d>>2]=c[g>>2];c[d+4>>2]=c[g+4>>2];c[d+8>>2]=c[g+8>>2];c[d+12>>2]=c[g+12>>2];g=f|0;h=f+64|0;j=f+128|0;k=g+48|0;l=b;c[k>>2]=c[l>>2];c[k+4>>2]=c[l+4>>2];c[k+8>>2]=c[l+8>>2];c[k+12>>2]=c[l+12>>2];l=h+48|0;k=d;c[l>>2]=c[k>>2];c[l+4>>2]=c[k+4>>2];c[l+8>>2]=c[k+8>>2];c[l+12>>2]=c[k+12>>2];k=c[a+48>>2]|0;a=k+4|0;l=c[a>>2]|0;d=j;b=l+4|0;c[d>>2]=c[b>>2];c[d+4>>2]=c[b+4>>2];c[d+8>>2]=c[b+8>>2];c[d+12>>2]=c[b+12>>2];b=j+16|0;d=l+20|0;c[b>>2]=c[d>>2];c[b+4>>2]=c[d+4>>2];c[b+8>>2]=c[d+8>>2];c[b+12>>2]=c[d+12>>2];d=j+32|0;b=l+36|0;c[d>>2]=c[b>>2];c[d+4>>2]=c[b+4>>2];c[d+8>>2]=c[b+8>>2];c[d+12>>2]=c[b+12>>2];b=j+48|0;d=l+52|0;c[b>>2]=c[d>>2];c[b+4>>2]=c[d+4>>2];c[b+8>>2]=c[d+8>>2];c[b+12>>2]=c[d+12>>2];r6(g,h,c[a>>2]|0,c[k+8>>2]|0,j,e|0);i=f;return}function jS(b){b=b|0;var d=0,e=0,f=0,h=0,j=0,k=0,l=0;d=i;i=i+32|0;e=b+52|0;if((a[e]&1)!=0){iQ(c[b+44>>2]|0);a[e]=0}e=c[13792]|0;if((e|0)==0){f=KS(212)|0;h=f;c[f>>2]=30760;a[f+24|0]=1;c[f+20>>2]=0;c[f+12>>2]=0;c[f+16>>2]=0;c[f+28>>2]=0;c[f+32>>2]=0;c[f+36>>2]=0;j=f+56|0;K1(j|0,0,64)|0;g[f+192>>2]=999999984306749400.0;a[f+40|0]=0;c[f+44>>2]=0;K1(j|0,0,16)|0;g[f+72>>2]=8.0;g[f+76>>2]=-16.0;a[f+52|0]=0;a[f+53|0]=1;c[13792]=h;jJ(h);k=c[13792]|0}else{k=e}e=c[(c[k+4>>2]|0)+76>>2]|0;hF[c[(c[e>>2]|0)+44>>2]&255](e,d|0,d+16|0);c[6652]=(c[6652]|0)-1;e=c[13792]|0;if((e|0)==0){k=KS(212)|0;h=k;c[k>>2]=30760;a[k+24|0]=1;c[k+20>>2]=0;c[k+12>>2]=0;c[k+16>>2]=0;c[k+28>>2]=0;c[k+32>>2]=0;c[k+36>>2]=0;f=k+56|0;K1(f|0,0,64)|0;g[k+192>>2]=999999984306749400.0;a[k+40|0]=0;c[k+44>>2]=0;K1(f|0,0,16)|0;g[k+72>>2]=8.0;g[k+76>>2]=-16.0;a[k+52|0]=0;a[k+53|0]=1;c[13792]=h;jJ(h);l=c[13792]|0}else{l=e}e=c[l+4>>2]|0;hB[c[(c[e>>2]|0)+52>>2]&3](e,.01666666753590107,2,.01666666753590107)|0;e=c[b+44>>2]|0;gY[c[c[e>>2]>>2]&63](e,.01666666753590107);e=c[b+48>>2]|0;gY[c[c[e>>2]>>2]&63](e,.01666666753590107);i=d;return}function jT(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,h=0,j=0;d=i;i=i+80|0;e=d|0;f=d+64|0;h=a+120+(b<<6)|0;g[h>>2]=0.0;g[a+120+(b<<6)+4>>2]=2.4142136573791504;g[a+120+(b<<6)+8>>2]=0.0;g[a+120+(b<<6)+12>>2]=0.0;g[a+120+(b<<6)+16>>2]=-2.4142136573791504;K1(a+120+(b<<6)+20|0,0,20)|0;g[a+120+(b<<6)+40>>2]=-1.076923131942749;g[a+120+(b<<6)+44>>2]=-1.0;g[a+120+(b<<6)+48>>2]=0.0;g[a+120+(b<<6)+52>>2]=0.0;g[a+120+(b<<6)+56>>2]=-20.76923179626465;g[a+120+(b<<6)+60>>2]=0.0;j=(c[a+28>>2]|0)+(b*12|0)|0;g[f>>2]=0.0;g[f+4>>2]=1.0;g[f+8>>2]=0.0;jV(e,j,a+92|0,f,1);jd(h,e)|0;iZ(c[a+44>>2]|0,h);i=d;return}function jU(b,d){b=b|0;d=d|0;var e=0,f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0.0,D=0,E=0.0,F=0,G=0.0,H=0,I=0.0,J=0,K=0,L=0.0,M=0.0,N=0.0,O=0.0,P=0.0;e=i;i=i+976|0;f=d;d=i;i=i+64|0;K2(d,f,64)|0;f=e|0;h=e+16|0;j=e+80|0;k=e+144|0;l=e+160|0;m=e+224|0;n=e+240|0;o=e+256|0;p=e+272|0;q=e+336|0;r=e+400|0;s=e+464|0;t=e+528|0;u=e+592|0;v=e+656|0;w=e+720|0;x=e+784|0;y=e+848|0;z=e+912|0;A=b+56|0;B=A|0;C=+g[B>>2]*.8999999761581421;D=b+60|0;E=+g[D>>2]*.8999999761581421;F=b+64|0;G=+g[F>>2]*.8999999761581421;H=b+44|0;iP(f,c[H>>2]|0);I=C+ +g[f>>2]*.10000000149011612;C=E+ +g[f+4>>2]*.10000000149011612;E=G+ +g[f+8>>2]*.10000000149011612;g[b+56>>2]=I;g[D>>2]=C;g[F>>2]=E;f=b+68|0;G=I- +g[f>>2];J=b+72|0;K=b+76|0;L=E- +g[K>>2];M=+W(G*G+0.0+L*L);if((a[b+53|0]&1)==0){g[m>>2]=0.0;g[m+4>>2]=8.0;g[m+8>>2]=-16.0;g[n>>2]=0.0;g[n+4>>2]=0.0;g[n+8>>2]=0.0;g[o>>2]=0.0;g[o+4>>2]=1.0;g[o+8>>2]=0.0;jV(l,m,n,o,1);g[h>>2]=+g[l>>2];g[h+4>>2]=+g[l+4>>2];g[h+8>>2]=+g[l+8>>2];g[h+12>>2]=+g[l+12>>2];g[h+16>>2]=+g[l+16>>2];g[h+20>>2]=+g[l+20>>2];g[h+24>>2]=+g[l+24>>2];g[h+28>>2]=+g[l+28>>2];g[h+32>>2]=+g[l+32>>2];g[h+36>>2]=+g[l+36>>2];g[h+40>>2]=+g[l+40>>2];g[h+44>>2]=+g[l+44>>2];g[h+48>>2]=+g[l+48>>2];g[h+52>>2]=+g[l+52>>2];g[h+56>>2]=+g[l+56>>2];g[h+60>>2]=+g[l+60>>2];lp(q,+g[b+108>>2]);lq(r,+g[b+104>>2]);ls(p,q,r);jd(h,p)|0;N=+g[B>>2]*-1.0;O=+g[D>>2]*-1.0;P=+g[F>>2]*-1.0;g[s>>2]=1.0;K1(s+4|0,0,16)|0;g[s+20>>2]=1.0;K1(s+24|0,0,16)|0;g[s+40>>2]=1.0;g[s+44>>2]=0.0;g[s+48>>2]=N;g[s+52>>2]=O;g[s+56>>2]=P;g[s+60>>2]=1.0;jd(h,s)|0}else{s=A;g[b+80>>2]=I+0.0-G/M*18.5;g[b+84>>2]=C+25.0+-20.0;g[b+88>>2]=E+0.0-L/M*18.5;A=b+92|0;p=A;c[p>>2]=c[s>>2];c[p+4>>2]=c[s+4>>2];c[p+8>>2]=c[s+8>>2];g[k>>2]=0.0;g[k+4>>2]=1.0;g[k+8>>2]=0.0;jV(j,b+80|0,A,k,1);g[h>>2]=+g[j>>2];g[h+4>>2]=+g[j+4>>2];g[h+8>>2]=+g[j+8>>2];g[h+12>>2]=+g[j+12>>2];g[h+16>>2]=+g[j+16>>2];g[h+20>>2]=+g[j+20>>2];g[h+24>>2]=+g[j+24>>2];g[h+28>>2]=+g[j+28>>2];g[h+32>>2]=+g[j+32>>2];g[h+36>>2]=+g[j+36>>2];g[h+40>>2]=+g[j+40>>2];g[h+44>>2]=+g[j+44>>2];g[h+48>>2]=+g[j+48>>2];g[h+52>>2]=+g[j+52>>2];g[h+56>>2]=+g[j+56>>2];g[h+60>>2]=+g[j+60>>2]}M=+g[B>>2];L=+g[f>>2];E=M-L;C=+g[D>>2];G=+g[J>>2];I=C-G;P=+g[F>>2];O=+g[K>>2];N=P-O;if(+W(E*E+I*I+N*N)>1.0){g[f>>2]=M*.10000000149011612+L*.8999999761581421;g[J>>2]=C*.10000000149011612+G*.8999999761581421;g[K>>2]=P*.10000000149011612+O*.8999999761581421}g[t>>2]=.5;K1(t+4|0,0,16)|0;g[t+20>>2]=.5;K1(t+24|0,0,16)|0;g[t+40>>2]=.5;g[t+44>>2]=0.0;g[t+48>>2]=.5;g[t+52>>2]=.5;g[t+56>>2]=.5;g[t+60>>2]=1.0;lt(u,h);K=v|0;ls(x,t,b+120|0);ls(w,x,u);g[v>>2]=+g[w>>2];g[v+4>>2]=+g[w+4>>2];g[v+8>>2]=+g[w+8>>2];g[v+12>>2]=+g[w+12>>2];g[v+16>>2]=+g[w+16>>2];g[v+20>>2]=+g[w+20>>2];g[v+24>>2]=+g[w+24>>2];g[v+28>>2]=+g[w+28>>2];g[v+32>>2]=+g[w+32>>2];g[v+36>>2]=+g[w+36>>2];g[v+40>>2]=+g[w+40>>2];g[v+44>>2]=+g[w+44>>2];g[v+48>>2]=+g[w+48>>2];g[v+52>>2]=+g[w+52>>2];g[v+56>>2]=+g[w+56>>2];g[v+60>>2]=+g[w+60>>2];ls(y,d,h);cw(2884);w=c[H>>2]|0;hM[c[(c[w>>2]|0)+4>>2]&255](w,d,h,K);cx(2884);w=c[b+48>>2]|0;hM[c[(c[w>>2]|0)+4>>2]&255](w,d,h,K);K=j$()|0;h=g3[c[(c[K>>2]|0)+48>>2]&511](K)|0;if((h|0)==0){i=e;return}K=j$()|0;K2(z|0,y|0,64)|0;j3(K,z);if((h|0)==1){h=c[b+4>>2]|0;g$[c[(c[h>>2]|0)+24>>2]&1023](h)}j6(j$()|0);j4(j$()|0);i=e;return}function jV(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0.0,h=0.0,i=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0;if(e){f=+g[b>>2];h=+g[b+4>>2];i=+g[b+8>>2];j=f- +g[c>>2];k=h- +g[c+4>>2];l=i- +g[c+8>>2];m=f;n=h;o=i}else{i=+g[b>>2];h=+g[b+4>>2];f=+g[b+8>>2];j=+g[c>>2]-i;k=+g[c+4>>2]-h;l=+g[c+8>>2]-f;m=i;n=h;o=f}f=+W(l*l+(k*k+j*j));h=j/f;j=k/f;k=l/f;f=+g[d+4>>2];l=+g[d+8>>2];i=k*f-j*l;p=+g[d>>2];q=h*l-k*p;l=j*p-h*f;f=+W(l*l+(i*i+q*q));p=i/f;i=q/f;q=l/f;f=j*q-k*i;l=k*p-h*q;r=h*i-j*p;s=+W(r*r+(f*f+l*l));t=f/s;f=l/s;l=r/s;g[a>>2]=p;g[a+16>>2]=i;g[a+32>>2]=q;g[a+4>>2]=t;g[a+20>>2]=f;g[a+36>>2]=l;g[a+8>>2]=h;g[a+24>>2]=j;g[a+40>>2]=k;g[a+12>>2]=0.0;g[a+28>>2]=0.0;g[a+44>>2]=0.0;s=m*-1.0;m=n*-1.0;n=o*-1.0;g[a+48>>2]=s*p+m*i+n*q+0.0;g[a+52>>2]=s*t+m*f+n*l+0.0;g[a+56>>2]=s*h+m*j+n*k+0.0;g[a+60>>2]=s*0.0+m*0.0+n*0.0+1.0;return}function jW(a){a=a|0;return}function jX(a){a=a|0;zw(a);return}function jY(a,b){a=a|0;b=b|0;var c=0.0,d=0.0,e=0.0,f=0.0,h=0.0,i=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0;c=+g[a+68>>2];d=+g[a+84>>2];e=+g[a+100>>2];f=+g[a+72>>2];h=+g[a+88>>2];i=+g[a+104>>2];j=+g[a+76>>2];k=+g[a+92>>2];l=+g[a+108>>2];m=-0.0- +g[a+116>>2];n=-0.0- +g[a+120>>2];o=-0.0- +g[a+124>>2];p=+g[a+4>>2];q=+g[a+20>>2];r=+g[a+36>>2];s=+g[a+8>>2];t=+g[a+24>>2];u=+g[a+40>>2];v=+g[a+12>>2];w=+g[a+28>>2];x=+g[a+44>>2];y=+g[a+52>>2];z=+g[a+56>>2];A=+g[a+60>>2];g[b>>2]=c*p+d*q+e*r;g[b+4>>2]=c*s+d*t+e*u;g[b+8>>2]=c*v+d*w+e*x;g[b+12>>2]=0.0;g[b+16>>2]=f*p+h*q+i*r;g[b+20>>2]=f*s+h*t+i*u;g[b+24>>2]=f*v+h*w+i*x;g[b+28>>2]=0.0;g[b+32>>2]=j*p+k*q+l*r;g[b+36>>2]=j*s+k*t+l*u;g[b+40>>2]=j*v+k*w+l*x;g[b+44>>2]=0.0;g[b+48>>2]=c*m+d*n+e*o+(c*y+d*z+e*A);g[b+52>>2]=f*m+h*n+i*o+(f*y+h*z+i*A);g[b+56>>2]=j*m+k*n+l*o+(j*y+k*z+l*A);g[b+60>>2]=0.0;return}function jZ(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+64|0;e=d|0;j_(e,b,a+68|0);b=a+4|0;f=e;c[b>>2]=c[f>>2];c[b+4>>2]=c[f+4>>2];c[b+8>>2]=c[f+8>>2];c[b+12>>2]=c[f+12>>2];f=a+20|0;b=e+16|0;c[f>>2]=c[b>>2];c[f+4>>2]=c[b+4>>2];c[f+8>>2]=c[b+8>>2];c[f+12>>2]=c[b+12>>2];b=a+36|0;f=e+32|0;c[b>>2]=c[f>>2];c[b+4>>2]=c[f+4>>2];c[b+8>>2]=c[f+8>>2];c[b+12>>2]=c[f+12>>2];f=a+52|0;a=e+48|0;c[f>>2]=c[a>>2];c[f+4>>2]=c[a+4>>2];c[f+8>>2]=c[a+8>>2];c[f+12>>2]=c[a+12>>2];i=d;return}function j_(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0,e=0.0,f=0.0,h=0.0,i=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0;d=+g[c>>2];e=+g[b>>2];f=+g[c+16>>2];h=+g[b+4>>2];i=+g[c+32>>2];j=+g[b+8>>2];k=+g[c+4>>2];l=+g[c+20>>2];m=+g[c+36>>2];n=+g[c+8>>2];o=+g[c+24>>2];p=+g[c+40>>2];q=+g[b+16>>2];r=+g[b+20>>2];s=+g[b+24>>2];t=+g[b+32>>2];u=+g[b+36>>2];v=+g[b+40>>2];w=+g[c+48>>2];x=+g[c+52>>2];y=+g[c+56>>2];z=w*e+x*h+y*j+ +g[b+48>>2];A=w*q+x*r+y*s+ +g[b+52>>2];B=w*t+x*u+y*v+ +g[b+56>>2];g[a>>2]=d*e+f*h+i*j;g[a+4>>2]=e*k+h*l+j*m;g[a+8>>2]=e*n+h*o+j*p;g[a+12>>2]=0.0;g[a+16>>2]=d*q+f*r+i*s;g[a+20>>2]=k*q+l*r+m*s;g[a+24>>2]=n*q+o*r+p*s;g[a+28>>2]=0.0;g[a+32>>2]=d*t+f*u+i*v;g[a+36>>2]=k*t+l*u+m*v;g[a+40>>2]=n*t+o*u+p*v;g[a+44>>2]=0.0;g[a+48>>2]=z;g[a+52>>2]=A;g[a+56>>2]=B;g[a+60>>2]=0.0;return}function j$(){var a=0,b=0,d=0;a=c[13818]|0;if((a|0)!=0){b=a;return b|0}a=KS(144)|0;d=a;c[a>>2]=34624;c[a+4>>2]=0;K1(a+84|0,0,24)|0;K1(a+120|0,0,24)|0;j0(d);c[13818]=d;b=d;return b|0}function j0(a){a=a|0;var b=0;b=a+72|0;g0[c[12430]&511](1,b);g$[c[12434]&1023](c[b>>2]|0);b=a+76|0;fk(1,b|0);gi(34962,c[b>>2]|0);e1(0);da(0,3,5126,0,0,0);b=a+80|0;fk(1,b|0);gi(34962,c[b>>2]|0);e1(3);da(3,3,5126,0,0,0);b=a+108|0;g0[c[12430]&511](1,b);g$[c[12434]&1023](c[b>>2]|0);b=a+112|0;fk(1,b|0);gi(34962,c[b>>2]|0);e1(0);da(0,3,5126,0,0,0);b=a+116|0;fk(1,b|0);gi(34962,c[b>>2]|0);e1(3);da(3,3,5126,0,0,0);return}function j1(a){a=a|0;j2(a);KU(a);return}function j2(a){a=a|0;var b=0,d=0,e=0,f=0;c[a>>2]=34624;b=c[a+132>>2]|0;d=b;if((b|0)!=0){e=a+136|0;f=c[e>>2]|0;if((b|0)!=(f|0)){c[e>>2]=f+(~((f-4+(-d|0)|0)>>>2)<<2)}KU(b)}b=c[a+120>>2]|0;d=b;if((b|0)!=0){f=a+124|0;e=c[f>>2]|0;if((b|0)!=(e|0)){c[f>>2]=e+(~((e-4+(-d|0)|0)>>>2)<<2)}KU(b)}b=c[a+96>>2]|0;d=b;if((b|0)!=0){e=a+100|0;f=c[e>>2]|0;if((b|0)!=(f|0)){c[e>>2]=f+(~((f-4+(-d|0)|0)>>>2)<<2)}KU(b)}b=c[a+84>>2]|0;if((b|0)==0){return}d=a+88|0;a=c[d>>2]|0;if((b|0)!=(a|0)){c[d>>2]=a+(~((a-4+(-b|0)|0)>>>2)<<2)}KU(b);return}function j3(a,b){a=a|0;b=b|0;var c=0,d=0;c=i;d=b;b=i;i=i+64|0;K2(b,d,64)|0;g[a+8>>2]=+g[b>>2];g[a+12>>2]=+g[b+4>>2];g[a+16>>2]=+g[b+8>>2];g[a+20>>2]=+g[b+12>>2];g[a+24>>2]=+g[b+16>>2];g[a+28>>2]=+g[b+20>>2];g[a+32>>2]=+g[b+24>>2];g[a+36>>2]=+g[b+28>>2];g[a+40>>2]=+g[b+32>>2];g[a+44>>2]=+g[b+36>>2];g[a+48>>2]=+g[b+40>>2];g[a+52>>2]=+g[b+44>>2];g[a+56>>2]=+g[b+48>>2];g[a+60>>2]=+g[b+52>>2];g[a+64>>2]=+g[b+56>>2];g[a+68>>2]=+g[b+60>>2];i=c;return}function j4(a){a=a|0;var b=0,d=0,e=0;b=c[a+84>>2]|0;d=a+88|0;e=c[d>>2]|0;if((b|0)!=(e|0)){c[d>>2]=e+(~((e-4+(-b|0)|0)>>>2)<<2)}b=c[a+96>>2]|0;e=a+100|0;a=c[e>>2]|0;if((b|0)==(a|0)){c[13824]=0;return}c[e>>2]=a+(~((a-4+(-b|0)|0)>>>2)<<2);c[13824]=0;return}function j5(a){a=a|0;var b=0,d=0,e=0;b=c[a+120>>2]|0;d=a+124|0;e=c[d>>2]|0;if((b|0)!=(e|0)){c[d>>2]=e+(~((e-4+(-b|0)|0)>>>2)<<2)}b=c[a+132>>2]|0;e=a+136|0;a=c[e>>2]|0;if((b|0)==(a|0)){return}c[e>>2]=a+(~((a-4+(-b|0)|0)>>>2)<<2);return}function j6(a){a=a|0;var b=0;b=c[a+4>>2]|0;if((b|0)==1){j7(a);j8(a);return}else if((b|0)==2){j8(a);return}else{return}}function j7(a){a=a|0;var b=0,d=0,e=0;g$[c[12434]&1023](c[a+72>>2]|0);dJ(c[12506]|0);gQ(c[12507]|0,1,0,a+8|0);gi(34962,c[a+76>>2]|0);b=a+88|0;d=a+84|0;e=c[d>>2]|0;gk(34962,(c[b>>2]|0)-e|0,e|0,35048);gi(34962,c[a+80>>2]|0);e=c[a+96>>2]|0;gk(34962,(c[a+100>>2]|0)-e|0,e|0,35048);b_(1,0,((c[b>>2]|0)-(c[d>>2]|0)>>2>>>0)/3|0|0);return}function j8(a){a=a|0;var b=0,d=0,e=0;g$[c[12434]&1023](c[a+108>>2]|0);dJ(c[12506]|0);gQ(c[12507]|0,1,0,a+8|0);gi(34962,c[a+112>>2]|0);b=a+124|0;d=a+120|0;e=c[d>>2]|0;gk(34962,(c[b>>2]|0)-e|0,e|0,35048);gi(34962,c[a+116>>2]|0);e=c[a+132>>2]|0;gk(34962,(c[a+136>>2]|0)-e|0,e|0,35048);b_(1,0,((c[b>>2]|0)-(c[d>>2]|0)>>2>>>0)/3|0|0);return}function j9(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0;h=a+120|0;i=b|0;j=a+124|0;k=c[j>>2]|0;l=a+128|0;if((k|0)==(c[l>>2]|0)){kv(h,i);m=c[j>>2]|0}else{if((k|0)==0){n=0}else{g[k>>2]=+g[i>>2];n=c[j>>2]|0}i=n+4|0;c[j>>2]=i;m=i}i=b+4|0;if((m|0)==(c[l>>2]|0)){kv(h,i);o=c[j>>2]|0}else{if((m|0)==0){p=0}else{g[m>>2]=+g[i>>2];p=c[j>>2]|0}i=p+4|0;c[j>>2]=i;o=i}i=b+8|0;if((o|0)==(c[l>>2]|0)){kv(h,i);q=c[j>>2]|0}else{if((o|0)==0){r=0}else{g[o>>2]=+g[i>>2];r=c[j>>2]|0}i=r+4|0;c[j>>2]=i;q=i}i=d|0;if((q|0)==(c[l>>2]|0)){kv(h,i);s=c[j>>2]|0}else{if((q|0)==0){t=0}else{g[q>>2]=+g[i>>2];t=c[j>>2]|0}i=t+4|0;c[j>>2]=i;s=i}i=d+4|0;if((s|0)==(c[l>>2]|0)){kv(h,i);u=c[j>>2]|0}else{if((s|0)==0){v=0}else{g[s>>2]=+g[i>>2];v=c[j>>2]|0}i=v+4|0;c[j>>2]=i;u=i}i=d+8|0;if((u|0)==(c[l>>2]|0)){kv(h,i)}else{if((u|0)==0){w=0}else{g[u>>2]=+g[i>>2];w=c[j>>2]|0}c[j>>2]=w+4}w=a+132|0;j=e|0;i=a+136|0;u=c[i>>2]|0;h=a+140|0;if((u|0)==(c[h>>2]|0)){kv(w,j);x=c[i>>2]|0}else{if((u|0)==0){y=0}else{g[u>>2]=+g[j>>2];y=c[i>>2]|0}j=y+4|0;c[i>>2]=j;x=j}j=e+4|0;if((x|0)==(c[h>>2]|0)){kv(w,j);z=c[i>>2]|0}else{if((x|0)==0){A=0}else{g[x>>2]=+g[j>>2];A=c[i>>2]|0}j=A+4|0;c[i>>2]=j;z=j}j=e+8|0;if((z|0)==(c[h>>2]|0)){kv(w,j);B=c[i>>2]|0}else{if((z|0)==0){C=0}else{g[z>>2]=+g[j>>2];C=c[i>>2]|0}j=C+4|0;c[i>>2]=j;B=j}j=f|0;if((B|0)==(c[h>>2]|0)){kv(w,j);D=c[i>>2]|0}else{if((B|0)==0){E=0}else{g[B>>2]=+g[j>>2];E=c[i>>2]|0}j=E+4|0;c[i>>2]=j;D=j}j=f+4|0;if((D|0)==(c[h>>2]|0)){kv(w,j);F=c[i>>2]|0}else{if((D|0)==0){G=0}else{g[D>>2]=+g[j>>2];G=c[i>>2]|0}j=G+4|0;c[i>>2]=j;F=j}j=f+8|0;if((F|0)==(c[h>>2]|0)){kv(w,j);return}if((F|0)==0){H=0}else{g[F>>2]=+g[j>>2];H=c[i>>2]|0}c[i>>2]=H+4;return}function ka(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;h=a+84|0;i=b|0;j=a+88|0;k=c[j>>2]|0;l=a+92|0;if((k|0)==(c[l>>2]|0)){kv(h,i);m=c[j>>2]|0}else{if((k|0)==0){n=0}else{g[k>>2]=+g[i>>2];n=c[j>>2]|0}i=n+4|0;c[j>>2]=i;m=i}i=b+4|0;if((m|0)==(c[l>>2]|0)){kv(h,i);o=c[j>>2]|0}else{if((m|0)==0){p=0}else{g[m>>2]=+g[i>>2];p=c[j>>2]|0}i=p+4|0;c[j>>2]=i;o=i}i=b+8|0;if((o|0)==(c[l>>2]|0)){kv(h,i);q=c[j>>2]|0}else{if((o|0)==0){r=0}else{g[o>>2]=+g[i>>2];r=c[j>>2]|0}i=r+4|0;c[j>>2]=i;q=i}i=d|0;if((q|0)==(c[l>>2]|0)){kv(h,i);s=c[j>>2]|0}else{if((q|0)==0){t=0}else{g[q>>2]=+g[i>>2];t=c[j>>2]|0}i=t+4|0;c[j>>2]=i;s=i}i=d+4|0;if((s|0)==(c[l>>2]|0)){kv(h,i);u=c[j>>2]|0}else{if((s|0)==0){v=0}else{g[s>>2]=+g[i>>2];v=c[j>>2]|0}i=v+4|0;c[j>>2]=i;u=i}i=d+8|0;if((u|0)==(c[l>>2]|0)){kv(h,i)}else{if((u|0)==0){w=0}else{g[u>>2]=+g[i>>2];w=c[j>>2]|0}c[j>>2]=w+4}w=a+96|0;j=e|0;i=a+100|0;u=c[i>>2]|0;h=a+104|0;if((u|0)==(c[h>>2]|0)){kv(w,j);x=c[i>>2]|0}else{if((u|0)==0){y=0}else{g[u>>2]=+g[j>>2];y=c[i>>2]|0}j=y+4|0;c[i>>2]=j;x=j}j=e+4|0;if((x|0)==(c[h>>2]|0)){kv(w,j);z=c[i>>2]|0}else{if((x|0)==0){A=0}else{g[x>>2]=+g[j>>2];A=c[i>>2]|0}j=A+4|0;c[i>>2]=j;z=j}j=e+8|0;if((z|0)==(c[h>>2]|0)){kv(w,j);B=c[i>>2]|0}else{if((z|0)==0){C=0}else{g[z>>2]=+g[j>>2];C=c[i>>2]|0}j=C+4|0;c[i>>2]=j;B=j}j=f|0;if((B|0)==(c[h>>2]|0)){kv(w,j);D=c[i>>2]|0}else{if((B|0)==0){E=0}else{g[B>>2]=+g[j>>2];E=c[i>>2]|0}j=E+4|0;c[i>>2]=j;D=j}j=f+4|0;if((D|0)==(c[h>>2]|0)){kv(w,j);F=c[i>>2]|0}else{if((D|0)==0){G=0}else{g[D>>2]=+g[j>>2];G=c[i>>2]|0}j=G+4|0;c[i>>2]=j;F=j}j=f+8|0;if((F|0)==(c[h>>2]|0)){kv(w,j);H=c[13824]|0;I=H+1|0;c[13824]=I;return}if((F|0)==0){J=0}else{g[F>>2]=+g[j>>2];J=c[i>>2]|0}c[i>>2]=J+4;H=c[13824]|0;I=H+1|0;c[13824]=I;return}function kb(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;g7[c[(c[a>>2]|0)+12>>2]&127](a,b,d,e,e);return}function kc(a,b,c,d){a=a|0;b=b|0;c=+c;d=d|0;eY(680)|0;return}function kd(a,b,d,e,f,g,h,i,j){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=+j;hi[c[(c[a>>2]|0)+28>>2]&3](a,b,d,e,i,j);return}function ke(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=+f;eY(736)|0;return}function kf(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=+d;e=e|0;f=f|0;eY(552)|0;return}function kg(a,b){a=a|0;b=b|0;eY(b|0)|0;return}function kh(a,b,c){a=a|0;b=b|0;c=c|0;eY(448)|0;return}function ki(a,b){a=a|0;b=b|0;c[a+4>>2]=b;return}function kj(a,b,d,e){a=a|0;b=+b;d=d|0;e=e|0;var f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0.0,H=0.0,I=0.0,J=0.0,K=0.0,L=0.0,M=0.0,N=0.0,O=0.0,P=0.0,Q=0.0,R=0.0,S=0.0,T=0.0,U=0.0,V=0.0,W=0.0,X=0.0,Y=0.0,Z=0.0,_=0.0,$=0.0,aa=0;f=i;i=i+384|0;h=f|0;j=f+16|0;k=f+32|0;l=f+48|0;m=f+64|0;n=f+80|0;o=f+96|0;p=f+112|0;q=f+128|0;r=f+144|0;s=f+160|0;t=f+176|0;u=f+192|0;v=f+208|0;w=f+224|0;x=f+240|0;y=f+256|0;z=f+272|0;A=f+288|0;B=f+304|0;C=f+320|0;D=f+336|0;E=f+352|0;F=f+368|0;G=+g[d+48>>2];H=+g[d+52>>2];I=+g[d+56>>2];J=+g[d>>2];K=+g[d+4>>2];L=K*0.0;M=+g[d+8>>2];N=M*0.0;O=J*b+L+N;P=+g[d+16>>2];Q=+g[d+20>>2];R=Q*0.0;S=+g[d+24>>2];T=S*0.0;U=P*b+R+T;V=+g[d+32>>2];W=+g[d+36>>2];X=W*0.0;Y=+g[d+40>>2];Z=Y*0.0;_=V*b+X+Z;$=J*0.0;J=$+K*b+N;N=P*0.0;P=N+Q*b+T;T=V*0.0;V=T+W*b+Z;Z=$+L+M*b;M=N+R+S*b;S=T+X+Y*b;d=a;aa=c[(c[d>>2]|0)+8>>2]|0;b=G-O;Y=H-U;X=I-_;g[h>>2]=b;g[h+4>>2]=Y;g[h+8>>2]=X;g[h+12>>2]=0.0;T=G+J;R=H+P;N=I+V;g[j>>2]=T;g[j+4>>2]=R;g[j+8>>2]=N;g[j+12>>2]=0.0;hM[aa&255](a,h,j,e);j=c[(c[d>>2]|0)+8>>2]|0;g[k>>2]=T;g[k+4>>2]=R;g[k+8>>2]=N;g[k+12>>2]=0.0;L=G+O;O=H+U;U=I+_;g[l>>2]=L;g[l+4>>2]=O;g[l+8>>2]=U;g[l+12>>2]=0.0;hM[j&255](a,k,l,e);l=c[(c[d>>2]|0)+8>>2]|0;g[m>>2]=L;g[m+4>>2]=O;g[m+8>>2]=U;g[m+12>>2]=0.0;_=G-J;J=H-P;P=I-V;g[n>>2]=_;g[n+4>>2]=J;g[n+8>>2]=P;g[n+12>>2]=0.0;hM[l&255](a,m,n,e);n=c[(c[d>>2]|0)+8>>2]|0;g[o>>2]=_;g[o+4>>2]=J;g[o+8>>2]=P;g[o+12>>2]=0.0;g[p>>2]=b;g[p+4>>2]=Y;g[p+8>>2]=X;g[p+12>>2]=0.0;hM[n&255](a,o,p,e);p=c[(c[d>>2]|0)+8>>2]|0;g[q>>2]=b;g[q+4>>2]=Y;g[q+8>>2]=X;g[q+12>>2]=0.0;V=G+Z;$=H+M;W=I+S;g[r>>2]=V;g[r+4>>2]=$;g[r+8>>2]=W;g[r+12>>2]=0.0;hM[p&255](a,q,r,e);r=c[(c[d>>2]|0)+8>>2]|0;g[s>>2]=V;g[s+4>>2]=$;g[s+8>>2]=W;g[s+12>>2]=0.0;g[t>>2]=L;g[t+4>>2]=O;g[t+8>>2]=U;g[t+12>>2]=0.0;hM[r&255](a,s,t,e);t=c[(c[d>>2]|0)+8>>2]|0;g[u>>2]=L;g[u+4>>2]=O;g[u+8>>2]=U;g[u+12>>2]=0.0;U=G-Z;Z=H-M;M=I-S;g[v>>2]=U;g[v+4>>2]=Z;g[v+8>>2]=M;g[v+12>>2]=0.0;hM[t&255](a,u,v,e);v=c[(c[d>>2]|0)+8>>2]|0;g[w>>2]=U;g[w+4>>2]=Z;g[w+8>>2]=M;g[w+12>>2]=0.0;g[x>>2]=b;g[x+4>>2]=Y;g[x+8>>2]=X;g[x+12>>2]=0.0;hM[v&255](a,w,x,e);x=c[(c[d>>2]|0)+8>>2]|0;g[y>>2]=_;g[y+4>>2]=J;g[y+8>>2]=P;g[y+12>>2]=0.0;g[z>>2]=V;g[z+4>>2]=$;g[z+8>>2]=W;g[z+12>>2]=0.0;hM[x&255](a,y,z,e);z=c[(c[d>>2]|0)+8>>2]|0;g[A>>2]=V;g[A+4>>2]=$;g[A+8>>2]=W;g[A+12>>2]=0.0;g[B>>2]=T;g[B+4>>2]=R;g[B+8>>2]=N;g[B+12>>2]=0.0;hM[z&255](a,A,B,e);B=c[(c[d>>2]|0)+8>>2]|0;g[C>>2]=T;g[C+4>>2]=R;g[C+8>>2]=N;g[C+12>>2]=0.0;g[D>>2]=U;g[D+4>>2]=Z;g[D+8>>2]=M;g[D+12>>2]=0.0;hM[B&255](a,C,D,e);D=c[(c[d>>2]|0)+8>>2]|0;g[E>>2]=U;g[E+4>>2]=Z;g[E+8>>2]=M;g[E+12>>2]=0.0;g[F>>2]=_;g[F+4>>2]=J;g[F+8>>2]=P;g[F+12>>2]=0.0;hM[D&255](a,E,F,e);i=f;return}function kk(a){a=a|0;return c[a+4>>2]|0}function kl(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,h=0,j=0,k=0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0.0,J=0.0,K=0.0,L=0.0,M=0.0,N=0.0,O=0;f=i;i=i+48|0;h=f|0;j=f+16|0;k=f+32|0;l=+g[d>>2];m=+g[b>>2];n=+g[d+4>>2];o=+g[b+4>>2];p=+g[d+8>>2];q=+g[b+8>>2];r=(l-m)*.5;s=(n-o)*.5;t=(p-q)*.5;u=(l+m)*.5;m=(n+o)*.5;o=(p+q)*.5;b=h|0;g[b>>2]=1.0;d=h+4|0;g[d>>2]=1.0;v=h+8|0;g[v>>2]=1.0;w=h+12|0;g[w>>2]=0.0;x=j|0;y=j+4|0;z=j+8|0;A=j+12|0;B=k|0;C=k+4|0;D=k+8|0;E=k+12|0;F=a;G=0;q=1.0;p=1.0;n=1.0;while(1){H=0;l=q;I=p;J=n;K=q;while(1){g[A>>2]=0.0;g[x>>2]=u+r*l;g[y>>2]=m+s*I;g[z>>2]=o+t*J;g[h+(H<<2)>>2]=K*-1.0;L=+g[b>>2];M=+g[d>>2];N=+g[v>>2];g[E>>2]=0.0;g[B>>2]=u+r*L;g[C>>2]=m+s*M;g[D>>2]=o+t*N;hM[c[(c[F>>2]|0)+8>>2]&255](a,j,k,e);O=H+1|0;if((O|0)>=3){break}H=O;l=L;I=M;J=N;K=+g[h+(O<<2)>>2]}g[b>>2]=-1.0;g[d>>2]=-1.0;g[v>>2]=-1.0;g[w>>2]=0.0;if((G|0)<3){H=h+(G<<2)|0;g[H>>2]=+g[H>>2]*-1.0}H=G+1|0;if((H|0)>=4){break}G=H;q=+g[b>>2];p=+g[d>>2];n=+g[v>>2]}i=f;return}function km(a,b,d){a=a|0;b=b|0;d=+d;var e=0,f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0.0,B=0,C=0.0;e=i;i=i+112|0;f=e|0;h=e+16|0;j=e+32|0;k=e+48|0;l=e+64|0;m=e+80|0;n=e+96|0;o=f;p=b+48|0;c[o>>2]=c[p>>2];c[o+4>>2]=c[p+4>>2];c[o+8>>2]=c[p+8>>2];c[o+12>>2]=c[p+12>>2];p=a;o=c[(c[p>>2]|0)+8>>2]|0;q=b|0;r=b+4|0;s=b+8|0;t=b+16|0;u=b+20|0;v=b+24|0;w=b+32|0;x=b+36|0;y=b+40|0;b=f|0;z=f+4|0;A=+g[t>>2]*d+ +g[u>>2]*0.0+ +g[v>>2]*0.0+ +g[z>>2];B=f+8|0;C=+g[w>>2]*d+ +g[x>>2]*0.0+ +g[y>>2]*0.0+ +g[B>>2];g[h>>2]=+g[q>>2]*d+ +g[r>>2]*0.0+ +g[s>>2]*0.0+ +g[b>>2];g[h+4>>2]=A;g[h+8>>2]=C;g[h+12>>2]=0.0;g[j>>2]=.699999988079071;g[j+4>>2]=0.0;g[j+8>>2]=0.0;g[j+12>>2]=0.0;hM[o&255](a,f,h,j);j=c[(c[p>>2]|0)+8>>2]|0;C=+g[t>>2]*0.0+ +g[u>>2]*d+ +g[v>>2]*0.0+ +g[z>>2];A=+g[w>>2]*0.0+ +g[x>>2]*d+ +g[y>>2]*0.0+ +g[B>>2];g[k>>2]=+g[q>>2]*0.0+ +g[r>>2]*d+ +g[s>>2]*0.0+ +g[b>>2];g[k+4>>2]=C;g[k+8>>2]=A;g[k+12>>2]=0.0;g[l>>2]=0.0;g[l+4>>2]=.699999988079071;g[l+8>>2]=0.0;g[l+12>>2]=0.0;hM[j&255](a,f,k,l);l=c[(c[p>>2]|0)+8>>2]|0;A=+g[t>>2]*0.0+ +g[u>>2]*0.0+ +g[v>>2]*d+ +g[z>>2];C=+g[w>>2]*0.0+ +g[x>>2]*0.0+ +g[y>>2]*d+ +g[B>>2];g[m>>2]=+g[q>>2]*0.0+ +g[r>>2]*0.0+ +g[s>>2]*d+ +g[b>>2];g[m+4>>2]=A;g[m+8>>2]=C;g[m+12>>2]=0.0;g[n>>2]=0.0;g[n+4>>2]=0.0;g[n+8>>2]=.699999988079071;g[n+12>>2]=0.0;hM[l&255](a,f,m,n);i=e;return}function kn(a,b,d,e,f,h,j,k,l,m,n){a=a|0;b=b|0;d=d|0;e=e|0;f=+f;h=+h;j=+j;k=+k;l=l|0;m=m|0;n=+n;var o=0,p=0,q=0,r=0.0,s=0,t=0.0,u=0.0,v=0,w=0.0,x=0,y=0.0,z=0.0,A=0.0,B=0,C=0,D=0.0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0;o=i;i=i+32|0;p=o|0;q=o+16|0;r=+g[d+4>>2];s=e+8|0;t=+g[s>>2];u=+g[d+8>>2];v=e+4|0;w=+g[v>>2];x=e|0;y=+g[x>>2];z=+g[d>>2];A=k-j;d=~~(A/(n*.01745329238474369));e=(d|0)==0?1:d;n=+Y(j);d=b|0;B=b+4|0;C=b+8|0;k=(r*t-u*w)*h;D=(u*y-t*z)*h;u=(w*z-r*y)*h;h=+Z(j);r=w*f*n+ +g[B>>2]+D*h;w=t*f*n+ +g[C>>2]+u*h;g[p>>2]=+g[d>>2]+y*f*n+k*h;g[p+4>>2]=r;g[p+8>>2]=w;g[p+12>>2]=0.0;if(m){hM[c[(c[a>>2]|0)+8>>2]&255](a,b,p,l)}if((e|0)>=1){w=+(e|0);E=q|0;F=q+4|0;G=q+8|0;H=q+12|0;I=a;J=p;K=q;L=1;do{r=A*+(L|0)/w+j;h=+Y(r);n=+Z(r);r=+g[v>>2]*f*h+ +g[B>>2]+D*n;y=h*+g[s>>2]*f+ +g[C>>2]+u*n;g[E>>2]=+g[d>>2]+ +g[x>>2]*f*h+k*n;g[F>>2]=r;g[G>>2]=y;g[H>>2]=0.0;hM[c[(c[I>>2]|0)+8>>2]&255](a,p,q,l);c[J>>2]=c[K>>2];c[J+4>>2]=c[K+4>>2];c[J+8>>2]=c[K+8>>2];c[J+12>>2]=c[K+12>>2];L=L+1|0;}while((L|0)<=(e|0))}if(!m){i=o;return}hM[c[(c[a>>2]|0)+8>>2]&255](a,b,p,l);i=o;return}function ko(a,b,d,e,f,h,j,k,l,m,n){a=a|0;b=b|0;d=d|0;e=e|0;f=+f;h=+h;j=+j;k=+k;l=+l;m=m|0;n=+n;var o=0,p=0,q=0,r=0,s=0,t=0.0,u=0.0,v=0,w=0.0,x=0.0,y=0,z=0.0,A=0.0,B=0.0,C=0,D=0.0,E=0,F=0.0,G=0,H=0,I=0,J=0.0,K=0,L=0.0,M=0,N=0.0,O=0.0,P=0,Q=0,R=0.0,S=0.0,T=0,U=0,V=0,W=0,X=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0;o=i;i=i+2416|0;p=o+2368|0;q=o+2384|0;r=o+2400|0;s=d|0;t=+g[s>>2];u=t*f;v=d+4|0;w=+g[v>>2];x=w*f;y=d+8|0;z=+g[y>>2];A=z*f;d=b|0;B=+g[d>>2];C=b+4|0;D=+g[C>>2];E=b+8|0;F=+g[E>>2];g[p>>2]=u+B;g[p+4>>2]=x+D;g[p+8>>2]=A+F;g[p+12>>2]=0.0;g[q>>2]=B-u;g[q+4>>2]=D-x;g[q+8>>2]=F-A;g[q+12>>2]=0.0;A=n*.01745329238474369;G=e+8|0;n=+g[G>>2];H=e+4|0;F=+g[H>>2];x=w*n-z*F;I=e|0;D=+g[I>>2];u=z*D-n*t;n=F*t-w*D;if(h>-1.5707963705062866){J=h;K=0}else{J=A+ -1.5707963705062866;K=1}if(j<1.5707963705062866){L=j;M=0}else{L=1.5707963705062866-A;M=1}if(J>L){N=A+ -1.5707963705062866;O=1.5707963705062866-A;P=1;Q=1}else{N=J;O=L;P=K;Q=M}L=O-N;M=~~(L/A)+1|0;K=(M|0)<2?2:M;M=K-1|0;O=L/+(M|0);if(k>l){R=A+ -3.1415927410125732;S=3.1415927410125732;T=1}else{R=k;S=l;T=l-k>=6.2831854820251465}k=S-R;e=~~(k/A)+1|0;U=(e|0)<2?2:e;e=U-1|0;A=k/+(e|0);if((K|0)<=0){i=o;return}V=(U|0)>0;W=a;X=r;_=o+1184|0;$=0;aa=o|0;while(1){k=N+O*+($|0);S=+Z(k)*f;l=+Y(k)*f;L19:do{if(V){ab=($|0)!=0;ac=($|0)==(M|0);ad=ac&P;ae=ac|ab^1;if(ab){ab=0;while(1){k=R+A*+(ab|0);L=+Z(k);ac=_+(ab<<4)|0;J=l*+Y(k);k=l*L;L=u*k+(J*+g[H>>2]+ +g[C>>2])+S*+g[v>>2];j=n*k+(J*+g[G>>2]+ +g[E>>2])+S*+g[y>>2];g[ac>>2]=x*k+(+g[I>>2]*J+ +g[d>>2])+S*+g[s>>2];g[_+(ab<<4)+4>>2]=L;g[_+(ab<<4)+8>>2]=j;g[_+(ab<<4)+12>>2]=0.0;hM[c[(c[W>>2]|0)+8>>2]&255](a,aa+(ab<<4)|0,ac,m);af=(ab|0)!=0;if(af){hM[c[(c[W>>2]|0)+8>>2]&255](a,_+(ab-1<<4)|0,ac,m)}else{ag=ac;c[X>>2]=c[ag>>2];c[X+4>>2]=c[ag+4>>2];c[X+8>>2]=c[ag+8>>2];c[X+12>>2]=c[ag+12>>2]}if(ad){hM[c[(c[W>>2]|0)+8>>2]&255](a,p,ac,m)}do{if(T){if((ab|0)!=(e|0)){break}hM[c[(c[W>>2]|0)+8>>2]&255](a,r,ac,m)}else{if(!ae){break}if(!((ab|0)==(e|0)|af^1)){break}hM[c[(c[W>>2]|0)+8>>2]&255](a,b,ac,m)}}while(0);ab=ab+1|0;if((ab|0)>=(U|0)){break L19}}}else{ah=0}do{j=R+A*+(ah|0);L=+Z(j);ab=_+(ah<<4)|0;J=l*+Y(j);j=l*L;L=u*j+(J*+g[H>>2]+ +g[C>>2])+S*+g[v>>2];k=n*j+(J*+g[G>>2]+ +g[E>>2])+S*+g[y>>2];ac=ab;g[ab>>2]=x*j+(+g[I>>2]*J+ +g[d>>2])+S*+g[s>>2];g[_+(ah<<4)+4>>2]=L;g[_+(ah<<4)+8>>2]=k;g[_+(ah<<4)+12>>2]=0.0;if(Q){hM[c[(c[W>>2]|0)+8>>2]&255](a,q,ab,m)}af=(ah|0)!=0;if(af){hM[c[(c[W>>2]|0)+8>>2]&255](a,_+(ah-1<<4)|0,ab,m)}else{c[X>>2]=c[ac>>2];c[X+4>>2]=c[ac+4>>2];c[X+8>>2]=c[ac+8>>2];c[X+12>>2]=c[ac+12>>2]}if(ad){hM[c[(c[W>>2]|0)+8>>2]&255](a,p,ab,m)}do{if(T){if((ah|0)!=(e|0)){break}hM[c[(c[W>>2]|0)+8>>2]&255](a,r,ab,m)}else{if(!ae){break}if(!((ah|0)==(e|0)|af^1)){break}hM[c[(c[W>>2]|0)+8>>2]&255](a,b,ab,m)}}while(0);ah=ah+1|0;}while((ah|0)<(U|0))}}while(0);ae=$+1|0;if((ae|0)<(K|0)){ad=_;_=aa;$=ae;aa=ad}else{break}}i=o;return}function kp(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0.0,M=0.0;f=i;i=i+384|0;h=f|0;j=f+16|0;k=f+32|0;l=f+48|0;m=f+64|0;n=f+80|0;o=f+96|0;p=f+112|0;q=f+128|0;r=f+144|0;s=f+160|0;t=f+176|0;u=f+192|0;v=f+208|0;w=f+224|0;x=f+240|0;y=f+256|0;z=f+272|0;A=f+288|0;B=f+304|0;C=f+320|0;D=f+336|0;E=f+352|0;F=f+368|0;G=a;H=c[(c[G>>2]|0)+8>>2]|0;I=b|0;J=b+4|0;K=b+8|0;g[h>>2]=+g[I>>2];L=+g[J>>2];g[h+4>>2]=L;M=+g[K>>2];g[h+8>>2]=M;g[h+12>>2]=0.0;b=d|0;g[j>>2]=+g[b>>2];g[j+4>>2]=L;g[j+8>>2]=M;g[j+12>>2]=0.0;hM[H&255](a,h,j,e);j=c[(c[G>>2]|0)+8>>2]|0;M=+g[b>>2];g[k>>2]=M;g[k+4>>2]=+g[J>>2];L=+g[K>>2];g[k+8>>2]=L;g[k+12>>2]=0.0;h=d+4|0;g[l>>2]=M;g[l+4>>2]=+g[h>>2];g[l+8>>2]=L;g[l+12>>2]=0.0;hM[j&255](a,k,l,e);l=c[(c[G>>2]|0)+8>>2]|0;g[m>>2]=+g[b>>2];L=+g[h>>2];g[m+4>>2]=L;M=+g[K>>2];g[m+8>>2]=M;g[m+12>>2]=0.0;g[n>>2]=+g[I>>2];g[n+4>>2]=L;g[n+8>>2]=M;g[n+12>>2]=0.0;hM[l&255](a,m,n,e);n=c[(c[G>>2]|0)+8>>2]|0;M=+g[I>>2];g[o>>2]=M;g[o+4>>2]=+g[h>>2];L=+g[K>>2];g[o+8>>2]=L;g[o+12>>2]=0.0;g[p>>2]=M;g[p+4>>2]=+g[J>>2];g[p+8>>2]=L;g[p+12>>2]=0.0;hM[n&255](a,o,p,e);p=c[(c[G>>2]|0)+8>>2]|0;L=+g[I>>2];g[q>>2]=L;M=+g[J>>2];g[q+4>>2]=M;g[q+8>>2]=+g[K>>2];g[q+12>>2]=0.0;o=d+8|0;g[r>>2]=L;g[r+4>>2]=M;g[r+8>>2]=+g[o>>2];g[r+12>>2]=0.0;hM[p&255](a,q,r,e);r=c[(c[G>>2]|0)+8>>2]|0;M=+g[b>>2];g[s>>2]=M;L=+g[J>>2];g[s+4>>2]=L;g[s+8>>2]=+g[K>>2];g[s+12>>2]=0.0;g[t>>2]=M;g[t+4>>2]=L;g[t+8>>2]=+g[o>>2];g[t+12>>2]=0.0;hM[r&255](a,s,t,e);t=c[(c[G>>2]|0)+8>>2]|0;L=+g[b>>2];g[u>>2]=L;M=+g[h>>2];g[u+4>>2]=M;g[u+8>>2]=+g[K>>2];g[u+12>>2]=0.0;g[v>>2]=L;g[v+4>>2]=M;g[v+8>>2]=+g[o>>2];g[v+12>>2]=0.0;hM[t&255](a,u,v,e);v=c[(c[G>>2]|0)+8>>2]|0;M=+g[I>>2];g[w>>2]=M;L=+g[h>>2];g[w+4>>2]=L;g[w+8>>2]=+g[K>>2];g[w+12>>2]=0.0;g[x>>2]=M;g[x+4>>2]=L;g[x+8>>2]=+g[o>>2];g[x+12>>2]=0.0;hM[v&255](a,w,x,e);x=c[(c[G>>2]|0)+8>>2]|0;g[y>>2]=+g[I>>2];L=+g[J>>2];g[y+4>>2]=L;M=+g[o>>2];g[y+8>>2]=M;g[y+12>>2]=0.0;g[z>>2]=+g[b>>2];g[z+4>>2]=L;g[z+8>>2]=M;g[z+12>>2]=0.0;hM[x&255](a,y,z,e);z=c[(c[G>>2]|0)+8>>2]|0;M=+g[b>>2];g[A>>2]=M;g[A+4>>2]=+g[J>>2];L=+g[o>>2];g[A+8>>2]=L;g[A+12>>2]=0.0;g[B>>2]=M;g[B+4>>2]=+g[h>>2];g[B+8>>2]=L;g[B+12>>2]=0.0;hM[z&255](a,A,B,e);B=c[(c[G>>2]|0)+8>>2]|0;g[C>>2]=+g[b>>2];L=+g[h>>2];g[C+4>>2]=L;M=+g[o>>2];g[C+8>>2]=M;g[C+12>>2]=0.0;g[D>>2]=+g[I>>2];g[D+4>>2]=L;g[D+8>>2]=M;g[D+12>>2]=0.0;hM[B&255](a,C,D,e);D=c[(c[G>>2]|0)+8>>2]|0;M=+g[I>>2];g[E>>2]=M;g[E+4>>2]=+g[h>>2];L=+g[o>>2];g[E+8>>2]=L;g[E+12>>2]=0.0;g[F>>2]=M;g[F+4>>2]=+g[J>>2];g[F+8>>2]=L;g[F+12>>2]=0.0;hM[D&255](a,E,F,e);i=f;return}function kq(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0.0,N=0.0,O=0.0,P=0.0,Q=0,R=0.0,S=0,T=0.0,U=0,V=0.0,W=0,X=0.0,Y=0,Z=0.0,_=0,$=0.0,aa=0,ab=0.0,ac=0,ad=0,ae=0,af=0.0,ag=0,ah=0.0;h=i;i=i+384|0;j=h|0;k=h+16|0;l=h+32|0;m=h+48|0;n=h+64|0;o=h+80|0;p=h+96|0;q=h+112|0;r=h+128|0;s=h+144|0;t=h+160|0;u=h+176|0;v=h+192|0;w=h+208|0;x=h+224|0;y=h+240|0;z=h+256|0;A=h+272|0;B=h+288|0;C=h+304|0;D=h+320|0;E=h+336|0;F=h+352|0;G=h+368|0;H=a;I=c[(c[H>>2]|0)+8>>2]|0;J=b|0;K=b+4|0;L=b+8|0;M=+g[J>>2];N=+g[K>>2];O=+g[L>>2];b=e|0;P=+g[b>>2];Q=e+4|0;R=N*+g[Q>>2];S=e+8|0;T=O*+g[S>>2];U=e+16|0;V=+g[U>>2];W=e+20|0;X=N*+g[W>>2];Y=e+24|0;Z=O*+g[Y>>2];_=e+32|0;$=+g[_>>2];aa=e+36|0;ab=N*+g[aa>>2];ac=e+40|0;N=O*+g[ac>>2];ad=e+48|0;O=+g[ad>>2];ae=e+52|0;af=+g[ae>>2];ag=e+56|0;ah=+g[ag>>2];g[j>>2]=M*P+R+T+O;g[j+4>>2]=M*V+X+Z+af;g[j+8>>2]=M*$+ab+N+ah;g[j+12>>2]=0.0;e=d|0;M=+g[e>>2];g[k>>2]=M*P+R+T+O;g[k+4>>2]=M*V+X+Z+af;g[k+8>>2]=M*$+ab+N+ah;g[k+12>>2]=0.0;hM[I&255](a,j,k,f);k=c[(c[H>>2]|0)+8>>2]|0;ah=+g[e>>2];N=+g[K>>2];ab=+g[L>>2];$=ah*+g[b>>2];M=+g[Q>>2];af=ab*+g[S>>2];Z=ah*+g[U>>2];X=+g[W>>2];V=ab*+g[Y>>2];O=ah*+g[_>>2];ah=+g[aa>>2];T=ab*+g[ac>>2];ab=+g[ad>>2];R=+g[ae>>2];P=+g[ag>>2];g[l>>2]=$+N*M+af+ab;g[l+4>>2]=Z+N*X+V+R;g[l+8>>2]=O+N*ah+T+P;g[l+12>>2]=0.0;j=d+4|0;N=+g[j>>2];g[m>>2]=$+N*M+af+ab;g[m+4>>2]=Z+N*X+V+R;g[m+8>>2]=O+N*ah+T+P;g[m+12>>2]=0.0;hM[k&255](a,l,m,f);m=c[(c[H>>2]|0)+8>>2]|0;P=+g[e>>2];T=+g[j>>2];ah=+g[L>>2];N=+g[b>>2];O=T*+g[Q>>2];R=ah*+g[S>>2];V=+g[U>>2];X=T*+g[W>>2];Z=ah*+g[Y>>2];ab=+g[_>>2];af=T*+g[aa>>2];T=ah*+g[ac>>2];ah=+g[ad>>2];M=+g[ae>>2];$=+g[ag>>2];g[n>>2]=P*N+O+R+ah;g[n+4>>2]=P*V+X+Z+M;g[n+8>>2]=P*ab+af+T+$;g[n+12>>2]=0.0;P=+g[J>>2];g[o>>2]=P*N+O+R+ah;g[o+4>>2]=P*V+X+Z+M;g[o+8>>2]=P*ab+af+T+$;g[o+12>>2]=0.0;hM[m&255](a,n,o,f);o=c[(c[H>>2]|0)+8>>2]|0;$=+g[J>>2];T=+g[j>>2];af=+g[L>>2];ab=$*+g[b>>2];P=+g[Q>>2];M=af*+g[S>>2];Z=$*+g[U>>2];X=+g[W>>2];V=af*+g[Y>>2];ah=$*+g[_>>2];$=+g[aa>>2];R=af*+g[ac>>2];af=+g[ad>>2];O=+g[ae>>2];N=+g[ag>>2];g[p>>2]=ab+T*P+M+af;g[p+4>>2]=Z+T*X+V+O;g[p+8>>2]=ah+T*$+R+N;g[p+12>>2]=0.0;T=+g[K>>2];g[q>>2]=ab+T*P+M+af;g[q+4>>2]=Z+T*X+V+O;g[q+8>>2]=ah+T*$+R+N;g[q+12>>2]=0.0;hM[o&255](a,p,q,f);q=c[(c[H>>2]|0)+8>>2]|0;N=+g[J>>2];R=+g[K>>2];$=+g[L>>2];T=N*+g[b>>2]+R*+g[Q>>2];ah=+g[S>>2];O=N*+g[U>>2]+R*+g[W>>2];V=+g[Y>>2];X=N*+g[_>>2]+R*+g[aa>>2];R=+g[ac>>2];N=+g[ad>>2];Z=+g[ae>>2];af=+g[ag>>2];g[r>>2]=T+$*ah+N;g[r+4>>2]=O+$*V+Z;g[r+8>>2]=X+$*R+af;g[r+12>>2]=0.0;p=d+8|0;$=+g[p>>2];g[s>>2]=T+$*ah+N;g[s+4>>2]=O+$*V+Z;g[s+8>>2]=X+$*R+af;g[s+12>>2]=0.0;hM[q&255](a,r,s,f);s=c[(c[H>>2]|0)+8>>2]|0;af=+g[e>>2];R=+g[K>>2];$=+g[L>>2];X=af*+g[b>>2]+R*+g[Q>>2];Z=+g[S>>2];V=af*+g[U>>2]+R*+g[W>>2];O=+g[Y>>2];N=af*+g[_>>2]+R*+g[aa>>2];R=+g[ac>>2];af=+g[ad>>2];ah=+g[ae>>2];T=+g[ag>>2];g[t>>2]=X+$*Z+af;g[t+4>>2]=V+$*O+ah;g[t+8>>2]=N+$*R+T;g[t+12>>2]=0.0;$=+g[p>>2];g[u>>2]=X+$*Z+af;g[u+4>>2]=V+$*O+ah;g[u+8>>2]=N+$*R+T;g[u+12>>2]=0.0;hM[s&255](a,t,u,f);u=c[(c[H>>2]|0)+8>>2]|0;T=+g[e>>2];R=+g[j>>2];$=+g[L>>2];N=T*+g[b>>2]+R*+g[Q>>2];ah=+g[S>>2];O=T*+g[U>>2]+R*+g[W>>2];V=+g[Y>>2];af=T*+g[_>>2]+R*+g[aa>>2];R=+g[ac>>2];T=+g[ad>>2];Z=+g[ae>>2];X=+g[ag>>2];g[v>>2]=N+$*ah+T;g[v+4>>2]=O+$*V+Z;g[v+8>>2]=af+$*R+X;g[v+12>>2]=0.0;$=+g[p>>2];g[w>>2]=N+$*ah+T;g[w+4>>2]=O+$*V+Z;g[w+8>>2]=af+$*R+X;g[w+12>>2]=0.0;hM[u&255](a,v,w,f);w=c[(c[H>>2]|0)+8>>2]|0;X=+g[J>>2];R=+g[j>>2];$=+g[L>>2];af=X*+g[b>>2]+R*+g[Q>>2];Z=+g[S>>2];V=X*+g[U>>2]+R*+g[W>>2];O=+g[Y>>2];T=X*+g[_>>2]+R*+g[aa>>2];R=+g[ac>>2];X=+g[ad>>2];ah=+g[ae>>2];N=+g[ag>>2];g[x>>2]=af+$*Z+X;g[x+4>>2]=V+$*O+ah;g[x+8>>2]=T+$*R+N;g[x+12>>2]=0.0;$=+g[p>>2];g[y>>2]=af+$*Z+X;g[y+4>>2]=V+$*O+ah;g[y+8>>2]=T+$*R+N;g[y+12>>2]=0.0;hM[w&255](a,x,y,f);y=c[(c[H>>2]|0)+8>>2]|0;N=+g[J>>2];R=+g[K>>2];$=+g[p>>2];T=+g[b>>2];ah=R*+g[Q>>2];O=$*+g[S>>2];V=+g[U>>2];X=R*+g[W>>2];Z=$*+g[Y>>2];af=+g[_>>2];M=R*+g[aa>>2];R=$*+g[ac>>2];$=+g[ad>>2];P=+g[ae>>2];ab=+g[ag>>2];g[z>>2]=N*T+ah+O+$;g[z+4>>2]=N*V+X+Z+P;g[z+8>>2]=N*af+M+R+ab;g[z+12>>2]=0.0;N=+g[e>>2];g[A>>2]=N*T+ah+O+$;g[A+4>>2]=N*V+X+Z+P;g[A+8>>2]=N*af+M+R+ab;g[A+12>>2]=0.0;hM[y&255](a,z,A,f);A=c[(c[H>>2]|0)+8>>2]|0;ab=+g[e>>2];R=+g[K>>2];M=+g[p>>2];af=ab*+g[b>>2];N=+g[Q>>2];P=M*+g[S>>2];Z=ab*+g[U>>2];X=+g[W>>2];V=M*+g[Y>>2];$=ab*+g[_>>2];ab=+g[aa>>2];O=M*+g[ac>>2];M=+g[ad>>2];ah=+g[ae>>2];T=+g[ag>>2];g[B>>2]=af+R*N+P+M;g[B+4>>2]=Z+R*X+V+ah;g[B+8>>2]=$+R*ab+O+T;g[B+12>>2]=0.0;R=+g[j>>2];g[C>>2]=af+R*N+P+M;g[C+4>>2]=Z+R*X+V+ah;g[C+8>>2]=$+R*ab+O+T;g[C+12>>2]=0.0;hM[A&255](a,B,C,f);C=c[(c[H>>2]|0)+8>>2]|0;T=+g[e>>2];O=+g[j>>2];ab=+g[p>>2];R=+g[b>>2];$=O*+g[Q>>2];ah=ab*+g[S>>2];V=+g[U>>2];X=O*+g[W>>2];Z=ab*+g[Y>>2];M=+g[_>>2];P=O*+g[aa>>2];O=ab*+g[ac>>2];ab=+g[ad>>2];N=+g[ae>>2];af=+g[ag>>2];g[D>>2]=T*R+$+ah+ab;g[D+4>>2]=T*V+X+Z+N;g[D+8>>2]=T*M+P+O+af;g[D+12>>2]=0.0;T=+g[J>>2];g[E>>2]=T*R+$+ah+ab;g[E+4>>2]=T*V+X+Z+N;g[E+8>>2]=T*M+P+O+af;g[E+12>>2]=0.0;hM[C&255](a,D,E,f);E=c[(c[H>>2]|0)+8>>2]|0;af=+g[J>>2];O=+g[j>>2];P=+g[p>>2];M=af*+g[b>>2];T=+g[Q>>2];N=P*+g[S>>2];Z=af*+g[U>>2];X=+g[W>>2];V=P*+g[Y>>2];ab=af*+g[_>>2];af=+g[aa>>2];ah=P*+g[ac>>2];P=+g[ad>>2];$=+g[ae>>2];R=+g[ag>>2];g[F>>2]=M+O*T+N+P;g[F+4>>2]=Z+O*X+V+$;g[F+8>>2]=ab+O*af+ah+R;g[F+12>>2]=0.0;O=+g[K>>2];g[G>>2]=M+O*T+N+P;g[G+4>>2]=Z+O*X+V+$;g[G+8>>2]=ab+O*af+ah+R;g[G+12>>2]=0.0;hM[E&255](a,F,G,f);i=h;return}function kr(a,b,d,e,f,h){a=a|0;b=+b;d=+d;e=e|0;f=f|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0.0,I=0,J=0.0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0.0,U=0,V=0.0,W=0.0,X=0.0,Y=0.0,Z=0.0,_=0.0,$=0.0,aa=0.0,ab=0.0,ac=0.0,ad=0.0,ae=0.0;j=i;i=i+288|0;k=j|0;l=j+16|0;m=j+32|0;n=j+96|0;o=j+160|0;p=j+176|0;q=j+192|0;r=j+208|0;s=j+224|0;t=j+240|0;u=j+256|0;v=j+272|0;w=k|0;x=k+4|0;y=k+8|0;K1(k|0,0,16)|0;g[k+(e<<2)>>2]=-0.0-d;z=l|0;A=l+4|0;B=l+8|0;K1(l|0,0,16)|0;g[l+(e<<2)>>2]=d;C=m;D=f;c[C>>2]=c[D>>2];c[C+4>>2]=c[D+4>>2];c[C+8>>2]=c[D+8>>2];c[C+12>>2]=c[D+12>>2];C=m+16|0;E=f+16|0;c[C>>2]=c[E>>2];c[C+4>>2]=c[E+4>>2];c[C+8>>2]=c[E+8>>2];c[C+12>>2]=c[E+12>>2];C=m+32|0;F=f+32|0;c[C>>2]=c[F>>2];c[C+4>>2]=c[F+4>>2];c[C+8>>2]=c[F+8>>2];c[C+12>>2]=c[F+12>>2];C=m+48|0;G=f+48|0;c[C>>2]=c[G>>2];c[C+4>>2]=c[G+4>>2];c[C+8>>2]=c[G+8>>2];d=+g[w>>2];C=f|0;H=+g[x>>2];I=f+4|0;J=+g[y>>2];K=f+8|0;L=f+16|0;M=f+20|0;N=f+24|0;O=f+32|0;P=f+36|0;Q=f+40|0;R=f+48|0;S=f+52|0;T=d*+g[L>>2]+H*+g[M>>2]+J*+g[N>>2]+ +g[S>>2];U=f+56|0;V=d*+g[O>>2]+H*+g[P>>2]+J*+g[Q>>2]+ +g[U>>2];g[m+48>>2]=d*+g[C>>2]+H*+g[I>>2]+J*+g[K>>2]+ +g[R>>2];g[m+52>>2]=T;g[m+56>>2]=V;g[m+60>>2]=0.0;f=a;hu[c[(c[f>>2]|0)+16>>2]&3](a,b,m,h);m=n;c[m>>2]=c[D>>2];c[m+4>>2]=c[D+4>>2];c[m+8>>2]=c[D+8>>2];c[m+12>>2]=c[D+12>>2];D=n+16|0;c[D>>2]=c[E>>2];c[D+4>>2]=c[E+4>>2];c[D+8>>2]=c[E+8>>2];c[D+12>>2]=c[E+12>>2];E=n+32|0;c[E>>2]=c[F>>2];c[E+4>>2]=c[F+4>>2];c[E+8>>2]=c[F+8>>2];c[E+12>>2]=c[F+12>>2];F=n+48|0;c[F>>2]=c[G>>2];c[F+4>>2]=c[G+4>>2];c[F+8>>2]=c[G+8>>2];V=+g[z>>2];T=+g[A>>2];J=+g[B>>2];H=V*+g[L>>2]+T*+g[M>>2]+J*+g[N>>2]+ +g[S>>2];d=V*+g[O>>2]+T*+g[P>>2]+J*+g[Q>>2]+ +g[U>>2];g[n+48>>2]=V*+g[C>>2]+T*+g[I>>2]+J*+g[K>>2]+ +g[R>>2];g[n+52>>2]=H;g[n+56>>2]=d;g[n+60>>2]=0.0;hu[c[(c[f>>2]|0)+16>>2]&3](a,b,n,h);d=+g[R>>2];H=+g[S>>2];J=+g[U>>2];U=(e+1|0)%3|0;S=k+(U<<2)|0;g[S>>2]=b;R=l+(U<<2)|0;g[R>>2]=b;U=a;n=c[(c[U>>2]|0)+8>>2]|0;T=+g[C>>2];V=+g[w>>2];W=+g[I>>2];X=+g[x>>2];Y=+g[K>>2];Z=+g[y>>2];_=+g[L>>2];$=+g[M>>2];aa=+g[N>>2];ab=+g[O>>2];ac=+g[P>>2];ad=+g[Q>>2];g[o>>2]=d+(T*V+W*X+Y*Z);g[o+4>>2]=H+(V*_+X*$+Z*aa);g[o+8>>2]=J+(V*ab+X*ac+Z*ad);g[o+12>>2]=0.0;Z=+g[z>>2];X=+g[A>>2];V=+g[B>>2];g[p>>2]=d+(T*Z+W*X+Y*V);g[p+4>>2]=H+(Z*_+X*$+V*aa);g[p+8>>2]=J+(Z*ab+X*ac+V*ad);g[p+12>>2]=0.0;hM[n&255](a,o,p,h);ad=-0.0-b;g[S>>2]=ad;g[R>>2]=ad;p=c[(c[U>>2]|0)+8>>2]|0;V=+g[C>>2];ac=+g[w>>2];X=+g[I>>2];ab=+g[x>>2];Z=+g[K>>2];aa=+g[y>>2];$=+g[L>>2];_=+g[M>>2];Y=+g[N>>2];W=+g[O>>2];T=+g[P>>2];ae=+g[Q>>2];g[q>>2]=d+(V*ac+X*ab+Z*aa);g[q+4>>2]=H+(ac*$+ab*_+aa*Y);g[q+8>>2]=J+(ac*W+ab*T+aa*ae);g[q+12>>2]=0.0;aa=+g[z>>2];ab=+g[A>>2];ac=+g[B>>2];g[r>>2]=d+(V*aa+X*ab+Z*ac);g[r+4>>2]=H+(aa*$+ab*_+ac*Y);g[r+8>>2]=J+(aa*W+ab*T+ac*ae);g[r+12>>2]=0.0;hM[p&255](a,q,r,h);g[S>>2]=0.0;g[R>>2]=0.0;R=(e+2|0)%3|0;e=k+(R<<2)|0;g[e>>2]=b;k=l+(R<<2)|0;g[k>>2]=b;R=c[(c[U>>2]|0)+8>>2]|0;b=+g[C>>2];ae=+g[w>>2];ac=+g[I>>2];T=+g[x>>2];ab=+g[K>>2];W=+g[y>>2];aa=+g[L>>2];Y=+g[M>>2];_=+g[N>>2];$=+g[O>>2];Z=+g[P>>2];X=+g[Q>>2];g[s>>2]=d+(b*ae+ac*T+ab*W);g[s+4>>2]=H+(ae*aa+T*Y+W*_);g[s+8>>2]=J+(ae*$+T*Z+W*X);g[s+12>>2]=0.0;W=+g[z>>2];T=+g[A>>2];ae=+g[B>>2];g[t>>2]=d+(b*W+ac*T+ab*ae);g[t+4>>2]=H+(W*aa+T*Y+ae*_);g[t+8>>2]=J+(W*$+T*Z+ae*X);g[t+12>>2]=0.0;hM[R&255](a,s,t,h);g[e>>2]=ad;g[k>>2]=ad;k=c[(c[U>>2]|0)+8>>2]|0;ad=+g[C>>2];X=+g[w>>2];ae=+g[I>>2];Z=+g[x>>2];T=+g[K>>2];$=+g[y>>2];W=+g[L>>2];_=+g[M>>2];Y=+g[N>>2];aa=+g[O>>2];ab=+g[P>>2];ac=+g[Q>>2];g[u>>2]=d+(ad*X+ae*Z+T*$);g[u+4>>2]=H+(X*W+Z*_+$*Y);g[u+8>>2]=J+(X*aa+Z*ab+$*ac);g[u+12>>2]=0.0;$=+g[z>>2];Z=+g[A>>2];X=+g[B>>2];g[v>>2]=d+(ad*$+ae*Z+T*X);g[v+4>>2]=H+($*W+Z*_+X*Y);g[v+8>>2]=J+($*aa+Z*ab+X*ac);g[v+12>>2]=0.0;hM[k&255](a,u,v,h);i=j;return}function ks(a,b,d,e,f,h){a=a|0;b=+b;d=+d;e=e|0;f=f|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0.0,z=0.0,A=0.0,B=0,C=0,D=0,E=0.0,F=0.0,G=0.0,H=0.0,I=0.0,J=0.0,K=0.0,L=0.0,M=0.0,N=0.0,O=0,P=0.0,Q=0,R=0.0,S=0,T=0.0,U=0,V=0.0,W=0,X=0.0,Y=0,Z=0.0,_=0,$=0.0;j=i;i=i+224|0;k=j|0;l=j+16|0;m=j+32|0;n=j+48|0;o=j+64|0;p=j+80|0;q=j+96|0;r=j+112|0;s=j+128|0;t=j+144|0;u=j+160|0;v=j+176|0;w=j+192|0;x=j+208|0;y=+g[f+48>>2];z=+g[f+52>>2];A=+g[f+56>>2];K1(k|0,0,16)|0;g[k+(e<<2)>>2]=d;B=(e+1|0)%3|0;K1(l|0,0,16)|0;g[l+(B<<2)>>2]=b;C=a;D=c[(c[C>>2]|0)+8>>2]|0;d=+g[k>>2];E=+g[l>>2];F=d+E;G=+g[k+4>>2];H=+g[l+4>>2];I=G+H;J=+g[k+8>>2];K=+g[l+8>>2];L=J+K;l=f|0;M=+g[l>>2];k=f+4|0;N=+g[k>>2];O=f+8|0;P=+g[O>>2];Q=f+16|0;R=+g[Q>>2];S=f+20|0;T=+g[S>>2];U=f+24|0;V=+g[U>>2];W=f+32|0;X=+g[W>>2];Y=f+36|0;Z=+g[Y>>2];_=f+40|0;$=+g[_>>2];g[m>>2]=y+(F*M+I*N+L*P);g[m+4>>2]=z+(F*R+I*T+L*V);g[m+8>>2]=A+(F*X+I*Z+L*$);g[m+12>>2]=0.0;L=E-d;I=H-G;F=K-J;g[n>>2]=y+(L*M+I*N+F*P);g[n+4>>2]=z+(L*R+I*T+F*V);g[n+8>>2]=A+(L*X+I*Z+F*$);g[n+12>>2]=0.0;hM[D&255](a,m,n,h);n=c[(c[C>>2]|0)+8>>2]|0;$=d-E;F=G-H;Z=J-K;I=+g[l>>2];X=+g[k>>2];L=+g[O>>2];V=+g[Q>>2];T=+g[S>>2];R=+g[U>>2];P=+g[W>>2];N=+g[Y>>2];M=+g[_>>2];g[o>>2]=y+($*I+F*X+Z*L);g[o+4>>2]=z+($*V+F*T+Z*R);g[o+8>>2]=A+($*P+F*N+Z*M);g[o+12>>2]=0.0;Z=-0.0-d-E;E=-0.0-G-H;H=-0.0-J-K;g[p>>2]=y+(Z*I+E*X+H*L);g[p+4>>2]=z+(Z*V+E*T+H*R);g[p+8>>2]=A+(Z*P+E*N+H*M);g[p+12>>2]=0.0;hM[n&255](a,o,p,h);K1(q|0,0,16)|0;g[q+(e<<2)>>2]=1.0;K1(r|0,0,16)|0;g[r+(B<<2)>>2]=1.0;B=a;e=c[(c[B>>2]|0)+60>>2]|0;M=+g[l>>2];H=+g[k>>2];N=+g[O>>2];E=+g[Q>>2];P=+g[S>>2];Z=+g[U>>2];R=+g[W>>2];T=+g[Y>>2];V=+g[_>>2];g[s>>2]=y-(M*d+H*G+N*J);g[s+4>>2]=z-(d*E+G*P+J*Z);g[s+8>>2]=A-(d*R+G*T+J*V);g[s+12>>2]=0.0;L=+g[q>>2];X=+g[q+4>>2];I=+g[q+8>>2];g[t>>2]=M*L+H*X+N*I;g[t+4>>2]=L*E+X*P+I*Z;g[t+8>>2]=L*R+X*T+I*V;g[t+12>>2]=0.0;K=+g[r>>2];F=+g[r+4>>2];$=+g[r+8>>2];g[u>>2]=M*K+H*F+N*$;g[u+4>>2]=K*E+F*P+$*Z;g[u+8>>2]=K*R+F*T+$*V;g[u+12>>2]=0.0;g5[e&3](a,s,t,u,b,b,0.0,6.2831854820251465,h,0,10.0);u=c[(c[B>>2]|0)+60>>2]|0;V=+g[l>>2];T=+g[k>>2];R=+g[O>>2];Z=+g[Q>>2];P=+g[S>>2];E=+g[U>>2];N=+g[W>>2];H=+g[Y>>2];M=+g[_>>2];g[v>>2]=y+(V*d+T*G+R*J);g[v+4>>2]=z+(d*Z+G*P+J*E);g[v+8>>2]=A+(d*N+G*H+J*M);g[v+12>>2]=0.0;g[w>>2]=V*L+T*X+R*I;g[w+4>>2]=L*Z+X*P+I*E;g[w+8>>2]=L*N+X*H+I*M;g[w+12>>2]=0.0;g[x>>2]=V*K+T*F+R*$;g[x+4>>2]=K*Z+F*P+$*E;g[x+8>>2]=K*N+F*H+$*M;g[x+12>>2]=0.0;g5[u&3](a,v,w,x,b,b,0.0,6.2831854820251465,h,0,10.0);i=j;return}function kt(a,b,d,e,f,h){a=a|0;b=+b;d=+d;e=e|0;f=f|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0.0,B=0.0,C=0.0,D=0,E=0,F=0,G=0,H=0.0,I=0,J=0.0,K=0.0,L=0,M=0.0,N=0.0,O=0.0,P=0,Q=0.0,R=0,S=0.0,T=0,U=0.0,V=0,W=0.0,X=0,Y=0.0,Z=0.0,_=0.0,$=0.0,aa=0.0,ab=0.0,ac=0.0,ad=0.0,ae=0.0,af=0.0;j=i;i=i+256|0;k=j|0;l=j+16|0;m=j+32|0;n=j+48|0;o=j+64|0;p=j+80|0;q=j+96|0;r=j+112|0;s=j+128|0;t=j+144|0;u=j+160|0;v=j+176|0;w=j+192|0;x=j+208|0;y=j+224|0;z=j+240|0;A=+g[f+48>>2];B=+g[f+52>>2];C=+g[f+56>>2];K1(k|0,0,16)|0;g[k+(e<<2)>>2]=d*.5;D=(e+1|0)%3|0;K1(l|0,0,16)|0;g[l+(D<<2)>>2]=b;K1(m|0,0,16)|0;g[m+(((e+2|0)%3|0)<<2)>>2]=b;E=a;F=c[(c[E>>2]|0)+8>>2]|0;G=f|0;d=+g[G>>2];H=+g[k>>2];I=f+4|0;J=+g[I>>2];K=+g[k+4>>2];L=f+8|0;M=+g[L>>2];N=+g[k+8>>2];k=f+16|0;O=+g[k>>2];P=f+20|0;Q=+g[P>>2];R=f+24|0;S=+g[R>>2];T=f+32|0;U=+g[T>>2];V=f+36|0;W=+g[V>>2];X=f+40|0;Y=+g[X>>2];g[n>>2]=A+(d*H+J*K+M*N);g[n+4>>2]=B+(H*O+K*Q+N*S);g[n+8>>2]=C+(H*U+K*W+N*Y);g[n+12>>2]=0.0;Z=+g[l>>2];_=Z-H;$=+g[l+4>>2];aa=$-K;ab=+g[l+8>>2];ac=ab-N;g[o>>2]=A+(_*d+aa*J+ac*M);g[o+4>>2]=B+(_*O+aa*Q+ac*S);g[o+8>>2]=C+(_*U+aa*W+ac*Y);g[o+12>>2]=0.0;hM[F&255](a,n,o,h);o=c[(c[E>>2]|0)+8>>2]|0;Y=+g[G>>2];ac=+g[I>>2];W=+g[L>>2];aa=+g[k>>2];U=+g[P>>2];_=+g[R>>2];S=+g[T>>2];Q=+g[V>>2];O=+g[X>>2];g[p>>2]=A+(Y*H+ac*K+W*N);g[p+4>>2]=B+(H*aa+K*U+N*_);g[p+8>>2]=C+(H*S+K*Q+N*O);g[p+12>>2]=0.0;M=-0.0-H;J=-0.0-K;d=-0.0-N;ad=M-Z;Z=J-$;$=d-ab;g[q>>2]=A+(ad*Y+Z*ac+$*W);g[q+4>>2]=B+(ad*aa+Z*U+$*_);g[q+8>>2]=C+(ad*S+Z*Q+$*O);g[q+12>>2]=0.0;hM[o&255](a,p,q,h);q=c[(c[E>>2]|0)+8>>2]|0;O=+g[G>>2];$=+g[I>>2];Q=+g[L>>2];Z=+g[k>>2];S=+g[P>>2];ad=+g[R>>2];_=+g[T>>2];U=+g[V>>2];aa=+g[X>>2];g[r>>2]=A+(O*H+$*K+Q*N);g[r+4>>2]=B+(H*Z+K*S+N*ad);g[r+8>>2]=C+(H*_+K*U+N*aa);g[r+12>>2]=0.0;W=+g[m>>2];ac=W-H;Y=+g[m+4>>2];ab=Y-K;ae=+g[m+8>>2];af=ae-N;g[s>>2]=A+(ac*O+ab*$+af*Q);g[s+4>>2]=B+(ac*Z+ab*S+af*ad);g[s+8>>2]=C+(ac*_+ab*U+af*aa);g[s+12>>2]=0.0;hM[q&255](a,r,s,h);s=c[(c[E>>2]|0)+8>>2]|0;aa=+g[G>>2];af=+g[I>>2];U=+g[L>>2];ab=+g[k>>2];_=+g[P>>2];ac=+g[R>>2];ad=+g[T>>2];S=+g[V>>2];Z=+g[X>>2];g[t>>2]=A+(aa*H+af*K+U*N);g[t+4>>2]=B+(H*ab+K*_+N*ac);g[t+8>>2]=C+(H*ad+K*S+N*Z);g[t+12>>2]=0.0;Q=M-W;W=J-Y;Y=d-ae;g[u>>2]=A+(Q*aa+W*af+Y*U);g[u+4>>2]=B+(Q*ab+W*_+Y*ac);g[u+8>>2]=C+(Q*ad+W*S+Y*Z);g[u+12>>2]=0.0;hM[s&255](a,t,u,h);K1(v|0,0,16)|0;g[v+(e<<2)>>2]=1.0;K1(w|0,0,16)|0;g[w+(D<<2)>>2]=1.0;D=c[(c[a>>2]|0)+60>>2]|0;Z=+g[G>>2];Y=+g[I>>2];S=+g[L>>2];W=+g[k>>2];ad=+g[P>>2];Q=+g[R>>2];ac=+g[T>>2];_=+g[V>>2];ab=+g[X>>2];g[x>>2]=A-(Z*H+Y*K+S*N);g[x+4>>2]=B-(H*W+K*ad+N*Q);g[x+8>>2]=C-(H*ac+K*_+N*ab);g[x+12>>2]=0.0;N=+g[v>>2];K=+g[v+4>>2];H=+g[v+8>>2];g[y>>2]=Z*N+Y*K+S*H;g[y+4>>2]=N*W+K*ad+H*Q;g[y+8>>2]=N*ac+K*_+H*ab;g[y+12>>2]=0.0;H=+g[w>>2];K=+g[w+4>>2];N=+g[w+8>>2];g[z>>2]=Z*H+Y*K+S*N;g[z+4>>2]=H*W+K*ad+N*Q;g[z+8>>2]=H*ac+K*_+N*ab;g[z+12>>2]=0.0;g5[D&3](a,x,y,z,b,b,0.0,6.2831854820251465,h,0,10.0);i=j;return}function ku(a,b,d,e,f){a=a|0;b=b|0;d=+d;e=e|0;f=f|0;var h=0,j=0,k=0,l=0,m=0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0,D=0,E=0,F=0,G=0,H=0,I=0.0,J=0,K=0.0,L=0,M=0.0,N=0,O=0.0,P=0,Q=0.0,R=0,S=0.0,T=0,U=0.0,X=0,Y=0.0;h=i;i=i+64|0;j=h|0;k=h+16|0;l=h+32|0;m=h+48|0;n=+g[b>>2];o=n*d;p=+g[b+4>>2];q=p*d;r=+g[b+8>>2];s=r*d;if(+V(+r)>.7071067690849304){d=p*p+r*r;t=1.0/+W(d);u=t*(-0.0-r);v=p*t;w=d*t;x=v*(-0.0-n);y=n*u;z=0.0;A=u;B=v*100.0}else{v=n*n+p*p;u=1.0/+W(v);t=u*(-0.0-p);p=n*u;w=p*(-0.0-r);x=r*t;y=v*u;z=t*100.0;A=p;B=0.0}p=A*100.0;A=o+z;t=q+p;u=s+B;v=o-z;z=q-p;p=s-B;B=w*100.0;w=x*100.0;x=y*100.0;y=o+B;r=q+w;n=s+x;d=o-B;B=q-w;w=s-x;b=a;C=c[(c[b>>2]|0)+8>>2]|0;D=e|0;x=+g[D>>2];E=e+4|0;s=+g[E>>2];F=e+8|0;q=+g[F>>2];G=e+16|0;o=+g[G>>2];H=e+20|0;I=+g[H>>2];J=e+24|0;K=+g[J>>2];L=e+32|0;M=+g[L>>2];N=e+36|0;O=+g[N>>2];P=e+40|0;Q=+g[P>>2];R=e+48|0;S=+g[R>>2];T=e+52|0;U=+g[T>>2];X=e+56|0;Y=+g[X>>2];g[j>>2]=A*x+t*s+u*q+S;g[j+4>>2]=A*o+t*I+u*K+U;g[j+8>>2]=A*M+t*O+u*Q+Y;g[j+12>>2]=0.0;g[k>>2]=v*x+z*s+p*q+S;g[k+4>>2]=v*o+z*I+p*K+U;g[k+8>>2]=v*M+z*O+p*Q+Y;g[k+12>>2]=0.0;hM[C&255](a,j,k,f);k=c[(c[b>>2]|0)+8>>2]|0;Y=+g[D>>2];Q=+g[E>>2];p=+g[F>>2];O=+g[G>>2];z=+g[H>>2];M=+g[J>>2];v=+g[L>>2];U=+g[N>>2];K=+g[P>>2];I=+g[R>>2];o=+g[T>>2];S=+g[X>>2];g[l>>2]=y*Y+r*Q+n*p+I;g[l+4>>2]=y*O+r*z+n*M+o;g[l+8>>2]=y*v+r*U+n*K+S;g[l+12>>2]=0.0;g[m>>2]=d*Y+B*Q+w*p+I;g[m+4>>2]=d*O+B*z+w*M+o;g[m+8>>2]=d*v+B*U+w*K+S;g[m+12>>2]=0.0;hM[k&255](a,l,m,f);i=h;return}function kv(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;d=a+4|0;e=a|0;f=c[e>>2]|0;h=f;i=(c[d>>2]|0)-h|0;j=i>>2;k=j+1|0;if(k>>>0>1073741823>>>0){Il(0)}l=a+8|0;a=(c[l>>2]|0)-h|0;if(a>>2>>>0>536870910>>>0){m=1073741823;n=5}else{h=a>>1;a=h>>>0<k>>>0?k:h;if((a|0)==0){o=0;p=0}else{m=a;n=5}}if((n|0)==5){o=KS(m<<2)|0;p=m}m=o+(j<<2)|0;if((m|0)!=0){g[m>>2]=+g[b>>2]}b=f;K2(o|0,b|0,i)|0;c[e>>2]=o;c[d>>2]=o+(k<<2);c[l>>2]=o+(p<<2);if((f|0)==0){return}KU(b);return}function kw(a){a=a|0;K1(a|0,0,40)|0;if((fJ(bP(7939)|0,22576)|0)==0){return}c[a+20>>2]=ew(24528)|0;return}function kx(b){b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0;if((es(b|0,32)|0)!=0){c=0;return c|0}if((a[b]|0)==0){c=0;return c|0}d=bP(7939)|0;e=fJ(d|0,b|0)|0;if((e|0)==0){c=0;return c|0}f=K0(b|0)|0;g=d;d=e;while(1){e=d+f|0;if((d|0)==(g|0)){h=7}else{if((a[d-1|0]|0)==32){h=7}}if((h|0)==7){h=0;i=a[e]|0;if((i<<24>>24|0)==32|(i<<24>>24|0)==0){c=1;h=13;break}}i=fJ(e|0,b|0)|0;if((i|0)==0){c=0;h=12;break}else{g=e;d=i}}if((h|0)==12){return c|0}else if((h|0)==13){return c|0}return 0}function ky(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;j=i;i=i+144|0;k=j|0;l=j+16|0;m=j+32|0;n=j+48|0;o=j+64|0;p=j+72|0;q=j+80|0;r=j+88|0;s=j+96|0;t=j+112|0;u=j+128|0;le(k);if((h|0)==0){v=b}else{w=b;while(1){if((bo(a[w]|0)|0)==0){break}else{w=w+1|0}}do{if((a[w]|0)==35){b=w;do{b=b+1|0;}while((bo(a[b]|0)|0)!=0);if((em(b|0,20480,7)|0)!=0){x=w;break}y=es(w|0,10)|0;if((y|0)!=0){z=y-w+1|0;lc(l,w,z);li(k,l)|0;lg(l);x=w+z|0;break}lc(n,w,c[12264]|0);ll(m,n,24040);li(k,m)|0;lg(m);lg(n);x=0}else{x=w}}while(0);w=0;while(1){lj(k,c[g+(w<<2)>>2]|0)|0;lj(k,24040)|0;n=w+1|0;if(n>>>0<h>>>0){w=n}else{v=x;break}}}lj(k,v)|0;c[e>>2]=bu(d|0)|0;c[o>>2]=lh(k)|0;gd(c[e>>2]|0,1,o|0,0);bn(c[e>>2]|0);dr(c[e>>2]|0,35713,p|0);if((c[p>>2]|0)!=0){A=0;lg(k);i=j;return A|0}dr(c[e>>2]|0,35716,q|0);p=c[q>>2]|0;q=KT((p|0)>-1?p:-1)|0;cg(c[e>>2]|0,p|0,r|0,q|0);lc(u,21544,c[12264]|0);ll(t,u,q);ll(s,t,24040);li(f,s)|0;lg(s);lg(t);lg(u);if((q|0)!=0){KV(q)}dR(c[e>>2]|0);A=1;lg(k);i=j;return A|0}function kz(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;j=i;i=i+72|0;k=j|0;l=j+8|0;m=j+16|0;n=j+24|0;o=j+40|0;p=j+56|0;q=fm()|0;c[a>>2]=q;ey(q|0,d|0);ey(c[a>>2]|0,b|0);b=c[a>>2]|0;if((g|0)>0){d=0;q=b;while(1){f3(q|0,c[f+(d<<2)>>2]|0,c[e+(d<<2)>>2]|0);r=d+1|0;s=c[a>>2]|0;if((r|0)<(g|0)){d=r;q=s}else{t=s;break}}}else{t=b}d4(t|0);c9(c[a>>2]|0,35714,k|0);t=c[a>>2]|0;if((c[k>>2]|0)!=0){dJ(t|0);u=0;i=j;return u|0}c9(t|0,35716,l|0);t=c[l>>2]|0;l=KT((t|0)>-1?t:-1)|0;eX(c[a>>2]|0,t|0,m|0,l|0);lc(p,15584,c[12264]|0);ll(o,p,l);ll(n,o,24040);li(h,n)|0;lg(n);lg(o);lg(p);if((l|0)==0){u=1;i=j;return u|0}KV(l);u=1;i=j;return u|0}function kA(a){a=a|0;g[a>>2]=1.0;g[a+16>>2]=0.0;g[a+32>>2]=0.0;g[a+48>>2]=0.0;g[a+4>>2]=0.0;g[a+20>>2]=1.0;g[a+36>>2]=0.0;g[a+52>>2]=0.0;g[a+8>>2]=0.0;g[a+24>>2]=0.0;g[a+40>>2]=1.0;g[a+56>>2]=0.0;g[a+12>>2]=0.0;g[a+28>>2]=0.0;g[a+44>>2]=0.0;g[a+60>>2]=1.0;return}function kB(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0,e=0.0,f=0.0,h=0.0,i=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0,I=0.0,J=0.0;d=+g[b>>2];e=+g[c>>2];f=+g[b+4>>2];h=+g[c+16>>2];i=+g[b+8>>2];j=+g[c+32>>2];k=+g[b+12>>2];l=+g[c+48>>2];m=+g[c+4>>2];n=+g[c+20>>2];o=+g[c+36>>2];p=+g[c+52>>2];q=+g[c+8>>2];r=+g[c+24>>2];s=+g[c+40>>2];t=+g[c+56>>2];u=+g[c+12>>2];v=+g[c+28>>2];w=+g[c+44>>2];x=+g[c+60>>2];y=+g[b+16>>2];z=+g[b+20>>2];A=+g[b+24>>2];B=+g[b+28>>2];C=+g[b+32>>2];D=+g[b+36>>2];E=+g[b+40>>2];F=+g[b+44>>2];G=+g[b+48>>2];H=+g[b+52>>2];I=+g[b+56>>2];J=+g[b+60>>2];g[a>>2]=d*e+f*h+i*j+k*l;g[a+4>>2]=d*m+f*n+i*o+k*p;g[a+8>>2]=d*q+f*r+i*s+k*t;g[a+12>>2]=d*u+f*v+i*w+k*x;g[a+16>>2]=e*y+h*z+j*A+l*B;g[a+20>>2]=m*y+n*z+o*A+p*B;g[a+24>>2]=q*y+r*z+s*A+t*B;g[a+28>>2]=u*y+v*z+w*A+x*B;g[a+32>>2]=e*C+h*D+j*E+l*F;g[a+36>>2]=m*C+n*D+o*E+p*F;g[a+40>>2]=q*C+r*D+s*E+t*F;g[a+44>>2]=u*C+v*D+w*E+x*F;g[a+48>>2]=e*G+h*H+j*I+l*J;g[a+52>>2]=m*G+n*H+o*I+p*J;g[a+56>>2]=q*G+r*H+s*I+t*J;g[a+60>>2]=u*G+v*H+w*I+x*J;return}function kC(a,b,c,d){a=a|0;b=+b;c=+c;d=+d;g[a>>2]=1.0;g[a+16>>2]=0.0;g[a+32>>2]=0.0;g[a+48>>2]=b;g[a+4>>2]=0.0;g[a+20>>2]=1.0;g[a+36>>2]=0.0;g[a+52>>2]=c;g[a+8>>2]=0.0;g[a+24>>2]=0.0;g[a+40>>2]=1.0;g[a+56>>2]=d;g[a+12>>2]=0.0;g[a+28>>2]=0.0;g[a+44>>2]=0.0;g[a+60>>2]=1.0;return}function kD(a,b,c,d){a=a|0;b=+b;c=+c;d=+d;g[a>>2]=b;g[a+16>>2]=0.0;g[a+32>>2]=0.0;g[a+48>>2]=0.0;g[a+4>>2]=0.0;g[a+20>>2]=c;g[a+36>>2]=0.0;g[a+52>>2]=0.0;g[a+8>>2]=0.0;g[a+24>>2]=0.0;g[a+40>>2]=d;g[a+56>>2]=0.0;g[a+12>>2]=0.0;g[a+28>>2]=0.0;g[a+44>>2]=0.0;g[a+60>>2]=1.0;return}function kE(a,b){a=a|0;b=+b;var c=0.0,d=0.0;c=b;b=+Y(c);d=+Z(c);g[a>>2]=1.0;g[a+16>>2]=0.0;g[a+32>>2]=0.0;g[a+48>>2]=0.0;g[a+4>>2]=0.0;g[a+20>>2]=b;g[a+36>>2]=d;g[a+52>>2]=0.0;g[a+8>>2]=0.0;g[a+24>>2]=-0.0-d;g[a+40>>2]=b;g[a+56>>2]=0.0;g[a+12>>2]=0.0;g[a+28>>2]=0.0;g[a+44>>2]=0.0;g[a+60>>2]=1.0;return}function kF(a,b){a=a|0;b=+b;var c=0.0,d=0.0;c=b;b=+Y(c);d=+Z(c);g[a>>2]=b;g[a+16>>2]=0.0;g[a+32>>2]=-0.0-d;g[a+48>>2]=0.0;g[a+4>>2]=0.0;g[a+20>>2]=1.0;g[a+36>>2]=0.0;g[a+52>>2]=0.0;g[a+8>>2]=d;g[a+24>>2]=0.0;g[a+40>>2]=b;g[a+56>>2]=0.0;g[a+12>>2]=0.0;g[a+28>>2]=0.0;g[a+44>>2]=0.0;g[a+60>>2]=1.0;return}function kG(a,b){a=a|0;b=+b;var c=0.0,d=0.0;c=b;b=+Y(c);d=+Z(c);g[a>>2]=b;g[a+16>>2]=d;g[a+32>>2]=0.0;g[a+48>>2]=0.0;g[a+4>>2]=-0.0-d;g[a+20>>2]=b;g[a+36>>2]=0.0;g[a+52>>2]=0.0;g[a+8>>2]=0.0;g[a+24>>2]=0.0;g[a+40>>2]=1.0;g[a+56>>2]=0.0;g[a+12>>2]=0.0;g[a+28>>2]=0.0;g[a+44>>2]=0.0;g[a+60>>2]=1.0;return}function kH(a,b){a=a|0;b=b|0;var c=0.0,d=0.0,e=0.0,f=0.0,h=0.0,i=0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0;c=+g[b>>2];d=+g[b+20>>2];e=c*d;f=+g[b+40>>2];h=e*f;i=h<0.0;j=h+0.0;h=i?0.0:j;k=i?j:0.0;j=+g[b+16>>2];l=+g[b+36>>2];m=j*l;n=+g[b+8>>2];o=m*n;p=o;if(o<0.0){q=k+p;r=h}else{q=k;r=h+p}p=+g[b+32>>2];h=+g[b+4>>2];k=p*h;o=+g[b+24>>2];s=k*o;t=s;if(s<0.0){u=q+t;v=r}else{u=q;v=r+t}t=d*(-0.0-p)*n;r=t;if(t<0.0){w=u+r;x=v}else{w=u;x=v+r}r=h*(-0.0-j)*f;v=r;if(r<0.0){y=w+v;z=x}else{y=w;z=x+v}v=l*(-0.0-c)*o;x=v;if(v<0.0){A=y+x;B=z}else{A=y;B=z+x}x=B+A;if(x==0.0){return}z=x/(B-A);if(z>0.0){C=z}else{C=-0.0-z}if(C<1.0e-15){return}C=1.0/x;x=C*(d*f-l*o);z=C*(-0.0-(f*h-l*n));A=C*(o*h-d*n);B=C*(-0.0-(f*j-o*p));y=C*(f*c-n*p);f=C*(-0.0-(o*c-n*j));n=C*(m-d*p);p=C*(-0.0-(l*c-k));k=C*(e-h*j);j=+g[b+48>>2];h=+g[b+52>>2];e=+g[b+56>>2];g[a>>2]=x;g[a+4>>2]=z;g[a+8>>2]=A;g[a+12>>2]=0.0;g[a+16>>2]=B;g[a+20>>2]=y;g[a+24>>2]=f;g[a+28>>2]=0.0;g[a+32>>2]=n;g[a+36>>2]=p;g[a+40>>2]=k;g[a+44>>2]=0.0;g[a+48>>2]=-0.0-(n*e+(x*j+h*B));g[a+52>>2]=-0.0-(j*z+h*y+e*p);g[a+56>>2]=-0.0-(e*k+(A*j+h*f));g[a+60>>2]=1.0;return}function kI(a,b,c,d){a=a|0;b=b|0;c=c|0;d=+d;var e=0.0;e=+g[b>>2];g[a>>2]=e+(+g[c>>2]-e)*d;e=+g[b+4>>2];g[a+4>>2]=e+(+g[c+4>>2]-e)*d;e=+g[b+8>>2];g[a+8>>2]=e+(+g[c+8>>2]-e)*d;return}function kJ(a){a=a|0;var b=0,d=0;c[a>>2]=35256;b=c[a+4>>2]|0;if((b|0)==0){d=a;KU(d);return}g$[c[(c[b>>2]|0)+4>>2]&1023](b);d=a;KU(d);return}function kK(a){a=a|0;var b=0;c[a>>2]=35256;b=c[a+4>>2]|0;if((b|0)==0){return}g$[c[(c[b>>2]|0)+4>>2]&1023](b);return}function kL(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=a+8|0;f=(c[e>>2]|0)+d|0;g=a+4|0;if(f>>>0>(k8(c[g>>2]|0)|0)>>>0){h=0;return h|0}f=c[e>>2]|0;K2(b|0,(k9(c[g>>2]|0)|0)+f|0,d)|0;c[e>>2]=(c[e>>2]|0)+d;h=1;return h|0}function kM(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=a+8|0;e=(c[d>>2]|0)+b|0;if(e>>>0>(k8(c[a+4>>2]|0)|0)>>>0){f=0;return f|0}c[d>>2]=(c[d>>2]|0)+b;f=1;return f|0}function kN(b,e,f,g,h,j){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0;k=i;i=i+8|0;l=k|0;K1(b|0,0,100)|0;if((f|0)==0){m=(h|0)!=0?0:b}else{m=0}n=m|0;o=e|0;p=(f|0)!=0;q=(h|0)!=0;r=p|q;s=l|0;t=e;u=l+3|0;v=l+2|0;w=l+1|0;l=(m|0)==0;x=r^1;y=e;e=q;q=p;p=0;z=0;L4:while(1){A=e;B=q;C=p;L6:while(1){D=A;E=B;while(1){if(l){while(1){if(!(hd[c[(c[t>>2]|0)+8>>2]&127](o,s,4)|0)){F=29;break L4}G=a[u]|0;H=a[v]|0;I=a[w]|0;J=a[s]|0;if(!(hd[c[(c[t>>2]|0)+8>>2]&127](o,s,4)|0)){F=29;break L4}K=(H&255)<<16|(G&255)<<24|(I&255)<<8|J&255;J=(d[v]|0)<<16|(d[u]|0)<<24|(d[w]|0)<<8|(d[s]|0);if((K|0)==1e3){L=J;break L6}else if((K|0)==(-402456576|0)){F=26;break L4}else if((K|0)==(-2147482647|0)){F=25;break L4}else if((K|0)==1002){M=J;F=19;break}else if((K|0)==1003){N=J;F=22;break}else if((K|0)!=1001){O=D;P=E;Q=J;break}}}else{if(!(hd[c[(c[t>>2]|0)+8>>2]&127](o,s,4)|0)){F=29;break L4}J=a[u]|0;K=a[v]|0;I=a[w]|0;G=a[s]|0;if(!(hd[c[(c[t>>2]|0)+8>>2]&127](o,s,4)|0)){F=29;break L4}H=(K&255)<<16|(J&255)<<24|(I&255)<<8|G&255;G=(d[v]|0)<<16|(d[u]|0)<<24|(d[w]|0)<<8|(d[s]|0);if((H|0)==1e3){L=G;break L6}else if((H|0)==(-402456576|0)){F=26;break L4}else if((H|0)==(-2147482647|0)){F=25;break L4}else if((H|0)==1002){M=G;F=19}else if((H|0)==1001){break}else if((H|0)==1003){N=G;F=22}else{O=D;P=E;Q=G}}do{if((F|0)==19){F=0;if(!E){O=D;P=0;Q=M;break}if(!(hd[c[(c[t>>2]|0)+8>>2]&127](o,f,M>>>0<g>>>0?M:g)|0)){R=1;F=44;break L4}O=D;P=0;Q=M>>>0>g>>>0?M-g|0:0}else if((F|0)==22){F=0;if(!D){O=0;P=E;Q=N;break}if(!(hd[c[(c[t>>2]|0)+8>>2]&127](o,h,N>>>0<j>>>0?N:j)|0)){R=1;F=40;break L4}O=0;P=E;Q=N>>>0>g>>>0?N-j|0:0}}while(0);if(!(P|x|O)){break L4}if(hx[c[(c[y>>2]|0)+12>>2]&127](o,Q)|0){D=O;E=P}else{R=1;F=42;break L4}}if(k$(n,o)|0){A=D;B=E;C=1}else{R=1;F=49;break L4}}if((L|0)!=11){R=1;F=37;break}B=KO(11,1)|0;if((B|0)==0){R=1;F=47;break}if(!(hd[c[(c[t>>2]|0)+8>>2]&127](o,B,11)|0)){R=1;F=48;break}if((fS(B|0,21464)|0)!=0){R=1;F=41;break}KN(B);e=D;q=E;p=C;z=1}do{if((F|0)==26){lu(18160,(S=i,i=i+1|0,i=i+7&-8,c[S>>2]=0,S)|0);i=S;R=1;i=k;return R|0}else if((F|0)==25){if(z&C){break}else{R=1}i=k;return R|0}else if((F|0)==44){i=k;return R|0}else if((F|0)==47){i=k;return R|0}else if((F|0)==48){i=k;return R|0}else if((F|0)==49){i=k;return R|0}else if((F|0)==37){i=k;return R|0}else if((F|0)==40){i=k;return R|0}else if((F|0)==41){i=k;return R|0}else if((F|0)==42){i=k;return R|0}else if((F|0)==29){if(r|l){if(r){break}else{R=1}i=k;return R|0}if((c[m+84>>2]&1|0)==0){if(z&C){break}else{R=1}i=k;return R|0}else{lu(16712,(S=i,i=i+1|0,i=i+7&-8,c[S>>2]=0,S)|0);i=S;R=1;i=k;return R|0}}}while(0);R=(kQ(b)|0)!=0|0;i=k;return R|0}function kO(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0;j=i;i=i+16|0;k=j|0;l=k|0;c[l>>2]=35256;m=k+4|0;c[m>>2]=0;c[k+8>>2]=0;n=KS(20)|0;o=n;k4(o,b,d);c[m>>2]=o;if(!(k7(o)|0)){if((n|0)!=0){g$[c[(c[n>>2]|0)+4>>2]&1023](o)}c[m>>2]=0;c[l>>2]=35256;p=1;i=j;return p|0}o=kN(a,k,e,f,g,h)|0;h=c[m>>2]|0;c[l>>2]=35256;if((h|0)==0){p=o;i=j;return p|0}g$[c[(c[h>>2]|0)+4>>2]&1023](h);p=o;i=j;return p|0}function kP(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0;d=b+96|0;e=c[d>>2]|0;if((e|0)==0){f=b;K1(f|0,0,100)|0;return}do{if((a[e+24|0]&1)==0){g=b+24|0;h=c[g>>2]|0;i=b+28|0;j=c[i>>2]|0;if((h|0)==0){k=j}else{l=0;m=j;j=h;while(1){h=c[m+(l*20|0)+16>>2]|0;if((h|0)==0){n=j;o=m}else{KN(h);c[(c[i>>2]|0)+(l*20|0)+16>>2]=0;n=c[g>>2]|0;o=c[i>>2]|0}h=l+1|0;if(h>>>0<n>>>0){l=h;m=o;j=n}else{k=o;break}}}if((k|0)!=0){KN(k);c[i>>2]=0}j=b+36|0;m=c[j>>2]|0;if((m|0)!=0){KN(m);c[j>>2]=0}j=b+68|0;m=b+72|0;l=c[m>>2]|0;if((c[j>>2]|0)==0){p=l}else{g=0;h=l;while(1){l=c[h+(g*164|0)>>2]|0;if((l|0)==0){q=h}else{KN(l);c[(c[m>>2]|0)+(g*164|0)>>2]=0;q=c[m>>2]|0}l=c[q+(g*164|0)+88>>2]|0;if((l|0)==0){r=q}else{KN(l);c[(c[m>>2]|0)+(g*164|0)+88>>2]=0;r=c[m>>2]|0}l=c[r+(g*164|0)+92>>2]|0;if((l|0)==0){s=r}else{KN(l);c[(c[m>>2]|0)+(g*164|0)+92>>2]=0;s=c[m>>2]|0}l=c[s+(g*164|0)+160>>2]|0;if((l|0)==0){t=s}else{KN(l);c[(c[m>>2]|0)+(g*164|0)+160>>2]=0;t=c[m>>2]|0}l=g+1|0;if(l>>>0<(c[j>>2]|0)>>>0){g=l;h=t}else{p=t;break}}}if((p|0)!=0){KN(p);c[m>>2]=0}h=b+40|0;g=b+44|0;j=c[g>>2]|0;if((c[h>>2]|0)==0){u=j}else{i=0;l=j;while(1){j=c[l+(i*244|0)+24>>2]|0;if((j|0)==0){v=l}else{KN(j);c[(c[g>>2]|0)+(i*244|0)+24>>2]=0;v=c[g>>2]|0}j=c[v+(i*244|0)+28>>2]|0;if((j|0)==0){w=v}else{KN(j);c[(c[g>>2]|0)+(i*244|0)+28>>2]=0;w=c[g>>2]|0}j=c[w+(i*244|0)+152>>2]|0;do{if((j|0)==0){x=c[w+(i*244|0)+48>>2]|0;if((x|0)==0){y=w}else{KN(x);c[(c[g>>2]|0)+(i*244|0)+48>>2]=0;y=c[g>>2]|0}x=c[y+(i*244|0)+64>>2]|0;if((x|0)==0){z=y}else{KN(x);c[(c[g>>2]|0)+(i*244|0)+64>>2]=0;z=c[g>>2]|0}x=c[z+(i*244|0)+80>>2]|0;if((x|0)==0){A=z}else{KN(x);c[(c[g>>2]|0)+(i*244|0)+80>>2]=0;A=c[g>>2]|0}x=c[A+(i*244|0)+96>>2]|0;if((x|0)==0){B=A}else{KN(x);c[(c[g>>2]|0)+(i*244|0)+96>>2]=0;B=c[g>>2]|0}if((c[B+(i*244|0)+8>>2]|0)==0){C=B}else{x=0;D=B;while(1){E=c[(c[D+(i*244|0)+100>>2]|0)+(x<<4)+12>>2]|0;if((E|0)==0){F=D}else{KN(E);c[(c[(c[g>>2]|0)+(i*244|0)+100>>2]|0)+(x<<4)+12>>2]=0;F=c[g>>2]|0}E=x+1|0;if(E>>>0<(c[F+(i*244|0)+8>>2]|0)>>>0){x=E;D=F}else{C=F;break}}}D=c[C+(i*244|0)+116>>2]|0;if((D|0)==0){G=C}else{KN(D);c[(c[g>>2]|0)+(i*244|0)+116>>2]=0;G=c[g>>2]|0}D=c[G+(i*244|0)+132>>2]|0;if((D|0)==0){H=G}else{KN(D);c[(c[g>>2]|0)+(i*244|0)+132>>2]=0;H=c[g>>2]|0}D=c[H+(i*244|0)+148>>2]|0;if((D|0)==0){break}KN(D);c[(c[g>>2]|0)+(i*244|0)+148>>2]=0}else{KN(j);c[(c[g>>2]|0)+(i*244|0)+152>>2]=0}}while(0);j=c[g>>2]|0;D=c[j+(i*244|0)+100>>2]|0;if((D|0)==0){I=j}else{KN(D);c[(c[g>>2]|0)+(i*244|0)+100>>2]=0;I=c[g>>2]|0}D=I+(i*244|0)+156|0;j=c[D>>2]|0;if((j|0)!=0){KN(j);c[D>>2]=0}D=I+(i*244|0)+160|0;j=c[D>>2]|0;if((j|0)!=0){KN(j);c[D>>2]=0}D=I+(i*244|0)+164|0;j=c[D>>2]|0;if((j|0)!=0){KN(j);c[D>>2]=0}c[I+(i*244|0)+172>>2]=0;D=i+1|0;j=c[g>>2]|0;if(D>>>0<(c[h>>2]|0)>>>0){i=D;l=j}else{u=j;break}}}if((u|0)!=0){KN(u);c[g>>2]=0}l=b+48|0;i=b+56|0;h=c[i>>2]|0;if((c[l>>2]|0)==0){J=h}else{m=0;j=h;while(1){h=c[j+(m*60|0)+4>>2]|0;if((h|0)==0){K=j}else{KN(h);c[(c[i>>2]|0)+(m*60|0)+4>>2]=0;K=c[i>>2]|0}h=c[K+(m*60|0)+24>>2]|0;if((h|0)==0){L=K}else{KN(h);c[(c[i>>2]|0)+(m*60|0)+24>>2]=0;L=c[i>>2]|0}h=c[L+(m*60|0)+20>>2]|0;if((h|0)==0){M=L}else{KN(h);c[(c[i>>2]|0)+(m*60|0)+20>>2]=0;M=c[i>>2]|0}h=c[M+(m*60|0)+32>>2]|0;if((h|0)==0){N=M}else{KN(h);c[(c[i>>2]|0)+(m*60|0)+32>>2]=0;N=c[i>>2]|0}h=c[N+(m*60|0)+28>>2]|0;if((h|0)==0){O=N}else{KN(h);c[(c[i>>2]|0)+(m*60|0)+28>>2]=0;O=c[i>>2]|0}h=c[O+(m*60|0)+40>>2]|0;if((h|0)==0){P=O}else{KN(h);c[(c[i>>2]|0)+(m*60|0)+40>>2]=0;P=c[i>>2]|0}h=c[P+(m*60|0)+36>>2]|0;if((h|0)==0){Q=P}else{KN(h);c[(c[i>>2]|0)+(m*60|0)+36>>2]=0;Q=c[i>>2]|0}h=c[Q+(m*60|0)+48>>2]|0;if((h|0)==0){R=Q}else{KN(h);c[(c[i>>2]|0)+(m*60|0)+48>>2]=0;R=c[i>>2]|0}h=c[R+(m*60|0)+44>>2]|0;if((h|0)==0){S=R}else{KN(h);c[(c[i>>2]|0)+(m*60|0)+44>>2]=0;S=c[i>>2]|0}h=c[S+(m*60|0)+56>>2]|0;if((h|0)==0){T=S}else{KN(h);c[(c[i>>2]|0)+(m*60|0)+56>>2]=0;T=c[i>>2]|0}c[T+(m*60|0)+16>>2]=0;h=m+1|0;D=c[i>>2]|0;if(h>>>0<(c[l>>2]|0)>>>0){m=h;j=D}else{J=D;break}}}if((J|0)!=0){KN(J);c[i>>2]=0}j=b+60|0;m=c[j>>2]|0;l=b+64|0;g=c[l>>2]|0;if((m|0)==0){U=g}else{D=0;h=g;g=m;while(1){m=c[h+(D<<2)>>2]|0;if((m|0)==0){V=g;W=h}else{KN(m);c[(c[l>>2]|0)+(D<<2)>>2]=0;V=c[j>>2]|0;W=c[l>>2]|0}m=D+1|0;if(m>>>0<V>>>0){D=m;h=W;g=V}else{U=W;break}}}if((U|0)!=0){KN(U);c[l>>2]=0}g=b+92|0;h=c[g>>2]|0;if((h|0)==0){break}KN(h);c[g>>2]=0}}while(0);U=c[d>>2]|0;if((U|0)==0){f=b;K1(f|0,0,100)|0;return}W=c[U+12>>2]|0;if((W|0)==0){X=U}else{KV(W);X=c[d>>2]|0}W=c[X+16>>2]|0;if((W|0)==0){Y=X}else{KV(W);Y=c[d>>2]|0}W=c[Y+20>>2]|0;if((W|0)==0){Z=Y}else{KV(W);Z=c[d>>2]|0}if((Z|0)!=0){KU(Z)}c[d>>2]=0;f=b;K1(f|0,0,100)|0;return}function kQ(a){a=a|0;var b=0,d=0,e=0,f=0,h=0,i=0,j=0,k=0,l=0,m=0;b=a+96|0;d=c[b>>2]|0;if((d|0)!=0){KU(d)}d=KS(28)|0;c[b>>2]=d;if((d|0)==0){e=1;return e|0}K1(d|0,0,28)|0;f=a+48|0;h=c[f>>2]|0;i=e0(h|0,4)|0;c[d+12>>2]=KT(K?-1:i)|0;i=e0(h|0,64)|0;h=K?-1:i;c[d+16>>2]=KT(h)|0;c[d+20>>2]=KT(h)|0;if((c[a+76>>2]|0)==0){g[d+4>>2]=0.0;c[d+8>>2]=0}else{c[d+8>>2]=0;g[d+4>>2]=0.0}g[d>>2]=0.0;d=c[b>>2]|0;if((c[f>>2]|0)==0){j=0;k=d}else{h=a+56|0;i=0;l=d;do{kR(a,(c[l+20>>2]|0)+(i<<6)|0,(c[h>>2]|0)+(i*60|0)|0);i=i+1|0;m=c[f>>2]|0;l=c[b>>2]|0}while(i>>>0<m>>>0);j=m<<6;k=l}K2(c[k+16>>2]|0,c[k+20>>2]|0,j)|0;K1(c[(c[b>>2]|0)+12>>2]|0,0,c[f>>2]<<2|0)|0;e=0;return e|0}function kR(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;e=i;i=i+64|0;f=e|0;g=c[d+48>>2]|0;do{if((g|0)==0){kV(a,b,d);kU(a,f,d);kB(b,b,f);kW(a,f,d);kB(b,b,f)}else{if((c[d+16>>2]&8|0)==0){K2(b|0,g|0,64)|0;break}h=c[d+44>>2]|0;j=c[(c[a+96>>2]|0)+8>>2]|0;if((h|0)==0){K2(b|0,g+(j<<4<<2)|0,64)|0;break}else{K2(b|0,g+(c[h+(j<<2)>>2]<<2)|0,64)|0;break}}}while(0);g=c[d+12>>2]|0;if((g|0)<0){i=e;return}kR(a,f,(c[a+56>>2]|0)+(g*60|0)|0);kB(b,b,f);i=e;return}function kS(a){a=a|0;c[a+96>>2]=0;return}function kT(a){a=a|0;kP(a);return}function kU(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,h=0,j=0,k=0;e=i;i=i+16|0;f=e|0;h=c[d+32>>2]|0;if((h|0)==0){kA(b);i=e;return}if((c[d+16>>2]&2|0)==0){lw(b,h);i=e;return}j=c[d+28>>2]|0;d=c[a+96>>2]|0;a=c[d+8>>2]|0;if((j|0)==0){k=a<<2;lv(f,h+(k<<2)|0,h+(k+4<<2)|0,+g[d+4>>2])}else{lv(f,h+(c[j+(a<<2)>>2]<<2)|0,h+(c[j+(a+1<<2)>>2]<<2)|0,+g[d+4>>2])}lw(b,f);i=e;return}function kV(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,h=0,j=0,k=0;e=i;i=i+16|0;f=e|0;h=c[d+40>>2]|0;if((h|0)==0){kA(b);i=e;return}if((c[d+16>>2]&4|0)==0){kD(b,+g[h>>2],+g[h+4>>2],+g[h+8>>2]);i=e;return}j=c[d+36>>2]|0;d=c[a+96>>2]|0;a=c[d+8>>2]|0;if((j|0)==0){k=a*7|0;kI(f,h+(k<<2)|0,h+(k+7<<2)|0,+g[d+4>>2])}else{kI(f,h+(c[j+(a<<2)>>2]<<2)|0,h+(c[j+(a+1<<2)>>2]<<2)|0,+g[d+4>>2])}kD(b,+g[f>>2],+g[f+4>>2],+g[f+8>>2]);i=e;return}function kW(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,h=0,j=0,k=0;e=i;i=i+16|0;f=e|0;h=c[d+24>>2]|0;if((h|0)==0){kA(b);i=e;return}if((c[d+16>>2]&1|0)==0){kC(b,+g[h>>2],+g[h+4>>2],+g[h+8>>2]);i=e;return}j=c[d+20>>2]|0;d=c[a+96>>2]|0;a=c[d+8>>2]|0;if((j|0)==0){k=a*3|0;kI(f,h+(k<<2)|0,h+(k+3<<2)|0,+g[d+4>>2])}else{kI(f,h+(c[j+(a<<2)>>2]<<2)|0,h+(c[j+(a+1<<2)>>2]<<2)|0,+g[d+4>>2])}kC(b,+g[f>>2],+g[f+4>>2],+g[f+8>>2]);i=e;return}function kX(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,h=0,j=0,k=0,l=0.0,m=0,n=0,o=0,p=0.0,q=0;f=i;i=i+64|0;h=f|0;j=a+96|0;k=c[j>>2]|0;l=+g[k>>2];m=a+76|0;if((c[m>>2]|0)==0){g[k+4>>2]=0.0;c[(c[j>>2]|0)+8>>2]=0}else{c[k+8>>2]=0;k=c[j>>2]|0;g[k+4>>2]=0.0- +(c[k+8>>2]|0)}g[c[j>>2]>>2]=0.0;k=a+56|0;n=(d-(c[k>>2]|0)|0)/60|0;o=c[j>>2]|0;p=+g[o>>2];do{if(p==0.0){K2(b|0,(c[o+20>>2]|0)+(n<<6)|0,64)|0}else{if(p==+g[(c[o+12>>2]|0)+(n<<2)>>2]){K2(b|0,(c[o+16>>2]|0)+(n<<6)|0,64)|0;break}else{kR(a,b,d);q=c[j>>2]|0;g[(c[q+12>>2]|0)+(n<<2)>>2]=+g[q>>2];K2((c[(c[j>>2]|0)+16>>2]|0)+(n<<6)|0,b|0,64)|0;break}}}while(0);n=e;d=(n-(c[k>>2]|0)|0)/60|0;o=c[j>>2]|0;p=+g[o>>2];do{if(p==0.0){K2(h|0,(c[o+20>>2]|0)+(d<<6)|0,64)|0}else{if(p==+g[(c[o+12>>2]|0)+(d<<2)>>2]){K2(h|0,(c[o+16>>2]|0)+(d<<6)|0,64)|0;break}else{kR(a,h,e);q=c[j>>2]|0;g[(c[q+12>>2]|0)+(d<<2)>>2]=+g[q>>2];K2((c[(c[j>>2]|0)+16>>2]|0)+(d<<6)|0,h|0,64)|0;break}}}while(0);kH(h,h);kB(b,b,h);if((c[m>>2]|0)==0){g[(c[j>>2]|0)+4>>2]=0.0;c[(c[j>>2]|0)+8>>2]=0}else{c[(c[j>>2]|0)+8>>2]=~~l;m=c[j>>2]|0;g[m+4>>2]=l- +(c[m+8>>2]|0)}g[c[j>>2]>>2]=l;m=(n-(c[k>>2]|0)|0)/60|0;k=c[j>>2]|0;l=+g[k>>2];if(l==0.0){K2(h|0,(c[k+20>>2]|0)+(m<<6)|0,64)|0;kB(b,b,h);i=f;return}if(l==+g[(c[k+12>>2]|0)+(m<<2)>>2]){K2(h|0,(c[k+16>>2]|0)+(m<<6)|0,64)|0;kB(b,b,h);i=f;return}else{kR(a,h,e);e=c[j>>2]|0;g[(c[e+12>>2]|0)+(m<<2)>>2]=+g[e>>2];K2((c[(c[j>>2]|0)+16>>2]|0)+(m<<6)|0,h|0,64)|0;kB(b,b,h);i=f;return}}function kY(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;kX(b,a|0,c,d);return}function kZ(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,h=0,j=0,k=0,l=0,m=0.0,n=0,o=0.0;e=i;i=i+64|0;f=e|0;h=f;j=(c[b+52>>2]|0)+d|0;d=(c[b+56>>2]|0)+(j*60|0)|0;k=(j*60|0|0)/60|0;j=b+96|0;l=c[j>>2]|0;m=+g[l>>2];do{if(m==0.0){K2(h|0,(c[l+20>>2]|0)+(k<<6)|0,64)|0}else{if(m==+g[(c[l+12>>2]|0)+(k<<2)>>2]){K2(h|0,(c[l+16>>2]|0)+(k<<6)|0,64)|0;break}else{kR(b,f,d);n=c[j>>2]|0;g[(c[n+12>>2]|0)+(k<<2)>>2]=+g[n>>2];K2((c[(c[j>>2]|0)+16>>2]|0)+(k<<6)|0,h|0,64)|0;break}}}while(0);m=+g[f+52>>2];o=+g[f+56>>2];g[a>>2]=+g[f+48>>2];g[a+4>>2]=m;g[a+8>>2]=o;g[a+12>>2]=1.0;i=e;return}function k_(a){a=a|0;var b=0,d=0,e=0;b=c[a+32>>2]|0;d=c[a+4>>2]|0;if((b|0)==0){e=d*3|0;return e|0}else{e=d+(b<<1)|0;return e|0}return 0}function k$(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0,ai=0,aj=0,ak=0,al=0,am=0,an=0,ao=0,ap=0,aq=0,ar=0,as=0,at=0,au=0,av=0,aw=0,ax=0,ay=0,az=0,aA=0,aB=0,aC=0,aD=0,aE=0,aF=0,aG=0,aH=0,aI=0,aJ=0,aK=0,aL=0,aM=0,aN=0,aO=0,aP=0,aQ=0,aR=0,aS=0,aT=0,aU=0,aV=0,aW=0,aX=0,aY=0,aZ=0,a_=0,a$=0,a0=0,a1=0,a2=0,a3=0,a4=0,a5=0,a6=0,a7=0,a8=0,a9=0,ba=0,bb=0,bc=0,bd=0,be=0,bf=0,bg=0,bh=0,bi=0,bj=0,bk=0,bl=0,bm=0,bn=0,bo=0,bp=0,bq=0,br=0,bs=0,bt=0,bu=0,bv=0,bw=0,bx=0,by=0,bz=0,bA=0,bB=0,bC=0,bD=0,bE=0,bF=0,bG=0,bH=0,bI=0,bJ=0,bK=0,bL=0,bM=0,bN=0,bO=0,bP=0,bQ=0,bR=0,bS=0,bT=0,bU=0,bV=0,bW=0,bX=0,bY=0,bZ=0,b_=0,b$=0,b0=0,b1=0,b2=0,b3=0,b4=0,b5=0,b6=0,b7=0,b8=0,b9=0,ca=0,cb=0,cc=0,cd=0,ce=0,cf=0;f=i;i=i+8|0;g=f|0;h=b+80|0;c[h>>2]=30;j=b+92|0;c[j>>2]=0;k=b+88|0;c[k>>2]=0;l=g|0;m=e;if(!(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0)){n=0;i=f;return n|0}o=g+3|0;p=g+2|0;q=g+1|0;g=e;r=b+24|0;s=b+28|0;t=b+32|0;u=b+36|0;v=b+40|0;w=b+44|0;x=b+48|0;y=b+56|0;z=b+52|0;A=b+60|0;B=b+64|0;C=b+68|0;D=b+72|0;E=b+76|0;F=b+84|0;G=0;H=0;I=0;J=0;K=0;L=0;L4:while(1){M=a[o]|0;N=a[p]|0;O=a[q]|0;P=a[l]|0;if(!(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0)){n=0;Q=378;break}R=(N&255)<<16|(M&255)<<24|(O&255)<<8|P&255;P=(d[p]|0)<<16|(d[o]|0)<<24|(d[q]|0)<<8|(d[l]|0);L7:do{if((R|0)==(-2147482647|0)){Q=5;break L4}else if((R|0)==2e3){if(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0){c[b>>2]=(d[p]|0)<<16|(d[o]|0)<<24|(d[q]|0)<<8|(d[l]|0);S=1}else{S=0}if(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0){c[b+4>>2]=(d[p]|0)<<16|(d[o]|0)<<24|(d[q]|0)<<8|(d[l]|0);T=1}else{T=0}if(!(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0)){n=0;Q=543;break L4}c[b+8>>2]=(d[p]|0)<<16|(d[o]|0)<<24|(d[q]|0)<<8|(d[l]|0);if(S&T){U=L;V=K;W=J;X=I;Y=H;Z=G}else{n=0;Q=544;break L4}}else if((R|0)==2001){if(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0){c[b+12>>2]=(d[p]|0)<<16|(d[o]|0)<<24|(d[q]|0)<<8|(d[l]|0);_=1}else{_=0}if(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0){c[b+16>>2]=(d[p]|0)<<16|(d[o]|0)<<24|(d[q]|0)<<8|(d[l]|0);$=1}else{$=0}if(!(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0)){n=0;Q=541;break L4}c[b+20>>2]=(d[p]|0)<<16|(d[o]|0)<<24|(d[q]|0)<<8|(d[l]|0);if(_&$){U=L;V=K;W=J;X=I;Y=H;Z=G}else{n=0;Q=542;break L4}}else if((R|0)==2002){if(!(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0)){n=0;Q=385;break L4}O=(d[p]|0)<<16|(d[o]|0)<<24|(d[q]|0)<<8|(d[l]|0);c[r>>2]=O;if((O|0)==0){U=L;V=K;W=J;X=I;Y=H;Z=G;break}M=KO(O,20)|0;c[s>>2]=M;if((M|0)==0){n=0;Q=386;break L4}else{U=L;V=K;W=J;X=I;Y=H;Z=G}}else if((R|0)==2003){if(!(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0)){n=0;Q=387;break L4}M=(d[p]|0)<<16|(d[o]|0)<<24|(d[q]|0)<<8|(d[l]|0);c[t>>2]=M;if((M|0)==0){U=L;V=K;W=J;X=I;Y=H;Z=G;break}O=KO(M,40)|0;c[u>>2]=O;if((O|0)==0){n=0;Q=388;break L4}else{U=L;V=K;W=J;X=I;Y=H;Z=G}}else if((R|0)==2004){if(!(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0)){n=0;Q=389;break L4}O=(d[p]|0)<<16|(d[o]|0)<<24|(d[q]|0)<<8|(d[l]|0);c[v>>2]=O;if((O|0)==0){U=L;V=K;W=J;X=I;Y=H;Z=G;break}M=KO(O,244)|0;c[w>>2]=M;if((M|0)==0){n=0;Q=390;break L4}else{U=L;V=K;W=J;X=I;Y=H;Z=G}}else if((R|0)==2005){if(!(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0)){n=0;Q=391;break L4}M=(d[p]|0)<<16|(d[o]|0)<<24|(d[q]|0)<<8|(d[l]|0);c[x>>2]=M;if((M|0)==0){U=L;V=K;W=J;X=I;Y=H;Z=G;break}O=KO(M,60)|0;c[y>>2]=O;if((O|0)==0){n=0;Q=392;break L4}else{U=L;V=K;W=J;X=I;Y=H;Z=G}}else if((R|0)==2006){if(!(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0)){n=0;Q=393;break L4}c[z>>2]=(d[p]|0)<<16|(d[o]|0)<<24|(d[q]|0)<<8|(d[l]|0);U=L;V=K;W=J;X=I;Y=H;Z=G}else if((R|0)==2007){if(!(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0)){n=0;Q=394;break L4}O=(d[p]|0)<<16|(d[o]|0)<<24|(d[q]|0)<<8|(d[l]|0);c[A>>2]=O;if((O|0)==0){U=L;V=K;W=J;X=I;Y=H;Z=G;break}M=KO(O,4)|0;c[B>>2]=M;if((M|0)==0){n=0;Q=395;break L4}else{U=L;V=K;W=J;X=I;Y=H;Z=G}}else if((R|0)==2008){if(!(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0)){n=0;Q=396;break L4}M=(d[p]|0)<<16|(d[o]|0)<<24|(d[q]|0)<<8|(d[l]|0);c[C>>2]=M;if((M|0)==0){U=L;V=K;W=J;X=I;Y=H;Z=G;break}O=KO(M,164)|0;c[D>>2]=O;if((O|0)==0){n=0;Q=397;break L4}else{U=L;V=K;W=J;X=I;Y=H;Z=G}}else if((R|0)==2009){if(!(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0)){n=0;Q=398;break L4}c[E>>2]=(d[p]|0)<<16|(d[o]|0)<<24|(d[q]|0)<<8|(d[l]|0);U=L;V=K;W=J;X=I;Y=H;Z=G}else if((R|0)==2017){if(!(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0)){n=0;Q=399;break L4}c[h>>2]=(d[p]|0)<<16|(d[o]|0)<<24|(d[q]|0)<<8|(d[l]|0);U=L;V=K;W=J;X=I;Y=H;Z=G}else if((R|0)==2016){if(!(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0)){n=0;Q=400;break L4}c[F>>2]=(d[p]|0)<<16|(d[o]|0)<<24|(d[q]|0)<<8|(d[l]|0);U=L;V=K;W=J;X=I;Y=H;Z=G}else if((R|0)==2010){O=G+1|0;M=c[s>>2]|0;N=M+(G*20|0)+16|0;c[N>>2]=0;if(!(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0)){n=0;Q=401;break L4}aa=M+(G*20|0)|0;ab=M+(G*20|0)+4|0;ac=M+(G*20|0)+8|0;ad=M+(G*20|0)+12|0;while(1){M=a[o]|0;ae=a[p]|0;af=a[q]|0;ag=a[l]|0;if(!(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0)){n=0;Q=402;break L4}ah=(ae&255)<<16|(M&255)<<24|(af&255)<<8|ag&255;ag=(d[p]|0)<<16|(d[o]|0)<<24|(d[q]|0)<<8|(d[l]|0);do{if((ah|0)==8e3){if(!(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0)){n=0;Q=403;break L4}c[aa>>2]=(d[p]|0)<<16|(d[o]|0)<<24|(d[q]|0)<<8|(d[l]|0)}else if((ah|0)==8001){if(!(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0)){n=0;Q=404;break L4}c[ab>>2]=(d[p]|0)<<16|(d[o]|0)<<24|(d[q]|0)<<8|(d[l]|0)}else if((ah|0)==8002){if(!(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0)){n=0;Q=405;break L4}c[ac>>2]=(d[p]|0)<<16|(d[o]|0)<<24|(d[q]|0)<<8|(d[l]|0)}else if((ah|0)==8003){if(!(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0)){n=0;Q=406;break L4}c[ad>>2]=(d[p]|0)<<16|(d[o]|0)<<24|(d[q]|0)<<8|(d[l]|0)}else if((ah|0)==8004){af=ag>>>2;if((af|0)==0){break}M=KO(af,4)|0;ae=M;c[N>>2]=ae;if((M|0)==0){n=0;Q=407;break L4}else{ai=1;aj=0}do{if(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0){c[ae+(aj<<2)>>2]=(d[p]|0)<<16|(d[o]|0)<<24|(d[q]|0)<<8|(d[l]|0);ak=1}else{ak=0}ai=ai&ak;aj=aj+1|0;}while(aj>>>0<af>>>0);if(!ai){n=0;Q=408;break L4}}else if((ah|0)==(-2147481638|0)){U=L;V=K;W=J;X=I;Y=H;Z=O;break L7}else{if(!(hx[c[(c[g>>2]|0)+12>>2]&127](e,ag)|0)){n=0;Q=409;break L4}}}while(0);if(!(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0)){n=0;Q=410;break L4}}}else if((R|0)==2011){O=H+1|0;N=c[u>>2]|0;if(!(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0)){n=0;Q=411;break L4}ad=N+(H*40|0)|0;ac=N+(H*40|0)+16|0;ab=N+(H*40|0)+20|0;aa=N+(H*40|0)+24|0;ag=N+(H*40|0)+28|0;ah=N+(H*40|0)+32|0;af=N+(H*40|0)+36|0;ae=N+(H*40|0)+4|0;M=N+(H*40|0)+8|0;al=N+(H*40|0)+12|0;while(1){N=a[o]|0;am=a[p]|0;an=a[q]|0;ao=a[l]|0;if(!(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0)){n=0;Q=412;break L4}ap=(am&255)<<16|(N&255)<<24|(an&255)<<8|ao&255;if((ap|0)==7e3){if(!(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0)){n=0;Q=413;break L4}c[ad>>2]=(d[p]|0)<<16|(d[o]|0)<<24|(d[q]|0)<<8|(d[l]|0)}else if((ap|0)==7001){if(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0){c[ae>>2]=(d[p]|0)<<16|(d[o]|0)<<24|(d[q]|0)<<8|(d[l]|0);aq=1}else{aq=0}if(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0){c[M>>2]=(d[p]|0)<<16|(d[o]|0)<<24|(d[q]|0)<<8|(d[l]|0);ar=1}else{ar=0}if(!(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0)){n=0;Q=422;break L4}c[al>>2]=(d[p]|0)<<16|(d[o]|0)<<24|(d[q]|0)<<8|(d[l]|0);if(!(aq&ar)){n=0;Q=423;break L4}}else if((ap|0)==7002){if(!(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0)){n=0;Q=414;break L4}c[ac>>2]=(d[p]|0)<<16|(d[o]|0)<<24|(d[q]|0)<<8|(d[l]|0)}else if((ap|0)==7003){if(!(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0)){n=0;Q=415;break L4}c[ab>>2]=(d[p]|0)<<16|(d[o]|0)<<24|(d[q]|0)<<8|(d[l]|0)}else if((ap|0)==7004){if(!(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0)){n=0;Q=416;break L4}c[aa>>2]=(d[p]|0)<<16|(d[o]|0)<<24|(d[q]|0)<<8|(d[l]|0)}else if((ap|0)==7005){if(!(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0)){n=0;Q=417;break L4}c[ag>>2]=(d[p]|0)<<16|(d[o]|0)<<24|(d[q]|0)<<8|(d[l]|0)}else if((ap|0)==7006){if(!(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0)){n=0;Q=418;break L4}c[ah>>2]=(d[p]|0)<<16|(d[o]|0)<<24|(d[q]|0)<<8|(d[l]|0)}else if((ap|0)==7007){if(!(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0)){n=0;Q=419;break L4}c[af>>2]=(d[p]|0)<<16|(d[o]|0)<<24|(d[q]|0)<<8|(d[l]|0)}else if((ap|0)==(-2147481637|0)){U=L;V=K;W=J;X=I;Y=O;Z=G;break L7}else{if(!(hx[c[(c[g>>2]|0)+12>>2]&127](e,(d[o]|0)<<24|(d[p]|0)<<16|(d[q]|0)<<8|(d[l]|0))|0)){n=0;Q=420;break L4}}if(!(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0)){n=0;Q=421;break L4}}}else if((R|0)==2015){O=I+1|0;af=c[D>>2]|0;ah=af+(I*164|0)+4|0;ag=af+(I*164|0)+8|0;aa=af+(I*164|0)+12|0;ab=af+(I*164|0)+16|0;ac=af+(I*164|0)+20|0;al=af+(I*164|0)+24|0;M=af+(I*164|0)+28|0;ae=af+(I*164|0)+32|0;ad=af+(I*164|0)+36|0;ap=af+(I*164|0)+40|0;ao=af+(I*164|0)+100|0;K1(ah|0,-1|0,40)|0;c[ao>>2]=1;an=af+(I*164|0)+96|0;c[an>>2]=1;N=af+(I*164|0)+108|0;c[N>>2]=0;am=af+(I*164|0)+104|0;c[am>>2]=0;as=af+(I*164|0)+116|0;c[as>>2]=32774;at=af+(I*164|0)+112|0;c[at>>2]=32774;au=af+(I*164|0)+152|0;av=af+(I*164|0)+160|0;aw=af+(I*164|0)+156|0;K1(af+(I*164|0)+120|0,0,44)|0;if(!(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0)){n=0;Q=424;break L4}ax=af+(I*164|0)|0;ay=af+(I*164|0)+44|0;az=af+(I*164|0)+84|0;aA=af+(I*164|0)+88|0;aB=af+(I*164|0)+92|0;aC=af+(I*164|0)+48|0;aD=af+(I*164|0)+52|0;aE=af+(I*164|0)+56|0;aF=af+(I*164|0)+60|0;aG=af+(I*164|0)+64|0;aH=af+(I*164|0)+68|0;aI=af+(I*164|0)+72|0;aJ=af+(I*164|0)+76|0;aK=af+(I*164|0)+80|0;aL=af+(I*164|0)+120|0;aM=af+(I*164|0)+124|0;aN=af+(I*164|0)+128|0;aO=af+(I*164|0)+132|0;aP=af+(I*164|0)+136|0;aQ=af+(I*164|0)+140|0;aR=af+(I*164|0)+144|0;aS=af+(I*164|0)+148|0;while(1){af=a[o]|0;aT=a[p]|0;aU=a[q]|0;aV=a[l]|0;if(!(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0)){n=0;Q=425;break L4}aW=(aT&255)<<16|(af&255)<<24|(aU&255)<<8|aV&255;aV=(d[p]|0)<<16|(d[o]|0)<<24|(d[q]|0)<<8|(d[l]|0);if((aW|0)==3026){if(!(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0)){n=0;Q=426;break L4}c[au>>2]=(d[p]|0)<<16|(d[o]|0)<<24|(d[q]|0)<<8|(d[l]|0)}else if((aW|0)==3e3){if((aV|0)==0){aX=c[ax>>2]|0}else{aU=KO(aV,1)|0;c[ax>>2]=aU;if((aU|0)==0){n=0;Q=427;break L4}else{aX=aU}}if(!(hd[c[(c[m>>2]|0)+8>>2]&127](e,aX,aV)|0)){n=0;Q=428;break L4}}else if((aW|0)==3001){if(!(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0)){n=0;Q=429;break L4}c[ah>>2]=(d[p]|0)<<16|(d[o]|0)<<24|(d[q]|0)<<8|(d[l]|0)}else if((aW|0)==3009){if(!(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0)){n=0;Q=430;break L4}c[ag>>2]=(d[p]|0)<<16|(d[o]|0)<<24|(d[q]|0)<<8|(d[l]|0)}else if((aW|0)==3010){if(!(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0)){n=0;Q=431;break L4}c[aa>>2]=(d[p]|0)<<16|(d[o]|0)<<24|(d[q]|0)<<8|(d[l]|0)}else if((aW|0)==3011){if(!(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0)){n=0;Q=432;break L4}c[ab>>2]=(d[p]|0)<<16|(d[o]|0)<<24|(d[q]|0)<<8|(d[l]|0)}else if((aW|0)==3012){if(!(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0)){n=0;Q=433;break L4}c[ac>>2]=(d[p]|0)<<16|(d[o]|0)<<24|(d[q]|0)<<8|(d[l]|0)}else if((aW|0)==3013){if(!(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0)){n=0;Q=434;break L4}c[al>>2]=(d[p]|0)<<16|(d[o]|0)<<24|(d[q]|0)<<8|(d[l]|0)}else if((aW|0)==3014){if(!(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0)){n=0;Q=435;break L4}c[M>>2]=(d[p]|0)<<16|(d[o]|0)<<24|(d[q]|0)<<8|(d[l]|0)}else if((aW|0)==3015){if(!(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0)){n=0;Q=436;break L4}c[ae>>2]=(d[p]|0)<<16|(d[o]|0)<<24|(d[q]|0)<<8|(d[l]|0)}else if((aW|0)==3016){if(!(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0)){n=0;Q=437;break L4}c[ad>>2]=(d[p]|0)<<16|(d[o]|0)<<24|(d[q]|0)<<8|(d[l]|0)}else if((aW|0)==3017){if(!(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0)){n=0;Q=438;break L4}c[ap>>2]=(d[p]|0)<<16|(d[o]|0)<<24|(d[q]|0)<<8|(d[l]|0)}else if((aW|0)==3002){if(!(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0)){n=0;Q=439;break L4}c[ay>>2]=(d[p]|0)<<16|(d[o]|0)<<24|(d[q]|0)<<8|(d[l]|0)}else if((aW|0)==3003){if(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0){c[aC>>2]=(d[p]|0)<<16|(d[o]|0)<<24|(d[q]|0)<<8|(d[l]|0);aY=1}else{aY=0}if(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0){c[aD>>2]=(d[p]|0)<<16|(d[o]|0)<<24|(d[q]|0)<<8|(d[l]|0);aZ=1}else{aZ=0}if(!(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0)){n=0;Q=463;break L4}c[aE>>2]=(d[p]|0)<<16|(d[o]|0)<<24|(d[q]|0)<<8|(d[l]|0);if(!(aY&aZ)){n=0;Q=464;break L4}}else if((aW|0)==3004){if(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0){c[aF>>2]=(d[p]|0)<<16|(d[o]|0)<<24|(d[q]|0)<<8|(d[l]|0);a_=1}else{a_=0}if(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0){c[aG>>2]=(d[p]|0)<<16|(d[o]|0)<<24|(d[q]|0)<<8|(d[l]|0);a$=1}else{a$=0}if(!(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0)){n=0;Q=461;break L4}c[aH>>2]=(d[p]|0)<<16|(d[o]|0)<<24|(d[q]|0)<<8|(d[l]|0);if(!(a_&a$)){n=0;Q=462;break L4}}else if((aW|0)==3005){if(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0){c[aI>>2]=(d[p]|0)<<16|(d[o]|0)<<24|(d[q]|0)<<8|(d[l]|0);a0=1}else{a0=0}if(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0){c[aJ>>2]=(d[p]|0)<<16|(d[o]|0)<<24|(d[q]|0)<<8|(d[l]|0);a1=1}else{a1=0}if(!(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0)){n=0;Q=459;break L4}c[aK>>2]=(d[p]|0)<<16|(d[o]|0)<<24|(d[q]|0)<<8|(d[l]|0);if(!(a0&a1)){n=0;Q=460;break L4}}else if((aW|0)==3006){if(!(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0)){n=0;Q=440;break L4}c[az>>2]=(d[p]|0)<<16|(d[o]|0)<<24|(d[q]|0)<<8|(d[l]|0)}else if((aW|0)==3007){if((aV|0)==0){a2=c[aA>>2]|0}else{aU=KO(aV,1)|0;c[aA>>2]=aU;if((aU|0)==0){n=0;Q=441;break L4}else{a2=aU}}if(!(hd[c[(c[m>>2]|0)+8>>2]&127](e,a2,aV)|0)){n=0;Q=442;break L4}}else if((aW|0)==3008){if((aV|0)==0){a3=c[aB>>2]|0}else{aU=KO(aV,1)|0;c[aB>>2]=aU;if((aU|0)==0){n=0;Q=443;break L4}else{a3=aU}}if(!(hd[c[(c[m>>2]|0)+8>>2]&127](e,a3,aV)|0)){n=0;Q=444;break L4}}else if((aW|0)==3018){if(!(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0)){n=0;Q=445;break L4}c[an>>2]=(d[p]|0)<<16|(d[o]|0)<<24|(d[q]|0)<<8|(d[l]|0)}else if((aW|0)==3019){if(!(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0)){n=0;Q=446;break L4}c[ao>>2]=(d[p]|0)<<16|(d[o]|0)<<24|(d[q]|0)<<8|(d[l]|0)}else if((aW|0)==3020){if(!(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0)){n=0;Q=447;break L4}c[am>>2]=(d[p]|0)<<16|(d[o]|0)<<24|(d[q]|0)<<8|(d[l]|0)}else if((aW|0)==3021){if(!(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0)){n=0;Q=448;break L4}c[N>>2]=(d[p]|0)<<16|(d[o]|0)<<24|(d[q]|0)<<8|(d[l]|0)}else if((aW|0)==3022){if(!(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0)){n=0;Q=449;break L4}c[at>>2]=(d[p]|0)<<16|(d[o]|0)<<24|(d[q]|0)<<8|(d[l]|0)}else if((aW|0)==3023){if(!(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0)){n=0;Q=450;break L4}c[as>>2]=(d[p]|0)<<16|(d[o]|0)<<24|(d[q]|0)<<8|(d[l]|0)}else if((aW|0)==3024){if(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0){c[aL>>2]=(d[p]|0)<<16|(d[o]|0)<<24|(d[q]|0)<<8|(d[l]|0);a4=1}else{a4=0}if(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0){c[aM>>2]=(d[p]|0)<<16|(d[o]|0)<<24|(d[q]|0)<<8|(d[l]|0);a5=1}else{a5=0}if(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0){c[aN>>2]=(d[p]|0)<<16|(d[o]|0)<<24|(d[q]|0)<<8|(d[l]|0);a6=1}else{a6=0}if(!(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0)){n=0;Q=457;break L4}c[aO>>2]=(d[p]|0)<<16|(d[o]|0)<<24|(d[q]|0)<<8|(d[l]|0);if(!(a4&a5&a6)){n=0;Q=458;break L4}}else if((aW|0)==3025){if(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0){c[aP>>2]=(d[p]|0)<<16|(d[o]|0)<<24|(d[q]|0)<<8|(d[l]|0);a7=1}else{a7=0}if(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0){c[aQ>>2]=(d[p]|0)<<16|(d[o]|0)<<24|(d[q]|0)<<8|(d[l]|0);a8=1}else{a8=0}if(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0){c[aR>>2]=(d[p]|0)<<16|(d[o]|0)<<24|(d[q]|0)<<8|(d[l]|0);a9=1}else{a9=0}if(!(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0)){n=0;Q=455;break L4}c[aS>>2]=(d[p]|0)<<16|(d[o]|0)<<24|(d[q]|0)<<8|(d[l]|0);if(!(a7&a8&a9)){n=0;Q=456;break L4}}else if((aW|0)==3027){if((aV|0)==0){ba=c[av>>2]|0}else{aU=KO(aV,1)|0;c[av>>2]=aU;if((aU|0)==0){n=0;Q=451;break L4}else{ba=aU}}if(!(hd[c[(c[m>>2]|0)+8>>2]&127](e,ba,aV)|0)){n=0;Q=452;break L4}c[aw>>2]=aV}else if((aW|0)==(-2147481633|0)){U=L;V=K;W=J;X=O;Y=H;Z=G;break L7}else{if(!(hx[c[(c[g>>2]|0)+12>>2]&127](e,aV)|0)){n=0;Q=453;break L4}}if(!(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0)){n=0;Q=454;break L4}}}else if((R|0)==2012){O=J+1|0;aw=c[w>>2]|0;kA(aw+(J*244|0)+180|0);if(!(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0)){n=0;Q=465;break L4}av=aw+(J*244|0)|0;aS=aw+(J*244|0)+4|0;aR=aw+(J*244|0)+8|0;aQ=aw+(J*244|0)+100|0;aP=aw+(J*244|0)+28|0;aO=aw+(J*244|0)+32|0;aN=aw+(J*244|0)+152|0;aM=aw+(J*244|0)+156|0;aL=aw+(J*244|0)+160|0;as=aw+(J*244|0)+164|0;at=aw+(J*244|0)+168|0;N=aw+(J*244|0)+172|0;am=aw+(J*244|0)+12|0;ao=aw+(J*244|0)+36|0;an=aw+(J*244|0)+52|0;aB=aw+(J*244|0)+68|0;aA=aw+(J*244|0)+84|0;az=aw+(J*244|0)+104|0;aK=aw+(J*244|0)+120|0;aJ=aw+(J*244|0)+136|0;aI=0;L219:while(1){aH=a[o]|0;aG=a[p]|0;aF=a[q]|0;aE=a[l]|0;if(!(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0)){n=0;Q=466;break L4}aD=(aG&255)<<16|(aH&255)<<24|(aF&255)<<8|aE&255;aE=(d[p]|0)<<16|(d[o]|0)<<24|(d[q]|0)<<8|(d[l]|0);do{if((aD|0)==(-2147481636|0)){break L219}else if((aD|0)==6e3){if(!(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0)){n=0;Q=468;break L4}c[av>>2]=(d[p]|0)<<16|(d[o]|0)<<24|(d[q]|0)<<8|(d[l]|0);bb=aI}else if((aD|0)==6001){if(!(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0)){n=0;Q=469;break L4}c[aS>>2]=(d[p]|0)<<16|(d[o]|0)<<24|(d[q]|0)<<8|(d[l]|0);bb=aI}else if((aD|0)==6002){if(!(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0)){n=0;Q=470;break L4}aF=(d[p]|0)<<16|(d[o]|0)<<24|(d[q]|0)<<8|(d[l]|0);c[aR>>2]=aF;if((aF|0)==0){bb=aI;break}aH=KO(aF,16)|0;c[aQ>>2]=aH;if((aH|0)==0){n=0;Q=471;break L4}else{bb=aI}}else if((aD|0)==6004){aH=aE>>>2;if((aH|0)==0){bb=aI;break}aF=KO(aH,4)|0;aG=aF;c[aP>>2]=aG;if((aF|0)==0){n=0;Q=472;break L4}else{bc=1;bd=0}do{if(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0){c[aG+(bd<<2)>>2]=(d[p]|0)<<16|(d[o]|0)<<24|(d[q]|0)<<8|(d[l]|0);be=1}else{be=0}bc=bc&be;bd=bd+1|0;}while(bd>>>0<aH>>>0);if(bc){bb=aI}else{n=0;Q=473;break L4}}else if((aD|0)==6005){if(!(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0)){n=0;Q=474;break L4}c[aO>>2]=(d[p]|0)<<16|(d[o]|0)<<24|(d[q]|0)<<8|(d[l]|0);bb=aI}else if((aD|0)==6014){if((aE|0)==0){bf=c[aN>>2]|0}else{aH=KO(aE,1)|0;c[aN>>2]=aH;if((aH|0)==0){n=0;Q=475;break L4}else{bf=aH}}if(hd[c[(c[m>>2]|0)+8>>2]&127](e,bf,aE)|0){bb=aI}else{n=0;Q=476;break L4}}else if((aD|0)==6015){aH=aE>>>2;if((aH|0)==0){bb=aI;break}aG=KO(aH,4)|0;aF=aG;c[aM>>2]=aF;if((aG|0)==0){n=0;Q=477;break L4}else{bg=1;bh=0}do{if(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0){c[aF+(bh<<2)>>2]=(d[p]|0)<<16|(d[o]|0)<<24|(d[q]|0)<<8|(d[l]|0);bi=1}else{bi=0}bg=bg&bi;bh=bh+1|0;}while(bh>>>0<aH>>>0);if(bg){bb=aI}else{n=0;Q=478;break L4}}else if((aD|0)==6016){aH=aE>>>2;if((aH|0)==0){bb=aI;break}aF=KO(aH,4)|0;aG=aF;c[aL>>2]=aG;if((aF|0)==0){n=0;Q=479;break L4}else{bj=1;bk=0}do{if(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0){c[aG+(bk<<2)>>2]=(d[p]|0)<<16|(d[o]|0)<<24|(d[q]|0)<<8|(d[l]|0);bl=1}else{bl=0}bj=bj&bl;bk=bk+1|0;}while(bk>>>0<aH>>>0);if(bj){bb=aI}else{n=0;Q=480;break L4}}else if((aD|0)==6017){aH=aE>>>2;if((aH|0)==0){bb=aI;break}aG=KO(aH,4)|0;aF=aG;c[as>>2]=aF;if((aG|0)==0){n=0;Q=481;break L4}else{bm=1;bn=0}do{if(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0){c[aF+(bn<<2)>>2]=(d[p]|0)<<16|(d[o]|0)<<24|(d[q]|0)<<8|(d[l]|0);bo=1}else{bo=0}bm=bm&bo;bn=bn+1|0;}while(bn>>>0<aH>>>0);if(bm){bb=aI}else{n=0;Q=482;break L4}}else if((aD|0)==6018){if(!(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0)){n=0;Q=483;break L4}c[at>>2]=(d[p]|0)<<16|(d[o]|0)<<24|(d[q]|0)<<8|(d[l]|0);bb=aI}else if((aD|0)==6019){if(!(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0)){n=0;Q=484;break L4}c[N>>2]=(d[p]|0)<<16|(d[o]|0)<<24|(d[q]|0)<<8|(d[l]|0);bb=aI}else if((aD|0)==6020){aH=1;aF=0;do{if(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0){c[aw+(J*244|0)+180+(aF<<2)>>2]=(d[p]|0)<<16|(d[o]|0)<<24|(d[q]|0)<<8|(d[l]|0);bp=1}else{bp=0}aH=aH&bp;aF=aF+1|0;}while(aF>>>0<16>>>0);if(aH){bb=aI}else{n=0;Q=485;break L4}}else if((aD|0)==6003){if(k0(am,e,6003,1)|0){bb=aI}else{n=0;Q=486;break L4}}else if((aD|0)==6006){if(k0(ao,e,6006,(c[aN>>2]|0)==0)|0){bb=aI}else{n=0;Q=487;break L4}}else if((aD|0)==6007){if(k0(an,e,6007,(c[aN>>2]|0)==0)|0){bb=aI}else{n=0;Q=488;break L4}}else if((aD|0)==6008){if(k0(aB,e,6008,(c[aN>>2]|0)==0)|0){bb=aI}else{n=0;Q=489;break L4}}else if((aD|0)==6009){if(k0(aA,e,6009,(c[aN>>2]|0)==0)|0){bb=aI}else{n=0;Q=490;break L4}}else if((aD|0)==6010){if(k0((c[aQ>>2]|0)+(aI<<4)|0,e,6010,(c[aN>>2]|0)==0)|0){bb=aI+1|0}else{n=0;Q=491;break L4}}else if((aD|0)==6011){if(k0(az,e,6011,(c[aN>>2]|0)==0)|0){bb=aI}else{n=0;Q=492;break L4}}else if((aD|0)==6012){if(k0(aK,e,6012,(c[aN>>2]|0)==0)|0){bb=aI}else{n=0;Q=493;break L4}}else if((aD|0)==6013){if(k0(aJ,e,6013,(c[aN>>2]|0)==0)|0){bb=aI}else{n=0;Q=494;break L4}}else{if(hx[c[(c[g>>2]|0)+12>>2]&127](e,aE)|0){bb=aI}else{n=0;Q=495;break L4}}}while(0);if(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0){aI=bb}else{n=0;Q=496;break L4}}if((aI|0)!=(c[aR>>2]|0)){n=0;Q=467;break L4}am=c[aN>>2]|0;if((am|0)==0){U=L;V=K;W=O;X=I;Y=H;Z=G;break}if((a[53768]&1)==0){a[53776]=1;a[53768]=1;U=L;V=K;W=O;X=I;Y=H;Z=G;break}if((a[53776]&1)!=0){U=L;V=K;W=O;X=I;Y=H;Z=G;break}k1(am,ao,c[av>>2]|0);k1(c[aN>>2]|0,an,c[av>>2]|0);k1(c[aN>>2]|0,aB,c[av>>2]|0);k1(c[aN>>2]|0,aA,c[av>>2]|0);am=c[aN>>2]|0;if((c[aR>>2]|0)==0){bq=am}else{aw=0;N=am;while(1){k1(N,(c[aQ>>2]|0)+(aw<<4)|0,c[av>>2]|0);am=aw+1|0;at=c[aN>>2]|0;if(am>>>0<(c[aR>>2]|0)>>>0){aw=am;N=at}else{bq=at;break}}}k1(bq,az,c[av>>2]|0);k1(c[aN>>2]|0,aK,c[av>>2]|0);k1(c[aN>>2]|0,aJ,c[av>>2]|0);U=L;V=K;W=O;X=I;Y=H;Z=G}else if((R|0)==2013){N=L+1|0;aw=c[y>>2]|0;aR=aw+(L*60|0)+56|0;c[aR>>2]=0;aQ=aw+(L*60|0)+52|0;c[aQ>>2]=0;if(!(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0)){n=0;Q=497;break L4}aA=aw+(L*60|0)|0;aB=aw+(L*60|0)+4|0;an=aw+(L*60|0)+8|0;ao=aw+(L*60|0)+12|0;aI=aw+(L*60|0)+16|0;at=aw+(L*60|0)+20|0;am=aw+(L*60|0)+24|0;as=aw+(L*60|0)+28|0;aL=aw+(L*60|0)+32|0;aM=aw+(L*60|0)+36|0;aO=aw+(L*60|0)+40|0;aP=aw+(L*60|0)+44|0;aS=aw+(L*60|0)+48|0;aw=0;aE=1065353216;aD=1065353216;aF=1065353216;aG=0;aC=0;ay=0;ap=1065353216;ad=0;ae=0;M=0;L303:while(1){al=a[o]|0;ac=a[p]|0;ab=a[q]|0;aa=a[l]|0;if(!(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0)){n=0;Q=498;break L4}ag=(ac&255)<<16|(al&255)<<24|(ab&255)<<8|aa&255;aa=(d[p]|0)<<16|(d[o]|0)<<24|(d[q]|0)<<8|(d[l]|0);do{if((ag|0)==(-2147481635|0)){break L303}else if((ag|0)==5e3){if(!(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0)){n=0;Q=499;break L4}c[aA>>2]=(d[p]|0)<<16|(d[o]|0)<<24|(d[q]|0)<<8|(d[l]|0);br=aw;bs=aE;bt=aD;bu=aF;bv=aG;bw=aC;bx=ay;by=ap;bz=ad;bA=ae;bB=M}else if((ag|0)==5001){if((aa|0)==0){bC=c[aB>>2]|0}else{ab=KO(aa,1)|0;c[aB>>2]=ab;if((ab|0)==0){n=0;Q=500;break L4}else{bC=ab}}if(hd[c[(c[m>>2]|0)+8>>2]&127](e,bC,aa)|0){br=aw;bs=aE;bt=aD;bu=aF;bv=aG;bw=aC;bx=ay;by=ap;bz=ad;bA=ae;bB=M}else{n=0;Q=501;break L4}}else if((ag|0)==5002){if(!(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0)){n=0;Q=502;break L4}c[an>>2]=(d[p]|0)<<16|(d[o]|0)<<24|(d[q]|0)<<8|(d[l]|0);br=aw;bs=aE;bt=aD;bu=aF;bv=aG;bw=aC;bx=ay;by=ap;bz=ad;bA=ae;bB=M}else if((ag|0)==5003){if(!(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0)){n=0;Q=503;break L4}c[ao>>2]=(d[p]|0)<<16|(d[o]|0)<<24|(d[q]|0)<<8|(d[l]|0);br=aw;bs=aE;bt=aD;bu=aF;bv=aG;bw=aC;bx=ay;by=ap;bz=ad;bA=ae;bB=M}else if((ag|0)==5012){if(!(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0)){n=0;Q=504;break L4}c[aI>>2]=(d[p]|0)<<16|(d[o]|0)<<24|(d[q]|0)<<8|(d[l]|0);br=aw;bs=aE;bt=aD;bu=aF;bv=aG;bw=aC;bx=ay;by=ap;bz=ad;bA=ae;bB=M}else if((ag|0)==5013){ab=aa>>>2;if((ab|0)==0){br=aw;bs=aE;bt=aD;bu=aF;bv=aG;bw=aC;bx=ay;by=ap;bz=ad;bA=ae;bB=M;break}al=KO(ab,4)|0;ac=al;c[at>>2]=ac;if((al|0)==0){n=0;Q=505;break L4}else{bD=1;bE=0}do{if(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0){c[ac+(bE<<2)>>2]=(d[p]|0)<<16|(d[o]|0)<<24|(d[q]|0)<<8|(d[l]|0);bF=1}else{bF=0}bD=bD&bF;bE=bE+1|0;}while(bE>>>0<ab>>>0);if(bD){br=aw;bs=aE;bt=aD;bu=aF;bv=aG;bw=aC;bx=ay;by=ap;bz=ad;bA=ae;bB=M}else{n=0;Q=506;break L4}}else if((ag|0)==5007){ab=aa>>>2;if((ab|0)==0){br=aw;bs=aE;bt=aD;bu=aF;bv=aG;bw=aC;bx=ay;by=ap;bz=ad;bA=ae;bB=M;break}ac=KO(ab,4)|0;aH=ac;c[am>>2]=aH;if((ac|0)==0){n=0;Q=507;break L4}else{bG=1;bH=0}do{if(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0){c[aH+(bH<<2)>>2]=(d[p]|0)<<16|(d[o]|0)<<24|(d[q]|0)<<8|(d[l]|0);bI=1}else{bI=0}bG=bG&bI;bH=bH+1|0;}while(bH>>>0<ab>>>0);if(bG){br=aw;bs=aE;bt=aD;bu=aF;bv=aG;bw=aC;bx=ay;by=ap;bz=ad;bA=ae;bB=M}else{n=0;Q=508;break L4}}else if((ag|0)==5014){ab=aa>>>2;if((ab|0)==0){br=aw;bs=aE;bt=aD;bu=aF;bv=aG;bw=aC;bx=ay;by=ap;bz=ad;bA=ae;bB=M;break}aH=KO(ab,4)|0;ac=aH;c[as>>2]=ac;if((aH|0)==0){n=0;Q=509;break L4}else{bJ=1;bK=0}do{if(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0){c[ac+(bK<<2)>>2]=(d[p]|0)<<16|(d[o]|0)<<24|(d[q]|0)<<8|(d[l]|0);bL=1}else{bL=0}bJ=bJ&bL;bK=bK+1|0;}while(bK>>>0<ab>>>0);if(bJ){br=aw;bs=aE;bt=aD;bu=aF;bv=aG;bw=aC;bx=ay;by=ap;bz=ad;bA=ae;bB=M}else{n=0;Q=510;break L4}}else if((ag|0)==5008){ab=aa>>>2;if((ab|0)==0){br=aw;bs=aE;bt=aD;bu=aF;bv=aG;bw=aC;bx=ay;by=ap;bz=ad;bA=ae;bB=M;break}ac=KO(ab,4)|0;aH=ac;c[aL>>2]=aH;if((ac|0)==0){n=0;Q=511;break L4}else{bM=1;bN=0}do{if(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0){c[aH+(bN<<2)>>2]=(d[p]|0)<<16|(d[o]|0)<<24|(d[q]|0)<<8|(d[l]|0);bO=1}else{bO=0}bM=bM&bO;bN=bN+1|0;}while(bN>>>0<ab>>>0);if(bM){br=aw;bs=aE;bt=aD;bu=aF;bv=aG;bw=aC;bx=ay;by=ap;bz=ad;bA=ae;bB=M}else{n=0;Q=512;break L4}}else if((ag|0)==5015){ab=aa>>>2;if((ab|0)==0){br=aw;bs=aE;bt=aD;bu=aF;bv=aG;bw=aC;bx=ay;by=ap;bz=ad;bA=ae;bB=M;break}aH=KO(ab,4)|0;ac=aH;c[aM>>2]=ac;if((aH|0)==0){n=0;Q=513;break L4}else{bP=1;bQ=0}do{if(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0){c[ac+(bQ<<2)>>2]=(d[p]|0)<<16|(d[o]|0)<<24|(d[q]|0)<<8|(d[l]|0);bR=1}else{bR=0}bP=bP&bR;bQ=bQ+1|0;}while(bQ>>>0<ab>>>0);if(bP){br=aw;bs=aE;bt=aD;bu=aF;bv=aG;bw=aC;bx=ay;by=ap;bz=ad;bA=ae;bB=M}else{n=0;Q=514;break L4}}else if((ag|0)==5009){ab=aa>>>2;if((ab|0)==0){br=aw;bs=aE;bt=aD;bu=aF;bv=aG;bw=aC;bx=ay;by=ap;bz=ad;bA=ae;bB=M;break}ac=KO(ab,4)|0;aH=ac;c[aO>>2]=aH;if((ac|0)==0){n=0;Q=515;break L4}else{bS=1;bT=0}do{if(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0){c[aH+(bT<<2)>>2]=(d[p]|0)<<16|(d[o]|0)<<24|(d[q]|0)<<8|(d[l]|0);bU=1}else{bU=0}bS=bS&bU;bT=bT+1|0;}while(bT>>>0<ab>>>0);if(bS){br=aw;bs=aE;bt=aD;bu=aF;bv=aG;bw=aC;bx=ay;by=ap;bz=ad;bA=ae;bB=M}else{n=0;Q=516;break L4}}else if((ag|0)==5016){ab=aa>>>2;if((ab|0)==0){br=aw;bs=aE;bt=aD;bu=aF;bv=aG;bw=aC;bx=ay;by=ap;bz=ad;bA=ae;bB=M;break}aH=KO(ab,4)|0;ac=aH;c[aP>>2]=ac;if((aH|0)==0){n=0;Q=517;break L4}else{bV=1;bW=0}do{if(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0){c[ac+(bW<<2)>>2]=(d[p]|0)<<16|(d[o]|0)<<24|(d[q]|0)<<8|(d[l]|0);bX=1}else{bX=0}bV=bV&bX;bW=bW+1|0;}while(bW>>>0<ab>>>0);if(bV){br=aw;bs=aE;bt=aD;bu=aF;bv=aG;bw=aC;bx=ay;by=ap;bz=ad;bA=ae;bB=M}else{n=0;Q=518;break L4}}else if((ag|0)==5011){ab=aa>>>2;if((ab|0)==0){br=aw;bs=aE;bt=aD;bu=aF;bv=aG;bw=aC;bx=ay;by=ap;bz=ad;bA=ae;bB=M;break}ac=KO(ab,4)|0;aH=ac;c[aS>>2]=aH;if((ac|0)==0){n=0;Q=519;break L4}else{bY=1;bZ=0}do{if(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0){c[aH+(bZ<<2)>>2]=(d[p]|0)<<16|(d[o]|0)<<24|(d[q]|0)<<8|(d[l]|0);b_=1}else{b_=0}bY=bY&b_;bZ=bZ+1|0;}while(bZ>>>0<ab>>>0);if(bY){br=aw;bs=aE;bt=aD;bu=aF;bv=aG;bw=aC;bx=ay;by=ap;bz=ad;bA=ae;bB=M}else{n=0;Q=520;break L4}}else if((ag|0)==5017){if((aa|0)==0){b$=c[aR>>2]|0}else{ab=KO(aa,1)|0;c[aR>>2]=ab;if((ab|0)==0){n=0;Q=521;break L4}else{b$=ab}}if(!(hd[c[(c[m>>2]|0)+8>>2]&127](e,b$,aa)|0)){n=0;Q=522;break L4}c[aQ>>2]=aa;br=aw;bs=aE;bt=aD;bu=aF;bv=aG;bw=aC;bx=ay;by=ap;bz=ad;bA=ae;bB=M}else if((ag|0)==5004){if(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0){b0=1;b1=(d[p]|0)<<16|(d[o]|0)<<24|(d[q]|0)<<8|(d[l]|0)}else{b0=0;b1=ad}if(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0){b2=1;b3=(d[p]|0)<<16|(d[o]|0)<<24|(d[q]|0)<<8|(d[l]|0)}else{b2=0;b3=ae}if(!(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0)){n=0;Q=529;break L4}if(b0&b2){br=1;bs=aE;bt=aD;bu=aF;bv=aG;bw=aC;bx=ay;by=ap;bz=b1;bA=b3;bB=(d[p]|0)<<16|(d[o]|0)<<24|(d[q]|0)<<8|(d[l]|0)}else{n=0;Q=530;break L4}}else if((ag|0)==5005){if(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0){b4=1;b5=(d[p]|0)<<16|(d[o]|0)<<24|(d[q]|0)<<8|(d[l]|0)}else{b4=0;b5=aG}if(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0){b6=1;b7=(d[p]|0)<<16|(d[o]|0)<<24|(d[q]|0)<<8|(d[l]|0)}else{b6=0;b7=aC}if(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0){b8=1;b9=(d[p]|0)<<16|(d[o]|0)<<24|(d[q]|0)<<8|(d[l]|0)}else{b8=0;b9=ay}if(!(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0)){n=0;Q=527;break L4}if(b4&b6&b8){br=1;bs=aE;bt=aD;bu=aF;bv=b5;bw=b7;bx=b9;by=(d[p]|0)<<16|(d[o]|0)<<24|(d[q]|0)<<8|(d[l]|0);bz=ad;bA=ae;bB=M}else{n=0;Q=528;break L4}}else if((ag|0)==5006){if(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0){ca=1;cb=(d[p]|0)<<16|(d[o]|0)<<24|(d[q]|0)<<8|(d[l]|0)}else{ca=0;cb=aE}if(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0){cc=1;cd=(d[p]|0)<<16|(d[o]|0)<<24|(d[q]|0)<<8|(d[l]|0)}else{cc=0;cd=aD}if(!(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0)){n=0;Q=525;break L4}if(ca&cc){br=1;bs=cb;bt=cd;bu=(d[p]|0)<<16|(d[o]|0)<<24|(d[q]|0)<<8|(d[l]|0);bv=aG;bw=aC;bx=ay;by=ap;bz=ad;bA=ae;bB=M}else{n=0;Q=526;break L4}}else{if(hx[c[(c[g>>2]|0)+12>>2]&127](e,aa)|0){br=aw;bs=aE;bt=aD;bu=aF;bv=aG;bw=aC;bx=ay;by=ap;bz=ad;bA=ae;bB=M}else{n=0;Q=523;break L4}}}while(0);if(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0){aw=br;aE=bs;aD=bt;aF=bu;aG=bv;aC=bw;ay=bx;ap=by;ad=bz;ae=bA;M=bB}else{n=0;Q=524;break L4}}if(!aw){U=N;V=K;W=J;X=I;Y=H;Z=G;break}if((c[am>>2]|0)==0){aQ=KM(12)|0;c[am>>2]=aQ;c[aQ>>2]=ad;c[aQ+4>>2]=ae;c[aQ+8>>2]=M}else{c[aI>>2]=c[aI>>2]|1}if((c[aL>>2]|0)==0){aQ=KM(16)|0;c[aL>>2]=aQ;c[aQ>>2]=aG;c[aQ+4>>2]=aC;c[aQ+8>>2]=ay;c[aQ+12>>2]=ap}else{c[aI>>2]=c[aI>>2]|2}if((c[aO>>2]|0)==0){aQ=KM(28)|0;c[aO>>2]=aQ;c[aQ>>2]=aE;c[aQ+4>>2]=aD;c[aQ+8>>2]=aF;aR=aQ+12|0;c[aR>>2]=c[6689];c[aR+4>>2]=c[6690];c[aR+8>>2]=c[6691];c[aR+12>>2]=c[6692];U=N;V=K;W=J;X=I;Y=H;Z=G;break}else{c[aI>>2]=c[aI>>2]|4;U=N;V=K;W=J;X=I;Y=H;Z=G;break}}else if((R|0)==2014){aR=K+1|0;aQ=c[B>>2]|0;if(!(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0)){n=0;Q=531;break L4}aS=aQ+(K<<2)|0;while(1){aQ=a[o]|0;aP=a[p]|0;aM=a[q]|0;as=a[l]|0;if(!(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0)){n=0;Q=532;break L4}at=(aP&255)<<16|(aQ&255)<<24|(aM&255)<<8|as&255;as=(d[p]|0)<<16|(d[o]|0)<<24|(d[q]|0)<<8|(d[l]|0);if((at|0)==4e3){if((as|0)==0){ce=c[aS>>2]|0}else{aM=KO(as,1)|0;c[aS>>2]=aM;if((aM|0)==0){n=0;Q=533;break L4}else{ce=aM}}if(!(hd[c[(c[m>>2]|0)+8>>2]&127](e,ce,as)|0)){n=0;Q=534;break L4}}else if((at|0)==(-2147481634|0)){U=L;V=aR;W=J;X=I;Y=H;Z=G;break L7}else{if(!(hx[c[(c[g>>2]|0)+12>>2]&127](e,as)|0)){n=0;Q=535;break L4}}if(!(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0)){n=0;Q=536;break L4}}}else if((R|0)==2018){if((P|0)==0){cf=c[j>>2]|0}else{aR=KO(P,1)|0;c[j>>2]=aR;if((aR|0)==0){n=0;Q=537;break L4}else{cf=aR}}if(!(hd[c[(c[m>>2]|0)+8>>2]&127](e,cf,P)|0)){n=0;Q=538;break L4}c[k>>2]=P;U=L;V=K;W=J;X=I;Y=H;Z=G}else{if(hx[c[(c[g>>2]|0)+12>>2]&127](e,P)|0){U=L;V=K;W=J;X=I;Y=H;Z=G}else{n=0;Q=539;break L4}}}while(0);if(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0){G=Z;H=Y;I=X;J=W;K=V;L=U}else{n=0;Q=540;break}}if((Q|0)==5){if((G|0)!=(c[r>>2]|0)){n=0;i=f;return n|0}if((H|0)!=(c[t>>2]|0)){n=0;i=f;return n|0}if((I|0)!=(c[C>>2]|0)){n=0;i=f;return n|0}if((J|0)!=(c[v>>2]|0)){n=0;i=f;return n|0}if((K|0)!=(c[A>>2]|0)){n=0;i=f;return n|0}n=(L|0)==(c[x>>2]|0);i=f;return n|0}else if((Q|0)==378){i=f;return n|0}else if((Q|0)==385){i=f;return n|0}else if((Q|0)==386){i=f;return n|0}else if((Q|0)==387){i=f;return n|0}else if((Q|0)==388){i=f;return n|0}else if((Q|0)==389){i=f;return n|0}else if((Q|0)==390){i=f;return n|0}else if((Q|0)==391){i=f;return n|0}else if((Q|0)==392){i=f;return n|0}else if((Q|0)==393){i=f;return n|0}else if((Q|0)==394){i=f;return n|0}else if((Q|0)==395){i=f;return n|0}else if((Q|0)==396){i=f;return n|0}else if((Q|0)==397){i=f;return n|0}else if((Q|0)==398){i=f;return n|0}else if((Q|0)==399){i=f;return n|0}else if((Q|0)==400){i=f;return n|0}else if((Q|0)==401){i=f;return n|0}else if((Q|0)==402){i=f;return n|0}else if((Q|0)==403){i=f;return n|0}else if((Q|0)==404){i=f;return n|0}else if((Q|0)==405){i=f;return n|0}else if((Q|0)==406){i=f;return n|0}else if((Q|0)==407){i=f;return n|0}else if((Q|0)==408){i=f;return n|0}else if((Q|0)==409){i=f;return n|0}else if((Q|0)==410){i=f;return n|0}else if((Q|0)==411){i=f;return n|0}else if((Q|0)==412){i=f;return n|0}else if((Q|0)==413){i=f;return n|0}else if((Q|0)==414){i=f;return n|0}else if((Q|0)==415){i=f;return n|0}else if((Q|0)==416){i=f;return n|0}else if((Q|0)==417){i=f;return n|0}else if((Q|0)==418){i=f;return n|0}else if((Q|0)==419){i=f;return n|0}else if((Q|0)==420){i=f;return n|0}else if((Q|0)==421){i=f;return n|0}else if((Q|0)==422){i=f;return n|0}else if((Q|0)==423){i=f;return n|0}else if((Q|0)==424){i=f;return n|0}else if((Q|0)==425){i=f;return n|0}else if((Q|0)==426){i=f;return n|0}else if((Q|0)==427){i=f;return n|0}else if((Q|0)==428){i=f;return n|0}else if((Q|0)==429){i=f;return n|0}else if((Q|0)==430){i=f;return n|0}else if((Q|0)==431){i=f;return n|0}else if((Q|0)==432){i=f;return n|0}else if((Q|0)==433){i=f;return n|0}else if((Q|0)==434){i=f;return n|0}else if((Q|0)==435){i=f;return n|0}else if((Q|0)==436){i=f;return n|0}else if((Q|0)==437){i=f;return n|0}else if((Q|0)==438){i=f;return n|0}else if((Q|0)==439){i=f;return n|0}else if((Q|0)==440){i=f;return n|0}else if((Q|0)==441){i=f;return n|0}else if((Q|0)==442){i=f;return n|0}else if((Q|0)==443){i=f;return n|0}else if((Q|0)==444){i=f;return n|0}else if((Q|0)==445){i=f;return n|0}else if((Q|0)==446){i=f;return n|0}else if((Q|0)==447){i=f;return n|0}else if((Q|0)==448){i=f;return n|0}else if((Q|0)==449){i=f;return n|0}else if((Q|0)==450){i=f;return n|0}else if((Q|0)==451){i=f;return n|0}else if((Q|0)==452){i=f;return n|0}else if((Q|0)==453){i=f;return n|0}else if((Q|0)==454){i=f;return n|0}else if((Q|0)==455){i=f;return n|0}else if((Q|0)==456){i=f;return n|0}else if((Q|0)==457){i=f;return n|0}else if((Q|0)==458){i=f;return n|0}else if((Q|0)==459){i=f;return n|0}else if((Q|0)==460){i=f;return n|0}else if((Q|0)==461){i=f;return n|0}else if((Q|0)==462){i=f;return n|0}else if((Q|0)==463){i=f;return n|0}else if((Q|0)==464){i=f;return n|0}else if((Q|0)==465){i=f;return n|0}else if((Q|0)==466){i=f;return n|0}else if((Q|0)==467){i=f;return n|0}else if((Q|0)==468){i=f;return n|0}else if((Q|0)==469){i=f;return n|0}else if((Q|0)==470){i=f;return n|0}else if((Q|0)==471){i=f;return n|0}else if((Q|0)==472){i=f;return n|0}else if((Q|0)==473){i=f;return n|0}else if((Q|0)==474){i=f;return n|0}else if((Q|0)==475){i=f;return n|0}else if((Q|0)==476){i=f;return n|0}else if((Q|0)==477){i=f;return n|0}else if((Q|0)==478){i=f;return n|0}else if((Q|0)==479){i=f;return n|0}else if((Q|0)==480){i=f;return n|0}else if((Q|0)==481){i=f;return n|0}else if((Q|0)==482){i=f;return n|0}else if((Q|0)==483){i=f;return n|0}else if((Q|0)==484){i=f;return n|0}else if((Q|0)==485){i=f;return n|0}else if((Q|0)==486){i=f;return n|0}else if((Q|0)==487){i=f;return n|0}else if((Q|0)==488){i=f;return n|0}else if((Q|0)==489){i=f;return n|0}else if((Q|0)==490){i=f;return n|0}else if((Q|0)==491){i=f;return n|0}else if((Q|0)==492){i=f;return n|0}else if((Q|0)==493){i=f;return n|0}else if((Q|0)==494){i=f;return n|0}else if((Q|0)==495){i=f;return n|0}else if((Q|0)==496){i=f;return n|0}else if((Q|0)==497){i=f;return n|0}else if((Q|0)==498){i=f;return n|0}else if((Q|0)==499){i=f;return n|0}else if((Q|0)==500){i=f;return n|0}else if((Q|0)==501){i=f;return n|0}else if((Q|0)==502){i=f;return n|0}else if((Q|0)==503){i=f;return n|0}else if((Q|0)==504){i=f;return n|0}else if((Q|0)==505){i=f;return n|0}else if((Q|0)==506){i=f;return n|0}else if((Q|0)==507){i=f;return n|0}else if((Q|0)==508){i=f;return n|0}else if((Q|0)==509){i=f;return n|0}else if((Q|0)==510){i=f;return n|0}else if((Q|0)==511){i=f;return n|0}else if((Q|0)==512){i=f;return n|0}else if((Q|0)==513){i=f;return n|0}else if((Q|0)==514){i=f;return n|0}else if((Q|0)==515){i=f;return n|0}else if((Q|0)==516){i=f;return n|0}else if((Q|0)==517){i=f;return n|0}else if((Q|0)==518){i=f;return n|0}else if((Q|0)==519){i=f;return n|0}else if((Q|0)==520){i=f;return n|0}else if((Q|0)==521){i=f;return n|0}else if((Q|0)==522){i=f;return n|0}else if((Q|0)==523){i=f;return n|0}else if((Q|0)==524){i=f;return n|0}else if((Q|0)==525){i=f;return n|0}else if((Q|0)==526){i=f;return n|0}else if((Q|0)==527){i=f;return n|0}else if((Q|0)==528){i=f;return n|0}else if((Q|0)==529){i=f;return n|0}else if((Q|0)==530){i=f;return n|0}else if((Q|0)==531){i=f;return n|0}else if((Q|0)==532){i=f;return n|0}else if((Q|0)==533){i=f;return n|0}else if((Q|0)==534){i=f;return n|0}else if((Q|0)==535){i=f;return n|0}else if((Q|0)==536){i=f;return n|0}else if((Q|0)==537){i=f;return n|0}else if((Q|0)==538){i=f;return n|0}else if((Q|0)==539){i=f;return n|0}else if((Q|0)==540){i=f;return n|0}else if((Q|0)==541){i=f;return n|0}else if((Q|0)==542){i=f;return n|0}else if((Q|0)==543){i=f;return n|0}else if((Q|0)==544){i=f;return n|0}return 0}function k0(a,e,f,g){a=a|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0;h=i;i=i+16|0;j=h|0;k=h+8|0;l=k|0;m=e;if(!(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0)){n=0;i=h;return n|0}o=k+3|0;p=k+2|0;q=k+1|0;k=f|-2147483648;f=e;r=a|0;s=a+4|0;t=a+8|0;u=a+12|0;a=j|0;v=j+1|0;L4:while(1){j=(d[p]|0)<<16|(d[o]|0)<<24|(d[q]|0)<<8|(d[l]|0);if(!(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0)){n=0;w=40;break}x=(d[p]|0)<<16|(d[o]|0)<<24|(d[q]|0)<<8|(d[l]|0);if((j|0)==(k|0)){n=1;w=39;break}L8:do{if((j|0)==9003){if(!g){if(!(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0)){n=0;w=49;break L4}c[u>>2]=(d[p]|0)<<16|(d[o]|0)<<24|(d[q]|0)<<8|(d[l]|0);break}switch(c[r>>2]|0){case 11:case 12:case 3:case 16:{y=x>>>1;if((y|0)==0){z=0}else{A=KO(y,2)|0;B=A;if((A|0)==0){n=0;w=41;break L4}else{C=1;D=0}do{if(hd[c[(c[m>>2]|0)+8>>2]&127](e,a,2)|0){b[B+(D<<1)>>1]=(d[v]|0)<<8|(d[a]|0);E=1}else{E=0}C=C&E;D=D+1|0;}while(D>>>0<y>>>0);if(C){z=B}else{n=0;w=45;break L4}}c[u>>2]=z;break L8;break};case 10:case 15:case 13:case 14:{if((x|0)==0){F=c[u>>2]|0}else{y=KO(x,1)|0;c[u>>2]=y;if((y|0)==0){n=0;w=43;break L4}else{F=y}}if(hd[c[(c[m>>2]|0)+8>>2]&127](e,F,x)|0){break L8}else{n=0;w=38;break L4}break};case 1:case 2:case 17:case 4:case 18:case 5:case 6:case 7:case 8:case 9:{y=x>>>2;if((y|0)==0){G=0}else{A=KO(y,4)|0;H=A;if((A|0)==0){n=0;w=50;break L4}else{I=1;J=0}do{if(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0){c[H+(J<<2)>>2]=(d[p]|0)<<16|(d[o]|0)<<24|(d[q]|0)<<8|(d[l]|0);K=1}else{K=0}I=I&K;J=J+1|0;}while(J>>>0<y>>>0);if(I){G=H}else{n=0;w=48;break L4}}c[u>>2]=G;break L8;break};default:{break L8}}}else if((j|0)==9e3){if(!(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0)){n=0;w=37;break L4}c[r>>2]=(d[p]|0)<<16|(d[o]|0)<<24|(d[q]|0)<<8|(d[l]|0)}else if((j|0)==9001){if(!(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0)){n=0;w=44;break L4}c[s>>2]=(d[p]|0)<<16|(d[o]|0)<<24|(d[q]|0)<<8|(d[l]|0)}else if((j|0)==9002){if(!(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0)){n=0;w=51;break L4}c[t>>2]=(d[p]|0)<<16|(d[o]|0)<<24|(d[q]|0)<<8|(d[l]|0)}else{if(!(hx[c[(c[f>>2]|0)+12>>2]&127](e,x)|0)){n=0;w=47;break L4}}}while(0);if(!(hd[c[(c[m>>2]|0)+8>>2]&127](e,l,4)|0)){n=0;w=46;break}}if((w|0)==50){i=h;return n|0}else if((w|0)==51){i=h;return n|0}else if((w|0)==48){i=h;return n|0}else if((w|0)==49){i=h;return n|0}else if((w|0)==44){i=h;return n|0}else if((w|0)==45){i=h;return n|0}else if((w|0)==46){i=h;return n|0}else if((w|0)==43){i=h;return n|0}else if((w|0)==47){i=h;return n|0}else if((w|0)==38){i=h;return n|0}else if((w|0)==39){i=h;return n|0}else if((w|0)==37){i=h;return n|0}else if((w|0)==40){i=h;return n|0}else if((w|0)==41){i=h;return n|0}return 0}function k1(a,e,f){a=a|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;g=e+4|0;h=c[g>>2]|0;if((h|0)==0){return}switch(c[e>>2]|0){case 1:case 2:case 17:case 4:case 18:case 5:case 6:case 7:case 8:case 9:{if((f|0)==0){return}i=e+8|0;j=a+(c[e+12>>2]|0)|0;k=0;l=h;while(1){if((l|0)==0){m=0}else{n=j;o=0;while(1){p=o<<2;c[n+(o<<2)>>2]=(d[j+(p|1)|0]|0)<<8|(d[j+p|0]|0)|(d[j+(p|2)|0]|0)<<16|(d[j+(p|3)|0]|0)<<24;p=o+1|0;q=c[g>>2]|0;if(p>>>0<q>>>0){o=p}else{m=q;break}}}o=k+1|0;if(o>>>0<f>>>0){j=j+(c[i>>2]|0)|0;k=o;l=m}else{break}}return};case 11:case 12:case 3:case 16:{if((f|0)==0){return}m=e+8|0;l=a+(c[e+12>>2]|0)|0;e=0;a=h;while(1){if((a|0)==0){r=0}else{h=l;k=0;while(1){i=k<<1;b[h+(k<<1)>>1]=(d[l+(i|1)|0]|0)<<8|(d[l+i|0]|0);i=k+1|0;j=c[g>>2]|0;if(i>>>0<j>>>0){k=i}else{r=j;break}}}k=e+1|0;if(k>>>0<f>>>0){l=l+(c[m>>2]|0)|0;e=k;a=r}else{break}}return};default:{return}}}function k2(a){a=a|0;var b=0;if((a|0)==0){b=0}else{KV(a);b=1}return b|0}function k3(a){a=a|0;lk(55200,(a|0)!=0?a:50104)|0;return}function k4(b,d,e){b=b|0;d=d|0;e=e|0;c[b>>2]=33704;a[b+4|0]=1;a[b+5|0]=1;c[b+8>>2]=e;c[b+12>>2]=d;c[b+16>>2]=0;return}function k5(b){b=b|0;var d=0,e=0;c[b>>2]=33704;if((a[b+4|0]&1)==0){d=b;KU(d);return}e=c[12260]|0;if(!((a[b+5|0]&1)==0&(e|0)!=0)){d=b;KU(d);return}g3[e&511](c[b+16>>2]|0)|0;d=b;KU(d);return}function k6(b){b=b|0;var d=0,e=0,f=0;c[b>>2]=33704;d=b+4|0;if((a[d]&1)==0){return}e=b+5|0;f=c[12260]|0;if((a[e]&1)==0&(f|0)!=0){g3[f&511](c[b+16>>2]|0)|0}a[e]=0;a[d]=0;c[b+12>>2]=0;c[b+8>>2]=0;return}function k7(b){b=b|0;return(a[b+4|0]&1)!=0|0}function k8(a){a=a|0;return c[a+8>>2]|0}function k9(a){a=a|0;return c[a+12>>2]|0}function la(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0;b=c[13798]|0;if((c[13796]|0)>0){d=0;e=b;while(1){do{if((a[e+(d<<4)+12|0]&1)==0){f=e}else{g=c[e+(d<<4)>>2]|0;if((g|0)==0){h=e}else{KV(g);h=c[13798]|0}g=c[h+(d<<4)+4>>2]|0;if((g|0)==0){f=h;break}KV(g);f=c[13798]|0}}while(0);g=d+1|0;if((g|0)<(c[13796]|0)){d=g;e=f}else{i=f;break}}}else{i=b}if((i|0)==0){return}KV(i);return}function lb(){le(55200);ep(824,55200,q|0)|0;ep(348,55176,q|0)|0;return}function lc(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;c[b>>2]=35408;f=b+4|0;c[f>>2]=0;g=b+12|0;c[g>>2]=0;if((e|0)!=-1){h=e+1|0;c[g>>2]=h;i=KM(h)|0;c[f>>2]=i;K2(i|0,d|0,e)|0;c[b+8>>2]=e;a[i+e|0]=0;return}if((d|0)==0){c[g>>2]=1;g=KM(1)|0;c[f>>2]=g;c[b+8>>2]=0;a[g]=0;return}else{ld(b,d)|0;return}}function ld(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;if((d|0)==0){e=b+12|0;f=b+4|0;g=c[f>>2]|0;if((c[e>>2]|0)==0){KN(g);c[e>>2]=1;e=KM(1)|0;c[f>>2]=e;h=e}else{h=g}c[b+8>>2]=0;a[h]=0;return b|0}h=K0(d|0)|0;g=b+12|0;e=b+4|0;f=c[e>>2]|0;if((c[g>>2]|0)>>>0>h>>>0){K3(f|0,d|0,h|0)|0;i=c[e>>2]|0}else{KN(f);f=h+1|0;c[g>>2]=f;g=KM(f)|0;c[e>>2]=g;K2(g|0,d|0,h)|0;i=g}c[b+8>>2]=h;a[i+h|0]=0;return b|0}function le(a){a=a|0;c[a>>2]=35408;c[a+8>>2]=0;c[a+12>>2]=1;c[a+4>>2]=KO(1,1)|0;return}function lf(a){a=a|0;var b=0;c[a>>2]=35408;b=c[a+4>>2]|0;if((b|0)!=0){KN(b)}KU(a);return}function lg(a){a=a|0;var b=0;c[a>>2]=35408;b=a+4|0;a=c[b>>2]|0;if((a|0)==0){return}KN(a);c[b>>2]=0;return}function lh(a){a=a|0;return c[a+4>>2]|0}function li(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0;e=c[d+4>>2]|0;f=c[d+8>>2]|0;d=b+12|0;g=b+4|0;h=c[g>>2]|0;if((c[d>>2]|0)>>>0>f>>>0){K3(h|0,e|0,f|0)|0;i=c[g>>2]|0;j=b+8|0;c[j>>2]=f;k=i+f|0;a[k]=0;return b|0}else{KN(h);h=f+1|0;c[d>>2]=h;d=KM(h)|0;c[g>>2]=d;K2(d|0,e|0,f)|0;i=d;j=b+8|0;c[j>>2]=f;k=i+f|0;a[k]=0;return b|0}return 0}function lj(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;if((d|0)==0){return b|0}e=K0(d|0)|0;f=b+4|0;g=c[f>>2]|0;h=b+8|0;i=c[h>>2]|0;j=e+1+i|0;k=b+12|0;if((c[k>>2]|0)>>>0<j>>>0){l=KM(j)|0;c[k>>2]=j;K3(l|0,g|0,i|0)|0;a[l+(i+e)|0]=0;m=l}else{m=g}K3(m+i|0,d|0,e|0)|0;d=(c[h>>2]|0)+e|0;c[h>>2]=d;a[m+d|0]=0;d=c[f>>2]|0;if((m|0)==(d|0)){return b|0}if((d|0)!=0){KN(d);c[f>>2]=0}c[f>>2]=m;return b|0}function lk(a,b){a=a|0;b=b|0;return ld(a,b)|0}function ll(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0;f=c[d+8>>2]|0;g=c[d+4>>2]|0;d=f+1|0;h=KM(d)|0;K2(h|0,g|0,f)|0;a[h+f|0]=0;do{if((e|0)==0){i=h;j=f}else{g=K0(e|0)|0;k=d+g|0;if(d>>>0>=k>>>0){l=g+f|0;K3(h+f|0,e|0,g|0)|0;a[h+l|0]=0;i=h;j=l;break}l=KM(k)|0;K2(l|0,h|0,f)|0;k=g+f|0;a[l+k|0]=0;K3(l+f|0,e|0,g|0)|0;a[l+k|0]=0;if((l|0)==(h|0)){i=h;j=k;break}if((h|0)==0){i=l;j=k;break}KN(h);i=l;j=k}}while(0);c[b>>2]=35408;h=j+1|0;c[b+12>>2]=h;e=KM(h)|0;c[b+4>>2]=e;K2(e|0,i|0,j)|0;c[b+8>>2]=j;a[e+j|0]=0;if((i|0)==0){return}KN(i);return}function lm(a,b){a=a|0;b=b|0;g[a>>2]=+g[b>>2];g[a+4>>2]=+g[b+4>>2];g[a+8>>2]=+g[b+8>>2];return}function ln(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0,e=0.0,f=0.0;d=+g[b>>2];e=+g[b+4>>2];f=+g[b+8>>2];g[a>>2]=d*+g[c>>2]+e*+g[c+4>>2]+f*+g[c+8>>2];g[a+4>>2]=d*+g[c+12>>2]+e*+g[c+16>>2]+f*+g[c+20>>2];g[a+8>>2]=d*+g[c+24>>2]+e*+g[c+28>>2]+f*+g[c+32>>2];return}function lo(a,b){a=a|0;b=b|0;g[a>>2]=+g[b>>2];g[a+4>>2]=+g[b+4>>2];g[a+8>>2]=+g[b+8>>2];g[a+12>>2]=+g[b+16>>2];g[a+16>>2]=+g[b+20>>2];g[a+20>>2]=+g[b+24>>2];g[a+24>>2]=+g[b+32>>2];g[a+28>>2]=+g[b+36>>2];g[a+32>>2]=+g[b+40>>2];return}function lp(a,b){a=a|0;b=+b;kE(a|0,b);return}function lq(a,b){a=a|0;b=+b;kF(a|0,b);return}function lr(a,b){a=a|0;b=+b;kG(a|0,b);return}function ls(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0,e=0.0,f=0.0,h=0.0,i=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0;d=+g[b>>2];e=+g[c>>2];f=+g[b+16>>2];h=+g[c+4>>2];i=+g[b+32>>2];j=+g[c+8>>2];k=+g[b+48>>2];l=+g[c+12>>2];g[a>>2]=d*e+f*h+i*j+k*l;m=+g[b+4>>2];n=+g[b+20>>2];o=+g[b+36>>2];p=+g[b+52>>2];g[a+4>>2]=m*e+n*h+o*j+p*l;q=+g[b+8>>2];r=+g[b+24>>2];s=+g[b+40>>2];t=+g[b+56>>2];g[a+8>>2]=q*e+r*h+s*j+t*l;u=+g[b+12>>2];v=+g[b+28>>2];w=+g[b+44>>2];x=+g[b+60>>2];g[a+12>>2]=u*e+v*h+w*j+x*l;l=+g[c+16>>2];j=+g[c+20>>2];h=+g[c+24>>2];e=+g[c+28>>2];g[a+16>>2]=d*l+f*j+i*h+k*e;g[a+20>>2]=m*l+n*j+o*h+p*e;g[a+24>>2]=q*l+r*j+s*h+t*e;g[a+28>>2]=u*l+v*j+w*h+x*e;e=+g[c+32>>2];h=+g[c+36>>2];j=+g[c+40>>2];l=+g[c+44>>2];g[a+32>>2]=d*e+f*h+i*j+k*l;g[a+36>>2]=m*e+n*h+o*j+p*l;g[a+40>>2]=q*e+r*h+s*j+t*l;g[a+44>>2]=u*e+v*h+w*j+x*l;l=+g[c+48>>2];j=+g[c+52>>2];h=+g[c+56>>2];e=+g[c+60>>2];g[a+48>>2]=d*l+f*j+i*h+k*e;g[a+52>>2]=m*l+n*j+o*h+p*e;g[a+56>>2]=q*l+r*j+s*h+t*e;g[a+60>>2]=u*l+v*j+w*h+x*e;return}function lt(a,b){a=a|0;b=b|0;var c=0.0,d=0.0,e=0.0,f=0.0,h=0.0,i=0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0;c=+g[b>>2];d=+g[b+20>>2];e=c*d;f=+g[b+40>>2];h=e*f;i=h<0.0;j=h+0.0;h=i?0.0:j;k=i?j:0.0;j=+g[b+16>>2];l=+g[b+36>>2];m=j*l;n=+g[b+8>>2];o=m*n;if(o<0.0){p=k+o;q=h}else{p=k;q=h+o}o=+g[b+32>>2];h=+g[b+4>>2];k=o*h;r=+g[b+24>>2];s=k*r;if(s<0.0){t=p+s;u=q}else{t=p;u=q+s}s=d*(-0.0-o)*n;if(s<0.0){v=t+s;w=u}else{v=t;w=u+s}s=h*(-0.0-j)*f;if(s<0.0){x=v+s;y=w}else{x=v;y=w+s}s=l*(-0.0-c)*r;if(s<0.0){z=x+s;A=y}else{z=x;A=y+s}s=A+z;if(s==0.0){return}z=1.0/s;s=z*(d*f-l*r);g[a>>2]=s;A=-0.0-z*(h*f-l*n);g[a+4>>2]=A;y=z*(h*r-d*n);g[a+8>>2]=y;x=-0.0-z*(j*f-o*r);g[a+16>>2]=x;w=z*(c*f-o*n);g[a+20>>2]=w;f=-0.0-z*(c*r-j*n);g[a+24>>2]=f;n=z*(m-o*d);g[a+32>>2]=n;d=-0.0-z*(c*l-k);g[a+36>>2]=d;k=z*(e-j*h);g[a+40>>2]=k;h=+g[b+48>>2];j=+g[b+52>>2];e=+g[b+56>>2];g[a+48>>2]=-0.0-(h*s+j*x+e*n);g[a+52>>2]=-0.0-(h*A+j*w+e*d);g[a+56>>2]=-0.0-(h*y+j*f+e*k);g[a+12>>2]=0.0;g[a+28>>2]=0.0;g[a+44>>2]=0.0;g[a+60>>2]=1.0;return}function lu(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+1040|0;e=d|0;f=e;c[f>>2]=b;c[f+4>>2]=0;f=d+16|0;dI(f|0,1024,a|0,e|0)|0;eb(f|0,c[t>>2]|0)|0;i=d;return}function lv(a,b,d,e){a=a|0;b=b|0;d=d|0;e=+e;var f=0,h=0,j=0,k=0,l=0.0,m=0.0,n=0.0,o=0,p=0,q=0.0,r=0,s=0,t=0.0,u=0.0;f=i;i=i+16|0;h=f|0;if(e<0.0|e>1.0){g[a>>2]=0.0;g[a+4>>2]=0.0;g[a+8>>2]=0.0;g[a+12>>2]=1.0;i=f;return}j=b+12|0;k=d+12|0;l=+g[k>>2];m=+g[b>>2];n=+g[d>>2];o=b+4|0;p=d+4|0;q=+g[p>>2];r=b+8|0;s=d+8|0;t=+g[s>>2];u=+g[j>>2]*l+m*n+ +g[o>>2]*q+ +g[r>>2]*t;if(u<0.0){g[h>>2]=-0.0-n;g[h+4>>2]=-0.0-q;g[h+8>>2]=-0.0-t;g[h+12>>2]=-0.0-l;lv(a,b,h,e);i=f;return}l=+$(u<1.0?u:1.0);if(l==0.0){h=a;d=b;c[h>>2]=c[d>>2];c[h+4>>2]=c[d+4>>2];c[h+8>>2]=c[d+8>>2];c[h+12>>2]=c[d+12>>2];i=f;return}u=+Z(l);t=+Z((1.0-e)*l)/u;q=+Z(l*e)/u;u=m*t+n*q;d=a|0;g[d>>2]=u;n=t*+g[o>>2]+q*+g[p>>2];p=a+4|0;g[p>>2]=n;m=t*+g[r>>2]+q*+g[s>>2];s=a+8|0;g[s>>2]=m;e=t*+g[j>>2]+q*+g[k>>2];k=a+12|0;g[k>>2]=e;q=+W(m*m+(n*n+(u*u+e*e)));if(q==0.0){i=f;return}t=1.0/q;g[d>>2]=u*t;g[p>>2]=n*t;g[s>>2]=m*t;g[k>>2]=e*t;i=f;return}function lw(a,b){a=a|0;b=b|0;var c=0,d=0.0,e=0,f=0.0,h=0,i=0;c=b+4|0;d=+g[c>>2];e=b+8|0;f=+g[e>>2];g[a>>2]=1.0-d*d*2.0-f*f*2.0;h=b|0;i=b+12|0;g[a+4>>2]=+g[h>>2]*2.0*+g[c>>2]- +g[e>>2]*2.0*+g[i>>2];g[a+8>>2]=+g[h>>2]*2.0*+g[e>>2]+ +g[c>>2]*2.0*+g[i>>2];g[a+12>>2]=0.0;g[a+16>>2]=+g[h>>2]*2.0*+g[c>>2]+ +g[e>>2]*2.0*+g[i>>2];f=+g[h>>2];d=+g[e>>2];g[a+20>>2]=1.0-f*f*2.0-d*d*2.0;g[a+24>>2]=+g[c>>2]*2.0*+g[e>>2]- +g[h>>2]*2.0*+g[i>>2];g[a+28>>2]=0.0;g[a+32>>2]=+g[h>>2]*2.0*+g[e>>2]- +g[c>>2]*2.0*+g[i>>2];g[a+36>>2]=+g[c>>2]*2.0*+g[e>>2]+ +g[h>>2]*2.0*+g[i>>2];d=+g[h>>2];f=+g[c>>2];g[a+40>>2]=1.0-d*d*2.0-f*f*2.0;K1(a+44|0,0,16)|0;g[a+60>>2]=1.0;return}function lx(a){a=a|0;return}function ly(a){a=a|0;n8(a|0);return}function lz(a){a=a|0;KU(a);return}function lA(a,b,c){a=a|0;b=b|0;c=c|0;return}function lB(a,b,c){a=a|0;b=b|0;c=c|0;return}function lC(b,d,e,f){b=b|0;d=d|0;e=e|0;f=+f;var h=0,i=0,j=0;h=b+36|0;if(+g[h>>2]<=f){return}a[b+40|0]=1;i=b+4|0;j=d;c[i>>2]=c[j>>2];c[i+4>>2]=c[j+4>>2];c[i+8>>2]=c[j+8>>2];c[i+12>>2]=c[j+12>>2];j=b+20|0;b=e;c[j>>2]=c[b>>2];c[j+4>>2]=c[b+4>>2];c[j+8>>2]=c[b+8>>2];c[j+12>>2]=c[b+12>>2];g[h>>2]=f;return}function lD(a){a=a|0;n8(a|0);zw(a);return}function lE(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;hM[c[(c[a>>2]|0)+80>>2]&255](a|0,b,d,e);return}function lF(a){a=a|0;return a+12|0}function lG(a,b,c){a=a|0;b=+b;c=c|0;K1(c|0,0,16)|0;return}function lH(a){a=a|0;return 17992}function lI(a,b){a=a|0;b=b|0;g[a>>2]=1.0;g[a+4>>2]=1.0;g[a+8>>2]=1.0;g[a+12>>2]=0.0;return}function lJ(a,b){a=a|0;b=+b;g[a+44>>2]=b;return}function lK(a){a=a|0;return+(+g[a+44>>2])}function lL(a){a=a|0;return 52}function lM(a,b,c){a=a|0;b=b|0;c=c|0;m7(a|0,b,c)|0;g[b+28>>2]=+g[a+28>>2];g[b+32>>2]=+g[a+32>>2];g[b+36>>2]=+g[a+36>>2];g[b+40>>2]=+g[a+40>>2];g[b+12>>2]=+g[a+12>>2];g[b+16>>2]=+g[a+16>>2];g[b+20>>2]=+g[a+20>>2];g[b+24>>2]=+g[a+24>>2];g[b+44>>2]=+g[a+44>>2];return 19488}function lN(a,b,d){a=a|0;b=b|0;d=d|0;var e=0.0,f=0.0,h=0.0,i=0.0,j=0.0,k=0.0,l=0;e=+g[d>>2];f=+g[d+4>>2];h=+g[d+8>>2];i=e*+g[b+56>>2]+f*+g[b+60>>2]+h*+g[b+64>>2];j=e*+g[b+72>>2]+f*+g[b+76>>2]+h*+g[b+80>>2];k=e*+g[b+88>>2]+f*+g[b+92>>2]+h*+g[b+96>>2];if(i<j){l=j<k?2:1}else{l=i<k?2:0}d=a;a=b+56+(l<<4)|0;c[d>>2]=c[a>>2];c[d+4>>2]=c[a+4>>2];c[d+8>>2]=c[a+8>>2];c[d+12>>2]=c[a+12>>2];return}function lO(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0,x=0,y=0;if((e|0)<=0){return}f=a+56|0;h=a+60|0;i=a+64|0;j=a+72|0;k=a+76|0;l=a+80|0;m=a+88|0;n=a+92|0;o=a+96|0;p=0;do{q=+g[b+(p<<4)>>2];r=+g[b+(p<<4)+4>>2];s=+g[b+(p<<4)+8>>2];t=q*+g[f>>2]+r*+g[h>>2]+s*+g[i>>2];u=q*+g[j>>2]+r*+g[k>>2]+s*+g[l>>2];v=q*+g[m>>2]+r*+g[n>>2]+s*+g[o>>2];if(t<u){w=u<v?2:1}else{w=t<v?2:0}x=d+(p<<4)|0;y=a+56+(w<<4)|0;c[x>>2]=c[y>>2];c[x+4>>2]=c[y+4>>2];c[x+8>>2]=c[y+8>>2];c[x+12>>2]=c[y+12>>2];p=p+1|0;}while((p|0)<(e|0));return}function lP(a){a=a|0;return 2}function lQ(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0,e=0.0,f=0.0,h=0.0,i=0.0,j=0.0,k=0.0,l=0.0,m=0,n=0;d=+g[a+56>>2];e=+g[a+72>>2]-d;f=+g[a+60>>2];h=+g[a+76>>2]-f;i=+g[a+64>>2];j=+g[a+80>>2]-i;k=+g[a+88>>2]-d;d=+g[a+92>>2]-f;f=+g[a+96>>2]-i;i=h*f-j*d;l=j*k-e*f;f=e*d-h*k;a=c|0;m=c+4|0;n=c+8|0;g[c+12>>2]=0.0;k=1.0/+W(f*f+(i*i+l*l));h=k*i;g[a>>2]=h;i=k*l;g[m>>2]=i;l=f*k;g[n>>2]=l;if((b|0)==0){return}g[a>>2]=h*-1.0;g[m>>2]=i*-1.0;g[n>>2]=l*-1.0;return}function lR(a){a=a|0;return 3}function lS(a){a=a|0;return 3}function lT(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0;f=a;hF[c[(c[f>>2]|0)+108>>2]&255](a,b,d);hF[c[(c[f>>2]|0)+108>>2]&255](a,(b+1|0)%3|0,e);return}function lU(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;e=d;d=a+56+(b<<4)|0;c[e>>2]=c[d>>2];c[e+4>>2]=c[d+4>>2];c[e+8>>2]=c[d+8>>2];c[e+12>>2]=c[d+12>>2];return}function lV(a){a=a|0;return 1}function lW(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;hM[c[(c[a>>2]|0)+124>>2]&255](a,e,b,d);return}
function lX(a,b,d){a=a|0;b=b|0;d=+d;var e=0,f=0,h=0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0;e=i;i=i+32|0;f=e|0;h=e+16|0;j=+g[a+56>>2];k=+g[a+72>>2]-j;l=+g[a+60>>2];m=+g[a+76>>2]-l;n=+g[a+64>>2];o=+g[a+80>>2]-n;p=+g[a+88>>2]-j;q=+g[a+92>>2]-l;r=+g[a+96>>2]-n;s=m*r-o*q;t=o*p-k*r;r=k*q-m*p;p=1.0/+W(r*r+(s*s+t*t));m=p*s;s=p*t;t=r*p;u=b|0;v=b+4|0;w=b+8|0;p=+g[u>>2]*m+ +g[v>>2]*s+t*+g[w>>2]-(m*j+s*l+t*n);n=-0.0-d;if(p<n|p>d){x=0;i=e;return x|0}b=a;y=h|0;z=f|0;A=h+4|0;B=f+4|0;C=h+8|0;D=f+8|0;E=0;while(1){if((E|0)>=3){x=1;F=6;break}hM[c[(c[b>>2]|0)+104>>2]&255](a,E,f,h);d=+g[z>>2];p=+g[y>>2]-d;l=+g[B>>2];j=+g[A>>2]-l;r=+g[D>>2];q=+g[C>>2]-r;k=t*j-s*q;o=m*q-t*p;q=s*p-m*j;j=1.0/+W(q*q+(k*k+o*o));p=j*k;k=j*o;o=q*j;if(+g[u>>2]*p+ +g[v>>2]*k+o*+g[w>>2]-(r*o+(d*p+l*k))<n){x=0;F=8;break}else{E=E+1|0}}if((F|0)==8){i=e;return x|0}else if((F|0)==6){i=e;return x|0}return 0}function lY(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0.0,h=0.0,i=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0;f=+g[a+56>>2];h=+g[a+72>>2]-f;i=+g[a+60>>2];j=+g[a+76>>2]-i;k=+g[a+64>>2];l=+g[a+80>>2]-k;m=+g[a+88>>2]-f;f=+g[a+92>>2]-i;i=+g[a+96>>2]-k;k=j*i-l*f;n=l*m-h*i;i=h*f-j*m;g[d+12>>2]=0.0;m=1.0/+W(i*i+(k*k+n*n));g[d>>2]=m*k;g[d+4>>2]=m*n;g[d+8>>2]=i*m;d=e;e=a+56|0;c[d>>2]=c[e>>2];c[d+4>>2]=c[e+4>>2];c[d+8>>2]=c[e+8>>2];c[d+12>>2]=c[e+12>>2];return}function lZ(a,b,d,e){a=a|0;b=b|0;d=d|0;e=+e;c[a>>2]=32600;c[a+4>>2]=b;c[a+8>>2]=d;g[a+12>>2]=e;return}function l_(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0.0,s=0,t=0.0,u=0,v=0.0,w=0,x=0.0,y=0.0,z=0,A=0.0,B=0.0,C=0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0,I=0.0,J=0.0,K=0.0,L=0,M=0.0,N=0,O=0.0,P=0,Q=0.0,R=0,S=0.0,T=0,U=0.0,V=0,W=0.0;e=i;i=i+168|0;h=e|0;j=e+16|0;k=e+32|0;l=e+40|0;m=e+104|0;n=e+120|0;o=e+136|0;p=e+152|0;g[k>>2]=0.0;q=b+112|0;r=+g[b+48>>2]- +g[q>>2];s=b+116|0;t=+g[b+52>>2]- +g[s>>2];u=b+120|0;v=+g[b+56>>2]- +g[u>>2];w=b+64|0;x=+g[w>>2];y=+g[b>>2];z=b+80|0;A=+g[z>>2];B=+g[b+16>>2];C=b+96|0;D=+g[C>>2];E=+g[b+32>>2];F=+g[b+4>>2];G=+g[b+20>>2];H=+g[b+36>>2];I=+g[b+8>>2];J=+g[b+24>>2];K=+g[b+40>>2];L=b+68|0;M=+g[L>>2];N=b+84|0;O=+g[N>>2];P=b+100|0;Q=+g[P>>2];R=b+72|0;S=+g[R>>2];T=b+88|0;U=+g[T>>2];V=b+104|0;W=+g[V>>2];g[l>>2]=x*y+A*B+D*E;g[l+4>>2]=x*F+A*G+D*H;g[l+8>>2]=x*I+A*J+D*K;g[l+12>>2]=0.0;g[l+16>>2]=y*M+B*O+E*Q;g[l+20>>2]=F*M+G*O+H*Q;g[l+24>>2]=I*M+J*O+K*Q;g[l+28>>2]=0.0;g[l+32>>2]=y*S+B*U+E*W;g[l+36>>2]=F*S+G*U+H*W;g[l+40>>2]=I*S+J*U+K*W;g[l+44>>2]=0.0;g[l+48>>2]=r*x+t*A+v*D;g[l+52>>2]=r*M+t*O+v*Q;g[l+56>>2]=r*S+t*U+v*W;g[l+60>>2]=0.0;if(!(l$(a,l+48|0,h,j,k,0,+g[a+12>>2])|0)){i=e;return}if(f){W=+g[w>>2];v=+g[j>>2];U=+g[L>>2];t=+g[j+4>>2];S=+g[R>>2];r=+g[j+8>>2];Q=W*v+U*t+S*r;O=+g[z>>2];M=+g[N>>2];D=+g[T>>2];A=v*O+t*M+r*D;x=+g[C>>2];K=+g[P>>2];J=+g[V>>2];I=v*x+t*K+r*J;g[m>>2]=-0.0-Q;g[m+4>>2]=-0.0-A;g[m+8>>2]=-0.0-I;g[m+12>>2]=0.0;r=+g[h>>2];t=+g[h+4>>2];v=+g[h+8>>2];H=+g[k>>2];G=r*O+t*M+v*D+ +g[s>>2]+A*H;A=r*x+t*K+v*J+ +g[u>>2]+I*H;g[n>>2]=r*W+t*U+v*S+ +g[q>>2]+Q*H;g[n+4>>2]=G;g[n+8>>2]=A;g[n+12>>2]=0.0;ha[c[(c[d>>2]|0)+16>>2]&31](d,m,n,H);i=e;return}else{n=c[(c[d>>2]|0)+16>>2]|0;H=+g[w>>2];A=+g[j>>2];G=+g[L>>2];Q=+g[j+4>>2];S=+g[R>>2];v=+g[j+8>>2];U=+g[z>>2];t=+g[N>>2];W=+g[T>>2];r=+g[C>>2];I=+g[P>>2];J=+g[V>>2];g[o>>2]=H*A+G*Q+S*v;g[o+4>>2]=A*U+Q*t+v*W;g[o+8>>2]=A*r+Q*I+v*J;g[o+12>>2]=0.0;v=+g[h>>2];Q=+g[h+4>>2];A=+g[h+8>>2];K=v*U+Q*t+A*W+ +g[s>>2];W=v*r+Q*I+A*J+ +g[u>>2];g[p>>2]=v*H+Q*G+A*S+ +g[q>>2];g[p+4>>2]=K;g[p+8>>2]=W;g[p+12>>2]=0.0;ha[n&31](d,o,p,+g[k>>2]);i=e;return}}function l$(a,b,d,e,f,h,j){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;j=+j;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0,F=0.0,G=0.0,H=0.0,I=0.0,J=0,K=0,L=0,M=0.0,N=0.0,O=0.0,P=0.0,Q=0.0,R=0.0,S=0.0,T=0,U=0,V=0,X=0,Y=0,Z=0,_=0.0,$=0.0,aa=0.0,ab=0.0,ac=0.0,ad=0.0,ae=0.0,af=0.0,ag=0.0,ah=0.0,ai=0.0,aj=0.0,ak=0,al=0.0,am=0.0,an=0.0,ao=0,ap=0.0;h=i;i=i+64|0;k=h|0;l=h+16|0;m=h+32|0;n=h+48|0;o=a+8|0;p=c[o>>2]|0;q=p+56|0;r=c[a+4>>2]|0;s=+g[r+28>>2]*+g[r+12>>2];t=s+j;j=+g[q>>2];u=+g[p+72>>2]-j;v=+g[p+60>>2];w=+g[p+76>>2]-v;x=+g[p+64>>2];y=+g[p+80>>2]-x;z=+g[p+88>>2]-j;A=+g[p+92>>2]-v;B=+g[p+96>>2]-x;C=w*B-y*A;D=y*z-u*B;B=u*A-w*z;z=1.0/+W(B*B+(C*C+D*D));w=z*C;C=z*D;D=z*B;r=b|0;B=+g[r>>2];a=b+4|0;z=+g[a>>2];E=b+8|0;A=+g[E>>2];u=(B-j)*w+C*(z-v)+D*(A-x);if(u<0.0){F=u*-1.0;G=w*-1.0;H=C*-1.0;I=D*-1.0}else{F=u;G=w;H=C;I=D}if(F>=t){J=0;i=h;return J|0}K=k;L=b;c[K>>2]=c[L>>2];c[K+4>>2]=c[L+4>>2];c[K+8>>2]=c[L+8>>2];c[K+12>>2]=c[L+12>>2];g[l>>2]=G;g[l+4>>2]=H;g[l+8>>2]=I;g[l+12>>2]=0.0;do{if(l0(0,q,l,k)|0){M=B-G*F;N=z-H*F;O=A-I*F;P=B;Q=z;R=A;S=t*t}else{D=t*t;if((g3[c[(c[p>>2]|0)+100>>2]&511](p)|0)<=0){J=0;i=h;return J|0}L=m|0;K=m+4|0;b=m+8|0;T=n|0;U=n+4|0;V=n+8|0;C=0.0;w=0.0;u=0.0;X=0;Y=0;while(1){Z=c[o>>2]|0;hM[c[(c[Z>>2]|0)+104>>2]&255](Z,X,m,n);x=+g[L>>2];v=+g[r>>2]-x;j=+g[K>>2];y=+g[a>>2]-j;_=+g[b>>2];$=+g[E>>2]-_;aa=+g[T>>2]-x;ab=+g[U>>2]-j;ac=+g[V>>2]-_;ad=v*aa+y*ab+$*ac;do{if(ad>0.0){ae=aa*aa+ab*ab+ac*ac;if(ad<ae){af=ad/ae;ag=af;ah=v-aa*af;ai=y-ab*af;aj=$-ac*af;break}else{ag=1.0;ah=v-aa;ai=y-ab;aj=$-ac;break}}else{ag=0.0;ah=v;ai=y;aj=$}}while(0);if(aj*aj+(ai*ai+ah*ah)<D){ak=1;al=x+aa*ag;am=j+ab*ag;an=_+ac*ag}else{ak=Y;al=u;am=w;an=C}Z=X+1|0;ao=c[o>>2]|0;if((Z|0)<(g3[c[(c[ao>>2]|0)+100>>2]&511](ao)|0)){C=an;w=am;u=al;X=Z;Y=ak}else{break}}if((ak&1)==0){J=0;i=h;return J|0}else{M=al;N=am;O=an;P=+g[r>>2];Q=+g[a>>2];R=+g[E>>2];S=D;break}}}while(0);an=P-M;P=Q-N;Q=R-O;R=an*an+P*P+Q*Q;if(R>=S){J=0;i=h;return J|0}if(R>1.1920928955078125e-7){S=+W(R);g[e+12>>2]=0.0;R=1.0/S;g[e>>2]=an*R;g[e+4>>2]=P*R;g[e+8>>2]=Q*R;g[d>>2]=M;g[d+4>>2]=N;g[d+8>>2]=O;g[d+12>>2]=0.0;ap=s-S}else{g[e>>2]=G;g[e+4>>2]=H;g[e+8>>2]=I;g[e+12>>2]=0.0;g[d>>2]=M;g[d+4>>2]=N;g[d+8>>2]=O;g[d+12>>2]=0.0;ap=s}g[f>>2]=-0.0-ap;J=1;i=h;return J|0}function l0(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0.0,f=0.0,h=0.0,i=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0;e=+g[b+16>>2];f=+g[b>>2];h=e-f;i=+g[b+20>>2];j=+g[b+4>>2];k=i-j;l=+g[b+24>>2];m=+g[b+8>>2];n=l-m;o=+g[b+32>>2];p=o-e;q=+g[b+36>>2];r=q-i;s=+g[b+40>>2];t=s-l;u=f-o;v=j-q;w=m-s;x=+g[d>>2];y=+g[d+4>>2];z=+g[d+8>>2];A=+g[c+8>>2];B=+g[c+4>>2];C=+g[c>>2];D=(z-m)*(h*B-k*C)+((x-f)*(k*A-n*B)+(y-j)*(n*C-h*A));h=(z-l)*(p*B-r*C)+((x-e)*(r*A-t*B)+(y-i)*(t*C-p*A));p=(z-s)*(u*B-v*C)+((x-o)*(v*A-w*B)+(y-q)*(w*C-u*A));if(D>0.0&h>0.0&p>0.0){return 1}else{return(D>0.0|h>0.0|p>0.0)^1|0}return 0}function l1(a){a=a|0;return}function l2(a){a=a|0;KU(a);return}function l3(a,b){a=a|0;b=b|0;var d=0,e=0,f=0.0,h=0,i=0.0,j=0,k=0.0,l=0,m=0,n=0.0;n6(a|0);c[a>>2]=35432;c[a+4>>2]=0;d=a|0;e=b|0;f=+g[e>>2];h=b+4|0;i=+g[h>>2];j=b+8|0;k=+g[j>>2];if(f<i){l=f<k?0:2}else{l=i<k?1:2}k=+g[b+(l<<2)>>2]*.10000000149011612;l=a;if(k<+g[a+44>>2]){ma(a,k);m=c[l>>2]|0}else{m=35432}k=+g6[c[m+48>>2]&15](d);i=+g6[c[(c[l>>2]|0)+48>>2]&15](d);f=+g6[c[(c[l>>2]|0)+48>>2]&15](d);n=+g[h>>2]*+g[a+16>>2]-i;i=+g[j>>2]*+g[a+20>>2]-f;g[a+28>>2]=+g[e>>2]*+g[a+12>>2]-k;g[a+32>>2]=n;g[a+36>>2]=i;g[a+40>>2]=0.0;return}function l4(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0.0,h=0.0,i=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0;f=+g6[c[(c[a>>2]|0)+48>>2]&15](a|0);h=f+ +g[a+28>>2];i=f+ +g[a+32>>2];j=f+ +g[a+36>>2];f=+V(+(+g[b>>2]));k=+V(+(+g[b+4>>2]));l=+V(+(+g[b+8>>2]));m=+V(+(+g[b+16>>2]));n=+V(+(+g[b+20>>2]));o=+V(+(+g[b+24>>2]));p=+V(+(+g[b+32>>2]));q=+V(+(+g[b+36>>2]));r=+V(+(+g[b+40>>2]));s=+g[b+48>>2];t=+g[b+52>>2];u=+g[b+56>>2];v=h*f+i*k+j*l;l=h*m+i*n+j*o;o=h*p+i*q+j*r;g[d>>2]=s-v;g[d+4>>2]=t-l;g[d+8>>2]=u-o;g[d+12>>2]=0.0;g[e>>2]=v+s;g[e+4>>2]=l+t;g[e+8>>2]=o+u;g[e+12>>2]=0.0;return}function l5(a,b,d){a=a|0;b=+b;d=d|0;var e=0.0,f=0.0,h=0.0,i=0,j=0,k=0.0,l=0.0,m=0.0;e=+g[a+28>>2];f=+g[a+32>>2];h=+g[a+36>>2];i=a|0;j=a;k=+g6[c[(c[j>>2]|0)+48>>2]&15](i);l=+g6[c[(c[j>>2]|0)+48>>2]&15](i);m=(e+k)*2.0;k=(f+l)*2.0;l=(h+ +g6[c[(c[j>>2]|0)+48>>2]&15](i))*2.0;h=b/12.0;b=k*k;k=l*l;l=m*m;g[d>>2]=h*(b+k);g[d+4>>2]=h*(l+k);g[d+8>>2]=h*(l+b);g[d+12>>2]=0.0;return}function l6(a){a=a|0;n8(a|0);return}function l7(a){a=a|0;n8(a|0);zw(a);return}function l8(a,b){a=a|0;b=b|0;var d=0,e=0,f=0.0,h=0.0,i=0.0,j=0,k=0,l=0,m=0.0,n=0,o=0.0,p=0,q=0.0,r=0.0;d=a|0;e=a;f=+g6[c[(c[e>>2]|0)+48>>2]&15](d);h=+g6[c[(c[e>>2]|0)+48>>2]&15](d);i=+g6[c[(c[e>>2]|0)+48>>2]&15](d);e=a+28|0;j=a+32|0;k=a+36|0;l=a+12|0;m=(f+ +g[e>>2])/+g[l>>2];n=a+16|0;o=(h+ +g[j>>2])/+g[n>>2];p=a+20|0;q=(i+ +g[k>>2])/+g[p>>2];nf(d,b);r=o*+g[n>>2]-h;h=q*+g[p>>2]-i;g[e>>2]=m*+g[l>>2]-f;g[j>>2]=r;g[k>>2]=h;g[a+40>>2]=0.0;return}function l9(a){a=a|0;return 23400}function ma(a,b){a=a|0;b=+b;var d=0,e=0,f=0.0,h=0.0,i=0.0,j=0,k=0.0,l=0,m=0,n=0.0;d=a|0;e=a;f=+g6[c[(c[e>>2]|0)+48>>2]&15](d);h=+g6[c[(c[e>>2]|0)+48>>2]&15](d);i=+g6[c[(c[e>>2]|0)+48>>2]&15](d);j=a+28|0;k=f+ +g[j>>2];l=a+32|0;f=h+ +g[l>>2];m=a+36|0;h=i+ +g[m>>2];g[a+44>>2]=b;b=+g6[c[(c[e>>2]|0)+48>>2]&15](d);i=+g6[c[(c[e>>2]|0)+48>>2]&15](d);n=h- +g6[c[(c[e>>2]|0)+48>>2]&15](d);g[j>>2]=k-b;g[l>>2]=f-i;g[m>>2]=n;g[a+40>>2]=0.0;return}function mb(a,b,d){a=a|0;b=b|0;d=d|0;var e=0.0,f=0.0,h=0.0,i=0,j=0,k=0.0,l=0.0,m=0.0;e=+g[b+28>>2];f=+g[b+32>>2];h=+g[b+36>>2];i=b|0;j=b;k=+g6[c[(c[j>>2]|0)+48>>2]&15](i);l=+g6[c[(c[j>>2]|0)+48>>2]&15](i);m=e+k;k=f+l;l=h+ +g6[c[(c[j>>2]|0)+48>>2]&15](i);h=+g[d+4>>2]>=0.0?k:-0.0-k;k=+g[d+8>>2]>=0.0?l:-0.0-l;g[a>>2]=+g[d>>2]>=0.0?m:-0.0-m;g[a+4>>2]=h;g[a+8>>2]=k;g[a+12>>2]=0.0;return}function mc(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0,e=0.0,f=0.0,h=0.0;d=+g[b+28>>2];e=+g[b+32>>2];f=+g[c+4>>2]>=0.0?e:-0.0-e;e=+g[b+36>>2];h=+g[c+8>>2]>=0.0?e:-0.0-e;g[a>>2]=+g[c>>2]>=0.0?d:-0.0-d;g[a+4>>2]=f;g[a+8>>2]=h;g[a+12>>2]=0.0;return}function md(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,h=0,i=0.0,j=0.0,k=0.0,l=0.0;if((d|0)<=0){return}e=a+28|0;f=a+32|0;h=a+36|0;a=0;do{i=+g[e>>2];j=+g[f>>2];k=+g[b+(a<<4)+4>>2]>=0.0?j:-0.0-j;j=+g[h>>2];l=+g[b+(a<<4)+8>>2]>=0.0?j:-0.0-j;g[c+(a<<4)>>2]=+g[b+(a<<4)>>2]>=0.0?i:-0.0-i;g[c+(a<<4)+4>>2]=k;g[c+(a<<4)+8>>2]=l;g[c+(a<<4)+12>>2]=0.0;a=a+1|0;}while((a|0)<(d|0));return}function me(a){a=a|0;return 6}function mf(a,b,c){a=a|0;b=b|0;c=c|0;switch(b|0){case 1:{g[c>>2]=-1.0;g[c+4>>2]=0.0;g[c+8>>2]=0.0;g[c+12>>2]=0.0;return};case 5:{g[c>>2]=0.0;g[c+4>>2]=0.0;g[c+8>>2]=-1.0;g[c+12>>2]=0.0;return};case 2:{g[c>>2]=0.0;g[c+4>>2]=1.0;g[c+8>>2]=0.0;g[c+12>>2]=0.0;return};case 3:{g[c>>2]=0.0;g[c+4>>2]=-1.0;g[c+8>>2]=0.0;g[c+12>>2]=0.0;return};case 0:{g[c>>2]=1.0;g[c+4>>2]=0.0;g[c+8>>2]=0.0;g[c+12>>2]=0.0;return};case 4:{g[c>>2]=0.0;g[c+4>>2]=0.0;g[c+8>>2]=1.0;g[c+12>>2]=0.0;return};default:{return}}}function mg(a){a=a|0;return 8}function mh(a){a=a|0;return 12}function mi(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;switch(b|0){case 8:{f=5;g=4;break};case 4:{f=b;g=0;break};case 10:{f=7;g=5;break};case 0:{f=1;g=0;break};case 3:{f=b;g=2;break};case 2:{f=3;g=1;break};case 5:{f=b;g=1;break};case 6:{f=b;g=2;break};case 7:{f=b;g=3;break};case 11:{f=7;g=6;break};case 9:{f=6;g=4;break};case 1:{f=2;g=0;break};default:{f=0;g=0}}b=a;hF[c[(c[b>>2]|0)+108>>2]&255](a,g,d);hF[c[(c[b>>2]|0)+108>>2]&255](a,f,e);return}function mj(a,b,d){a=a|0;b=b|0;d=d|0;var e=0.0,f=0.0,h=0.0,i=0,j=0,k=0.0,l=0.0,m=0.0;e=+g[a+28>>2];f=+g[a+32>>2];h=+g[a+36>>2];i=a|0;j=a;k=+g6[c[(c[j>>2]|0)+48>>2]&15](i);l=+g6[c[(c[j>>2]|0)+48>>2]&15](i);m=e+k;k=f+l;l=h+ +g6[c[(c[j>>2]|0)+48>>2]&15](i);i=b&1;j=b>>>1&1;a=b>>>2&1;g[d>>2]=+(i^1|0)*m- +(i|0)*m;g[d+4>>2]=+(j^1|0)*k- +(j|0)*k;g[d+8>>2]=+(a^1|0)*l- +(a|0)*l;g[d+12>>2]=0.0;return}function mk(a){a=a|0;return 6}function ml(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,h=0,j=0,k=0,l=0.0,m=0.0,n=0.0;f=i;i=i+48|0;h=f|0;j=f+16|0;k=f+32|0;hF[c[(c[a>>2]|0)+124>>2]&255](a,h,e);l=+g[h>>2];m=+g[h+4>>2];n=+g[h+8>>2];g[b>>2]=l;g[b+4>>2]=m;g[b+8>>2]=n;g[b+12>>2]=0.0;b=c[(c[a>>2]|0)+64>>2]|0;g[k>>2]=-0.0-l;g[k+4>>2]=-0.0-m;g[k+8>>2]=-0.0-n;g[k+12>>2]=0.0;hF[b&255](j,a,k);k=d;d=j;c[k>>2]=c[d>>2];c[k+4>>2]=c[d+4>>2];c[k+8>>2]=c[d+8>>2];c[k+12>>2]=c[d+12>>2];i=f;return}function mm(a,b,c){a=a|0;b=b|0;c=+c;var d=0.0,e=0.0,f=0.0,h=0.0,i=0;d=+g[a+28>>2];e=+g[a+32>>2];f=+g[a+36>>2];h=+g[b>>2];if(h>d+c){i=0;return i|0}if(h<-0.0-d-c){i=0;return i|0}d=+g[b+4>>2];if(d>e+c){i=0;return i|0}if(d<-0.0-e-c){i=0;return i|0}e=+g[b+8>>2];if(e>f+c){i=0;return i|0}i=e>=-0.0-f-c;return i|0}function mn(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0,e=0.0,f=0.0;d=+g[a+28>>2];e=+g[a+32>>2];f=+g[a+36>>2];switch(c|0){case 3:{g[b>>2]=0.0;g[b+4>>2]=-1.0;g[b+8>>2]=0.0;g[b+12>>2]=-0.0-e;return};case 2:{g[b>>2]=0.0;g[b+4>>2]=1.0;g[b+8>>2]=0.0;g[b+12>>2]=-0.0-e;return};case 1:{g[b>>2]=-1.0;g[b+4>>2]=0.0;g[b+8>>2]=0.0;g[b+12>>2]=-0.0-d;return};case 4:{g[b>>2]=0.0;g[b+4>>2]=0.0;g[b+8>>2]=1.0;g[b+12>>2]=-0.0-f;return};case 5:{g[b>>2]=0.0;g[b+4>>2]=0.0;g[b+8>>2]=-1.0;g[b+12>>2]=-0.0-f;return};case 0:{g[b>>2]=1.0;g[b+4>>2]=0.0;g[b+8>>2]=0.0;g[b+12>>2]=-0.0-d;return};default:{return}}}function mo(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0;oL(b|0,d);c[b>>2]=32496;d=b+52|0;c[d>>2]=0;c[b+56>>2]=0;g=b+60|0;a[g]=e&1;e=b+61|0;a[e]=0;c[b+4>>2]=21;if(!f){return}f=zv(172,16)|0;nW(f);c[d>>2]=f;nZ(f,c[b+48>>2]|0,(a[g]&1)!=0,b+16|0,b+32|0);a[e]=1;return}function mp(b){b=b|0;var d=0,e=0;c[b>>2]=32496;if((a[b+61|0]&1)!=0){d=b+52|0;e=c[d>>2]|0;g$[c[c[e>>2]>>2]&1023](e);zw(c[d>>2]|0)}oN(b|0);zw(b);return}function mq(b){b=b|0;var d=0,e=0,f=0;c[b>>2]=32496;if((a[b+61|0]&1)==0){d=b|0;oN(d);return}e=b+52|0;f=c[e>>2]|0;g$[c[c[f>>2]>>2]&1023](f);zw(c[e>>2]|0);d=b|0;oN(d);return}function mr(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=i;i=i+16|0;g=f|0;h=c[a+48>>2]|0;c[g>>2]=27096;c[g+4>>2]=h;c[g+8>>2]=b;q9(c[a+52>>2]|0,g|0,d,e);i=f;return}function ms(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0;h=i;i=i+16|0;j=h|0;k=c[a+48>>2]|0;c[j>>2]=27064;c[j+4>>2]=k;c[j+8>>2]=b;ra(c[a+52>>2]|0,j|0,d,e,f,g);i=h;return}function mt(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=i;i=i+64|0;g=f|0;h=c[a+48>>2]|0;c[g>>2]=26784;c[g+4>>2]=h;c[g+8>>2]=b;q2(c[a+52>>2]|0,g|0,d,e);i=f;return}function mu(b,d){b=b|0;d=d|0;var e=0,f=0,h=0.0,i=0.0,j=0.0;e=b|0;f=g3[c[(c[b>>2]|0)+28>>2]&511](e)|0;h=+g[f>>2]- +g[d>>2];i=+g[f+4>>2]- +g[d+4>>2];j=+g[f+8>>2]- +g[d+8>>2];if(h*h+i*i+j*j<=1.1920928955078125e-7){return}oP(e,d);d=b+61|0;e=b+52|0;if((a[d]&1)!=0){f=c[e>>2]|0;g$[c[c[f>>2]>>2]&1023](f);zw(c[e>>2]|0)}f=zv(172,16)|0;nW(f);c[e>>2]=f;nZ(f,c[b+48>>2]|0,(a[b+60|0]&1)!=0,b+16|0,b+32|0);a[d]=1;return}function mv(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,h=0,i=0,j=0,k=0;m7(a|0,b,d)|0;e=c[a+48>>2]|0;hd[c[(c[e>>2]|0)+56>>2]&127](e,b+12|0,d)|0;g[b+52>>2]=+g[a+12>>2];e=a+52|0;do{if((c[e>>2]|0)==0){f=6}else{if(((g3[c[(c[d>>2]|0)+52>>2]&511](d)|0)&1|0)!=0){f=6;break}h=d;i=hx[c[(c[h>>2]|0)+24>>2]&127](d,c[e>>2]|0)|0;if((i|0)==0){c[b+40>>2]=hx[c[(c[h>>2]|0)+28>>2]&127](d,c[e>>2]|0)|0;c[b+44>>2]=0;h=c[e>>2]|0;j=g3[c[(c[h>>2]|0)+12>>2]&511](h|0)|0;h=hd[c[(c[d>>2]|0)+16>>2]&127](d,j,1)|0;j=c[e>>2]|0;k=hd[c[(c[j>>2]|0)+16>>2]&127](j|0,c[h+8>>2]|0,d)|0;g7[c[(c[d>>2]|0)+20>>2]&127](d,h,k,1213612625,c[e>>2]|0);break}else{c[b+40>>2]=i;c[b+44>>2]=0;break}}}while(0);if((f|0)==6){c[b+40>>2]=0;c[b+44>>2]=0}f=a+56|0;do{if((c[f>>2]|0)!=0){if(((g3[c[(c[d>>2]|0)+52>>2]&511](d)|0)&2|0)!=0){break}a=d;e=hx[c[(c[a>>2]|0)+24>>2]&127](d,c[f>>2]|0)|0;if((e|0)==0){c[b+48>>2]=hx[c[(c[a>>2]|0)+28>>2]&127](d,c[f>>2]|0)|0;a=c[f>>2]|0;i=g3[c[(c[a>>2]|0)+8>>2]&511](a)|0;a=hd[c[(c[d>>2]|0)+16>>2]&127](d,i,1)|0;i=c[f>>2]|0;k=hd[c[(c[i>>2]|0)+12>>2]&127](i,c[a+8>>2]|0,d)|0;g7[c[(c[d>>2]|0)+20>>2]&127](d,a,k,1346456916,c[f>>2]|0);return 16608}else{c[b+48>>2]=e;return 16608}}}while(0);c[b+48>>2]=0;return 16608}function mw(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=a+52|0;a=c[d>>2]|0;if((a|0)==0){return}e=g3[c[(c[a>>2]|0)+12>>2]&511](a|0)|0;a=hd[c[(c[b>>2]|0)+16>>2]&127](b,e,1)|0;e=c[d>>2]|0;f=hd[c[(c[e>>2]|0)+16>>2]&127](e|0,c[a+8>>2]|0,b)|0;g7[c[(c[b>>2]|0)+20>>2]&127](b,a,f,1213612625,c[d>>2]|0);return}function mx(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=a+56|0;a=c[d>>2]|0;if((a|0)==0){return}e=g3[c[(c[a>>2]|0)+8>>2]&511](a)|0;a=hd[c[(c[b>>2]|0)+16>>2]&127](b,e,1)|0;e=c[d>>2]|0;f=hd[c[(c[e>>2]|0)+12>>2]&127](e,c[a+8>>2]|0,b)|0;g7[c[(c[b>>2]|0)+20>>2]&127](b,a,f,1346456916,c[d>>2]|0);return}function my(a){a=a|0;return 23384}function mz(a,b){a=a|0;b=+b;g[a+12>>2]=b;return}function mA(a){a=a|0;return+(+g[a+12>>2])}function mB(a){a=a|0;return 60}function mC(a,b,d){a=a|0;b=b|0;d=d|0;hF[c[(c[b>>2]|0)+68>>2]&255](a,b,d);return}function mD(a){a=a|0;return}function mE(a){a=a|0;KU(a);return}function mF(a,b,f){a=a|0;b=b|0;f=f|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0.0,C=0.0;j=i;i=i+64|0;k=j|0;l=j+16|0;m=j+24|0;n=j+32|0;o=j+40|0;p=j+56|0;q=a+4|0;r=c[q>>2]|0;hw[c[(c[r>>2]|0)+16>>2]&7](r,k,j+8|0,l,m,n,o,j+48|0,p,b);r=c[n>>2]|0;n=ag(c[o>>2]|0,f)|0;o=r+n|0;s=o;t=c[q>>2]|0;u=t+4|0;v=t+8|0;w=t+12|0;t=o;o=c[p>>2]|0;p=2;while(1){if((o|0)==2){x=c[s+(p<<2)>>2]|0}else if((o|0)==3){x=e[t+(p<<1)>>1]|0}else{x=d[r+(p+n)|0]|0}y=c[k>>2]|0;z=ag(c[m>>2]|0,x)|0;A=y+z|0;if((c[l>>2]|0)==0){B=+g[y+(z+4)>>2]*+g[v>>2];C=+g[y+(z+8)>>2]*+g[w>>2];g[a+12+(p<<4)>>2]=+g[A>>2]*+g[u>>2];g[a+12+(p<<4)+4>>2]=B;g[a+12+(p<<4)+8>>2]=C;g[a+12+(p<<4)+12>>2]=0.0}else{C=+h[y+(z+8)>>3]*+g[v>>2];B=+h[y+(z+16)>>3]*+g[w>>2];g[a+12+(p<<4)>>2]=+h[A>>3]*+g[u>>2];g[a+12+(p<<4)+4>>2]=C;g[a+12+(p<<4)+8>>2]=B;g[a+12+(p<<4)+12>>2]=0.0}if((p|0)>0){p=p-1|0}else{break}}p=c[a+8>>2]|0;hM[c[(c[p>>2]|0)+8>>2]&255](p,a+12|0,b,f);f=c[q>>2]|0;g0[c[(c[f>>2]|0)+24>>2]&511](f,b);i=j;return}function mG(a){a=a|0;return}function mH(a){a=a|0;KU(a);return}function mI(a,b,d){a=a|0;b=b|0;d=d|0;var f=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0.0,B=0.0;f=i;i=i+112|0;j=f|0;k=f+48|0;l=f+64|0;m=f+72|0;n=f+80|0;o=f+88|0;p=f+104|0;q=j|0;r=a+4|0;s=c[r>>2]|0;hw[c[(c[s>>2]|0)+16>>2]&7](s,k,f+56|0,l,m,n,o,f+96|0,p,b);s=(c[n>>2]|0)+(ag(c[o>>2]|0,d)|0)|0;o=s;n=c[r>>2]|0;t=s;s=n+4|0;u=n+8|0;v=n+12|0;n=c[p>>2]|0;p=2;while(1){if((n|0)==3){w=e[t+(p<<1)>>1]|0}else{w=c[o+(p<<2)>>2]|0}x=c[k>>2]|0;y=ag(c[m>>2]|0,w)|0;z=x+y|0;if((c[l>>2]|0)==0){A=+g[x+(y+4)>>2]*+g[u>>2];B=+g[x+(y+8)>>2]*+g[v>>2];g[j+(p<<4)>>2]=+g[z>>2]*+g[s>>2];g[j+(p<<4)+4>>2]=A;g[j+(p<<4)+8>>2]=B;g[j+(p<<4)+12>>2]=0.0}else{B=+h[x+(y+8)>>3]*+g[u>>2];A=+h[x+(y+16)>>3]*+g[v>>2];g[j+(p<<4)>>2]=+h[z>>3]*+g[s>>2];g[j+(p<<4)+4>>2]=B;g[j+(p<<4)+8>>2]=A;g[j+(p<<4)+12>>2]=0.0}if((p|0)>0){p=p-1|0}else{break}}p=c[a+8>>2]|0;hM[c[(c[p>>2]|0)+8>>2]&255](p,q,b,d);d=c[r>>2]|0;g0[c[(c[d>>2]|0)+24>>2]&511](d,b);i=f;return}function mJ(a){a=a|0;return}function mK(a){a=a|0;KU(a);return}function mL(a,b,d){a=a|0;b=b|0;d=d|0;var f=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0.0,B=0.0;f=i;i=i+112|0;j=f|0;k=f+48|0;l=f+64|0;m=f+72|0;n=f+80|0;o=f+88|0;p=f+104|0;q=j|0;r=a+4|0;s=c[r>>2]|0;hw[c[(c[s>>2]|0)+16>>2]&7](s,k,f+56|0,l,m,n,o,f+96|0,p,b);s=(c[n>>2]|0)+(ag(c[o>>2]|0,d)|0)|0;o=s;n=c[r>>2]|0;t=s;s=n+4|0;u=n+8|0;v=n+12|0;n=c[p>>2]|0;p=2;while(1){if((n|0)==3){w=e[t+(p<<1)>>1]|0}else{w=c[o+(p<<2)>>2]|0}x=c[k>>2]|0;y=ag(c[m>>2]|0,w)|0;z=x+y|0;if((c[l>>2]|0)==0){A=+g[x+(y+4)>>2]*+g[u>>2];B=+g[x+(y+8)>>2]*+g[v>>2];g[j+(p<<4)>>2]=+g[z>>2]*+g[s>>2];g[j+(p<<4)+4>>2]=A;g[j+(p<<4)+8>>2]=B;g[j+(p<<4)+12>>2]=0.0}else{B=+h[x+(y+8)>>3]*+g[u>>2];A=+h[x+(y+16)>>3]*+g[v>>2];g[j+(p<<4)>>2]=+h[z>>3]*+g[s>>2];g[j+(p<<4)+4>>2]=B;g[j+(p<<4)+8>>2]=A;g[j+(p<<4)+12>>2]=0.0}if((p|0)>0){p=p-1|0}else{break}}p=c[a+8>>2]|0;hM[c[(c[p>>2]|0)+8>>2]&255](p,q,b,d);d=c[r>>2]|0;g0[c[(c[d>>2]|0)+24>>2]&511](d,b);i=f;return}function mM(a,b,d){a=a|0;b=+b;d=+d;ne(a|0);c[a>>2]=34920;c[a+4>>2]=10;c[a+52>>2]=1;g[a+28>>2]=b;g[a+32>>2]=d*.5;g[a+36>>2]=b;g[a+40>>2]=0.0;return}function mN(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,h=0,j=0,k=0,l=0,m=0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0;e=i;i=i+32|0;f=e|0;h=e+16|0;j=a|0;k=a+4|0;l=a+8|0;m=a+12|0;K1(a|0,0,16)|0;n=+g[d>>2];o=+g[d+4>>2];p=+g[d+8>>2];q=n*n+o*o+p*p;if(q<9999999747378752.0e-20){r=1.0;s=0.0;t=0.0}else{u=1.0/+W(q);r=n*u;s=o*u;t=p*u}d=b+52|0;a=c[d>>2]|0;u=+g[b+28+(((a+2|0)%3|0)<<2)>>2];K1(f|0,0,16)|0;g[f+(a<<2)>>2]=+g[b+28+(a<<2)>>2];p=r*u;o=s*u;n=t*u;u=p+ +g[f>>2];q=o+ +g[f+4>>2];v=n+ +g[f+8>>2];f=b|0;a=b;w=+g6[c[(c[a>>2]|0)+48>>2]&15](f);x=u-r*w;u=q-s*w;q=v-t*w;w=t*q+(r*x+s*u);if(w>-999999984306749400.0){g[j>>2]=x;g[k>>2]=u;g[l>>2]=q;g[m>>2]=0.0;y=w}else{y=-999999984306749400.0}K1(h|0,0,16)|0;z=c[d>>2]|0;g[h+(z<<2)>>2]=-0.0- +g[b+28+(z<<2)>>2];w=p+ +g[h>>2];p=o+ +g[h+4>>2];o=n+ +g[h+8>>2];n=+g6[c[(c[a>>2]|0)+48>>2]&15](f);q=w-r*n;w=p-s*n;p=o-t*n;if(t*p+(r*q+s*w)<=y){i=e;return}g[j>>2]=q;g[k>>2]=w;g[l>>2]=p;g[m>>2]=0.0;i=e;return}function mO(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,h=0,j=0,k=0,l=0,m=0.0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0,I=0.0,J=0.0,K=0.0,L=0;f=i;i=i+32|0;h=f|0;j=f+16|0;k=a+52|0;l=c[k>>2]|0;m=+g[a+28+(((l+2|0)%3|0)<<2)>>2];if((e|0)<=0){i=f;return}n=h|0;o=h+4|0;p=h+8|0;q=a|0;r=a;s=j|0;t=j+4|0;u=j+8|0;v=0;w=l;while(1){K1(h|0,0,16)|0;g[h+(w<<2)>>2]=+g[a+28+(w<<2)>>2];l=b+(v<<4)|0;x=b+(v<<4)+4|0;y=b+(v<<4)+8|0;z=m*+g[l>>2]+ +g[n>>2];A=m*+g[x>>2]+ +g[o>>2];B=m*+g[y>>2]+ +g[p>>2];C=+g6[c[(c[r>>2]|0)+48>>2]&15](q);D=+g[l>>2];E=+g[x>>2];F=+g[y>>2];G=z-C*D;z=A-C*E;A=B-C*F;C=D*G+E*z+F*A;if(C>-999999984306749400.0){g[d+(v<<4)>>2]=G;g[d+(v<<4)+4>>2]=z;g[d+(v<<4)+8>>2]=A;g[d+(v<<4)+12>>2]=0.0;H=C;I=+g[l>>2];J=+g[x>>2];K=+g[y>>2]}else{H=-999999984306749400.0;I=D;J=E;K=F}K1(j|0,0,16)|0;L=c[k>>2]|0;g[j+(L<<2)>>2]=-0.0- +g[a+28+(L<<2)>>2];F=m*I+ +g[s>>2];E=m*J+ +g[t>>2];D=m*K+ +g[u>>2];C=+g6[c[(c[r>>2]|0)+48>>2]&15](q);A=+g[l>>2];z=+g[x>>2];G=+g[y>>2];B=F-C*A;F=E-C*z;E=D-C*G;if(A*B+z*F+G*E>H){g[d+(v<<4)>>2]=B;g[d+(v<<4)+4>>2]=F;g[d+(v<<4)+8>>2]=E;g[d+(v<<4)+12>>2]=0.0}y=v+1|0;if((y|0)>=(e|0)){break}v=y;w=c[k>>2]|0}i=f;return}function mP(a,b,d){a=a|0;b=+b;d=d|0;var e=0,f=0,h=0,j=0.0,k=0,l=0,m=0,n=0,o=0.0,p=0.0,q=0.0;e=i;i=i+16|0;f=e|0;h=c[a+52>>2]|0;j=+g[a+28+(((h+2|0)%3|0)<<2)>>2];k=f|0;g[k>>2]=j;l=f+4|0;g[l>>2]=j;m=f+8|0;g[m>>2]=j;g[f+12>>2]=0.0;n=f+(h<<2)|0;g[n>>2]=+g[a+28+(h<<2)>>2]+ +g[n>>2];j=(+g[k>>2]+.03999999910593033)*2.0;o=(+g[l>>2]+.03999999910593033)*2.0;p=(+g[m>>2]+.03999999910593033)*2.0;q=j*j;j=o*o;o=p*p;p=b*.0833333283662796;g[d>>2]=p*(j+o);g[d+4>>2]=p*(q+o);g[d+8>>2]=p*(q+j);i=e;return}function mQ(a,b,d){a=a|0;b=+b;d=+d;ne(a|0);c[a+4>>2]=10;c[a>>2]=34512;c[a+52>>2]=0;g[a+28>>2]=d*.5;g[a+32>>2]=b;g[a+36>>2]=b;g[a+40>>2]=0.0;return}function mR(a){a=a|0;nv(a|0);return}function mS(a){a=a|0;nv(a|0);zw(a);return}function mT(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,h=0,j=0,k=0.0,l=0,m=0,n=0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0;f=i;i=i+16|0;h=f|0;j=c[a+52>>2]|0;k=+g[a+28+(((j+2|0)%3|0)<<2)>>2];l=h|0;g[l>>2]=k;m=h+4|0;g[m>>2]=k;n=h+8|0;g[n>>2]=k;g[h+12>>2]=0.0;g[h+(j<<2)>>2]=k+ +g[a+28+(j<<2)>>2];j=a|0;h=a;k=+g6[c[(c[h>>2]|0)+48>>2]&15](j);o=+g6[c[(c[h>>2]|0)+48>>2]&15](j);p=+g6[c[(c[h>>2]|0)+48>>2]&15](j);q=k+ +g[l>>2];g[l>>2]=q;k=o+ +g[m>>2];g[m>>2]=k;o=p+ +g[n>>2];p=+V(+(+g[b>>2]));r=+V(+(+g[b+4>>2]));s=+V(+(+g[b+8>>2]));t=+V(+(+g[b+16>>2]));u=+V(+(+g[b+20>>2]));v=+V(+(+g[b+24>>2]));w=+V(+(+g[b+32>>2]));x=+V(+(+g[b+36>>2]));y=+V(+(+g[b+40>>2]));z=+g[b+48>>2];A=+g[b+52>>2];B=+g[b+56>>2];C=o*s+(p*q+r*k);r=o*v+(t*q+u*k);u=o*y+(w*q+x*k);g[d>>2]=z-C;g[d+4>>2]=A-r;g[d+8>>2]=B-u;g[d+12>>2]=0.0;g[e>>2]=z+C;g[e+4>>2]=A+r;g[e+8>>2]=B+u;g[e+12>>2]=0.0;i=f;return}function mU(a,b){a=a|0;b=b|0;var d=0,e=0,f=0.0,h=0.0,i=0.0,j=0,k=0,l=0,m=0.0,n=0,o=0.0,p=0,q=0.0,r=0.0;d=a|0;e=a;f=+g6[c[(c[e>>2]|0)+48>>2]&15](d);h=+g6[c[(c[e>>2]|0)+48>>2]&15](d);i=+g6[c[(c[e>>2]|0)+48>>2]&15](d);e=a+28|0;j=a+32|0;k=a+36|0;l=a+12|0;m=(f+ +g[e>>2])/+g[l>>2];n=a+16|0;o=(h+ +g[j>>2])/+g[n>>2];p=a+20|0;q=(i+ +g[k>>2])/+g[p>>2];nf(d,b);r=o*+g[n>>2]-h;h=q*+g[p>>2]-i;g[e>>2]=m*+g[l>>2]-f;g[j>>2]=r;g[k>>2]=h;g[a+40>>2]=0.0;return}function mV(a){a=a|0;return 17976}function mW(a,b){a=a|0;b=b|0;K1(a|0,0,16)|0;g[a+(c[b+52>>2]<<2)>>2]=1.0;return}function mX(a,b){a=a|0;b=+b;var d=0,e=0,f=0.0,h=0.0,i=0.0,j=0,k=0.0,l=0,m=0,n=0.0;d=a|0;e=a;f=+g6[c[(c[e>>2]|0)+48>>2]&15](d);h=+g6[c[(c[e>>2]|0)+48>>2]&15](d);i=+g6[c[(c[e>>2]|0)+48>>2]&15](d);j=a+28|0;k=f+ +g[j>>2];l=a+32|0;f=h+ +g[l>>2];m=a+36|0;h=i+ +g[m>>2];g[a+44>>2]=b;b=+g6[c[(c[e>>2]|0)+48>>2]&15](d);i=+g6[c[(c[e>>2]|0)+48>>2]&15](d);n=h- +g6[c[(c[e>>2]|0)+48>>2]&15](d);g[j>>2]=k-b;g[l>>2]=f-i;g[m>>2]=n;g[a+40>>2]=0.0;return}function mY(a){a=a|0;return 60}function mZ(a,b,d){a=a|0;b=b|0;d=d|0;m7(a|0,b,d)|0;g[b+28>>2]=+g[a+28>>2];g[b+32>>2]=+g[a+32>>2];g[b+36>>2]=+g[a+36>>2];g[b+40>>2]=+g[a+40>>2];g[b+12>>2]=+g[a+12>>2];g[b+16>>2]=+g[a+16>>2];g[b+20>>2]=+g[a+20>>2];g[b+24>>2]=+g[a+24>>2];g[b+44>>2]=+g[a+44>>2];c[b+52>>2]=c[a+52>>2];return 21248}function m_(a){a=a|0;return 0}function m$(a,b,c){a=a|0;b=b|0;c=c|0;return}function m0(a){a=a|0;nv(a|0);return}function m1(a){a=a|0;nv(a|0);zw(a);return}function m2(a){a=a|0;return 16496}function m3(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,h=0,j=0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0;e=i;i=i+96|0;f=e|0;h=e+64|0;j=e+80|0;g[f>>2]=1.0;K1(f+4|0,0,16)|0;g[f+20>>2]=1.0;K1(f+24|0,0,16)|0;g[f+40>>2]=1.0;K1(f+44|0,0,20)|0;hM[c[(c[a>>2]|0)+8>>2]&255](a,f,h,j);k=+g[j>>2];l=+g[h>>2];m=k-l;n=+g[j+4>>2];o=+g[h+4>>2];p=n-o;q=+g[j+8>>2];r=+g[h+8>>2];s=q-r;g[d>>2]=+W(m*m+p*p+s*s)*.5;g[b>>2]=(l+k)*.5;g[b+4>>2]=(o+n)*.5;g[b+8>>2]=(r+q)*.5;g[b+12>>2]=0.0;i=e;return}function m4(a,b){a=a|0;b=+b;return+(+g6[c[(c[a>>2]|0)+16>>2]&15](a)*b)}function m5(a){a=a|0;var b=0,d=0,e=0,f=0.0,h=0.0,j=0.0,k=0.0;b=i;i=i+24|0;d=b|0;e=b+16|0;hF[c[(c[a>>2]|0)+12>>2]&255](a,d,e);f=+g[d>>2];h=+g[d+4>>2];j=+g[d+8>>2];k=+W(f*f+h*h+j*j);i=b;return+(k+ +g[e>>2])}function m6(a,b,d,e,f,h,i){a=a|0;b=b|0;d=d|0;e=e|0;f=+f;h=h|0;i=i|0;var j=0.0,k=0,l=0.0,m=0,n=0.0,o=0,p=0.0,q=0,r=0.0,s=0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0;hM[c[(c[a>>2]|0)+8>>2]&255](a,b,h,i);b=i|0;j=+g[b>>2];k=i+4|0;l=+g[k>>2];m=i+8|0;n=+g[m>>2];o=h|0;p=+g[o>>2];q=h+4|0;r=+g[q>>2];s=h+8|0;t=+g[s>>2];u=+g[d>>2]*f;v=+g[d+4>>2]*f;w=+g[d+8>>2]*f;if(u>0.0){x=p;y=j+u}else{x=p+u;y=j}if(v>0.0){z=r;A=l+v}else{z=r+v;A=l}if(w>0.0){B=t;C=n+w}else{B=t+w;C=n}n=+g[e>>2];w=+g[e+4>>2];t=+g[e+8>>2];l=+W(n*n+w*w+t*t);t=l*+g6[c[(c[a>>2]|0)+16>>2]&15](a)*f;g[o>>2]=x;g[q>>2]=z;g[s>>2]=B;g[h+12>>2]=0.0;g[b>>2]=y;g[k>>2]=A;g[m>>2]=C;g[i+12>>2]=0.0;g[o>>2]=+g[o>>2]-t;g[q>>2]=+g[q>>2]-t;g[s>>2]=+g[s>>2]-t;g[b>>2]=t+ +g[b>>2];g[k>>2]=t+ +g[k>>2];g[m>>2]=t+ +g[m>>2];return}function m7(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0;e=d;f=hx[c[(c[e>>2]|0)+40>>2]&127](d,a)|0;g=hx[c[(c[e>>2]|0)+28>>2]&127](d,f)|0;c[b>>2]=g;if((g|0)==0){h=a+4|0;i=c[h>>2]|0;j=b+4|0;k=j;c[k>>2]=i;return 16448}g0[c[(c[d>>2]|0)+48>>2]&511](d,f);h=a+4|0;i=c[h>>2]|0;j=b+4|0;k=j;c[k>>2]=i;return 16448}function m8(a,b){a=a|0;b=b|0;var d=0,e=0;d=g3[c[(c[a>>2]|0)+52>>2]&511](a)|0;e=hd[c[(c[b>>2]|0)+16>>2]&127](b,d,1)|0;d=hd[c[(c[a>>2]|0)+56>>2]&127](a,c[e+8>>2]|0,b)|0;g7[c[(c[b>>2]|0)+20>>2]&127](b,e,d,1346455635,a);return}function m9(a){a=a|0;return 12}function na(a){a=a|0;c[a+4>>2]=35;c[a+8>>2]=0;c[a>>2]=34832;g[a+12>>2]=0.0;return}function nb(a){a=a|0;zw(a);return}function nc(a){a=a|0;return}function nd(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;hM[c[(c[a>>2]|0)+80>>2]&255](a,b,d,e);return}function ne(a){a=a|0;nt(a|0);c[a>>2]=32712;g[a+12>>2]=1.0;g[a+16>>2]=1.0;g[a+20>>2]=1.0;g[a+24>>2]=0.0;g[a+44>>2]=.03999999910593033;return}function nf(a,b){a=a|0;b=b|0;var c=0.0,d=0.0,e=0.0;c=+V(+(+g[b>>2]));d=+V(+(+g[b+4>>2]));e=+V(+(+g[b+8>>2]));g[a+12>>2]=c;g[a+16>>2]=d;g[a+20>>2]=e;g[a+24>>2]=0.0;return}function ng(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0.0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0.0,_=0.0,$=0.0,aa=0.0,ab=0.0;f=i;i=i+96|0;h=f|0;j=f+16|0;k=f+32|0;l=f+48|0;m=f+64|0;n=f+80|0;o=+g6[c[(c[a>>2]|0)+48>>2]&15](a);p=h|0;q=h+4|0;r=h+8|0;s=a;t=b|0;u=b+16|0;v=b+32|0;w=b+4|0;x=b+20|0;y=b+36|0;z=b+8|0;A=b+24|0;B=b+40|0;C=k|0;D=k+4|0;E=k+8|0;F=k+12|0;G=j|0;H=j+4|0;I=j+8|0;J=b+48|0;K=b+52|0;L=b+56|0;b=l|0;M=l+4|0;N=l+8|0;O=l+12|0;P=n|0;Q=n+4|0;R=n+8|0;S=n+12|0;T=m|0;U=m+4|0;V=m+8|0;W=0;do{X=h+(W<<2)|0;K1(h|0,0,16)|0;g[X>>2]=1.0;Y=c[(c[s>>2]|0)+64>>2]|0;Z=+g[p>>2];_=+g[q>>2];$=+g[r>>2];aa=Z*+g[w>>2]+_*+g[x>>2]+$*+g[y>>2];ab=Z*+g[z>>2]+_*+g[A>>2]+$*+g[B>>2];g[C>>2]=+g[t>>2]*Z+ +g[u>>2]*_+ +g[v>>2]*$;g[D>>2]=aa;g[E>>2]=ab;g[F>>2]=0.0;hF[Y&255](j,a,k);ab=+g[G>>2];aa=+g[H>>2];$=+g[I>>2];_=ab*+g[u>>2]+aa*+g[x>>2]+$*+g[A>>2]+ +g[K>>2];Z=ab*+g[v>>2]+aa*+g[y>>2]+$*+g[B>>2]+ +g[L>>2];g[b>>2]=ab*+g[t>>2]+aa*+g[w>>2]+$*+g[z>>2]+ +g[J>>2];g[M>>2]=_;g[N>>2]=Z;g[O>>2]=0.0;Y=l+(W<<2)|0;g[e+(W<<2)>>2]=o+ +g[Y>>2];g[X>>2]=-1.0;X=c[(c[s>>2]|0)+64>>2]|0;Z=+g[p>>2];_=+g[q>>2];$=+g[r>>2];aa=Z*+g[w>>2]+_*+g[x>>2]+$*+g[y>>2];ab=Z*+g[z>>2]+_*+g[A>>2]+$*+g[B>>2];g[P>>2]=+g[t>>2]*Z+ +g[u>>2]*_+ +g[v>>2]*$;g[Q>>2]=aa;g[R>>2]=ab;g[S>>2]=0.0;hF[X&255](m,a,n);ab=+g[T>>2];aa=+g[U>>2];$=+g[V>>2];_=ab*+g[u>>2]+aa*+g[x>>2]+$*+g[A>>2]+ +g[K>>2];Z=ab*+g[v>>2]+aa*+g[y>>2]+$*+g[B>>2]+ +g[L>>2];g[b>>2]=ab*+g[t>>2]+aa*+g[w>>2]+$*+g[z>>2]+ +g[J>>2];g[M>>2]=_;g[N>>2]=Z;g[O>>2]=0.0;g[d+(W<<2)>>2]=+g[Y>>2]-o;W=W+1|0;}while((W|0)<3);i=f;return}function nh(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0.0,h=0.0,i=0.0,j=0.0,k=0.0;hF[c[(c[b>>2]|0)+68>>2]&255](a,b|0,d);e=b;if(+g6[c[(c[e>>2]|0)+48>>2]&15](b)==0.0){return}f=+g[d>>2];h=+g[d+4>>2];i=+g[d+8>>2];d=f*f+h*h+i*i<1.4210854715202004e-14;j=d?-1.0:i;i=d?-1.0:h;h=d?-1.0:f;f=1.0/+W(j*j+(h*h+i*i));k=+g6[c[(c[e>>2]|0)+48>>2]&15](b);b=a|0;g[b>>2]=f*h*k+ +g[b>>2];b=a+4|0;g[b>>2]=k*f*i+ +g[b>>2];b=a+8|0;g[b>>2]=k*f*j+ +g[b>>2];return}function ni(a){a=a|0;nv(a|0);return}function nj(a){a=a|0;nv(a|0);zw(a);return}function nk(b){b=b|0;c[b>>2]=33416;a[b+20|0]=1;c[b+16>>2]=0;c[b+8>>2]=0;c[b+12>>2]=0;a[b+40|0]=1;c[b+36>>2]=0;c[b+28>>2]=0;c[b+32>>2]=0;a[b+60|0]=1;c[b+56>>2]=0;c[b+48>>2]=0;c[b+52>>2]=0;return}function nl(a){a=a|0;nm(a);zw(a);return}function nm(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;c[b>>2]=33416;d=b+48|0;e=b+56|0;f=c[e>>2]|0;g=b+60|0;if((f|0)!=0){if((a[g]&1)!=0){zw(f)}c[e>>2]=0}a[g]=1;c[e>>2]=0;c[d>>2]=0;c[b+52>>2]=0;d=b+28|0;e=c[d>>2]|0;g=b+36|0;if((e|0)>0){f=0;do{h=c[g>>2]|0;i=h+(f*36|0)+4|0;j=h+(f*36|0)+12|0;k=c[j>>2]|0;l=h+(f*36|0)+16|0;if((k|0)!=0){if((a[l]&1)!=0){zw(k)}c[j>>2]=0}a[l]=1;c[j>>2]=0;c[i>>2]=0;c[h+(f*36|0)+8>>2]=0;f=f+1|0;}while((f|0)<(e|0))}e=c[g>>2]|0;f=b+40|0;if((e|0)!=0){if((a[f]&1)!=0){zw(e|0)}c[g>>2]=0}a[f]=1;c[g>>2]=0;c[d>>2]=0;c[b+32>>2]=0;d=b+8|0;g=b+16|0;f=c[g>>2]|0;e=b+20|0;if((f|0)==0){a[e]=1;c[g>>2]=0;c[d>>2]=0;m=b+12|0;c[m>>2]=0;return}if((a[e]&1)!=0){zw(f)}c[g>>2]=0;a[e]=1;c[g>>2]=0;c[d>>2]=0;m=b+12|0;c[m>>2]=0;return}function nn(a){a=a|0;var b=0,d=0,e=0,f=0,h=0,i=0,j=0,k=0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0,s=0,t=0,u=0;b=a+80|0;d=a+84|0;e=a+88|0;f=a+64|0;h=a+68|0;i=a+72|0;j=c[a+28>>2]|0;k=a+36|0;l=0.0;m=0.0;n=0.0;a=0;L1:while(1){switch(a|0){case 2:{o=+g[b>>2]+ +g[f>>2];p=+g[h>>2]- +g[d>>2];q=+g[e>>2]+ +g[i>>2];break};case 6:{o=+g[f>>2]- +g[b>>2];p=+g[h>>2]- +g[d>>2];q=+g[e>>2]+ +g[i>>2];break};case 7:{o=+g[f>>2]- +g[b>>2];p=+g[h>>2]- +g[d>>2];q=+g[i>>2]- +g[e>>2];break};case 5:{o=+g[f>>2]- +g[b>>2];p=+g[d>>2]+ +g[h>>2];q=+g[i>>2]- +g[e>>2];break};case 4:{o=+g[f>>2]- +g[b>>2];p=+g[d>>2]+ +g[h>>2];q=+g[e>>2]+ +g[i>>2];break};case 3:{o=+g[b>>2]+ +g[f>>2];p=+g[h>>2]- +g[d>>2];q=+g[i>>2]- +g[e>>2];break};case 1:{o=+g[b>>2]+ +g[f>>2];p=+g[d>>2]+ +g[h>>2];q=+g[i>>2]- +g[e>>2];break};case 0:{o=+g[b>>2]+ +g[f>>2];p=+g[d>>2]+ +g[h>>2];q=+g[e>>2]+ +g[i>>2];break};default:{o=n;p=m;q=l}}r=0;while(1){if((r|0)>=(j|0)){break}s=c[k>>2]|0;if(+g[s+(r*36|0)+32>>2]+(o*+g[s+(r*36|0)+20>>2]+p*+g[s+(r*36|0)+24>>2]+q*+g[s+(r*36|0)+28>>2])>0.0){t=0;u=17;break L1}else{r=r+1|0}}r=a+1|0;if((r|0)<8){l=q;m=p;n=o;a=r}else{t=1;u=16;break}}if((u|0)==17){return t|0}else if((u|0)==16){return t|0}return 0}function no(d){d=d|0;var e=0,f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,X=0.0,Y=0.0,Z=0.0,_=0.0,$=0.0,aa=0.0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0.0,ah=0,ai=0,aj=0.0,ak=0.0,al=0.0,am=0.0,an=0.0,ao=0.0,ap=0.0,aq=0.0,ar=0.0,as=0.0,at=0.0,au=0.0,av=0.0,aw=0.0,ax=0.0,ay=0.0,az=0.0,aA=0.0,aB=0.0,aC=0.0,aD=0.0,aE=0.0,aF=0.0,aG=0.0,aH=0.0,aI=0.0,aJ=0.0,aK=0.0,aL=0,aM=0.0,aN=0.0;e=i;i=i+96|0;f=e|0;h=e+80|0;j=e+88|0;a[f+16|0]=1;k=f+12|0;c[k>>2]=0;l=f+4|0;c[l>>2]=0;c[f+8>>2]=0;a[f+36|0]=1;m=f+32|0;c[m>>2]=0;c[f+24>>2]=0;c[f+28>>2]=0;a[f+56|0]=1;n=f+52|0;c[n>>2]=0;c[f+44>>2]=0;o=f+48|0;c[o>>2]=0;a[f+76|0]=1;p=f+72|0;c[p>>2]=0;c[f+64>>2]=0;c[f+68>>2]=0;q=d+64|0;r=d+68|0;s=d+72|0;t=d+28|0;K1(q|0,0,16)|0;u=c[t>>2]|0;do{if((u|0)>0){v=d+36|0;w=h|0;x=h+2|0;y=d+16|0;z=d+48|0;A=j|0;B=j+2|0;C=d+52|0;D=d+56|0;E=d+60|0;F=0;G=u;while(1){H=c[v>>2]|0;I=c[H+(F*36|0)+4>>2]|0;if((I|0)>0){J=F&65535;K=0;L=H;while(1){H=K+1|0;M=c[L+(F*36|0)+12>>2]|0;N=c[M+(K<<2)>>2]&65535;O=c[M+(((H|0)==(I|0)?0:H)<<2)>>2]&65535;b[w>>1]=N;b[x>>1]=O;if(N<<16>>16<O<<16>>16){b[w>>1]=O;b[x>>1]=N;P=O;Q=N}else{P=N;Q=O}O=P<<16>>16;N=((Q&65535)<<16)+O&(c[o>>2]|0)-1;L12:do{if(N>>>0<(c[l>>2]|0)>>>0){M=c[(c[k>>2]|0)+(N<<2)>>2]|0;if((M|0)==-1){R=0;break}S=c[p>>2]|0;T=c[m>>2]|0;U=M;while(1){if(P<<16>>16==(b[S+(U<<2)>>1]|0)){if(Q<<16>>16==(b[S+(U<<2)+2>>1]|0)){break}}M=c[T+(U<<2)>>2]|0;if((M|0)==-1){R=0;break L12}else{U=M}}if((U|0)==-1){R=0;break}R=(c[n>>2]|0)+(U<<2)|0}else{R=0}}while(0);N=Q<<16>>16;T=c[y>>2]|0;X=+g[T+(N<<4)>>2]- +g[T+(O<<4)>>2];Y=+g[T+(N<<4)+4>>2]- +g[T+(O<<4)+4>>2];Z=+g[T+(N<<4)+8>>2]- +g[T+(O<<4)+8>>2];_=1.0/+W(X*X+Y*Y+Z*Z);$=X*_;X=Y*_;Y=Z*_;T=c[z>>2]|0;L23:do{if((T|0)>0){N=c[D>>2]|0;S=0;while(1){_=+g[N+(S<<4)>>2];Z=+g[N+(S<<4)+8>>2];aa=Z-Y;do{if(+V(+(_-$))<=1.0e-6){if(+V(+(+g[N+(S<<4)+4>>2]-X))>1.0e-6){break}if(+V(+aa)<=1.0e-6){break L23}}}while(0);aa=Y+Z;do{if(+V(+($+_))<=1.0e-6){if(+V(+(X+ +g[N+(S<<4)+4>>2]))>1.0e-6){break}if(+V(+aa)<=1.0e-6){break L23}}}while(0);M=S+1|0;if((M|0)<(T|0)){S=M}else{ab=27;break}}}else{ab=27}}while(0);if((ab|0)==27){ab=0;do{if((T|0)==(c[C>>2]|0)){O=(T|0)==0?1:T<<1;if((T|0)>=(O|0)){ac=T;break}if((O|0)==0){ad=0;ae=T}else{S=zv(O<<4,16)|0;ad=S;ae=c[z>>2]|0}if((ae|0)>0){S=0;do{N=ad+(S<<4)|0;U=(c[D>>2]|0)+(S<<4)|0;c[N>>2]=c[U>>2];c[N+4>>2]=c[U+4>>2];c[N+8>>2]=c[U+8>>2];c[N+12>>2]=c[U+12>>2];S=S+1|0;}while((S|0)<(ae|0))}S=c[D>>2]|0;if((S|0)!=0){if((a[E]&1)!=0){zw(S)}c[D>>2]=0}a[E]=1;c[D>>2]=ad;c[C>>2]=O;ac=c[z>>2]|0}else{ac=T}}while(0);T=c[D>>2]|0;g[T+(ac<<4)>>2]=$;g[T+(ac<<4)+4>>2]=X;g[T+(ac<<4)+8>>2]=Y;g[T+(ac<<4)+12>>2]=0.0;c[z>>2]=(c[z>>2]|0)+1}if((R|0)==0){b[B>>1]=-1;b[A>>1]=J;np(f,h,j)}else{b[R+2>>1]=J}if((H|0)>=(I|0)){break}K=H;L=c[v>>2]|0}af=c[t>>2]|0}else{af=G}L=F+1|0;if((L|0)<(af|0)){F=L;G=af}else{break}}G=(af|0)>0;if(!G){ag=0.0;ah=af;ai=0;break}F=c[d+36>>2]|0;v=c[d+16>>2]|0;aa=0.0;A=0;while(1){B=c[F+(A*36|0)+4>>2]|0;z=B-2|0;D=F+(A*36|0)+12|0;C=c[D>>2]|0;E=c[C>>2]|0;L67:do{if((z|0)<1){aj=aa}else{y=v+(E<<4)|0;x=v+(E<<4)+4|0;w=v+(E<<4)+8|0;_=aa;L=1;Z=+g[q>>2];ak=+g[r>>2];al=+g[s>>2];K=C;while(1){I=L+1|0;J=c[K+(L<<2)>>2]|0;T=c[K+(((I|0)%(B|0)|0)<<2)>>2]|0;am=+g[y>>2];an=+g[v+(J<<4)>>2];ao=am-an;ap=+g[x>>2];aq=+g[v+(J<<4)+4>>2];ar=ap-aq;as=+g[w>>2];at=+g[v+(J<<4)+8>>2];au=as-at;av=+g[v+(T<<4)>>2];aw=am-av;ax=+g[v+(T<<4)+4>>2];ay=ap-ax;az=+g[v+(T<<4)+8>>2];aA=as-az;aB=ar*aA-au*ay;aC=au*aw-ao*aA;aA=ao*ay-ar*aw;aw=+W(aA*aA+(aB*aB+aC*aC))*.5;aC=Z+(am+an+av)*.3333333432674408*aw;g[q>>2]=aC;av=(ap+aq+ax)*.3333333432674408*aw+ak;g[r>>2]=av;ax=aw*(as+at+az)*.3333333432674408+al;g[s>>2]=ax;az=_+aw;if((I|0)>(z|0)){aj=az;break L67}_=az;L=I;Z=aC;ak=av;al=ax;K=c[D>>2]|0}}}while(0);D=A+1|0;if((D|0)<(af|0)){aa=aj;A=D}else{ag=aj;ah=af;ai=G;break}}}else{ag=0.0;ah=u;ai=0}}while(0);aj=1.0/ag;ag=aj*+g[q>>2];g[q>>2]=ag;aa=aj*+g[r>>2];g[r>>2]=aa;al=aj*+g[s>>2];g[s>>2]=al;s=d+96|0;g[s>>2]=3.4028234663852886e+38;if(ai){ai=c[d+36>>2]|0;r=0;aj=3.4028234663852886e+38;while(1){ak=+V(+(+g[ai+(r*36|0)+32>>2]+(+g[ai+(r*36|0)+20>>2]*ag+ +g[ai+(r*36|0)+24>>2]*aa+ +g[ai+(r*36|0)+28>>2]*al)));if(ak<aj){g[s>>2]=ak;aD=ak}else{aD=aj}q=r+1|0;if((q|0)<(ah|0)){r=q;aj=aD}else{aE=aD;break}}}else{aE=3.4028234663852886e+38}r=c[d+8>>2]|0;if((r|0)>0){ah=c[d+16>>2]|0;aD=3.4028234663852886e+38;aj=-3.4028234663852886e+38;al=-3.4028234663852886e+38;aa=-3.4028234663852886e+38;ai=0;ag=3.4028234663852886e+38;ak=3.4028234663852886e+38;while(1){Z=+g[ah+(ai<<4)>>2];_=Z<ak?Z:ak;Y=Z>aj?Z:aj;Z=+g[ah+(ai<<4)+4>>2];X=Z<ag?Z:ag;$=Z>al?Z:al;Z=+g[ah+(ai<<4)+8>>2];ax=Z<aD?Z:aD;av=Z>aa?Z:aa;q=ai+1|0;if((q|0)<(r|0)){aD=ax;aj=Y;al=$;aa=av;ai=q;ag=X;ak=_}else{aF=ax;aG=Y;aH=$;aI=av;aJ=X;aK=_;break}}}else{aF=3.4028234663852886e+38;aG=-3.4028234663852886e+38;aH=-3.4028234663852886e+38;aI=-3.4028234663852886e+38;aJ=3.4028234663852886e+38;aK=3.4028234663852886e+38}g[d+100>>2]=aG+aK;g[d+104>>2]=aH+aJ;g[d+108>>2]=aF+aI;g[d+112>>2]=0.0;ak=aG-aK;aK=aH-aJ;aJ=aI-aF;g[d+116>>2]=ak;g[d+120>>2]=aK;g[d+124>>2]=aJ;g[d+128>>2]=0.0;aF=aE/1.7320507764816284;if(ak<aK){aL=aK<aJ?2:1}else{aL=ak<aJ?2:0}ai=d+116+(aL<<2)|0;aJ=(+g[ai>>2]*.5-aF)*.0009765625;r=d+80|0;ah=d+88|0;g[ah>>2]=aF;q=d+84|0;g[q>>2]=aF;g[r>>2]=aF;ak=+g[ai>>2]*.5;ai=d+80+(aL<<2)|0;g[ai>>2]=ak;u=0;aK=ak;while(1){if(nn(d)|0){break}ak=aK-aJ;g[ai>>2]=ak;af=u+1|0;if((af|0)<1024){u=af;aK=ak}else{ab=66;break}}if((ab|0)==66){g[ah>>2]=aF;g[q>>2]=aF;g[r>>2]=aF;ns(f);i=e;return}aK=(+g[s>>2]-aF)*.0009765625;s=1<<aL&3;aL=d+80+(s<<2)|0;r=d+80+((1<<s&3)<<2)|0;s=0;while(1){if((s|0)>=1024){ab=73;break}aM=+g[aL>>2];aN=+g[r>>2];g[aL>>2]=aK+aM;g[r>>2]=aK+ +g[r>>2];if(nn(d)|0){s=s+1|0}else{break}}if((ab|0)==73){ns(f);i=e;return}g[aL>>2]=aM;g[r>>2]=aN;ns(f);i=e;return}function np(d,f,g){d=d|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,D=0,E=0;h=f|0;i=b[h>>1]|0;j=f+2|0;k=b[j>>1]|0;l=d+48|0;m=c[l>>2]|0;n=((k&65535)<<16)+(i<<16>>16)&m-1;L1:do{if(n>>>0<(c[d+4>>2]|0)>>>0){o=c[(c[d+12>>2]|0)+(n<<2)>>2]|0;if((o|0)==-1){break}p=c[d+72>>2]|0;q=d+32|0;r=o;while(1){if(i<<16>>16==(b[p+(r<<2)>>1]|0)){if(k<<16>>16==(b[p+(r<<2)+2>>1]|0)){break}}o=c[(c[q>>2]|0)+(r<<2)>>2]|0;if((o|0)==-1){break L1}else{r=o}}if((r|0)==-1){break}q=g;p=(c[d+52>>2]|0)+(r<<2)|0;C=e[q>>1]|e[q+2>>1]<<16;b[p>>1]=C;b[p+2>>1]=C>>16;return}}while(0);k=d+44|0;i=c[k>>2]|0;do{if((i|0)==(m|0)){p=(m|0)==0?1:m<<1;if((m|0)>=(p|0)){s=m;break}if((p|0)==0){t=0;u=m}else{q=zv(p<<2,16)|0;t=q;u=c[k>>2]|0}q=d+52|0;if((u|0)>0){o=0;do{v=t+(o<<2)|0;if((v|0)!=0){w=(c[q>>2]|0)+(o<<2)|0;x=v;C=e[w>>1]|e[w+2>>1]<<16;b[x>>1]=C;b[x+2>>1]=C>>16}o=o+1|0;}while((o|0)<(u|0))}o=c[q>>2]|0;r=d+56|0;if((o|0)!=0){if((a[r]&1)!=0){zw(o)}c[q>>2]=0}a[r]=1;c[q>>2]=t;c[l>>2]=p;s=c[k>>2]|0}else{s=i}}while(0);t=(c[d+52>>2]|0)+(s<<2)|0;if((t|0)==0){y=s}else{s=g;g=t;C=e[s>>1]|e[s+2>>1]<<16;b[g>>1]=C;b[g+2>>1]=C>>16;y=c[k>>2]|0}c[k>>2]=y+1;y=d+64|0;k=c[y>>2]|0;g=d+68|0;do{if((k|0)==(c[g>>2]|0)){s=(k|0)==0?1:k<<1;if((k|0)>=(s|0)){z=k;break}if((s|0)==0){A=0;B=k}else{t=zv(s<<2,16)|0;A=t;B=c[y>>2]|0}t=d+72|0;if((B|0)>0){u=0;do{r=A+(u<<2)|0;if((r|0)!=0){o=(c[t>>2]|0)+(u<<2)|0;x=r;C=e[o>>1]|e[o+2>>1]<<16;b[x>>1]=C;b[x+2>>1]=C>>16}u=u+1|0;}while((u|0)<(B|0))}u=c[t>>2]|0;p=d+76|0;if((u|0)!=0){if((a[p]&1)!=0){zw(u)}c[t>>2]=0}a[p]=1;c[t>>2]=A;c[g>>2]=s;z=c[y>>2]|0}else{z=k}}while(0);k=(c[d+72>>2]|0)+(z<<2)|0;if((k|0)==0){D=z}else{z=f;f=k;C=e[z>>1]|e[z+2>>1]<<16;b[f>>1]=C;b[f+2>>1]=C>>16;D=c[y>>2]|0}c[y>>2]=D+1;if((m|0)<(c[l>>2]|0)){nr(d,0);E=(e[j>>1]<<16)+(b[h>>1]|0)&(c[l>>2]|0)-1}else{E=n}n=d+12|0;c[(c[d+32>>2]|0)+(i<<2)>>2]=c[(c[n>>2]|0)+(E<<2)>>2];c[(c[n>>2]|0)+(E<<2)>>2]=i;return}function nq(a,b,d,e,f,h,j){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0.0,L=0.0,M=0.0,N=0.0,O=0.0,P=0.0,Q=0.0;k=i;i=i+16|0;l=k|0;g[e>>2]=3.4028234663852886e+38;g[f>>2]=-3.4028234663852886e+38;m=c[a+8>>2]|0;if((m|0)>0){n=a+16|0;a=b|0;o=b+4|0;p=b+8|0;q=b+16|0;r=b+20|0;s=b+24|0;t=b+32|0;u=b+36|0;v=b+40|0;w=b+48|0;x=b+52|0;y=b+56|0;b=d|0;z=d+4|0;A=d+8|0;d=h|0;B=h+4|0;C=h+8|0;D=h+12|0;E=j|0;F=j+4|0;G=j+8|0;H=j+12|0;I=0;do{J=c[n>>2]|0;K=+g[J+(I<<4)>>2];L=+g[J+(I<<4)+4>>2];M=+g[J+(I<<4)+8>>2];N=K*+g[a>>2]+L*+g[o>>2]+M*+g[p>>2]+ +g[w>>2];O=K*+g[q>>2]+L*+g[r>>2]+M*+g[s>>2]+ +g[x>>2];P=K*+g[t>>2]+L*+g[u>>2]+M*+g[v>>2]+ +g[y>>2];M=N*+g[b>>2]+O*+g[z>>2]+P*+g[A>>2];if(M<+g[e>>2]){g[e>>2]=M;g[d>>2]=N;g[B>>2]=O;g[C>>2]=P;g[D>>2]=0.0}if(M>+g[f>>2]){g[f>>2]=M;g[E>>2]=N;g[F>>2]=O;g[G>>2]=P;g[H>>2]=0.0}I=I+1|0;}while((I|0)<(m|0));Q=+g[f>>2]}else{Q=-3.4028234663852886e+38}P=+g[e>>2];if(P<=Q){i=k;return}g[e>>2]=Q;g[f>>2]=P;f=l;l=h;c[f>>2]=c[l>>2];c[f+4>>2]=c[l+4>>2];c[f+8>>2]=c[l+8>>2];c[f+12>>2]=c[l+12>>2];h=j;c[l>>2]=c[h>>2];c[l+4>>2]=c[h+4>>2];c[l+8>>2]=c[h+8>>2];c[l+12>>2]=c[h+12>>2];c[h>>2]=c[f>>2];c[h+4>>2]=c[f+4>>2];c[h+8>>2]=c[f+8>>2];c[h+12>>2]=c[f+12>>2];i=k;return}function nr(d,f){d=d|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;f=d+48|0;g=c[f>>2]|0;h=d+4|0;i=c[h>>2]|0;if((i|0)>=(g|0)){return}if((i|0)<=(g|0)){j=d+8|0;if((c[j>>2]|0)<(g|0)){if((g|0)==0){k=0;l=i}else{m=zv(g<<2,16)|0;k=m;l=c[h>>2]|0}m=d+12|0;if((l|0)>0){n=0;do{o=k+(n<<2)|0;if((o|0)!=0){c[o>>2]=c[(c[m>>2]|0)+(n<<2)>>2]}n=n+1|0;}while((n|0)<(l|0))}l=c[m>>2]|0;n=d+16|0;if((l|0)!=0){if((a[n]&1)!=0){zw(l)}c[m>>2]=0}a[n]=1;c[m>>2]=k;c[j>>2]=g;p=m}else{p=d+12|0}m=i;do{j=(c[p>>2]|0)+(m<<2)|0;if((j|0)!=0){c[j>>2]=0}m=m+1|0;}while((m|0)<(g|0))}c[h>>2]=g;h=d+24|0;m=c[h>>2]|0;if((m|0)<(g|0)){p=d+28|0;if((c[p>>2]|0)<(g|0)){if((g|0)==0){q=0;r=m}else{j=zv(g<<2,16)|0;q=j;r=c[h>>2]|0}j=d+32|0;if((r|0)>0){k=0;do{n=q+(k<<2)|0;if((n|0)!=0){c[n>>2]=c[(c[j>>2]|0)+(k<<2)>>2]}k=k+1|0;}while((k|0)<(r|0))}r=c[j>>2]|0;k=d+36|0;if((r|0)!=0){if((a[k]&1)!=0){zw(r)}c[j>>2]=0}a[k]=1;c[j>>2]=q;c[p>>2]=g;s=j}else{s=d+32|0}j=m;do{m=(c[s>>2]|0)+(j<<2)|0;if((m|0)!=0){c[m>>2]=0}j=j+1|0;}while((j|0)<(g|0))}c[h>>2]=g;h=(g|0)>0;do{if(h){j=d+12|0;s=0;do{c[(c[j>>2]|0)+(s<<2)>>2]=-1;s=s+1|0;}while((s|0)<(g|0));if(!h){break}s=d+32|0;j=0;do{c[(c[s>>2]|0)+(j<<2)>>2]=-1;j=j+1|0;}while((j|0)<(g|0))}}while(0);if((i|0)<=0){return}g=d+72|0;h=d+12|0;j=d+32|0;d=0;do{s=c[g>>2]|0;m=(e[s+(d<<2)+2>>1]<<16)+(b[s+(d<<2)>>1]|0)&(c[f>>2]|0)-1;c[(c[j>>2]|0)+(d<<2)>>2]=c[(c[h>>2]|0)+(m<<2)>>2];c[(c[h>>2]|0)+(m<<2)>>2]=d;d=d+1|0;}while((d|0)<(i|0));return}function ns(b){b=b|0;var d=0,e=0,f=0,g=0,h=0;d=b+64|0;e=b+72|0;f=c[e>>2]|0;g=b+76|0;if((f|0)!=0){if((a[g]&1)!=0){zw(f)}c[e>>2]=0}a[g]=1;c[e>>2]=0;c[d>>2]=0;c[b+68>>2]=0;d=b+44|0;e=b+52|0;g=c[e>>2]|0;f=b+56|0;if((g|0)!=0){if((a[f]&1)!=0){zw(g)}c[e>>2]=0}a[f]=1;c[e>>2]=0;c[d>>2]=0;c[b+48>>2]=0;d=b+24|0;e=b+32|0;f=c[e>>2]|0;g=b+36|0;if((f|0)!=0){if((a[g]&1)!=0){zw(f)}c[e>>2]=0}a[g]=1;c[e>>2]=0;c[d>>2]=0;c[b+28>>2]=0;d=b+4|0;e=b+12|0;g=c[e>>2]|0;f=b+16|0;if((g|0)==0){a[f]=1;c[e>>2]=0;c[d>>2]=0;h=b+8|0;c[h>>2]=0;return}if((a[f]&1)!=0){zw(g)}c[e>>2]=0;a[f]=1;c[e>>2]=0;c[d>>2]=0;h=b+8|0;c[h>>2]=0;return}function nt(a){a=a|0;c[a+4>>2]=35;c[a+8>>2]=0;c[a>>2]=35144;return}function nu(a){a=a|0;zw(a);return}function nv(a){a=a|0;return}function nw(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0.0,q=0,r=0,s=0.0,t=0,u=0,v=0.0,w=0,x=0,y=0.0,z=0,A=0,B=0,C=0.0,D=0,E=0,F=0,G=0,H=0,I=0.0,J=0.0,K=0.0,L=0.0;h=i;i=i+64|0;j=h|0;k=h+16|0;l=h+32|0;m=h+48|0;n=b|0;o=d|0;p=+g[o>>2];q=b+16|0;r=d+4|0;s=+g[r>>2];t=b+32|0;u=d+8|0;v=+g[u>>2];d=b+4|0;w=b+20|0;x=b+36|0;y=p*+g[d>>2]+s*+g[w>>2]+v*+g[x>>2];z=b+8|0;A=b+24|0;B=b+40|0;C=p*+g[z>>2]+s*+g[A>>2]+v*+g[B>>2];D=j|0;g[D>>2]=+g[n>>2]*p+ +g[q>>2]*s+ +g[t>>2]*v;E=j+4|0;g[E>>2]=y;F=j+8|0;g[F>>2]=C;g[j+12>>2]=0.0;G=a;hF[c[(c[G>>2]|0)+64>>2]&255](k,a,j);C=+g[k>>2];y=+g[k+4>>2];v=+g[k+8>>2];k=b+48|0;s=C*+g[n>>2]+y*+g[d>>2]+v*+g[z>>2]+ +g[k>>2];j=b+52|0;p=C*+g[q>>2]+y*+g[w>>2]+v*+g[A>>2]+ +g[j>>2];H=b+56|0;I=C*+g[t>>2]+y*+g[x>>2]+v*+g[B>>2]+ +g[H>>2];b=c[(c[G>>2]|0)+64>>2]|0;v=-0.0- +g[E>>2];y=-0.0- +g[F>>2];g[m>>2]=-0.0- +g[D>>2];g[m+4>>2]=v;g[m+8>>2]=y;g[m+12>>2]=0.0;hF[b&255](l,a,m);y=+g[l>>2];v=+g[l+4>>2];C=+g[l+8>>2];J=y*+g[n>>2]+v*+g[d>>2]+C*+g[z>>2]+ +g[k>>2];K=y*+g[q>>2]+v*+g[w>>2]+C*+g[A>>2]+ +g[j>>2];L=y*+g[t>>2]+v*+g[x>>2]+C*+g[B>>2]+ +g[H>>2];g[e>>2]=s*+g[o>>2]+p*+g[r>>2]+I*+g[u>>2];I=J*+g[o>>2]+K*+g[r>>2]+L*+g[u>>2];g[f>>2]=I;L=+g[e>>2];if(L<=I){i=h;return}g[e>>2]=I;g[f>>2]=L;i=h;return}function nx(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0,v=0,w=0.0,x=0.0,y=0,z=0,A=0,B=0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0,I=0.0,J=0.0,K=0.0,L=0.0,M=0,N=0,O=0,P=0,Q=0,R=0.0,S=0.0,T=0.0;e=i;i=i+80|0;f=e|0;h=e+16|0;j=e+32|0;k=e+48|0;l=e+64|0;switch(c[b+4>>2]|0){case 5:{m=c[b+92>>2]|0;n=c[b+96>>2]|0;o=+g[b+12>>2];p=+g[b+16>>2];q=+g[b+20>>2];r=+g[d>>2]*o;s=+g[d+4>>2]*p;t=+g[d+8>>2]*q;if((n|0)>0){u=0;v=-1;w=-3.4028234663852886e+38;while(1){x=r*+g[m+(u<<4)>>2]+s*+g[m+(u<<4)+4>>2]+t*+g[m+(u<<4)+8>>2];y=x>w;z=y?u:v;A=u+1|0;if((A|0)<(n|0)){u=A;v=z;w=y?x:w}else{B=z;break}}}else{B=-1}w=p*+g[m+(B<<4)+4>>2];p=q*+g[m+(B<<4)+8>>2];g[a>>2]=o*+g[m+(B<<4)>>2];g[a+4>>2]=w;g[a+8>>2]=p;g[a+12>>2]=0.0;i=e;return};case 0:{B=b+28|0;p=+g[B>>2];w=+g[B+4>>2];o=+g[d+4>>2]>=0.0?w:-0.0-w;w=+g[B+8>>2];q=+g[d+8>>2]>=0.0?w:-0.0-w;g[a>>2]=+g[d>>2]>=0.0?p:-0.0-p;g[a+4>>2]=o;g[a+8>>2]=q;g[a+12>>2]=0.0;i=e;return};case 10:{q=+g[d>>2];o=+g[d+4>>2];p=+g[d+8>>2];B=b;m=c[b+52>>2]|0;w=+g[B+28+(m<<2)>>2];t=+g[B+28+(((m+2|0)%3|0)<<2)>>2];s=q*q+o*o+p*p;if(s<9999999747378752.0e-20){C=1.0;D=0.0;E=0.0}else{r=1.0/+W(s);C=q*r;D=o*r;E=p*r}K1(k|0,0,16)|0;g[k+(m<<2)>>2]=w;r=t*C;p=t*D;o=t*E;t=+g[b+44>>2];q=C*t;s=D*t;x=E*t;t=+g[k>>2]+r-q;F=p+ +g[k+4>>2]-s;G=o+ +g[k+8>>2]-x;H=E*G+(C*t+D*F);if(H>-999999984306749400.0){I=H;J=t;K=F;L=G}else{I=-999999984306749400.0;J=0.0;K=0.0;L=0.0}K1(l|0,0,16)|0;g[l+(m<<2)>>2]=-0.0-w;w=r+ +g[l>>2]-q;q=p+ +g[l+4>>2]-s;s=o+ +g[l+8>>2]-x;l=E*s+(C*w+D*q)>I;g[a>>2]=l?w:J;g[a+4>>2]=l?q:K;g[a+8>>2]=l?s:L;g[a+12>>2]=0.0;i=e;return};case 1:{L=+g[d>>2];s=+g[d+4>>2];K=+g[d+8>>2];l=b+56|0;m=l;q=L*+g[l>>2]+s*+g[l+4>>2]+K*+g[l+8>>2];J=L*+g[l+16>>2]+s*+g[l+20>>2]+K*+g[l+24>>2];w=L*+g[l+32>>2]+s*+g[l+36>>2]+K*+g[l+40>>2];if(q<J){M=J<w?2:1}else{M=q<w?2:0}w=+g[m+(M<<4)+4>>2];q=+g[m+(M<<4)+8>>2];g[a>>2]=+g[m+(M<<4)>>2];g[a+4>>2]=w;g[a+8>>2]=q;g[a+12>>2]=0.0;i=e;return};case 4:{M=c[b+104>>2]|0;m=c[b+96>>2]|0;q=+g[b+12>>2];w=+g[b+16>>2];J=+g[b+20>>2];K=+g[d>>2]*q;s=+g[d+4>>2]*w;L=+g[d+8>>2]*J;if((m|0)>0){l=0;k=-1;I=-3.4028234663852886e+38;while(1){D=K*+g[M+(l<<4)>>2]+s*+g[M+(l<<4)+4>>2]+L*+g[M+(l<<4)+8>>2];B=D>I;v=B?l:k;u=l+1|0;if((u|0)<(m|0)){l=u;k=v;I=B?D:I}else{N=v;break}}}else{N=-1}I=w*+g[M+(N<<4)+4>>2];w=J*+g[M+(N<<4)+8>>2];g[a>>2]=q*+g[M+(N<<4)>>2];g[a+4>>2]=I;g[a+8>>2]=w;g[a+12>>2]=0.0;i=e;return};case 8:{K1(a|0,0,16)|0;i=e;return};case 13:{N=f;M=b+28|0;c[N>>2]=c[M>>2];c[N+4>>2]=c[M+4>>2];c[N+8>>2]=c[M+8>>2];c[N+12>>2]=c[M+12>>2];g[h>>2]=+g[d>>2];w=+g[d+4>>2];g[h+4>>2]=w;I=+g[d+8>>2];g[h+8>>2]=I;g[h+12>>2]=0.0;M=c[b+52>>2]|0;if((M|0)==1){O=0;P=M;Q=2;R=I}else if((M|0)==2){O=0;P=M;Q=1;R=w}else{O=1;P=0;Q=2;R=I}I=+g[f+(O<<2)>>2];w=+g[f+(M<<2)>>2];q=+g[h+(O<<2)>>2];J=+W(q*q+R*R);if(J!=0.0){L=I/J;g[j+(O<<2)>>2]=q*L;if(+g[h+(P<<2)>>2]<0.0){S=-0.0-w}else{S=w}g[j+(P<<2)>>2]=S;g[j+(Q<<2)>>2]=L*R;g[a>>2]=+g[j>>2];g[a+4>>2]=+g[j+4>>2];g[a+8>>2]=+g[j+8>>2];g[a+12>>2]=0.0;i=e;return}else{g[j+(O<<2)>>2]=I;if(+g[h+(P<<2)>>2]<0.0){T=-0.0-w}else{T=w}g[j+(P<<2)>>2]=T;g[j+(Q<<2)>>2]=0.0;g[a>>2]=+g[j>>2];g[a+4>>2]=+g[j+4>>2];g[a+8>>2]=+g[j+8>>2];g[a+12>>2]=0.0;i=e;return}break};default:{hF[c[(c[b>>2]|0)+68>>2]&255](a,b,d);i=e;return}}}function ny(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,h=0,j=0,k=0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0;e=i;i=i+32|0;f=e|0;h=e+16|0;j=f;k=d;c[j>>2]=c[k>>2];c[j+4>>2]=c[k+4>>2];c[j+8>>2]=c[k+8>>2];c[j+12>>2]=c[k+12>>2];k=f|0;l=+g[k>>2];j=f+4|0;m=+g[j>>2];d=f+8|0;n=+g[d>>2];if(l*l+m*m+n*n<1.4210854715202004e-14){g[k>>2]=-1.0;g[j>>2]=-1.0;g[d>>2]=-1.0;g[f+12>>2]=0.0;o=-1.0;p=-1.0;q=-1.0}else{o=l;p=m;q=n}n=1.0/+W(o*o+p*p+q*q);g[k>>2]=o*n;g[j>>2]=p*n;g[d>>2]=q*n;nx(h,b,f);switch(c[b+4>>2]|0){case 8:{r=+g[b+28>>2]*+g[b+12>>2];break};case 5:case 4:{r=+g[b+44>>2];break};case 13:{r=+g[b+44>>2];break};case 1:{r=+g[b+44>>2];break};case 10:{r=+g[b+44>>2];break};case 0:{r=+g[b+44>>2];break};default:{r=+g6[c[(c[b>>2]|0)+48>>2]&15](b)}}n=r*+g[j>>2]+ +g[h+4>>2];q=r*+g[d>>2]+ +g[h+8>>2];g[a>>2]=r*+g[k>>2]+ +g[h>>2];g[a+4>>2]=n;g[a+8>>2]=q;g[a+12>>2]=0.0;i=e;return}function nz(a){a=a|0;var b=0.0;switch(c[a+4>>2]|0){case 10:{b=+g[a+44>>2];return+b};case 0:{b=+g[a+44>>2];return+b};case 8:{b=+g[a+28>>2]*+g[a+12>>2];return+b};case 1:{b=+g[a+44>>2];return+b};case 5:case 4:{b=+g[a+44>>2];return+b};case 13:{b=+g[a+44>>2];return+b};default:{b=+g6[c[(c[a>>2]|0)+48>>2]&15](a);return+b}}return 0.0}function nA(a,b){a=a|0;b=b|0;var d=0,e=0,f=0.0,h=0,i=0.0,j=0,k=0.0,l=0,m=0,n=0.0;d=a|0;ne(d);c[a>>2]=34400;c[a+52>>2]=1;e=b|0;f=+g[e>>2];h=b+4|0;i=+g[h>>2];j=b+8|0;k=+g[j>>2];if(f<i){l=f<k?0:2}else{l=i<k?1:2}k=+g[b+(l<<2)>>2]*.10000000149011612;l=a;if(k<+g[a+44>>2]){nN(a,k);m=c[l>>2]|0}else{m=34400}k=+g6[c[m+48>>2]&15](d);i=+g6[c[(c[l>>2]|0)+48>>2]&15](d);f=+g6[c[(c[l>>2]|0)+48>>2]&15](d);n=+g[h>>2]*+g[a+16>>2]-i;i=+g[j>>2]*+g[a+20>>2]-f;g[a+28>>2]=+g[e>>2]*+g[a+12>>2]-k;g[a+32>>2]=n;g[a+36>>2]=i;g[a+40>>2]=0.0;c[a+4>>2]=13;return}function nB(a,b){a=a|0;b=b|0;nA(a|0,b);c[a>>2]=33920;c[a+52>>2]=0;return}function nC(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0.0,h=0.0,i=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0;f=+g6[c[(c[a>>2]|0)+48>>2]&15](a|0);h=f+ +g[a+28>>2];i=f+ +g[a+32>>2];j=f+ +g[a+36>>2];f=+V(+(+g[b>>2]));k=+V(+(+g[b+4>>2]));l=+V(+(+g[b+8>>2]));m=+V(+(+g[b+16>>2]));n=+V(+(+g[b+20>>2]));o=+V(+(+g[b+24>>2]));p=+V(+(+g[b+32>>2]));q=+V(+(+g[b+36>>2]));r=+V(+(+g[b+40>>2]));s=+g[b+48>>2];t=+g[b+52>>2];u=+g[b+56>>2];v=h*f+i*k+j*l;l=h*m+i*n+j*o;o=h*p+i*q+j*r;g[d>>2]=s-v;g[d+4>>2]=t-l;g[d+8>>2]=u-o;g[d+12>>2]=0.0;g[e>>2]=v+s;g[e+4>>2]=l+t;g[e+8>>2]=o+u;g[e+12>>2]=0.0;return}function nD(a,b,d){a=a|0;b=+b;d=d|0;var e=0,f=0,h=0,j=0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0;e=i;i=i+16|0;f=e|0;h=f;j=a+28|0;c[h>>2]=c[j>>2];c[h+4>>2]=c[j+4>>2];c[h+8>>2]=c[j+8>>2];c[h+12>>2]=c[j+12>>2];j=a|0;h=a;k=+g6[c[(c[h>>2]|0)+48>>2]&15](j);l=+g6[c[(c[h>>2]|0)+48>>2]&15](j);m=+g6[c[(c[h>>2]|0)+48>>2]&15](j);j=f|0;g[j>>2]=k+ +g[j>>2];j=f+4|0;g[j>>2]=l+ +g[j>>2];j=f+8|0;g[j>>2]=m+ +g[j>>2];m=b/12.0;l=b*.25;k=b*.5;j=c[a+52>>2]|0;if((j|0)==2){b=+g[f>>2];n=b*b;b=+g[f+8>>2];o=l*n+m*b*b*4.0;g[d>>2]=o;g[d+4>>2]=o;g[d+8>>2]=k*n;g[d+12>>2]=0.0;i=e;return}else if((j|0)==0){n=+g[f+4>>2];o=n*n;n=+g[f>>2];b=l*o+m*n*n*4.0;g[d>>2]=k*o;g[d+4>>2]=b;g[d+8>>2]=b;g[d+12>>2]=0.0;i=e;return}else{b=+g[f>>2];o=b*b;b=+g[f+4>>2];n=l*o+m*b*b*4.0;g[d>>2]=n;g[d+4>>2]=k*o;g[d+8>>2]=n;g[d+12>>2]=0.0;i=e;return}}function nE(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0,e=0.0,f=0.0,h=0.0,i=0.0,j=0.0,k=0.0,l=0.0;d=+g[b+32>>2];e=+g[b+28>>2];b=c|0;f=+g[c+4>>2];h=+g[c+8>>2];i=+W(f*f+h*h);if(i!=0.0){j=d/i;g[a+4>>2]=f*j;if(+g[b>>2]<0.0){k=-0.0-e}else{k=e}g[a>>2]=k;g[a+8>>2]=h*j;return}else{g[a+4>>2]=d;if(+g[b>>2]<0.0){l=-0.0-e}else{l=e}g[a>>2]=l;g[a+8>>2]=0.0;return}}function nF(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0,e=0.0,f=0.0,h=0.0,i=0.0,j=0.0,k=0.0,l=0.0;d=+g[b+28>>2];e=+g[b+32>>2];f=+g[c>>2];h=+g[c+8>>2];i=+W(f*f+h*h);if(i!=0.0){j=d/i;g[a>>2]=f*j;if(+g[c+4>>2]<0.0){k=-0.0-e}else{k=e}g[a+4>>2]=k;g[a+8>>2]=h*j;return}else{g[a>>2]=d;if(+g[c+4>>2]<0.0){l=-0.0-e}else{l=e}g[a+4>>2]=l;g[a+8>>2]=0.0;return}}function nG(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,h=0.0,i=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0;if((d|0)<=0){return}e=a+28|0;f=a+32|0;a=0;do{h=+g[e>>2];i=+g[f>>2];j=+g[b+(a<<4)>>2];k=+g[b+(a<<4)+8>>2];l=+W(j*j+k*k);do{if(l!=0.0){m=h/l;if(+g[b+(a<<4)+4>>2]<0.0){n=-0.0-i}else{n=i}o=j*m;p=n;q=k*m}else{if(+g[b+(a<<4)+4>>2]>=0.0){o=h;p=i;q=0.0;break}o=h;p=-0.0-i;q=0.0}}while(0);g[c+(a<<4)>>2]=o;g[c+(a<<4)+4>>2]=p;g[c+(a<<4)+8>>2]=q;a=a+1|0;}while((a|0)<(d|0));return}function nH(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,h=0.0,i=0.0,j=0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0;if((d|0)<=0){return}e=a+28|0;f=a+32|0;a=0;do{h=+g[f>>2];i=+g[e>>2];j=b+(a<<4)|0;k=+g[b+(a<<4)+4>>2];l=+g[b+(a<<4)+8>>2];m=+W(k*k+l*l);do{if(m!=0.0){n=h/m;if(+g[j>>2]<0.0){o=-0.0-i}else{o=i}p=o;q=k*n;r=l*n}else{if(+g[j>>2]>=0.0){p=i;q=h;r=0.0;break}p=-0.0-i;q=h;r=0.0}}while(0);g[c+(a<<4)>>2]=p;g[c+(a<<4)+4>>2]=q;g[c+(a<<4)+8>>2]=r;a=a+1|0;}while((a|0)<(d|0));return}function nI(a){a=a|0;nv(a|0);return}function nJ(a){a=a|0;nv(a|0);zw(a);return}function nK(a,b){a=a|0;b=b|0;var d=0,e=0,f=0.0,h=0.0,i=0.0,j=0,k=0,l=0,m=0.0,n=0,o=0.0,p=0,q=0.0,r=0.0;d=a|0;e=a;f=+g6[c[(c[e>>2]|0)+48>>2]&15](d);h=+g6[c[(c[e>>2]|0)+48>>2]&15](d);i=+g6[c[(c[e>>2]|0)+48>>2]&15](d);e=a+28|0;j=a+32|0;k=a+36|0;l=a+12|0;m=(f+ +g[e>>2])/+g[l>>2];n=a+16|0;o=(h+ +g[j>>2])/+g[n>>2];p=a+20|0;q=(i+ +g[k>>2])/+g[p>>2];nf(d,b);r=o*+g[n>>2]-h;h=q*+g[p>>2]-i;g[e>>2]=m*+g[l>>2]-f;g[j>>2]=r;g[k>>2]=h;g[a+40>>2]=0.0;return}function nL(a){a=a|0;return 17856}function nM(a,b){a=a|0;b=b|0;K1(a|0,0,16)|0;g[a+(c[b+52>>2]<<2)>>2]=1.0;return}function nN(a,b){a=a|0;b=+b;var d=0,e=0,f=0.0,h=0.0,i=0.0,j=0,k=0.0,l=0,m=0,n=0.0;d=a|0;e=a;f=+g6[c[(c[e>>2]|0)+48>>2]&15](d);h=+g6[c[(c[e>>2]|0)+48>>2]&15](d);i=+g6[c[(c[e>>2]|0)+48>>2]&15](d);j=a+28|0;k=f+ +g[j>>2];l=a+32|0;f=h+ +g[l>>2];m=a+36|0;h=i+ +g[m>>2];g[a+44>>2]=b;b=+g6[c[(c[e>>2]|0)+48>>2]&15](d);i=+g6[c[(c[e>>2]|0)+48>>2]&15](d);n=h- +g6[c[(c[e>>2]|0)+48>>2]&15](d);g[j>>2]=k-b;g[l>>2]=f-i;g[m>>2]=n;g[a+40>>2]=0.0;return}function nO(a){a=a|0;return 60}function nP(a,b,d){a=a|0;b=b|0;d=d|0;m7(a|0,b,d)|0;g[b+28>>2]=+g[a+28>>2];g[b+32>>2]=+g[a+32>>2];g[b+36>>2]=+g[a+36>>2];g[b+40>>2]=+g[a+40>>2];g[b+12>>2]=+g[a+12>>2];g[b+16>>2]=+g[a+16>>2];g[b+20>>2]=+g[a+20>>2];g[b+24>>2]=+g[a+24>>2];g[b+44>>2]=+g[a+44>>2];c[b+52>>2]=c[a+52>>2];return 21160}function nQ(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,h=0.0,i=0.0,j=0.0,k=0.0,l=0.0;hF[c[(c[b>>2]|0)+68>>2]&255](a,b,d);e=b|0;f=b;if(+g6[c[(c[f>>2]|0)+48>>2]&15](e)==0.0){return}h=+g[d>>2];i=+g[d+4>>2];j=+g[d+8>>2];d=h*h+i*i+j*j<1.4210854715202004e-14;k=d?-1.0:j;j=d?-1.0:i;i=d?-1.0:h;h=1.0/+W(k*k+(i*i+j*j));l=+g6[c[(c[f>>2]|0)+48>>2]&15](e);e=a|0;g[e>>2]=h*i*l+ +g[e>>2];e=a+4|0;g[e>>2]=l*h*j+ +g[e>>2];e=a+8|0;g[e>>2]=l*h*k+ +g[e>>2];return}function nR(a){a=a|0;var b=0.0,d=0,e=0,f=0.0;b=+g[a+28>>2];d=a|0;e=a;f=+g6[c[(c[e>>2]|0)+48>>2]&15](d);+g6[c[(c[e>>2]|0)+48>>2]&15](d);+g6[c[(c[e>>2]|0)+48>>2]&15](d);return+(b+f)}function nS(a){a=a|0;nv(a|0);return}function nT(a){a=a|0;nv(a|0);zw(a);return}function nU(a){a=a|0;return 23232}function nV(a){a=a|0;var b=0.0,d=0,e=0,f=0.0;b=+g[a+32>>2];d=a|0;e=a;+g6[c[(c[e>>2]|0)+48>>2]&15](d);f=+g6[c[(c[e>>2]|0)+48>>2]&15](d);+g6[c[(c[e>>2]|0)+48>>2]&15](d);return+(b+f)}function nW(a){a=a|0;qV(a|0);c[a>>2]=34784;return}function nX(a){a=a|0;qZ(a|0);zw(a);return}function nY(a){a=a|0;qZ(a|0);return}function nZ(d,e,f,h,j){d=d|0;e=e|0;f=f|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0;k=i;i=i+168|0;l=k|0;m=k+32|0;n=k+40|0;o=k+56|0;p=k+72|0;q=k+136|0;r=d|0;s=d+60|0;a[s]=f&1;if(f){qX(r,h,j,1.0);c[l>>2]=27368;c[l+4>>2]=d+104;c[l+8>>2]=r;j=l|0;hM[c[(c[e>>2]|0)+8>>2]&255](e,j,d+4|0,d+20|0);l=c[d+108>>2]|0;h=l<<1;f=k+16|0;K1(f|0,0,16)|0;t=d+128|0;u=c[t>>2]|0;if((u|0)<(h|0)){v=d+132|0;if((c[v>>2]|0)<(h|0)){if((h|0)==0){w=0;x=u}else{y=zv(l<<5,16)|0;w=y;x=c[t>>2]|0}y=d+136|0;if((x|0)>0){z=0;do{A=w+(z<<4)|0;B=(c[y>>2]|0)+(z<<4)|0;c[A>>2]=c[B>>2];c[A+4>>2]=c[B+4>>2];c[A+8>>2]=c[B+8>>2];c[A+12>>2]=c[B+12>>2];z=z+1|0;}while((z|0)<(x|0))}x=c[y>>2]|0;z=d+140|0;if((x|0)!=0){if((a[z]&1)!=0){zw(x)}c[y>>2]=0}a[z]=1;c[y>>2]=w;c[v>>2]=h;C=y}else{C=d+136|0}y=u;do{u=(c[C>>2]|0)+(y<<4)|0;c[u>>2]=c[f>>2];c[u+4>>2]=c[f+4>>2];c[u+8>>2]=c[f+8>>2];c[u+12>>2]=c[f+12>>2];y=y+1|0;}while((y|0)<(h|0))}c[t>>2]=h;ow(j);D=l}else{c[m>>2]=27400;c[m+4>>2]=d+64;g[n>>2]=-999999984306749400.0;g[n+4>>2]=-999999984306749400.0;g[n+8>>2]=-999999984306749400.0;g[n+12>>2]=0.0;g[o>>2]=999999984306749400.0;g[o+4>>2]=999999984306749400.0;g[o+8>>2]=999999984306749400.0;g[o+12>>2]=0.0;l=m|0;hM[c[(c[e>>2]|0)+8>>2]&255](e,l,n,o);o=c[d+68>>2]|0;n=p;K1(n|0,0,64)|0;p=o<<1;e=d+88|0;m=c[e>>2]|0;if((m|0)<(p|0)){j=d+92|0;if((c[j>>2]|0)<(p|0)){if((p|0)==0){E=0;F=m}else{h=zv(o<<7,16)|0;E=h;F=c[e>>2]|0}h=d+96|0;if((F|0)>0){t=0;do{K2(E+(t<<6)|0,(c[h>>2]|0)+(t<<6)|0,64)|0;t=t+1|0;}while((t|0)<(F|0))}F=c[h>>2]|0;t=d+100|0;if((F|0)!=0){if((a[t]&1)!=0){zw(F)}c[h>>2]=0}a[t]=1;c[h>>2]=E;c[j>>2]=p;G=h}else{G=d+96|0}h=m;do{K2((c[G>>2]|0)+(h<<6)|0,n|0,64)|0;h=h+1|0;}while((h|0)<(p|0))}c[e>>2]=p;ow(l);D=o}c[d+56>>2]=0;qW(r,0,D);D=d+152|0;do{if((a[s]&1)!=0){if((c[D>>2]|0)!=0){break}r=d+156|0;if((c[r>>2]|0)==0){o=zv(32,16)|0;l=c[D>>2]|0;p=d+160|0;if((l|0)>0){e=0;do{K2(o+(e<<5)|0,(c[p>>2]|0)+(e<<5)|0,32)|0;e=e+1|0;}while((e|0)<(l|0))}l=c[p>>2]|0;e=d+164|0;if((l|0)!=0){if((a[e]&1)!=0){zw(l)}c[p>>2]=0}a[e]=1;c[p>>2]=o;c[r>>2]=1;H=(c[D>>2]|0)+1|0}else{H=1}c[D>>2]=H;e=d+160|0;K2(c[e>>2]|0,q|0,32)|0;l=c[e>>2]|0;e=d+136|0;h=c[e>>2]|0;b[l>>1]=b[h>>1]|0;b[l+2>>1]=b[h+2>>1]|0;b[l+4>>1]=b[h+4>>1]|0;b[l+6>>1]=b[h+6>>1]|0;b[l+8>>1]=b[h+8>>1]|0;b[l+10>>1]=b[h+10>>1]|0;c[l+12>>2]=0;h=c[(c[e>>2]|0)+12>>2]|0;c[l+16>>2]=(h|0)>-1?1:-h|0}}while(0);c[d+168>>2]=c[D>>2];D=d+108|0;q=d+116|0;H=c[q>>2]|0;s=d+120|0;if((H|0)!=0){if((a[s]&1)!=0){zw(H)}c[q>>2]=0}a[s]=1;c[q>>2]=0;c[D>>2]=0;c[d+112>>2]=0;D=d+68|0;q=d+76|0;s=c[q>>2]|0;H=d+80|0;if((s|0)==0){a[H]=1;c[q>>2]=0;c[D>>2]=0;I=d+72|0;c[I>>2]=0;i=k;return}if((a[H]&1)!=0){zw(s)}c[q>>2]=0;a[H]=1;c[q>>2]=0;c[D>>2]=0;I=d+72|0;c[I>>2]=0;i=k;return}function n_(a){a=a|0;return 84}function n$(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return rb(a|0,b,c,d)|0}function n0(a){a=a|0;ow(a|0);return}function n1(a){a=a|0;ow(a|0);KU(a);return}function n2(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var h=0,j=0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0;h=i;i=i+24|0;j=h|0;k=+g[d>>2];l=k<999999984306749400.0?k:999999984306749400.0;m=+g[d+4>>2];n=m<999999984306749400.0?m:999999984306749400.0;o=+g[d+8>>2];p=o<999999984306749400.0?o:999999984306749400.0;q=+g[d+12>>2];r=q<0.0?q:0.0;s=k>-999999984306749400.0?k:-999999984306749400.0;k=m>-999999984306749400.0?m:-999999984306749400.0;m=o>-999999984306749400.0?o:-999999984306749400.0;o=q>0.0?q:0.0;q=+g[d+16>>2];t=q<l?q:l;l=+g[d+20>>2];u=l<n?l:n;n=+g[d+24>>2];v=n<p?n:p;p=+g[d+28>>2];w=p<r?p:r;r=s<q?q:s;s=k<l?l:k;k=m<n?n:m;m=o<p?p:o;o=+g[d+32>>2];p=o<t?o:t;t=+g[d+36>>2];n=t<u?t:u;u=+g[d+40>>2];l=u<v?u:v;v=+g[d+44>>2];q=v<w?v:w;w=r<o?o:r;r=s<t?t:s;s=k<u?u:k;k=m<v?v:m;d=c[b+4>>2]|0;b=d+4|0;x=c[b>>2]|0;y=d+8|0;do{if((x|0)==(c[y>>2]|0)){z=(x|0)==0?1:x<<1;if((x|0)>=(z|0)){A=x;break}if((z|0)==0){B=0;C=x}else{D=zv(z<<6,16)|0;B=D;C=c[b>>2]|0}D=d+12|0;if((C|0)>0){E=0;do{K2(B+(E<<6)|0,(c[D>>2]|0)+(E<<6)|0,64)|0;E=E+1|0;}while((E|0)<(C|0))}E=c[D>>2]|0;F=d+16|0;if((E|0)!=0){if((a[F]&1)!=0){zw(E)}c[D>>2]=0}a[F]=1;c[D>>2]=B;c[y>>2]=z;A=c[b>>2]|0}else{A=x}}while(0);x=c[d+12>>2]|0;g[x+(A<<6)>>2]=p;g[x+(A<<6)+4>>2]=n;g[x+(A<<6)+8>>2]=l;g[x+(A<<6)+12>>2]=q;g[x+(A<<6)+16>>2]=w;g[x+(A<<6)+20>>2]=r;g[x+(A<<6)+24>>2]=s;g[x+(A<<6)+28>>2]=k;c[x+(A<<6)+32>>2]=-1;c[x+(A<<6)+36>>2]=e;c[x+(A<<6)+40>>2]=f;f=x+(A<<6)+44|0;A=j|0;c[f>>2]=c[A>>2];c[f+4>>2]=c[A+4>>2];c[f+8>>2]=c[A+8>>2];c[f+12>>2]=c[A+12>>2];c[f+16>>2]=c[A+16>>2];c[b>>2]=(c[b>>2]|0)+1;i=h;return}function n3(a){a=a|0;ow(a|0);return}function n4(a){a=a|0;ow(a|0);KU(a);return}function n5(d,e,f,h){d=d|0;e=e|0;f=f|0;h=h|0;var i=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0;i=+g[e>>2];j=i<999999984306749400.0?i:999999984306749400.0;k=+g[e+4>>2];l=k<999999984306749400.0?k:999999984306749400.0;m=+g[e+8>>2];n=m<999999984306749400.0?m:999999984306749400.0;o=i>-999999984306749400.0?i:-999999984306749400.0;i=k>-999999984306749400.0?k:-999999984306749400.0;k=m>-999999984306749400.0?m:-999999984306749400.0;m=+g[e+16>>2];p=m<j?m:j;j=+g[e+20>>2];q=j<l?j:l;l=+g[e+24>>2];r=l<n?l:n;n=o<m?m:o;o=i<j?j:i;i=k<l?l:k;k=+g[e+32>>2];l=k<p?k:p;p=+g[e+36>>2];j=p<q?p:q;q=+g[e+40>>2];m=q<r?q:r;r=n<k?k:n;n=o<p?p:o;o=i<q?q:i;if(r-l<.0020000000949949026){s=r+.0010000000474974513;t=l+-.0010000000474974513}else{s=r;t=l}if(n-j<.0020000000949949026){u=n+.0010000000474974513;v=j+-.0010000000474974513}else{u=n;v=j}if(o-m<.0020000000949949026){w=o+.0010000000474974513;x=m+-.0010000000474974513}else{w=o;x=m}e=c[d+8>>2]|0;m=+g[e+4>>2];o=+g[e+8>>2];j=+g[e+12>>2];n=+g[e+36>>2];l=+g[e+40>>2];r=+g[e+44>>2];e=~~((t-m)*n)&-2;y=~~((v-o)*l)&-2;z=~~((x-j)*r)&-2;A=~~((s-m)*n+1.0)|1;B=~~((u-o)*l+1.0)|1;C=~~((w-j)*r+1.0)|1;D=f<<21|h;h=c[d+4>>2]|0;d=h+4|0;f=c[d>>2]|0;E=h+8|0;do{if((f|0)==(c[E>>2]|0)){F=(f|0)==0?1:f<<1;if((f|0)>=(F|0)){G=f;break}if((F|0)==0){H=0;I=f}else{J=zv(F<<4,16)|0;H=J;I=c[d>>2]|0}J=h+12|0;if((I|0)>0){K=0;do{L=H+(K<<4)|0;M=(c[J>>2]|0)+(K<<4)|0;c[L>>2]=c[M>>2];c[L+4>>2]=c[M+4>>2];c[L+8>>2]=c[M+8>>2];c[L+12>>2]=c[M+12>>2];K=K+1|0;}while((K|0)<(I|0))}K=c[J>>2]|0;M=h+16|0;if((K|0)!=0){if((a[M]&1)!=0){zw(K)}c[J>>2]=0}a[M]=1;c[J>>2]=H;c[E>>2]=F;G=c[d>>2]|0}else{G=f}}while(0);f=c[h+12>>2]|0;b[f+(G<<4)>>1]=e;b[f+(G<<4)+2>>1]=y;b[f+(G<<4)+4>>1]=z;b[f+(G<<4)+6>>1]=A;b[f+(G<<4)+8>>1]=B;b[f+(G<<4)+10>>1]=C;c[f+(G<<4)+12>>2]=D;c[d>>2]=(c[d>>2]|0)+1;return}function n6(a){a=a|0;ne(a|0);c[a>>2]=31784;c[a+52>>2]=0;return}function n7(a){a=a|0;var b=0,d=0;c[a>>2]=31784;b=a+52|0;d=c[b>>2]|0;if((d|0)!=0){g$[c[c[d>>2]>>2]&1023](d);zw(c[b>>2]|0)}nv(a|0);zw(a);return}function n8(a){a=a|0;var b=0,d=0,e=0;c[a>>2]=31784;b=a+52|0;d=c[b>>2]|0;if((d|0)==0){e=a|0;nv(e);return}g$[c[c[d>>2]>>2]&1023](d);zw(c[b>>2]|0);e=a|0;nv(e);return}function n9(b,d){b=b|0;d=d|0;var e=0,f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,X=0,Y=0,Z=0,_=0.0,$=0.0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0,ai=0,aj=0,ak=0,al=0,am=0,an=0,ao=0,ap=0.0,aq=0.0,ar=0,as=0.0,at=0.0,au=0.0,av=0.0,aw=0,ax=0.0,ay=0,az=0,aA=0,aB=0,aC=0,aD=0,aE=0,aF=0,aG=0,aH=0,aI=0,aJ=0,aK=0,aL=0,aM=0,aN=0,aO=0,aP=0,aQ=0,aR=0,aS=0,aT=0,aU=0,aV=0,aW=0,aX=0,aY=0,aZ=0,a_=0,a$=0,a0=0.0,a1=0.0,a2=0.0,a3=0,a4=0,a5=0,a6=0,a7=0,a8=0,a9=0,ba=0,bb=0,bc=0,bd=0,be=0,bf=0,bg=0,bh=0,bi=0,bj=0,bk=0,bl=0,bm=0,bn=0,bo=0,bp=0,bq=0,br=0,bs=0,bt=0;e=i;i=i+520|0;f=e|0;h=e+40|0;j=e+104|0;k=e+128|0;l=e+152|0;m=e+168|0;n=e+192|0;o=e+208|0;p=e+232|0;q=e+272|0;r=e+288|0;s=e+336|0;t=e+360|0;u=e+376|0;v=e+392|0;w=e+416|0;x=e+456|0;y=e+480|0;z=b+52|0;A=c[z>>2]|0;if((A|0)!=0){g$[c[c[A>>2]>>2]&1023](A);zw(c[z>>2]|0)}A=zv(132,16)|0;nk(A);c[z>>2]=A;A=f+16|0;a[A]=1;B=f+12|0;c[B>>2]=0;C=f+4|0;c[C>>2]=0;D=f+8|0;c[D>>2]=0;E=b;F=e+24|0;G=b;H=0;while(1){if((H|0)>=(g3[c[(c[E>>2]|0)+96>>2]&511](b)|0)){break}I=c[C>>2]|0;do{if((I|0)==(c[D>>2]|0)){J=(I|0)==0?1:I<<1;if((I|0)>=(J|0)){K=I;break}if((J|0)==0){L=0;M=I}else{N=zv(J<<4,16)|0;L=N;M=c[C>>2]|0}if((M|0)>0){N=0;do{O=L+(N<<4)|0;P=(c[B>>2]|0)+(N<<4)|0;c[O>>2]=c[P>>2];c[O+4>>2]=c[P+4>>2];c[O+8>>2]=c[P+8>>2];c[O+12>>2]=c[P+12>>2];N=N+1|0;}while((N|0)<(M|0))}N=c[B>>2]|0;if((N|0)!=0){if((a[A]&1)!=0){zw(N)}c[B>>2]=0}a[A]=1;c[B>>2]=L;c[D>>2]=J;K=c[C>>2]|0}else{K=I}}while(0);c[C>>2]=K+1;N=(c[B>>2]|0)+(I<<4)|0;c[N>>2]=c[F>>2];c[N+4>>2]=c[F+4>>2];c[N+8>>2]=c[F+8>>2];c[N+12>>2]=c[F+12>>2];hF[c[(c[G>>2]|0)+108>>2]&255](b,H,(c[B>>2]|0)+(I<<4)|0);H=H+1|0}H=h+16|0;a[H]=1;G=h+12|0;c[G>>2]=0;F=h+4|0;c[F>>2]=0;K=h+8|0;c[K>>2]=0;D=h+36|0;a[D]=1;L=h+32|0;c[L>>2]=0;M=h+24|0;c[M>>2]=0;E=h+28|0;c[E>>2]=0;N=h+56|0;a[N]=1;P=h+52|0;c[P>>2]=0;O=h+44|0;c[O>>2]=0;Q=h+48|0;c[Q>>2]=0;if((d|0)==0){+zS(h,c[B>>2]|0,0,16,c[C>>2]|0,0.0,0.0)}else{C=j+16|0;a[C]=1;d=j+12|0;c[d>>2]=0;R=j+4|0;c[R>>2]=0;S=j+8|0;c[S>>2]=0;zV(f,j);j=k+16|0;a[j]=1;f=k+12|0;c[f>>2]=0;T=k+4|0;c[T>>2]=0;U=k+8|0;c[U>>2]=0;if((c[R>>2]|0)>0){V=l;l=b|0;X=b;b=0;do{Y=c[d>>2]|0;Z=Y+(b<<4)|0;c[V>>2]=c[Z>>2];c[V+4>>2]=c[Z+4>>2];c[V+8>>2]=c[Z+8>>2];_=+g[Y+(b<<4)+12>>2];$=_- +g6[c[(c[X>>2]|0)+48>>2]&15](l);Y=c[T>>2]|0;do{if((Y|0)==(c[U>>2]|0)){Z=(Y|0)==0?1:Y<<1;if((Y|0)>=(Z|0)){aa=Y;break}if((Z|0)==0){ab=0;ac=Y}else{ad=zv(Z<<4,16)|0;ab=ad;ac=c[T>>2]|0}if((ac|0)>0){ad=0;do{ae=ab+(ad<<4)|0;af=(c[f>>2]|0)+(ad<<4)|0;c[ae>>2]=c[af>>2];c[ae+4>>2]=c[af+4>>2];c[ae+8>>2]=c[af+8>>2];c[ae+12>>2]=c[af+12>>2];ad=ad+1|0;}while((ad|0)<(ac|0))}ad=c[f>>2]|0;if((ad|0)!=0){if((a[j]&1)!=0){zw(ad)}c[f>>2]=0}a[j]=1;c[f>>2]=ab;c[U>>2]=Z;aa=c[T>>2]|0}else{aa=Y}}while(0);Y=c[f>>2]|0;I=Y+(aa<<4)|0;c[I>>2]=c[V>>2];c[I+4>>2]=c[V+4>>2];c[I+8>>2]=c[V+8>>2];g[Y+(aa<<4)+12>>2]=$;c[T>>2]=(c[T>>2]|0)+1;b=b+1|0;}while((b|0)<(c[R>>2]|0))}b=m+16|0;a[b]=1;aa=m+12|0;c[aa>>2]=0;V=m+4|0;c[V>>2]=0;ab=m+8|0;c[ab>>2]=0;zW(k,m);+zS(h,c[aa>>2]|0,0,16,c[V>>2]|0,0.0,0.0);h=c[aa>>2]|0;if((h|0)!=0){if((a[b]&1)!=0){zw(h)}c[aa>>2]=0}a[b]=1;c[aa>>2]=0;c[V>>2]=0;c[ab>>2]=0;ab=c[f>>2]|0;if((ab|0)!=0){if((a[j]&1)!=0){zw(ab)}c[f>>2]=0}a[j]=1;c[f>>2]=0;c[T>>2]=0;c[U>>2]=0;U=c[d>>2]|0;if((U|0)!=0){if((a[C]&1)!=0){zw(U)}c[d>>2]=0}a[C]=1;c[d>>2]=0;c[R>>2]=0;c[S>>2]=0}S=c[O>>2]|0;R=(S|0)<0;if((S|0)>0&(R^1)){d=zv(S<<4,16)|0;C=n;n=0;while(1){U=d+(n<<4)|0;c[U>>2]=c[C>>2];c[U+4>>2]=c[C+4>>2];c[U+8>>2]=c[C+8>>2];c[U+12>>2]=c[C+12>>2];U=n+1|0;if((U|0)<(S|0)){n=U}else{ag=d;break}}}else{ag=0}d=o+16|0;a[d]=1;n=o+12|0;c[n>>2]=0;C=o+4|0;c[C>>2]=0;U=o+8|0;c[U>>2]=0;K1(p|0,0,36)|0;T=p+16|0;a[T]=1;f=p+12|0;c[f>>2]=0;j=p+4|0;c[j>>2]=0;ab=p+8|0;c[ab>>2]=0;if(R){dZ();return 0}do{if((S|0)>0){oe(o,S);R=p|0;V=p+20|0;aa=c[n>>2]|0;b=0;do{h=aa+(b*36|0)|0;if((h|0)!=0){of(h,R);m=h+20|0;c[m>>2]=c[V>>2];c[m+4>>2]=c[V+4>>2];c[m+8>>2]=c[V+8>>2];c[m+12>>2]=c[V+12>>2]}b=b+1|0;}while((b|0)<(S|0));b=c[f>>2]|0;c[C>>2]=S;if((b|0)==0){ah=aa;break}if((a[T]&1)!=0){zw(b)}c[f>>2]=0;ah=aa}else{c[C>>2]=S;ah=0}}while(0);a[T]=1;c[f>>2]=0;c[j>>2]=0;c[ab>>2]=0;ab=c[F>>2]|0;j=c[z>>2]|0;f=j+8|0;T=c[f>>2]|0;if((T|0)<(ab|0)){p=j+12|0;if((c[p>>2]|0)<(ab|0)){if((ab|0)==0){ai=0;aj=T}else{o=zv(ab<<4,16)|0;ai=o;aj=c[f>>2]|0}o=j+16|0;if((aj|0)>0){b=0;do{V=ai+(b<<4)|0;R=(c[o>>2]|0)+(b<<4)|0;c[V>>2]=c[R>>2];c[V+4>>2]=c[R+4>>2];c[V+8>>2]=c[R+8>>2];c[V+12>>2]=c[R+12>>2];b=b+1|0;}while((b|0)<(aj|0))}aj=c[o>>2]|0;b=j+20|0;if((aj|0)!=0){if((a[b]&1)!=0){zw(aj)}c[o>>2]=0}a[b]=1;c[o>>2]=ai;c[p>>2]=ab;ak=o}else{ak=j+16|0}j=q;q=T;do{T=(c[ak>>2]|0)+(q<<4)|0;c[T>>2]=c[j>>2];c[T+4>>2]=c[j+4>>2];c[T+8>>2]=c[j+8>>2];c[T+12>>2]=c[j+12>>2];q=q+1|0;}while((q|0)<(ab|0))}c[f>>2]=ab;if((ab|0)>0){f=0;do{q=(c[(c[z>>2]|0)+16>>2]|0)+(f<<4)|0;j=(c[G>>2]|0)+(f<<4)|0;c[q>>2]=c[j>>2];c[q+4>>2]=c[j+4>>2];c[q+8>>2]=c[j+8>>2];c[q+12>>2]=c[j+12>>2];f=f+1|0;}while((f|0)<(ab|0))}do{if((S|0)>0){ab=r+4|0;f=r+24|0;j=r+8|0;q=r+20|0;ak=r+16|0;T=r|0;o=0;p=ah;while(1){ai=(c[L>>2]|0)+((c[(c[P>>2]|0)+(o<<2)>>2]|0)*12|0)|0;b=ai;aj=0;while(1){R=b+4|0;V=c[b+((c[R>>2]|0)*12|0)+8>>2]|0;m=p+(o*36|0)+4|0;h=c[m>>2]|0;k=p+(o*36|0)+8|0;do{if((h|0)==(c[k>>2]|0)){ac=(h|0)==0?1:h<<1;if((h|0)>=(ac|0)){al=h;break}if((ac|0)==0){am=0;an=h}else{l=zv(ac<<2,16)|0;am=l;an=c[m>>2]|0}l=p+(o*36|0)+12|0;if((an|0)>0){X=0;do{Y=am+(X<<2)|0;if((Y|0)!=0){c[Y>>2]=c[(c[l>>2]|0)+(X<<2)>>2]}X=X+1|0;}while((X|0)<(an|0))}X=c[l>>2]|0;Y=p+(o*36|0)+16|0;if((X|0)!=0){if((a[Y]&1)!=0){zw(X)}c[l>>2]=0}a[Y]=1;c[l>>2]=am;c[k>>2]=ac;al=c[m>>2]|0}else{al=h}}while(0);h=(c[p+(o*36|0)+12>>2]|0)+(al<<2)|0;if((h|0)==0){ao=al}else{c[h>>2]=V;ao=c[m>>2]|0}c[m>>2]=ao+1;h=c[b+8>>2]|0;k=c[G>>2]|0;$=+g[k+(h<<4)>>2]- +g[k+(V<<4)>>2];_=+g[k+(h<<4)+4>>2]- +g[k+(V<<4)+4>>2];ap=+g[k+(h<<4)+8>>2]- +g[k+(V<<4)+8>>2];aq=1.0/+W($*$+_*_+ap*ap);if((aj|0)<2){g[r+(aj<<4)>>2]=$*aq;g[r+(aj<<4)+4>>2]=_*aq;g[r+(aj<<4)+8>>2]=ap*aq;g[r+(aj<<4)+12>>2]=0.0;ar=aj+1|0}else{ar=aj}k=c[R>>2]|0;h=b+(((c[b+(k*12|0)>>2]|0)+k|0)*12|0)|0;if((h|0)==(ai|0)){break}else{b=h;aj=ar}}aj=ag+(o<<4)|0;if((ar|0)==2){aq=+g[ab>>2];ap=+g[f>>2];_=+g[j>>2];$=+g[q>>2];as=aq*ap-_*$;at=+g[ak>>2];au=+g[T>>2];av=_*at-ap*au;ap=$*au-aq*at;b=ag+(o<<4)+4|0;ai=ag+(o<<4)+8|0;g[ag+(o<<4)+12>>2]=0.0;at=1.0/+W(as*as+av*av+ap*ap);aq=as*at;g[aj>>2]=aq;g[b>>2]=av*at;g[ai>>2]=ap*at;Z=c[n>>2]|0;g[Z+(o*36|0)+20>>2]=aq;g[Z+(o*36|0)+24>>2]=+g[b>>2];g[Z+(o*36|0)+28>>2]=+g[ai>>2];g[Z+(o*36|0)+32>>2]=1.0000000150474662e+30;aw=Z}else{K1(aj|0,0,16)|0;aw=c[n>>2]|0}Z=c[aw+(o*36|0)+4>>2]|0;if((Z|0)>0){ai=c[(c[z>>2]|0)+16>>2]|0;aq=+g[aj>>2];at=+g[ag+(o<<4)+4>>2];ap=+g[ag+(o<<4)+8>>2];aj=c[aw+(o*36|0)+12>>2]|0;av=1.0000000150474662e+30;b=0;while(1){h=c[aj+(b<<2)>>2]|0;as=+g[ai+(h<<4)>>2]*aq+ +g[ai+(h<<4)+4>>2]*at+ +g[ai+(h<<4)+8>>2]*ap;au=av>as?as:av;h=b+1|0;if((h|0)<(Z|0)){av=au;b=h}else{ax=au;break}}}else{ax=1.0000000150474662e+30}g[aw+(o*36|0)+32>>2]=-0.0-ax;b=o+1|0;if((b|0)<(S|0)){o=b;p=aw}else{break}}p=c[C>>2]|0;if((p|0)>0){ay=0;az=0;aA=0;aB=p}else{aC=0;break}while(1){do{if((aA|0)==(az|0)){p=(aA|0)==0?1:aA<<1;if((aA|0)>=(p|0)){aD=aA;aE=ay;break}if((p|0)==0){aF=0}else{aF=zv(p<<2,16)|0}if((aA|0)>0){o=0;do{T=aF+(o<<2)|0;if((T|0)!=0){c[T>>2]=c[ay+(o<<2)>>2]}o=o+1|0;}while((o|0)<(aA|0))}if((ay|0)==0){aD=p;aE=aF;break}zw(ay);aD=p;aE=aF}else{aD=az;aE=ay}}while(0);o=aE+(aA<<2)|0;if((o|0)==0){aG=aB}else{c[o>>2]=aA;aG=c[C>>2]|0}aH=aA+1|0;if((aH|0)<(aG|0)){ay=aE;az=aD;aA=aH;aB=aG}else{break}}if((aH|0)==0){aC=aE;break}o=s+16|0;R=s+12|0;V=s+4|0;m=s+8|0;T=t|0;ak=t+4|0;q=t+8|0;j=u;f=v;ab=w+16|0;aa=w+12|0;b=w+4|0;Z=w+8|0;ai=x+16|0;aj=x+12|0;h=x+4|0;k=x+8|0;Y=w|0;X=w+20|0;I=y|0;ad=y+20|0;J=y+4|0;af=y+12|0;ae=y+16|0;aI=y+8|0;aJ=aH;while(1){aK=aJ-1|0;aL=c[aE+(aK<<2)>>2]|0;aM=zv(4,16)|0;aN=aM;if((aM|0)!=0){c[aN>>2]=aL}aM=c[n>>2]|0;av=+g[aM+(aL*36|0)+20>>2];ap=+g[aM+(aL*36|0)+24>>2];at=+g[aM+(aL*36|0)+28>>2];aL=aK;aM=1;aO=1;aP=aN;aN=aK;L203:while(1){aK=aL;aQ=aM;aR=aO;aS=aP;L205:while(1){aT=c[n>>2]|0;aU=aK;while(1){aV=aU-1|0;if((aU|0)<=0){break L203}aW=c[aE+(aV<<2)>>2]|0;if(av*+g[aT+(aW*36|0)+20>>2]+ap*+g[aT+(aW*36|0)+24>>2]+at*+g[aT+(aW*36|0)+28>>2]>.9990000128746033){break}else{aU=aV}}do{if((aQ|0)==(aR|0)){aU=(aR|0)==0?1:aR<<1;if((aR|0)>=(aU|0)){aX=aR;aY=aS;break}if((aU|0)==0){aZ=0}else{aZ=zv(aU<<2,16)|0}if((aR|0)>0){ac=0;do{l=aZ+(ac<<2)|0;if((l|0)!=0){c[l>>2]=c[aS+(ac<<2)>>2]}ac=ac+1|0;}while((ac|0)<(aR|0))}if((aS|0)==0){aX=aU;aY=aZ;break}zw(aS);aX=aU;aY=aZ}else{aX=aR;aY=aS}}while(0);ac=aY+(aQ<<2)|0;if((ac|0)!=0){c[ac>>2]=aW}a_=aQ+1|0;ac=0;while(1){if((ac|0)>=(aN|0)){aK=aV;aQ=a_;aR=aX;aS=aY;continue L205}a$=aE+(ac<<2)|0;if((c[a$>>2]|0)==(aW|0)){break L205}else{ac=ac+1|0}}}aR=aN-1|0;aK=aE+(aR<<2)|0;c[a$>>2]=c[aK>>2];c[aK>>2]=aW;aL=aV;aM=a_;aO=aX;aP=aY;aN=aR}L235:do{if((aQ|0)>1){a[o]=1;c[R>>2]=0;c[V>>2]=0;c[m>>2]=0;K1(t|0,0,16)|0;aP=0;at=0.0;ap=0.0;av=0.0;aO=0;while(1){aM=c[aS+(aP<<2)>>2]|0;aq=+g[aT+(aM*36|0)+24>>2];au=+g[aT+(aM*36|0)+28>>2];a0=+g[aT+(aM*36|0)+20>>2]+at;g[T>>2]=a0;a1=aq+ap;g[ak>>2]=a1;a2=au+av;g[q>>2]=a2;aL=aT+(aM*36|0)+4|0;aR=c[aL>>2]|0;if((aR|0)>0){aK=aT+(aM*36|0)+12|0;aM=0;p=aO;ac=aR;while(1){aR=c[(c[aK>>2]|0)+(aM<<2)>>2]|0;l=(c[(c[z>>2]|0)+16>>2]|0)+(aR<<4)|0;c[j>>2]=c[l>>2];c[j+4>>2]=c[l+4>>2];c[j+8>>2]=c[l+8>>2];c[j+12>>2]=c[l+12>>2];l=c[R>>2]|0;a3=0;while(1){if((a3|0)>=(p|0)){a4=214;break}if((c[l+(a3*24|0)+20>>2]|0)==(aR|0)){a5=p;a6=ac;break}else{a3=a3+1|0}}if((a4|0)==214){a4=0;c[f>>2]=c[j>>2];c[f+4>>2]=c[j+4>>2];c[f+8>>2]=c[j+8>>2];c[f+12>>2]=c[j+12>>2];do{if((p|0)==(c[m>>2]|0)){a3=(p|0)==0?1:p<<1;if((p|0)>=(a3|0)){a7=p;a8=l;break}if((a3|0)==0){a9=0;ba=p}else{aU=zv(a3*24|0,16)|0;a9=aU;ba=c[V>>2]|0}aU=c[R>>2]|0;if((ba|0)>0){bb=0;do{bc=a9+(bb*24|0)|0;bd=aU+(bb*24|0)|0;c[bc>>2]=c[bd>>2];c[bc+4>>2]=c[bd+4>>2];c[bc+8>>2]=c[bd+8>>2];c[bc+12>>2]=c[bd+12>>2];c[bc+16>>2]=c[bd+16>>2];c[bc+20>>2]=c[bd+20>>2];bb=bb+1|0;}while((bb|0)<(ba|0))}if((aU|0)==0){be=ba}else{if((a[o]&1)==0){bf=ba}else{zw(aU);bf=c[V>>2]|0}c[R>>2]=0;be=bf}a[o]=1;c[R>>2]=a9;c[m>>2]=a3;a7=be;a8=a9}else{a7=p;a8=l}}while(0);l=a8+(a7*24|0)|0;c[l>>2]=c[f>>2];c[l+4>>2]=c[f+4>>2];c[l+8>>2]=c[f+8>>2];c[l+12>>2]=c[f+12>>2];c[l+16>>2]=c[f+16>>2];c[a8+(a7*24|0)+20>>2]=aR;l=(c[V>>2]|0)+1|0;c[V>>2]=l;a5=l;a6=c[aL>>2]|0}l=aM+1|0;if((l|0)<(a6|0)){aM=l;p=a5;ac=a6}else{bg=a5;break}}}else{bg=aO}ac=aP+1|0;if((ac|0)<(aQ|0)){aP=ac;at=a0;ap=a1;av=a2;aO=bg}else{break}}a[ab]=1;c[aa>>2]=0;c[b>>2]=0;c[Z>>2]=0;g[w+20>>2]=+g[aT+((c[aS>>2]|0)*36|0)+20>>2];g[w+24>>2]=+g[aT+((c[aS>>2]|0)*36|0)+24>>2];g[w+28>>2]=+g[aT+((c[aS>>2]|0)*36|0)+28>>2];g[w+32>>2]=+g[aT+((c[aS>>2]|0)*36|0)+32>>2];a[ai]=1;c[aj>>2]=0;c[h>>2]=0;c[k>>2]=0;av=1.0/+W(a0*a0+a1*a1+a2*a2);g[T>>2]=a0*av;g[ak>>2]=a1*av;g[q>>2]=a2*av;oa(s,x,t);if((c[h>>2]|0)>0){aO=0;aP=0;ac=0;p=0;while(1){aM=(c[aj>>2]|0)+(aO*24|0)+20|0;do{if((aP|0)==(ac|0)){aL=(ac|0)==0?1:ac<<1;if((ac|0)>=(aL|0)){bh=ac;bi=ac;bj=p;break}if((aL|0)==0){bk=0}else{bk=zv(aL<<2,16)|0}if((ac|0)>0){aK=0;do{l=bk+(aK<<2)|0;if((l|0)!=0){c[l>>2]=c[p+(aK<<2)>>2]}aK=aK+1|0;}while((aK|0)<(ac|0))}if((p|0)!=0){zw(p);c[aa>>2]=0}a[ab]=1;c[aa>>2]=bk;c[Z>>2]=aL;bh=ac;bi=aL;bj=bk}else{bh=aP;bi=ac;bj=p}}while(0);aK=bj+(bh<<2)|0;if((aK|0)==0){bl=bh}else{c[aK>>2]=c[aM>>2];bl=c[b>>2]|0}aK=bl+1|0;c[b>>2]=aK;aR=c[V>>2]|0;l=c[R>>2]|0;bb=(c[aj>>2]|0)+(aO*24|0)+20|0;bd=0;while(1){if((bd|0)>=(aR|0)){break}bm=l+(bd*24|0)+20|0;if((c[bm>>2]|0)==(c[bb>>2]|0)){a4=250;break}else{bd=bd+1|0}}if((a4|0)==250){a4=0;c[bm>>2]=-1}bd=aO+1|0;if((bd|0)<(c[h>>2]|0)){aO=bd;aP=aK;ac=bi;p=bj}else{bn=bj;break}}}else{bn=0}p=c[V>>2]|0;L303:do{if((p|0)>0){ac=c[R>>2]|0;aP=c[C>>2]|0;if((aP|0)>0){bo=0}else{aO=0;while(1){aO=aO+1|0;if((aO|0)>=(p|0)){break L303}}}L308:while(1){aO=c[ac+(bo*24|0)+20>>2]|0;if((aO|0)!=-1){aK=0;do{bd=0;while(1){if((bd|0)>=(aQ|0)){a4=269;break}if((c[aS+(bd<<2)>>2]|0)==(aK|0)){break}else{bd=bd+1|0}}L316:do{if((a4|0)==269){a4=0;bd=c[aT+(aK*36|0)+4>>2]|0;a3=aT+(aK*36|0)+12|0;aU=0;while(1){if((aU|0)>=(bd|0)){break L316}if((c[(c[a3>>2]|0)+(aU<<2)>>2]|0)==(aO|0)){break L308}else{aU=aU+1|0}}}}while(0);aK=aK+1|0;}while((aK|0)<(aP|0))}bo=bo+1|0;if((bo|0)>=(p|0)){break L303}}aP=c[aj>>2]|0;if((aP|0)!=0){if((a[ai]&1)!=0){zw(aP)}c[aj>>2]=0}a[ai]=1;c[aj>>2]=0;c[h>>2]=0;c[k>>2]=0;if((bn|0)!=0){zw(bn);c[aa>>2]=0}a[ab]=1;c[aa>>2]=0;c[b>>2]=0;c[Z>>2]=0;aP=c[R>>2]|0;if((aP|0)!=0){if((a[o]&1)!=0){zw(aP)}c[R>>2]=0}a[o]=1;c[R>>2]=0;c[V>>2]=0;c[m>>2]=0;a4=320;break L235}}while(0);p=c[z>>2]|0;aP=p+28|0;ac=c[aP>>2]|0;if((ac|0)==(c[p+32>>2]|0)){oe(p+24|0,(ac|0)==0?1:ac<<1);bp=c[aP>>2]|0}else{bp=ac}ac=(c[p+36>>2]|0)+(bp*36|0)|0;if((ac|0)==0){bq=bp}else{of(ac,Y);p=ac+20|0;c[p>>2]=c[X>>2];c[p+4>>2]=c[X+4>>2];c[p+8>>2]=c[X+8>>2];c[p+12>>2]=c[X+12>>2];bq=c[aP>>2]|0}c[aP>>2]=bq+1;aP=c[aj>>2]|0;if((aP|0)!=0){if((a[ai]&1)!=0){zw(aP)}c[aj>>2]=0}a[ai]=1;c[aj>>2]=0;c[h>>2]=0;c[k>>2]=0;aP=c[aa>>2]|0;if((aP|0)!=0){if((a[ab]&1)!=0){zw(aP)}c[aa>>2]=0}a[ab]=1;c[aa>>2]=0;c[b>>2]=0;c[Z>>2]=0;aP=c[R>>2]|0;if((aP|0)!=0){if((a[o]&1)!=0){zw(aP)}c[R>>2]=0}a[o]=1;c[R>>2]=0;c[V>>2]=0;c[m>>2]=0}else{a4=320}}while(0);do{if((a4|0)==320){a4=0;if((aQ|0)>0){br=0}else{break}do{aP=c[aS+(br<<2)>>2]|0;of(I,aT+(aP*36|0)|0);p=aT+(aP*36|0)+20|0;c[ad>>2]=c[p>>2];c[ad+4>>2]=c[p+4>>2];c[ad+8>>2]=c[p+8>>2];c[ad+12>>2]=c[p+12>>2];p=c[z>>2]|0;aP=p+28|0;ac=c[aP>>2]|0;if((ac|0)==(c[p+32>>2]|0)){oe(p+24|0,(ac|0)==0?1:ac<<1);bs=c[aP>>2]|0}else{bs=ac}ac=(c[p+36>>2]|0)+(bs*36|0)|0;if((ac|0)==0){bt=bs}else{of(ac,I);p=ac+20|0;c[p>>2]=c[ad>>2];c[p+4>>2]=c[ad+4>>2];c[p+8>>2]=c[ad+8>>2];c[p+12>>2]=c[ad+12>>2];bt=c[aP>>2]|0}c[aP>>2]=bt+1;aP=c[af>>2]|0;if((aP|0)!=0){if((a[ae]&1)!=0){zw(aP)}c[af>>2]=0}a[ae]=1;c[af>>2]=0;c[J>>2]=0;c[aI>>2]=0;br=br+1|0;}while((br|0)<(aQ|0))}}while(0);if((aS|0)!=0){zw(aS)}if((aN|0)==0){aC=aE;break}else{aJ=aN}}}else{aC=0}}while(0);no(c[z>>2]|0);if((aC|0)!=0){zw(aC)}aC=c[C>>2]|0;z=c[n>>2]|0;if((aC|0)>0){aE=0;do{aS=z+(aE*36|0)+4|0;aQ=z+(aE*36|0)+12|0;br=c[aQ>>2]|0;bt=z+(aE*36|0)+16|0;if((br|0)!=0){if((a[bt]&1)!=0){zw(br)}c[aQ>>2]=0}a[bt]=1;c[aQ>>2]=0;c[aS>>2]=0;c[z+(aE*36|0)+8>>2]=0;aE=aE+1|0;}while((aE|0)<(aC|0))}if((z|0)!=0){if((a[d]&1)!=0){zw(z|0)}c[n>>2]=0}a[d]=1;c[n>>2]=0;c[C>>2]=0;c[U>>2]=0;if((ag|0)!=0){zw(ag)}ag=c[P>>2]|0;if((ag|0)!=0){if((a[N]&1)!=0){zw(ag)}c[P>>2]=0}a[N]=1;c[P>>2]=0;c[O>>2]=0;c[Q>>2]=0;Q=c[L>>2]|0;if((Q|0)!=0){if((a[D]&1)!=0){zw(Q)}c[L>>2]=0}a[D]=1;c[L>>2]=0;c[M>>2]=0;c[E>>2]=0;E=c[G>>2]|0;if((E|0)!=0){if((a[H]&1)!=0){zw(E)}c[G>>2]=0}a[H]=1;c[G>>2]=0;c[F>>2]=0;c[K>>2]=0;K=c[B>>2]|0;if((K|0)==0){i=e;return 1}if((a[A]&1)!=0){zw(K)}c[B>>2]=0;i=e;return 1}function oa(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,h=0,j=0,k=0,l=0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,X=0.0,Y=0,Z=0,_=0,$=0,aa=0;f=i;i=i+40|0;h=f|0;j=f+24|0;k=e|0;l=e+8|0;m=+g[l>>2];if(+V(+m)>.7071067690849304){n=+g[e+4>>2];o=1.0/+W(m*m+n*n);p=0.0;q=o*(-0.0-m);r=n*o}else{o=+g[k>>2];n=+g[e+4>>2];m=1.0/+W(o*o+n*n);p=m*(-0.0-n);q=o*m;r=0.0}s=b+4|0;t=c[s>>2]|0;if((t|0)<2){if((t|0)<=0){i=f;return}u=b+12|0;v=d+4|0;w=d+8|0;x=d+12|0;y=d+16|0;z=0;A=c[v>>2]|0;do{B=c[u>>2]|0;do{if((A|0)==(c[w>>2]|0)){C=(A|0)==0?1:A<<1;if((A|0)>=(C|0)){D=A;break}if((C|0)==0){E=0;F=A}else{G=zv(C*24|0,16)|0;E=G;F=c[v>>2]|0}if((F|0)>0){G=0;do{H=E+(G*24|0)|0;I=(c[x>>2]|0)+(G*24|0)|0;c[H>>2]=c[I>>2];c[H+4>>2]=c[I+4>>2];c[H+8>>2]=c[I+8>>2];c[H+12>>2]=c[I+12>>2];c[H+16>>2]=c[I+16>>2];c[H+20>>2]=c[I+20>>2];G=G+1|0;}while((G|0)<(F|0))}G=c[x>>2]|0;if((G|0)!=0){if((a[y]&1)!=0){zw(G)}c[x>>2]=0}a[y]=1;c[x>>2]=E;c[w>>2]=C;D=c[v>>2]|0}else{D=A}}while(0);G=(c[x>>2]|0)+(D*24|0)|0;I=B;c[G>>2]=c[I>>2];c[G+4>>2]=c[I+4>>2];c[G+8>>2]=c[I+8>>2];c[G+12>>2]=c[I+12>>2];c[G+16>>2]=c[I+16>>2];c[G+20>>2]=c[I+20>>2];A=(c[v>>2]|0)+1|0;c[v>>2]=A;z=z+1|0;}while((z|0)<(c[s>>2]|0));i=f;return}z=b+12|0;A=h;h=0;v=c[z>>2]|0;D=t;while(1){if(p*+g[v+(h*24|0)>>2]+q*+g[v+(h*24|0)+4>>2]+r*+g[v+(h*24|0)+8>>2]<p*+g[v>>2]+q*+g[v+4>>2]+r*+g[v+8>>2]){t=v;c[A>>2]=c[t>>2];c[A+4>>2]=c[t+4>>2];c[A+8>>2]=c[t+8>>2];c[A+12>>2]=c[t+12>>2];c[A+16>>2]=c[t+16>>2];c[A+20>>2]=c[t+20>>2];x=v+(h*24|0)|0;c[t>>2]=c[x>>2];c[t+4>>2]=c[x+4>>2];c[t+8>>2]=c[x+8>>2];c[t+12>>2]=c[x+12>>2];c[t+16>>2]=c[x+16>>2];c[t+20>>2]=c[x+20>>2];x=(c[z>>2]|0)+(h*24|0)|0;c[x>>2]=c[A>>2];c[x+4>>2]=c[A+4>>2];c[x+8>>2]=c[A+8>>2];c[x+12>>2]=c[A+12>>2];c[x+16>>2]=c[A+16>>2];c[x+20>>2]=c[A+20>>2];J=c[s>>2]|0;K=c[z>>2]|0}else{J=D;K=v}x=h+1|0;if((x|0)<(J|0)){h=x;v=K;D=J}else{break}}g[K+16>>2]=-1.0000000150474662e+30;K=c[s>>2]|0;J=c[z>>2]|0;if((K|0)>1){D=e+4|0;v=1;h=J;while(1){m=+g[h+(v*24|0)>>2]- +g[h>>2];o=+g[h+(v*24|0)+4>>2]- +g[h+4>>2];n=+g[h+(v*24|0)+8>>2]- +g[h+8>>2];g[h+(v*24|0)+16>>2]=((p*o-q*m)*+g[l>>2]+(+g[k>>2]*(q*n-r*o)+ +g[D>>2]*(r*m-p*n)))/+W(m*m+o*o+n*n);A=v+1|0;x=c[s>>2]|0;t=c[z>>2]|0;if((A|0)<(x|0)){v=A;h=t}else{L=t;M=x;break}}}else{L=J;M=K}K=j;J=L;c[K>>2]=c[J>>2];c[K+4>>2]=c[J+4>>2];c[K+8>>2]=c[J+8>>2];c[K+12>>2]=c[J+12>>2];og(b,j,1,M-1|0);M=d+4|0;j=d+8|0;b=d+12|0;J=d+16|0;d=c[z>>2]|0;K=c[M>>2]|0;do{if((K|0)==(c[j>>2]|0)){L=(K|0)==0?1:K<<1;if((K|0)>=(L|0)){N=K;break}if((L|0)==0){O=0;P=K}else{h=zv(L*24|0,16)|0;O=h;P=c[M>>2]|0}if((P|0)>0){h=0;do{v=O+(h*24|0)|0;D=(c[b>>2]|0)+(h*24|0)|0;c[v>>2]=c[D>>2];c[v+4>>2]=c[D+4>>2];c[v+8>>2]=c[D+8>>2];c[v+12>>2]=c[D+12>>2];c[v+16>>2]=c[D+16>>2];c[v+20>>2]=c[D+20>>2];h=h+1|0;}while((h|0)<(P|0))}h=c[b>>2]|0;if((h|0)!=0){if((a[J]&1)!=0){zw(h)}c[b>>2]=0}a[J]=1;c[b>>2]=O;c[j>>2]=L;N=c[M>>2]|0}else{N=K}}while(0);K=(c[b>>2]|0)+(N*24|0)|0;N=d;c[K>>2]=c[N>>2];c[K+4>>2]=c[N+4>>2];c[K+8>>2]=c[N+8>>2];c[K+12>>2]=c[N+12>>2];c[K+16>>2]=c[N+16>>2];c[K+20>>2]=c[N+20>>2];N=(c[M>>2]|0)+1|0;c[M>>2]=N;K=(c[z>>2]|0)+24|0;do{if((N|0)==(c[j>>2]|0)){d=(N|0)==0?1:N<<1;if((N|0)>=(d|0)){Q=N;break}if((d|0)==0){R=0;S=N}else{O=zv(d*24|0,16)|0;R=O;S=c[M>>2]|0}if((S|0)>0){O=0;do{P=R+(O*24|0)|0;h=(c[b>>2]|0)+(O*24|0)|0;c[P>>2]=c[h>>2];c[P+4>>2]=c[h+4>>2];c[P+8>>2]=c[h+8>>2];c[P+12>>2]=c[h+12>>2];c[P+16>>2]=c[h+16>>2];c[P+20>>2]=c[h+20>>2];O=O+1|0;}while((O|0)<(S|0))}O=c[b>>2]|0;if((O|0)!=0){if((a[J]&1)!=0){zw(O)}c[b>>2]=0}a[J]=1;c[b>>2]=R;c[j>>2]=d;Q=c[M>>2]|0}else{Q=N}}while(0);N=(c[b>>2]|0)+(Q*24|0)|0;Q=K;c[N>>2]=c[Q>>2];c[N+4>>2]=c[Q+4>>2];c[N+8>>2]=c[Q+8>>2];c[N+12>>2]=c[Q+12>>2];c[N+16>>2]=c[Q+16>>2];c[N+20>>2]=c[Q+20>>2];Q=(c[M>>2]|0)+1|0;c[M>>2]=Q;if((c[s>>2]|0)==2){i=f;return}N=e+4|0;e=2;K=Q;while(1){L81:do{if((K|0)>1){Q=K;while(1){R=Q-2|0;T=c[b>>2]|0;S=Q-1|0;p=+g[T+(R*24|0)>>2];r=p- +g[T+(S*24|0)>>2];q=+g[T+(R*24|0)+4>>2];n=q- +g[T+(S*24|0)+4>>2];o=+g[T+(R*24|0)+8>>2];m=o- +g[T+(S*24|0)+8>>2];R=c[z>>2]|0;U=R+(e*24|0)|0;X=p- +g[U>>2];p=q- +g[R+(e*24|0)+4>>2];q=o- +g[R+(e*24|0)+8>>2];if((r*p-n*X)*+g[l>>2]+(+g[k>>2]*(n*q-m*p)+ +g[N>>2]*(m*X-r*q))>0.0){break}c[M>>2]=S;if((S|0)>1){Q=S}else{Y=S;break L81}}do{if((Q|0)==(c[j>>2]|0)){C=(Q|0)==0?1:Q<<1;if((Q|0)>=(C|0)){Z=Q;_=T;break}if((C|0)==0){$=0;aa=Q}else{S=zv(C*24|0,16)|0;$=S;aa=c[M>>2]|0}if((aa|0)>0){S=0;do{R=$+(S*24|0)|0;O=(c[b>>2]|0)+(S*24|0)|0;c[R>>2]=c[O>>2];c[R+4>>2]=c[O+4>>2];c[R+8>>2]=c[O+8>>2];c[R+12>>2]=c[O+12>>2];c[R+16>>2]=c[O+16>>2];c[R+20>>2]=c[O+20>>2];S=S+1|0;}while((S|0)<(aa|0))}S=c[b>>2]|0;if((S|0)!=0){if((a[J]&1)!=0){zw(S)}c[b>>2]=0}a[J]=1;c[b>>2]=$;c[j>>2]=C;Z=c[M>>2]|0;_=$}else{Z=Q;_=T}}while(0);Q=_+(Z*24|0)|0;S=U;c[Q>>2]=c[S>>2];c[Q+4>>2]=c[S+4>>2];c[Q+8>>2]=c[S+8>>2];c[Q+12>>2]=c[S+12>>2];c[Q+16>>2]=c[S+16>>2];c[Q+20>>2]=c[S+20>>2];S=(c[M>>2]|0)+1|0;c[M>>2]=S;Y=S}else{Y=K}}while(0);d=e+1|0;if((d|0)==(c[s>>2]|0)){break}else{e=d;K=Y}}i=f;return}function ob(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,h=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0,r=0,s=0,t=0,u=0,v=0,w=0.0,x=0,y=0,z=0,A=0.0,B=0.0;e=i;i=i+2048|0;f=e|0;K1(a|0,0,16)|0;h=+g[d>>2];j=+g[d+4>>2];k=+g[d+8>>2];l=h*h+j*j+k*k;if(l<9999999747378752.0e-20){m=1.0;n=0.0;o=0.0}else{p=1.0/+W(l);m=h*p;n=j*p;o=k*p}d=b;if((g3[c[(c[d>>2]|0)+96>>2]&511](b)|0)<=0){i=e;return}q=a;a=b;p=-999999984306749400.0;r=0;while(1){if(((g3[c[(c[d>>2]|0)+96>>2]&511](b)|0)-r|0)<128){s=(g3[c[(c[d>>2]|0)+96>>2]&511](b)|0)-r|0;if((s|0)>0){t=s;u=7}else{v=-1;w=-3.4028234663852886e+38}}else{t=128;u=7}if((u|0)==7){u=0;s=0;while(1){hF[c[(c[a>>2]|0)+108>>2]&255](b,s,f+(s<<4)|0);x=s+1|0;if((x|0)<(t|0)){s=x}else{y=0;z=-1;A=-3.4028234663852886e+38;break}}while(1){k=m*+g[f+(y<<4)>>2]+n*+g[f+(y<<4)+4>>2]+o*+g[f+(y<<4)+8>>2];s=k>A;x=s?y:z;j=s?k:A;s=y+1|0;if((s|0)<(t|0)){y=s;z=x;A=j}else{v=x;w=j;break}}}if(w>p){x=f+(v<<4)|0;c[q>>2]=c[x>>2];c[q+4>>2]=c[x+4>>2];c[q+8>>2]=c[x+8>>2];c[q+12>>2]=c[x+12>>2];B=w}else{B=p}x=r+128|0;if((x|0)<(g3[c[(c[d>>2]|0)+96>>2]&511](b)|0)){p=B;r=x}else{break}}i=e;return}function oc(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0.0,x=0.0,y=0.0,z=0.0,A=0,B=0.0,C=0.0,D=0,E=0,F=0.0;f=i;i=i+2048|0;h=f|0;j=(e|0)>0;if(j){k=0}else{i=f;return}do{g[d+(k<<4)+12>>2]=-999999984306749400.0;k=k+1|0;}while((k|0)<(e|0));if(!j){i=f;return}j=a;k=a;l=0;do{if((g3[c[(c[j>>2]|0)+96>>2]&511](a)|0)>0){m=b+(l<<4)|0;n=b+(l<<4)+4|0;o=b+(l<<4)+8|0;p=d+(l<<4)+12|0;q=d+(l<<4)|0;r=0;do{if(((g3[c[(c[j>>2]|0)+96>>2]&511](a)|0)-r|0)<128){s=(g3[c[(c[j>>2]|0)+96>>2]&511](a)|0)-r|0;if((s|0)>0){t=s;u=9}else{v=-1;w=-3.4028234663852886e+38}}else{t=128;u=9}if((u|0)==9){u=0;s=0;do{hF[c[(c[k>>2]|0)+108>>2]&255](a,s,h+(s<<4)|0);s=s+1|0;}while((s|0)<(t|0));x=+g[m>>2];y=+g[n>>2];z=+g[o>>2];s=0;A=-1;B=-3.4028234663852886e+38;while(1){C=x*+g[h+(s<<4)>>2]+y*+g[h+(s<<4)+4>>2]+z*+g[h+(s<<4)+8>>2];D=C>B;E=D?s:A;F=D?C:B;D=s+1|0;if((D|0)<(t|0)){s=D;A=E;B=F}else{v=E;w=F;break}}}if(w>+g[p>>2]){A=h+(v<<4)|0;c[q>>2]=c[A>>2];c[q+4>>2]=c[A+4>>2];c[q+8>>2]=c[A+8>>2];c[q+12>>2]=c[A+12>>2];g[p>>2]=w}r=r+128|0;}while((r|0)<(g3[c[(c[j>>2]|0)+96>>2]&511](a)|0))}l=l+1|0;}while((l|0)<(e|0));i=f;return}function od(a,b,d){a=a|0;b=+b;d=d|0;var e=0,f=0,h=0,j=0,k=0,l=0.0,m=0.0,n=0.0,o=0.0;e=i;i=i+96|0;f=e|0;h=e+64|0;j=e+80|0;k=a|0;l=+g6[c[(c[a>>2]|0)+48>>2]&15](k);g[f>>2]=1.0;K1(f+4|0,0,16)|0;g[f+20>>2]=1.0;K1(f+24|0,0,16)|0;g[f+40>>2]=1.0;K1(f+44|0,0,20)|0;hM[c[(c[a>>2]|0)+8>>2]&255](k,f,h,j);m=(l+(+g[j>>2]- +g[h>>2])*.5)*2.0;n=(l+(+g[j+4>>2]- +g[h+4>>2])*.5)*2.0;o=(l+(+g[j+8>>2]- +g[h+8>>2])*.5)*2.0;l=m*m;m=n*n;n=o*o;o=b*.0833333283662796;g[d>>2]=o*(m+n);g[d+4>>2]=o*(l+n);g[d+8>>2]=o*(l+m);g[d+12>>2]=0.0;i=e;return}function oe(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;e=b+8|0;if((c[e>>2]|0)>=(d|0)){return}if((d|0)==0){f=0}else{f=zv(d*36|0,16)|0}g=b+4|0;h=c[g>>2]|0;do{if((h|0)>0){i=b+12|0;j=0;do{k=f+(j*36|0)|0;if((k|0)!=0){l=c[i>>2]|0;of(k,l+(j*36|0)|0);m=k+20|0;k=l+(j*36|0)+20|0;c[m>>2]=c[k>>2];c[m+4>>2]=c[k+4>>2];c[m+8>>2]=c[k+8>>2];c[m+12>>2]=c[k+12>>2]}j=j+1|0;}while((j|0)<(h|0));j=c[g>>2]|0;if((j|0)<=0){n=10;break}i=b+12|0;k=0;while(1){m=c[i>>2]|0;l=m+(k*36|0)+4|0;o=m+(k*36|0)+12|0;p=c[o>>2]|0;q=m+(k*36|0)+16|0;if((p|0)!=0){if((a[q]&1)!=0){zw(p)}c[o>>2]=0}a[q]=1;c[o>>2]=0;c[l>>2]=0;c[m+(k*36|0)+8>>2]=0;m=k+1|0;if((m|0)<(j|0)){k=m}else{r=i;break}}}else{n=10}}while(0);if((n|0)==10){r=b+12|0}n=c[r>>2]|0;g=b+16|0;if((n|0)!=0){if((a[g]&1)!=0){zw(n|0)}c[r>>2]=0}a[g]=1;c[r>>2]=f;c[e>>2]=d;return}function of(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;e=b+16|0;a[e]=1;f=b+12|0;c[f>>2]=0;g=b+4|0;c[g>>2]=0;h=b+8|0;c[h>>2]=0;b=c[d+4>>2]|0;i=(b|0)>0;if(!i){c[g>>2]=b;return}j=zv(b<<2,16)|0;k=c[g>>2]|0;if((k|0)>0){l=0;do{m=j+(l<<2)|0;if((m|0)!=0){c[m>>2]=c[(c[f>>2]|0)+(l<<2)>>2]}l=l+1|0;}while((l|0)<(k|0))}k=c[f>>2]|0;if((k|0)!=0){if((a[e]&1)!=0){zw(k)}c[f>>2]=0}a[e]=1;c[f>>2]=j;c[h>>2]=b;h=0;e=j;do{j=e+(h<<2)|0;if((j|0)!=0){c[j>>2]=0}h=h+1|0;e=c[f>>2]|0}while((h|0)<(b|0));c[g>>2]=b;if(!i){return}i=d+12|0;d=0;do{g=e+(d<<2)|0;if((g|0)!=0){c[g>>2]=c[(c[i>>2]|0)+(d<<2)>>2]}d=d+1|0;}while((d|0)<(b|0));return}function og(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,h=0,j=0,k=0,l=0.0,m=0.0,n=0.0,o=0.0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0.0,x=0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0,G=0,H=0,I=0;f=i;i=i+24|0;h=(e+d|0)/2|0;j=a+12|0;k=c[j>>2]|0;l=+g[k+(h*24|0)>>2];m=+g[k+(h*24|0)+4>>2];n=+g[k+(h*24|0)+8>>2];o=+g[k+(h*24|0)+16>>2];p=c[k+(h*24|0)+20>>2]|0;h=b|0;q=b+4|0;r=b+8|0;s=f|0;t=e;u=d;v=k;while(1){k=u;L3:while(1){w=+g[v+(k*24|0)+16>>2];do{if(w!=o){if(w>=o){x=t;break L3}}else{y=+g[h>>2];z=+g[v+(k*24|0)>>2]-y;A=+g[q>>2];B=+g[v+(k*24|0)+4>>2]-A;C=+g[r>>2];D=+g[v+(k*24|0)+8>>2]-C;E=z*z+B*B+D*D;D=l-y;y=m-A;A=n-C;C=D*D+y*y+A*A;if(E!=C){if(E<C){break}else{x=t;break L3}}else{if((c[v+(k*24|0)+20>>2]|0)<(p|0)){break}else{x=t;break L3}}}}while(0);k=k+1|0}L12:while(1){w=+g[v+(x*24|0)+16>>2];do{if(o!=w){if(o>=w){break L12}}else{C=+g[h>>2];E=l-C;A=+g[q>>2];y=m-A;D=+g[r>>2];B=n-D;z=E*E+y*y+B*B;B=+g[v+(x*24|0)>>2]-C;C=+g[v+(x*24|0)+4>>2]-A;A=+g[v+(x*24|0)+8>>2]-D;D=B*B+C*C+A*A;if(z!=D){if(z<D){break}else{break L12}}else{if((p|0)<(c[v+(x*24|0)+20>>2]|0)){break}else{break L12}}}}while(0);x=x-1|0}if((k|0)>(x|0)){F=x;G=k}else{H=v+(k*24|0)|0;c[s>>2]=c[H>>2];c[s+4>>2]=c[H+4>>2];c[s+8>>2]=c[H+8>>2];c[s+12>>2]=c[H+12>>2];c[s+16>>2]=c[H+16>>2];c[s+20>>2]=c[H+20>>2];I=v+(x*24|0)|0;c[H>>2]=c[I>>2];c[H+4>>2]=c[I+4>>2];c[H+8>>2]=c[I+8>>2];c[H+12>>2]=c[I+12>>2];c[H+16>>2]=c[I+16>>2];c[H+20>>2]=c[I+20>>2];I=(c[j>>2]|0)+(x*24|0)|0;c[I>>2]=c[s>>2];c[I+4>>2]=c[s+4>>2];c[I+8>>2]=c[s+8>>2];c[I+12>>2]=c[s+12>>2];c[I+16>>2]=c[s+16>>2];c[I+20>>2]=c[s+20>>2];F=x-1|0;G=k+1|0}if((G|0)>(F|0)){break}t=F;u=G;v=c[j>>2]|0}if((F|0)>(d|0)){og(a,b,d,F)}if((G|0)>=(e|0)){i=f;return}og(a,b,G,e);i=f;return}function oh(a,b,c){a=a|0;b=b|0;c=c|0;K1(a|0,0,16)|0;return}function oi(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;if((d|0)>0){e=0}else{return}while(1){b=e+1|0;K1(c+(e<<4)|0,0,16)|0;if((b|0)<(d|0)){e=b}else{break}}return}function oj(a,b,d){a=a|0;b=b|0;d=d|0;var e=0.0,f=0.0,h=0.0,i=0.0,j=0.0;hF[c[(c[b>>2]|0)+68>>2]&255](a,b,d);e=+g[d>>2];f=+g[d+4>>2];h=+g[d+8>>2];d=e*e+f*f+h*h<1.4210854715202004e-14;i=d?-1.0:h;h=d?-1.0:f;f=d?-1.0:e;e=1.0/+W(i*i+(f*f+h*h));j=+g6[c[(c[b>>2]|0)+48>>2]&15](b);b=a|0;g[b>>2]=e*f*j+ +g[b>>2];b=a+4|0;g[b>>2]=j*e*h+ +g[b>>2];b=a+8|0;g[b>>2]=j*e*i+ +g[b>>2];return}function ok(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,h=0.0,i=0.0,j=0.0,k=0.0,l=0,m=0.0;f=a;h=+g6[c[(c[f>>2]|0)+48>>2]&15](a);i=+g6[c[(c[f>>2]|0)+48>>2]&15](a);j=+g6[c[(c[f>>2]|0)+48>>2]&15](a);a=b+48|0;f=b+52|0;k=+g[f>>2]-i;l=b+56|0;m=+g[l>>2]-j;g[d>>2]=+g[a>>2]-h;g[d+4>>2]=k;g[d+8>>2]=m;g[d+12>>2]=0.0;m=i+ +g[f>>2];i=j+ +g[l>>2];g[e>>2]=h+ +g[a>>2];g[e+4>>2]=m;g[e+8>>2]=i;g[e+12>>2]=0.0;return}function ol(a,b,d){a=a|0;b=+b;d=d|0;var e=0,f=0.0;e=a;f=b*.4000000059604645*+g6[c[(c[e>>2]|0)+48>>2]&15](a);b=f*+g6[c[(c[e>>2]|0)+48>>2]&15](a);g[d>>2]=b;g[d+4>>2]=b;g[d+8>>2]=b;g[d+12>>2]=0.0;return}function om(a){a=a|0;nv(a|0);return}function on(a){a=a|0;nv(a|0);zw(a);return}function oo(a){a=a|0;return 23152}function op(a,b){a=a|0;b=+b;g[a+44>>2]=b;return}function oq(a){a=a|0;return+(+g[a+28>>2]*+g[a+12>>2])}function or(a){a=a|0;return}function os(a,b,f,j){a=a|0;b=b|0;f=f|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0.0,v=0.0,w=0.0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0.0,V=0.0,W=0,X=0,Y=0,Z=0,_=0;j=i;i=i+112|0;f=j|0;k=j+8|0;l=j+16|0;m=j+24|0;n=j+32|0;o=j+40|0;p=j+48|0;q=j+56|0;r=j+64|0;s=g3[c[(c[a>>2]|0)+28>>2]&511](a)|0;t=r|0;u=+g[a+4>>2];v=+g[a+8>>2];w=+g[a+12>>2];if((s|0)<=0){i=j;return}x=a;y=a;z=r|0;A=r+4|0;B=r+8|0;C=r+12|0;D=r+16|0;E=r+20|0;F=r+24|0;G=r+28|0;H=r+32|0;I=r+36|0;J=r+40|0;K=r+44|0;r=b;L=0;do{hw[c[(c[x>>2]|0)+16>>2]&7](a,f,p,m,o,k,l,q,n,L);M=c[m>>2]|0;do{if((M|0)==1){N=c[n>>2]|0;if((N|0)==5){if((c[q>>2]|0)>0){O=0}else{break}do{P=c[k>>2]|0;Q=ag(c[l>>2]|0,O)|0;R=c[f>>2]|0;S=c[o>>2]|0;T=ag(d[P+Q|0]|0,S)|0;U=v*+h[R+(T+8)>>3];V=w*+h[R+(T+16)>>3];g[z>>2]=u*+h[R+T>>3];g[A>>2]=U;g[B>>2]=V;g[C>>2]=0.0;T=ag(d[P+(Q+1)|0]|0,S)|0;V=v*+h[R+(T+8)>>3];U=w*+h[R+(T+16)>>3];g[D>>2]=u*+h[R+T>>3];g[E>>2]=V;g[F>>2]=U;g[G>>2]=0.0;T=ag(d[P+(Q+2)|0]|0,S)|0;U=v*+h[R+(T+8)>>3];V=w*+h[R+(T+16)>>3];g[H>>2]=u*+h[R+T>>3];g[I>>2]=U;g[J>>2]=V;g[K>>2]=0.0;hM[c[(c[r>>2]|0)+8>>2]&255](b,t,L,O);O=O+1|0;}while((O|0)<(c[q>>2]|0))}else if((N|0)==2){if((c[q>>2]|0)>0){W=0}else{break}do{T=c[k>>2]|0;R=ag(c[l>>2]|0,W)|0;S=c[f>>2]|0;Q=c[o>>2]|0;P=ag(Q,c[T+R>>2]|0)|0;V=v*+h[S+(P+8)>>3];U=w*+h[S+(P+16)>>3];g[z>>2]=u*+h[S+P>>3];g[A>>2]=V;g[B>>2]=U;g[C>>2]=0.0;P=ag(Q,c[T+(R+4)>>2]|0)|0;U=v*+h[S+(P+8)>>3];V=w*+h[S+(P+16)>>3];g[D>>2]=u*+h[S+P>>3];g[E>>2]=U;g[F>>2]=V;g[G>>2]=0.0;P=ag(Q,c[T+(R+8)>>2]|0)|0;V=v*+h[S+(P+8)>>3];U=w*+h[S+(P+16)>>3];g[H>>2]=u*+h[S+P>>3];g[I>>2]=V;g[J>>2]=U;g[K>>2]=0.0;hM[c[(c[r>>2]|0)+8>>2]&255](b,t,L,W);W=W+1|0;}while((W|0)<(c[q>>2]|0))}else if((N|0)==3){if((c[q>>2]|0)>0){X=0}else{break}do{P=c[k>>2]|0;S=ag(c[l>>2]|0,X)|0;R=c[f>>2]|0;T=c[o>>2]|0;Q=ag(e[P+S>>1]|0,T)|0;U=v*+h[R+(Q+8)>>3];V=w*+h[R+(Q+16)>>3];g[z>>2]=u*+h[R+Q>>3];g[A>>2]=U;g[B>>2]=V;g[C>>2]=0.0;Q=ag(e[P+(S+2)>>1]|0,T)|0;V=v*+h[R+(Q+8)>>3];U=w*+h[R+(Q+16)>>3];g[D>>2]=u*+h[R+Q>>3];g[E>>2]=V;g[F>>2]=U;g[G>>2]=0.0;Q=ag(e[P+(S+4)>>1]|0,T)|0;U=v*+h[R+(Q+8)>>3];V=w*+h[R+(Q+16)>>3];g[H>>2]=u*+h[R+Q>>3];g[I>>2]=U;g[J>>2]=V;g[K>>2]=0.0;hM[c[(c[r>>2]|0)+8>>2]&255](b,t,L,X);X=X+1|0;}while((X|0)<(c[q>>2]|0))}else{break}}else if((M|0)==0){N=c[n>>2]|0;if((N|0)==3){if((c[q>>2]|0)>0){Y=0}else{break}do{Q=c[k>>2]|0;R=ag(c[l>>2]|0,Y)|0;T=c[f>>2]|0;S=c[o>>2]|0;P=ag(e[Q+R>>1]|0,S)|0;V=v*+g[T+(P+4)>>2];U=w*+g[T+(P+8)>>2];g[z>>2]=u*+g[T+P>>2];g[A>>2]=V;g[B>>2]=U;g[C>>2]=0.0;P=ag(e[Q+(R+2)>>1]|0,S)|0;U=v*+g[T+(P+4)>>2];V=w*+g[T+(P+8)>>2];g[D>>2]=u*+g[T+P>>2];g[E>>2]=U;g[F>>2]=V;g[G>>2]=0.0;P=ag(e[Q+(R+4)>>1]|0,S)|0;V=v*+g[T+(P+4)>>2];U=w*+g[T+(P+8)>>2];g[H>>2]=u*+g[T+P>>2];g[I>>2]=V;g[J>>2]=U;g[K>>2]=0.0;hM[c[(c[r>>2]|0)+8>>2]&255](b,t,L,Y);Y=Y+1|0;}while((Y|0)<(c[q>>2]|0))}else if((N|0)==5){if((c[q>>2]|0)>0){Z=0}else{break}do{P=c[k>>2]|0;T=ag(c[l>>2]|0,Z)|0;S=c[f>>2]|0;R=c[o>>2]|0;Q=ag(d[P+T|0]|0,R)|0;U=v*+g[S+(Q+4)>>2];V=w*+g[S+(Q+8)>>2];g[z>>2]=u*+g[S+Q>>2];g[A>>2]=U;g[B>>2]=V;g[C>>2]=0.0;Q=ag(d[P+(T+1)|0]|0,R)|0;V=v*+g[S+(Q+4)>>2];U=w*+g[S+(Q+8)>>2];g[D>>2]=u*+g[S+Q>>2];g[E>>2]=V;g[F>>2]=U;g[G>>2]=0.0;Q=ag(d[P+(T+2)|0]|0,R)|0;U=v*+g[S+(Q+4)>>2];V=w*+g[S+(Q+8)>>2];g[H>>2]=u*+g[S+Q>>2];g[I>>2]=U;g[J>>2]=V;g[K>>2]=0.0;hM[c[(c[r>>2]|0)+8>>2]&255](b,t,L,Z);Z=Z+1|0;}while((Z|0)<(c[q>>2]|0))}else if((N|0)==2){if((c[q>>2]|0)>0){_=0}else{break}do{Q=c[k>>2]|0;S=ag(c[l>>2]|0,_)|0;R=c[f>>2]|0;T=c[o>>2]|0;P=ag(T,c[Q+S>>2]|0)|0;V=v*+g[R+(P+4)>>2];U=w*+g[R+(P+8)>>2];g[z>>2]=u*+g[R+P>>2];g[A>>2]=V;g[B>>2]=U;g[C>>2]=0.0;P=ag(T,c[Q+(S+4)>>2]|0)|0;U=v*+g[R+(P+4)>>2];V=w*+g[R+(P+8)>>2];g[D>>2]=u*+g[R+P>>2];g[E>>2]=U;g[F>>2]=V;g[G>>2]=0.0;P=ag(T,c[Q+(S+8)>>2]|0)|0;V=v*+g[R+(P+4)>>2];U=w*+g[R+(P+8)>>2];g[H>>2]=u*+g[R+P>>2];g[I>>2]=V;g[J>>2]=U;g[K>>2]=0.0;hM[c[(c[r>>2]|0)+8>>2]&255](b,t,L,_);_=_+1|0;}while((_|0)<(c[q>>2]|0))}else{break}}}while(0);g0[c[(c[y>>2]|0)+24>>2]&511](a,L);L=L+1|0;}while((L|0)<(s|0));i=j;return}function ot(d,e,f){d=d|0;e=e|0;f=f|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0.0,y=0,z=0,A=0.0,B=0,C=0,D=0,E=0.0,F=0,G=0,H=0,I=0.0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0;j=i;i=i+64|0;k=j|0;l=j+8|0;m=j+16|0;n=j+24|0;o=j+32|0;p=j+40|0;q=j+48|0;r=j+56|0;s=d;t=g3[c[(c[s>>2]|0)+28>>2]&511](d)|0;c[e+20>>2]=t;u=e;c[u>>2]=0;if((t|0)==0){v=e+4|0;w=d+4|0;x=+g[w>>2];y=v;g[y>>2]=x;z=d+8|0;A=+g[z>>2];B=e+8|0;C=B;g[C>>2]=A;D=d+12|0;E=+g[D>>2];F=e+12|0;G=F;g[G>>2]=E;H=d+16|0;I=+g[H>>2];J=e+16|0;K=J;g[K>>2]=I;i=j;return 15280}L=f;M=hd[c[(c[L>>2]|0)+16>>2]&127](f,32,t)|0;t=M+8|0;N=c[t>>2]|0;O=f;c[u>>2]=hx[c[(c[O>>2]|0)+28>>2]&127](f,N)|0;u=g3[c[(c[s>>2]|0)+28>>2]&511](d)|0;if((u|0)>0){s=d;P=d;Q=f;R=0;S=N;while(1){hw[c[(c[s>>2]|0)+16>>2]&7](d,k,q,n,p,l,m,r,o,R);c[S+24>>2]=c[r>>2];c[S+28>>2]=c[q>>2];N=S+8|0;T=S+12|0;U=S+16|0;V=S|0;W=S+4|0;K1(S|0,0,24)|0;X=c[o>>2]|0;do{if((X|0)==5){Y=c[r>>2]|0;if((Y|0)==0){break}Z=hd[c[(c[L>>2]|0)+16>>2]&127](f,4,Y)|0;Y=Z+8|0;_=c[Y>>2]|0;$=_;c[U>>2]=hx[c[(c[O>>2]|0)+28>>2]&127](f,_)|0;if((c[r>>2]|0)>0){_=0;do{aa=c[l>>2]|0;ab=ag(c[m>>2]|0,_)|0;a[$+(_<<2)|0]=a[aa+ab|0]|0;a[$+(_<<2)+1|0]=a[aa+(ab+1)|0]|0;a[$+(_<<2)+2|0]=a[aa+(ab+2)|0]|0;_=_+1|0;}while((_|0)<(c[r>>2]|0))}g7[c[(c[Q>>2]|0)+20>>2]&127](f,Z,21064,1497453121,c[Y>>2]|0)}else if((X|0)==2){_=(c[r>>2]|0)*3|0;if((_|0)==0){break}$=hd[c[(c[L>>2]|0)+16>>2]&127](f,4,_)|0;_=$+8|0;ab=c[_>>2]|0;aa=ab;c[N>>2]=hx[c[(c[O>>2]|0)+28>>2]&127](f,ab)|0;if((c[r>>2]|0)>0){ab=0;do{ac=c[l>>2]|0;ad=ag(c[m>>2]|0,ab)|0;ae=ab*3|0;c[aa+(ae<<2)>>2]=c[ac+ad>>2];c[aa+(ae+1<<2)>>2]=c[ac+(ad+4)>>2];c[aa+(ae+2<<2)>>2]=c[ac+(ad+8)>>2];ab=ab+1|0;}while((ab|0)<(c[r>>2]|0))}g7[c[(c[Q>>2]|0)+20>>2]&127](f,$,15312,1497453121,c[_>>2]|0)}else if((X|0)==3){ab=c[r>>2]|0;if((ab|0)==0){break}aa=hd[c[(c[L>>2]|0)+16>>2]&127](f,8,ab)|0;ab=aa+8|0;Y=c[ab>>2]|0;Z=Y;c[T>>2]=hx[c[(c[O>>2]|0)+28>>2]&127](f,Y)|0;if((c[r>>2]|0)>0){Y=0;do{ad=c[l>>2]|0;ac=ag(c[m>>2]|0,Y)|0;b[Z+(Y<<3)>>1]=b[ad+ac>>1]|0;b[Z+(Y<<3)+2>>1]=b[ad+(ac+2)>>1]|0;b[Z+(Y<<3)+4>>1]=b[ad+(ac+4)>>1]|0;Y=Y+1|0;}while((Y|0)<(c[r>>2]|0))}g7[c[(c[Q>>2]|0)+20>>2]&127](f,aa,23120,1497453121,c[ab>>2]|0)}}while(0);T=c[n>>2]|0;do{if((T|0)==0){X=c[q>>2]|0;if((X|0)==0){break}N=hd[c[(c[L>>2]|0)+16>>2]&127](f,16,X)|0;X=N+8|0;U=c[X>>2]|0;Y=U;c[V>>2]=hx[c[(c[O>>2]|0)+28>>2]&127](f,U)|0;if((c[q>>2]|0)>0){U=0;do{Z=c[k>>2]|0;_=ag(c[p>>2]|0,U)|0;g[Y+(U<<4)>>2]=+g[Z+_>>2];g[Y+(U<<4)+4>>2]=+g[Z+(_+4)>>2];g[Y+(U<<4)+8>>2]=+g[Z+(_+8)>>2];U=U+1|0;}while((U|0)<(c[q>>2]|0))}g7[c[(c[Q>>2]|0)+20>>2]&127](f,N,19344,1497453121,c[X>>2]|0)}else if((T|0)==1){U=c[q>>2]|0;if((U|0)==0){break}Y=hd[c[(c[L>>2]|0)+16>>2]&127](f,32,U)|0;U=Y+8|0;ab=c[U>>2]|0;aa=ab;c[W>>2]=hx[c[(c[O>>2]|0)+28>>2]&127](f,ab)|0;ab=c[q>>2]|0;if((ab|0)>0){_=c[k>>2]|0;Z=c[p>>2]|0;$=0;do{ac=ag(Z,$)|0;h[aa+($<<5)>>3]=+h[_+ac>>3];h[aa+($<<5)+8>>3]=+h[_+(ac+8)>>3];h[aa+($<<5)+16>>3]=+h[_+(ac+16)>>3];$=$+1|0;}while(($|0)<(ab|0))}g7[c[(c[Q>>2]|0)+20>>2]&127](f,Y,17832,1497453121,c[U>>2]|0)}}while(0);g0[c[(c[P>>2]|0)+24>>2]&511](d,R);W=R+1|0;if((W|0)<(u|0)){R=W;S=S+32|0}else{af=Q;break}}}else{af=f}g7[c[(c[af>>2]|0)+20>>2]&127](f,M,16368,1497453121,c[t>>2]|0);v=e+4|0;w=d+4|0;x=+g[w>>2];y=v;g[y>>2]=x;z=d+8|0;A=+g[z>>2];B=e+8|0;C=B;g[C>>2]=A;D=d+12|0;E=+g[D>>2];F=e+12|0;G=F;g[G>>2]=E;H=d+16|0;I=+g[H>>2];J=e+16|0;K=J;g[K>>2]=I;i=j;return 15280}function ou(a){a=a|0;return 28}function ov(a){a=a|0;return}function ow(a){a=a|0;return}function ox(b,d,e,f,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;j=j|0;k=k|0;var l=0,m=0;l=i;i=i+32|0;m=l|0;g[b+4>>2]=1.0;g[b+8>>2]=1.0;g[b+12>>2]=1.0;g[b+16>>2]=0.0;c[b>>2]=31528;a[b+36|0]=1;c[b+32>>2]=0;c[b+24>>2]=0;c[b+28>>2]=0;c[b+48>>2]=0;c[m+24>>2]=2;c[m+28>>2]=0;c[m>>2]=d;c[m+4>>2]=e;c[m+8>>2]=f;c[m+12>>2]=h;c[m+16>>2]=j;c[m+20>>2]=k;oy(b,m,2);i=l;return}function oy(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;f=b+24|0;g=c[f>>2]|0;h=b+28|0;do{if((g|0)==(c[h>>2]|0)){i=(g|0)==0?1:g<<1;if((g|0)>=(i|0)){j=g;break}if((i|0)==0){k=0;l=g}else{m=zv(i<<5,16)|0;k=m;l=c[f>>2]|0}m=b+32|0;if((l|0)>0){n=0;do{K2(k+(n<<5)|0,(c[m>>2]|0)+(n<<5)|0,32)|0;n=n+1|0;}while((n|0)<(l|0))}n=c[m>>2]|0;o=b+36|0;if((n|0)!=0){if((a[o]&1)!=0){zw(n)}c[m>>2]=0}a[o]=1;c[m>>2]=k;c[h>>2]=i;j=c[f>>2]|0}else{j=g}}while(0);g=b+32|0;K2((c[g>>2]|0)+(j<<5)|0,d|0,32)|0;d=c[f>>2]|0;c[f>>2]=d+1;c[(c[g>>2]|0)+(d<<5)+24>>2]=e;return}function oz(b){b=b|0;var d=0,e=0,f=0,g=0;c[b>>2]=31528;d=b+24|0;e=b+32|0;f=c[e>>2]|0;g=b+36|0;if((f|0)!=0){if((a[g]&1)!=0){zw(f)}c[e>>2]=0}a[g]=1;c[e>>2]=0;c[d>>2]=0;c[b+28>>2]=0;or(b|0);zw(b);return}function oA(b){b=b|0;var d=0,e=0,f=0,g=0;c[b>>2]=31528;d=b+24|0;e=b+32|0;f=c[e>>2]|0;g=b+36|0;if((f|0)!=0){if((a[g]&1)!=0){zw(f)}c[e>>2]=0}a[g]=1;c[e>>2]=0;c[d>>2]=0;c[b+28>>2]=0;or(b|0);return}function oB(a,b,d,e,f,g,h,i,j,k){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;var l=0;l=c[a+32>>2]|0;c[d>>2]=c[l+(k<<5)+12>>2];c[b>>2]=c[l+(k<<5)+16>>2];c[e>>2]=c[l+(k<<5)+28>>2];c[f>>2]=c[l+(k<<5)+20>>2];c[i>>2]=c[l+(k<<5)>>2];c[g>>2]=c[l+(k<<5)+4>>2];c[h>>2]=c[l+(k<<5)+8>>2];c[j>>2]=c[l+(k<<5)+24>>2];return}function oC(a,b,d,e,f,g,h,i,j,k){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;var l=0;l=c[a+32>>2]|0;c[d>>2]=c[l+(k<<5)+12>>2];c[b>>2]=c[l+(k<<5)+16>>2];c[e>>2]=c[l+(k<<5)+28>>2];c[f>>2]=c[l+(k<<5)+20>>2];c[i>>2]=c[l+(k<<5)>>2];c[g>>2]=c[l+(k<<5)+4>>2];c[h>>2]=c[l+(k<<5)+8>>2];c[j>>2]=c[l+(k<<5)+24>>2];return}function oD(a){a=a|0;return(c[a+48>>2]|0)==1|0}function oE(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=a+52|0;f=b;c[e>>2]=c[f>>2];c[e+4>>2]=c[f+4>>2];c[e+8>>2]=c[f+8>>2];c[e+12>>2]=c[f+12>>2];f=a+68|0;e=d;c[f>>2]=c[e>>2];c[f+4>>2]=c[e+4>>2];c[f+8>>2]=c[e+8>>2];c[f+12>>2]=c[e+12>>2];c[a+48>>2]=1;return}function oF(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;e=b;b=a+52|0;c[e>>2]=c[b>>2];c[e+4>>2]=c[b+4>>2];c[e+8>>2]=c[b+8>>2];c[e+12>>2]=c[b+12>>2];b=d;d=a+68|0;c[b>>2]=c[d>>2];c[b+4>>2]=c[d+4>>2];c[b+8>>2]=c[d+8>>2];c[b+12>>2]=c[d+12>>2];return}function oG(a,b){a=a|0;b=b|0;return}function oH(a,b){a=a|0;b=b|0;return}function oI(a){a=a|0;return c[a+24>>2]|0}function oJ(a,b){a=a|0;b=b|0;return}function oK(a,b){a=a|0;b=b|0;return}function oL(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;d=i;i=i+48|0;e=d|0;f=d+16|0;h=d+32|0;na(a|0);c[a>>2]=33192;c[a+48>>2]=b;c[a+4>>2]=21;if(g3[c[(c[b>>2]|0)+40>>2]&511](b)|0){hF[c[(c[b>>2]|0)+48>>2]&255](b,a+16|0,a+32|0);i=d;return}b=e;j=f;k=h;l=e|0;m=e+4|0;n=e+8|0;o=a;p=a+12|0;K1(b|0,0,16)|0;g[l>>2]=1.0;hF[c[(c[o>>2]|0)+68>>2]&255](f,a,e);q=f|0;g[a+32>>2]=+g[q>>2]+ +g[p>>2];g[l>>2]=-1.0;hF[c[(c[o>>2]|0)+68>>2]&255](h,a,e);c[j>>2]=c[k>>2];c[j+4>>2]=c[k+4>>2];c[j+8>>2]=c[k+8>>2];c[j+12>>2]=c[k+12>>2];g[a+16>>2]=+g[q>>2]- +g[p>>2];K1(b|0,0,16)|0;g[m>>2]=1.0;hF[c[(c[o>>2]|0)+68>>2]&255](f,a,e);q=f+4|0;g[a+36>>2]=+g[q>>2]+ +g[p>>2];g[m>>2]=-1.0;hF[c[(c[o>>2]|0)+68>>2]&255](h,a,e);c[j>>2]=c[k>>2];c[j+4>>2]=c[k+4>>2];c[j+8>>2]=c[k+8>>2];c[j+12>>2]=c[k+12>>2];g[a+20>>2]=+g[q>>2]- +g[p>>2];K1(b|0,0,16)|0;g[n>>2]=1.0;hF[c[(c[o>>2]|0)+68>>2]&255](f,a,e);b=f+8|0;g[a+40>>2]=+g[b>>2]+ +g[p>>2];g[n>>2]=-1.0;hF[c[(c[o>>2]|0)+68>>2]&255](h,a,e);c[j>>2]=c[k>>2];c[j+4>>2]=c[k+4>>2];c[j+8>>2]=c[k+8>>2];c[j+12>>2]=c[k+12>>2];g[a+24>>2]=+g[b>>2]- +g[p>>2];i=d;return}function oM(a){a=a|0;nc(a|0);zw(a);return}function oN(a){a=a|0;nc(a|0);return}function oO(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,h=0,i=0,j=0,k=0,l=0,m=0.0,n=0.0,o=0.0,p=0,q=0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0,I=0.0,J=0.0,K=0.0,L=0.0,M=0.0;f=a+32|0;h=a+16|0;i=a+36|0;j=a+20|0;k=a+40|0;l=a+24|0;m=(+g[f>>2]- +g[h>>2])*.5;n=(+g[i>>2]- +g[j>>2])*.5;o=(+g[k>>2]- +g[l>>2])*.5;p=a|0;q=a;r=+g6[c[(c[q>>2]|0)+48>>2]&15](p);s=+g6[c[(c[q>>2]|0)+48>>2]&15](p);t=m+r;r=n+s;s=o+ +g6[c[(c[q>>2]|0)+48>>2]&15](p);o=(+g[f>>2]+ +g[h>>2])*.5;n=(+g[i>>2]+ +g[j>>2])*.5;m=(+g[k>>2]+ +g[l>>2])*.5;u=+g[b>>2];v=+V(+u);w=+g[b+4>>2];x=+V(+w);y=+g[b+8>>2];z=+V(+y);A=+g[b+16>>2];B=+V(+A);C=+g[b+20>>2];D=+V(+C);E=+g[b+24>>2];F=+V(+E);G=+g[b+32>>2];H=+V(+G);I=+g[b+36>>2];J=+V(+I);K=+g[b+40>>2];L=+V(+K);M=o*u+n*w+m*y+ +g[b+48>>2];y=o*A+n*C+m*E+ +g[b+52>>2];E=o*G+n*I+m*K+ +g[b+56>>2];K=t*v+r*x+s*z;z=t*B+r*D+s*F;F=t*H+r*J+s*L;g[d>>2]=M-K;g[d+4>>2]=y-z;g[d+8>>2]=E-F;g[d+12>>2]=0.0;g[e>>2]=K+M;g[e+4>>2]=z+y;g[e+8>>2]=F+E;g[e+12>>2]=0.0;return}function oP(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;d=i;i=i+48|0;e=d|0;f=d+16|0;h=d+32|0;j=(c[a+48>>2]|0)+4|0;k=b;c[j>>2]=c[k>>2];c[j+4>>2]=c[k+4>>2];c[j+8>>2]=c[k+8>>2];c[j+12>>2]=c[k+12>>2];k=e;j=f;b=h;l=e|0;m=e+4|0;n=e+8|0;o=a;p=a+12|0;K1(k|0,0,16)|0;g[l>>2]=1.0;hF[c[(c[o>>2]|0)+68>>2]&255](f,a,e);q=f|0;g[a+32>>2]=+g[q>>2]+ +g[p>>2];g[l>>2]=-1.0;hF[c[(c[o>>2]|0)+68>>2]&255](h,a,e);c[j>>2]=c[b>>2];c[j+4>>2]=c[b+4>>2];c[j+8>>2]=c[b+8>>2];c[j+12>>2]=c[b+12>>2];g[a+16>>2]=+g[q>>2]- +g[p>>2];K1(k|0,0,16)|0;g[m>>2]=1.0;hF[c[(c[o>>2]|0)+68>>2]&255](f,a,e);q=f+4|0;g[a+36>>2]=+g[q>>2]+ +g[p>>2];g[m>>2]=-1.0;hF[c[(c[o>>2]|0)+68>>2]&255](h,a,e);c[j>>2]=c[b>>2];c[j+4>>2]=c[b+4>>2];c[j+8>>2]=c[b+8>>2];c[j+12>>2]=c[b+12>>2];g[a+20>>2]=+g[q>>2]- +g[p>>2];K1(k|0,0,16)|0;g[n>>2]=1.0;hF[c[(c[o>>2]|0)+68>>2]&255](f,a,e);k=f+8|0;g[a+40>>2]=+g[k>>2]+ +g[p>>2];g[n>>2]=-1.0;hF[c[(c[o>>2]|0)+68>>2]&255](h,a,e);c[j>>2]=c[b>>2];c[j+4>>2]=c[b+4>>2];c[j+8>>2]=c[b+8>>2];c[j+12>>2]=c[b+12>>2];g[a+24>>2]=+g[k>>2]- +g[p>>2];i=d;return}function oQ(a){a=a|0;return(c[a+48>>2]|0)+4|0}function oR(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=i;i=i+40|0;g=f|0;c[g>>2]=26816;c[g+4>>2]=b;b=g+8|0;h=d;c[b>>2]=c[h>>2];c[b+4>>2]=c[h+4>>2];c[b+8>>2]=c[h+8>>2];c[b+12>>2]=c[h+12>>2];h=g+24|0;b=e;c[h>>2]=c[b>>2];c[h+4>>2]=c[b+4>>2];c[h+8>>2]=c[b+8>>2];c[h+12>>2]=c[b+12>>2];b=c[a+48>>2]|0;a=g|0;hM[c[(c[b>>2]|0)+8>>2]&255](b,a,d,e);ow(a);i=f;return}function oS(a,b,c){a=a|0;b=+b;c=c|0;K1(c|0,0,16)|0;return}function oT(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0;e=i;i=i+176|0;f=e+16|0;h=e+40|0;j=e+144|0;k=e+160|0;l=e|0;K1(l|0,0,16)|0;K1(f|0,0,20)|0;c[h>>2]=32968;K1(h+4|0,0,16)|0;g[h+20>>2]=1.0;m=h+24|0;n=m;c[n>>2]=c[l>>2];c[n+4>>2]=c[l+4>>2];c[n+8>>2]=c[l+8>>2];c[h+36>>2]=0;g[h+40>>2]=1.0;K1(h+44|0,0,16)|0;g[h+60>>2]=1.0;g[h+64>>2]=0.0;l=h+68|0;n=f+4|0;c[l>>2]=c[n>>2];c[l+4>>2]=c[n+4>>2];c[l+8>>2]=c[n+8>>2];c[l+12>>2]=c[n+12>>2];g[h+84>>2]=-999999984306749400.0;o=+g[d>>2];p=+g[d+4>>2];q=p*0.0;r=+g[d+8>>2];s=r*0.0;t=o*+g[m>>2]+p+s;p=o*+g[h+28>>2]+q+r;g[h+88>>2]=o+q+s;g[h+92>>2]=t;g[h+96>>2]=p;g[h+100>>2]=0.0;g[j>>2]=999999984306749400.0;g[j+4>>2]=999999984306749400.0;g[j+8>>2]=999999984306749400.0;g[j+12>>2]=0.0;m=c[(c[b>>2]|0)+64>>2]|0;g[k>>2]=-999999984306749400.0;g[k+4>>2]=-999999984306749400.0;g[k+8>>2]=-999999984306749400.0;g[k+12>>2]=0.0;d=h|0;hM[m&255](b,d,k,j);j=h+4|0;h=a;c[h>>2]=c[j>>2];c[h+4>>2]=c[j+4>>2];c[h+8>>2]=c[j+8>>2];c[h+12>>2]=c[j+12>>2];ov(d);i=e;return}function oU(a){a=a|0;ov(a|0);return}function oV(a){a=a|0;return 15056}function oW(a){a=a|0;ov(a|0);KU(a);return}function oX(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0.0,h=0.0,i=0.0,j=0.0,k=0.0,l=0.0,m=0,n=0.0;e=a+84|0;d=a+4|0;f=+g[a+88>>2];h=+g[a+92>>2];i=+g[a+96>>2];j=f*+g[b>>2]+h*+g[b+4>>2]+i*+g[b+8>>2];k=+g[e>>2];if(j>k){g[e>>2]=j;a=b;c[d>>2]=c[a>>2];c[d+4>>2]=c[a+4>>2];c[d+8>>2]=c[a+8>>2];c[d+12>>2]=c[a+12>>2];l=j}else{l=k}a=b+16|0;k=f*+g[a>>2]+h*+g[b+20>>2]+i*+g[b+24>>2];if(k>l){g[e>>2]=k;m=a;c[d>>2]=c[m>>2];c[d+4>>2]=c[m+4>>2];c[d+8>>2]=c[m+8>>2];c[d+12>>2]=c[m+12>>2];n=k}else{n=l}m=b+32|0;l=f*+g[m>>2]+h*+g[b+36>>2]+i*+g[b+40>>2];if(l<=n){return}g[e>>2]=l;e=m;c[d>>2]=c[e>>2];c[d+4>>2]=c[e+4>>2];c[d+8>>2]=c[e+8>>2];c[d+12>>2]=c[e+12>>2];return}function oY(a){a=a|0;ow(a|0);return}function oZ(a){a=a|0;ow(a|0);KU(a);return}function o_(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,h=0,i=0.0,j=0.0,k=0,l=0.0,m=0.0,n=0;f=b|0;h=b+16|0;i=+g[f>>2];j=+g[h>>2];k=b+32|0;l=i<j?i:j;m=+g[k>>2];if((l<m?l:m)>+g[a+24>>2]){return}n=i>j?f:h;if(+g[(+g[n>>2]>m?n:k)>>2]<+g[a+8>>2]){return}k=b+8|0;n=b+24|0;m=+g[k>>2];j=+g[n>>2];h=b+40|0;i=m<j?m:j;l=+g[h>>2];if((i<l?i:l)>+g[a+32>>2]){return}f=m>j?k:n;if(+g[(+g[f>>2]>l?f:h)>>2]<+g[a+16>>2]){return}h=b+4|0;f=b+20|0;l=+g[h>>2];j=+g[f>>2];n=b+36|0;m=l<j?l:j;i=+g[n>>2];if((m<i?m:i)>+g[a+28>>2]){return}k=l>j?h:f;if(+g[(+g[k>>2]>i?k:n)>>2]<+g[a+12>>2]){return}n=c[a+4>>2]|0;hM[c[(c[n>>2]|0)+8>>2]&255](n,b,d,e);return}function o$(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;o0(a|0,b,d,-2,-1,e,f,g);c[a>>2]=35288;return}function o0(d,f,h,i,j,k,l,m){d=d|0;f=f|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0.0,w=0.0,x=0.0,y=0,z=0,A=0,B=0;c[d>>2]=33072;b[d+4>>1]=i;i=d+6|0;b[i>>1]=j;j=d+8|0;n=d+24|0;o=d+92|0;c[o>>2]=l;c[d+96>>2]=0;p=d+100|0;a[p]=0;c[d+104>>2]=0;q=d+108|0;c[q>>2]=0;r=k+1&65535;if((l|0)==0){l=zv(76,16)|0;if((l|0)==0){s=0}else{k=l;qu(k);s=k}c[o>>2]=s;a[p]=1}if(!m){m=zv(24,16)|0;if((m|0)==0){t=0}else{K1(m|0,0,24)|0;c[m>>2]=34280;a[m+20|0]=1;c[m+16>>2]=0;c[m+8>>2]=0;c[m+12>>2]=0;t=m}m=d+112|0;c[m>>2]=t;t=zv(196,16)|0;if((t|0)==0){u=0}else{p=t;p$(p,c[m>>2]|0);u=p}c[q>>2]=u;a[u+193|0]=1}u=j;q=f;c[u>>2]=c[q>>2];c[u+4>>2]=c[q+4>>2];c[u+8>>2]=c[q+8>>2];c[u+12>>2]=c[q+12>>2];q=n;u=h;c[q>>2]=c[u>>2];c[q+4>>2]=c[u+4>>2];c[q+8>>2]=c[u+8>>2];c[q+12>>2]=c[u+12>>2];v=+((e[i>>1]|0)>>>0);w=v/(+g[d+28>>2]- +g[d+12>>2]);x=v/(+g[d+32>>2]- +g[d+16>>2]);g[d+40>>2]=v/(+g[n>>2]- +g[j>>2]);g[d+44>>2]=w;g[d+48>>2]=x;g[d+52>>2]=0.0;j=r&65535;n=zv(j<<6,16)|0;if(r<<16>>16!=0){u=n+(j<<6)|0;q=n;do{c[q>>2]=0;c[q+8>>2]=0;q=q+64|0;}while((q|0)!=(u|0))}u=d+60|0;c[u>>2]=n;b[d+58>>1]=r;b[d+56>>1]=0;b[d+64>>1]=1;if((r&65535)>>>0>1>>>0){q=1;h=n;while(1){f=q+1&65535;b[h+((q&65535)<<6)+48>>1]=f;p=c[u>>2]|0;if((f&65535)>>>0<(r&65535)>>>0){q=f;h=p}else{y=p;break}}}else{y=n}b[y+(j-1<<6)+48>>1]=0;y=j<<3;j=zv(y,16)|0;c[d+80>>2]=j;if((j|0)==0){z=0}else{z=j}j=d+68|0;c[j>>2]=z;z=zv(y,16)|0;c[d+84>>2]=z;if((z|0)==0){A=0}else{A=z}z=d+72|0;c[z>>2]=A;A=zv(y,16)|0;c[d+88>>2]=A;if((A|0)==0){B=0}else{B=A}A=d+76|0;c[A>>2]=B;c[c[u>>2]>>2]=0;b[(c[u>>2]|0)+48>>1]=0;b[(c[u>>2]|0)+54>>1]=1;b[c[j>>2]>>1]=0;b[(c[j>>2]|0)+2>>1]=0;b[(c[j>>2]|0)+4>>1]=b[i>>1]|0;b[(c[j>>2]|0)+6>>1]=0;b[(c[u>>2]|0)+50>>1]=0;b[(c[u>>2]|0)+56>>1]=1;b[c[z>>2]>>1]=0;b[(c[z>>2]|0)+2>>1]=0;b[(c[z>>2]|0)+4>>1]=b[i>>1]|0;b[(c[z>>2]|0)+6>>1]=0;b[(c[u>>2]|0)+52>>1]=0;b[(c[u>>2]|0)+58>>1]=1;b[c[A>>2]>>1]=0;b[(c[A>>2]|0)+2>>1]=0;b[(c[A>>2]|0)+4>>1]=b[i>>1]|0;b[(c[A>>2]|0)+6>>1]=0;return}function o1(a){a=a|0;pp(a|0);return}function o2(a){a=a|0;pp(a|0);zw(a);return}function o3(a,b,d,e,f,g,h,i,j){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;var k=0,l=0,m=0;k=po(a,b,d,f,g,h,i,j)|0;j=c[a+60>>2]|0;l=k&65535;k=c[a+108>>2]|0;if((k|0)==0){m=j+(l<<6)|0;return m|0}c[j+(l<<6)+60>>2]=hl[c[(c[k>>2]|0)+8>>2]&7](k,b,d,e,f,g,h,i,0)|0;m=j+(l<<6)|0;return m|0}function o4(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;e=c[a+108>>2]|0;if((e|0)!=0){hF[c[(c[e>>2]|0)+12>>2]&255](e,c[b+60>>2]|0,d)}pn(a,c[b+12>>2]&65535,d);return}function o5(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0;g=b+16|0;h=d;c[g>>2]=c[h>>2];c[g+4>>2]=c[h+4>>2];c[g+8>>2]=c[h+8>>2];c[g+12>>2]=c[h+12>>2];h=b+32|0;g=e;c[h>>2]=c[g>>2];c[h+4>>2]=c[g+4>>2];c[h+8>>2]=c[g+8>>2];c[h+12>>2]=c[g+12>>2];ph(a,c[b+12>>2]&65535,d,e,f);g=c[a+108>>2]|0;if((g|0)==0){return}g7[c[(c[g>>2]|0)+16>>2]&127](g,c[b+60>>2]|0,d,e,f);return}function o6(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;a=d;d=b+16|0;c[a>>2]=c[d>>2];c[a+4>>2]=c[d+4>>2];c[a+8>>2]=c[d+8>>2];c[a+12>>2]=c[d+12>>2];d=e;e=b+32|0;c[d>>2]=c[e>>2];c[d+4>>2]=c[e+4>>2];c[d+8>>2]=c[e+8>>2];c[d+12>>2]=c[e+12>>2];return}function o7(a,d,f,g,h,i){a=a|0;d=d|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,l=0,m=0;j=c[a+108>>2]|0;if((j|0)!=0){hk[c[(c[j>>2]|0)+24>>2]&63](j,d,f,g,h,i);return}i=a+56|0;h=b[i>>1]|0;if((h&65535)<<1>>>0<=1>>>0){return}f=a+68|0;d=g|0;j=g;g=a+60|0;a=2;k=1;l=h;while(1){h=c[f>>2]|0;if((b[h+(k<<2)>>1]&1)==0){m=l}else{hx[c[(c[j>>2]|0)+8>>2]&127](d,(c[g>>2]|0)+((e[h+(k<<2)+2>>1]|0)<<6)|0)|0;m=b[i>>1]|0}h=a&65535;if(h>>>0>=((m&65535)<<1|1)>>>0){break}a=a+1&65535;k=h;l=m}return}function o8(a,d,f,h){a=a|0;d=d|0;f=f|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;i=c[a+108>>2]|0;if((i|0)!=0){hM[c[(c[i>>2]|0)+28>>2]&255](i,d,f,h);return}i=a+56|0;j=b[i>>1]|0;if((j&65535)<<1>>>0<=1>>>0){return}k=a+68|0;l=a+60|0;a=d|0;m=d+8|0;n=d+4|0;d=f+4|0;o=h;p=f+8|0;q=f|0;f=2;r=1;s=j;while(1){j=c[k>>2]|0;do{if((b[j+(r<<2)>>1]&1)==0){t=s}else{u=c[l>>2]|0;v=e[j+(r<<2)+2>>1]|0;do{if(+g[a>>2]>+g[u+(v<<6)+32>>2]){w=0}else{if(+g[q>>2]<+g[u+(v<<6)+16>>2]){w=0;break}w=1}}while(0);do{if(+g[m>>2]>+g[u+(v<<6)+40>>2]){x=0}else{if(+g[p>>2]<+g[u+(v<<6)+24>>2]){x=0;break}x=w}}while(0);if(+g[n>>2]>+g[u+(v<<6)+36>>2]){t=s;break}if(+g[d>>2]<+g[u+(v<<6)+20>>2]|x^1){t=s;break}hx[c[(c[o>>2]|0)+8>>2]&127](h,u+(v<<6)|0)|0;t=b[i>>1]|0}}while(0);j=f&65535;if(j>>>0>=((t&65535)<<1|1)>>>0){break}f=f+1&65535;r=j;s=t}return}function o9(a,b){a=a|0;b=b|0;var d=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0;d=i;i=i+48|0;f=d+8|0;g=d+24|0;h=d+32|0;j=a+92|0;k=c[j>>2]|0;if(!(g3[c[(c[k>>2]|0)+56>>2]&511](k)|0)){i=d;return}k=c[j>>2]|0;l=g3[c[(c[k>>2]|0)+28>>2]&511](k)|0;k=l+4|0;m=c[k>>2]|0;if((m|0)>1){pg(l,d|0,0,m-1|0);n=c[k>>2]|0}else{n=m}m=a+104|0;a=n-(c[m>>2]|0)|0;K1(f|0,0,16)|0;pf(l,a,f);c[m>>2]=0;f=c[k>>2]|0;do{if((f|0)>0){a=l+12|0;n=0;o=0;p=0;q=f;while(1){r=c[a>>2]|0;s=r+(p<<4)|0;t=s|0;u=c[t>>2]|0;v=r+(p<<4)+4|0;r=c[v>>2]|0;if((u|0)==(o|0)){if((r|0)==(n|0)){w=o;x=n;y=12}else{z=o;y=8}}else{z=u;y=8}L13:do{if((y|0)==8){y=0;u=z+54|0;A=r+54|0;B=r+48|0;C=z+48|0;D=0;while(1){if((D|0)>=3){E=z;F=r;G=q;break L13}if((e[u+(D<<1)>>1]|0)>>>0<(e[B+(D<<1)>>1]|0)>>>0){w=z;x=r;y=12;break L13}if((e[A+(D<<1)>>1]|0)>>>0<(e[C+(D<<1)>>1]|0)>>>0){w=z;x=r;y=12;break}else{D=D+1|0}}}}while(0);if((y|0)==12){y=0;r=c[j>>2]|0;hF[c[(c[r>>2]|0)+32>>2]&255](r,s,b);c[t>>2]=0;c[v>>2]=0;c[m>>2]=(c[m>>2]|0)+1;c[12458]=(c[12458]|0)-1;E=w;F=x;G=c[k>>2]|0}r=p+1|0;if((r|0)<(G|0)){n=F;o=E;p=r;q=G}else{break}}if((G|0)<=1){H=G;break}pg(l,g,0,G-1|0);H=c[k>>2]|0}else{H=f}}while(0);f=H-(c[m>>2]|0)|0;K1(h|0,0,16)|0;pf(l,f,h);c[m>>2]=0;i=d;return}function pa(a){a=a|0;return c[a+92>>2]|0}function pb(a){a=a|0;return c[a+92>>2]|0}function pc(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;e=b;b=a+8|0;c[e>>2]=c[b>>2];c[e+4>>2]=c[b+4>>2];c[e+8>>2]=c[b+8>>2];c[e+12>>2]=c[b+12>>2];b=d;d=a+24|0;c[b>>2]=c[d>>2];c[b+4>>2]=c[d+4>>2];c[b+8>>2]=c[d+8>>2];c[b+12>>2]=c[d+12>>2];return}function pd(a,d){a=a|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;if((b[a+56>>1]|0)!=0){return}b[a+64>>1]=1;d=a+58|0;e=b[d>>1]|0;f=a+60|0;if((e&65535)>>>0>1>>>0){a=1;while(1){g=a+1&65535;b[(c[f>>2]|0)+((a&65535)<<6)+48>>1]=g;h=b[d>>1]|0;if((g&65535)>>>0<(h&65535)>>>0){a=g}else{i=h;break}}}else{i=e}b[(c[f>>2]|0)+((i&65535)-1<<6)+48>>1]=0;return}function pe(a){a=a|0;return}function pf(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;f=b+4|0;g=c[f>>2]|0;if((g|0)>(d|0)){c[f>>2]=d;return}h=(g|0)<(d|0);if(!h){c[f>>2]=d;return}i=b+8|0;do{if((c[i>>2]|0)<(d|0)){if((d|0)==0){j=0;k=g}else{l=zv(d<<4,16)|0;j=l;k=c[f>>2]|0}l=b+12|0;if((k|0)>0){m=0;do{n=c[l>>2]|0;c[j+(m<<4)>>2]=c[n+(m<<4)>>2];c[j+(m<<4)+4>>2]=c[n+(m<<4)+4>>2];c[j+(m<<4)+8>>2]=c[n+(m<<4)+8>>2];c[j+(m<<4)+12>>2]=c[n+(m<<4)+12>>2];m=m+1|0;}while((m|0)<(k|0))}m=c[l>>2]|0;n=b+16|0;if((m|0)!=0){if((a[n]&1)!=0){zw(m)}c[l>>2]=0}a[n]=1;c[l>>2]=j;c[i>>2]=d;if(h){break}c[f>>2]=d;return}}while(0);h=b+12|0;b=e|0;i=e+4|0;j=e+8|0;k=e+12|0;e=g;do{g=c[h>>2]|0;c[g+(e<<4)>>2]=c[b>>2];c[g+(e<<4)+4>>2]=c[i>>2];c[g+(e<<4)+8>>2]=c[j>>2];c[g+(e<<4)+12>>2]=c[k>>2];e=e+1|0;}while((e|0)<(d|0));c[f>>2]=d;return}function pg(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0;f=a+12|0;g=d;while(1){d=(g+e|0)/2|0;h=c[f>>2]|0;i=c[h+(d<<4)>>2]|0;j=c[h+(d<<4)+4>>2]|0;k=c[h+(d<<4)+8>>2]|0;d=(i|0)==0;l=(j|0)==0;m=j+12|0;n=i+12|0;o=e;p=g;q=h;while(1){h=p;L5:while(1){r=c[q+(h<<4)>>2]|0;if((r|0)==0){s=-1}else{s=c[r+12>>2]|0}if(d){t=-1}else{t=c[n>>2]|0}u=c[q+(h<<4)+4>>2]|0;if((u|0)==0){v=-1}else{v=c[u+12>>2]|0}if(l){w=-1}else{w=c[m>>2]|0}do{if((s|0)<=(t|0)){x=(r|0)==(i|0);y=x&(v|0)>(w|0);if(y|x^1){if(y){break}else{break L5}}if((u|0)!=(j|0)){break L5}if((c[q+(h<<4)+8>>2]|0)>>>0<=k>>>0){break L5}}}while(0);h=h+1|0}L27:do{if(d){y=o;while(1){x=c[q+(y<<4)>>2]|0;z=(x|0)==0;if(z){A=-1}else{A=c[x+12>>2]|0}if(l){B=-1}else{B=c[m>>2]|0}x=c[q+(y<<4)+4>>2]|0;if((x|0)==0){C=-1}else{C=c[x+12>>2]|0}do{if((A|0)>=-1){D=z&(B|0)>(C|0);if(D|z^1){if(D){break}else{E=y;break L27}}if((j|0)!=(x|0)){E=y;break L27}if(k>>>0<=(c[q+(y<<4)+8>>2]|0)>>>0){E=y;break L27}}}while(0);y=y-1|0}}else{y=o;while(1){x=c[q+(y<<4)>>2]|0;if((x|0)==0){F=-1}else{F=c[x+12>>2]|0}if(l){G=-1}else{G=c[m>>2]|0}z=c[q+(y<<4)+4>>2]|0;if((z|0)==0){H=-1}else{H=c[z+12>>2]|0}do{if((c[n>>2]|0)<=(F|0)){D=(i|0)==(x|0);I=D&(G|0)>(H|0);if(I|D^1){if(I){break}else{E=y;break L27}}if((j|0)!=(z|0)){E=y;break L27}if(k>>>0<=(c[q+(y<<4)+8>>2]|0)>>>0){E=y;break L27}}}while(0);y=y-1|0}}}while(0);if((h|0)>(E|0)){J=E;K=h}else{y=c[q+(h<<4)+8>>2]|0;z=c[q+(h<<4)+12>>2]|0;x=q+(h<<4)|0;I=q+(E<<4)|0;c[x>>2]=c[I>>2];c[x+4>>2]=c[I+4>>2];c[x+8>>2]=c[I+8>>2];c[x+12>>2]=c[I+12>>2];I=c[f>>2]|0;c[I+(E<<4)>>2]=r;c[I+(E<<4)+4>>2]=u;c[I+(E<<4)+8>>2]=y;c[I+(E<<4)+12>>2]=z;J=E-1|0;K=h+1|0}if((K|0)>(J|0)){break}o=J;p=K;q=c[f>>2]|0}if((J|0)>(g|0)){pg(a,b,g,J)}if((K|0)<(e|0)){g=K}else{break}}return}function ph(a,d,f,g,h){a=a|0;d=d|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;j=i;i=i+16|0;k=j|0;l=j+8|0;m=c[a+60>>2]|0;n=d&65535;pi(a,k|0,f,0);pi(a,l|0,g,1);g=0;do{f=b[m+(n<<6)+48+(g<<1)>>1]|0;d=b[m+(n<<6)+54+(g<<1)>>1]|0;o=b[k+(g<<1)>>1]|0;p=a+68+(g<<2)|0;q=c[p>>2]|0;r=q+((f&65535)<<2)|0;s=(o&65535)-(e[r>>1]|0)|0;t=b[l+(g<<1)>>1]|0;u=d&65535;v=(t&65535)-(e[q+(u<<2)>>1]|0)|0;b[r>>1]=o;b[(c[p>>2]|0)+(u<<2)>>1]=t;if((s|0)<0){pj(a,g,f,0,1)}if((v|0)>0){pk(a,g,d,0,1)}if((s|0)>0){pl(a,g,f,h,1)}if((v|0)<0){pm(a,g,d,h,1)}g=g+1|0;}while((g|0)<3);i=j;return}function pi(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var f=0.0,h=0.0,i=0.0,j=0,k=0,l=0,m=0;f=(+g[d>>2]- +g[a+8>>2])*+g[a+40>>2];h=(+g[d+4>>2]- +g[a+12>>2])*+g[a+44>>2];i=(+g[d+8>>2]- +g[a+16>>2])*+g[a+48>>2];do{if(f>0.0){d=b[a+6>>1]|0;if(f<+(d&65535|0)){j=(b[a+4>>1]&~~f&65535|e)&65535;break}else{j=(b[a+4>>1]&d&65535|e)&65535;break}}else{j=e&65535}}while(0);b[c>>1]=j;do{if(h>0.0){j=b[a+6>>1]|0;if(h<+(j&65535|0)){k=(b[a+4>>1]&~~h&65535|e)&65535;break}else{k=(b[a+4>>1]&j&65535|e)&65535;break}}else{k=e&65535}}while(0);b[c+2>>1]=k;if(i<=0.0){l=e&65535;m=c+4|0;b[m>>1]=l;return}k=b[a+6>>1]|0;if(i<+(k&65535|0)){l=(b[a+4>>1]&~~i&65535|e)&65535;m=c+4|0;b[m>>1]=l;return}else{l=(b[a+4>>1]&k&65535|e)&65535;m=c+4|0;b[m>>1]=l;return}}function pj(a,d,f,g,h){a=a|0;d=d|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;g=c[a+68+(d<<2)>>2]|0;i=f&65535;f=g+(i<<2)|0;j=g+(i-1<<2)|0;k=a+60|0;l=c[k>>2]|0;m=e[g+(i<<2)+2>>1]|0;i=b[j>>1]|0;if((e[f>>1]|0)>>>0>=(i&65535)>>>0){return}g=l+(m<<6)+48+(d<<1)|0;n=1<<d&3;o=1<<n&3;p=l+(m<<6)+54+(n<<1)|0;q=l+(m<<6)+48+(n<<1)|0;r=l+(m<<6)+54+(o<<1)|0;s=l+(m<<6)+48+(o<<1)|0;t=a+92|0;u=l+(m<<6)|0;m=a+96|0;a=j;j=f;f=i;i=l;while(1){l=e[a+2>>1]|0;if((f&1)==0){v=i+(l<<6)+48+(d<<1)|0;b[v>>1]=(b[v>>1]|0)+1}else{do{if(h){if((e[p>>1]|0)>>>0<(e[i+(l<<6)+48+(n<<1)>>1]|0)>>>0){break}if((e[i+(l<<6)+54+(n<<1)>>1]|0)>>>0<(e[q>>1]|0)>>>0){break}if((e[r>>1]|0)>>>0<(e[i+(l<<6)+48+(o<<1)>>1]|0)>>>0){break}if((e[i+(l<<6)+54+(o<<1)>>1]|0)>>>0<(e[s>>1]|0)>>>0){break}v=c[t>>2]|0;w=i+(l<<6)|0;hd[c[(c[v>>2]|0)+8>>2]&127](v|0,u,w)|0;v=c[m>>2]|0;if((v|0)==0){break}hd[c[(c[v>>2]|0)+8>>2]&127](v,u,w)|0}}while(0);w=i+(l<<6)+54+(d<<1)|0;b[w>>1]=(b[w>>1]|0)+1}b[g>>1]=(b[g>>1]|0)-1;w=j;v=e[w>>1]|e[w+2>>1]<<16;x=a;C=e[x>>1]|e[x+2>>1]<<16;b[w>>1]=C;b[w+2>>1]=C>>16;C=v;b[x>>1]=C;b[x+2>>1]=C>>16;x=j-4|0;v=a-4|0;w=b[v>>1]|0;if((e[x>>1]|0)>>>0>=(w&65535)>>>0){break}a=v;j=x;f=w;i=c[k>>2]|0}return}function pk(a,d,f,g,h){a=a|0;d=d|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;g=c[a+68+(d<<2)>>2]|0;i=f&65535;f=i+1|0;j=a+60|0;k=c[j>>2]|0;l=e[g+(i<<2)+2>>1]|0;m=b[g+(f<<2)+2>>1]|0;if(m<<16>>16==0){return}n=1<<d&3;o=1<<n&3;p=k+(l<<6)+54+(n<<1)|0;q=k+(l<<6)+48+(n<<1)|0;r=k+(l<<6)+54+(o<<1)|0;s=k+(l<<6)+48+(o<<1)|0;t=a+92|0;u=a+96|0;a=k+(l<<6)+54+(d<<1)|0;l=g+(f<<2)|0;f=g+(i<<2)|0;i=m;while(1){m=b[l>>1]|0;if((e[f>>1]|0)>>>0<(m&65535)>>>0){v=18;break}g=c[j>>2]|0;k=i&65535;if((m&1)==0){do{if(h){if((e[p>>1]|0)>>>0<(e[g+(k<<6)+48+(n<<1)>>1]|0)>>>0){break}if((e[g+(k<<6)+54+(n<<1)>>1]|0)>>>0<(e[q>>1]|0)>>>0){break}if((e[r>>1]|0)>>>0<(e[g+(k<<6)+48+(o<<1)>>1]|0)>>>0){break}if((e[g+(k<<6)+54+(o<<1)>>1]|0)>>>0<(e[s>>1]|0)>>>0){break}m=c[t>>2]|0;w=g+((e[f+2>>1]|0)<<6)|0;x=g+(k<<6)|0;hd[c[(c[m>>2]|0)+8>>2]&127](m|0,w,x)|0;m=c[u>>2]|0;if((m|0)==0){break}hd[c[(c[m>>2]|0)+8>>2]&127](m,w,x)|0}}while(0);x=g+(k<<6)+48+(d<<1)|0;b[x>>1]=(b[x>>1]|0)-1}else{x=g+(k<<6)+54+(d<<1)|0;b[x>>1]=(b[x>>1]|0)-1}b[a>>1]=(b[a>>1]|0)+1;x=f;w=e[x>>1]|e[x+2>>1]<<16;m=l;C=e[m>>1]|e[m+2>>1]<<16;b[x>>1]=C;b[x+2>>1]=C>>16;C=w;b[m>>1]=C;b[m+2>>1]=C>>16;m=b[l+6>>1]|0;if(m<<16>>16==0){v=16;break}else{l=l+4|0;f=f+4|0;i=m}}if((v|0)==16){return}else if((v|0)==18){return}}function pl(a,d,f,g,h){a=a|0;d=d|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;i=c[a+68+(d<<2)>>2]|0;j=f&65535;f=j+1|0;k=a+60|0;l=b[i+(f<<2)+2>>1]|0;if(l<<16>>16==0){return}m=(c[k>>2]|0)+((e[i+(j<<2)+2>>1]|0)<<6)+48+(d<<1)|0;n=1<<d&3;o=1<<n&3;p=a+92|0;q=a+96|0;a=i+(f<<2)|0;f=i+(j<<2)|0;j=l;while(1){l=b[a>>1]|0;if((e[f>>1]|0)>>>0<(l&65535)>>>0){r=18;break}i=c[k>>2]|0;s=j&65535;if((l&1)==0){l=i+(s<<6)+48+(d<<1)|0;b[l>>1]=(b[l>>1]|0)-1}else{l=e[f+2>>1]|0;do{if(h){if((e[i+(l<<6)+54+(n<<1)>>1]|0)>>>0<(e[i+(s<<6)+48+(n<<1)>>1]|0)>>>0){break}if((e[i+(s<<6)+54+(n<<1)>>1]|0)>>>0<(e[i+(l<<6)+48+(n<<1)>>1]|0)>>>0){break}if((e[i+(l<<6)+54+(o<<1)>>1]|0)>>>0<(e[i+(s<<6)+48+(o<<1)>>1]|0)>>>0){break}if((e[i+(s<<6)+54+(o<<1)>>1]|0)>>>0<(e[i+(l<<6)+48+(o<<1)>>1]|0)>>>0){break}t=c[p>>2]|0;u=i+(l<<6)|0;v=i+(s<<6)|0;hD[c[(c[t>>2]|0)+12>>2]&63](t|0,u,v,g)|0;t=c[q>>2]|0;if((t|0)==0){break}hD[c[(c[t>>2]|0)+12>>2]&63](t,u,v,g)|0}}while(0);l=i+(s<<6)+54+(d<<1)|0;b[l>>1]=(b[l>>1]|0)-1}b[m>>1]=(b[m>>1]|0)+1;l=f;v=e[l>>1]|e[l+2>>1]<<16;u=a;C=e[u>>1]|e[u+2>>1]<<16;b[l>>1]=C;b[l+2>>1]=C>>16;C=v;b[u>>1]=C;b[u+2>>1]=C>>16;u=b[a+6>>1]|0;if(u<<16>>16==0){r=16;break}else{a=a+4|0;f=f+4|0;j=u}}if((r|0)==16){return}else if((r|0)==18){return}}function pm(a,d,f,g,h){a=a|0;d=d|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;i=c[a+68+(d<<2)>>2]|0;j=f&65535;f=i+(j<<2)|0;k=i+(j-1<<2)|0;l=a+60|0;m=b[k>>1]|0;if((e[f>>1]|0)>>>0>=(m&65535)>>>0){return}n=c[l>>2]|0;o=1<<d&3;p=1<<o&3;q=a+92|0;r=a+96|0;a=n+((e[i+(j<<2)+2>>1]|0)<<6)+54+(d<<1)|0;j=k;k=f;f=m;m=n;while(1){n=e[j+2>>1]|0;if((f&1)==0){i=e[k+2>>1]|0;do{if(h){if((e[m+(i<<6)+54+(o<<1)>>1]|0)>>>0<(e[m+(n<<6)+48+(o<<1)>>1]|0)>>>0){break}if((e[m+(n<<6)+54+(o<<1)>>1]|0)>>>0<(e[m+(i<<6)+48+(o<<1)>>1]|0)>>>0){break}if((e[m+(i<<6)+54+(p<<1)>>1]|0)>>>0<(e[m+(n<<6)+48+(p<<1)>>1]|0)>>>0){break}if((e[m+(n<<6)+54+(p<<1)>>1]|0)>>>0<(e[m+(i<<6)+48+(p<<1)>>1]|0)>>>0){break}s=c[q>>2]|0;t=m+(i<<6)|0;u=m+(n<<6)|0;hD[c[(c[s>>2]|0)+12>>2]&63](s|0,t,u,g)|0;s=c[r>>2]|0;if((s|0)==0){break}hD[c[(c[s>>2]|0)+12>>2]&63](s,t,u,g)|0}}while(0);i=m+(n<<6)+48+(d<<1)|0;b[i>>1]=(b[i>>1]|0)+1}else{i=m+(n<<6)+54+(d<<1)|0;b[i>>1]=(b[i>>1]|0)+1}b[a>>1]=(b[a>>1]|0)-1;i=k;u=e[i>>1]|e[i+2>>1]<<16;t=j;C=e[t>>1]|e[t+2>>1]<<16;b[i>>1]=C;b[i+2>>1]=C>>16;C=u;b[t>>1]=C;b[t+2>>1]=C>>16;t=k-4|0;u=j-4|0;i=b[u>>1]|0;if((e[t>>1]|0)>>>0>=(i&65535)>>>0){break}j=u;k=t;f=i;m=c[l>>2]|0}return}function pn(a,d,f){a=a|0;d=d|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;g=a+60|0;h=c[g>>2]|0;i=d&65535;j=a+92|0;k=c[j>>2]|0;if(!(g3[c[(c[k>>2]|0)+56>>2]&511](k)|0)){k=c[j>>2]|0;hF[c[(c[k>>2]|0)+16>>2]&255](k|0,h+(i<<6)|0,f)}f=a+56|0;k=e[f>>1]|0;j=(c[g>>2]|0)+54|0;b[j>>1]=(b[j>>1]|0)-2;j=(c[g>>2]|0)+56|0;b[j>>1]=(b[j>>1]|0)-2;j=(c[g>>2]|0)+58|0;b[j>>1]=(b[j>>1]|0)-2;j=a+6|0;l=(k<<1)-1|0;k=0;do{m=a+68+(k<<2)|0;n=c[m>>2]|0;o=e[h+(i<<6)+54+(k<<1)>>1]|0;b[n+(o<<2)>>1]=b[j>>1]|0;p=c[m>>2]|0;q=o+1|0;r=b[p+(q<<2)+2>>1]|0;L6:do{if(r<<16>>16!=0){s=(c[g>>2]|0)+((e[p+(o<<2)+2>>1]|0)<<6)+54+(k<<1)|0;t=p+(q<<2)|0;u=p+(o<<2)|0;v=r;while(1){w=b[t>>1]|0;if((e[u>>1]|0)>>>0<(w&65535)>>>0){break L6}x=c[g>>2]|0;y=v&65535;if((w&1)==0){w=x+(y<<6)+48+(k<<1)|0;b[w>>1]=(b[w>>1]|0)-1}else{w=x+(y<<6)+54+(k<<1)|0;b[w>>1]=(b[w>>1]|0)-1}b[s>>1]=(b[s>>1]|0)+1;w=u;y=e[w>>1]|e[w+2>>1]<<16;x=t;C=e[x>>1]|e[x+2>>1]<<16;b[w>>1]=C;b[w+2>>1]=C>>16;C=y;b[x>>1]=C;b[x+2>>1]=C>>16;x=b[t+6>>1]|0;if(x<<16>>16==0){break}else{t=t+4|0;u=u+4|0;v=x}}}}while(0);r=e[h+(i<<6)+48+(k<<1)>>1]|0;b[n+(r<<2)>>1]=b[j>>1]|0;o=c[m>>2]|0;p=r+1|0;q=b[o+(p<<2)+2>>1]|0;L16:do{if(q<<16>>16!=0){v=(c[g>>2]|0)+((e[o+(r<<2)+2>>1]|0)<<6)+48+(k<<1)|0;u=o+(p<<2)|0;t=o+(r<<2)|0;s=q;while(1){x=b[u>>1]|0;if((e[t>>1]|0)>>>0<(x&65535)>>>0){break L16}y=c[g>>2]|0;w=s&65535;if((x&1)==0){x=y+(w<<6)+48+(k<<1)|0;b[x>>1]=(b[x>>1]|0)-1}else{x=y+(w<<6)+54+(k<<1)|0;b[x>>1]=(b[x>>1]|0)-1}b[v>>1]=(b[v>>1]|0)+1;x=t;w=e[x>>1]|e[x+2>>1]<<16;y=u;C=e[y>>1]|e[y+2>>1]<<16;b[x>>1]=C;b[x+2>>1]=C>>16;C=w;b[y>>1]=C;b[y+2>>1]=C>>16;y=b[u+6>>1]|0;if(y<<16>>16==0){break}else{u=u+4|0;t=t+4|0;s=y}}}}while(0);b[n+(l<<2)+2>>1]=0;b[n+(l<<2)>>1]=b[j>>1]|0;k=k+1|0;}while((k|0)<3);k=a+64|0;b[(c[g>>2]|0)+(i<<6)+48>>1]=b[k>>1]|0;b[k>>1]=d;b[f>>1]=(b[f>>1]|0)-1;return}function po(a,d,f,g,h,j,k,l){a=a|0;d=d|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,D=0,E=0,F=0,G=0;m=i;i=i+16|0;n=m|0;o=m+8|0;p=n|0;pi(a,p,d,0);d=o|0;pi(a,d,f,1);f=a+64|0;q=b[f>>1]|0;r=a+60|0;s=c[r>>2]|0;t=q&65535;u=s+(t<<6)+48|0;b[f>>1]=b[u>>1]|0;f=a+56|0;b[f>>1]=(b[f>>1]|0)+1;c[s+(t<<6)+12>>2]=t;c[s+(t<<6)>>2]=g;b[s+(t<<6)+4>>1]=h;b[s+(t<<6)+6>>1]=j;c[s+(t<<6)+8>>2]=l;l=b[f>>1]<<1;f=l&65535;j=f|1;h=f-1|0;g=h&65535;v=(c[r>>2]|0)+54|0;b[v>>1]=(b[v>>1]|0)+2;v=a+68|0;w=c[v>>2]|0;x=w+(h<<2)|0;y=w+(j<<2)|0;C=e[x>>1]|e[x+2>>1]<<16;b[y>>1]=C;b[y+2>>1]=C>>16;b[(c[v>>2]|0)+(h<<2)>>1]=b[p>>1]|0;b[(c[v>>2]|0)+(h<<2)+2>>1]=q;b[(c[v>>2]|0)+(f<<2)>>1]=b[d>>1]|0;b[(c[v>>2]|0)+(f<<2)+2>>1]=q;b[u>>1]=g;d=s+(t<<6)+54|0;b[d>>1]=l;p=(c[r>>2]|0)+56|0;b[p>>1]=(b[p>>1]|0)+2;p=a+72|0;y=c[p>>2]|0;x=y+(h<<2)|0;w=y+(j<<2)|0;C=e[x>>1]|e[x+2>>1]<<16;b[w>>1]=C;b[w+2>>1]=C>>16;b[(c[p>>2]|0)+(h<<2)>>1]=b[n+2>>1]|0;b[(c[p>>2]|0)+(h<<2)+2>>1]=q;b[(c[p>>2]|0)+(f<<2)>>1]=b[o+2>>1]|0;b[(c[p>>2]|0)+(f<<2)+2>>1]=q;w=s+(t<<6)+50|0;b[w>>1]=g;x=s+(t<<6)+56|0;b[x>>1]=l;y=(c[r>>2]|0)+58|0;b[y>>1]=(b[y>>1]|0)+2;y=a+76|0;z=c[y>>2]|0;A=z+(h<<2)|0;B=z+(j<<2)|0;C=e[A>>1]|e[A+2>>1]<<16;b[B>>1]=C;b[B+2>>1]=C>>16;b[(c[y>>2]|0)+(h<<2)>>1]=b[n+4>>1]|0;b[(c[y>>2]|0)+(h<<2)+2>>1]=q;b[(c[y>>2]|0)+(f<<2)>>1]=b[o+4>>1]|0;b[(c[y>>2]|0)+(f<<2)+2>>1]=q;f=s+(t<<6)+52|0;b[f>>1]=g;g=s+(t<<6)+58|0;b[g>>1]=l;l=c[v>>2]|0;t=e[u>>1]|0;u=l+(t<<2)|0;s=l+(t-1<<2)|0;y=c[r>>2]|0;o=b[s>>1]|0;if((e[u>>1]|0)>>>0<(o&65535)>>>0){h=y+((e[l+(t<<2)+2>>1]|0)<<6)+48|0;t=s;s=u;u=o;o=y;while(1){y=e[t+2>>1]|0;if((u&1)==0){n=o+(y<<6)+48|0;b[n>>1]=(b[n>>1]|0)+1}else{n=o+(y<<6)+54|0;b[n>>1]=(b[n>>1]|0)+1}b[h>>1]=(b[h>>1]|0)-1;n=s;y=e[n>>1]|e[n+2>>1]<<16;B=t;C=e[B>>1]|e[B+2>>1]<<16;b[n>>1]=C;b[n+2>>1]=C>>16;C=y;b[B>>1]=C;b[B+2>>1]=C>>16;B=s-4|0;y=t-4|0;n=b[y>>1]|0;if((e[B>>1]|0)>>>0>=(n&65535)>>>0){break}t=y;s=B;u=n;o=c[r>>2]|0}D=c[v>>2]|0}else{D=l}l=e[d>>1]|0;d=D+(l<<2)|0;v=D+(l-1<<2)|0;o=b[v>>1]|0;L12:do{if((e[d>>1]|0)>>>0<(o&65535)>>>0){u=c[r>>2]|0;s=u+((e[D+(l<<2)+2>>1]|0)<<6)+54|0;t=v;h=d;n=o;B=u;while(1){u=e[t+2>>1]|0;if((n&1)==0){y=B+(u<<6)+48|0;b[y>>1]=(b[y>>1]|0)+1}else{y=B+(u<<6)+54|0;b[y>>1]=(b[y>>1]|0)+1}b[s>>1]=(b[s>>1]|0)-1;y=h;u=e[y>>1]|e[y+2>>1]<<16;A=t;C=e[A>>1]|e[A+2>>1]<<16;b[y>>1]=C;b[y+2>>1]=C>>16;C=u;b[A>>1]=C;b[A+2>>1]=C>>16;A=h-4|0;u=t-4|0;y=b[u>>1]|0;if((e[A>>1]|0)>>>0>=(y&65535)>>>0){break L12}t=u;h=A;n=y;B=c[r>>2]|0}}}while(0);o=c[p>>2]|0;d=e[w>>1]|0;w=o+(d<<2)|0;v=o+(d-1<<2)|0;l=c[r>>2]|0;D=b[v>>1]|0;if((e[w>>1]|0)>>>0<(D&65535)>>>0){B=l+((e[o+(d<<2)+2>>1]|0)<<6)+50|0;d=v;v=w;w=D;D=l;while(1){l=e[d+2>>1]|0;if((w&1)==0){n=D+(l<<6)+50|0;b[n>>1]=(b[n>>1]|0)+1}else{n=D+(l<<6)+56|0;b[n>>1]=(b[n>>1]|0)+1}b[B>>1]=(b[B>>1]|0)-1;n=v;l=e[n>>1]|e[n+2>>1]<<16;h=d;C=e[h>>1]|e[h+2>>1]<<16;b[n>>1]=C;b[n+2>>1]=C>>16;C=l;b[h>>1]=C;b[h+2>>1]=C>>16;h=v-4|0;l=d-4|0;n=b[l>>1]|0;if((e[h>>1]|0)>>>0>=(n&65535)>>>0){break}d=l;v=h;w=n;D=c[r>>2]|0}E=c[p>>2]|0}else{E=o}o=e[x>>1]|0;x=E+(o<<2)|0;p=E+(o-1<<2)|0;D=b[p>>1]|0;if((e[x>>1]|0)>>>0>=(D&65535)>>>0){F=b[f>>1]|0;pj(a,2,F,0,1);G=b[g>>1]|0;pm(a,2,G,k,1);i=m;return q|0}w=c[r>>2]|0;v=w+((e[E+(o<<2)+2>>1]|0)<<6)+56|0;o=p;p=x;x=D;D=w;while(1){w=e[o+2>>1]|0;if((x&1)==0){E=D+(w<<6)+50|0;b[E>>1]=(b[E>>1]|0)+1}else{E=D+(w<<6)+56|0;b[E>>1]=(b[E>>1]|0)+1}b[v>>1]=(b[v>>1]|0)-1;E=p;w=e[E>>1]|e[E+2>>1]<<16;d=o;C=e[d>>1]|e[d+2>>1]<<16;b[E>>1]=C;b[E+2>>1]=C>>16;C=w;b[d>>1]=C;b[d+2>>1]=C>>16;d=p-4|0;w=o-4|0;E=b[w>>1]|0;if((e[d>>1]|0)>>>0>=(E&65535)>>>0){break}o=w;p=d;x=E;D=c[r>>2]|0}F=b[f>>1]|0;pj(a,2,F,0,1);G=b[g>>1]|0;pm(a,2,G,k,1);i=m;return q|0}function pp(b){b=b|0;var d=0,e=0,f=0;c[b>>2]=33072;d=b+108|0;if((c[d>>2]|0)!=0){e=b+112|0;f=c[e>>2]|0;g$[c[c[f>>2]>>2]&1023](f);zw(c[e>>2]|0);e=c[d>>2]|0;g$[c[c[e>>2]>>2]&1023](e);zw(c[d>>2]|0)}zw(c[b+88>>2]|0);zw(c[b+84>>2]|0);zw(c[b+80>>2]|0);d=c[b+60>>2]|0;if((d|0)!=0){zw(d)}if((a[b+100|0]&1)==0){return}d=b+92|0;b=c[d>>2]|0;g$[c[c[b>>2]>>2]&1023](b);zw(c[d>>2]|0);return}function pq(a){a=a|0;pp(a);return}function pr(a){a=a|0;pp(a);zw(a);return}function ps(b){b=b|0;var d=0,e=0,f=0,g=0;c[b>>2]=34280;d=b+8|0;e=b+16|0;f=c[e>>2]|0;g=b+20|0;if((f|0)!=0){if((a[g]&1)!=0){zw(f)}c[e>>2]=0}a[g]=1;c[e>>2]=0;c[d>>2]=0;c[b+12>>2]=0;return}function pt(b){b=b|0;var d=0;c[b>>2]=34280;d=c[b+16>>2]|0;do{if((d|0)!=0){if((a[b+20|0]&1)==0){break}zw(d)}}while(0);KU(b);return}function pu(a,b,c){a=a|0;b=b|0;c=c|0;return 0}function pv(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return 0}function pw(a,b,c){a=a|0;b=b|0;c=c|0;return}function px(a){a=a|0;return c[a+16>>2]|0}function py(a){a=a|0;return c[a+16>>2]|0}function pz(a){a=a|0;return a+4|0}function pA(a,b,c){a=a|0;b=b|0;c=c|0;return}function pB(a){a=a|0;return 0}function pC(a,b,c){a=a|0;b=b|0;c=c|0;return}function pD(a,b){a=a|0;b=b|0;return}function pE(a,b,c){a=a|0;b=b|0;c=c|0;return}function pF(a,b,c){a=a|0;b=b|0;c=c|0;return 0}function pG(a){a=a|0;return 1}function pH(a,b){a=a|0;b=b|0;return}function pI(a,b){a=a|0;b=b|0;return}function pJ(a,b){a=a|0;b=b|0;c[a>>2]=33032;c[a+4>>2]=c[b>>2];return}function pK(a){a=a|0;return}function pL(a){a=a|0;KU(a);return}function pM(b){b=b|0;a[b+36|0]=1;c[b+32>>2]=0;c[b+24>>2]=0;c[b+28>>2]=0;a[b+56|0]=1;c[b+52>>2]=0;c[b+44>>2]=0;c[b+48>>2]=0;c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=-1;c[b+12>>2]=0;c[b+16>>2]=0;return}function pN(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;d=c[b>>2]|0;if((d|0)!=0){pP(b,d)}d=b+4|0;zw(c[d>>2]|0);c[d>>2]=0;c[b+8>>2]=-1;d=b+24|0;e=b+32|0;f=c[e>>2]|0;g=b+36|0;if((f|0)!=0){if((a[g]&1)!=0){zw(f)}c[e>>2]=0}a[g]=1;c[e>>2]=0;c[d>>2]=0;f=b+28|0;c[f>>2]=0;c[b+16>>2]=0;h=b+44|0;i=b+52|0;j=c[i>>2]|0;k=b+56|0;if((j|0)==0){a[k]=1;c[i>>2]=0;c[h>>2]=0;c[b+48>>2]=0;a[g]=1;c[e>>2]=0;c[d>>2]=0;c[f>>2]=0;return}if((a[k]&1)==0){l=0}else{zw(j);l=c[e>>2]|0}a[k]=1;c[i>>2]=0;c[h>>2]=0;c[b+48>>2]=0;if((l|0)==0){a[g]=1;c[e>>2]=0;c[d>>2]=0;c[f>>2]=0;return}if((a[g]&1)!=0){zw(l)}c[e>>2]=0;a[g]=1;c[e>>2]=0;c[d>>2]=0;c[f>>2]=0;return}function pO(b){b=b|0;var d=0,e=0,f=0,g=0;d=c[b>>2]|0;if((d|0)!=0){pP(b,d)}d=b+4|0;zw(c[d>>2]|0);c[d>>2]=0;c[b+8>>2]=-1;d=b+24|0;e=b+32|0;f=c[e>>2]|0;g=b+36|0;if((f|0)!=0){if((a[g]&1)!=0){zw(f)}c[e>>2]=0}a[g]=1;c[e>>2]=0;c[d>>2]=0;c[b+28>>2]=0;c[b+16>>2]=0;return}function pP(a,b){a=a|0;b=b|0;var d=0;d=b+40|0;if((c[d>>2]|0)!=0){pP(a,c[b+36>>2]|0);pP(a,c[d>>2]|0)}d=a|0;if((c[d>>2]|0)==(b|0)){c[d>>2]=0}d=a+4|0;zw(c[d>>2]|0);c[d>>2]=b;return}function pQ(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;d=i;i=i+32|0;if((b|0)<0){e=c[a+12>>2]|0}else{e=b}b=a|0;f=c[b>>2]|0;if(!((f|0)!=0&(e|0)>0)){i=d;return}g=a+16|0;h=d|0;j=e;e=f;while(1){f=e+40|0;L9:do{if((c[f>>2]|0)==0){k=e}else{l=0;m=e;n=f;while(1){o=(c[g>>2]|0)>>>(l>>>0)&1;p=m+32|0;q=c[p>>2]|0;if(q>>>0>m>>>0){r=q+40|0;s=(c[r>>2]|0)==(m|0)|0;t=s^1;u=c[q+36+(t<<2)>>2]|0;v=q+32|0;w=c[v>>2]|0;if((w|0)==0){c[b>>2]=m}else{c[w+36+(((c[w+40>>2]|0)==(q|0))<<2)>>2]=m}c[u+32>>2]=m;c[v>>2]=m;c[p>>2]=w;w=m+36|0;c[q+36>>2]=c[w>>2];c[r>>2]=c[n>>2];c[(c[w>>2]|0)+32>>2]=q;c[(c[n>>2]|0)+32>>2]=q;c[m+36+(s<<2)>>2]=q;c[m+36+(t<<2)>>2]=u;u=q;K2(h|0,u|0,32)|0;t=m;K2(u|0,t|0,32)|0;K2(t|0,h|0,32)|0;x=q}else{x=m}q=c[x+36+(o<<2)>>2]|0;o=q+40|0;if((c[o>>2]|0)==0){k=q;break L9}l=l+1&31;m=q;n=o}}}while(0);if((pT(a,k)|0)==0){y=0}else{y=c[b>>2]|0}pS(a,y,k);c[g>>2]=(c[g>>2]|0)+1;f=j-1|0;if((f|0)==0){break}j=f;e=c[b>>2]|0}i=d;return}function pR(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=a+4|0;f=c[e>>2]|0;do{if((f|0)==0){g=zv(44,16)|0;if((g|0)==0){h=0;break}K1(g|0,0,44)|0;h=g}else{c[e>>2]=0;h=f}}while(0);c[h+32>>2]=0;c[h+36>>2]=d;c[h+40>>2]=0;K2(h|0,b|0,32)|0;pS(a,c[a>>2]|0,h);b=a+12|0;c[b>>2]=(c[b>>2]|0)+1;return h|0}function pS(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,h=0,i=0.0,j=0.0,k=0.0,l=0,m=0.0,n=0,o=0,p=0;e=a|0;if((c[e>>2]|0)==0){c[e>>2]=d;c[d+32>>2]=0;return}f=c[b+40>>2]|0;if((f|0)==0){h=b}else{i=+g[d>>2]+ +g[d+16>>2];j=+g[d+4>>2]+ +g[d+20>>2];k=+g[d+8>>2]+ +g[d+24>>2];l=b;b=f;while(1){f=c[l+36>>2]|0;m=+V(+(i-(+g[f>>2]+ +g[f+16>>2])))+ +V(+(j-(+g[f+4>>2]+ +g[f+20>>2])))+ +V(+(k-(+g[f+8>>2]+ +g[f+24>>2])));f=c[l+36+((m>=+V(+(i-(+g[b>>2]+ +g[b+16>>2])))+ +V(+(j-(+g[b+4>>2]+ +g[b+20>>2])))+ +V(+(k-(+g[b+8>>2]+ +g[b+24>>2]))))<<2)>>2]|0;n=c[f+40>>2]|0;if((n|0)==0){h=f;break}else{l=f;b=n}}}b=h+32|0;l=c[b>>2]|0;n=a+4|0;a=c[n>>2]|0;do{if((a|0)==0){f=zv(44,16)|0;if((f|0)==0){o=0;break}K1(f|0,0,44)|0;o=f}else{c[n>>2]=0;o=a}}while(0);c[o+32>>2]=l;a=o+36|0;c[a>>2]=0;n=o+40|0;c[n>>2]=0;k=+g[d>>2];j=+g[h>>2];f=o|0;g[f>>2]=k<j?k:j;j=+g[d+16>>2];k=+g[h+16>>2];g[o+16>>2]=j>k?j:k;k=+g[d+4>>2];j=+g[h+4>>2];g[o+4>>2]=k<j?k:j;j=+g[d+20>>2];k=+g[h+20>>2];g[o+20>>2]=j>k?j:k;k=+g[d+8>>2];j=+g[h+8>>2];g[o+8>>2]=k<j?k:j;j=+g[d+24>>2];k=+g[h+24>>2];g[o+24>>2]=j>k?j:k;if((l|0)==0){c[a>>2]=h;c[b>>2]=o;c[n>>2]=d;c[d+32>>2]=o;c[e>>2]=o;return}c[l+36+(((c[(c[b>>2]|0)+40>>2]|0)==(h|0))<<2)>>2]=o;c[a>>2]=h;c[b>>2]=o;c[n>>2]=d;c[d+32>>2]=o;d=o;o=l;k=+g[f>>2];L19:while(1){f=o|0;l=o+4|0;do{if(+g[f>>2]<=k){if(+g[l>>2]>+g[d+4>>2]){break}if(+g[o+8>>2]>+g[d+8>>2]){break}if(+g[o+16>>2]<+g[d+16>>2]){break}if(+g[o+20>>2]<+g[d+20>>2]){break}if(+g[o+24>>2]>=+g[d+24>>2]){p=21;break L19}}}while(0);n=c[o+36>>2]|0;b=c[o+40>>2]|0;j=+g[n>>2];i=+g[b>>2];m=j<i?j:i;g[f>>2]=m;i=+g[n+16>>2];j=+g[b+16>>2];g[o+16>>2]=i>j?i:j;j=+g[n+4>>2];i=+g[b+4>>2];g[l>>2]=j<i?j:i;i=+g[n+20>>2];j=+g[b+20>>2];g[o+20>>2]=i>j?i:j;j=+g[n+8>>2];i=+g[b+8>>2];g[o+8>>2]=j<i?j:i;i=+g[n+24>>2];j=+g[b+24>>2];g[o+24>>2]=i>j?i:j;b=c[o+32>>2]|0;if((b|0)==0){p=22;break}else{d=o;o=b;k=m}}if((p|0)==21){return}else if((p|0)==22){return}}function pT(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,h=0,i=0,j=0.0,k=0.0,l=0.0,m=0.0,n=0,o=0.0,p=0,q=0.0,r=0,s=0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0;d=a|0;if((c[d>>2]|0)==(b|0)){c[d>>2]=0;e=0;return e|0}f=c[b+32>>2]|0;h=c[f+32>>2]|0;i=c[f+36+(((c[f+40>>2]|0)!=(b|0))<<2)>>2]|0;if((h|0)==0){c[d>>2]=i;c[i+32>>2]=0;b=a+4|0;zw(c[b>>2]|0);c[b>>2]=f;e=c[d>>2]|0;return e|0}c[h+36+(((c[h+40>>2]|0)==(f|0))<<2)>>2]=i;c[i+32>>2]=h;i=a+4|0;zw(c[i>>2]|0);c[i>>2]=f;f=h;do{h=f|0;j=+g[h>>2];i=f+4|0;k=+g[i>>2];a=f+8|0;l=+g[a>>2];b=f+16|0;m=+g[b>>2];n=f+20|0;o=+g[n>>2];p=f+24|0;q=+g[p>>2];r=c[f+36>>2]|0;s=c[f+40>>2]|0;t=+g[r>>2];u=+g[s>>2];v=t<u?t:u;g[h>>2]=v;u=+g[r+16>>2];t=+g[s+16>>2];w=u>t?u:t;g[b>>2]=w;t=+g[r+4>>2];u=+g[s+4>>2];x=t<u?t:u;g[i>>2]=x;u=+g[r+20>>2];t=+g[s+20>>2];y=u>t?u:t;g[n>>2]=y;t=+g[r+8>>2];u=+g[s+8>>2];z=t<u?t:u;g[a>>2]=z;u=+g[r+24>>2];t=+g[s+24>>2];A=u>t?u:t;g[p>>2]=A;if(!(j!=v|k!=x|l!=z|m!=w)){if(!(o!=y|q!=A)){e=f;B=12;break}}f=c[f+32>>2]|0;}while((f|0)!=0);if((B|0)==12){return e|0}e=c[d>>2]|0;return e|0}function pU(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0;e=pT(a,b)|0;L1:do{if((e|0)==0){f=0}else{g=c[a+8>>2]|0;if((g|0)>-1){h=0;i=e}else{f=c[a>>2]|0;break}while(1){if((h|0)>=(g|0)){f=i;break L1}j=c[i+32>>2]|0;if((j|0)==0){f=i;break}else{h=h+1|0;i=j}}}}while(0);K2(b|0,d|0,32)|0;pS(a,f,b);return}function pV(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=+f;var h=0,i=0.0,j=0.0,k=0.0,l=0,m=0,n=0,o=0,p=0.0,q=0,r=0.0,s=0,t=0.0,u=0,v=0,w=0;h=d|0;i=+g[h>>2];do{if(+g[b>>2]>i){j=+g[d+4>>2]}else{k=+g[d+4>>2];if(+g[b+4>>2]>k){j=k;break}if(+g[b+8>>2]>+g[d+8>>2]){j=k;break}if(+g[b+16>>2]<+g[d+16>>2]){j=k;break}if(+g[b+20>>2]<+g[d+20>>2]){j=k;break}if(+g[b+24>>2]<+g[d+24>>2]){j=k;break}else{l=0}return l|0}}while(0);k=i-f;g[h>>2]=k;m=d+4|0;i=j-f;g[m>>2]=i;n=d+8|0;j=+g[n>>2]-f;g[n>>2]=j;o=d+16|0;p=+g[o>>2]+f;g[o>>2]=p;q=d+20|0;r=+g[q>>2]+f;g[q>>2]=r;s=d+24|0;t=+g[s>>2]+f;g[s>>2]=t;f=+g[e>>2];if(f>0.0){g[o>>2]=f+p}else{g[h>>2]=f+k}k=+g[e+4>>2];if(k>0.0){g[q>>2]=k+r}else{g[m>>2]=k+i}i=+g[e+8>>2];if(i>0.0){g[s>>2]=i+t}else{g[n>>2]=i+j}n=pT(a,b)|0;L22:do{if((n|0)==0){u=0}else{s=c[a+8>>2]|0;if((s|0)>-1){v=0;w=n}else{u=c[a>>2]|0;break}while(1){if((v|0)>=(s|0)){u=w;break L22}e=c[w+32>>2]|0;if((e|0)==0){u=w;break}else{v=v+1|0;w=e}}}}while(0);K2(b|0,d|0,32)|0;pS(a,u,b);l=1;return l|0}function pW(a,b){a=a|0;b=b|0;var d=0;pT(a,b)|0;d=a+4|0;zw(c[d>>2]|0);c[d>>2]=b;b=a+12|0;c[b>>2]=(c[b>>2]|0)-1;return}function pX(a,b,c){a=a|0;b=b|0;c=c|0;return}function pY(a,b,d){a=a|0;b=b|0;d=+d;g0[c[(c[a>>2]|0)+12>>2]&511](a,b);return}function pZ(a,b){a=a|0;b=b|0;return 1}function p_(a,b){a=a|0;b=b|0;return 1}function p$(b,d){b=b|0;d=d|0;var e=0,f=0,h=0;c[b>>2]=33848;pM(b+4|0);pM(b+64|0);a[b+193|0]=0;a[b+194|0]=1;e=(d|0)!=0;a[b+192|0]=e&1^1;g[b+140>>2]=0.0;c[b+144>>2]=0;c[b+164>>2]=0;c[b+148>>2]=1;c[b+152>>2]=0;c[b+156>>2]=10;c[b+160>>2]=1;c[b+168>>2]=0;c[b+172>>2]=0;g[b+176>>2]=0.0;if(e){f=d}else{d=zv(76,16)|0;if((d|0)==0){h=0}else{e=d;qu(e);h=e}f=h|0}c[b+136>>2]=f;c[b+188>>2]=0;c[b+180>>2]=0;c[b+184>>2]=0;K1(b+124|0,0,12)|0;return}function p0(b){b=b|0;var d=0,e=0;c[b>>2]=33848;if((a[b+192|0]&1)!=0){d=b+136|0;e=c[d>>2]|0;g$[c[c[e>>2]>>2]&1023](e);zw(c[d>>2]|0)}pN(b+64|0);pN(b+4|0);KU(b);return}function p1(b){b=b|0;var d=0,e=0;c[b>>2]=33848;if((a[b+192|0]&1)!=0){d=b+136|0;e=c[d>>2]|0;g$[c[c[e>>2]>>2]&1023](e);zw(c[d>>2]|0)}pN(b+64|0);pN(b+4|0);return}function p2(d,e,f,g,h,j,k,l,m){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0;m=i;i=i+48|0;l=m|0;g=m+32|0;n=zv(64,16)|0;o=n;c[n>>2]=h;b[n+4>>1]=j;b[n+6>>1]=k;k=n+16|0;j=e;c[k>>2]=c[j>>2];c[k+4>>2]=c[j+4>>2];c[k+8>>2]=c[j+8>>2];c[k+12>>2]=c[j+12>>2];k=n+32|0;e=f;c[k>>2]=c[e>>2];c[k+4>>2]=c[e+4>>2];c[k+8>>2]=c[e+8>>2];c[k+12>>2]=c[e+12>>2];c[n+8>>2]=0;k=n+56|0;c[k>>2]=0;f=n+52|0;c[f>>2]=0;h=l;c[h>>2]=c[j>>2];c[h+4>>2]=c[j+4>>2];c[h+8>>2]=c[j+8>>2];c[h+12>>2]=c[j+12>>2];j=l+16|0;c[j>>2]=c[e>>2];c[j+4>>2]=c[e+4>>2];c[j+8>>2]=c[e+8>>2];c[j+12>>2]=c[e+12>>2];e=d+144|0;c[n+60>>2]=c[e>>2];j=d+188|0;h=(c[j>>2]|0)+1|0;c[j>>2]=h;j=n;c[n+12>>2]=h;h=d+4|0;c[n+48>>2]=pR(h|0,l,n)|0;n=d+124+(c[e>>2]<<2)|0;c[f>>2]=0;c[k>>2]=c[n>>2];k=c[n>>2]|0;if((k|0)!=0){c[k+52>>2]=o}c[n>>2]=o;if((a[d+193|0]&1)!=0){i=m;return j|0}c[g>>2]=33368;c[g+4>>2]=d;c[g+8>>2]=o;o=g|0;p3(0,c[h>>2]|0,l,o);p3(0,c[d+64>>2]|0,l,o);i=m;return j|0}function p3(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0.0,h=0.0,i=0.0,j=0.0,k=0.0,l=0.0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0;if((b|0)==0){return}f=+g[d>>2];h=+g[d+4>>2];i=+g[d+8>>2];j=+g[d+16>>2];k=+g[d+20>>2];l=+g[d+24>>2];d=zv(256,16)|0;a=d;if((d|0)==0){m=0}else{c[a>>2]=b;m=a}a=e;b=1;d=64;n=m;while(1){m=b-1|0;o=c[n+(m<<2)>>2]|0;do{if(+g[o>>2]>j){p=m;q=d;r=n}else{if(+g[o+16>>2]<f){p=m;q=d;r=n;break}if(+g[o+4>>2]>k){p=m;q=d;r=n;break}if(+g[o+20>>2]<h){p=m;q=d;r=n;break}if(+g[o+8>>2]>l){p=m;q=d;r=n;break}if(+g[o+24>>2]<i){p=m;q=d;r=n;break}s=o+40|0;if((c[s>>2]|0)==0){g0[c[(c[a>>2]|0)+12>>2]&511](e,o);p=m;q=d;r=n;break}t=c[o+36>>2]|0;do{if((m|0)==(d|0)){u=(d|0)==0?1:d<<1;if((d|0)>=(u|0)){v=d;w=n;break}if((u|0)==0){x=0}else{x=zv(u<<2,16)|0}if((d|0)>0){y=0;do{z=x+(y<<2)|0;if((z|0)!=0){c[z>>2]=c[n+(y<<2)>>2]}y=y+1|0;}while((y|0)<(d|0))}if((n|0)==0){v=u;w=x;break}zw(n);v=u;w=x}else{v=d;w=n}}while(0);y=w+(m<<2)|0;if((y|0)!=0){c[y>>2]=t}y=c[s>>2]|0;do{if((b|0)==(v|0)){z=(b|0)==0?1:b<<1;if((b|0)>=(z|0)){A=b;B=w;break}if((z|0)==0){C=0}else{C=zv(z<<2,16)|0}if((b|0)>0){D=0;do{E=C+(D<<2)|0;if((E|0)!=0){c[E>>2]=c[w+(D<<2)>>2]}D=D+1|0;}while((D|0)<(b|0))}if((w|0)==0){A=z;B=C;break}zw(w);A=z;B=C}else{A=v;B=w}}while(0);s=B+(b<<2)|0;if((s|0)!=0){c[s>>2]=y}p=b+1|0;q=A;r=B}}while(0);if((p|0)>0){b=p;d=q;n=r}else{break}}if((r|0)==0){return}zw(r);return}function p4(a){a=a|0;return}function p5(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0;f=d+60|0;if((c[f>>2]|0)==2){pW(b+64|0,c[d+48>>2]|0)}else{pW(b+4|0,c[d+48>>2]|0)}g=d+52|0;h=c[g>>2]|0;i=d+56|0;j=c[i>>2]|0;if((h|0)==0){c[b+124+(c[f>>2]<<2)>>2]=j}else{c[h+56>>2]=j}j=c[i>>2]|0;if((j|0)!=0){c[j+52>>2]=c[g>>2]}g=c[b+136>>2]|0;hF[c[(c[g>>2]|0)+16>>2]&255](g|0,d,e);zw(d);a[b+194|0]=1;return}function p6(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;a=d;d=b+16|0;c[a>>2]=c[d>>2];c[a+4>>2]=c[d+4>>2];c[a+8>>2]=c[d+8>>2];c[a+12>>2]=c[d+12>>2];d=e;e=b+32|0;c[d>>2]=c[e>>2];c[d+4>>2]=c[e+4>>2];c[d+8>>2]=c[e+8>>2];c[d+12>>2]=c[e+12>>2];return}function p7(a,b,d,e,f,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;var j=0,k=0,l=0,m=0,n=0;d=i;i=i+8|0;j=d|0;c[j>>2]=33320;c[j+4>>2]=e;k=a+4|0;l=e+4|0;m=e+20|0;n=e+32|0;e=j|0;p8(k|0,c[k>>2]|0,b,0,l,m,+g[n>>2],f,h,e);k=a+64|0;p8(k,c[k>>2]|0,b,0,l,m,+g[n>>2],f,h,e);i=d;return}function p8(b,d,e,f,h,j,k,l,m,n){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;j=j|0;k=+k;l=l|0;m=m|0;n=n|0;var o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0.0,Q=0.0,R=0,S=0.0,T=0.0,U=0.0,V=0.0,W=0,X=0,Y=0.0,Z=0.0,_=0.0,$=0.0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0,ai=0,aj=0,ak=0;f=i;i=i+32|0;o=f|0;if((d|0)==0){i=f;return}p=b+44|0;q=c[p>>2]|0;if((q|0)<128){r=b+48|0;if((c[r>>2]|0)<128){s=zv(512,16)|0;t=c[p>>2]|0;u=b+52|0;if((t|0)>0){v=0;do{w=s+(v<<2)|0;if((w|0)!=0){c[w>>2]=c[(c[u>>2]|0)+(v<<2)>>2]}v=v+1|0;}while((v|0)<(t|0))}t=c[u>>2]|0;v=b+56|0;if((t|0)!=0){if((a[v]&1)!=0){zw(t)}c[u>>2]=0}a[v]=1;c[u>>2]=s;c[r>>2]=128;x=u}else{x=b+52|0}u=q;do{q=(c[x>>2]|0)+(u<<2)|0;if((q|0)!=0){c[q>>2]=0}u=u+1|0;}while((u|0)<128)}c[p>>2]=128;u=b+52|0;c[c[u>>2]>>2]=d;d=m|0;x=m+4|0;q=m+8|0;m=o|0;r=o+4|0;s=o+8|0;v=o+12|0;t=l|0;w=l+4|0;y=l+8|0;l=o+16|0;z=o+20|0;A=o+24|0;B=o+28|0;C=e|0;D=h|0;E=j+4|0;F=e+4|0;G=h+4|0;H=j+8|0;I=e+8|0;e=h+8|0;h=n;J=b+48|0;K=b+56|0;b=1;L=126;while(1){M=b-1|0;N=c[u>>2]|0;O=c[N+(M<<2)>>2]|0;P=+g[O+4>>2]- +g[x>>2];Q=+g[O+8>>2]- +g[q>>2];g[m>>2]=+g[O>>2]- +g[d>>2];g[r>>2]=P;g[s>>2]=Q;g[v>>2]=0.0;Q=+g[O+20>>2]- +g[w>>2];P=+g[O+24>>2]- +g[y>>2];g[l>>2]=+g[O+16>>2]- +g[t>>2];g[z>>2]=Q;g[A>>2]=P;g[B>>2]=0.0;R=c[j>>2]|0;P=+g[C>>2];Q=+g[D>>2];S=(+g[o+(R<<4)>>2]-P)*Q;T=Q*(+g[o+(1-R<<4)>>2]-P);R=c[E>>2]|0;P=+g[F>>2];Q=+g[G>>2];U=(+g[o+(R<<4)+4>>2]-P)*Q;V=Q*(+g[o+(1-R<<4)+4>>2]-P);do{if(S>V|U>T){W=M;X=L}else{P=U>S?U:S;Q=V<T?V:T;R=c[H>>2]|0;Y=+g[I>>2];Z=+g[e>>2];_=(+g[o+(R<<4)+8>>2]-Y)*Z;$=Z*(+g[o+(1-R<<4)+8>>2]-Y);if(P>$|_>Q){W=M;X=L;break}if((_>P?_:P)>=k){W=M;X=L;break}if(($<Q?$:Q)<=0.0){W=M;X=L;break}R=O+40|0;if((c[R>>2]|0)==0){g0[c[(c[h>>2]|0)+12>>2]&511](n,O);W=M;X=L;break}if((M|0)>(L|0)){aa=c[p>>2]|0;ab=aa<<1;if((aa|0)<(ab|0)){if((c[J>>2]|0)<(ab|0)){if((ab|0)==0){ac=0;ad=aa}else{ae=zv(aa<<3,16)|0;ac=ae;ad=c[p>>2]|0}if((ad|0)>0){ae=0;do{af=ac+(ae<<2)|0;if((af|0)!=0){c[af>>2]=c[(c[u>>2]|0)+(ae<<2)>>2]}ae=ae+1|0;}while((ae|0)<(ad|0))}ae=c[u>>2]|0;if((ae|0)!=0){if((a[K]&1)!=0){zw(ae)}c[u>>2]=0}a[K]=1;c[u>>2]=ac;c[J>>2]=ab;ag=aa;ah=ac}else{ag=aa;ah=N}while(1){ae=ah+(ag<<2)|0;if((ae|0)!=0){c[ae>>2]=0}ae=ag+1|0;af=c[u>>2]|0;if((ae|0)<(ab|0)){ag=ae;ah=af}else{ai=af;break}}}else{ai=N}c[p>>2]=ab;aj=ab-2|0;ak=ai}else{aj=L;ak=N}c[ak+(M<<2)>>2]=c[O+36>>2];c[(c[u>>2]|0)+(b<<2)>>2]=c[R>>2];W=b+1|0;X=aj}}while(0);if((W|0)==0){break}else{b=W;L=X}}i=f;return}function p9(a){a=a|0;return}function qa(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0;f=i;i=i+40|0;g=f|0;h=f+8|0;c[g>>2]=33144;c[g+4>>2]=e;e=h;j=b;c[e>>2]=c[j>>2];c[e+4>>2]=c[j+4>>2];c[e+8>>2]=c[j+8>>2];c[e+12>>2]=c[j+12>>2];j=h+16|0;e=d;c[j>>2]=c[e>>2];c[j+4>>2]=c[e+4>>2];c[j+8>>2]=c[e+8>>2];c[j+12>>2]=c[e+12>>2];e=g|0;p3(0,c[a+4>>2]|0,h,e);p3(0,c[a+64>>2]|0,h,e);i=f;return}function qb(a){a=a|0;return}function qc(b,d,e,f,h){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0,A=0,B=0;h=i;i=i+64|0;j=h|0;k=h+32|0;l=h+48|0;m=d;n=j;o=e;c[n>>2]=c[o>>2];c[n+4>>2]=c[o+4>>2];c[n+8>>2]=c[o+8>>2];c[n+12>>2]=c[o+12>>2];n=j+16|0;p=f;c[n>>2]=c[p>>2];c[n+4>>2]=c[p+4>>2];c[n+8>>2]=c[p+8>>2];c[n+12>>2]=c[p+12>>2];n=d+60|0;L1:do{if((c[n>>2]|0)==2){f=d+48|0;pW(b+64|0,c[f>>2]|0);c[f>>2]=pR(b+4|0,j,d)|0;q=1}else{f=b+168|0;c[f>>2]=(c[f>>2]|0)+1;f=c[d+48>>2]|0;do{if(+g[f>>2]<=+g[j+16>>2]){if(+g[f+16>>2]<+g[j>>2]){break}if(+g[f+4>>2]>+g[j+20>>2]){break}if(+g[f+20>>2]<+g[j+4>>2]){break}if(+g[f+8>>2]>+g[j+24>>2]){break}if(+g[f+24>>2]<+g[j+8>>2]){break}r=+g[d+16>>2];s=+g[e>>2]-r;t=+g[d+20>>2];u=+g[e+4>>2]-t;v=+g[d+24>>2];w=+g[e+8>>2]-v;x=+g[b+140>>2];y=(+g[d+32>>2]-r)*.5*x;r=x*(+g[d+36>>2]-t)*.5;t=x*(+g[d+40>>2]-v)*.5;z=k|0;g[z>>2]=y;A=k+4|0;g[A>>2]=r;B=k+8|0;g[B>>2]=t;g[k+12>>2]=0.0;if(s<0.0){g[z>>2]=-0.0-y}if(u<0.0){g[A>>2]=-0.0-r}if(w<0.0){g[B>>2]=-0.0-t}if(!(pV(b+4|0,f,j,k,.05000000074505806)|0)){q=0;break L1}B=b+172|0;c[B>>2]=(c[B>>2]|0)+1;q=1;break L1}}while(0);pU(b+4|0,f,j);B=b+172|0;c[B>>2]=(c[B>>2]|0)+1;q=1}}while(0);j=d+52|0;k=c[j>>2]|0;e=d+56|0;B=c[e>>2]|0;if((k|0)==0){c[b+124+(c[n>>2]<<2)>>2]=B}else{c[k+56>>2]=B}B=c[e>>2]|0;if((B|0)!=0){c[B+52>>2]=c[j>>2]}B=d+16|0;c[B>>2]=c[o>>2];c[B+4>>2]=c[o+4>>2];c[B+8>>2]=c[o+8>>2];c[B+12>>2]=c[o+12>>2];o=d+32|0;c[o>>2]=c[p>>2];c[o+4>>2]=c[p+4>>2];c[o+8>>2]=c[p+8>>2];c[o+12>>2]=c[p+12>>2];p=b+144|0;c[n>>2]=c[p>>2];n=b+124+(c[p>>2]<<2)|0;c[j>>2]=0;c[e>>2]=c[n>>2];e=c[n>>2]|0;if((e|0)!=0){c[e+52>>2]=m}c[n>>2]=m;if(!q){i=h;return}a[b+194|0]=1;if((a[b+193|0]&1)!=0){i=h;return}c[l>>2]=33368;c[l+4>>2]=b;q=b+64|0;m=d+48|0;d=l|0;qd(q,c[q>>2]|0,c[m>>2]|0,d);q=b+4|0;qd(q,c[q>>2]|0,c[m>>2]|0,d);i=h;return}function qd(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0;if((d|0)==0|(e|0)==0){return}h=b+24|0;do{if((c[h>>2]|0)<128){i=b+28|0;if((c[i>>2]|0)>=128){break}j=zv(1024,16)|0;k=c[h>>2]|0;l=b+32|0;if((k|0)>0){m=0;do{n=j+(m<<3)|0;if((n|0)!=0){o=(c[l>>2]|0)+(m<<3)|0;p=n;n=c[o+4>>2]|0;c[p>>2]=c[o>>2];c[p+4>>2]=n}m=m+1|0;}while((m|0)<(k|0))}k=c[l>>2]|0;m=b+36|0;if((k|0)!=0){if((a[m]&1)!=0){zw(k)}c[l>>2]=0}a[m]=1;c[l>>2]=j;c[i>>2]=128}}while(0);c[h>>2]=128;m=b+32|0;k=c[m>>2]|0;c[k>>2]=d;c[k+4>>2]=e;e=b+28|0;k=b+36|0;b=f;d=1;n=124;while(1){p=d-1|0;o=c[m>>2]|0;q=c[o+(p<<3)>>2]|0;r=c[o+(p<<3)+4>>2]|0;if((p|0)>(n|0)){s=c[h>>2]|0;t=s<<1;do{if((s|0)<(t|0)){if((c[e>>2]|0)>=(t|0)){u=o;break}if((t|0)==0){v=0;w=s}else{x=zv(s<<4,16)|0;v=x;w=c[h>>2]|0}if((w|0)>0){x=0;do{y=v+(x<<3)|0;if((y|0)!=0){z=(c[m>>2]|0)+(x<<3)|0;A=y;y=c[z+4>>2]|0;c[A>>2]=c[z>>2];c[A+4>>2]=y}x=x+1|0;}while((x|0)<(w|0))}x=c[m>>2]|0;if((x|0)!=0){if((a[k]&1)!=0){zw(x)}c[m>>2]=0}a[k]=1;c[m>>2]=v;c[e>>2]=t;u=v}else{u=o}}while(0);c[h>>2]=t;B=t-4|0;C=u}else{B=n;C=o}do{if((q|0)==(r|0)){s=q+40|0;if((c[s>>2]|0)==0){D=p;break}i=q+36|0;j=C+(p<<3)|0;l=c[i>>2]|0;c[j>>2]=l;c[j+4>>2]=l;l=(c[m>>2]|0)+(d<<3)|0;j=c[s>>2]|0;c[l>>2]=j;c[l+4>>2]=j;j=(c[m>>2]|0)+(d+1<<3)|0;l=c[s>>2]|0;c[j>>2]=c[i>>2];c[j+4>>2]=l;D=d+2|0}else{if(+g[q>>2]>+g[r+16>>2]){D=p;break}if(+g[q+16>>2]<+g[r>>2]){D=p;break}if(+g[q+4>>2]>+g[r+20>>2]){D=p;break}if(+g[q+20>>2]<+g[r+4>>2]){D=p;break}if(+g[q+8>>2]>+g[r+24>>2]){D=p;break}if(+g[q+24>>2]<+g[r+8>>2]){D=p;break}l=q+40|0;j=r+40|0;i=(c[j>>2]|0)!=0;if((c[l>>2]|0)==0){if(i){s=C+(p<<3)|0;x=q;y=0;A=c[r+36>>2]|y;c[s>>2]=x;c[s+4>>2]=A;A=(c[m>>2]|0)+(d<<3)|0;s=c[j>>2]|y;c[A>>2]=x;c[A+4>>2]=s;D=d+1|0;break}else{hF[c[(c[b>>2]|0)+8>>2]&255](f,q,r);D=p;break}}else{s=C+(p<<3)|0;A=q+36|0;x=c[A>>2]|0;if(i){i=r+36|0;y=s;z=c[i>>2]|0;c[y>>2]=x;c[y+4>>2]=z;z=(c[m>>2]|0)+(d<<3)|0;y=c[i>>2]|0;c[z>>2]=c[l>>2];c[z+4>>2]=y;y=(c[m>>2]|0)+(d+1<<3)|0;z=c[j>>2]|0;c[y>>2]=c[A>>2];c[y+4>>2]=z;z=(c[m>>2]|0)+(d+2<<3)|0;y=c[j>>2]|0;c[z>>2]=c[l>>2];c[z+4>>2]=y;D=d+3|0;break}else{y=s;s=0;z=r;c[y>>2]=x|s;c[y+4>>2]=z;y=(c[m>>2]|0)+(d<<3)|0;c[y>>2]=c[l>>2]|s;c[y+4>>2]=z;D=d+1|0;break}}}}while(0);if((D|0)==0){break}else{d=D;n=B}}return}function qe(a,b){a=a|0;b=b|0;qf(a,b);qg(a,b);return}function qf(b,d){b=b|0;d=d|0;var e=0,f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0;e=i;i=i+48|0;f=e|0;h=e+32|0;j=b+4|0;k=j|0;pQ(k,((ag(c[b+152>>2]|0,c[b+16>>2]|0)|0)/100|0)+1|0);l=b+164|0;if((c[l>>2]|0)!=0){m=((ag(c[b+148>>2]|0,c[b+76>>2]|0)|0)/100|0)+1|0;pQ(b+64|0,m);n=(c[l>>2]|0)-m|0;c[l>>2]=(n|0)<0?0:n}n=b+144|0;m=((c[n>>2]|0)+1|0)%2|0;c[n>>2]=m;n=c[b+124+(m<<2)>>2]|0;if((n|0)!=0){m=b+132|0;o=f;p=f+16|0;q=b+64|0;r=n;while(1){n=r+56|0;s=c[n>>2]|0;t=r+60|0;u=r+52|0;v=c[u>>2]|0;if((v|0)==0){c[b+124+(c[t>>2]<<2)>>2]=s}else{c[v+56>>2]=s}v=c[n>>2]|0;if((v|0)!=0){c[v+52>>2]=c[u>>2]}c[u>>2]=0;c[n>>2]=c[m>>2];n=c[m>>2]|0;if((n|0)!=0){c[n+52>>2]=r}c[m>>2]=r;n=r+48|0;pW(k,c[n>>2]|0);u=r+16|0;c[o>>2]=c[u>>2];c[o+4>>2]=c[u+4>>2];c[o+8>>2]=c[u+8>>2];c[o+12>>2]=c[u+12>>2];u=r+32|0;c[p>>2]=c[u>>2];c[p+4>>2]=c[u+4>>2];c[p+8>>2]=c[u+8>>2];c[p+12>>2]=c[u+12>>2];c[n>>2]=pR(q,f,r)|0;c[t>>2]=2;if((s|0)==0){break}else{r=s}}c[l>>2]=c[b+76>>2];a[b+194|0]=1}c[h>>2]=33368;c[h+4>>2]=b;l=b+193|0;r=a[l]|0;if((r&1)==0){w=r}else{qd(k,c[j>>2]|0,c[b+64>>2]|0,h|0);w=a[l]|0}if((w&1)!=0){w=c[j>>2]|0;qd(k,w,w,h|0)}h=b+194|0;do{if((a[h]&1)!=0){w=b+136|0;k=c[w>>2]|0;j=g3[c[(c[k>>2]|0)+28>>2]&511](k)|0;k=j+4|0;l=c[k>>2]|0;if((l|0)<=0){break}r=(ag(c[b+156>>2]|0,l)|0)/100|0;f=c[b+160>>2]|0;q=(f|0)>(r|0)?f:r;r=(l|0)<(q|0)?l:q;q=b+184|0;if((r|0)>0){f=j+12|0;j=r;p=0;o=l;while(1){m=((c[q>>2]|0)+p|0)%(o|0)|0;s=c[f>>2]|0;t=c[s+(m<<4)>>2]|0;n=c[s+(m<<4)+4>>2]|0;m=c[t+48>>2]|0;s=c[n+48>>2]|0;do{if(+g[m>>2]>+g[s+16>>2]){x=33}else{if(+g[m+16>>2]<+g[s>>2]){x=33;break}if(+g[m+4>>2]>+g[s+20>>2]){x=33;break}if(+g[m+20>>2]<+g[s+4>>2]){x=33;break}if(+g[m+8>>2]>+g[s+24>>2]){x=33;break}if(+g[m+24>>2]<+g[s+8>>2]){x=33}else{y=p;z=j}}}while(0);if((x|0)==33){x=0;s=c[w>>2]|0;hD[c[(c[s>>2]|0)+12>>2]&63](s|0,t,n,d)|0;y=p-1|0;z=j-1|0}s=y+1|0;m=c[k>>2]|0;if((s|0)<(z|0)){j=z;p=s;o=m}else{A=z;B=m;break}}}else{A=r;B=l}if((B|0)>0){c[q>>2]=((c[q>>2]|0)+A|0)%(B|0)|0;break}else{c[q>>2]=0;break}}}while(0);B=b+180|0;c[B>>2]=(c[B>>2]|0)+1;c[b+160>>2]=1;a[h]=0;h=b+168|0;B=c[h>>2]|0;if((B|0)==0){g[b+176>>2]=0.0;C=c[b+172>>2]|0;D=b+172|0;E=C>>>1;c[D>>2]=E;F=B>>>1;c[h>>2]=F;i=e;return}else{A=c[b+172>>2]|0;g[b+176>>2]=+(A>>>0>>>0)/+(B>>>0>>>0);C=A;D=b+172|0;E=C>>>1;c[D>>2]=E;F=B>>>1;c[h>>2]=F;i=e;return}}function qg(b,d){b=b|0;d=d|0;var e=0,f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;e=i;i=i+16|0;f=e+8|0;h=b+136|0;b=c[h>>2]|0;if(!(g3[c[(c[b>>2]|0)+56>>2]&511](b)|0)){i=e;return}b=c[h>>2]|0;j=g3[c[(c[b>>2]|0)+28>>2]&511](b)|0;b=j+4|0;k=c[b>>2]|0;if((k|0)>1){pg(j,e|0,0,k-1|0);l=0;m=0;n=0;o=0;p=4}else{q=0;r=0;s=0;t=0;u=k}while(1){if((p|0)==4){p=0;q=l;r=m;s=n;t=o;u=c[b>>2]|0}if((r|0)>=(u|0)){break}k=c[j+12>>2]|0;v=k+(r<<4)|0;w=v|0;x=c[w>>2]|0;y=k+(r<<4)+4|0;k=c[y>>2]|0;if((x|0)==(s|0)){if((k|0)==(t|0)){z=s;A=t;p=14}else{B=s;p=8}}else{B=x;p=8}do{if((p|0)==8){p=0;x=c[B+48>>2]|0;C=c[k+48>>2]|0;if(+g[x>>2]>+g[C+16>>2]){z=B;A=k;p=14;break}if(+g[x+16>>2]<+g[C>>2]){z=B;A=k;p=14;break}if(+g[x+4>>2]>+g[C+20>>2]){z=B;A=k;p=14;break}if(+g[x+20>>2]<+g[C+4>>2]){z=B;A=k;p=14;break}if(+g[x+8>>2]>+g[C+24>>2]){z=B;A=k;p=14;break}if(+g[x+24>>2]<+g[C+8>>2]){z=B;A=k;p=14}else{D=q;E=B;F=k}}}while(0);if((p|0)==14){p=0;k=c[h>>2]|0;hF[c[(c[k>>2]|0)+32>>2]&255](k,v,d);c[w>>2]=0;c[y>>2]=0;D=q+1|0;E=z;F=A}l=D;m=r+1|0;n=E;o=F;p=4}if((u|0)>1){pg(j,f,0,u-1|0);G=c[b>>2]|0}else{G=u}u=G-q|0;if((q|0)<0){f=j+8|0;if((c[f>>2]|0)<(u|0)){if((G|0)==(q|0)){H=0;I=q}else{q=zv(u<<4,16)|0;H=q;I=c[b>>2]|0}q=j+12|0;if((I|0)>0){p=0;do{F=c[q>>2]|0;c[H+(p<<4)>>2]=c[F+(p<<4)>>2];c[H+(p<<4)+4>>2]=c[F+(p<<4)+4>>2];c[H+(p<<4)+8>>2]=c[F+(p<<4)+8>>2];c[H+(p<<4)+12>>2]=c[F+(p<<4)+12>>2];p=p+1|0;}while((p|0)<(I|0))}I=c[q>>2]|0;p=j+16|0;if((I|0)!=0){if((a[p]&1)!=0){zw(I)}c[q>>2]=0}a[p]=1;c[q>>2]=H;c[f>>2]=u;J=q}else{J=j+12|0}j=G;while(1){G=j+1|0;K1((c[J>>2]|0)+(j<<4)|0,0,16)|0;if((G|0)<(u|0)){j=G}else{break}}}c[b>>2]=u;i=e;return}function qh(a){a=a|0;return c[a+136>>2]|0}function qi(a){a=a|0;return c[a+136>>2]|0}function qj(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,h=0.0,i=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0;e=c[a+4>>2]|0;f=c[a+64>>2]|0;a=(f|0)==0;do{if((e|0)==0){if(a){h=0.0;i=0.0;j=0.0;k=0.0;l=0.0;m=0.0;n=0.0;o=0.0;break}h=+g[f>>2];i=+g[f+4>>2];j=+g[f+8>>2];k=+g[f+12>>2];l=+g[f+16>>2];m=+g[f+20>>2];n=+g[f+24>>2];o=+g[f+28>>2]}else{p=+g[e>>2];if(a){h=p;i=+g[e+4>>2];j=+g[e+8>>2];k=+g[e+12>>2];l=+g[e+16>>2];m=+g[e+20>>2];n=+g[e+24>>2];o=+g[e+28>>2];break}else{q=+g[f>>2];r=+g[e+16>>2];s=+g[f+16>>2];t=+g[e+4>>2];u=+g[f+4>>2];v=+g[e+20>>2];w=+g[f+20>>2];x=+g[e+8>>2];y=+g[f+8>>2];z=+g[e+24>>2];A=+g[f+24>>2];h=p<q?p:q;i=t<u?t:u;j=x<y?x:y;k=0.0;l=r>s?r:s;m=v>w?v:w;n=z>A?z:A;o=0.0;break}}}while(0);g[b>>2]=h;g[b+4>>2]=i;g[b+8>>2]=j;g[b+12>>2]=k;g[d>>2]=l;g[d+4>>2]=m;g[d+8>>2]=n;g[d+12>>2]=o;return}function qk(b,d){b=b|0;d=d|0;if((c[b+16>>2]|0)!=(-(c[b+76>>2]|0)|0)){return}pO(b+4|0);pO(b+64|0);a[b+193|0]=0;a[b+194|0]=1;c[b+144>>2]=0;c[b+164>>2]=0;c[b+148>>2]=1;c[b+152>>2]=0;c[b+156>>2]=10;c[b+160>>2]=1;K1(b+124|0,0,12)|0;K1(b+168|0,0,24)|0;return}function ql(a){a=a|0;return}function qm(a){a=a|0;KU(a);return}function qn(a,b){a=a|0;b=b|0;var d=0;d=c[a+4>>2]|0;hx[c[(c[d>>2]|0)+8>>2]&127](d,c[b+36>>2]|0)|0;return}function qo(a){a=a|0;KU(a);return}function qp(a,b){a=a|0;b=b|0;var d=0;d=c[a+4>>2]|0;hx[c[(c[d>>2]|0)+8>>2]&127](d|0,c[b+36>>2]|0)|0;return}function qq(a){a=a|0;KU(a);return}function qr(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;if((b|0)==(d|0)){return}e=a+4|0;a=c[(c[e>>2]|0)+136>>2]|0;hd[c[(c[a>>2]|0)+8>>2]&127](a|0,c[b+36>>2]|0,c[d+36>>2]|0)|0;d=(c[e>>2]|0)+160|0;c[d>>2]=(c[d>>2]|0)+1;return}function qs(a,b){a=a|0;b=b|0;hF[c[(c[a>>2]|0)+8>>2]&255](a,b,c[(c[a+8>>2]|0)+48>>2]|0);return}function qt(a){a=a|0;return}function qu(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0;c[b>>2]=31336;d=b+20|0;a[d]=1;e=b+16|0;c[e>>2]=0;f=b+8|0;c[f>>2]=0;g=b+12|0;c[g>>2]=0;c[b+24>>2]=0;a[b+28|0]=0;a[b+48|0]=1;c[b+44>>2]=0;c[b+36>>2]=0;c[b+40>>2]=0;a[b+68|0]=1;c[b+64>>2]=0;c[b+56>>2]=0;c[b+60>>2]=0;c[b+72>>2]=0;h=zv(32,16)|0;i=c[f>>2]|0;if((i|0)>0){f=0;do{j=c[e>>2]|0;c[h+(f<<4)>>2]=c[j+(f<<4)>>2];c[h+(f<<4)+4>>2]=c[j+(f<<4)+4>>2];c[h+(f<<4)+8>>2]=c[j+(f<<4)+8>>2];c[h+(f<<4)+12>>2]=c[j+(f<<4)+12>>2];f=f+1|0;}while((f|0)<(i|0))}i=c[e>>2]|0;if((i|0)!=0){if((a[d]&1)!=0){zw(i)}c[e>>2]=0}a[d]=1;c[e>>2]=h;c[g>>2]=2;qv(b);return}function qv(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;d=b+12|0;e=c[d>>2]|0;f=b+36|0;g=c[f>>2]|0;if((g|0)>=(e|0)){return}if((g|0)<=(e|0)){h=b+40|0;if((c[h>>2]|0)<(e|0)){if((e|0)==0){i=0;j=g}else{k=zv(e<<2,16)|0;i=k;j=c[f>>2]|0}k=b+44|0;if((j|0)>0){l=0;do{m=i+(l<<2)|0;if((m|0)!=0){c[m>>2]=c[(c[k>>2]|0)+(l<<2)>>2]}l=l+1|0;}while((l|0)<(j|0))}j=c[k>>2]|0;l=b+48|0;if((j|0)!=0){if((a[l]&1)!=0){zw(j)}c[k>>2]=0}a[l]=1;c[k>>2]=i;c[h>>2]=e;n=k}else{n=b+44|0}k=g;do{h=(c[n>>2]|0)+(k<<2)|0;if((h|0)!=0){c[h>>2]=0}k=k+1|0;}while((k|0)<(e|0))}c[f>>2]=e;f=b+56|0;k=c[f>>2]|0;if((k|0)<(e|0)){n=b+60|0;if((c[n>>2]|0)<(e|0)){if((e|0)==0){o=0;p=k}else{h=zv(e<<2,16)|0;o=h;p=c[f>>2]|0}h=b+64|0;if((p|0)>0){i=0;do{l=o+(i<<2)|0;if((l|0)!=0){c[l>>2]=c[(c[h>>2]|0)+(i<<2)>>2]}i=i+1|0;}while((i|0)<(p|0))}p=c[h>>2]|0;i=b+68|0;if((p|0)!=0){if((a[i]&1)!=0){zw(p)}c[h>>2]=0}a[i]=1;c[h>>2]=o;c[n>>2]=e;q=h}else{q=b+64|0}h=k;do{k=(c[q>>2]|0)+(h<<2)|0;if((k|0)!=0){c[k>>2]=0}h=h+1|0;}while((h|0)<(e|0))}c[f>>2]=e;f=(e|0)>0;do{if(f){h=b+44|0;q=0;do{c[(c[h>>2]|0)+(q<<2)>>2]=-1;q=q+1|0;}while((q|0)<(e|0));if(!f){break}q=b+64|0;h=0;do{c[(c[q>>2]|0)+(h<<2)>>2]=-1;h=h+1|0;}while((h|0)<(e|0))}}while(0);if((g|0)<=0){return}e=b+16|0;f=b+44|0;h=b+64|0;b=0;do{q=c[e>>2]|0;k=c[(c[q+(b<<4)+4>>2]|0)+12>>2]<<16|c[(c[q+(b<<4)>>2]|0)+12>>2];q=k+~(k<<15)|0;k=(q>>10^q)*9|0;q=k>>6^k;k=q+~(q<<11)|0;q=(k>>16^k)&(c[d>>2]|0)-1;c[(c[h>>2]|0)+(b<<2)>>2]=c[(c[f>>2]|0)+(q<<2)>>2];c[(c[f>>2]|0)+(q<<2)>>2]=b;b=b+1|0;}while((b|0)<(g|0));return}function qw(a){a=a|0;qx(a);KU(a);return}function qx(b){b=b|0;var d=0,e=0,f=0,g=0,h=0;c[b>>2]=31336;d=b+56|0;e=b+64|0;f=c[e>>2]|0;g=b+68|0;if((f|0)!=0){if((a[g]&1)!=0){zw(f)}c[e>>2]=0}a[g]=1;c[e>>2]=0;c[d>>2]=0;c[b+60>>2]=0;d=b+36|0;e=b+44|0;g=c[e>>2]|0;f=b+48|0;if((g|0)!=0){if((a[f]&1)!=0){zw(g)}c[e>>2]=0}a[f]=1;c[e>>2]=0;c[d>>2]=0;c[b+40>>2]=0;d=b+8|0;e=b+16|0;f=c[e>>2]|0;g=b+20|0;if((f|0)==0){a[g]=1;c[e>>2]=0;c[d>>2]=0;h=b+12|0;c[h>>2]=0;return}if((a[g]&1)!=0){zw(f)}c[e>>2]=0;a[g]=1;c[e>>2]=0;c[d>>2]=0;h=b+12|0;c[h>>2]=0;return}function qy(a,b,d){a=a|0;b=b|0;d=d|0;a=b+8|0;b=c[a>>2]|0;if((b|0)==0){return}g$[c[c[b>>2]>>2]&1023](b);g0[c[(c[d>>2]|0)+60>>2]&511](d,c[a>>2]|0);c[a>>2]=0;return}function qz(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=i;i=i+16|0;f=e|0;c[f>>2]=26952;c[f+4>>2]=b;c[f+8>>2]=a;c[f+12>>2]=d;hF[c[(c[a>>2]|0)+48>>2]&255](a,f|0,d);i=e;return}function qA(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=i;i=i+8|0;f=e|0;c[f>>2]=26920;c[f+4>>2]=b;hF[c[(c[a>>2]|0)+48>>2]&255](a,f|0,d);i=e;return}function qB(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;c[12474]=(c[12474]|0)+1;e=(c[b+12>>2]|0)>(c[d+12>>2]|0);f=c[(e?d:b)+12>>2]|0;g=c[(e?b:d)+12>>2]|0;d=g<<16|f;b=d+~(d<<15)|0;d=(b>>10^b)*9|0;b=d>>6^d;d=b+~(b<<11)|0;b=(d>>16^d)&(c[a+12>>2]|0)-1;if((b|0)>=(c[a+36>>2]|0)){h=0;return h|0}d=c[(c[a+44>>2]|0)+(b<<2)>>2]|0;if((d|0)==-1){h=0;return h|0}b=c[a+16>>2]|0;e=a+64|0;a=d;while(1){if((c[(c[b+(a<<4)>>2]|0)+12>>2]|0)==(f|0)){if((c[(c[b+(a<<4)+4>>2]|0)+12>>2]|0)==(g|0)){break}}d=c[(c[e>>2]|0)+(a<<2)>>2]|0;if((d|0)==-1){h=0;i=9;break}else{a=d}}if((i|0)==9){return h|0}h=b+(a<<4)|0;return h|0}function qC(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;e=(c[b+12>>2]|0)>(c[d+12>>2]|0);f=e?d:b;g=e?b:d;d=f+12|0;b=c[d>>2]|0;e=g+12|0;h=c[e>>2]|0;i=h<<16|b;j=i+~(i<<15)|0;i=(j>>10^j)*9|0;j=i>>6^i;i=j+~(j<<11)|0;j=i>>16^i;i=a+4|0;k=a+12|0;l=c[k>>2]|0;m=j&l-1;n=a+44|0;o=c[(c[n>>2]|0)+(m<<2)>>2]|0;L1:do{if((o|0)!=-1){p=c[a+16>>2]|0;q=a+64|0;r=o;while(1){if((c[(c[p+(r<<4)>>2]|0)+12>>2]|0)==(b|0)){if((c[(c[p+(r<<4)+4>>2]|0)+12>>2]|0)==(h|0)){break}}s=c[(c[q>>2]|0)+(r<<2)>>2]|0;if((s|0)==-1){break L1}else{r=s}}q=p+(r<<4)|0;if((q|0)==0){break}else{t=q}return t|0}}while(0);h=c[a+8>>2]|0;b=qD(i)|0;i=c[a+72>>2]|0;if((i|0)!=0){hd[c[(c[i>>2]|0)+8>>2]&127](i,f,g)|0}if((l|0)<(c[k>>2]|0)){qv(a);u=(c[k>>2]|0)-1&j}else{u=m}m=b|0;if((c[d>>2]|0)<(c[e>>2]|0)){c[m>>2]=f;c[b+4>>2]=g}else{c[m>>2]=g;c[b+4>>2]=f}f=b+8|0;c[f>>2]=0;c[f+4>>2]=0;c[(c[a+64>>2]|0)+(h<<2)>>2]=c[(c[n>>2]|0)+(u<<2)>>2];c[(c[n>>2]|0)+(u<<2)>>2]=h;t=b;return t|0}function qD(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;d=b+4|0;e=c[d>>2]|0;f=b+8|0;do{if((e|0)==(c[f>>2]|0)){g=(e|0)==0?1:e<<1;if((e|0)>=(g|0)){h=e;break}if((g|0)==0){i=0;j=e}else{k=zv(g<<4,16)|0;i=k;j=c[d>>2]|0}k=b+12|0;if((j|0)>0){l=0;do{m=c[k>>2]|0;c[i+(l<<4)>>2]=c[m+(l<<4)>>2];c[i+(l<<4)+4>>2]=c[m+(l<<4)+4>>2];c[i+(l<<4)+8>>2]=c[m+(l<<4)+8>>2];c[i+(l<<4)+12>>2]=c[m+(l<<4)+12>>2];l=l+1|0;}while((l|0)<(j|0))}l=c[k>>2]|0;m=b+16|0;if((l|0)!=0){if((a[m]&1)!=0){zw(l)}c[k>>2]=0}a[m]=1;c[k>>2]=i;c[f>>2]=g;h=c[d>>2]|0}else{h=e}}while(0);c[d>>2]=h+1;return(c[b+12>>2]|0)+(e<<4)|0}function qE(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;c[12456]=(c[12456]|0)+1;f=(c[b+12>>2]|0)>(c[d+12>>2]|0);g=f?d:b;h=f?b:d;d=c[g+12>>2]|0;b=c[h+12>>2]|0;f=b<<16|d;i=f+~(f<<15)|0;f=(i>>10^i)*9|0;i=f>>6^f;f=i+~(i<<11)|0;i=a+12|0;j=(f>>16^f)&(c[i>>2]|0)-1;f=a+44|0;k=c[(c[f>>2]|0)+(j<<2)>>2]|0;if((k|0)==-1){l=0;return l|0}m=a+16|0;n=c[m>>2]|0;o=a+64|0;p=k;while(1){if((c[(c[n+(p<<4)>>2]|0)+12>>2]|0)==(d|0)){if((c[(c[n+(p<<4)+4>>2]|0)+12>>2]|0)==(b|0)){break}}k=c[(c[o>>2]|0)+(p<<2)>>2]|0;if((k|0)==-1){l=0;q=29;break}else{p=k}}if((q|0)==29){return l|0}b=n+(p<<4)|0;if((b|0)==0){l=0;return l|0}hF[c[(c[a>>2]|0)+32>>2]&255](a,b,e);d=c[n+(p<<4)+12>>2]|0;p=b-(c[m>>2]|0)>>4;b=(c[f>>2]|0)+(j<<2)|0;j=c[b>>2]|0;n=c[o>>2]|0;do{if((j|0)==(p|0)){r=c[n+(p<<2)>>2]|0;q=12}else{k=j;while(1){s=c[n+(k<<2)>>2]|0;if((s|0)==(p|0)){break}else{k=s}}s=c[n+(p<<2)>>2]|0;if((k|0)==-1){r=s;q=12;break}c[n+(k<<2)>>2]=s}}while(0);if((q|0)==12){c[b>>2]=r}r=a+8|0;b=(c[r>>2]|0)-1|0;n=c[a+72>>2]|0;if((n|0)!=0){hD[c[(c[n>>2]|0)+12>>2]&63](n,g,h,e)|0}if((b|0)==(p|0)){c[r>>2]=(c[r>>2]|0)-1;l=d;return l|0}e=c[m>>2]|0;h=c[(c[e+(b<<4)+4>>2]|0)+12>>2]<<16|c[(c[e+(b<<4)>>2]|0)+12>>2];e=h+~(h<<15)|0;h=(e>>10^e)*9|0;e=h>>6^h;h=e+~(e<<11)|0;e=(h>>16^h)&(c[i>>2]|0)-1;i=(c[f>>2]|0)+(e<<2)|0;h=c[i>>2]|0;g=c[o>>2]|0;do{if((h|0)==(b|0)){t=c[g+(b<<2)>>2]|0;q=22}else{n=h;while(1){a=c[g+(n<<2)>>2]|0;if((a|0)==(b|0)){break}else{n=a}}k=c[g+(b<<2)>>2]|0;if((n|0)==-1){t=k;q=22;break}c[g+(n<<2)>>2]=k}}while(0);if((q|0)==22){c[i>>2]=t}t=c[m>>2]|0;m=t+(p<<4)|0;i=t+(b<<4)|0;c[m>>2]=c[i>>2];c[m+4>>2]=c[i+4>>2];c[m+8>>2]=c[i+8>>2];c[m+12>>2]=c[i+12>>2];c[(c[o>>2]|0)+(p<<2)>>2]=c[(c[f>>2]|0)+(e<<2)>>2];c[(c[f>>2]|0)+(e<<2)>>2]=p;c[r>>2]=(c[r>>2]|0)-1;l=d;return l|0}function qF(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;e=a+8|0;if((c[e>>2]|0)<=0){return}f=a+16|0;g=b;h=a;i=0;L4:while(1){while(1){j=c[f>>2]|0;k=j+(i<<4)|0;if(!(hx[c[(c[g>>2]|0)+8>>2]&127](b,k)|0)){break}hD[c[(c[h>>2]|0)+12>>2]&63](a,c[k>>2]|0,c[j+(i<<4)+4>>2]|0,d)|0;c[12458]=(c[12458]|0)-1;if((i|0)>=(c[e>>2]|0)){l=8;break L4}}j=i+1|0;if((j|0)<(c[e>>2]|0)){i=j}else{l=9;break}}if((l|0)==9){return}else if((l|0)==8){return}}function qG(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0;e=i;i=i+32|0;f=e|0;g=e+24|0;h=f+16|0;a[h]=1;j=f+12|0;c[j>>2]=0;k=f+4|0;c[k>>2]=0;l=f+8|0;c[l>>2]=0;m=b+8|0;do{if((c[m>>2]|0)>0){n=b+16|0;o=0;p=0;q=0;while(1){r=c[n>>2]|0;do{if((p|0)==(q|0)){s=(q|0)==0?1:q<<1;if((q|0)>=(s|0)){t=q;break}if((s|0)==0){u=0;v=q}else{w=zv(s<<4,16)|0;u=w;v=c[k>>2]|0}if((v|0)>0){w=0;do{x=c[j>>2]|0;c[u+(w<<4)>>2]=c[x+(w<<4)>>2];c[u+(w<<4)+4>>2]=c[x+(w<<4)+4>>2];c[u+(w<<4)+8>>2]=c[x+(w<<4)+8>>2];c[u+(w<<4)+12>>2]=c[x+(w<<4)+12>>2];w=w+1|0;}while((w|0)<(v|0))}w=c[j>>2]|0;if((w|0)!=0){if((a[h]&1)!=0){zw(w)}c[j>>2]=0}a[h]=1;c[j>>2]=u;c[l>>2]=s;t=c[k>>2]|0}else{t=p}}while(0);w=c[j>>2]|0;c[w+(t<<4)>>2]=c[r+(o<<4)>>2];c[w+(t<<4)+4>>2]=c[r+(o<<4)+4>>2];c[w+(t<<4)+8>>2]=c[r+(o<<4)+8>>2];c[w+(t<<4)+12>>2]=c[r+(o<<4)+12>>2];y=(c[k>>2]|0)+1|0;c[k>>2]=y;w=o+1|0;if((w|0)>=(c[m>>2]|0)){break}o=w;p=y;q=c[l>>2]|0}if((y|0)<=0){z=y;break}q=b;p=0;while(1){o=c[j>>2]|0;hD[c[(c[q>>2]|0)+12>>2]&63](b,c[o+(p<<4)>>2]|0,c[o+(p<<4)+4>>2]|0,d)|0;o=p+1|0;n=c[k>>2]|0;if((o|0)<(n|0)){p=o}else{z=n;break}}}else{z=0}}while(0);d=b+56|0;if((c[d>>2]|0)>0){y=b+64|0;l=0;do{c[(c[y>>2]|0)+(l<<2)>>2]=-1;l=l+1|0;}while((l|0)<(c[d>>2]|0));A=c[k>>2]|0}else{A=z}if((A|0)>1){pg(f,g,0,A-1|0);B=c[k>>2]|0}else{B=A}if((B|0)>0){B=b;A=0;do{g=c[j>>2]|0;hd[c[(c[B>>2]|0)+8>>2]&127](b,c[g+(A<<4)>>2]|0,c[g+(A<<4)+4>>2]|0)|0;A=A+1|0;}while((A|0)<(c[k>>2]|0))}k=c[j>>2]|0;if((k|0)==0){i=e;return}if((a[h]&1)!=0){zw(k)}c[j>>2]=0;i=e;return}function qH(a,d,e){a=a|0;d=d|0;e=e|0;var f=0,g=0;c[12486]=(c[12486]|0)+1;f=c[a+24>>2]|0;do{if((f|0)==0){if((b[e+6>>1]&b[d+4>>1])<<16>>16==0){g=0;return g|0}if((b[d+6>>1]&b[e+4>>1])<<16>>16==0){g=0}else{break}return g|0}else{if(hd[c[(c[f>>2]|0)+8>>2]&127](f,d,e)|0){break}else{g=0}return g|0}}while(0);g=qC(a,d,e)|0;return g|0}function qI(a){a=a|0;return c[a+16>>2]|0}function qJ(a){a=a|0;return c[a+16>>2]|0}function qK(a){a=a|0;return a+4|0}function qL(a){a=a|0;return c[a+8>>2]|0}function qM(a,b){a=a|0;b=b|0;c[a+24>>2]=b;return}function qN(a){a=a|0;return 0}function qO(a,b){a=a|0;b=b|0;c[a+72>>2]=b;return}function qP(a){a=a|0;return}function qQ(a){a=a|0;KU(a);return}function qR(a,b){a=a|0;b=b|0;var d=0,e=0;d=c[a+4>>2]|0;if((c[b>>2]|0)==(d|0)){e=1;return e|0}e=(c[b+4>>2]|0)==(d|0);return e|0}function qS(a){a=a|0;return}function qT(a){a=a|0;KU(a);return}function qU(a,b){a=a|0;b=b|0;var d=0;d=c[a+4>>2]|0;do{if((c[b>>2]|0)!=(d|0)){if((c[b+4>>2]|0)==(d|0)){break}return 0}}while(0);d=c[a+8>>2]|0;hF[c[(c[d>>2]|0)+32>>2]&255](d,b,c[a+12>>2]|0);return 0}function qV(b){b=b|0;c[b>>2]=34736;c[b+52>>2]=281;a[b+60|0]=0;a[b+80|0]=1;c[b+76>>2]=0;c[b+68>>2]=0;c[b+72>>2]=0;a[b+100|0]=1;c[b+96>>2]=0;c[b+88>>2]=0;c[b+92>>2]=0;a[b+120|0]=1;c[b+116>>2]=0;c[b+108>>2]=0;c[b+112>>2]=0;a[b+140|0]=1;c[b+136>>2]=0;c[b+128>>2]=0;c[b+132>>2]=0;c[b+144>>2]=0;a[b+164|0]=1;c[b+160>>2]=0;c[b+152>>2]=0;c[b+156>>2]=0;c[b+168>>2]=0;g[b+4>>2]=-3.4028234663852886e+38;g[b+8>>2]=-3.4028234663852886e+38;g[b+12>>2]=-3.4028234663852886e+38;g[b+16>>2]=0.0;g[b+20>>2]=3.4028234663852886e+38;g[b+24>>2]=3.4028234663852886e+38;g[b+28>>2]=3.4028234663852886e+38;g[b+32>>2]=0.0;return}function qW(d,f,h){d=d|0;f=f|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0.0,v=0.0,w=0,x=0.0,y=0.0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0;j=i;i=i+32|0;k=j|0;l=j+16|0;m=d+56|0;n=c[m>>2]|0;if((h-f|0)==1){if((a[d+60|0]&1)==0){K2((c[d+96>>2]|0)+(n<<6)|0,(c[d+76>>2]|0)+(f<<6)|0,64)|0}else{o=(c[d+136>>2]|0)+(n<<4)|0;p=(c[d+116>>2]|0)+(f<<4)|0;c[o>>2]=c[p>>2];c[o+4>>2]=c[p+4>>2];c[o+8>>2]=c[p+8>>2];c[o+12>>2]=c[p+12>>2]}c[m>>2]=(c[m>>2]|0)+1;i=j;return}p=q$(d,f,h,q_(d,f,h)|0)|0;o=c[m>>2]|0;q=d+20|0;r=d+60|0;if((a[r]&1)==0){s=(c[d+96>>2]|0)+(o<<6)|0;t=q;c[s>>2]=c[t>>2];c[s+4>>2]=c[t+4>>2];c[s+8>>2]=c[t+8>>2];c[s+12>>2]=c[t+12>>2]}else{t=c[d+136>>2]|0;u=(+g[d+24>>2]- +g[d+8>>2])*+g[d+40>>2];v=(+g[d+28>>2]- +g[d+12>>2])*+g[d+44>>2];b[t+(o<<4)>>1]=~~((+g[q>>2]- +g[d+4>>2])*+g[d+36>>2])&-2;b[t+(o<<4)+2>>1]=~~u&-2;b[t+(o<<4)+4>>1]=~~v&-2}t=c[m>>2]|0;q=d+4|0;if((a[r]&1)==0){s=(c[d+96>>2]|0)+(t<<6)+16|0;w=q;c[s>>2]=c[w>>2];c[s+4>>2]=c[w+4>>2];c[s+8>>2]=c[w+8>>2];c[s+12>>2]=c[w+12>>2]}else{w=c[d+136>>2]|0;v=+g[q>>2];u=+g[d+8>>2];x=+g[d+12>>2];y=(u-u)*+g[d+40>>2];u=(x-x)*+g[d+44>>2];b[w+(t<<4)+6>>1]=~~((v-v)*+g[d+36>>2]+1.0)|1;b[w+(t<<4)+8>>1]=~~(y+1.0)|1;b[w+(t<<4)+10>>1]=~~(u+1.0)|1}t=c[m>>2]|0;if((f|0)<(h|0)){w=d+76|0;q=k;s=l;z=d+116|0;A=d+36|0;B=d+40|0;C=d+44|0;D=l|0;E=l+4|0;F=l+8|0;G=l+12|0;H=d+4|0;I=d+8|0;J=d+12|0;K=k|0;L=k+4|0;M=k+8|0;N=k+12|0;O=f;P=t;while(1){if((a[r]&1)==0){Q=(c[w>>2]|0)+(O<<6)|0;c[q>>2]=c[Q>>2];c[q+4>>2]=c[Q+4>>2];c[q+8>>2]=c[Q+8>>2];c[q+12>>2]=c[Q+12>>2];Q=(c[w>>2]|0)+(O<<6)+16|0;c[s>>2]=c[Q>>2];c[s+4>>2]=c[Q+4>>2];c[s+8>>2]=c[Q+8>>2];c[s+12>>2]=c[Q+12>>2]}else{Q=c[z>>2]|0;u=+((e[Q+(O<<4)>>1]|0)>>>0)/+g[A>>2];y=+((e[Q+(O<<4)+2>>1]|0)>>>0)/+g[B>>2];v=+((e[Q+(O<<4)+4>>1]|0)>>>0)/+g[C>>2];g[N>>2]=0.0;g[K>>2]=u+ +g[H>>2];g[L>>2]=y+ +g[I>>2];g[M>>2]=v+ +g[J>>2];Q=c[z>>2]|0;v=+((e[Q+(O<<4)+6>>1]|0)>>>0)/+g[A>>2];y=+((e[Q+(O<<4)+8>>1]|0)>>>0)/+g[B>>2];u=+((e[Q+(O<<4)+10>>1]|0)>>>0)/+g[C>>2];g[G>>2]=0.0;g[D>>2]=v+ +g[H>>2];g[E>>2]=y+ +g[I>>2];g[F>>2]=u+ +g[J>>2]}q0(d,P,k,l);Q=O+1|0;R=c[m>>2]|0;if((Q|0)<(h|0)){O=Q;P=R}else{S=R;break}}}else{S=t}t=S+1|0;c[m>>2]=t;qW(d,f,p);f=c[m>>2]|0;qW(d,p,h);h=(c[m>>2]|0)-n|0;n=a[r]|0;do{if((n&1)==0){T=n}else{if((h<<4|0)<=2048){T=n;break}q1(d,t,f);T=a[r]|0}}while(0);if((T&1)==0){c[(c[d+96>>2]|0)+(o<<6)+32>>2]=h;i=j;return}else{c[(c[d+136>>2]|0)+(o<<4)+12>>2]=-h;i=j;return}}function qX(b,c,d,e){b=b|0;c=c|0;d=d|0;e=+e;var f=0.0,h=0.0,i=0.0,j=0.0,k=0.0,l=0.0;f=+g[c>>2]-e;h=+g[c+4>>2]-e;i=+g[c+8>>2]-e;g[b+4>>2]=f;g[b+8>>2]=h;g[b+12>>2]=i;g[b+16>>2]=0.0;j=+g[d>>2]+e;k=+g[d+4>>2]+e;l=+g[d+8>>2]+e;g[b+20>>2]=j;g[b+24>>2]=k;g[b+28>>2]=l;g[b+32>>2]=0.0;g[b+36>>2]=65533.0/(j-f);g[b+40>>2]=65533.0/(k-h);g[b+44>>2]=65533.0/(l-i);g[b+48>>2]=0.0;a[b+60|0]=1;return}function qY(a){a=a|0;qZ(a);zw(a);return}function qZ(b){b=b|0;var d=0,e=0,f=0,g=0,h=0;c[b>>2]=34736;d=b+152|0;e=b+160|0;f=c[e>>2]|0;g=b+164|0;if((f|0)!=0){if((a[g]&1)!=0){zw(f)}c[e>>2]=0}a[g]=1;c[e>>2]=0;c[d>>2]=0;c[b+156>>2]=0;d=b+128|0;e=b+136|0;g=c[e>>2]|0;f=b+140|0;if((g|0)!=0){if((a[f]&1)!=0){zw(g)}c[e>>2]=0}a[f]=1;c[e>>2]=0;c[d>>2]=0;c[b+132>>2]=0;d=b+108|0;e=b+116|0;f=c[e>>2]|0;g=b+120|0;if((f|0)!=0){if((a[g]&1)!=0){zw(f)}c[e>>2]=0}a[g]=1;c[e>>2]=0;c[d>>2]=0;c[b+112>>2]=0;d=b+88|0;e=b+96|0;g=c[e>>2]|0;f=b+100|0;if((g|0)!=0){if((a[f]&1)!=0){zw(g)}c[e>>2]=0}a[f]=1;c[e>>2]=0;c[d>>2]=0;c[b+92>>2]=0;d=b+68|0;e=b+76|0;f=c[e>>2]|0;g=b+80|0;if((f|0)==0){a[g]=1;c[e>>2]=0;c[d>>2]=0;h=b+72|0;c[h>>2]=0;return}if((a[g]&1)!=0){zw(f)}c[e>>2]=0;a[g]=1;c[e>>2]=0;c[d>>2]=0;h=b+72|0;c[h>>2]=0;return}function q_(b,d,f){b=b|0;d=d|0;f=f|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0.0,t=0.0,u=0.0,v=0,w=0,x=0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0,I=0.0,J=0.0,K=0.0,L=0.0,M=0.0,N=0.0,O=0.0,P=0.0,Q=0.0,R=0.0,S=0.0,T=0;h=f-d|0;i=(d|0)<(f|0);do{if(i){j=(a[b+60|0]&1)==0;k=b+76|0;l=b+116|0;m=b+36|0;n=b+40|0;o=b+44|0;p=b+4|0;q=b+8|0;r=b+12|0;s=0.0;t=0.0;u=0.0;v=d;do{if(j){w=c[k>>2]|0;x=c[k>>2]|0;y=+g[x+(v<<6)>>2];z=+g[x+(v<<6)+4>>2];A=+g[x+(v<<6)+8>>2];B=+g[w+(v<<6)+24>>2];C=+g[w+(v<<6)+20>>2];D=+g[w+(v<<6)+16>>2]}else{w=c[l>>2]|0;x=c[l>>2]|0;y=+((e[x+(v<<4)>>1]|0)>>>0)/+g[m>>2]+ +g[p>>2];z=+((e[x+(v<<4)+2>>1]|0)>>>0)/+g[n>>2]+ +g[q>>2];A=+((e[x+(v<<4)+4>>1]|0)>>>0)/+g[o>>2]+ +g[r>>2];B=+((e[w+(v<<4)+10>>1]|0)>>>0)/+g[o>>2]+ +g[r>>2];C=+((e[w+(v<<4)+8>>1]|0)>>>0)/+g[n>>2]+ +g[q>>2];D=+((e[w+(v<<4)+6>>1]|0)>>>0)/+g[m>>2]+ +g[p>>2]}u=u+(D+y)*.5;t=t+(C+z)*.5;s=s+(B+A)*.5;v=v+1|0;}while((v|0)<(f|0));E=+(h|0);F=1.0/E;G=u*F;H=t*F;I=s*F;if(!i){J=0.0;K=0.0;L=0.0;M=E;break}v=b+76|0;p=b+116|0;m=b+36|0;q=b+40|0;n=b+44|0;r=b+4|0;o=b+8|0;l=b+12|0;if((a[b+60|0]&1)==0){F=0.0;N=0.0;O=0.0;k=d;while(1){j=c[v>>2]|0;w=c[v>>2]|0;P=(+g[j+(k<<6)+16>>2]+ +g[w+(k<<6)>>2])*.5-G;Q=(+g[j+(k<<6)+20>>2]+ +g[w+(k<<6)+4>>2])*.5-H;R=(+g[j+(k<<6)+24>>2]+ +g[w+(k<<6)+8>>2])*.5-I;S=O+P*P;P=N+Q*Q;Q=F+R*R;w=k+1|0;if((w|0)<(f|0)){F=Q;N=P;O=S;k=w}else{J=Q;K=P;L=S;M=E;break}}}else{O=0.0;N=0.0;F=0.0;k=d;while(1){v=c[p>>2]|0;w=c[p>>2]|0;s=(+((e[v+(k<<4)+6>>1]|0)>>>0)/+g[m>>2]+ +g[r>>2]+(+((e[w+(k<<4)>>1]|0)>>>0)/+g[m>>2]+ +g[r>>2]))*.5-G;t=(+((e[v+(k<<4)+8>>1]|0)>>>0)/+g[q>>2]+ +g[o>>2]+(+((e[w+(k<<4)+2>>1]|0)>>>0)/+g[q>>2]+ +g[o>>2]))*.5-H;u=(+((e[v+(k<<4)+10>>1]|0)>>>0)/+g[n>>2]+ +g[l>>2]+(+((e[w+(k<<4)+4>>1]|0)>>>0)/+g[n>>2]+ +g[l>>2]))*.5-I;S=F+s*s;s=N+t*t;t=O+u*u;w=k+1|0;if((w|0)<(f|0)){O=t;N=s;F=S;k=w}else{J=t;K=s;L=S;M=E;break}}}}else{J=0.0;K=0.0;L=0.0;M=+(h|0)}}while(0);A=1.0/(M+-1.0);M=L*A;L=K*A;K=J*A;if(M<L){T=L<K?2:1;return T|0}else{T=M<K?2:0;return T|0}return 0}function q$(b,d,f,h){b=b|0;d=d|0;f=f|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0.0,E=0.0,F=0.0,G=0,H=0,I=0.0,J=0.0,K=0.0,L=0.0,M=0.0,N=0.0,O=0.0,P=0.0,Q=0.0,R=0.0,S=0.0,T=0.0,U=0.0,V=0.0,W=0.0,X=0,Y=0,Z=0;j=i;i=i+112|0;k=j|0;l=j+16|0;m=j+80|0;n=j+96|0;o=f-d|0;p=m|0;q=m+4|0;r=m+8|0;s=(d|0)<(f|0);K1(m|0,0,16)|0;if(s){t=(a[b+60|0]&1)==0;u=b+76|0;v=b+116|0;w=b+36|0;x=b+40|0;y=b+44|0;z=b+4|0;A=b+8|0;B=b+12|0;C=d;D=0.0;E=0.0;F=0.0;do{if(t){G=c[u>>2]|0;H=c[u>>2]|0;I=+g[H+(C<<6)>>2];J=+g[H+(C<<6)+4>>2];K=+g[H+(C<<6)+8>>2];L=+g[G+(C<<6)+24>>2];M=+g[G+(C<<6)+20>>2];N=+g[G+(C<<6)+16>>2]}else{G=c[v>>2]|0;H=c[v>>2]|0;I=+((e[H+(C<<4)>>1]|0)>>>0)/+g[w>>2]+ +g[z>>2];J=+((e[H+(C<<4)+2>>1]|0)>>>0)/+g[x>>2]+ +g[A>>2];K=+((e[H+(C<<4)+4>>1]|0)>>>0)/+g[y>>2]+ +g[B>>2];L=+((e[G+(C<<4)+10>>1]|0)>>>0)/+g[y>>2]+ +g[B>>2];M=+((e[G+(C<<4)+8>>1]|0)>>>0)/+g[x>>2]+ +g[A>>2];N=+((e[G+(C<<4)+6>>1]|0)>>>0)/+g[w>>2]+ +g[z>>2]}D=D+(N+I)*.5;E=(M+J)*.5+E;F=(L+K)*.5+F;C=C+1|0;}while((C|0)<(f|0));g[p>>2]=D;g[q>>2]=E;g[r>>2]=F;O=D;P=E;Q=F}else{O=0.0;P=0.0;Q=0.0}F=1.0/+(o|0);g[p>>2]=F*O;g[q>>2]=F*P;g[r>>2]=F*Q;Q=+g[m+(h<<2)>>2];if(s){s=b+60|0;m=b+76|0;r=n|0;q=n+4|0;p=n+8|0;C=n+12|0;z=n+(h<<2)|0;h=k;k=l;l=b+116|0;n=b+36|0;w=b+40|0;A=b+44|0;x=b+4|0;B=b+8|0;y=b+12|0;b=d;v=d;while(1){u=(a[s]&1)==0;if(u){t=c[m>>2]|0;G=c[m>>2]|0;R=+g[G+(v<<6)>>2];S=+g[G+(v<<6)+4>>2];T=+g[G+(v<<6)+8>>2];U=+g[t+(v<<6)+24>>2];V=+g[t+(v<<6)+20>>2];W=+g[t+(v<<6)+16>>2]}else{t=c[l>>2]|0;G=c[l>>2]|0;R=+((e[G+(v<<4)>>1]|0)>>>0)/+g[n>>2]+ +g[x>>2];S=+((e[G+(v<<4)+2>>1]|0)>>>0)/+g[w>>2]+ +g[B>>2];T=+((e[G+(v<<4)+4>>1]|0)>>>0)/+g[A>>2]+ +g[y>>2];U=+((e[t+(v<<4)+10>>1]|0)>>>0)/+g[A>>2]+ +g[y>>2];V=+((e[t+(v<<4)+8>>1]|0)>>>0)/+g[w>>2]+ +g[B>>2];W=+((e[t+(v<<4)+6>>1]|0)>>>0)/+g[n>>2]+ +g[x>>2]}g[r>>2]=(W+R)*.5;g[q>>2]=(V+S)*.5;g[p>>2]=(U+T)*.5;g[C>>2]=0.0;if(+g[z>>2]>Q){if(u){u=c[m>>2]|0;t=u+(v<<6)|0;K2(k|0,t|0,64)|0;K2(t|0,u+(b<<6)|0,64)|0;K2((c[m>>2]|0)+(b<<6)|0,k|0,64)|0}else{u=c[l>>2]|0;t=u+(v<<4)|0;c[h>>2]=c[t>>2];c[h+4>>2]=c[t+4>>2];c[h+8>>2]=c[t+8>>2];c[h+12>>2]=c[t+12>>2];G=u+(b<<4)|0;c[t>>2]=c[G>>2];c[t+4>>2]=c[G+4>>2];c[t+8>>2]=c[G+8>>2];c[t+12>>2]=c[G+12>>2];G=(c[l>>2]|0)+(b<<4)|0;c[G>>2]=c[h>>2];c[G+4>>2]=c[h+4>>2];c[G+8>>2]=c[h+8>>2];c[G+12>>2]=c[h+12>>2]}X=b+1|0}else{X=b}G=v+1|0;if((G|0)<(f|0)){b=X;v=G}else{Y=X;break}}}else{Y=d}X=(o|0)/3|0;do{if((Y|0)>(X+d|0)){if((Y|0)<(f-1-X|0)){Z=Y}else{break}i=j;return Z|0}}while(0);Z=(o>>1)+d|0;i=j;return Z|0}function q0(d,f,h,j){d=d|0;f=f|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0;k=i;i=i+16|0;l=k|0;m=k+8|0;if((a[d+60|0]&1)!=0){n=+g[d+4>>2];o=+g[d+8>>2];p=+g[d+12>>2];q=+g[d+36>>2];r=+g[d+40>>2];s=(+g[h+4>>2]-o)*r;t=+g[d+44>>2];u=(+g[h+8>>2]-p)*t;v=~~((+g[h>>2]-n)*q)&-2;b[l>>1]=v;w=~~s&-2;b[l+2>>1]=w;x=l+4|0;b[x>>1]=~~u&-2;u=(+g[j+4>>2]-o)*r;r=(+g[j+8>>2]-p)*t;l=~~((+g[j>>2]-n)*q+1.0)|1;b[m>>1]=l;y=~~(u+1.0)|1;z=m+2|0;b[z>>1]=y;A=m+4|0;b[A>>1]=~~(r+1.0)|1;m=d+136|0;B=c[m>>2]|0;C=B+(f<<4)|0;if((e[C>>1]|0)>>>0>(v&65535)>>>0){b[C>>1]=v;D=c[m>>2]|0}else{D=B}B=D+(f<<4)+6|0;if((e[B>>1]|0)>>>0<(l&65535)>>>0){b[B>>1]=l;E=c[m>>2]|0}else{E=D}D=E+(f<<4)+2|0;if((e[D>>1]|0)>>>0>(w&65535)>>>0){b[D>>1]=w;F=c[m>>2]|0;G=b[z>>1]|0}else{F=E;G=y}y=F+(f<<4)+8|0;if((e[y>>1]|0)>>>0<(G&65535)>>>0){b[y>>1]=G;H=c[m>>2]|0}else{H=F}F=H+(f<<4)+4|0;G=b[x>>1]|0;if((e[F>>1]|0)>>>0>(G&65535)>>>0){b[F>>1]=G;I=c[m>>2]|0}else{I=H}H=I+(f<<4)+10|0;I=b[A>>1]|0;if((e[H>>1]|0)>>>0>=(I&65535)>>>0){i=k;return}b[H>>1]=I;i=k;return}I=d+96|0;d=c[I>>2]|0;H=d+(f<<6)|0;r=+g[h>>2];if(r<+g[H>>2]){g[H>>2]=r}H=d+(f<<6)+4|0;r=+g[h+4>>2];if(r<+g[H>>2]){g[H>>2]=r}H=d+(f<<6)+8|0;r=+g[h+8>>2];if(r<+g[H>>2]){g[H>>2]=r}H=d+(f<<6)+12|0;r=+g[h+12>>2];if(r<+g[H>>2]){g[H>>2]=r}H=c[I>>2]|0;I=H+(f<<6)+16|0;r=+g[j>>2];if(+g[I>>2]<r){g[I>>2]=r}I=H+(f<<6)+20|0;r=+g[j+4>>2];if(+g[I>>2]<r){g[I>>2]=r}I=H+(f<<6)+24|0;r=+g[j+8>>2];if(+g[I>>2]<r){g[I>>2]=r}I=H+(f<<6)+28|0;r=+g[j+12>>2];if(+g[I>>2]>=r){i=k;return}g[I>>2]=r;i=k;return}function q1(d,e,f){d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0;g=i;i=i+64|0;h=g|0;j=g+32|0;k=c[d+136>>2]|0;l=c[k+(e<<4)+12>>2]|0;m=(l|0)>-1?1:-l|0;l=c[k+(f<<4)+12>>2]|0;n=(l|0)>-1?1:-l|0;l=n<<4;if((m<<4|0)<2049){o=d+152|0;p=c[o>>2]|0;q=d+156|0;do{if((p|0)==(c[q>>2]|0)){r=(p|0)==0?1:p<<1;if((p|0)>=(r|0)){s=p;break}if((r|0)==0){t=0;u=p}else{v=zv(r<<5,16)|0;t=v;u=c[o>>2]|0}v=d+160|0;if((u|0)>0){w=0;do{K2(t+(w<<5)|0,(c[v>>2]|0)+(w<<5)|0,32)|0;w=w+1|0;}while((w|0)<(u|0))}w=c[v>>2]|0;x=d+164|0;if((w|0)!=0){if((a[x]&1)!=0){zw(w)}c[v>>2]=0}a[x]=1;c[v>>2]=t;c[q>>2]=r;s=c[o>>2]|0}else{s=p}}while(0);c[o>>2]=s+1;s=d+160|0;K2((c[s>>2]|0)+(p<<5)|0,h|0,32)|0;h=c[s>>2]|0;b[h+(p<<5)>>1]=b[k+(e<<4)>>1]|0;b[h+(p<<5)+2>>1]=b[k+(e<<4)+2>>1]|0;b[h+(p<<5)+4>>1]=b[k+(e<<4)+4>>1]|0;b[h+(p<<5)+6>>1]=b[k+(e<<4)+6>>1]|0;b[h+(p<<5)+8>>1]=b[k+(e<<4)+8>>1]|0;b[h+(p<<5)+10>>1]=b[k+(e<<4)+10>>1]|0;c[h+(p<<5)+12>>2]=e;c[h+(p<<5)+16>>2]=m}m=d+152|0;if((l|0)>=2049){y=c[m>>2]|0;z=d+168|0;c[z>>2]=y;i=g;return}l=c[m>>2]|0;p=d+156|0;do{if((l|0)==(c[p>>2]|0)){h=(l|0)==0?1:l<<1;if((l|0)>=(h|0)){A=l;break}if((h|0)==0){B=0;C=l}else{e=zv(h<<5,16)|0;B=e;C=c[m>>2]|0}e=d+160|0;if((C|0)>0){s=0;do{K2(B+(s<<5)|0,(c[e>>2]|0)+(s<<5)|0,32)|0;s=s+1|0;}while((s|0)<(C|0))}s=c[e>>2]|0;r=d+164|0;if((s|0)!=0){if((a[r]&1)!=0){zw(s)}c[e>>2]=0}a[r]=1;c[e>>2]=B;c[p>>2]=h;A=c[m>>2]|0}else{A=l}}while(0);c[m>>2]=A+1;A=d+160|0;K2((c[A>>2]|0)+(l<<5)|0,j|0,32)|0;j=c[A>>2]|0;b[j+(l<<5)>>1]=b[k+(f<<4)>>1]|0;b[j+(l<<5)+2>>1]=b[k+(f<<4)+2>>1]|0;b[j+(l<<5)+4>>1]=b[k+(f<<4)+4>>1]|0;b[j+(l<<5)+6>>1]=b[k+(f<<4)+6>>1]|0;b[j+(l<<5)+8>>1]=b[k+(f<<4)+8>>1]|0;b[j+(l<<5)+10>>1]=b[k+(f<<4)+10>>1]|0;c[j+(l<<5)+12>>2]=f;c[j+(l<<5)+16>>2]=n;y=c[m>>2]|0;z=d+168|0;c[z>>2]=y;i=g;return}function q2(d,f,h,j){d=d|0;f=f|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0,B=0,C=0,D=0,E=0.0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0;k=i;i=i+16|0;l=k|0;m=k+8|0;if((a[d+60|0]&1)==0){q6(d,f,h,j);i=k;return}n=l|0;o=+g[h>>2];p=+g[h+4>>2];q=+g[h+8>>2];r=+g[d+4>>2];s=o<r?r:o;o=+g[d+8>>2];t=p<o?o:p;p=+g[d+12>>2];u=q<p?p:q;q=+g[d+20>>2];v=+g[d+24>>2];w=+g[d+28>>2];x=+g[d+36>>2];y=+g[d+40>>2];z=+g[d+44>>2];h=~~(((q<s?q:s)-r)*x)&-2;b[n>>1]=h;A=~~(((v<t?v:t)-o)*y)&-2;B=l+2|0;b[B>>1]=A;C=~~(((w<u?w:u)-p)*z)&-2;D=l+4|0;b[D>>1]=C;l=m|0;u=+g[j>>2];t=+g[j+4>>2];s=+g[j+8>>2];E=u<r?r:u;u=t<o?o:t;t=s<p?p:s;j=~~(((q<E?q:E)-r)*x+1.0)|1;b[l>>1]=j;F=~~(((v<u?v:u)-o)*y+1.0)|1;G=m+2|0;b[G>>1]=F;H=~~(((w<t?w:t)-p)*z+1.0)|1;I=m+4|0;b[I>>1]=H;m=c[d+144>>2]|0;if((m|0)==0){J=c[d+56>>2]|0;L7:do{if((J|0)>0){K=f;L=c[d+136>>2]|0;M=1;N=0;O=h;P=j;Q=C;R=H;S=A;T=F;while(1){U=L+12|0;V=c[U>>2]|0;W=(V|0)>-1;X=(-((O&65535)>>>0<=(e[L+6>>1]|0)>>>0&(P&65535)>>>0>=(e[L>>1]|0)>>>0&(Q&65535)>>>0<=(e[L+10>>1]|0)>>>0&(R&65535)>>>0>=(e[L+4>>1]|0)>>>0&(S&65535)>>>0<=(e[L+8>>1]|0)>>>0&(T&65535)>>>0>=(e[L+2>>1]|0)>>>0&1)&1|0)==0;if(!(X|W^1)){hF[c[(c[K>>2]|0)+8>>2]&255](f,V>>21,V&2097151)}if(W|X^1){Y=N+1|0;Z=L+16|0}else{X=c[U>>2]|0;Y=N-X|0;Z=L+(-X<<4)|0}if((Y|0)>=(J|0)){_=M;break L7}L=Z;M=M+1|0;N=Y;O=b[n>>1]|0;P=b[l>>1]|0;Q=b[D>>1]|0;R=b[I>>1]|0;S=b[B>>1]|0;T=b[G>>1]|0}}else{_=0}}while(0);if((c[12428]|0)>=(_|0)){i=k;return}c[12428]=_;i=k;return}else if((m|0)==1){q4(d,f,n,l);i=k;return}else if((m|0)==2){q5(d,c[d+136>>2]|0,f,n,l);i=k;return}else{i=k;return}}function q3(a,b,d,f,g,h){a=a|0;b=b|0;d=d|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;L1:do{if((g|0)<(h|0)){i=d+4|0;j=f+4|0;k=d+2|0;l=f+2|0;m=b;n=(c[a+136>>2]|0)+(g<<4)|0;o=1;p=g;while(1){q=n+12|0;r=c[q>>2]|0;s=(r|0)>-1;t=(-((e[d>>1]|0)>>>0<=(e[n+6>>1]|0)>>>0&(e[f>>1]|0)>>>0>=(e[n>>1]|0)>>>0&(e[i>>1]|0)>>>0<=(e[n+10>>1]|0)>>>0&(e[j>>1]|0)>>>0>=(e[n+4>>1]|0)>>>0&(e[k>>1]|0)>>>0<=(e[n+8>>1]|0)>>>0&(e[l>>1]|0)>>>0>=(e[n+2>>1]|0)>>>0&1)&1|0)==0;if(!(t|s^1)){hF[c[(c[m>>2]|0)+8>>2]&255](b,r>>21,r&2097151)}if(s|t^1){u=p+1|0;v=n+16|0}else{t=c[q>>2]|0;u=p-t|0;v=n+(-t<<4)|0}if((u|0)>=(h|0)){w=o;break L1}n=v;o=o+1|0;p=u}}else{w=0}}while(0);if((c[12428]|0)>=(w|0)){return}c[12428]=w;return}function q4(a,b,d,f){a=a|0;b=b|0;d=d|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;g=a+152|0;h=c[g>>2]|0;if((h|0)<=0){return}i=a+160|0;j=d+4|0;k=f+4|0;l=d+2|0;m=f+2|0;n=0;o=h;while(1){h=c[i>>2]|0;if((-((e[d>>1]|0)>>>0<=(e[h+(n<<5)+6>>1]|0)>>>0&(e[f>>1]|0)>>>0>=(e[h+(n<<5)>>1]|0)>>>0&(e[j>>1]|0)>>>0<=(e[h+(n<<5)+10>>1]|0)>>>0&(e[k>>1]|0)>>>0>=(e[h+(n<<5)+4>>1]|0)>>>0&(e[l>>1]|0)>>>0<=(e[h+(n<<5)+8>>1]|0)>>>0&(e[m>>1]|0)>>>0>=(e[h+(n<<5)+2>>1]|0)>>>0&1)&1|0)==0){p=o}else{q=c[h+(n<<5)+12>>2]|0;q3(a,b,d,f,q,(c[h+(n<<5)+16>>2]|0)+q|0);p=c[g>>2]|0}q=n+1|0;if((q|0)<(p|0)){n=q;o=p}else{break}}return}function q5(a,b,d,f,g){a=a|0;b=b|0;d=d|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0;h=f+4|0;i=g+4|0;j=f+2|0;k=g+2|0;l=b;while(1){m=c[l+12>>2]|0;if((-((e[f>>1]|0)>>>0<=(e[l+6>>1]|0)>>>0&(e[g>>1]|0)>>>0>=(e[l>>1]|0)>>>0&(e[h>>1]|0)>>>0<=(e[l+10>>1]|0)>>>0&(e[i>>1]|0)>>>0>=(e[l+4>>1]|0)>>>0&(e[j>>1]|0)>>>0<=(e[l+8>>1]|0)>>>0&(e[k>>1]|0)>>>0>=(e[l+2>>1]|0)>>>0&1)&1|0)==0){n=9;break}if((m|0)>-1){break}q5(a,l+16|0,d,f,g);b=c[l+28>>2]|0;if((b|0)>-1){l=l+32|0;continue}else{l=l+(1-b<<4)|0;continue}}if((n|0)==9){return}hF[c[(c[d>>2]|0)+8>>2]&255](d,m>>21,m&2097151);return}function q6(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0;f=a+56|0;L1:do{if((c[f>>2]|0)>0){h=d|0;i=d+8|0;j=d+4|0;k=e+4|0;l=b;m=e+8|0;n=e|0;o=1;p=0;q=c[a+96>>2]|0;while(1){do{if(+g[h>>2]>+g[q+16>>2]){r=0}else{if(+g[n>>2]<+g[q>>2]){r=0;break}r=1}}while(0);do{if(+g[i>>2]>+g[q+24>>2]){s=0}else{if(+g[m>>2]<+g[q+8>>2]){s=0;break}s=r}}while(0);do{if(+g[j>>2]>+g[q+20>>2]){t=11}else{if(+g[k>>2]<+g[q+4>>2]){t=11;break}u=q+32|0;v=(c[u>>2]|0)==-1;if(!(v&s)){w=s;x=u;y=v;t=14;break}hF[c[(c[l>>2]|0)+8>>2]&255](b,c[q+36>>2]|0,c[q+40>>2]|0);t=15}}while(0);if((t|0)==11){t=0;v=q+32|0;w=0;x=v;y=(c[v>>2]|0)==-1;t=14}do{if((t|0)==14){t=0;if(w|y){t=15;break}v=c[x>>2]|0;z=q+(v<<6)|0;A=v+p|0}}while(0);if((t|0)==15){t=0;z=q+64|0;A=p+1|0}if((A|0)>=(c[f>>2]|0)){B=o;break L1}o=o+1|0;p=A;q=z}}else{B=0}}while(0);if((c[12428]|0)>=(B|0)){return}c[12428]=B;return}function q7(a,b,d,e,f,h,j,k){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;j=j|0;k=k|0;var l=0,m=0.0,n=0,o=0.0,p=0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0,z=0.0,A=0.0,B=0.0,C=0.0,D=0,E=0.0,F=0.0,G=0,H=0.0,I=0.0,J=0.0,K=0.0,L=0.0,M=0.0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0,ai=0,aj=0,ak=0,al=0,am=0.0,an=0.0,ao=0.0,ap=0.0,aq=0.0,ar=0,as=0,at=0,au=0,av=0,aw=0,ax=0;k=i;i=i+32|0;j=k|0;l=d|0;m=+g[l>>2];n=d+4|0;o=+g[n>>2];p=d+8|0;q=+g[p>>2];r=+g[e>>2];s=+g[e+4>>2];t=+g[e+8>>2];e=f|0;u=+g[e>>2];v=(r<m?r:m)+u;d=f+4|0;w=+g[d>>2];x=(s<o?s:o)+w;y=f+8|0;z=+g[y>>2];A=(t<q?t:q)+z;f=h|0;B=+g[f>>2];C=(m<r?r:m)+B;D=h+4|0;E=+g[D>>2];F=(o<s?s:o)+E;G=h+8|0;H=+g[G>>2];I=(q<t?t:q)+H;J=r-m;m=s-o;o=t-q;q=1.0/+W(J*J+m*m+o*o);t=J*q;s=m*q;r=o*q;q=o*r+(J*t+m*s);if(t==0.0){K=999999984306749400.0}else{K=1.0/t}if(s==0.0){L=999999984306749400.0}else{L=1.0/s}if(r==0.0){M=999999984306749400.0}else{M=1.0/r}h=K<0.0|0;N=L<0.0|0;O=M<0.0|0;P=a+56|0;L10:do{if((c[P>>2]|0)>0){Q=j;R=j+16|0;S=R;T=j|0;U=j+4|0;V=j+8|0;X=R|0;R=j+20|0;Y=j+24|0;Z=j+(h<<4)|0;_=j+((h^1)<<4)|0;$=j+(N<<4)+4|0;aa=j+((N^1)<<4)+4|0;ab=j+(O<<4)+8|0;ac=j+((O^1)<<4)+8|0;ad=b;ae=0;af=1;ag=c[a+96>>2]|0;r=B;s=E;t=H;m=u;J=w;o=z;while(1){ah=ag;c[Q>>2]=c[ah>>2];c[Q+4>>2]=c[ah+4>>2];c[Q+8>>2]=c[ah+8>>2];c[Q+12>>2]=c[ah+12>>2];ah=ag+16|0;ai=ah;c[S>>2]=c[ai>>2];c[S+4>>2]=c[ai+4>>2];c[S+8>>2]=c[ai+8>>2];c[S+12>>2]=c[ai+12>>2];g[T>>2]=+g[T>>2]-r;g[U>>2]=+g[U>>2]-s;g[V>>2]=+g[V>>2]-t;g[X>>2]=+g[X>>2]-m;g[R>>2]=+g[R>>2]-J;g[Y>>2]=+g[Y>>2]-o;do{if(v>+g[ah>>2]){aj=0}else{if(C<+g[ag>>2]){aj=0;break}aj=1}}while(0);do{if(A>+g[ag+24>>2]){ak=0}else{if(I<+g[ag+8>>2]){ak=0;break}ak=aj}}while(0);do{if(x>+g[ag+20>>2]){al=20}else{if(F<+g[ag+4>>2]|ak^1){al=20;break}am=+g[l>>2];an=K*(+g[Z>>2]-am);ao=K*(+g[_>>2]-am);am=+g[n>>2];ap=L*(+g[$>>2]-am);aq=L*(+g[aa>>2]-am);if(an>aq|ap>ao){al=20;break}am=ap>an?ap:an;an=aq<ao?aq:ao;ao=+g[p>>2];aq=M*(+g[ab>>2]-ao);ap=M*(+g[ac>>2]-ao);if(am>ap|aq>an){al=20;break}if((aq>am?aq:am)>=q){al=20;break}ah=(ap<an?ap:an)>0.0;ai=ag+32|0;ar=(c[ai>>2]|0)==-1;if(!(ar&ah)){as=ah;at=ai;au=ar;al=23;break}hF[c[(c[ad>>2]|0)+8>>2]&255](b,c[ag+36>>2]|0,c[ag+40>>2]|0);al=24}}while(0);if((al|0)==20){al=0;ar=ag+32|0;as=0;at=ar;au=(c[ar>>2]|0)==-1;al=23}do{if((al|0)==23){al=0;if(as|au){al=24;break}ar=c[at>>2]|0;av=ag+(ar<<6)|0;aw=ar+ae|0}}while(0);if((al|0)==24){al=0;av=ag+64|0;aw=ae+1|0}if((aw|0)>=(c[P>>2]|0)){ax=af;break L10}ae=aw;af=af+1|0;ag=av;r=+g[f>>2];s=+g[D>>2];t=+g[G>>2];m=+g[e>>2];J=+g[d>>2];o=+g[y>>2]}}else{ax=0}}while(0);if((c[12428]|0)>=(ax|0)){i=k;return}c[12428]=ax;i=k;return}function q8(a,d,f,h,j,k,l,m){a=a|0;d=d|0;f=f|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0.0,q=0,r=0.0,s=0.0,t=0.0,u=0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0.0,S=0,T=0.0,U=0,V=0.0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0,ai=0,aj=0,ak=0,al=0,am=0,an=0,ao=0,ap=0,aq=0,ar=0,as=0,at=0,au=0,av=0,aw=0,ax=0,ay=0,az=0,aA=0,aB=0;n=i;i=i+32|0;o=n|0;p=+g[h>>2];q=f|0;r=+g[q>>2];s=p-r;t=+g[h+4>>2];u=f+4|0;v=+g[u>>2];w=t-v;x=+g[h+8>>2];h=f+8|0;y=+g[h>>2];z=x-y;A=1.0/+W(s*s+w*w+z*z);B=s*A;C=w*A;D=z*A;A=z*D+(s*B+w*C);if(B==0.0){E=999999984306749400.0}else{E=1.0/B}if(C==0.0){F=999999984306749400.0}else{F=1.0/C}if(D==0.0){G=999999984306749400.0}else{G=1.0/D}f=E<0.0|0;H=F<0.0|0;I=G<0.0|0;J=j|0;D=(p<r?p:r)+ +g[J>>2];K=j+4|0;C=(t<v?t:v)+ +g[K>>2];L=j+8|0;B=(x<y?x:y)+ +g[L>>2];j=k|0;w=(r<p?p:r)+ +g[j>>2];M=k+4|0;r=(v<t?t:v)+ +g[M>>2];N=k+8|0;v=(y<x?x:y)+ +g[N>>2];k=a+4|0;y=+g[k>>2];x=D<y?y:D;O=a+8|0;D=+g[O>>2];t=C<D?D:C;P=a+12|0;C=+g[P>>2];p=B<C?C:B;B=+g[a+20>>2];s=+g[a+24>>2];z=+g[a+28>>2];Q=a+36|0;R=+g[Q>>2];S=a+40|0;T=+g[S>>2];U=a+44|0;V=+g[U>>2];X=~~(((B<x?B:x)-y)*R)&-2;Y=~~(((s<t?s:t)-D)*T)&-2;Z=~~(((z<p?z:p)-C)*V)&-2;p=w<y?y:w;w=r<D?D:r;r=v<C?C:v;_=~~(((B<p?B:p)-y)*R+1.0)|1;$=~~(((s<w?s:w)-D)*T+1.0)|1;aa=~~(((z<r?z:r)-C)*V+1.0)|1;if((l|0)<(m|0)){ab=o|0;ac=o+4|0;ad=o+8|0;ae=o+12|0;af=o+16|0;ag=o+20|0;ah=o+24|0;ai=o+28|0;aj=o+(f<<4)|0;ak=o+((f^1)<<4)|0;f=o+(H<<4)+4|0;al=o+((H^1)<<4)+4|0;H=d;am=o+(I<<4)+8|0;an=o+((I^1)<<4)+8|0;I=(c[a+136>>2]|0)+(l<<4)|0;a=0;o=l;while(1){l=a+1|0;ao=I+6|0;ap=b[I>>1]|0;aq=I+10|0;ar=b[I+4>>1]|0;as=I+8|0;at=b[I+2>>1]|0;au=I+12|0;av=(c[au>>2]|0)>-1;do{if((-((X&65535)>>>0<=(e[ao>>1]|0)>>>0&(_&65535)>>>0>=(ap&65535)>>>0&(Z&65535)>>>0<=(e[aq>>1]|0)>>>0&(aa&65535)>>>0>=(ar&65535)>>>0&(Y&65535)>>>0<=(e[as>>1]|0)>>>0&($&65535)>>>0>=(at&65535)>>>0&1)&1|0)==0){aw=1;ax=15}else{V=+g[Q>>2];C=+g[S>>2];r=+g[U>>2];z=+g[k>>2];T=+((ap&65535)>>>0)/V+z;D=+g[O>>2];w=+((at&65535)>>>0)/C+D;s=+g[P>>2];R=+((ar&65535)>>>0)/r+s;g[ab>>2]=T;g[ac>>2]=w;g[ad>>2]=R;g[ae>>2]=0.0;y=+((e[ao>>1]|0)>>>0)/V+z;z=+((e[as>>1]|0)>>>0)/C+D;D=+((e[aq>>1]|0)>>>0)/r+s;g[ai>>2]=0.0;g[ab>>2]=T- +g[j>>2];g[ac>>2]=w- +g[M>>2];g[ad>>2]=R- +g[N>>2];g[af>>2]=y- +g[J>>2];g[ag>>2]=z- +g[K>>2];g[ah>>2]=D- +g[L>>2];D=+g[q>>2];z=E*(+g[aj>>2]-D);y=E*(+g[ak>>2]-D);D=+g[u>>2];R=F*(+g[f>>2]-D);w=F*(+g[al>>2]-D);if(z>w|R>y){aw=1;ax=15;break}D=R>z?R:z;z=w<y?w:y;y=+g[h>>2];w=G*(+g[am>>2]-y);R=G*(+g[an>>2]-y);if(D>R|w>z){aw=1;ax=15;break}if((w>D?w:D)>=A){aw=1;ax=15;break}ay=(R<z?R:z)<=0.0;if(ay|av^1){aw=ay;ax=15;break}ay=c[au>>2]|0;hF[c[(c[H>>2]|0)+8>>2]&255](d,ay>>21,ay&2097151);ax=16}}while(0);do{if((ax|0)==15){ax=0;if(av|aw^1){ax=16;break}aq=c[au>>2]|0;az=o-aq|0;aA=I+(-aq<<4)|0}}while(0);if((ax|0)==16){ax=0;az=o+1|0;aA=I+16|0}if((az|0)<(m|0)){I=aA;a=l;o=az}else{aB=l;break}}}else{aB=0}if((c[12428]|0)>=(aB|0)){i=n;return}c[12428]=aB;i=n;return}function q9(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0;g=i;i=i+32|0;h=g|0;j=g+16|0;K1(h|0,0,16)|0;K1(j|0,0,16)|0;if((a[b+60|0]&1)==0){q7(b,d,e,f,h,j,0,0);i=g;return}else{q8(b,d,e,f,h,j,0,c[b+56>>2]|0);i=g;return}}function ra(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;if((a[b+60|0]&1)==0){q7(b,d,e,f,g,h,0,0);return}else{q8(b,d,e,f,g,h,0,c[b+56>>2]|0);return}}function rb(d,e,f,h){d=d|0;e=e|0;f=f|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0;f=d+168|0;c[f>>2]=c[d+152>>2];c[e>>2]=34736;c[e+52>>2]=281;i=e+60|0;a[i]=0;a[e+80|0]=1;c[e+76>>2]=0;c[e+68>>2]=0;c[e+72>>2]=0;j=e+100|0;a[j]=1;k=e+96|0;c[k>>2]=0;l=e+88|0;m=l;c[m>>2]=0;n=e+92|0;c[n>>2]=0;a[e+120|0]=1;c[e+116>>2]=0;c[e+108>>2]=0;c[e+112>>2]=0;o=e+140|0;a[o]=1;p=e+136|0;c[p>>2]=0;q=e+128|0;r=q;c[r>>2]=0;s=e+132|0;c[s>>2]=0;t=e+144|0;c[t>>2]=0;u=e+164|0;a[u]=1;v=e+160|0;c[v>>2]=0;w=e+152|0;x=w;c[x>>2]=0;y=e+156|0;c[y>>2]=0;z=e+168|0;c[z>>2]=0;A=e+4|0;g[A>>2]=-3.4028234663852886e+38;B=e+8|0;g[B>>2]=-3.4028234663852886e+38;C=e+12|0;g[C>>2]=-3.4028234663852886e+38;D=e+16|0;g[D>>2]=0.0;E=e+20|0;g[E>>2]=3.4028234663852886e+38;F=e+24|0;g[F>>2]=3.4028234663852886e+38;G=e+28|0;g[G>>2]=3.4028234663852886e+38;H=e+32|0;g[H>>2]=0.0;I=d+56|0;J=c[I>>2]|0;if(h){c[e+56>>2]=dG(J|0)|0;K=d+4|0;a[A]=a[K+3|0]|0;a[e+5|0]=a[K+2|0]|0;a[e+6|0]=a[K+1|0]|0;a[e+7|0]=a[K]|0;K=d+8|0;a[B]=a[K+3|0]|0;a[e+9|0]=a[K+2|0]|0;a[e+10|0]=a[K+1|0]|0;a[e+11|0]=a[K]|0;K=d+12|0;a[C]=a[K+3|0]|0;a[e+13|0]=a[K+2|0]|0;a[e+14|0]=a[K+1|0]|0;a[e+15|0]=a[K]|0;K=d+16|0;a[D]=a[K+3|0]|0;a[e+17|0]=a[K+2|0]|0;a[e+18|0]=a[K+1|0]|0;a[e+19|0]=a[K]|0;K=d+20|0;a[E]=a[K+3|0]|0;a[e+21|0]=a[K+2|0]|0;a[e+22|0]=a[K+1|0]|0;a[e+23|0]=a[K]|0;K=d+24|0;a[F]=a[K+3|0]|0;a[e+25|0]=a[K+2|0]|0;a[e+26|0]=a[K+1|0]|0;a[e+27|0]=a[K]|0;K=d+28|0;a[G]=a[K+3|0]|0;a[e+29|0]=a[K+2|0]|0;a[e+30|0]=a[K+1|0]|0;a[e+31|0]=a[K]|0;K=d+32|0;a[H]=a[K+3|0]|0;a[e+33|0]=a[K+2|0]|0;a[e+34|0]=a[K+1|0]|0;a[e+35|0]=a[K]|0;K=d+36|0;a[e+36|0]=a[K+3|0]|0;a[e+37|0]=a[K+2|0]|0;a[e+38|0]=a[K+1|0]|0;a[e+39|0]=a[K]|0;K=d+40|0;a[e+40|0]=a[K+3|0]|0;a[e+41|0]=a[K+2|0]|0;a[e+42|0]=a[K+1|0]|0;a[e+43|0]=a[K]|0;K=d+44|0;a[e+44|0]=a[K+3|0]|0;a[e+45|0]=a[K+2|0]|0;a[e+46|0]=a[K+1|0]|0;a[e+47|0]=a[K]|0;K=d+48|0;a[e+48|0]=a[K+3|0]|0;a[e+49|0]=a[K+2|0]|0;a[e+50|0]=a[K+1|0]|0;a[e+51|0]=a[K]|0;c[t>>2]=dG(c[d+144>>2]|0)|0;L=dG(c[f>>2]|0)|0}else{c[e+56>>2]=J;J=d+4|0;c[A>>2]=c[J>>2];c[A+4>>2]=c[J+4>>2];c[A+8>>2]=c[J+8>>2];c[A+12>>2]=c[J+12>>2];J=d+20|0;c[E>>2]=c[J>>2];c[E+4>>2]=c[J+4>>2];c[E+8>>2]=c[J+8>>2];c[E+12>>2]=c[J+12>>2];J=e+36|0;E=d+36|0;c[J>>2]=c[E>>2];c[J+4>>2]=c[E+4>>2];c[J+8>>2]=c[E+8>>2];c[J+12>>2]=c[E+12>>2];c[t>>2]=c[d+144>>2];L=c[f>>2]|0}c[z>>2]=L;L=d+60|0;a[i]=a[L]&1;i=e+172|0;z=c[I>>2]|0;if((a[L]&1)==0){L=i;K1(l|0,0,13)|0;c[k>>2]=L;c[m>>2]=z;c[n>>2]=z;n=(z|0)>0;L7:do{if(h){if(!n){break}m=d+96|0;I=0;t=L;while(1){E=c[m>>2]|0;J=t+(I<<6)|0;A=E+(I<<6)|0;a[J]=a[A+3|0]|0;a[J+1|0]=a[A+2|0]|0;a[J+2|0]=a[A+1|0]|0;a[J+3|0]=a[A]|0;A=t+(I<<6)+4|0;J=E+(I<<6)+4|0;a[A]=a[J+3|0]|0;a[A+1|0]=a[J+2|0]|0;a[A+2|0]=a[J+1|0]|0;a[A+3|0]=a[J]|0;J=t+(I<<6)+8|0;A=E+(I<<6)+8|0;a[J]=a[A+3|0]|0;a[J+1|0]=a[A+2|0]|0;a[J+2|0]=a[A+1|0]|0;a[J+3|0]=a[A]|0;A=t+(I<<6)+12|0;J=E+(I<<6)+12|0;a[A]=a[J+3|0]|0;a[A+1|0]=a[J+2|0]|0;a[A+2|0]=a[J+1|0]|0;a[A+3|0]=a[J]|0;J=c[m>>2]|0;A=c[k>>2]|0;E=A+(I<<6)+16|0;K=J+(I<<6)+16|0;a[E]=a[K+3|0]|0;a[E+1|0]=a[K+2|0]|0;a[E+2|0]=a[K+1|0]|0;a[E+3|0]=a[K]|0;K=A+(I<<6)+20|0;E=J+(I<<6)+20|0;a[K]=a[E+3|0]|0;a[K+1|0]=a[E+2|0]|0;a[K+2|0]=a[E+1|0]|0;a[K+3|0]=a[E]|0;E=A+(I<<6)+24|0;K=J+(I<<6)+24|0;a[E]=a[K+3|0]|0;a[E+1|0]=a[K+2|0]|0;a[E+2|0]=a[K+1|0]|0;a[E+3|0]=a[K]|0;K=A+(I<<6)+28|0;A=J+(I<<6)+28|0;a[K]=a[A+3|0]|0;a[K+1|0]=a[A+2|0]|0;a[K+2|0]=a[A+1|0]|0;a[K+3|0]=a[A]|0;A=dG(c[(c[m>>2]|0)+(I<<6)+32>>2]|0)|0;c[(c[k>>2]|0)+(I<<6)+32>>2]=A;A=dG(c[(c[m>>2]|0)+(I<<6)+36>>2]|0)|0;c[(c[k>>2]|0)+(I<<6)+36>>2]=A;A=dG(c[(c[m>>2]|0)+(I<<6)+40>>2]|0)|0;c[(c[k>>2]|0)+(I<<6)+40>>2]=A;A=I+1|0;if((A|0)>=(z|0)){break L7}I=A;t=c[k>>2]|0}}else{if(!n){break}t=d+96|0;I=0;m=L;while(1){A=m+(I<<6)|0;K=(c[t>>2]|0)+(I<<6)|0;c[A>>2]=c[K>>2];c[A+4>>2]=c[K+4>>2];c[A+8>>2]=c[K+8>>2];c[A+12>>2]=c[K+12>>2];K=(c[k>>2]|0)+(I<<6)+16|0;A=(c[t>>2]|0)+(I<<6)+16|0;c[K>>2]=c[A>>2];c[K+4>>2]=c[A+4>>2];c[K+8>>2]=c[A+8>>2];c[K+12>>2]=c[A+12>>2];c[(c[k>>2]|0)+(I<<6)+32>>2]=c[(c[t>>2]|0)+(I<<6)+32>>2];c[(c[k>>2]|0)+(I<<6)+36>>2]=c[(c[t>>2]|0)+(I<<6)+36>>2];c[(c[k>>2]|0)+(I<<6)+40>>2]=c[(c[t>>2]|0)+(I<<6)+40>>2];A=I+1|0;if((A|0)>=(z|0)){break L7}I=A;m=c[k>>2]|0}}}while(0);L=z<<6;n=c[k>>2]|0;if((n|0)!=0){if((a[j]&1)!=0){zw(n)}c[k>>2]=0}K1(l|0,0,13)|0;M=L}else{L=i;K1(q|0,0,13)|0;c[p>>2]=L;c[r>>2]=z;c[s>>2]=z;s=(z|0)>0;L26:do{if(h){if(!s){break}r=d+136|0;i=0;l=L;while(1){b[l+(i<<4)>>1]=gU(b[(c[r>>2]|0)+(i<<4)>>1]|0)|0;k=gU(b[(c[r>>2]|0)+(i<<4)+2>>1]|0)|0;b[(c[p>>2]|0)+(i<<4)+2>>1]=k;k=gU(b[(c[r>>2]|0)+(i<<4)+4>>1]|0)|0;b[(c[p>>2]|0)+(i<<4)+4>>1]=k;k=gU(b[(c[r>>2]|0)+(i<<4)+6>>1]|0)|0;b[(c[p>>2]|0)+(i<<4)+6>>1]=k;k=gU(b[(c[r>>2]|0)+(i<<4)+8>>1]|0)|0;b[(c[p>>2]|0)+(i<<4)+8>>1]=k;k=gU(b[(c[r>>2]|0)+(i<<4)+10>>1]|0)|0;b[(c[p>>2]|0)+(i<<4)+10>>1]=k;k=dG(c[(c[r>>2]|0)+(i<<4)+12>>2]|0)|0;c[(c[p>>2]|0)+(i<<4)+12>>2]=k;k=i+1|0;if((k|0)>=(z|0)){break L26}i=k;l=c[p>>2]|0}}else{if(!s){break}l=d+136|0;i=0;r=L;while(1){b[r+(i<<4)>>1]=b[(c[l>>2]|0)+(i<<4)>>1]|0;b[(c[p>>2]|0)+(i<<4)+2>>1]=b[(c[l>>2]|0)+(i<<4)+2>>1]|0;b[(c[p>>2]|0)+(i<<4)+4>>1]=b[(c[l>>2]|0)+(i<<4)+4>>1]|0;b[(c[p>>2]|0)+(i<<4)+6>>1]=b[(c[l>>2]|0)+(i<<4)+6>>1]|0;b[(c[p>>2]|0)+(i<<4)+8>>1]=b[(c[l>>2]|0)+(i<<4)+8>>1]|0;b[(c[p>>2]|0)+(i<<4)+10>>1]=b[(c[l>>2]|0)+(i<<4)+10>>1]|0;c[(c[p>>2]|0)+(i<<4)+12>>2]=c[(c[l>>2]|0)+(i<<4)+12>>2];k=i+1|0;if((k|0)>=(z|0)){break L26}i=k;r=c[p>>2]|0}}}while(0);L=z<<4;z=c[p>>2]|0;if((z|0)!=0){if((a[o]&1)!=0){zw(z)}c[p>>2]=0}K1(q|0,0,13)|0;M=L}L=e+(M+172)|0;M=c[f>>2]|0;q=c[v>>2]|0;if((q|0)!=0){if((a[u]&1)!=0){zw(q)}c[v>>2]=0}q=L;K1(w|0,0,13)|0;c[v>>2]=q;c[x>>2]=M;c[y>>2]=M;M=(c[f>>2]|0)>0;L51:do{if(h){if(!M){break}y=d+160|0;x=0;L=q;while(1){b[L+(x<<5)>>1]=gU(b[(c[y>>2]|0)+(x<<5)>>1]|0)|0;p=gU(b[(c[y>>2]|0)+(x<<5)+2>>1]|0)|0;b[(c[v>>2]|0)+(x<<5)+2>>1]=p;p=gU(b[(c[y>>2]|0)+(x<<5)+4>>1]|0)|0;b[(c[v>>2]|0)+(x<<5)+4>>1]=p;p=gU(b[(c[y>>2]|0)+(x<<5)+6>>1]|0)|0;b[(c[v>>2]|0)+(x<<5)+6>>1]=p;p=gU(b[(c[y>>2]|0)+(x<<5)+8>>1]|0)|0;b[(c[v>>2]|0)+(x<<5)+8>>1]=p;p=gU(b[(c[y>>2]|0)+(x<<5)+10>>1]|0)|0;b[(c[v>>2]|0)+(x<<5)+10>>1]=p;p=dG(c[(c[y>>2]|0)+(x<<5)+12>>2]|0)|0;c[(c[v>>2]|0)+(x<<5)+12>>2]=p;p=dG(c[(c[y>>2]|0)+(x<<5)+16>>2]|0)|0;c[(c[v>>2]|0)+(x<<5)+16>>2]=p;p=x+1|0;if((p|0)>=(c[f>>2]|0)){break L51}x=p;L=c[v>>2]|0}}else{if(!M){break}L=d+160|0;x=0;y=q;while(1){b[y+(x<<5)>>1]=b[(c[L>>2]|0)+(x<<5)>>1]|0;b[(c[v>>2]|0)+(x<<5)+2>>1]=b[(c[L>>2]|0)+(x<<5)+2>>1]|0;b[(c[v>>2]|0)+(x<<5)+4>>1]=b[(c[L>>2]|0)+(x<<5)+4>>1]|0;b[(c[v>>2]|0)+(x<<5)+6>>1]=b[(c[L>>2]|0)+(x<<5)+6>>1]|0;b[(c[v>>2]|0)+(x<<5)+8>>1]=b[(c[L>>2]|0)+(x<<5)+8>>1]|0;b[(c[v>>2]|0)+(x<<5)+10>>1]=b[(c[L>>2]|0)+(x<<5)+10>>1]|0;c[(c[v>>2]|0)+(x<<5)+12>>2]=c[(c[L>>2]|0)+(x<<5)+12>>2];c[(c[v>>2]|0)+(x<<5)+16>>2]=c[(c[L>>2]|0)+(x<<5)+16>>2];c[(c[v>>2]|0)+(x<<5)+20>>2]=0;c[(c[v>>2]|0)+(x<<5)+24>>2]=0;c[(c[v>>2]|0)+(x<<5)+28>>2]=0;p=x+1|0;if((p|0)>=(c[f>>2]|0)){break L51}x=p;y=c[v>>2]|0}}}while(0);f=c[v>>2]|0;if((f|0)==0){N=e;c[N>>2]=0;K1(w|0,0,13)|0;return 1}if((a[u]&1)!=0){zw(f)}c[v>>2]=0;N=e;c[N>>2]=0;K1(w|0,0,13)|0;return 1}function rc(d,e){d=d|0;e=e|0;var f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;f=i;i=i+112|0;h=f+64|0;j=f+80|0;g[d+20>>2]=+g[e+16>>2];g[d+24>>2]=+g[e+20>>2];g[d+28>>2]=+g[e+24>>2];g[d+32>>2]=+g[e+28>>2];g[d+4>>2]=+g[e>>2];g[d+8>>2]=+g[e+4>>2];g[d+12>>2]=+g[e+8>>2];g[d+16>>2]=+g[e+12>>2];g[d+36>>2]=+g[e+32>>2];g[d+40>>2]=+g[e+36>>2];g[d+44>>2]=+g[e+40>>2];g[d+48>>2]=+g[e+44>>2];c[d+56>>2]=c[e+48>>2];a[d+60|0]=(c[e+52>>2]|0)!=0|0;k=c[e+56>>2]|0;l=f|0;K1(l|0,0,64)|0;m=d+88|0;n=c[m>>2]|0;if((n|0)<(k|0)){o=d+92|0;if((c[o>>2]|0)<(k|0)){if((k|0)==0){p=0;q=n}else{r=zv(k<<6,16)|0;p=r;q=c[m>>2]|0}r=d+96|0;if((q|0)>0){s=0;do{K2(p+(s<<6)|0,(c[r>>2]|0)+(s<<6)|0,64)|0;s=s+1|0;}while((s|0)<(q|0))}q=c[r>>2]|0;s=d+100|0;if((q|0)!=0){if((a[s]&1)!=0){zw(q)}c[r>>2]=0}a[s]=1;c[r>>2]=p;c[o>>2]=k;t=r}else{t=d+96|0}r=n;do{K2((c[t>>2]|0)+(r<<6)|0,l|0,64)|0;r=r+1|0;}while((r|0)<(k|0))}c[m>>2]=k;L23:do{if((k|0)>0){m=d+96|0;r=0;l=c[e+64>>2]|0;while(1){t=c[m>>2]|0;g[t+(r<<6)+16>>2]=+g[l+16>>2];g[t+(r<<6)+20>>2]=+g[l+20>>2];g[t+(r<<6)+24>>2]=+g[l+24>>2];g[t+(r<<6)+28>>2]=+g[l+28>>2];t=c[m>>2]|0;g[t+(r<<6)>>2]=+g[l>>2];g[t+(r<<6)+4>>2]=+g[l+4>>2];g[t+(r<<6)+8>>2]=+g[l+8>>2];g[t+(r<<6)+12>>2]=+g[l+12>>2];c[(c[m>>2]|0)+(r<<6)+32>>2]=c[l+32>>2];c[(c[m>>2]|0)+(r<<6)+36>>2]=c[l+36>>2];c[(c[m>>2]|0)+(r<<6)+40>>2]=c[l+40>>2];t=r+1|0;if((t|0)>=(k|0)){break L23}r=t;l=l+48|0}}}while(0);k=c[e+60>>2]|0;l=h;K1(l|0,0,16)|0;h=d+128|0;r=c[h>>2]|0;if((r|0)<(k|0)){m=d+132|0;if((c[m>>2]|0)<(k|0)){if((k|0)==0){u=0;v=r}else{t=zv(k<<4,16)|0;u=t;v=c[h>>2]|0}t=d+136|0;if((v|0)>0){n=0;do{o=u+(n<<4)|0;p=(c[t>>2]|0)+(n<<4)|0;c[o>>2]=c[p>>2];c[o+4>>2]=c[p+4>>2];c[o+8>>2]=c[p+8>>2];c[o+12>>2]=c[p+12>>2];n=n+1|0;}while((n|0)<(v|0))}v=c[t>>2]|0;n=d+140|0;if((v|0)!=0){if((a[n]&1)!=0){zw(v)}c[t>>2]=0}a[n]=1;c[t>>2]=u;c[m>>2]=k;w=t}else{w=d+136|0}t=r;do{r=(c[w>>2]|0)+(t<<4)|0;c[r>>2]=c[l>>2];c[r+4>>2]=c[l+4>>2];c[r+8>>2]=c[l+8>>2];c[r+12>>2]=c[l+12>>2];t=t+1|0;}while((t|0)<(k|0))}c[h>>2]=k;L51:do{if((k|0)>0){h=d+136|0;t=c[e+68>>2]|0;l=0;while(1){c[(c[h>>2]|0)+(l<<4)+12>>2]=c[t+12>>2];b[(c[h>>2]|0)+(l<<4)+6>>1]=b[t+6>>1]|0;b[(c[h>>2]|0)+(l<<4)+8>>1]=b[t+8>>1]|0;b[(c[h>>2]|0)+(l<<4)+10>>1]=b[t+10>>1]|0;b[(c[h>>2]|0)+(l<<4)>>1]=b[t>>1]|0;b[(c[h>>2]|0)+(l<<4)+2>>1]=b[t+2>>1]|0;b[(c[h>>2]|0)+(l<<4)+4>>1]=b[t+4>>1]|0;w=l+1|0;if((w|0)>=(k|0)){break L51}t=t+16|0;l=w}}}while(0);c[d+144>>2]=c[e+76>>2];k=c[e+80>>2]|0;l=d+152|0;t=c[l>>2]|0;if((t|0)<(k|0)){h=d+156|0;if((c[h>>2]|0)<(k|0)){if((k|0)==0){x=0;y=t}else{w=zv(k<<5,16)|0;x=w;y=c[l>>2]|0}w=d+160|0;if((y|0)>0){r=0;do{K2(x+(r<<5)|0,(c[w>>2]|0)+(r<<5)|0,32)|0;r=r+1|0;}while((r|0)<(y|0))}y=c[w>>2]|0;r=d+164|0;if((y|0)!=0){if((a[r]&1)!=0){zw(y)}c[w>>2]=0}a[r]=1;c[w>>2]=x;c[h>>2]=k;z=w}else{z=d+160|0}w=j;j=t;do{K2((c[z>>2]|0)+(j<<5)|0,w|0,32)|0;j=j+1|0;}while((j|0)<(k|0))}c[l>>2]=k;if((k|0)<=0){i=f;return}l=d+160|0;d=c[e+72>>2]|0;e=0;while(1){b[(c[l>>2]|0)+(e<<5)+6>>1]=b[d+14>>1]|0;b[(c[l>>2]|0)+(e<<5)+8>>1]=b[d+16>>1]|0;b[(c[l>>2]|0)+(e<<5)+10>>1]=b[d+18>>1]|0;b[(c[l>>2]|0)+(e<<5)>>1]=b[d+8>>1]|0;b[(c[l>>2]|0)+(e<<5)+2>>1]=b[d+10>>1]|0;b[(c[l>>2]|0)+(e<<5)+4>>1]=b[d+12>>1]|0;c[(c[l>>2]|0)+(e<<5)+12>>2]=c[d>>2];c[(c[l>>2]|0)+(e<<5)+16>>2]=c[d+4>>2];j=e+1|0;if((j|0)>=(k|0)){break}d=d+20|0;e=j}i=f;return}function rd(d,e){d=d|0;e=e|0;var f=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;f=i;i=i+112|0;j=f+64|0;k=f+80|0;g[d+20>>2]=+h[e+32>>3];g[d+24>>2]=+h[e+40>>3];g[d+28>>2]=+h[e+48>>3];g[d+32>>2]=+h[e+56>>3];g[d+4>>2]=+h[e>>3];g[d+8>>2]=+h[e+8>>3];g[d+12>>2]=+h[e+16>>3];g[d+16>>2]=+h[e+24>>3];g[d+36>>2]=+h[e+64>>3];g[d+40>>2]=+h[e+72>>3];g[d+44>>2]=+h[e+80>>3];g[d+48>>2]=+h[e+88>>3];c[d+56>>2]=c[e+96>>2];a[d+60|0]=(c[e+100>>2]|0)!=0|0;l=c[e+104>>2]|0;m=f|0;K1(m|0,0,64)|0;n=d+88|0;o=c[n>>2]|0;if((o|0)<(l|0)){p=d+92|0;if((c[p>>2]|0)<(l|0)){if((l|0)==0){q=0;r=o}else{s=zv(l<<6,16)|0;q=s;r=c[n>>2]|0}s=d+96|0;if((r|0)>0){t=0;do{K2(q+(t<<6)|0,(c[s>>2]|0)+(t<<6)|0,64)|0;t=t+1|0;}while((t|0)<(r|0))}r=c[s>>2]|0;t=d+100|0;if((r|0)!=0){if((a[t]&1)!=0){zw(r)}c[s>>2]=0}a[t]=1;c[s>>2]=q;c[p>>2]=l;u=s}else{u=d+96|0}s=o;do{K2((c[u>>2]|0)+(s<<6)|0,m|0,64)|0;s=s+1|0;}while((s|0)<(l|0))}c[n>>2]=l;L23:do{if((l|0)>0){n=d+96|0;s=0;m=c[e+112>>2]|0;while(1){u=c[n>>2]|0;g[u+(s<<6)+16>>2]=+h[m+32>>3];g[u+(s<<6)+20>>2]=+h[m+40>>3];g[u+(s<<6)+24>>2]=+h[m+48>>3];g[u+(s<<6)+28>>2]=+h[m+56>>3];u=c[n>>2]|0;g[u+(s<<6)>>2]=+h[m>>3];g[u+(s<<6)+4>>2]=+h[m+8>>3];g[u+(s<<6)+8>>2]=+h[m+16>>3];g[u+(s<<6)+12>>2]=+h[m+24>>3];c[(c[n>>2]|0)+(s<<6)+32>>2]=c[m+64>>2];c[(c[n>>2]|0)+(s<<6)+36>>2]=c[m+68>>2];c[(c[n>>2]|0)+(s<<6)+40>>2]=c[m+72>>2];u=s+1|0;if((u|0)>=(l|0)){break L23}s=u;m=m+80|0}}}while(0);l=c[e+108>>2]|0;m=j;K1(m|0,0,16)|0;j=d+128|0;s=c[j>>2]|0;if((s|0)<(l|0)){n=d+132|0;if((c[n>>2]|0)<(l|0)){if((l|0)==0){v=0;w=s}else{u=zv(l<<4,16)|0;v=u;w=c[j>>2]|0}u=d+136|0;if((w|0)>0){o=0;do{p=v+(o<<4)|0;q=(c[u>>2]|0)+(o<<4)|0;c[p>>2]=c[q>>2];c[p+4>>2]=c[q+4>>2];c[p+8>>2]=c[q+8>>2];c[p+12>>2]=c[q+12>>2];o=o+1|0;}while((o|0)<(w|0))}w=c[u>>2]|0;o=d+140|0;if((w|0)!=0){if((a[o]&1)!=0){zw(w)}c[u>>2]=0}a[o]=1;c[u>>2]=v;c[n>>2]=l;x=u}else{x=d+136|0}u=s;do{s=(c[x>>2]|0)+(u<<4)|0;c[s>>2]=c[m>>2];c[s+4>>2]=c[m+4>>2];c[s+8>>2]=c[m+8>>2];c[s+12>>2]=c[m+12>>2];u=u+1|0;}while((u|0)<(l|0))}c[j>>2]=l;L51:do{if((l|0)>0){j=d+136|0;u=c[e+116>>2]|0;m=0;while(1){c[(c[j>>2]|0)+(m<<4)+12>>2]=c[u+12>>2];b[(c[j>>2]|0)+(m<<4)+6>>1]=b[u+6>>1]|0;b[(c[j>>2]|0)+(m<<4)+8>>1]=b[u+8>>1]|0;b[(c[j>>2]|0)+(m<<4)+10>>1]=b[u+10>>1]|0;b[(c[j>>2]|0)+(m<<4)>>1]=b[u>>1]|0;b[(c[j>>2]|0)+(m<<4)+2>>1]=b[u+2>>1]|0;b[(c[j>>2]|0)+(m<<4)+4>>1]=b[u+4>>1]|0;x=m+1|0;if((x|0)>=(l|0)){break L51}u=u+16|0;m=x}}}while(0);c[d+144>>2]=c[e+120>>2];l=c[e+124>>2]|0;m=d+152|0;u=c[m>>2]|0;if((u|0)<(l|0)){j=d+156|0;if((c[j>>2]|0)<(l|0)){if((l|0)==0){y=0;z=u}else{x=zv(l<<5,16)|0;y=x;z=c[m>>2]|0}x=d+160|0;if((z|0)>0){s=0;do{K2(y+(s<<5)|0,(c[x>>2]|0)+(s<<5)|0,32)|0;s=s+1|0;}while((s|0)<(z|0))}z=c[x>>2]|0;s=d+164|0;if((z|0)!=0){if((a[s]&1)!=0){zw(z)}c[x>>2]=0}a[s]=1;c[x>>2]=y;c[j>>2]=l;A=x}else{A=d+160|0}x=k;k=u;do{K2((c[A>>2]|0)+(k<<5)|0,x|0,32)|0;k=k+1|0;}while((k|0)<(l|0))}c[m>>2]=l;if((l|0)<=0){i=f;return}m=d+160|0;d=c[e+128>>2]|0;e=0;while(1){b[(c[m>>2]|0)+(e<<5)+6>>1]=b[d+14>>1]|0;b[(c[m>>2]|0)+(e<<5)+8>>1]=b[d+16>>1]|0;b[(c[m>>2]|0)+(e<<5)+10>>1]=b[d+18>>1]|0;b[(c[m>>2]|0)+(e<<5)>>1]=b[d+8>>1]|0;b[(c[m>>2]|0)+(e<<5)+2>>1]=b[d+10>>1]|0;b[(c[m>>2]|0)+(e<<5)+4>>1]=b[d+12>>1]|0;c[(c[m>>2]|0)+(e<<5)+12>>2]=c[d>>2];c[(c[m>>2]|0)+(e<<5)+16>>2]=c[d+4>>2];k=e+1|0;if((k|0)>=(l|0)){break}d=d+20|0;e=k}i=f;return}function re(d,e,f){d=d|0;e=e|0;f=f|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;g[e+16>>2]=+g[d+20>>2];g[e+20>>2]=+g[d+24>>2];g[e+24>>2]=+g[d+28>>2];g[e+28>>2]=+g[d+32>>2];g[e>>2]=+g[d+4>>2];g[e+4>>2]=+g[d+8>>2];g[e+8>>2]=+g[d+12>>2];g[e+12>>2]=+g[d+16>>2];g[e+32>>2]=+g[d+36>>2];g[e+36>>2]=+g[d+40>>2];g[e+40>>2]=+g[d+44>>2];g[e+44>>2]=+g[d+48>>2];c[e+48>>2]=c[d+56>>2];c[e+52>>2]=a[d+60|0]&1;h=d+88|0;c[e+56>>2]=c[h>>2];do{if((c[h>>2]|0)==0){c[e+64>>2]=0}else{i=d+96|0;j=hx[c[(c[f>>2]|0)+28>>2]&127](f,c[i>>2]|0)|0;c[e+64>>2]=j;if((j|0)==0){break}j=c[h>>2]|0;k=hd[c[(c[f>>2]|0)+16>>2]&127](f,48,j)|0;if((j|0)>0){l=0;m=c[k+8>>2]|0;while(1){n=c[i>>2]|0;g[m+16>>2]=+g[n+(l<<6)+16>>2];g[m+20>>2]=+g[n+(l<<6)+20>>2];g[m+24>>2]=+g[n+(l<<6)+24>>2];g[m+28>>2]=+g[n+(l<<6)+28>>2];n=c[i>>2]|0;g[m>>2]=+g[n+(l<<6)>>2];g[m+4>>2]=+g[n+(l<<6)+4>>2];g[m+8>>2]=+g[n+(l<<6)+8>>2];g[m+12>>2]=+g[n+(l<<6)+12>>2];c[m+32>>2]=c[(c[i>>2]|0)+(l<<6)+32>>2];c[m+36>>2]=c[(c[i>>2]|0)+(l<<6)+36>>2];c[m+40>>2]=c[(c[i>>2]|0)+(l<<6)+40>>2];n=l+1|0;if((n|0)<(j|0)){l=n;m=m+48|0}else{break}}}g7[c[(c[f>>2]|0)+20>>2]&127](f,k,14456,1497453121,c[i>>2]|0)}}while(0);h=d+128|0;c[e+60>>2]=c[h>>2];do{if((c[h>>2]|0)==0){c[e+68>>2]=0}else{m=d+136|0;l=hx[c[(c[f>>2]|0)+28>>2]&127](f,c[m>>2]|0)|0;c[e+68>>2]=l;if((l|0)==0){break}l=c[h>>2]|0;j=hd[c[(c[f>>2]|0)+16>>2]&127](f,16,l)|0;if((l|0)>0){n=0;o=c[j+8>>2]|0;while(1){c[o+12>>2]=c[(c[m>>2]|0)+(n<<4)+12>>2];b[o+6>>1]=b[(c[m>>2]|0)+(n<<4)+6>>1]|0;b[o+8>>1]=b[(c[m>>2]|0)+(n<<4)+8>>1]|0;b[o+10>>1]=b[(c[m>>2]|0)+(n<<4)+10>>1]|0;b[o>>1]=b[(c[m>>2]|0)+(n<<4)>>1]|0;b[o+2>>1]=b[(c[m>>2]|0)+(n<<4)+2>>1]|0;b[o+4>>1]=b[(c[m>>2]|0)+(n<<4)+4>>1]|0;p=n+1|0;if((p|0)<(l|0)){n=p;o=o+16|0}else{break}}}g7[c[(c[f>>2]|0)+20>>2]&127](f,j,22896,1497453121,c[m>>2]|0)}}while(0);c[e+76>>2]=c[d+144>>2];h=d+152|0;c[e+80>>2]=c[h>>2];if((c[h>>2]|0)==0){c[e+72>>2]=0;return 19176}o=d+160|0;d=hx[c[(c[f>>2]|0)+28>>2]&127](f,c[o>>2]|0)|0;c[e+72>>2]=d;if((d|0)==0){return 19176}d=c[h>>2]|0;h=hd[c[(c[f>>2]|0)+16>>2]&127](f,20,d)|0;if((d|0)>0){e=c[h+8>>2]|0;n=0;while(1){b[e+14>>1]=b[(c[o>>2]|0)+(n<<5)+6>>1]|0;b[e+16>>1]=b[(c[o>>2]|0)+(n<<5)+8>>1]|0;b[e+18>>1]=b[(c[o>>2]|0)+(n<<5)+10>>1]|0;b[e+8>>1]=b[(c[o>>2]|0)+(n<<5)>>1]|0;b[e+10>>1]=b[(c[o>>2]|0)+(n<<5)+2>>1]|0;b[e+12>>1]=b[(c[o>>2]|0)+(n<<5)+4>>1]|0;c[e>>2]=c[(c[o>>2]|0)+(n<<5)+12>>2];c[e+4>>2]=c[(c[o>>2]|0)+(n<<5)+16>>2];l=n+1|0;if((l|0)<(d|0)){e=e+20|0;n=l}else{break}}}g7[c[(c[f>>2]|0)+20>>2]&127](f,h,20944,1497453121,c[o>>2]|0);return 19176}function rf(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;pJ(a|0,b);c[a>>2]=31192;return}function rg(a){a=a|0;KU(a);return}function rh(a){a=a|0;return}function ri(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0;rf(b|0,e,f,g);c[b>>2]=31608;e=b+8|0;a[e]=0;h=b+12|0;c[h>>2]=d;if((d|0)!=0){return}d=b+4|0;b=c[d>>2]|0;i=f+8|0;f=g+8|0;if(!(hd[c[(c[b>>2]|0)+24>>2]&127](b,c[i>>2]|0,c[f>>2]|0)|0)){return}b=c[d>>2]|0;c[h>>2]=hd[c[(c[b>>2]|0)+12>>2]&127](b,c[i>>2]|0,c[f>>2]|0)|0;a[e]=1;return}function rj(b){b=b|0;var d=0,e=0;c[b>>2]=31608;do{if((a[b+8|0]&1)!=0){d=c[b+12>>2]|0;if((d|0)==0){break}e=c[b+4>>2]|0;g0[c[(c[e>>2]|0)+16>>2]&511](e,d)}}while(0);rh(b|0);KU(b);return}function rk(b){b=b|0;var d=0,e=0;c[b>>2]=31608;do{if((a[b+8|0]&1)!=0){d=c[b+12>>2]|0;if((d|0)==0){break}e=c[b+4>>2]|0;g0[c[(c[e>>2]|0)+16>>2]&511](e,d)}}while(0);rh(b|0);return}function rl(b,d,e,f,h){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;j=i;i=i+152|0;k=j|0;l=j+136|0;m=c[b+12>>2]|0;if((m|0)==0){i=j;return}n=c[d+4>>2]|0;o=c[e+4>>2]|0;p=h+4|0;c[p>>2]=m;c[k+132>>2]=0;g[k+128>>2]=999999984306749400.0;m=c[d+12>>2]|0;d=k;q=m;c[d>>2]=c[q>>2];c[d+4>>2]=c[q+4>>2];c[d+8>>2]=c[q+8>>2];c[d+12>>2]=c[q+12>>2];q=k+16|0;d=m+16|0;c[q>>2]=c[d>>2];c[q+4>>2]=c[d+4>>2];c[q+8>>2]=c[d+8>>2];c[q+12>>2]=c[d+12>>2];d=k+32|0;q=m+32|0;c[d>>2]=c[q>>2];c[d+4>>2]=c[q+4>>2];c[d+8>>2]=c[q+8>>2];c[d+12>>2]=c[q+12>>2];q=k+48|0;d=m+48|0;c[q>>2]=c[d>>2];c[q+4>>2]=c[d+4>>2];c[q+8>>2]=c[d+8>>2];c[q+12>>2]=c[d+12>>2];d=c[e+12>>2]|0;e=k+64|0;q=d;c[e>>2]=c[q>>2];c[e+4>>2]=c[q+4>>2];c[e+8>>2]=c[q+8>>2];c[e+12>>2]=c[q+12>>2];q=k+80|0;e=d+16|0;c[q>>2]=c[e>>2];c[q+4>>2]=c[e+4>>2];c[q+8>>2]=c[e+8>>2];c[q+12>>2]=c[e+12>>2];e=k+96|0;q=d+32|0;c[e>>2]=c[q>>2];c[e+4>>2]=c[q+4>>2];c[e+8>>2]=c[q+8>>2];c[e+12>>2]=c[q+12>>2];q=k+112|0;e=d+48|0;c[q>>2]=c[e>>2];c[q+4>>2]=c[e+4>>2];c[q+8>>2]=c[e+8>>2];c[q+12>>2]=c[e+12>>2];ro(l,n,o);rr(l,k,h|0,c[f+20>>2]|0,0);if((a[b+8|0]&1)==0){i=j;return}b=c[p>>2]|0;if((c[b+748>>2]|0)==0){i=j;return}p=c[b+740>>2]|0;f=c[(c[h+8>>2]|0)+8>>2]|0;if((p|0)==(f|0)){vX(b,p+4|0,(c[(c[h+12>>2]|0)+8>>2]|0)+4|0);i=j;return}else{vX(b,(c[(c[h+12>>2]|0)+8>>2]|0)+4|0,f+4|0);i=j;return}}function rm(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return+1.0}function rn(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;e=b+12|0;if((c[e>>2]|0)==0){return}if((a[b+8|0]&1)==0){return}b=d+4|0;f=c[b>>2]|0;g=d+8|0;do{if((f|0)==(c[g>>2]|0)){h=(f|0)==0?1:f<<1;if((f|0)>=(h|0)){i=f;break}if((h|0)==0){j=0;k=f}else{l=zv(h<<2,16)|0;j=l;k=c[b>>2]|0}l=d+12|0;if((k|0)>0){m=0;do{n=j+(m<<2)|0;if((n|0)!=0){c[n>>2]=c[(c[l>>2]|0)+(m<<2)>>2]}m=m+1|0;}while((m|0)<(k|0))}m=c[l>>2]|0;n=d+16|0;if((m|0)!=0){if((a[n]&1)!=0){zw(m)}c[l>>2]=0}a[n]=1;c[l>>2]=j;c[g>>2]=h;i=c[b>>2]|0}else{i=f}}while(0);f=(c[d+12>>2]|0)+(i<<2)|0;if((f|0)==0){o=i}else{c[f>>2]=c[e>>2];o=c[b>>2]|0}c[b>>2]=o+1;return}function ro(a,b,d){a=a|0;b=b|0;d=d|0;c[a>>2]=34104;c[a+4>>2]=b;c[a+8>>2]=d;return}function rp(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var h=0,j=0,k=0,l=0.0,m=0.0,n=0,o=0,p=0,q=0.0,r=0.0,s=0.0,t=0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0,G=0,H=0,I=0,J=0.0,K=0.0,L=0,M=0.0;h=i;i=i+64|0;j=h|0;k=h+32|0;if((a|0)==1){l=+g[b>>2];m=+g[b+4>>2];n=9}else if((a|0)==2){l=(+g[b>>2]+ +g[b+8>>2])*.5;m=(+g[b+4>>2]+ +g[b+12>>2])*.5;n=9}else{o=a-1|0;if((o|0)>0){p=0;q=0.0;r=0.0;s=0.0;while(1){t=p<<1;u=+g[b+(t<<2)>>2];v=+g[b+(t+3<<2)>>2];w=+g[b+(t+2<<2)>>2];x=+g[b+((t|1)<<2)>>2];y=u*v-w*x;z=q+y;A=r+(u+w)*y;w=s+(v+x)*y;t=p+1|0;if((t|0)<(o|0)){p=t;q=z;r=A;s=w}else{B=z;C=A;D=w;break}}}else{B=0.0;C=0.0;D=0.0}p=a<<1;s=+g[b+(p-2<<2)>>2];r=+g[b+4>>2];q=+g[b>>2];w=+g[b+(p-1<<2)>>2];A=s*r-q*w;z=B+A;if(+V(+z)>1.1920928955078125e-7){E=1.0/(z*3.0)}else{E=999999984306749400.0}if((a|0)>0){l=E*(C+A*(s+q));m=E*(D+A*(w+r));n=9}else{F=0}}if((n|0)==9){n=0;while(1){p=n<<1;g[j+(n<<2)>>2]=+ac(+(+g[b+((p|1)<<2)>>2]-m),+(+g[b+(p<<2)>>2]-l));p=n+1|0;if((p|0)<(a|0)){n=p}else{G=0;break}}while(1){c[k+(G<<2)>>2]=1;n=G+1|0;if((n|0)<(a|0)){G=n}else{F=1;break}}}G=k+(e<<2)|0;c[G>>2]=0;c[f>>2]=e;n=f+4|0;if((d|0)<=1){i=h;return}l=6.2831854820251465/+(d|0);f=j+(e<<2)|0;if(F){H=1;I=n}else{F=2;b=n;while(1){c[b>>2]=e;c[G>>2]=0;if((F|0)>=(d|0)){break}F=F+1|0;b=b+4|0}i=h;return}while(1){m=+(H|0)*l+ +g[f>>2];if(m>3.1415927410125732){J=m+ -6.2831854820251465}else{J=m}c[I>>2]=e;b=0;m=1.0e9;F=e;while(1){do{if((c[k+(b<<2)>>2]|0)==0){K=m;L=F}else{r=+V(+(+g[j+(b<<2)>>2]-J));if(r>3.1415927410125732){M=6.2831854820251465-r}else{M=r}if(M>=m){K=m;L=F;break}c[I>>2]=b;K=M;L=b}}while(0);G=b+1|0;if((G|0)<(a|0)){b=G;m=K;F=L}else{break}}c[k+(L<<2)>>2]=0;F=H+1|0;if((F|0)>=(d|0)){break}H=F;I=I+4|0}i=h;return}function rq(a,b,d,e,f,h,j,k,l,m,n,o,p){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;p=p|0;var q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0.0,S=0.0,T=0.0,U=0.0,X=0.0,Y=0.0,Z=0.0,_=0,$=0.0,aa=0,ab=0.0,ac=0,ad=0.0,ae=0.0,af=0,ag=0.0,ah=0,ai=0.0,aj=0,ak=0.0,al=0.0,am=0.0,an=0,ao=0.0,ap=0.0,aq=0.0,ar=0.0,as=0.0,at=0.0,au=0.0,av=0.0,aw=0.0,ax=0.0,ay=0,az=0.0,aA=0,aB=0.0,aC=0.0,aD=0,aE=0.0,aF=0,aG=0.0,aH=0,aI=0.0,aJ=0.0,aK=0.0,aL=0.0,aM=0.0,aN=0.0,aO=0.0,aP=0.0,aQ=0.0,aR=0.0,aS=0.0,aT=0.0,aU=0,aV=0,aW=0,aX=0,aY=0.0,aZ=0,a_=0,a$=0,a0=0.0,a1=0,a2=0,a3=0,a4=0.0,a5=0,a6=0,a7=0,a8=0.0,a9=0,ba=0,bb=0,bc=0.0,bd=0,be=0,bf=0,bg=0.0,bh=0,bi=0,bj=0,bk=0.0,bl=0.0,bm=0.0,bn=0.0,bo=0,bp=0,bq=0,br=0.0,bs=0.0,bt=0.0,bu=0.0,bv=0,bw=0,bx=0,by=0.0,bz=0.0,bA=0.0,bB=0.0,bC=0,bD=0,bE=0,bF=0.0,bG=0.0,bH=0.0,bI=0.0,bJ=0,bK=0,bL=0,bM=0.0,bN=0.0,bO=0.0,bP=0.0,bQ=0,bR=0,bS=0,bT=0.0,bU=0.0,bV=0.0,bW=0.0,bX=0,bY=0,bZ=0,b_=0.0,b$=0.0,b0=0.0,b1=0.0,b2=0,b3=0,b4=0,b5=0.0,b6=0.0,b7=0.0,b8=0.0,b9=0,ca=0,cb=0,cc=0.0,cd=0.0,ce=0.0,cf=0.0,cg=0,ch=0,ci=0.0,cj=0.0,ck=0.0,cl=0.0,cm=0.0,cn=0.0,co=0.0,cp=0.0,cq=0.0,cr=0,cs=0,ct=0,cu=0,cv=0,cw=0,cx=0,cy=0,cz=0,cA=0.0,cB=0.0,cC=0.0,cD=0,cE=0,cF=0,cG=0,cH=0,cI=0,cJ=0.0,cK=0.0,cL=0,cM=0,cN=0,cO=0,cP=0,cQ=0,cR=0,cS=0,cT=0,cU=0,cV=0.0,cW=0.0,cX=0,cY=0,cZ=0,c_=0,c$=0;o=i;n=e;q=a;r=i;i=i+64|0;s=i;i=i+12|0;i=i+7&-8;t=i;i=i+12|0;i=i+7&-8;u=i;i=i+16|0;v=u;w=i;i=i+16|0;x=w;y=i;i=i+16|0;z=i;i=i+16|0;A=i;i=i+16|0;B=i;i=i+32|0;C=i;i=i+8|0;D=i;i=i+64|0;E=i;i=i+96|0;F=i;i=i+32|0;G=i;i=i+16|0;H=i;i=i+16|0;I=i;i=i+16|0;J=i;i=i+16|0;K=i;i=i+32|0;L=i;i=i+16|0;M=i;i=i+16|0;N=i;i=i+16|0;O=i;i=i+16|0;P=e|0;Q=a|0;R=+g[P>>2]- +g[Q>>2];S=+g[e+4>>2]- +g[a+4>>2];T=+g[e+8>>2]- +g[a+8>>2];U=+g[b>>2];a=b+16|0;X=+g[a>>2];e=b+32|0;Y=+g[e>>2];Z=R*U+S*X+T*Y;_=b+4|0;$=+g[_>>2];aa=b+20|0;ab=+g[aa>>2];ac=b+36|0;ad=+g[ac>>2];ae=R*$+S*ab+T*ad;af=b+8|0;ag=+g[af>>2];ah=b+24|0;ai=+g[ah>>2];aj=b+40|0;ak=+g[aj>>2];al=R*ag+S*ai+T*ak;am=+g[d>>2]*.5;an=s|0;g[an>>2]=am;ao=+g[d+4>>2]*.5;g[s+4>>2]=ao;ap=+g[d+8>>2]*.5;g[s+8>>2]=ap;aq=+g[h>>2]*.5;s=t|0;g[s>>2]=aq;ar=+g[h+4>>2]*.5;g[t+4>>2]=ar;as=+g[h+8>>2]*.5;g[t+8>>2]=as;at=+g[f>>2];t=f+16|0;au=+g[t>>2];h=f+32|0;av=+g[h>>2];aw=U*at+X*au+Y*av;d=f+4|0;ax=+g[d>>2];ay=f+20|0;az=+g[ay>>2];aA=f+36|0;aB=+g[aA>>2];aC=U*ax+X*az+Y*aB;aD=f+8|0;aE=+g[aD>>2];aF=f+24|0;aG=+g[aF>>2];aH=f+40|0;aI=+g[aH>>2];aJ=U*aE+X*aG+Y*aI;Y=at*$+au*ab+av*ad;X=ax*$+az*ab+aB*ad;aK=aE*$+aG*ab+aI*ad;ad=at*ag+au*ai+av*ak;ab=ax*ag+az*ai+aB*ak;aL=aE*ag+aG*ai+aI*ak;ak=+V(+aw);ai=+V(+aC);aM=+V(+aJ);aN=+V(+Y);aO=+V(+X);aP=+V(+aK);aQ=+V(+ad);aR=+V(+ab);aS=+V(+aL);aT=+V(+Z)-(as*aM+(am+ak*aq+ai*ar));if(aT>0.0){aU=0;i=o;return aU|0}if(aT>-3.4028234663852886e+38){aV=b;aW=1;aX=Z<0.0|0;aY=aT}else{aV=0;aW=0;aX=0;aY=-3.4028234663852886e+38}aT=+V(+ae)-(ao+aN*aq+aO*ar+aP*as);if(aT>0.0){aU=0;i=o;return aU|0}if(aT>aY){aZ=_;a_=2;a$=ae<0.0|0;a0=aT}else{aZ=aV;a_=aW;a$=aX;a0=aY}aY=+V(+al)-(ap+aQ*aq+aR*ar+aS*as);if(aY>0.0){aU=0;i=o;return aU|0}if(aY>a0){a1=af;a2=3;a3=al<0.0|0;a4=aY}else{a1=aZ;a2=a_;a3=a$;a4=a0}a0=R*at+S*au+T*av;av=+V(+a0)-(aq+(ak*am+aN*ao+aQ*ap));if(av>0.0){aU=0;i=o;return aU|0}if(av>a4){a5=f;a6=4;a7=a0<0.0|0;a8=av}else{a5=a1;a6=a2;a7=a3;a8=a4}a4=R*ax+S*az+T*aB;aB=+V(+a4)-(ar+(ai*am+aO*ao+aR*ap));if(aB>0.0){aU=0;i=o;return aU|0}if(aB>a8){a9=d;ba=5;bb=a4<0.0|0;bc=aB}else{a9=a5;ba=a6;bb=a7;bc=a8}a8=R*aE+S*aG+T*aI;aI=+V(+a8)-(as+(aM*am+aP*ao+aS*ap));if(aI>0.0){aU=0;i=o;return aU|0}if(aI>bc){bd=aD;be=6;bf=a8<0.0|0;bg=aI}else{bd=a9;be=ba;bf=bb;bg=bc}bc=ak+9999999747378752.0e-21;ak=ai+9999999747378752.0e-21;ai=aM+9999999747378752.0e-21;aM=aN+9999999747378752.0e-21;aN=aO+9999999747378752.0e-21;aO=aP+9999999747378752.0e-21;aP=aQ+9999999747378752.0e-21;aQ=aR+9999999747378752.0e-21;aR=aS+9999999747378752.0e-21;aS=al*Y-ae*ad;aI=+V(+aS)-(aP*ao+aM*ap+ai*ar+ak*as);if(aI>1.1920928955078125e-7){aU=0;i=o;return aU|0}a8=-0.0-ad;T=ad*ad+0.0;aG=Y*Y;S=+W(aG+T);do{if(S>1.1920928955078125e-7){aE=aI/S;if(aE*1.0499999523162842<=bg){bh=bd;bi=be;bj=bf;bk=bg;bl=0.0;bm=0.0;bn=0.0;break}bh=0;bi=7;bj=aS<0.0|0;bk=aE;bl=0.0/S;bm=a8/S;bn=Y/S}else{bh=bd;bi=be;bj=bf;bk=bg;bl=0.0;bm=0.0;bn=0.0}}while(0);bg=al*X-ae*ab;S=+V(+bg)-(aQ*ao+aN*ap+ai*aq+bc*as);if(S>1.1920928955078125e-7){aU=0;i=o;return aU|0}a8=-0.0-ab;aS=ab*ab+0.0;aI=X*X;aE=+W(aI+aS);do{if(aE>1.1920928955078125e-7){R=S/aE;if(R*1.0499999523162842<=bk){bo=bh;bp=bi;bq=bj;br=bk;bs=bl;bt=bm;bu=bn;break}bo=0;bp=8;bq=bg<0.0|0;br=R;bs=0.0/aE;bt=a8/aE;bu=X/aE}else{bo=bh;bp=bi;bq=bj;br=bk;bs=bl;bt=bm;bu=bn}}while(0);bn=al*aK-ae*aL;bm=+V(+bn)-(aR*ao+aO*ap+ak*aq+bc*ar);if(bm>1.1920928955078125e-7){aU=0;i=o;return aU|0}bl=-0.0-aL;bk=aL*aL+0.0;aE=aK*aK;a8=+W(aE+bk);do{if(a8>1.1920928955078125e-7){bg=bm/a8;if(bg*1.0499999523162842<=br){bv=bo;bw=bp;bx=bq;by=br;bz=bs;bA=bt;bB=bu;break}bv=0;bw=9;bx=bn<0.0|0;by=bg;bz=0.0/a8;bA=bl/a8;bB=aK/a8}else{bv=bo;bw=bp;bx=bq;by=br;bz=bs;bA=bt;bB=bu}}while(0);bu=Z*ad-al*aw;bt=+V(+bu)-(aP*am+bc*ap+aO*ar+aN*as);if(bt>1.1920928955078125e-7){aU=0;i=o;return aU|0}bs=-0.0-aw;br=aw*aw;a8=+W(br+T);do{if(a8>1.1920928955078125e-7){T=bt/a8;if(T*1.0499999523162842<=by){bC=bv;bD=bw;bE=bx;bF=by;bG=bz;bH=bA;bI=bB;break}bC=0;bD=10;bE=bu<0.0|0;bF=T;bG=ad/a8;bH=0.0/a8;bI=bs/a8}else{bC=bv;bD=bw;bE=bx;bF=by;bG=bz;bH=bA;bI=bB}}while(0);bB=Z*ab-al*aC;bA=+V(+bB)-(aQ*am+ak*ap+aO*aq+aM*as);if(bA>1.1920928955078125e-7){aU=0;i=o;return aU|0}bz=-0.0-aC;by=aC*aC;a8=+W(by+aS);do{if(a8>1.1920928955078125e-7){aS=bA/a8;if(aS*1.0499999523162842<=bF){bJ=bC;bK=bD;bL=bE;bM=bF;bN=bG;bO=bH;bP=bI;break}bJ=0;bK=11;bL=bB<0.0|0;bM=aS;bN=ab/a8;bO=0.0/a8;bP=bz/a8}else{bJ=bC;bK=bD;bL=bE;bM=bF;bN=bG;bO=bH;bP=bI}}while(0);bI=Z*aL-al*aJ;al=+V(+bI)-(aR*am+ai*ap+aN*aq+aM*ar);if(al>1.1920928955078125e-7){aU=0;i=o;return aU|0}bH=-0.0-aJ;bG=aJ*aJ;bF=+W(bG+bk);do{if(bF>1.1920928955078125e-7){bk=al/bF;if(bk*1.0499999523162842<=bM){bQ=bJ;bR=bK;bS=bL;bT=bM;bU=bN;bV=bO;bW=bP;break}bQ=0;bR=12;bS=bI<0.0|0;bT=bk;bU=aL/bF;bV=0.0/bF;bW=bH/bF}else{bQ=bJ;bR=bK;bS=bL;bT=bM;bU=bN;bV=bO;bW=bP}}while(0);bP=ae*aw-Z*Y;bO=+V(+bP)-(aM*am+bc*ao+aR*ar+aQ*as);if(bO>1.1920928955078125e-7){aU=0;i=o;return aU|0}bc=-0.0-Y;Y=+W(br+aG+0.0);do{if(Y>1.1920928955078125e-7){aG=bO/Y;if(aG*1.0499999523162842<=bT){bX=bQ;bY=bR;bZ=bS;b_=bT;b$=bU;b0=bV;b1=bW;break}bX=0;bY=13;bZ=bP<0.0|0;b_=aG;b$=bc/Y;b0=aw/Y;b1=0.0/Y}else{bX=bQ;bY=bR;bZ=bS;b_=bT;b$=bU;b0=bV;b1=bW}}while(0);bW=ae*aC-Z*X;bV=+V(+bW)-(aN*am+ak*ao+aR*aq+aP*as);if(bV>1.1920928955078125e-7){aU=0;i=o;return aU|0}aR=-0.0-X;X=+W(by+aI+0.0);do{if(X>1.1920928955078125e-7){aI=bV/X;if(aI*1.0499999523162842<=b_){b2=bX;b3=bY;b4=bZ;b5=b_;b6=b$;b7=b0;b8=b1;break}b2=0;b3=14;b4=bW<0.0|0;b5=aI;b6=aR/X;b7=aC/X;b8=0.0/X}else{b2=bX;b3=bY;b4=bZ;b5=b_;b6=b$;b7=b0;b8=b1}}while(0);b1=ae*aJ-Z*aK;Z=+V(+b1)-(aO*am+ai*ao+aQ*aq+aP*ar);if(Z>1.1920928955078125e-7){aU=0;i=o;return aU|0}aP=-0.0-aK;aK=+W(bG+aE+0.0);do{if(aK>1.1920928955078125e-7){aE=Z/aK;if(aE*1.0499999523162842<=b5){b9=55;break}ca=15;cb=b1<0.0|0;cc=aE;cd=aP/aK;ce=aJ/aK;cf=0.0/aK;b9=58}else{b9=55}}while(0);do{if((b9|0)==55){if((b3|0)==0){aU=0;i=o;return aU|0}if((b2|0)==0){ca=b3;cb=b4;cc=b5;cd=b6;ce=b7;cf=b8;b9=58;break}aK=+g[b2>>2];g[j>>2]=aK;aJ=+g[b2+16>>2];g[j+4>>2]=aJ;aP=+g[b2+32>>2];g[j+8>>2]=aP;cg=b3;ch=b4;ci=b5;cj=aK;ck=aJ;cl=aP}}while(0);if((b9|0)==58){b5=cd*U+ce*$+cf*ag;g[j>>2]=b5;ag=cd*+g[a>>2]+ce*+g[aa>>2]+cf*+g[ah>>2];g[j+4>>2]=ag;$=cd*+g[e>>2]+ce*+g[ac>>2]+cf*+g[aj>>2];g[j+8>>2]=$;cg=ca;ch=cb;ci=cc;cj=b5;ck=ag;cl=$}if((ch|0)!=0){g[j>>2]=-0.0-cj;g[j+4>>2]=-0.0-ck;g[j+8>>2]=-0.0-cl}g[k>>2]=-0.0-ci;if((cg|0)>6){c[v>>2]=c[q>>2];c[v+4>>2]=c[q+4>>2];c[v+8>>2]=c[q+8>>2];cl=+g[j>>2];ck=+g[j+4>>2];cj=+g[j+8>>2];$=+g[b>>2];ag=+g[a>>2];b5=+g[e>>2];cc=(cl*$+ck*ag+cj*b5>0.0?1.0:-1.0)*am;e=u|0;a=u+4|0;q=u+8|0;am=+g[_>>2];cf=+g[aa>>2];ce=+g[ac>>2];cd=(cl*am+ck*cf+cj*ce>0.0?1.0:-1.0)*ao;ao=+g[a>>2]+cc*ag+cd*cf;cf=+g[q>>2]+cc*b5+cd*ce;ce=+g[af>>2];b5=+g[ah>>2];ag=+g[aj>>2];U=(cl*ce+ck*b5+cj*ag>0.0?1.0:-1.0)*ap;ap=+g[e>>2]+cc*$+cd*am+U*ce;g[e>>2]=ap;ce=ao+U*b5;g[a>>2]=ce;b5=cf+U*ag;g[q>>2]=b5;c[x>>2]=c[n>>2];c[x+4>>2]=c[n+4>>2];c[x+8>>2]=c[n+8>>2];ag=+g[f>>2];U=+g[t>>2];cf=+g[h>>2];ao=(cl*ag+ck*U+cj*cf>0.0?-1.0:1.0)*aq;h=w|0;t=w+4|0;n=w+8|0;aq=+g[d>>2];am=+g[ay>>2];cd=+g[aA>>2];$=(cl*aq+ck*am+cj*cd>0.0?-1.0:1.0)*ar;ar=+g[t>>2]+ao*U+$*am;am=+g[n>>2]+ao*cf+$*cd;cd=+g[aD>>2];cf=+g[aF>>2];U=+g[aH>>2];cc=(cl*cd+ck*cf+cj*U>0.0?-1.0:1.0)*as;as=+g[h>>2]+ao*ag+$*aq+cc*cd;g[h>>2]=as;cd=ar+cc*cf;g[t>>2]=cd;cf=am+cc*U;g[n>>2]=cf;aH=cg-7|0;aF=(aH|0)/3|0;U=+g[b+(aF<<2)>>2];cc=+g[b+(aF+4<<2)>>2];am=+g[b+(aF+8<<2)>>2];aF=(aH|0)%3|0;ar=+g[f+(aF<<2)>>2];aq=+g[f+(aF+4<<2)>>2];$=+g[f+(aF+8<<2)>>2];ag=as-ap;ao=cd-ce;b8=cf-b5;b7=U*ar+cc*aq+am*$;b6=ag*U+ao*cc+b8*am;aP=ag*ar+ao*aq+b8*$;b8=1.0-b7*b7;if(b8>9999999747378752.0e-20){ao=1.0/b8;cm=(b6*b7-aP)*ao;cn=(b6+b7*(-0.0-aP))*ao}else{cm=0.0;cn=0.0}g[e>>2]=ap+cn*U;g[a>>2]=ce+cn*cc;g[q>>2]=b5+cn*am;g[h>>2]=as+cm*ar;g[t>>2]=cd+cm*aq;g[n>>2]=cf+cm*$;n=c[(c[p>>2]|0)+16>>2]|0;g[y>>2]=-0.0-cl;g[y+4>>2]=-0.0-ck;g[y+8>>2]=-0.0-cj;g[y+12>>2]=0.0;ha[n&31](p,y,w,ci);c[l>>2]=cg;aU=1;i=o;return aU|0}w=(cg|0)<4;y=j|0;ci=+g[y>>2];if(w){co=ci;cp=+g[j+4>>2];cq=+g[j+8>>2];cr=b;cs=f;ct=Q;cu=P;cv=an;cw=s}else{co=-0.0-ci;cp=-0.0- +g[j+4>>2];cq=-0.0- +g[j+8>>2];cr=f;cs=b;ct=P;cu=Q;cv=s;cw=an}ci=co*+g[cs>>2]+cp*+g[cs+16>>2]+cq*+g[cs+32>>2];g[z>>2]=ci;cj=co*+g[cs+4>>2]+cp*+g[cs+20>>2]+cq*+g[cs+36>>2];g[z+4>>2]=cj;ck=co*+g[cs+8>>2]+cp*+g[cs+24>>2]+cq*+g[cs+40>>2];g[z+8>>2]=ck;cl=+V(+ci);ci=+V(+cj);cj=+V(+ck);if(ci>cl){an=ci>cj;cx=0;cy=an?1:2;cz=an}else{an=cl>cj;cx=an&1;cy=an?0:2;cz=an}an=cz?2:1;cj=+g[cw+(cy<<2)>>2];cl=+g[cu>>2]- +g[ct>>2];ci=cj*+g[cs+(cy<<2)>>2];if(+g[z+(cy<<2)>>2]<0.0){ck=cl+ci;g[A>>2]=ck;$=+g[cu+4>>2]- +g[ct+4>>2]+cj*+g[cs+((cy|4)<<2)>>2];g[A+4>>2]=$;cm=+g[cu+8>>2]- +g[ct+8>>2]+cj*+g[cs+((cy|8)<<2)>>2];g[A+8>>2]=cm;cA=ck;cB=$;cC=cm}else{cm=cl-ci;g[A>>2]=cm;ci=+g[cu+4>>2]- +g[ct+4>>2]-cj*+g[cs+((cy|4)<<2)>>2];g[A+4>>2]=ci;cl=+g[cu+8>>2]- +g[ct+8>>2]-cj*+g[cs+((cy|8)<<2)>>2];g[A+8>>2]=cl;cA=cm;cB=ci;cC=cl}cy=(w?-1:-4)+cg|0;if((cy|0)==1){cD=2;cE=0}else if((cy|0)==0){cD=2;cE=1}else{cD=1;cE=0}cu=A|0;z=A+4|0;cz=A+8|0;cl=+g[cr+(cE<<2)>>2];ci=+g[cr+((cE|4)<<2)>>2];cm=+g[cr+((cE|8)<<2)>>2];cj=cA*cl+cB*ci+cC*cm;$=+g[cr+(cD<<2)>>2];ck=+g[cr+((cD|4)<<2)>>2];cf=+g[cr+((cD|8)<<2)>>2];aq=cA*$+cB*ck+cC*cf;cr=cs+(cx<<2)|0;cC=+g[cr>>2];A=cs+((cx|4)<<2)|0;cB=+g[A>>2];s=cs+((cx|8)<<2)|0;cA=+g[s>>2];cd=cl*cC+ci*cB+cm*cA;Q=cs+(an<<2)|0;ar=+g[Q>>2];P=cs+((an|4)<<2)|0;as=+g[P>>2];b=cs+((an|8)<<2)|0;am=+g[b>>2];cn=cl*ar+ci*as+cm*am;cm=$*cC+ck*cB+cf*cA;cA=$*ar+ck*as+cf*am;am=+g[cw+(cx<<2)>>2];cf=cd*am;as=cm*am;am=+g[cw+(an<<2)>>2];ck=cn*am;ar=cA*am;am=cj-cf;an=B|0;g[an>>2]=am-ck;$=aq-as;g[B+4>>2]=$-ar;g[B+8>>2]=am+ck;g[B+12>>2]=$+ar;$=cj+cf;g[B+16>>2]=$+ck;cf=aq+as;g[B+20>>2]=cf+ar;g[B+24>>2]=$-ck;g[B+28>>2]=cf-ar;g[C>>2]=+g[cv+(cE<<2)>>2];g[C+4>>2]=+g[cv+(cD<<2)>>2];cD=D|0;cE=r|0;r=an;an=cD;B=0;cw=4;L134:while(1){cx=C+(B<<2)|0;cs=1-B|0;do{if((cw|0)>0){f=0;n=r;t=an;h=cw;while(1){q=n+(B<<2)|0;ar=+g[q>>2];cf=+g[cx>>2];if(ar*-1.0<cf){g[t>>2]=+g[n>>2];g[t+4>>2]=+g[n+4>>2];a=f+1|0;if((a&8|0)!=0){cF=a;cG=an;break L134}cH=t+8|0;cI=a;cJ=+g[q>>2];cK=+g[cx>>2]}else{cH=t;cI=f;cJ=ar;cK=cf}q=n+8|0;a=(h|0)>1?q:r;cf=+g[a+(B<<2)>>2];if(cJ*-1.0<cK^cf*-1.0<cK){ar=+g[n+(cs<<2)>>2];g[cH+(cs<<2)>>2]=ar+(cK*-1.0-cJ)*((+g[a+(cs<<2)>>2]-ar)/(cf-cJ));g[cH+(B<<2)>>2]=+g[cx>>2]*-1.0;a=cI+1|0;if((a&8|0)==0){cL=cH+8|0;cM=a}else{cF=a;cG=an;break L134}}else{cL=cH;cM=cI}a=h-1|0;if((a|0)>0){f=cM;n=q;t=cL;h=a}else{break}}h=(an|0)==(cD|0)?cE:cD;if((cM|0)>0){cN=0;cO=an;cP=h;cQ=cM}else{cR=0;cS=h;break}while(1){t=cO+(B<<2)|0;cf=+g[t>>2];ar=+g[cx>>2];if(cf<ar){g[cP>>2]=+g[cO>>2];g[cP+4>>2]=+g[cO+4>>2];n=cN+1|0;if((n&8|0)!=0){cF=n;cG=h;break L134}cT=cP+8|0;cU=n;cV=+g[t>>2];cW=+g[cx>>2]}else{cT=cP;cU=cN;cV=cf;cW=ar}t=cO+8|0;n=(cQ|0)>1?t:an;ar=+g[n+(B<<2)>>2];if(cV<cW^ar<cW){cf=+g[cO+(cs<<2)>>2];g[cT+(cs<<2)>>2]=cf+(cW-cV)*((+g[n+(cs<<2)>>2]-cf)/(ar-cV));g[cT+(B<<2)>>2]=+g[cx>>2];n=cU+1|0;if((n&8|0)==0){cX=cT+8|0;cY=n}else{cF=n;cG=h;break L134}}else{cX=cT;cY=cU}n=cQ-1|0;if((n|0)>0){cN=cY;cO=t;cP=cX;cQ=n}else{cR=cY;cS=h;break}}}else{cR=0;cS=(an|0)==(cD|0)?cE:cD}}while(0);cx=B+1|0;if((cx|0)<2){r=cS;an=(cS|0)==(cD|0)?cE:cD;B=cx;cw=cR}else{cF=cR;cG=cS;break}}if((cG|0)!=(cD|0)){K2(D|0,cG|0,cF<<3)|0}if((cF|0)<1){aU=0;i=o;return aU|0}cV=1.0/(cd*cA-cm*cn);cW=cd*cV;cd=cn*cV;cn=cA*cV;cA=-0.0-cm*cV;cV=+g[cv+(cy<<2)>>2];cm=+g[cu>>2];cJ=+g[cr>>2];cK=+g[Q>>2];ar=+g[z>>2];cf=+g[A>>2];ck=+g[P>>2];$=+g[cz>>2];as=+g[s>>2];am=+g[b>>2];b=0;s=0;while(1){cz=b<<1;cB=+g[D+(cz<<2)>>2];cC=cB-cj;ci=+g[D+((cz|1)<<2)>>2];cl=ci-aq;b5=cn*cC-cd*cl;cc=cC*cA+cW*cl;cz=s*3|0;P=E+(cz<<2)|0;g[P>>2]=cm+b5*cJ+cc*cK;A=E+(cz+1<<2)|0;g[A>>2]=ar+b5*cf+cc*ck;cl=$+b5*as+cc*am;g[E+(cz+2<<2)>>2]=cl;cc=cV-(co*+g[P>>2]+cp*+g[A>>2]+cq*cl);g[F+(s<<2)>>2]=cc;if(cc<0.0){cZ=s}else{A=s<<1;g[D+(A<<2)>>2]=cB;g[D+((A|1)<<2)>>2]=ci;cZ=s+1|0}A=b+1|0;if((A|0)<(cF|0)){b=A;s=cZ}else{break}}if((cZ|0)<1){aU=0;i=o;return aU|0}s=(cZ|0)<(m|0)?cZ:m;m=(s|0)<1?1:s;do{if((cZ|0)>(m|0)){if((cZ|0)>1){s=1;b=0;cq=+g[F>>2];while(1){cp=+g[F+(s<<2)>>2];cF=cp>cq;D=cF?s:b;A=s+1|0;if((A|0)<(cZ|0)){s=A;b=D;cq=cF?cp:cq}else{c_=D;break}}}else{c_=0}rp(cZ,cD,m,c_,K|0);if((m|0)<=0){c$=m;break}b=p;s=j+4|0;D=j+8|0;cF=M|0;A=M+4|0;P=M+8|0;cz=M+12|0;z=N|0;Q=N+4|0;cr=N+8|0;cu=N+12|0;cy=L|0;cv=L+4|0;cG=L+8|0;cS=O|0;cR=O+4|0;cw=O+8|0;B=O+12|0;if(w){cE=0;while(1){an=c[K+(cE<<2)>>2]|0;r=an*3|0;g[cy>>2]=+g[E+(r<<2)>>2]+ +g[ct>>2];g[cv>>2]=+g[E+(r+1<<2)>>2]+ +g[ct+4>>2];g[cG>>2]=+g[E+(r+2<<2)>>2]+ +g[ct+8>>2];cq=-0.0- +g[D>>2];cp=-0.0- +g[s>>2];r=c[(c[b>>2]|0)+16>>2]|0;g[cF>>2]=-0.0- +g[y>>2];g[A>>2]=cp;g[P>>2]=cq;g[cz>>2]=0.0;ha[r&31](p,M,L,-0.0- +g[F+(an<<2)>>2]);an=cE+1|0;if((an|0)<(m|0)){cE=an}else{c$=m;break}}}else{cE=0;while(1){cz=c[K+(cE<<2)>>2]|0;P=cz*3|0;cq=+g[E+(P<<2)>>2]+ +g[ct>>2];g[cy>>2]=cq;cp=+g[E+(P+1<<2)>>2]+ +g[ct+4>>2];g[cv>>2]=cp;co=+g[E+(P+2<<2)>>2]+ +g[ct+8>>2];g[cG>>2]=co;cV=+g[D>>2];am=+g[s>>2];as=+g[y>>2];P=c[(c[b>>2]|0)+16>>2]|0;g[z>>2]=-0.0-as;g[Q>>2]=-0.0-am;g[cr>>2]=-0.0-cV;g[cu>>2]=0.0;$=+g[F+(cz<<2)>>2];g[cS>>2]=cq-as*$;g[cR>>2]=cp-$*am;g[cw>>2]=co-$*cV;g[B>>2]=0.0;ha[P&31](p,N,O,-0.0-$);P=cE+1|0;if((P|0)<(m|0)){cE=P}else{c$=m;break}}}}else{cE=(cZ|0)>0;if(w){if(!cE){c$=cZ;break}B=p;cw=j+4|0;cR=j+8|0;cS=H|0;cu=H+4|0;cr=H+8|0;Q=H+12|0;z=0;while(1){b=z*3|0;g[G>>2]=+g[E+(b<<2)>>2]+ +g[ct>>2];g[G+4>>2]=+g[E+(b+1<<2)>>2]+ +g[ct+4>>2];g[G+8>>2]=+g[E+(b+2<<2)>>2]+ +g[ct+8>>2];b=c[(c[B>>2]|0)+16>>2]|0;$=-0.0- +g[cw>>2];cV=-0.0- +g[cR>>2];g[cS>>2]=-0.0- +g[y>>2];g[cu>>2]=$;g[cr>>2]=cV;g[Q>>2]=0.0;ha[b&31](p,H,G,-0.0- +g[F+(z<<2)>>2]);b=z+1|0;if((b|0)<(cZ|0)){z=b}else{c$=cZ;break}}}else{if(!cE){c$=cZ;break}z=p;Q=j+4|0;cr=j+8|0;cu=J|0;cS=J+4|0;cR=J+8|0;cw=J+12|0;B=0;while(1){b=B*3|0;cV=+g[F+(B<<2)>>2];$=+g[y>>2];g[I>>2]=+g[E+(b<<2)>>2]+ +g[ct>>2]-$*cV;co=+g[Q>>2];g[I+4>>2]=+g[E+(b+1<<2)>>2]+ +g[ct+4>>2]-co*cV;am=+g[cr>>2];g[I+8>>2]=+g[E+(b+2<<2)>>2]+ +g[ct+8>>2]-am*cV;b=c[(c[z>>2]|0)+16>>2]|0;g[cu>>2]=-0.0-$;g[cS>>2]=-0.0-co;g[cR>>2]=-0.0-am;g[cw>>2]=0.0;ha[b&31](p,J,I,-0.0-cV);b=B+1|0;if((b|0)<(cZ|0)){B=b}else{c$=cZ;break}}}}}while(0);c[l>>2]=cg;aU=c$;i=o;return aU|0}function rr(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var h=0,j=0,k=0,l=0,m=0,n=0.0,o=0.0,p=0.0,q=0,r=0.0,s=0.0,t=0.0;f=i;i=i+160|0;e=f|0;h=f+48|0;j=f+128|0;k=f+144|0;l=e|0;g[l>>2]=+g[b>>2];m=h|0;g[m>>2]=+g[b+64>>2];g[e+4>>2]=+g[b+4>>2];g[h+4>>2]=+g[b+68>>2];g[e+8>>2]=+g[b+8>>2];g[h+8>>2]=+g[b+72>>2];g[e+16>>2]=+g[b+16>>2];g[h+16>>2]=+g[b+80>>2];g[e+20>>2]=+g[b+20>>2];g[h+20>>2]=+g[b+84>>2];g[e+24>>2]=+g[b+24>>2];g[h+24>>2]=+g[b+88>>2];g[e+32>>2]=+g[b+32>>2];g[h+32>>2]=+g[b+96>>2];g[e+36>>2]=+g[b+36>>2];g[h+36>>2]=+g[b+100>>2];g[e+40>>2]=+g[b+40>>2];g[h+40>>2]=+g[b+104>>2];h=c[a+4>>2]|0;n=+g[h+28>>2];o=+g[h+32>>2];p=+g[h+36>>2];e=h|0;q=h;r=+g6[c[(c[q>>2]|0)+48>>2]&15](e);s=+g6[c[(c[q>>2]|0)+48>>2]&15](e);t=(p+ +g6[c[(c[q>>2]|0)+48>>2]&15](e))*2.0;g[j>>2]=(n+r)*2.0;g[j+4>>2]=(o+s)*2.0;g[j+8>>2]=t;g[j+12>>2]=0.0;e=c[a+8>>2]|0;t=+g[e+28>>2];s=+g[e+32>>2];o=+g[e+36>>2];a=e|0;q=e;r=+g6[c[(c[q>>2]|0)+48>>2]&15](a);n=+g6[c[(c[q>>2]|0)+48>>2]&15](a);p=(o+ +g6[c[(c[q>>2]|0)+48>>2]&15](a))*2.0;g[k>>2]=(t+r)*2.0;g[k+4>>2]=(s+n)*2.0;g[k+8>>2]=p;g[k+12>>2]=0.0;rq(b+48|0,l,j,b+112|0,m,k,f+96|0,f+112|0,f+120|0,4,0,0,d)|0;i=f;return}function rs(a){a=a|0;return}function rt(a){a=a|0;KU(a);return}function ru(b,d){b=b|0;d=d|0;var e=0,f=0,g=0;c[b>>2]=32888;c[b+4>>2]=2;a[b+24|0]=1;c[b+20>>2]=0;c[b+12>>2]=0;c[b+16>>2]=0;c[b+28>>2]=33768;e=b+5256|0;c[e>>2]=d;c[b+60>>2]=168;f=d;c[b+64>>2]=g3[c[(c[f>>2]|0)+12>>2]&511](d)|0;c[b+68>>2]=g3[c[(c[f>>2]|0)+8>>2]&511](d)|0;d=0;do{f=0;do{g=c[e>>2]|0;c[b+72+(d*144|0)+(f<<2)>>2]=hd[c[(c[g>>2]|0)+20>>2]&127](g,d,f)|0;f=f+1|0;}while((f|0)<36);d=d+1|0;}while((d|0)<36);return}function rv(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0.0;e=i;i=i+64|0;f=e|0;h=e+16|0;j=e+32|0;k=c[c[a>>2]>>2]|0;l=k;m=c[c[a+4>>2]>>2]|0;n=m;if(!(hd[c[(c[b>>2]|0)+24>>2]&127](b,l,n)|0)){i=e;return}o=c[k+192>>2]|0;c[f>>2]=0;c[f+4>>2]=o;c[f+8>>2]=l;c[f+12>>2]=k+4;k=c[m+192>>2]|0;c[h>>2]=0;c[h+4>>2]=k;c[h+8>>2]=n;c[h+12>>2]=m+4;m=a+8|0;do{if((c[m>>2]|0)==0){a=hD[c[(c[b>>2]|0)+8>>2]&63](b,f,h,0)|0;c[m>>2]=a;if((a|0)!=0){break}i=e;return}}while(0);uD(j,f,h);b=c[m>>2]|0;if((c[d+8>>2]|0)==1){g7[c[(c[b>>2]|0)+8>>2]&127](b,f,h,d,j);i=e;return}p=+hq[c[(c[b>>2]|0)+12>>2]&31](b,l,n,d,j);j=d+12|0;if(+g[j>>2]<=p){i=e;return}g[j>>2]=p;i=e;return}function rw(b){b=b|0;var d=0,e=0,f=0,g=0;c[b>>2]=32888;d=b+12|0;e=b+20|0;f=c[e>>2]|0;g=b+24|0;if((f|0)!=0){if((a[g]&1)!=0){zw(f)}c[e>>2]=0}a[g]=1;c[e>>2]=0;c[d>>2]=0;c[b+16>>2]=0;qt(b|0);KU(b);return}function rx(b){b=b|0;var d=0,e=0,f=0,g=0;c[b>>2]=32888;d=b+12|0;e=b+20|0;f=c[e>>2]|0;g=b+24|0;if((f|0)!=0){if((a[g]&1)!=0){zw(f)}c[e>>2]=0}a[g]=1;c[e>>2]=0;c[d>>2]=0;c[b+16>>2]=0;qt(b|0);return}function ry(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,h=0,j=0,k=0,l=0,m=0,n=0.0,o=0.0,p=0.0,q=0.0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;f=i;i=i+16|0;h=f|0;j=f+8|0;c[12462]=(c[12462]|0)+1;k=b+4|0;if((c[k>>2]&2|0)==0){l=2168}else{m=c[d+192>>2]|0;n=+he[c[(c[m>>2]|0)+20>>2]&3](m,+g[542]);g[h>>2]=n;m=c[e+192>>2]|0;o=+he[c[(c[m>>2]|0)+20>>2]&3](m,+g[542]);g[j>>2]=o;l=n<o?h:j}o=+g[l>>2];n=+g[d+184>>2];p=+g[e+184>>2];q=n<p?n:p;l=c[b+68>>2]|0;j=l+8|0;h=c[j>>2]|0;do{if((h|0)==0){if((c[k>>2]&4|0)==0){r=zv(772,16)|0;break}else{s=0;i=f;return s|0}}else{m=l+12|0;t=c[m>>2]|0;c[m>>2]=c[t>>2];c[j>>2]=h-1;r=t}}while(0);h=r;c[r>>2]=1025;c[r+116>>2]=0;a[r+120|0]=0;K1(r+124|0,0,32)|0;c[r+300>>2]=0;a[r+304|0]=0;K1(r+308|0,0,32)|0;c[r+484>>2]=0;a[r+488|0]=0;K1(r+492|0,0,32)|0;c[r+668>>2]=0;a[r+672|0]=0;K1(r+676|0,0,32)|0;c[r+740>>2]=d;c[r+744>>2]=e;c[r+748>>2]=0;g[r+752>>2]=o;g[r+756>>2]=q;e=b+12|0;c[r+768>>2]=c[e>>2];r=c[e>>2]|0;d=b+16|0;do{if((r|0)==(c[d>>2]|0)){j=(r|0)==0?1:r<<1;if((r|0)>=(j|0)){u=r;break}if((j|0)==0){v=0;w=r}else{l=zv(j<<2,16)|0;v=l;w=c[e>>2]|0}l=b+20|0;if((w|0)>0){k=0;do{t=v+(k<<2)|0;if((t|0)!=0){c[t>>2]=c[(c[l>>2]|0)+(k<<2)>>2]}k=k+1|0;}while((k|0)<(w|0))}k=c[l>>2]|0;t=b+24|0;if((k|0)!=0){if((a[t]&1)!=0){zw(k)}c[l>>2]=0}a[t]=1;c[l>>2]=v;c[d>>2]=j;u=c[e>>2]|0}else{u=r}}while(0);r=(c[b+20>>2]|0)+(u<<2)|0;if((r|0)==0){x=u}else{c[r>>2]=h;x=c[e>>2]|0}c[e>>2]=x+1;s=h;i=f;return s|0}function rz(a,b){a=a|0;b=b|0;var d=0;a=b+748|0;if((c[a>>2]|0)>0){d=0}else{c[a>>2]=0;return}do{vS(b,b+4+(d*184|0)|0);d=d+1|0;}while((d|0)<(c[a>>2]|0));c[a>>2]=0;return}function rA(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0;c[12462]=(c[12462]|0)-1;g0[c[(c[a>>2]|0)+20>>2]&511](a,b);d=c[b+768>>2]|0;e=a+12|0;f=(c[e>>2]|0)-1|0;g=a+20|0;h=c[g>>2]|0;i=h+(d<<2)|0;j=c[i>>2]|0;c[i>>2]=c[h+(f<<2)>>2];c[(c[g>>2]|0)+(f<<2)>>2]=j;c[(c[(c[g>>2]|0)+(d<<2)>>2]|0)+768>>2]=d;c[e>>2]=(c[e>>2]|0)-1;e=c[a+68>>2]|0;a=b;do{if((b|0)!=0){d=c[e+16>>2]|0;if(d>>>0>a>>>0){break}if((d+(ag(c[e>>2]|0,c[e+4>>2]|0)|0)|0)>>>0<=a>>>0){break}d=e+12|0;c[b>>2]=c[d>>2];c[d>>2]=a;d=e+8|0;c[d>>2]=(c[d>>2]|0)+1;return}}while(0);zw(a);return}function rB(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;f=i;i=i+8|0;g=f|0;c[g>>2]=a;c[g+4>>2]=e;e=c[a+72+((c[(c[b+4>>2]|0)+4>>2]|0)*144|0)+(c[(c[d+4>>2]|0)+4>>2]<<2)>>2]|0;a=hD[c[(c[e>>2]|0)+8>>2]&63](e,g,b,d)|0;i=f;return a|0}function rC(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;a=c[b+204>>2]|0;do{if((a&4|0)==0){b=c[d+204>>2]|0;if((b&4|0)!=0){e=0;break}if((a&3|0)==0){e=1;break}e=(b&3|0)==0}else{e=0}}while(0);return e|0}function rD(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;a=c[b+216>>2]|0;do{if((a|0)==5|(a|0)==2){e=c[d+216>>2]|0;if((e|0)==5|(e|0)==2){f=0}else{break}return f|0}}while(0);if((c[b+256>>2]|0)==0){f=1;return f|0}f=hx[c[c[b>>2]>>2]&127](b,d)|0;return f|0}function rE(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;f=i;i=i+16|0;g=f|0;c[g>>2]=32288;c[g+4>>2]=d;c[g+8>>2]=a;hF[c[(c[b>>2]|0)+48>>2]&255](b,g|0,e);i=f;return}function rF(a){a=a|0;return}function rG(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=c[a+64>>2]|0;a=d+8|0;e=c[a>>2]|0;if((e|0)==0){f=zv(b,16)|0;return f|0}else{b=d+12|0;d=c[b>>2]|0;c[b>>2]=c[d>>2];c[a>>2]=e-1;f=d;return f|0}return 0}function rH(a,b){a=a|0;b=b|0;var d=0;d=c[a+64>>2]|0;do{if((b|0)!=0){a=c[d+16>>2]|0;if(a>>>0>b>>>0){break}if((a+(ag(c[d>>2]|0,c[d+4>>2]|0)|0)|0)>>>0<=b>>>0){break}a=d+12|0;c[b>>2]=c[a>>2];c[a>>2]=b;a=d+8|0;c[a>>2]=(c[a>>2]|0)+1;return}}while(0);zw(b);return}function rI(a){a=a|0;return c[a+12>>2]|0}function rJ(a,b){a=a|0;b=b|0;return c[(c[a+20>>2]|0)+(b<<2)>>2]|0}function rK(a){a=a|0;var b=0;if((c[a+12>>2]|0)==0){b=0;return b|0}b=c[a+20>>2]|0;return b|0}function rL(a){a=a|0;return c[a+68>>2]|0}function rM(a){a=a|0;return c[a+68>>2]|0}function rN(a){a=a|0;KU(a);return}function rO(a,b){a=a|0;b=b|0;var d=0;d=c[a+8>>2]|0;hF[c[d+60>>2]&255](b,d,c[a+4>>2]|0);return 0}function rP(a){a=a|0;c[a>>2]=33600;g[a+164>>2]=1.0;g[a+168>>2]=1.0;g[a+172>>2]=1.0;g[a+176>>2]=0.0;c[a+180>>2]=0;g[a+184>>2]=999999984306749400.0;K1(a+188|0,0,16)|0;c[a+204>>2]=1;c[a+208>>2]=-1;c[a+212>>2]=-1;c[a+216>>2]=1;g[a+220>>2]=0.0;g[a+224>>2]=.5;g[a+228>>2]=0.0;g[a+232>>2]=0.0;c[a+236>>2]=1;c[a+240>>2]=0;g[a+244>>2]=1.0;g[a+248>>2]=0.0;g[a+252>>2]=0.0;c[a+256>>2]=0;g[a+4>>2]=1.0;K1(a+8|0,0,16)|0;g[a+24>>2]=1.0;K1(a+28|0,0,16)|0;g[a+44>>2]=1.0;K1(a+48|0,0,20)|0;return}function rQ(a){a=a|0;zw(a);return}function rR(a){a=a|0;return}function rS(a,b){a=a|0;b=b|0;var d=0;d=a+216|0;if(((c[d>>2]|0)-4|0)>>>0<2>>>0){return}c[d>>2]=b;return}function rT(a,b){a=a|0;b=b|0;do{if(!b){if((c[a+204>>2]&3|0)==0){break}return}}while(0);b=a+216|0;if(((c[b>>2]|0)-4|0)>>>0>=2>>>0){c[b>>2]=1}g[a+220>>2]=0.0;return}function rU(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,h=0,i=0,j=0.0,k=0,l=0,m=0,n=0.0,o=0,p=0,q=0,r=0.0,s=0,t=0,u=0,v=0,w=0,x=0;g[b+16>>2]=+g[a+4>>2];g[b+20>>2]=+g[a+8>>2];g[b+24>>2]=+g[a+12>>2];g[b+28>>2]=+g[a+16>>2];g[b+32>>2]=+g[a+20>>2];g[b+36>>2]=+g[a+24>>2];g[b+40>>2]=+g[a+28>>2];g[b+44>>2]=+g[a+32>>2];g[b+48>>2]=+g[a+36>>2];g[b+52>>2]=+g[a+40>>2];g[b+56>>2]=+g[a+44>>2];g[b+60>>2]=+g[a+48>>2];g[b+64>>2]=+g[a+52>>2];g[b+68>>2]=+g[a+56>>2];g[b+72>>2]=+g[a+60>>2];g[b+76>>2]=+g[a+64>>2];g[b+80>>2]=+g[a+68>>2];g[b+84>>2]=+g[a+72>>2];g[b+88>>2]=+g[a+76>>2];g[b+92>>2]=+g[a+80>>2];g[b+96>>2]=+g[a+84>>2];g[b+100>>2]=+g[a+88>>2];g[b+104>>2]=+g[a+92>>2];g[b+108>>2]=+g[a+96>>2];g[b+112>>2]=+g[a+100>>2];g[b+116>>2]=+g[a+104>>2];g[b+120>>2]=+g[a+108>>2];g[b+124>>2]=+g[a+112>>2];g[b+128>>2]=+g[a+116>>2];g[b+132>>2]=+g[a+120>>2];g[b+136>>2]=+g[a+124>>2];g[b+140>>2]=+g[a+128>>2];g[b+144>>2]=+g[a+132>>2];g[b+148>>2]=+g[a+136>>2];g[b+152>>2]=+g[a+140>>2];g[b+156>>2]=+g[a+144>>2];g[b+160>>2]=+g[a+148>>2];g[b+164>>2]=+g[a+152>>2];g[b+168>>2]=+g[a+156>>2];g[b+172>>2]=+g[a+160>>2];g[b+176>>2]=+g[a+164>>2];g[b+180>>2]=+g[a+168>>2];g[b+184>>2]=+g[a+172>>2];g[b+188>>2]=+g[a+176>>2];c[b+224>>2]=c[a+180>>2];g[b+192>>2]=+g[a+184>>2];c[b>>2]=0;e=d;c[b+4>>2]=hx[c[(c[e>>2]|0)+28>>2]&127](d,c[a+192>>2]|0)|0;c[b+8>>2]=0;c[b+228>>2]=c[a+204>>2];c[b+232>>2]=c[a+208>>2];c[b+236>>2]=c[a+212>>2];c[b+240>>2]=c[a+216>>2];g[b+196>>2]=+g[a+220>>2];g[b+200>>2]=+g[a+224>>2];g[b+204>>2]=+g[a+232>>2];g[b+208>>2]=+g[a+228>>2];c[b+244>>2]=c[a+236>>2];f=hx[c[(c[e>>2]|0)+40>>2]&127](d,a)|0;h=hx[c[(c[e>>2]|0)+28>>2]&127](d,f)|0;c[b+12>>2]=h;if((h|0)==0){i=a+244|0;j=+g[i>>2];k=b+212|0;l=k;g[l>>2]=j;m=a+248|0;n=+g[m>>2];o=b+216|0;p=o;g[p>>2]=n;q=a+252|0;r=+g[q>>2];s=b+220|0;t=s;g[t>>2]=r;u=a+256|0;v=c[u>>2]|0;w=b+248|0;x=w;c[x>>2]=v;return 14200}g0[c[(c[d>>2]|0)+48>>2]&511](d,f);i=a+244|0;j=+g[i>>2];k=b+212|0;l=k;g[l>>2]=j;m=a+248|0;n=+g[m>>2];o=b+216|0;p=o;g[p>>2]=n;q=a+252|0;r=+g[q>>2];s=b+220|0;t=s;g[t>>2]=r;u=a+256|0;v=c[u>>2]|0;w=b+248|0;x=w;c[x>>2]=v;return 14200}function rV(a,b){a=a|0;b=b|0;var d=0,e=0;d=g3[c[(c[a>>2]|0)+16>>2]&511](a)|0;e=hd[c[(c[b>>2]|0)+16>>2]&127](b,d,1)|0;d=hd[c[(c[a>>2]|0)+20>>2]&127](a,c[e+8>>2]|0,b)|0;g7[c[(c[b>>2]|0)+20>>2]&127](b,e,d,1245859651,a);return}function rW(a,b){a=a|0;b=b|0;return 1}function rX(a,b){a=a|0;b=b|0;c[a+192>>2]=b;c[a+200>>2]=b;return}function rY(a){a=a|0;return 256}function rZ(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;c[b>>2]=34032;a[b+20|0]=1;c[b+16>>2]=0;c[b+8>>2]=0;c[b+12>>2]=0;c[b+24>>2]=d;g[b+28>>2]=0.0;c[b+32>>2]=0;c[b+36>>2]=1;g[b+40>>2]=1.0;a[b+44|0]=1;c[b+48>>2]=0;a[b+52|0]=0;a[b+53|0]=1;a[b+54|0]=1;g[b+56>>2]=.03999999910593033;a[b+60|0]=0;g[b+64>>2]=0.0;d=b+68|0;c[d>>2]=0;c[b+76>>2]=e;c[b+80>>2]=0;a[b+84|0]=1;e=g3[c[(c[f>>2]|0)+16>>2]&511](f)|0;c[b+72>>2]=e;c[d>>2]=e;return}function r_(a){a=a|0;r$(a);KU(a);return}function r$(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;c[b>>2]=34032;d=b+8|0;e=c[d>>2]|0;f=b+16|0;g=c[f>>2]|0;if((e|0)>0){h=b+76|0;i=b+24|0;j=0;k=g;l=e;while(1){e=(c[k+(j<<2)>>2]|0)+188|0;m=c[e>>2]|0;if((m|0)==0){n=l;o=k}else{p=c[h>>2]|0;q=g3[c[(c[p>>2]|0)+36>>2]&511](p)|0;hF[c[(c[q>>2]|0)+40>>2]&255](q,m,c[i>>2]|0);q=c[h>>2]|0;hF[c[(c[q>>2]|0)+12>>2]&255](q,m,c[i>>2]|0);c[e>>2]=0;n=c[d>>2]|0;o=c[f>>2]|0}e=j+1|0;if((e|0)<(n|0)){j=e;k=o;l=n}else{r=o;break}}}else{r=g}g=b+20|0;if((r|0)==0){a[g]=1;c[f>>2]=0;c[d>>2]=0;s=b+12|0;c[s>>2]=0;return}if((a[g]&1)!=0){zw(r)}c[f>>2]=0;a[g]=1;c[f>>2]=0;c[d>>2]=0;s=b+12|0;c[s>>2]=0;return}function r0(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;g=i;i=i+96|0;h=g|0;j=g+64|0;k=g+80|0;l=b+8|0;m=c[l>>2]|0;n=b+12|0;do{if((m|0)==(c[n>>2]|0)){o=(m|0)==0?1:m<<1;if((m|0)>=(o|0)){p=m;break}if((o|0)==0){q=0;r=m}else{s=zv(o<<2,16)|0;q=s;r=c[l>>2]|0}s=b+16|0;if((r|0)>0){t=0;do{u=q+(t<<2)|0;if((u|0)!=0){c[u>>2]=c[(c[s>>2]|0)+(t<<2)>>2]}t=t+1|0;}while((t|0)<(r|0))}t=c[s>>2]|0;u=b+20|0;if((t|0)!=0){if((a[u]&1)!=0){zw(t)}c[s>>2]=0}a[u]=1;c[s>>2]=q;c[n>>2]=o;p=c[l>>2]|0}else{p=m}}while(0);m=(c[b+16>>2]|0)+(p<<2)|0;if((m|0)==0){v=p}else{c[m>>2]=d;v=c[l>>2]|0}c[l>>2]=v+1;v=h;l=d+4|0;c[v>>2]=c[l>>2];c[v+4>>2]=c[l+4>>2];c[v+8>>2]=c[l+8>>2];c[v+12>>2]=c[l+12>>2];l=h+16|0;v=d+20|0;c[l>>2]=c[v>>2];c[l+4>>2]=c[v+4>>2];c[l+8>>2]=c[v+8>>2];c[l+12>>2]=c[v+12>>2];v=h+32|0;l=d+36|0;c[v>>2]=c[l>>2];c[v+4>>2]=c[l+4>>2];c[v+8>>2]=c[l+8>>2];c[v+12>>2]=c[l+12>>2];l=h+48|0;v=d+52|0;c[l>>2]=c[v>>2];c[l+4>>2]=c[v+4>>2];c[l+8>>2]=c[v+8>>2];c[l+12>>2]=c[v+12>>2];v=d+192|0;l=c[v>>2]|0;hM[c[(c[l>>2]|0)+8>>2]&255](l,h,j,k);h=c[b+76>>2]|0;c[d+188>>2]=hl[c[(c[h>>2]|0)+8>>2]&7](h,j,k,c[(c[v>>2]|0)+4>>2]|0,d,e,f,c[b+24>>2]|0,0)|0;i=g;return}function r1(b,d){b=b|0;d=d|0;var e=0,f=0,h=0,j=0,k=0,l=0,m=0,n=0.0,o=0.0,p=0,q=0.0,r=0,s=0.0,t=0,u=0.0,v=0,w=0.0,x=0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0,G=0.0,H=0.0,I=0.0,J=0.0,K=0.0,L=0.0,M=0.0,N=0.0,O=0.0,P=0.0,Q=0.0,R=0.0,S=0.0;e=i;i=i+64|0;f=e|0;h=e+16|0;j=e+32|0;k=e+48|0;l=d+192|0;m=c[l>>2]|0;hM[c[(c[m>>2]|0)+8>>2]&255](m,d+4|0,f,h);n=+g[542];m=f|0;o=+g[m>>2]-n;g[m>>2]=o;p=f+4|0;q=+g[p>>2]-n;g[p>>2]=q;r=f+8|0;s=+g[r>>2]-n;g[r>>2]=s;t=h|0;u=n+ +g[t>>2];g[t>>2]=u;v=h+4|0;w=n+ +g[v>>2];g[v>>2]=w;x=h+8|0;y=n+ +g[x>>2];g[x>>2]=y;do{if((a[b+44|0]&1)==0){z=u;A=o;B=w;C=q;D=y;E=s}else{if((c[d+236>>2]|0)!=2){z=u;A=o;B=w;C=q;D=y;E=s;break}if((c[d+204>>2]&3|0)!=0){z=u;A=o;B=w;C=q;D=y;E=s;break}F=c[l>>2]|0;hM[c[(c[F>>2]|0)+8>>2]&255](F,d+68|0,j,k);F=j|0;G=+g[F>>2]-n;g[F>>2]=G;F=j+4|0;H=+g[F>>2]-n;g[F>>2]=H;F=j+8|0;I=+g[F>>2]-n;g[F>>2]=I;F=k|0;J=n+ +g[F>>2];g[F>>2]=J;F=k+4|0;K=n+ +g[F>>2];g[F>>2]=K;F=k+8|0;L=n+ +g[F>>2];g[F>>2]=L;M=+g[m>>2];if(G<M){g[m>>2]=G;N=G}else{N=M}M=+g[p>>2];if(H<M){g[p>>2]=H;O=H}else{O=M}M=+g[r>>2];if(I<M){g[r>>2]=I;P=I}else{P=M}F=f+12|0;M=+g[j+12>>2];if(M<+g[F>>2]){g[F>>2]=M}M=+g[t>>2];if(M<J){g[t>>2]=J;Q=J}else{Q=M}M=+g[v>>2];if(M<K){g[v>>2]=K;R=K}else{R=M}M=+g[x>>2];if(M<L){g[x>>2]=L;S=L}else{S=M}F=h+12|0;M=+g[k+12>>2];if(+g[F>>2]>=M){z=Q;A=N;B=R;C=O;D=S;E=P;break}g[F>>2]=M;z=Q;A=N;B=R;C=O;D=S;E=P}}while(0);k=c[b+76>>2]|0;do{if((c[d+204>>2]&1|0)==0){P=z-A;S=B-C;O=D-E;if(P*P+S*S+O*O<999999995904.0){break}rS(d,5);if(a[26664]|0){i=e;return}x=b+80|0;v=c[x>>2]|0;if((v|0)==0){i=e;return}a[26664]=1;g0[c[(c[v>>2]|0)+36>>2]&511](v,14144);v=c[x>>2]|0;g0[c[(c[v>>2]|0)+36>>2]&511](v,22816);v=c[x>>2]|0;g0[c[(c[v>>2]|0)+36>>2]&511](v,20840);v=c[x>>2]|0;g0[c[(c[v>>2]|0)+36>>2]&511](v,19112);i=e;return}}while(0);g7[c[(c[k>>2]|0)+16>>2]&127](k,c[d+188>>2]|0,f,h,c[b+24>>2]|0);i=e;return}function r2(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;z_(17736);d=b+8|0;e=c[d>>2]|0;if((e|0)>0){f=b+16|0;g=b+84|0;h=0;i=e;while(1){e=c[(c[f>>2]|0)+(h<<2)>>2]|0;if((a[g]&1)==0){j=c[e+216>>2]|0;if((j|0)==5|(j|0)==2){k=i}else{l=5}}else{l=5}if((l|0)==5){l=0;r1(b,e);k=c[d>>2]|0}e=h+1|0;if((e|0)<(k|0)){h=e;i=k}else{break}}}z$();return}function r3(a){a=a|0;var b=0;z_(16192);b=c[a+76>>2]|0;g0[c[(c[b>>2]|0)+32>>2]&511](b,c[a+24>>2]|0);z$();return}function r4(a){a=a|0;var b=0,d=0,e=0,f=0,g=0;z_(15176);b=a;g$[c[(c[b>>2]|0)+8>>2]&1023](a);g$[c[(c[b>>2]|0)+12>>2]&1023](a);b=a+24|0;d=c[b>>2]|0;z_(14048);if((d|0)!=0){e=c[(c[d>>2]|0)+32>>2]|0;f=c[a+76>>2]|0;g=g3[c[(c[f>>2]|0)+36>>2]&511](f)|0;hM[e&255](d,g,a+28|0,c[b>>2]|0)}z$();z$();return}function r5(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0;d=b+188|0;e=c[d>>2]|0;if((e|0)!=0){f=a+76|0;g=c[f>>2]|0;h=g3[c[(c[g>>2]|0)+36>>2]&511](g)|0;g=a+24|0;hF[c[(c[h>>2]|0)+40>>2]&255](h,e,c[g>>2]|0);h=c[f>>2]|0;hF[c[(c[h>>2]|0)+12>>2]&255](h,e,c[g>>2]|0);c[d>>2]=0}d=a+8|0;g=c[d>>2]|0;e=a+16|0;a=0;while(1){if((a|0)>=(g|0)){i=9;break}j=c[e>>2]|0;k=j+(a<<2)|0;if((c[k>>2]|0)==(b|0)){break}else{a=a+1|0}}if((i|0)==9){return}i=g-1|0;c[k>>2]=c[j+(i<<2)>>2];c[(c[e>>2]|0)+(i<<2)>>2]=b;c[d>>2]=(c[d>>2]|0)-1;return}
function v4(a,b,d,e,f,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;h=+h;var i=0;c[a>>2]=31304;c[a+4>>2]=b;b=a+8|0;i=d;c[b>>2]=c[i>>2];c[b+4>>2]=c[i+4>>2];c[b+8>>2]=c[i+8>>2];c[b+12>>2]=c[i+12>>2];i=a+24|0;b=d+16|0;c[i>>2]=c[b>>2];c[i+4>>2]=c[b+4>>2];c[i+8>>2]=c[b+8>>2];c[i+12>>2]=c[b+12>>2];b=a+40|0;i=d+32|0;c[b>>2]=c[i>>2];c[b+4>>2]=c[i+4>>2];c[b+8>>2]=c[i+8>>2];c[b+12>>2]=c[i+12>>2];i=a+56|0;b=d+48|0;c[i>>2]=c[b>>2];c[i+4>>2]=c[b+4>>2];c[i+8>>2]=c[b+8>>2];c[i+12>>2]=c[b+12>>2];b=a+72|0;i=e;c[b>>2]=c[i>>2];c[b+4>>2]=c[i+4>>2];c[b+8>>2]=c[i+8>>2];c[b+12>>2]=c[i+12>>2];i=a+88|0;b=e+16|0;c[i>>2]=c[b>>2];c[i+4>>2]=c[b+4>>2];c[i+8>>2]=c[b+8>>2];c[i+12>>2]=c[b+12>>2];b=a+104|0;i=e+32|0;c[b>>2]=c[i>>2];c[b+4>>2]=c[i+4>>2];c[b+8>>2]=c[i+8>>2];c[b+12>>2]=c[i+12>>2];i=a+120|0;b=e+48|0;c[i>>2]=c[b>>2];c[i+4>>2]=c[b+4>>2];c[i+8>>2]=c[b+8>>2];c[i+12>>2]=c[b+12>>2];b=a+136|0;i=f;c[b>>2]=c[i>>2];c[b+4>>2]=c[i+4>>2];c[b+8>>2]=c[i+8>>2];c[b+12>>2]=c[i+12>>2];i=a+152|0;b=f+16|0;c[i>>2]=c[b>>2];c[i+4>>2]=c[b+4>>2];c[i+8>>2]=c[b+8>>2];c[i+12>>2]=c[b+12>>2];b=a+168|0;i=f+32|0;c[b>>2]=c[i>>2];c[b+4>>2]=c[i+4>>2];c[b+8>>2]=c[i+8>>2];c[b+12>>2]=c[i+12>>2];i=a+184|0;b=f+48|0;c[i>>2]=c[b>>2];c[i+4>>2]=c[b+4>>2];c[i+8>>2]=c[b+8>>2];c[i+12>>2]=c[b+12>>2];g[a+200>>2]=1.0;g[a+204>>2]=h;g[a+208>>2]=0.0;return}function v5(a,d,e,f){a=a|0;d=d|0;e=e|0;f=f|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0;h=i;i=i+672|0;j=h|0;k=h+104|0;l=h+464|0;m=h+472|0;n=h+496|0;o=j|0;n6(o);c[j>>2]=34136;c[j+4>>2]=1;p=j+56|0;q=d;c[p>>2]=c[q>>2];c[p+4>>2]=c[q+4>>2];c[p+8>>2]=c[q+8>>2];c[p+12>>2]=c[q+12>>2];q=j+72|0;p=d+16|0;c[q>>2]=c[p>>2];c[q+4>>2]=c[p+4>>2];c[q+8>>2]=c[p+8>>2];c[q+12>>2]=c[p+12>>2];p=j+88|0;q=d+32|0;c[p>>2]=c[q>>2];c[p+4>>2]=c[q+4>>2];c[p+8>>2]=c[q+8>>2];c[p+12>>2]=c[q+12>>2];g[j+44>>2]=+g[a+204>>2];g[k+308>>2]=9999999747378752.0e-20;b[k+332>>1]=0;c[l>>2]=31160;vb(m,c[a+4>>2]|0,j|0,k,l|0);c[n>>2]=30624;l=n+164|0;c[n+168>>2]=0;g[l>>2]=1.0;g[n+172>>2]=+g[a+208>>2];k=a+136|0;if(!(ve(m,a+8|0,a+72|0,k,k,n)|0)){r=m|0;vi(r);n8(o);i=h;return}k=n+132|0;j=k|0;s=+g[j>>2];q=n+136|0;t=+g[q>>2];p=n+140|0;u=+g[p>>2];v=s*s+t*t+u*u;if(v<=9999999747378752.0e-20){r=m|0;vi(r);n8(o);i=h;return}w=+g[l>>2];if(w>=+g[a+200>>2]){r=m|0;vi(r);n8(o);i=h;return}x=1.0/+W(v);g[j>>2]=s*x;g[q>>2]=t*x;g[p>>2]=u*x;+hL[c[(c[a>>2]|0)+12>>2]&7](a,k,n+148|0,w,e,f);r=m|0;vi(r);n8(o);i=h;return}function v6(a){a=a|0;ov(a|0);return}function v7(a){a=a|0;ov(a|0);KU(a);return}function v8(a){a=a|0;ov(a|0);return}function v9(a){a=a|0;ov(a|0);KU(a);return}function wa(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;c[a>>2]=32392;c[a+4>>2]=e;c[a+8>>2]=b;c[a+12>>2]=d;return}function wb(a,b,d,e,f,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0.0,C=0,D=0,E=0.0,F=0,G=0.0,H=0,I=0,J=0.0,K=0,L=0,M=0.0,N=0,O=0.0,P=0,Q=0.0,R=0,S=0.0,T=0,U=0.0,V=0,X=0.0,Y=0,Z=0.0,_=0,$=0.0,aa=0,ab=0.0,ac=0,ad=0.0,ae=0,af=0.0,ag=0.0,ah=0,ai=0.0,aj=0,ak=0.0,al=0,am=0.0,an=0,ao=0.0,ap=0,aq=0.0,ar=0,as=0.0,at=0,au=0.0,av=0,aw=0.0,ax=0.0,ay=0.0,az=0.0,aA=0,aB=0,aC=0.0,aD=0.0,aE=0.0,aF=0.0,aG=0.0,aH=0.0,aI=0.0,aJ=0.0,aK=0.0,aL=0,aM=0,aN=0,aO=0,aP=0,aQ=0.0,aR=0.0,aS=0.0,aT=0,aU=0.0,aV=0,aW=0.0,aX=0.0,aY=0.0,aZ=0.0,a_=0,a$=0,a0=0.0,a1=0.0,a2=0.0,a3=0.0,a4=0.0,a5=0.0,a6=0.0,a7=0.0,a8=0.0,a9=0.0,ba=0.0,bb=0.0,bc=0,bd=0,be=0.0,bf=0.0,bg=0.0,bh=0.0,bi=0.0,bj=0.0,bk=0.0,bl=0.0,bm=0.0,bn=0.0,bo=0.0,bp=0.0,bq=0.0,br=0.0,bs=0.0;j=i;i=i+224|0;k=j|0;l=j+16|0;m=j+32|0;n=j+48|0;o=j+64|0;p=j+80|0;q=j+96|0;r=j+112|0;s=j+128|0;t=j+144|0;u=j+160|0;v=j+176|0;w=j+192|0;x=j+208|0;y=a+4|0;wf(c[y>>2]|0);z=d+48|0;A=b+48|0;B=+g[A>>2];C=d+52|0;D=b+52|0;E=+g[D>>2];F=d+56|0;d=b+56|0;G=+g[d>>2];H=f+48|0;I=e+48|0;J=+g[I>>2];K=f+52|0;L=e+52|0;M=+g[L>>2];N=f+56|0;f=e+56|0;O=+g[f>>2];P=b|0;Q=+g[P>>2];R=b+4|0;S=+g[R>>2];T=b+8|0;U=+g[T>>2];V=b+16|0;X=+g[V>>2];Y=b+20|0;Z=+g[Y>>2];_=b+24|0;$=+g[_>>2];aa=b+32|0;ab=+g[aa>>2];ac=b+36|0;ad=+g[ac>>2];ae=b+40|0;af=+g[ae>>2];b=e|0;ag=+g[b>>2];ah=e+4|0;ai=+g[ah>>2];aj=e+8|0;ak=+g[aj>>2];al=e+16|0;am=+g[al>>2];an=e+20|0;ao=+g[an>>2];ap=e+24|0;aq=+g[ap>>2];ar=e+32|0;as=+g[ar>>2];at=e+36|0;au=+g[at>>2];av=e+40|0;aw=+g[av>>2];ax=+g[z>>2]-B-(+g[H>>2]-J);ay=+g[C>>2]-E-(+g[K>>2]-M);az=+g[F>>2]-G-(+g[N>>2]-O);e=a+8|0;aA=c[e>>2]|0;aB=c[(c[aA>>2]|0)+64>>2]|0;aC=-0.0-ax;aD=-0.0-ay;aE=-0.0-az;g[n>>2]=Q*aC+X*aD+ab*aE;g[n+4>>2]=S*aC+Z*aD+ad*aE;g[n+8>>2]=U*aC+$*aD+af*aE;g[n+12>>2]=0.0;hF[aB&255](m,aA,n);aE=+g[m>>2];aD=+g[m+4>>2];aC=+g[m+8>>2];aF=aE*+g[P>>2]+aD*+g[R>>2]+aC*+g[T>>2]+ +g[A>>2];aG=aE*+g[V>>2]+aD*+g[Y>>2]+aC*+g[_>>2]+ +g[D>>2];aH=aE*+g[aa>>2]+aD*+g[ac>>2]+aC*+g[ae>>2]+ +g[d>>2];ae=l|0;g[ae>>2]=aF;ac=l+4|0;g[ac>>2]=aG;aa=l+8|0;g[aa>>2]=aH;_=l+12|0;g[_>>2]=0.0;Y=a+12|0;a=c[Y>>2]|0;V=c[(c[a>>2]|0)+64>>2]|0;aC=ax*+g[ah>>2]+ay*+g[an>>2]+az*+g[at>>2];aD=ax*+g[aj>>2]+ay*+g[ap>>2]+az*+g[av>>2];g[q>>2]=ax*+g[b>>2]+ay*+g[al>>2]+az*+g[ar>>2];g[q+4>>2]=aC;g[q+8>>2]=aD;g[q+12>>2]=0.0;hF[V&255](p,a,q);aD=+g[p>>2];aC=+g[p+4>>2];aE=+g[p+8>>2];aI=aD*+g[b>>2]+aC*+g[ah>>2]+aE*+g[aj>>2]+ +g[I>>2];aJ=aD*+g[al>>2]+aC*+g[an>>2]+aE*+g[ap>>2]+ +g[L>>2];aK=aD*+g[ar>>2]+aC*+g[at>>2]+aE*+g[av>>2]+ +g[f>>2];av=o|0;g[av>>2]=aI;at=o+4|0;g[at>>2]=aJ;ar=o+8|0;g[ar>>2]=aK;ap=o+12|0;g[ap>>2]=0.0;aE=aF-aI;aI=aG-aJ;aJ=aH-aK;an=k|0;g[an>>2]=aE;al=k+4|0;g[al>>2]=aI;aj=k+8|0;g[aj>>2]=aJ;g[k+12>>2]=0.0;L1:do{if(aE*aE+aI*aI+aJ*aJ>9999999747378752.0e-20){ah=t|0;b=t+4|0;p=t+8|0;q=t+12|0;a=s|0;V=s+4|0;T=s+8|0;R=v|0;P=v+4|0;m=v+8|0;n=v+12|0;aA=u|0;aB=u+4|0;aL=u+8|0;aM=r|0;aN=r+4|0;aO=r+8|0;aP=r+12|0;aK=G;aH=E;aG=B;aF=O;aC=M;aD=J;aQ=0.0;aR=0.0;aS=0.0;aT=32;aU=0.0;while(1){aV=aT-1|0;if((aT|0)==0){aW=aQ;aX=aR;aY=aS;aZ=aU;break L1}a_=c[e>>2]|0;a$=c[(c[a_>>2]|0)+64>>2]|0;a0=+g[an>>2];a1=-0.0-a0;a2=+g[al>>2];a3=-0.0-a2;a4=+g[aj>>2];a5=-0.0-a4;g[ah>>2]=Q*a1+X*a3+ab*a5;g[b>>2]=S*a1+Z*a3+ad*a5;g[p>>2]=U*a1+$*a3+af*a5;g[q>>2]=0.0;hF[a$&255](s,a_,t);a5=+g[a>>2];a3=+g[V>>2];a1=+g[T>>2];a6=aG+(Q*a5+S*a3+U*a1);a7=aH+(X*a5+Z*a3+$*a1);a8=aK+(ab*a5+ad*a3+af*a1);g[ae>>2]=a6;g[ac>>2]=a7;g[aa>>2]=a8;g[_>>2]=0.0;a_=c[Y>>2]|0;a$=c[(c[a_>>2]|0)+64>>2]|0;g[R>>2]=ag*a0+am*a2+as*a4;g[P>>2]=ai*a0+ao*a2+au*a4;g[m>>2]=ak*a0+aq*a2+aw*a4;g[n>>2]=0.0;hF[a$&255](u,a_,v);a1=+g[aA>>2];a3=+g[aB>>2];a5=+g[aL>>2];a9=aD+(ag*a1+ai*a3+ak*a5);ba=aC+(am*a1+ao*a3+aq*a5);bb=aF+(as*a1+au*a3+aw*a5);g[av>>2]=a9;g[at>>2]=ba;g[ar>>2]=bb;g[ap>>2]=0.0;a5=a6-a9;a9=a7-ba;ba=a8-bb;g[aM>>2]=a5;g[aN>>2]=a9;g[aO>>2]=ba;g[aP>>2]=0.0;bb=a0*a5+a2*a9+a4*ba;if(aU>1.0){bc=0;bd=18;break}if(bb>0.0){a8=ax*a0+ay*a2+az*a4;if(a8>=-1.4210854715202004e-14){bc=0;bd=19;break}a7=aU-bb/a8;a8=1.0-a7;bb=+g[A>>2]*a8+a7*+g[z>>2];a6=a8*+g[D>>2]+a7*+g[C>>2];a3=a8*+g[d>>2]+a7*+g[F>>2];a1=a8*+g[I>>2]+a7*+g[H>>2];be=a8*+g[L>>2]+a7*+g[K>>2];bf=a8*+g[f>>2]+a7*+g[N>>2];g[aM>>2]=a5;g[aN>>2]=a9;g[aO>>2]=ba;g[aP>>2]=0.0;bg=a7;bh=a0;bi=a2;bj=a4;bk=a1;bl=be;bm=bf;bn=bb;bo=a6;bp=a3}else{bg=aU;bh=aS;bi=aR;bj=aQ;bk=aD;bl=aC;bm=aF;bn=aG;bo=aH;bp=aK}if(!(wl(c[y>>2]|0,r)|0)){wg(c[y>>2]|0,r,l,o)}if(!(wk(c[y>>2]|0,k)|0)){aW=bj;aX=bi;aY=bh;aZ=bg;break L1}a3=+g[an>>2];a6=+g[al>>2];bb=+g[aj>>2];if(a3*a3+a6*a6+bb*bb>9999999747378752.0e-20){aK=bp;aH=bo;aG=bn;aF=bm;aC=bl;aD=bk;aQ=bj;aR=bi;aS=bh;aT=aV;aU=bg}else{aW=bj;aX=bi;aY=bh;aZ=bg;break L1}}if((bd|0)==18){i=j;return bc|0}else if((bd|0)==19){i=j;return bc|0}}else{aW=0.0;aX=0.0;aY=0.0;aZ=0.0}}while(0);g[h+164>>2]=aZ;aZ=aW*aW+(aX*aX+aY*aY);if(aZ<1.4210854715202004e-14){K1(h+132|0,0,16)|0;bq=0.0;br=0.0;bs=0.0}else{bg=1.0/+W(aZ);aZ=aY*bg;aY=aX*bg;aX=aW*bg;g[h+132>>2]=aZ;g[h+136>>2]=aY;g[h+140>>2]=aX;g[h+144>>2]=0.0;bq=aZ;br=aY;bs=aX}if(ax*bq+ay*br+az*bs>=-0.0- +g[h+172>>2]){bc=0;i=j;return bc|0}wm(c[y>>2]|0,w,x);w=h+148|0;h=x;c[w>>2]=c[h>>2];c[w+4>>2]=c[h+4>>2];c[w+8>>2]=c[h+8>>2];c[w+12>>2]=c[h+12>>2];bc=1;i=j;return bc|0}function wc(a){a=a|0;vi(a|0);return}function wd(a){a=a|0;vi(a|0);KU(a);return}function we(a,d){a=a|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;e=a|0;f=c[e>>2]|0;do{if((f|0)>3){if((b[d>>1]&8)!=0){g=f;h=5;break}i=f-1|0;c[e>>2]=i;j=a+52|0;k=a+4+(i<<4)|0;c[j>>2]=c[k>>2];c[j+4>>2]=c[k+4>>2];c[j+8>>2]=c[k+8>>2];c[j+12>>2]=c[k+12>>2];k=a+132|0;j=a+84+(i<<4)|0;c[k>>2]=c[j>>2];c[k+4>>2]=c[j+4>>2];c[k+8>>2]=c[j+8>>2];c[k+12>>2]=c[j+12>>2];j=a+212|0;k=a+164+(i<<4)|0;c[j>>2]=c[k>>2];c[j+4>>2]=c[k+4>>2];c[j+8>>2]=c[k+8>>2];c[j+12>>2]=c[k+12>>2];l=i;h=4}else{l=f;h=4}}while(0);if((h|0)==4){if((l|0)>2){g=l;h=5}else{m=l}}do{if((h|0)==5){if((b[d>>1]&4)!=0){m=g;break}l=g-1|0;c[e>>2]=l;f=a+36|0;i=a+4+(l<<4)|0;c[f>>2]=c[i>>2];c[f+4>>2]=c[i+4>>2];c[f+8>>2]=c[i+8>>2];c[f+12>>2]=c[i+12>>2];i=a+116|0;f=a+84+(l<<4)|0;c[i>>2]=c[f>>2];c[i+4>>2]=c[f+4>>2];c[i+8>>2]=c[f+8>>2];c[i+12>>2]=c[f+12>>2];f=a+196|0;i=a+164+(l<<4)|0;c[f>>2]=c[i>>2];c[f+4>>2]=c[i+4>>2];c[f+8>>2]=c[i+8>>2];c[f+12>>2]=c[i+12>>2];m=l}}while(0);do{if((m|0)>1){if((b[d>>1]&2)!=0){n=m;break}g=m-1|0;c[e>>2]=g;l=a+20|0;i=a+4+(g<<4)|0;c[l>>2]=c[i>>2];c[l+4>>2]=c[i+4>>2];c[l+8>>2]=c[i+8>>2];c[l+12>>2]=c[i+12>>2];i=a+100|0;l=a+84+(g<<4)|0;c[i>>2]=c[l>>2];c[i+4>>2]=c[l+4>>2];c[i+8>>2]=c[l+8>>2];c[i+12>>2]=c[l+12>>2];l=a+180|0;i=a+164+(g<<4)|0;c[l>>2]=c[i>>2];c[l+4>>2]=c[i+4>>2];c[l+8>>2]=c[i+8>>2];c[l+12>>2]=c[i+12>>2];o=g;h=10}else{o=m;h=10}}while(0);do{if((h|0)==10){if((o|0)>0){n=o;break}return}}while(0);if((b[d>>1]&1)!=0){return}d=n-1|0;c[e>>2]=d;e=a+4|0;n=a+4+(d<<4)|0;c[e>>2]=c[n>>2];c[e+4>>2]=c[n+4>>2];c[e+8>>2]=c[n+8>>2];c[e+12>>2]=c[n+12>>2];n=a+84|0;e=a+84+(d<<4)|0;c[n>>2]=c[e>>2];c[n+4>>2]=c[e+4>>2];c[n+8>>2]=c[e+8>>2];c[n+12>>2]=c[e+12>>2];e=a+164|0;n=a+164+(d<<4)|0;c[e>>2]=c[n>>2];c[e+4>>2]=c[n+4>>2];c[e+8>>2]=c[n+8>>2];c[e+12>>2]=c[n+12>>2];return}function wf(d){d=d|0;var e=0;a[d+312|0]=0;c[d>>2]=0;a[d+356|0]=1;g[d+292>>2]=999999984306749400.0;g[d+296>>2]=999999984306749400.0;g[d+300>>2]=999999984306749400.0;g[d+304>>2]=0.0;e=d+332|0;K1(d+336|0,0,17)|0;b[e>>1]=b[e>>1]&-16;return}function wg(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0;g=b+292|0;h=d;c[g>>2]=c[h>>2];c[g+4>>2]=c[h+4>>2];c[g+8>>2]=c[h+8>>2];c[g+12>>2]=c[h+12>>2];a[b+356|0]=1;g=b|0;d=b+4+(c[g>>2]<<4)|0;c[d>>2]=c[h>>2];c[d+4>>2]=c[h+4>>2];c[d+8>>2]=c[h+8>>2];c[d+12>>2]=c[h+12>>2];h=b+84+(c[g>>2]<<4)|0;d=e;c[h>>2]=c[d>>2];c[h+4>>2]=c[d+4>>2];c[h+8>>2]=c[d+8>>2];c[h+12>>2]=c[d+12>>2];d=b+164+(c[g>>2]<<4)|0;b=f;c[d>>2]=c[b>>2];c[d+4>>2]=c[b+4>>2];c[d+8>>2]=c[b+8>>2];c[d+12>>2]=c[b+12>>2];c[g>>2]=(c[g>>2]|0)+1;return}function wh(d){d=d|0;var e=0,f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0,D=0,E=0.0,F=0,G=0.0,H=0;e=i;i=i+32|0;f=e|0;h=e+16|0;j=d+356|0;if((a[j]&1)==0){k=a[d+312|0]|0;l=k&1;m=l<<24>>24!=0;i=e;return m|0}n=d+316|0;o=d+336|0;p=d+332|0;q=p;r=o;K1(r|0,0,17)|0;s=b[q>>1]&-16;b[q>>1]=s;a[j]=0;switch(c[d>>2]|0){case 3:{K1(f|0,0,16)|0;wi(0,f,d+4|0,d+20|0,d+36|0,n)|0;t=+g[o>>2];f=d+340|0;u=+g[f>>2];j=d+344|0;v=+g[j>>2];w=+g[d+84>>2]*t+ +g[d+100>>2]*u+ +g[d+116>>2]*v;x=t*+g[d+88>>2]+u*+g[d+104>>2]+v*+g[d+120>>2];y=t*+g[d+92>>2]+u*+g[d+108>>2]+v*+g[d+124>>2];g[d+244>>2]=w;g[d+248>>2]=x;g[d+252>>2]=y;g[d+256>>2]=0.0;z=+g[d+164>>2]*t+ +g[d+180>>2]*u+ +g[d+196>>2]*v;A=t*+g[d+168>>2]+u*+g[d+184>>2]+v*+g[d+200>>2];B=t*+g[d+172>>2]+u*+g[d+188>>2]+v*+g[d+204>>2];g[d+260>>2]=z;g[d+264>>2]=A;g[d+268>>2]=B;g[d+272>>2]=0.0;g[d+276>>2]=w-z;g[d+280>>2]=x-A;g[d+284>>2]=y-B;g[d+288>>2]=0.0;we(d,p);do{if(+g[o>>2]<0.0){C=0}else{if(+g[f>>2]<0.0){C=0;break}if(+g[j>>2]<0.0){C=0;break}C=+g[d+348>>2]>=0.0|0}}while(0);a[d+312|0]=C;k=C;l=k&1;m=l<<24>>24!=0;i=e;return m|0};case 1:{C=d+244|0;j=C;f=d+84|0;c[j>>2]=c[f>>2];c[j+4>>2]=c[f+4>>2];c[j+8>>2]=c[f+8>>2];c[j+12>>2]=c[f+12>>2];f=d+260|0;j=f;D=d+164|0;c[j>>2]=c[D>>2];c[j+4>>2]=c[D+4>>2];c[j+8>>2]=c[D+8>>2];c[j+12>>2]=c[D+12>>2];B=+g[d+248>>2]- +g[d+264>>2];y=+g[d+252>>2]- +g[d+268>>2];g[d+276>>2]=+g[C>>2]- +g[f>>2];g[d+280>>2]=B;g[d+284>>2]=y;g[d+288>>2]=0.0;K1(r|0,0,17)|0;b[q>>1]=s;g[o>>2]=1.0;g[d+340>>2]=0.0;g[d+344>>2]=0.0;g[d+348>>2]=0.0;a[d+312|0]=1;k=1;l=k&1;m=l<<24>>24!=0;i=e;return m|0};case 4:{K1(h|0,0,16)|0;if(!(wj(d,h,d+4|0,d+20|0,d+36|0,d+52|0,n)|0)){n=d+312|0;if((a[d+352|0]&1)==0){a[n]=1;K1(d+276|0,0,16)|0;k=1;l=k&1;m=l<<24>>24!=0;i=e;return m|0}else{a[n]=0;k=0;l=k&1;m=l<<24>>24!=0;i=e;return m|0}}y=+g[o>>2];n=d+340|0;B=+g[n>>2];h=d+344|0;A=+g[h>>2];r=d+348|0;x=+g[r>>2];z=+g[d+84>>2]*y+ +g[d+100>>2]*B+ +g[d+116>>2]*A+ +g[d+132>>2]*x;w=y*+g[d+88>>2]+B*+g[d+104>>2]+A*+g[d+120>>2]+x*+g[d+136>>2];v=y*+g[d+92>>2]+B*+g[d+108>>2]+A*+g[d+124>>2]+x*+g[d+140>>2];g[d+244>>2]=z;g[d+248>>2]=w;g[d+252>>2]=v;g[d+256>>2]=0.0;u=+g[d+164>>2]*y+ +g[d+180>>2]*B+ +g[d+196>>2]*A+ +g[d+212>>2]*x;t=y*+g[d+168>>2]+B*+g[d+184>>2]+A*+g[d+200>>2]+x*+g[d+216>>2];E=y*+g[d+172>>2]+B*+g[d+188>>2]+A*+g[d+204>>2]+x*+g[d+220>>2];g[d+260>>2]=u;g[d+264>>2]=t;g[d+268>>2]=E;g[d+272>>2]=0.0;g[d+276>>2]=z-u;g[d+280>>2]=w-t;g[d+284>>2]=v-E;g[d+288>>2]=0.0;we(d,p);do{if(+g[o>>2]<0.0){F=0}else{if(+g[n>>2]<0.0){F=0;break}if(+g[h>>2]<0.0){F=0;break}F=+g[r>>2]>=0.0|0}}while(0);a[d+312|0]=F;k=F;l=k&1;m=l<<24>>24!=0;i=e;return m|0};case 0:{a[d+312|0]=0;k=0;l=k&1;m=l<<24>>24!=0;i=e;return m|0};case 2:{E=+g[d+4>>2];v=+g[d+8>>2];t=+g[d+12>>2];w=+g[d+20>>2]-E;u=+g[d+24>>2]-v;z=+g[d+28>>2]-t;x=(0.0-E)*w+(0.0-v)*u+(0.0-t)*z;do{if(x>0.0){t=w*w+u*u+z*z;if(x<t){b[q>>1]=s|3;G=x/t;break}else{b[q>>1]=s|2;G=1.0;break}}else{b[q>>1]=s|1;G=0.0}}while(0);g[o>>2]=1.0-G;s=d+340|0;g[s>>2]=G;q=d+344|0;g[q>>2]=0.0;F=d+348|0;g[F>>2]=0.0;x=+g[d+84>>2];z=+g[d+88>>2];u=+g[d+92>>2];w=x+G*(+g[d+100>>2]-x);x=z+G*(+g[d+104>>2]-z);z=u+G*(+g[d+108>>2]-u);g[d+244>>2]=w;g[d+248>>2]=x;g[d+252>>2]=z;g[d+256>>2]=0.0;u=+g[d+164>>2];t=+g[d+168>>2];v=+g[d+172>>2];E=u+G*(+g[d+180>>2]-u);u=t+G*(+g[d+184>>2]-t);t=v+G*(+g[d+188>>2]-v);g[d+260>>2]=E;g[d+264>>2]=u;g[d+268>>2]=t;g[d+272>>2]=0.0;g[d+276>>2]=w-E;g[d+280>>2]=x-u;g[d+284>>2]=z-t;g[d+288>>2]=0.0;we(d,p);do{if(+g[o>>2]<0.0){H=0}else{if(+g[s>>2]<0.0){H=0;break}if(+g[q>>2]<0.0){H=0;break}H=+g[F>>2]>=0.0|0}}while(0);a[d+312|0]=H;k=H;l=k&1;m=l<<24>>24!=0;i=e;return m|0};default:{a[d+312|0]=0;k=0;l=k&1;m=l<<24>>24!=0;i=e;return m|0}}return 0}function wi(a,d,e,f,h,i){a=a|0;d=d|0;e=e|0;f=f|0;h=h|0;i=i|0;var j=0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0,I=0.0,J=0.0;a=i+16|0;j=b[a>>1]&-16;b[a>>1]=j;k=+g[f>>2];l=+g[e>>2];m=k-l;n=+g[f+4>>2];o=+g[e+4>>2];p=n-o;q=+g[f+8>>2];r=+g[e+8>>2];s=q-r;t=+g[h>>2];u=t-l;v=+g[h+4>>2];w=v-o;x=+g[h+8>>2];y=x-r;z=+g[d>>2];A=z-l;B=+g[d+4>>2];C=B-o;D=+g[d+8>>2];E=D-r;F=m*A+p*C+s*E;G=u*A+w*C+y*E;if(!(F>0.0|G>0.0)){d=i;H=e;c[d>>2]=c[H>>2];c[d+4>>2]=c[H+4>>2];c[d+8>>2]=c[H+8>>2];c[d+12>>2]=c[H+12>>2];b[a>>1]=j|1;g[i+20>>2]=1.0;g[i+24>>2]=0.0;g[i+28>>2]=0.0;g[i+32>>2]=0.0;return 1}E=z-k;C=B-n;A=D-q;I=m*E+p*C+s*A;J=u*E+w*C+y*A;if(!(I<0.0|J>I)){H=i;d=f;c[H>>2]=c[d>>2];c[H+4>>2]=c[d+4>>2];c[H+8>>2]=c[d+8>>2];c[H+12>>2]=c[d+12>>2];b[a>>1]=j|2;g[i+20>>2]=0.0;g[i+24>>2]=1.0;g[i+28>>2]=0.0;g[i+32>>2]=0.0;return 1}A=F*J-I*G;if(!(A>0.0|F<0.0|I>0.0)){C=F/(F-I);g[i>>2]=l+m*C;g[i+4>>2]=o+p*C;g[i+8>>2]=r+s*C;g[i+12>>2]=0.0;b[a>>1]=j|3;g[i+20>>2]=1.0-C;g[i+24>>2]=C;g[i+28>>2]=0.0;g[i+32>>2]=0.0;return 1}C=z-t;z=B-v;B=D-x;D=m*C+p*z+s*B;E=u*C+w*z+y*B;if(!(E<0.0|D>E)){d=i;H=h;c[d>>2]=c[H>>2];c[d+4>>2]=c[H+4>>2];c[d+8>>2]=c[H+8>>2];c[d+12>>2]=c[H+12>>2];b[a>>1]=j|4;g[i+20>>2]=0.0;g[i+24>>2]=0.0;g[i+28>>2]=1.0;g[i+32>>2]=0.0;return 1}B=D*G-F*E;if(!(B>0.0|G<0.0|E>0.0)){F=G/(G-E);g[i>>2]=l+u*F;g[i+4>>2]=o+w*F;g[i+8>>2]=r+y*F;g[i+12>>2]=0.0;b[a>>1]=j|5;g[i+20>>2]=1.0-F;g[i+24>>2]=0.0;g[i+28>>2]=F;g[i+32>>2]=0.0;return 1}F=I*E-D*J;do{if(F<=0.0){G=J-I;if(G<0.0){break}z=D-E;if(z<0.0){break}C=G/(G+z);g[i>>2]=k+(t-k)*C;g[i+4>>2]=n+(v-n)*C;g[i+8>>2]=q+(x-q)*C;g[i+12>>2]=0.0;b[a>>1]=j|6;g[i+20>>2]=0.0;g[i+24>>2]=1.0-C;g[i+28>>2]=C;g[i+32>>2]=0.0;return 1}}while(0);q=1.0/(A+(F+B));F=B*q;B=A*q;g[i>>2]=u*B+(l+m*F);g[i+4>>2]=w*B+(o+p*F);g[i+8>>2]=y*B+(s*F+r);g[i+12>>2]=0.0;b[a>>1]=j|7;g[i+20>>2]=1.0-F-B;g[i+24>>2]=F;g[i+28>>2]=B;g[i+32>>2]=0.0;return 1}function wj(d,e,f,h,j,k,l){d=d|0;e=e|0;f=f|0;h=h|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0,I=0.0,J=0.0,K=0.0,L=0.0,M=0.0,N=0.0,O=0.0,P=0,Q=0,R=0,S=0,T=0,U=0.0,V=0.0,W=0.0;d=i;i=i+40|0;m=d|0;n=m+16|0;b[n>>1]=0;o=l;p=e;c[o>>2]=c[p>>2];c[o+4>>2]=c[p+4>>2];c[o+8>>2]=c[p+8>>2];c[o+12>>2]=c[p+12>>2];p=l+16|0;b[p>>1]=b[p>>1]|15;q=+g[h>>2];r=+g[f>>2];s=q-r;t=+g[h+4>>2];u=+g[f+4>>2];v=t-u;w=+g[h+8>>2];x=+g[f+8>>2];y=w-x;z=+g[j>>2];A=z-r;B=+g[j+4>>2];C=B-u;D=+g[j+8>>2];E=D-x;F=v*E-y*C;G=y*A-s*E;H=s*C-v*A;I=+g[k>>2];J=I-r;K=+g[k+4>>2];L=K-u;M=+g[k+8>>2];N=M-x;O=J*F+L*G+H*N;if(O*O<9.99999905104687e-9){P=-1}else{P=O*(G*(+g[e+4>>2]-u)+F*(+g[e>>2]-r)+H*(+g[e+8>>2]-x))<0.0|0}H=C*N-E*L;F=E*J-A*N;G=A*L-C*J;O=s*H+v*F+G*y;if(O*O<9.99999905104687e-9){Q=-1}else{Q=O*(F*(+g[e+4>>2]-u)+H*(+g[e>>2]-r)+G*(+g[e+8>>2]-x))<0.0|0}G=L*y-N*v;H=N*s-J*y;y=J*v-L*s;s=A*G+C*H+y*E;if(s*s<9.99999905104687e-9){R=-1}else{R=s*(H*(+g[e+4>>2]-u)+G*(+g[e>>2]-r)+y*(+g[e+8>>2]-x))<0.0|0}y=I-q;I=K-t;K=M-w;M=z-q;z=B-t;B=D-w;D=I*B-K*z;G=K*M-y*B;B=y*z-I*M;M=(r-q)*D+(u-t)*G+B*(x-w);if(M*M<9.99999905104687e-9){S=-1}else{S=M*(G*(+g[e+4>>2]-t)+D*(+g[e>>2]-q)+B*(+g[e+8>>2]-w))<0.0|0}if((Q|P|R|S|0)<0){a[l+36|0]=1;T=0;i=d;return T|0}o=(P|0)!=0;P=(Q|0)==0;Q=(R|0)==0;R=(S|0)==0;if(P&(o^1)&Q&R){T=0;i=d;return T|0}do{if(o){wi(0,e,f,h,j,m)|0;w=+g[m>>2];B=+g[m+4>>2];q=+g[m+8>>2];D=w- +g[e>>2];t=B- +g[e+4>>2];G=q- +g[e+8>>2];M=D*D+t*t+G*G;if(M>=3.4028234663852886e+38){U=3.4028234663852886e+38;break}G=+g[m+12>>2];g[l>>2]=w;g[l+4>>2]=B;g[l+8>>2]=q;g[l+12>>2]=G;S=b[n>>1]|0;b[p>>1]=S&1|b[p>>1]&-16|S&2|S&4;G=+g[m+24>>2];q=+g[m+28>>2];g[l+20>>2]=+g[m+20>>2];g[l+24>>2]=G;g[l+28>>2]=q;g[l+32>>2]=0.0;U=M}else{U=3.4028234663852886e+38}}while(0);do{if(P){V=U}else{wi(0,e,f,j,k,m)|0;M=+g[m>>2];q=+g[m+4>>2];G=+g[m+8>>2];B=M- +g[e>>2];w=q- +g[e+4>>2];t=G- +g[e+8>>2];D=B*B+w*w+t*t;if(D>=U){V=U;break}t=+g[m+12>>2];g[l>>2]=M;g[l+4>>2]=q;g[l+8>>2]=G;g[l+12>>2]=t;o=b[n>>1]|0;b[p>>1]=(o&65535)>>>1<<2&4|(o&1|b[p>>1]&-16)|(o&65535)>>>2<<3&8;t=+g[m+24>>2];G=+g[m+28>>2];g[l+20>>2]=+g[m+20>>2];g[l+24>>2]=0.0;g[l+28>>2]=t;g[l+32>>2]=G;V=D}}while(0);do{if(Q){W=V}else{wi(0,e,f,k,h,m)|0;U=+g[m>>2];D=+g[m+4>>2];G=+g[m+8>>2];t=U- +g[e>>2];q=D- +g[e+4>>2];M=G- +g[e+8>>2];w=t*t+q*q+M*M;if(w>=V){W=V;break}M=+g[m+12>>2];g[l>>2]=U;g[l+4>>2]=D;g[l+8>>2]=G;g[l+12>>2]=M;P=b[n>>1]|0;b[p>>1]=(P&65535)>>>2<<1&2|(P&1|b[p>>1]&-16)|(P&65535)>>>1<<3&8;M=+g[m+28>>2];G=+g[m+24>>2];g[l+20>>2]=+g[m+20>>2];g[l+24>>2]=M;g[l+28>>2]=0.0;g[l+32>>2]=G;W=w}}while(0);if(R){T=1;i=d;return T|0}wi(0,e,h,k,j,m)|0;V=+g[m>>2];w=+g[m+4>>2];G=+g[m+8>>2];M=V- +g[e>>2];D=w- +g[e+4>>2];U=G- +g[e+8>>2];if(M*M+D*D+U*U>=W){T=1;i=d;return T|0}W=+g[m+12>>2];g[l>>2]=V;g[l+4>>2]=w;g[l+8>>2]=G;g[l+12>>2]=W;e=b[n>>1]|0;b[p>>1]=(e&65535)>>>1<<3&8|(e<<1&2|b[p>>1]&-16|e&4);W=+g[m+20>>2];G=+g[m+28>>2];w=+g[m+24>>2];g[l+20>>2]=0.0;g[l+24>>2]=W;g[l+28>>2]=G;g[l+32>>2]=w;T=1;i=d;return T|0}function wk(a,b){a=a|0;b=b|0;var d=0,e=0;d=wh(a)|0;e=b;b=a+276|0;c[e>>2]=c[b>>2];c[e+4>>2]=c[b+4>>2];c[e+8>>2]=c[b+8>>2];c[e+12>>2]=c[b+12>>2];return d|0}function wl(a,b){a=a|0;b=b|0;var d=0,e=0.0,f=0.0,h=0.0,i=0.0,j=0,k=0,l=0.0,m=0.0,n=0.0,o=0,p=0,q=0,r=0,s=0;d=c[a>>2]|0;if((d|0)>0){e=+g[b>>2];f=+g[b+4>>2];h=+g[b+8>>2];i=+g[a+308>>2];j=0;k=0;while(1){l=e- +g[a+4+(k<<4)>>2];m=f- +g[a+4+(k<<4)+4>>2];n=h- +g[a+4+(k<<4)+8>>2];o=j|l*l+m*m+n*n<=i;p=k+1|0;if((p|0)<(d|0)){j=o;k=p}else{q=o;break}}}else{q=0}if(+g[b+12>>2]!=+g[a+304>>2]){r=0;s=r|q;return s|0}if(+g[b+8>>2]!=+g[a+300>>2]){r=0;s=r|q;return s|0}if(+g[b+4>>2]!=+g[a+296>>2]){r=0;s=r|q;return s|0}r=+g[b>>2]==+g[a+292>>2];s=r|q;return s|0}function wm(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;wh(a)|0;e=b;b=a+244|0;c[e>>2]=c[b>>2];c[e+4>>2]=c[b+4>>2];c[e+8>>2]=c[b+8>>2];c[e+12>>2]=c[b+12>>2];b=d;d=a+260|0;c[b>>2]=c[d>>2];c[b+4>>2]=c[d+4>>2];c[b+8>>2]=c[d+8>>2];c[b+12>>2]=c[d+12>>2];return}function wn(a,c){a=a|0;c=c|0;var d=0;if((b[a+10>>1]&b[c+4>>1])<<16>>16==0){d=0;return d|0}d=(b[c+6>>1]&b[a+8>>1])<<16>>16!=0;return d|0}function wo(b,d,e,f,h){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;x4(b|0,5,d,e);c[b>>2]=32824;e=b+300|0;d=f;c[e>>2]=c[d>>2];c[e+4>>2]=c[d+4>>2];c[e+8>>2]=c[d+8>>2];c[e+12>>2]=c[d+12>>2];d=b+316|0;e=f+16|0;c[d>>2]=c[e>>2];c[d+4>>2]=c[e+4>>2];c[d+8>>2]=c[e+8>>2];c[d+12>>2]=c[e+12>>2];e=b+332|0;d=f+32|0;c[e>>2]=c[d>>2];c[e+4>>2]=c[d+4>>2];c[e+8>>2]=c[d+8>>2];c[e+12>>2]=c[d+12>>2];d=b+348|0;e=f+48|0;c[d>>2]=c[e>>2];c[d+4>>2]=c[e+4>>2];c[d+8>>2]=c[e+8>>2];c[d+12>>2]=c[e+12>>2];e=b+364|0;d=h;c[e>>2]=c[d>>2];c[e+4>>2]=c[d+4>>2];c[e+8>>2]=c[d+8>>2];c[e+12>>2]=c[d+12>>2];d=b+380|0;e=h+16|0;c[d>>2]=c[e>>2];c[d+4>>2]=c[e+4>>2];c[d+8>>2]=c[e+8>>2];c[d+12>>2]=c[e+12>>2];e=b+396|0;d=h+32|0;c[e>>2]=c[d>>2];c[e+4>>2]=c[d+4>>2];c[e+8>>2]=c[d+8>>2];c[e+12>>2]=c[d+12>>2];d=b+412|0;e=h+48|0;c[d>>2]=c[e>>2];c[d+4>>2]=c[e+4>>2];c[d+8>>2]=c[e+8>>2];c[d+12>>2]=c[e+12>>2];a[b+552|0]=0;e=b+524|0;C=0;a[e]=C;C=C>>8;a[e+1|0]=C;C=C>>8;a[e+2|0]=C;C=C>>8;a[e+3|0]=C;g[b+572>>2]=-1.0;g[b+444>>2]=999999984306749400.0;g[b+448>>2]=999999984306749400.0;g[b+452>>2]=999999984306749400.0;g[b+428>>2]=1.0;g[b+432>>2]=.30000001192092896;g[b+436>>2]=1.0;g[b+440>>2]=.009999999776482582;g[b+456>>2]=.05000000074505806;c[b+592>>2]=0;g[b+596>>2]=0.0;g[b+600>>2]=.699999988079071;g[b+604>>2]=0.0;return}function wp(b,d){b=b|0;d=d|0;var e=0,f=0,h=0,i=0.0;e=d|0;if((a[b+527|0]&1)!=0){c[e>>2]=0;c[d+4>>2]=0;return}c[e>>2]=3;f=d+4|0;c[f>>2]=3;d=c[b+28>>2]|0;h=c[b+32>>2]|0;wq(b,d+4|0,h+4|0,d+260|0,h+260|0);do{if((a[b+526|0]&1)!=0){h=c[e>>2]|0;c[e>>2]=h+1;d=c[f>>2]|0;c[f>>2]=d-1;i=+g[b+456>>2];if(+g[b+444>>2]>=i){break}if(+g[b+448>>2]>=i){break}c[e>>2]=h+2;c[f>>2]=d-2}}while(0);if((a[b+525|0]&1)==0){return}c[e>>2]=(c[e>>2]|0)+1;c[f>>2]=(c[f>>2]|0)-1;return}function wq(b,c,d,e,f){b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0,I=0.0,J=0.0,K=0.0,L=0.0,M=0.0,N=0.0,O=0.0,P=0.0,Q=0.0,R=0.0,S=0.0,T=0.0,U=0.0,X=0.0,_=0.0,aa=0.0,ab=0.0,ad=0.0,ae=0.0,af=0.0,ag=0.0,ah=0.0,ai=0.0,aj=0,ak=0.0,al=0.0,am=0.0,an=0.0,ao=0.0,ap=0.0,aq=0.0,ar=0.0,as=0.0,at=0.0,au=0.0,av=0.0,aw=0.0,ax=0.0,ay=0.0,az=0.0,aA=0.0,aB=0.0,aC=0.0,aD=0.0;h=i;i=i+272|0;j=h|0;k=h+64|0;l=h+128|0;m=h+192|0;n=h+208|0;o=h+224|0;p=h+240|0;q=h+256|0;r=b+504|0;g[r>>2]=0.0;g[b+500>>2]=0.0;s=b+525|0;a[s]=0;t=b+526|0;a[t]=0;do{if((a[b+552|0]&1)!=0){if((a[b+527|0]&1)!=0){break}u=+g[b+556>>2];v=+g[b+560>>2];w=+g[b+564>>2];x=+g[b+568>>2];y=2.0/(u*u+v*v+w*w+x*x);z=u*y;A=v*y;B=w*y;y=x*z;C=x*A;D=x*B;x=u*z;z=u*A;E=u*B;u=v*A;A=v*B;v=w*B;B=1.0-(u+v);w=z-D;F=E+C;G=z+D;D=1.0-(x+v);v=A-y;z=E-C;C=A+y;y=1.0-(x+u);j_(j,c,b+300|0);j_(k,d,b+364|0);u=+g[k>>2];x=+g[k+4>>2];A=+g[k+8>>2];E=u*B+G*x+z*A;H=u*w+x*D+C*A;I=u*F+v*x+y*A;J=+g[k+16>>2];K=+g[k+20>>2];L=+g[k+24>>2];M=B*J+G*K+z*L;N=w*J+D*K+C*L;O=F*J+v*K+y*L;P=+g[k+32>>2];Q=+g[k+36>>2];R=+g[k+40>>2];S=B*P+G*Q+z*R;z=w*P+D*Q+C*R;C=F*P+v*Q+y*R;y=+g[j>>2];v=+g[j+16>>2];F=+g[j+32>>2];D=+g[j+4>>2];w=+g[j+20>>2];G=+g[j+36>>2];B=+g[j+8>>2];T=+g[j+24>>2];U=+g[j+40>>2];X=-0.0- +g[j+48>>2];_=-0.0- +g[j+52>>2];aa=-0.0- +g[j+56>>2];ab=y*X+v*_+F*aa;ad=D*X+w*_+G*aa;ae=B*X+T*_+U*aa;aa=u*0.0+x*0.0+A*0.0+ +g[k+48>>2]+(I*ae+(E*ab+H*ad));A=J*0.0+K*0.0+L*0.0+ +g[k+52>>2]+(O*ae+(M*ab+N*ad));L=P*0.0+Q*0.0+R*0.0+ +g[k+56>>2]+(C*ae+(S*ab+z*ad));g[l>>2]=E*y+H*D+I*B;g[l+4>>2]=E*v+H*w+I*T;g[l+8>>2]=E*F+H*G+I*U;g[l+12>>2]=0.0;g[l+16>>2]=M*y+N*D+O*B;g[l+20>>2]=M*v+N*w+O*T;g[l+24>>2]=M*F+N*G+O*U;g[l+28>>2]=0.0;g[l+32>>2]=S*y+z*D+C*B;g[l+36>>2]=S*v+z*w+C*T;g[l+40>>2]=S*F+z*G+C*U;g[l+44>>2]=0.0;g[l+48>>2]=aa;g[l+52>>2]=A;g[l+56>>2]=L;g[l+60>>2]=0.0;i_(l|0,m);L=+g[m>>2];A=+g[m+4>>2];aa=+g[m+8>>2];U=L*L+A*A+aa*aa;if(+V(+U)<1.1920928955078125e-7){i=h;return}g[b+472>>2]=0.0;C=1.0/+W(U);g[b+460>>2]=L*C;g[b+464>>2]=A*C;g[b+468>>2]=aa*C;C=+g[m+12>>2];aa=C<-1.0?-1.0:C;C=+$(aa>1.0?1.0:aa)*2.0;g[r>>2]=C;if(+V(+C)<1.1920928955078125e-7){i=h;return}a[t]=1;i=h;return}}while(0);i_(c|0,n);m=b+300|0;i_(m,o);C=+g[n+12>>2];aa=+g[o>>2];A=+g[n>>2];L=+g[o+12>>2];U=+g[n+4>>2];G=+g[o+8>>2];z=+g[n+8>>2];F=+g[o+4>>2];S=C*aa+A*L+U*G-z*F;T=aa*z+(L*U+C*F)-A*G;w=C*G+L*z+A*F-aa*U;v=C*L-aa*A-U*F-G*z;i_(d|0,p);o=b+364|0;i_(o,q);z=+g[p+12>>2];G=+g[q>>2];F=+g[p>>2];U=+g[q+12>>2];A=+g[p+4>>2];aa=+g[q+8>>2];L=+g[p+8>>2];C=+g[q+4>>2];B=z*G+F*U+A*aa-L*C;D=G*L+(U*A+z*C)-F*aa;y=z*aa+U*L+F*C-G*A;O=z*U-G*F-A*C-aa*L;L=-0.0-B;aa=-0.0-D;C=-0.0-y;A=S*O+v*L+w*aa-T*C;F=S*C+(T*O+v*aa)-w*L;G=T*L+(w*O+v*C)-S*aa;U=v*O-S*L-T*aa-w*C;z=+g[12276];N=+g[12278];M=+g[12277];I=z*U+N*F-M*G;H=z*G+M*U-N*A;E=N*U+M*A-z*F;ad=-0.0-A;ab=z*ad-M*F-N*G;ae=-0.0-F;R=-0.0-G;Q=H*R+(U*I+ab*ad)-E*ae;P=E*ad+(U*H+ab*ae)-I*R;K=I*ae+(U*E+ab*R)-H*ad;ad=1.0/+W(K*K+(Q*Q+P*P));H=ad*Q;Q=ad*P;P=ad*K;K=N*P+(M*Q+z*H);do{if(K<-.9999998807907104){if(+V(+N)>.7071067690849304){ad=1.0/+W(N*N+M*M);af=0.0;ag=ad*(-0.0-N);ah=M*ad;ai=0.0;break}else{ad=1.0/+W(z*z+M*M);af=ad*(-0.0-M);ag=z*ad;ah=0.0;ai=0.0;break}}else{ad=+W((K+1.0)*2.0);R=1.0/ad;af=(M*P-N*Q)*R;ag=(N*H-z*P)*R;ah=(z*Q-M*H)*R;ai=ad*.5}}while(0);H=1.0/+W(ai*ai+(ah*ah+(ag*ag+af*af)));M=af*H;af=ag*H;ag=ah*H;ah=ai*H;H=-0.0-M;ai=-0.0-af;Q=-0.0-ag;z=G*ai+(A*ah+U*H)-F*Q;P=A*Q+(F*ah+U*ai)-G*H;N=F*H+(G*ah+U*Q)-A*ai;K=U*ah-A*H-F*ai-G*Q;Q=1.0/+W(K*K+(N*N+(z*z+P*P)));G=Q*z;z=Q*P;P=Q*N;N=Q*K;K=+g[b+444>>2];Q=+g[b+456>>2];q=K<Q;do{if(q){aj=24}else{ai=+g[b+448>>2];if(ai<Q){aj=24;break}F=ah<-1.0?-1.0:ah;H=+$(F>1.0?1.0:F)*2.0;do{if(H>1.1920928955078125e-7){F=1.0/+W(ag*ag+(M*M+af*af));A=M*F;U=af*F;ad=ag*F;if(+V(+U)<=1.1920928955078125e-7){ak=A;al=U;am=ad;an=K;break}F=ad*ad/(U*U);ak=A;al=U;am=ad;an=+W((F+1.0)/(1.0/(ai*ai)+F/(K*K)))}else{ak=0.0;al=0.0;am=0.0;an=0.0}}while(0);F=+g[b+428>>2];ad=an*F;if(H<=ad){break}a[t]=1;if(H<an&F<.9999998807907104){ao=(H-ad)/(an-ad)}else{ao=1.0}g[b+528>>2]=ao;g[r>>2]=H-ad;if(+V(+al)>1.1920928955078125e-7){ad=+V(+(al*(-0.0-am)/al*(ai/K)));if(am<-0.0){ap=ad}else{ap=-0.0-ad}ad=ap;F=1.0/+W(al*al+ak*ak+ad*ad);aq=ak*F;ar=al*F;as=F*(-0.0-ad)}else{aq=ak;ar=al;as=am}ad=-0.0-aq;F=-0.0-ar;U=-0.0-as;A=D*U+O*ad-y*F;R=O*F+y*ad-B*U;ab=O*U+B*F-D*ad;ad=B*aq-D*F-y*U;U=R*C+(ad*L+O*A)-ab*aa;F=ab*L+(ad*aa+O*R)-A*C;E=A*aa+(O*ab+ad*C)-R*L;g[b+460>>2]=U;g[b+464>>2]=F;g[b+468>>2]=E;g[b+472>>2]=0.0;K1(b+536|0,0,16)|0;g[b+492>>2]=1.0/(U*(+g[e>>2]*U+ +g[e+16>>2]*F+ +g[e+32>>2]*E)+F*(U*+g[e+4>>2]+F*+g[e+20>>2]+E*+g[e+36>>2])+E*(U*+g[e+8>>2]+F*+g[e+24>>2]+E*+g[e+40>>2])+(U*(U*+g[f>>2]+F*+g[f+16>>2]+E*+g[f+32>>2])+F*(U*+g[f+4>>2]+F*+g[f+20>>2]+E*+g[f+36>>2])+E*(U*+g[f+8>>2]+F*+g[f+24>>2]+E*+g[f+40>>2])))}}while(0);L36:do{if((aj|0)==24){aq=+g[m>>2];as=+g[b+316>>2];ar=+g[b+332>>2];am=+g[c>>2];al=+g[c+4>>2];ak=+g[c+8>>2];ap=aq*am+as*al+ar*ak;ao=+g[c+16>>2];an=+g[c+20>>2];ag=+g[c+24>>2];af=aq*ao+as*an+ar*ag;M=+g[c+32>>2];ah=+g[c+36>>2];E=+g[c+40>>2];F=aq*M+as*ah+ar*E;ar=+g[b+304>>2];as=+g[b+320>>2];aq=+g[b+336>>2];U=am*ar+al*as+ak*aq;R=ao*ar+an*as+ag*aq;ad=M*ar+ah*as+E*aq;aq=+g[b+308>>2];as=+g[b+324>>2];ar=+g[b+340>>2];ab=am*aq+al*as+ak*ar;ak=ao*aq+an*as+ag*ar;ag=M*aq+ah*as+E*ar;ar=+g[o>>2];E=+g[b+380>>2];as=+g[b+396>>2];ah=ar*+g[d>>2]+E*+g[d+4>>2]+as*+g[d+8>>2];aq=ar*+g[d+16>>2]+E*+g[d+20>>2]+as*+g[d+24>>2];M=ar*+g[d+32>>2]+E*+g[d+36>>2]+as*+g[d+40>>2];as=ap*ah+af*aq+F*M;E=U*ah+R*aq+ad*M;ar=ab*ah+ak*aq+ag*M;do{if(K<Q){p=+V(+E)<1.1920928955078125e-7;if(+g[b+448>>2]<Q){if(p){if(+V(+ar)<1.1920928955078125e-7){break L36}}a[t]=1;g[b+460>>2]=-0.0-(F*aq-af*M);g[b+464>>2]=-0.0-(ap*M-F*ah);g[b+468>>2]=-0.0-(af*ah-ap*aq);g[b+472>>2]=0.0;break L36}if(p){at=as;au=E;av=ar;break}a[t]=1;an=+g[b+448>>2];if(an<Q){at=as;au=E;av=ar;break}ao=+ac(+ar,+as);if(ao>an){at=+Y(an);au=0.0;av=+Z(an);break}if(ao>=-0.0-an){at=as;au=0.0;av=ar;break}at=+Y(an);au=0.0;av=-0.0- +Z(an)}else{if(+V(+ar)<1.1920928955078125e-7){at=as;au=E;av=ar;break}a[t]=1;if(q){at=as;au=E;av=ar;break}an=+ac(+E,+as);if(an>K){at=+Y(K);au=+Z(K);av=0.0;break}if(an>=-0.0-K){at=as;au=E;av=0.0;break}at=+Y(K);au=-0.0- +Z(K);av=0.0}}while(0);E=ab*av+(U*au+ap*at);as=ak*av+(R*au+af*at);ar=ag*av+(ad*au+F*at);ai=1.0/+W(ar*ar+(E*E+as*as));H=ai*E;E=ai*as;as=ai*ar;ar=aq*as-M*E;ai=M*H-ah*as;as=ah*E-aq*H;g[b+472>>2]=0.0;H=+W(ar*ar+ai*ai+as*as);g[r>>2]=H;E=1.0/H;g[b+460>>2]=E*(-0.0-ar);g[b+464>>2]=E*(-0.0-ai);g[b+468>>2]=E*(-0.0-as)}}while(0);at=+g[b+452>>2];r=b+512|0;if(at<0.0){g[r>>2]=0.0;i=h;return}au=N<-1.0?-1.0:N;av=+$(au>1.0?1.0:au)*2.0;if(av>3.1415927410125732){au=N>1.0?-1.0:-0.0-N;aw=-0.0-G;ax=-0.0-z;ay=-0.0-P;az=+$(au>1.0?1.0:au)*2.0}else{aw=G;ax=z;ay=P;az=av}g[r>>2]=az;if(az>1.1920928955078125e-7){av=1.0/+W(ay*ay+(ax*ax+aw*aw));aA=aw*av;aB=ax*av;aC=ay*av}else{aA=aw;aB=ax;aC=ay}ay=+g[b+428>>2];ax=at*ay;if(az>ax){a[s]=1;if(az<at&ay<.9999998807907104){aD=(az-ax)/(at-ax)}else{aD=1.0}g[b+532>>2]=aD;g[b+508>>2]=az-ax;ax=-0.0-aA;az=-0.0-aB;aD=-0.0-aC;at=D*aD+O*ax-y*az;ay=O*az+y*ax-B*aD;aw=O*aD+B*az-D*ax;ax=B*aA-D*az-y*aD;aD=ay*C+(ax*L+O*at)-aw*aa;y=aw*L+(ax*aa+O*ay)-at*C;az=at*aa+(O*aw+ax*C)-ay*L;g[b+476>>2]=aD;g[b+480>>2]=y;g[b+484>>2]=az;g[b+488>>2]=0.0;g[b+496>>2]=1.0/(aD*(+g[e>>2]*aD+ +g[e+16>>2]*y+ +g[e+32>>2]*az)+y*(aD*+g[e+4>>2]+y*+g[e+20>>2]+az*+g[e+36>>2])+az*(aD*+g[e+8>>2]+y*+g[e+24>>2]+az*+g[e+40>>2])+(aD*(aD*+g[f>>2]+y*+g[f+16>>2]+az*+g[f+32>>2])+y*(aD*+g[f+4>>2]+y*+g[f+20>>2]+az*+g[f+36>>2])+az*(aD*+g[f+8>>2]+y*+g[f+24>>2]+az*+g[f+40>>2])))}if((a[t]&1)==0){i=h;return}az=-0.0-aA;y=-0.0-aB;aB=-0.0-aC;aC=T*aB+v*az-w*y;aD=v*y+w*az-S*aB;L=v*aB+S*y-T*az;az=-0.0-S;ay=S*aA-T*y-w*aB;aB=-0.0-T;T=-0.0-w;g[b+536>>2]=aD*T+(ay*az+v*aC)-L*aB;g[b+540>>2]=L*az+(ay*aB+v*aD)-aC*T;g[b+544>>2]=aC*aB+(v*L+ay*T)-aD*az;g[b+548>>2]=0.0;i=h;return}function wr(a,b){a=a|0;b=b|0;var d=0,e=0;d=c[a+28>>2]|0;e=c[a+32>>2]|0;ws(a,b,d+4|0,e+4|0,d+260|0,e+260|0);return}function ws(b,d,e,f,h,j){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;j=j|0;var k=0,l=0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0,t=0,u=0,v=0.0,w=0.0,x=0.0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;k=i;i=i+64|0;l=k|0;wq(b,e,f,h,j);j=d+8|0;g[c[j>>2]>>2]=1.0;h=d+24|0;g[(c[j>>2]|0)+((c[h>>2]|0)+1<<2)>>2]=1.0;g[(c[j>>2]|0)+((c[h>>2]<<1)+2<<2)>>2]=1.0;m=+g[b+348>>2];n=+g[b+352>>2];o=+g[b+356>>2];p=+g[e>>2]*m+ +g[e+4>>2]*n+ +g[e+8>>2]*o;q=m*+g[e+16>>2]+n*+g[e+20>>2]+o*+g[e+24>>2];r=m*+g[e+32>>2]+n*+g[e+36>>2]+o*+g[e+40>>2];j=d+12|0;s=c[j>>2]|0;t=c[h>>2]|0;u=t<<1;g[s>>2]=0.0;g[s+4>>2]=r;g[s+8>>2]=-0.0-q;g[s+12>>2]=0.0;g[s+(t<<2)>>2]=-0.0-r;g[s+(t+1<<2)>>2]=0.0;g[s+(t+2<<2)>>2]=p;g[s+(t+3<<2)>>2]=0.0;g[s+(u<<2)>>2]=q;g[s+((u|1)<<2)>>2]=-0.0-p;g[s+(u+2<<2)>>2]=0.0;g[s+(u+3<<2)>>2]=0.0;o=+g[b+412>>2];n=+g[b+416>>2];m=+g[b+420>>2];v=+g[f>>2]*o+ +g[f+4>>2]*n+ +g[f+8>>2]*m;w=o*+g[f+16>>2]+n*+g[f+20>>2]+m*+g[f+24>>2];x=o*+g[f+32>>2]+n*+g[f+36>>2]+m*+g[f+40>>2];u=d+20|0;s=c[u>>2]|0;t=c[h>>2]|0;y=t<<1;g[s>>2]=0.0;g[s+4>>2]=-0.0-x;g[s+8>>2]=w;g[s+12>>2]=0.0;g[s+(t<<2)>>2]=x;g[s+(t+1<<2)>>2]=0.0;g[s+(t+2<<2)>>2]=-0.0-v;g[s+(t+3<<2)>>2]=0.0;g[s+(y<<2)>>2]=-0.0-w;g[s+((y|1)<<2)>>2]=v;g[s+(y+2<<2)>>2]=0.0;g[s+(y+3<<2)>>2]=0.0;y=b+592|0;s=d|0;m=+g[((c[y>>2]&2|0)==0?d+4|0:b+600|0)>>2]*+g[s>>2];t=d+28|0;z=d+36|0;A=d+40|0;B=b+596|0;C=d+32|0;g[c[t>>2]>>2]=m*(v+ +g[f+48>>2]-p- +g[e+48>>2]);g[c[z>>2]>>2]=-3.4028234663852886e+38;g[c[A>>2]>>2]=3.4028234663852886e+38;if((c[y>>2]&1|0)!=0){g[c[C>>2]>>2]=+g[B>>2]}g[(c[t>>2]|0)+(c[h>>2]<<2)>>2]=m*(w+ +g[f+52>>2]-q- +g[e+52>>2]);g[(c[z>>2]|0)+(c[h>>2]<<2)>>2]=-3.4028234663852886e+38;g[(c[A>>2]|0)+(c[h>>2]<<2)>>2]=3.4028234663852886e+38;if((c[y>>2]&1|0)!=0){g[(c[C>>2]|0)+(c[h>>2]<<2)>>2]=+g[B>>2]}g[(c[t>>2]|0)+(c[h>>2]<<1<<2)>>2]=m*(x+ +g[f+56>>2]-r- +g[e+56>>2]);g[(c[z>>2]|0)+(c[h>>2]<<1<<2)>>2]=-3.4028234663852886e+38;g[(c[A>>2]|0)+(c[h>>2]<<1<<2)>>2]=3.4028234663852886e+38;if((c[y>>2]&1|0)!=0){g[(c[C>>2]|0)+(c[h>>2]<<1<<2)>>2]=+g[B>>2]}B=b+300|0;f=(c[h>>2]|0)*3|0;L10:do{if((a[b+526|0]&1)==0){D=f}else{d=c[j>>2]|0;E=c[u>>2]|0;r=+g[b+456>>2];do{if(+g[b+444>>2]<r){if(+g[b+448>>2]>=r){break}j_(l,e,B);x=+g[l+4>>2];m=+g[l+20>>2];q=+g[l+36>>2];w=+g[l+8>>2];p=+g[l+24>>2];v=+g[l+40>>2];F=(c[h>>2]|0)+f|0;g[d+(f<<2)>>2]=x;G=f+1|0;g[d+(G<<2)>>2]=m;H=f+2|0;g[d+(H<<2)>>2]=q;g[d+(F<<2)>>2]=w;I=F+1|0;g[d+(I<<2)>>2]=p;J=F+2|0;g[d+(J<<2)>>2]=v;g[E+(f<<2)>>2]=-0.0-x;g[E+(G<<2)>>2]=-0.0-m;g[E+(H<<2)>>2]=-0.0-q;g[E+(F<<2)>>2]=-0.0-w;g[E+(I<<2)>>2]=-0.0-p;g[E+(J<<2)>>2]=-0.0-v;n=+g[s>>2]*+g[b+436>>2];J=b+460|0;I=b+464|0;H=b+468|0;g[(c[t>>2]|0)+(f<<2)>>2]=n*(x*+g[J>>2]+m*+g[I>>2]+q*+g[H>>2]);g[(c[t>>2]|0)+(F<<2)>>2]=n*(w*+g[J>>2]+p*+g[I>>2]+v*+g[H>>2]);g[(c[z>>2]|0)+(f<<2)>>2]=-3.4028234663852886e+38;g[(c[A>>2]|0)+(f<<2)>>2]=3.4028234663852886e+38;g[(c[z>>2]|0)+(F<<2)>>2]=-3.4028234663852886e+38;g[(c[A>>2]|0)+(F<<2)>>2]=3.4028234663852886e+38;D=(c[h>>2]|0)+F|0;break L10}}while(0);r=+g[b+436>>2];v=r*+g[b+460>>2]*r;p=r*r*+g[b+464>>2];w=r*r*+g[b+468>>2];g[d+(f<<2)>>2]=v;F=f+1|0;g[d+(F<<2)>>2]=p;H=f+2|0;g[d+(H<<2)>>2]=w;g[E+(f<<2)>>2]=-0.0-v;g[E+(F<<2)>>2]=-0.0-p;g[E+(H<<2)>>2]=-0.0-w;g[(c[t>>2]|0)+(f<<2)>>2]=+g[s>>2]*+g[b+432>>2]*+g[b+504>>2];if((c[y>>2]&4|0)!=0){g[(c[C>>2]|0)+(f<<2)>>2]=+g[b+604>>2]}g[(c[z>>2]|0)+(f<<2)>>2]=0.0;g[(c[A>>2]|0)+(f<<2)>>2]=3.4028234663852886e+38;D=(c[h>>2]|0)+f|0}}while(0);if((a[b+525|0]&1)==0){i=k;return}w=+g[b+436>>2];p=w*+g[b+476>>2]*w;v=w*w*+g[b+480>>2];r=w*w*+g[b+484>>2];f=c[j>>2]|0;j=c[u>>2]|0;g[f+(D<<2)>>2]=p;u=D+1|0;g[f+(u<<2)>>2]=v;h=D+2|0;g[f+(h<<2)>>2]=r;g[j+(D<<2)>>2]=-0.0-p;g[j+(u<<2)>>2]=-0.0-v;g[j+(h<<2)>>2]=-0.0-r;h=b+508|0;g[(c[t>>2]|0)+(D<<2)>>2]=+g[s>>2]*+g[b+432>>2]*+g[h>>2];if((c[y>>2]&4|0)!=0){g[(c[C>>2]|0)+(D<<2)>>2]=+g[b+604>>2]}if(+g[b+452>>2]<=0.0){g[(c[z>>2]|0)+(D<<2)>>2]=-3.4028234663852886e+38;g[(c[A>>2]|0)+(D<<2)>>2]=3.4028234663852886e+38;i=k;return}b=(c[z>>2]|0)+(D<<2)|0;if(+g[h>>2]>0.0){g[b>>2]=0.0;g[(c[A>>2]|0)+(D<<2)>>2]=3.4028234663852886e+38;i=k;return}else{g[b>>2]=-3.4028234663852886e+38;g[(c[A>>2]|0)+(D<<2)>>2]=0.0;i=k;return}}function wt(b){b=b|0;var d=0,e=0,f=0,h=0,j=0,k=0,l=0,m=0,n=0.0,o=0.0,p=0.0,q=0.0,r=0,s=0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0,ai=0,aj=0,ak=0,al=0,am=0;d=i;i=i+176|0;e=d|0;f=d+48|0;h=d+96|0;j=d+144|0;k=d+160|0;if((a[b+527|0]&1)==0){i=d;return}g[b+36>>2]=0.0;g[b+520>>2]=0.0;g[b+516>>2]=0.0;K1(b+576|0,0,16)|0;l=b+28|0;if((a[b+524|0]&1)==0){m=c[l>>2]|0;n=+g[b+348>>2];o=+g[b+352>>2];p=+g[b+356>>2];q=n*+g[m+20>>2]+o*+g[m+24>>2]+p*+g[m+28>>2]+ +g[m+56>>2];r=b+32|0;s=c[r>>2]|0;t=+g[b+412>>2];u=+g[b+416>>2];v=+g[b+420>>2];w=t*+g[s+20>>2]+u*+g[s+24>>2]+v*+g[s+28>>2]+ +g[s+56>>2];x=t*+g[s+36>>2]+u*+g[s+40>>2]+v*+g[s+44>>2]+ +g[s+60>>2];y=w-q;z=n*+g[m+4>>2]+o*+g[m+8>>2]+p*+g[m+12>>2]+ +g[m+52>>2];A=n*+g[m+36>>2]+o*+g[m+40>>2]+p*+g[m+44>>2]+ +g[m+60>>2];p=t*+g[s+4>>2]+u*+g[s+8>>2]+v*+g[s+12>>2]+ +g[s+52>>2];v=p-z;u=x-A;t=v*v+y*y+u*u;if(t>1.1920928955078125e-7){o=1.0/+W(t);t=v*o;v=y*o;y=u*o;g[e>>2]=t;g[e+4>>2]=v;g[e+8>>2]=y;g[e+12>>2]=0.0;B=y;C=v;D=t}else{g[e>>2]=1.0;g[e+4>>2]=0.0;g[e+8>>2]=0.0;g[e+12>>2]=0.0;B=0.0;C=0.0;D=1.0}s=e+16|0;m=e+32|0;if(+V(+B)>.7071067690849304){t=B*B+C*C;v=1.0/+W(t);g[s>>2]=0.0;y=v*(-0.0-B);g[e+20>>2]=y;o=v*C;g[e+24>>2]=o;g[m>>2]=t*v;g[e+36>>2]=o*(-0.0-D);g[e+40>>2]=D*y}else{y=D*D+C*C;o=1.0/+W(y);v=o*(-0.0-C);g[s>>2]=v;C=o*D;g[e+20>>2]=C;g[e+24>>2]=0.0;g[m>>2]=C*(-0.0-B);g[e+36>>2]=B*v;g[e+40>>2]=y*o}m=f|0;s=f+4|0;E=f+8|0;F=f+12|0;G=f+16|0;H=f+20|0;I=f+24|0;J=f+28|0;K=f+32|0;L=f+36|0;M=f+40|0;N=f+44|0;O=h|0;P=h+4|0;Q=h+8|0;R=h+12|0;S=h+16|0;T=h+20|0;U=h+24|0;X=h+28|0;Y=h+32|0;Z=h+36|0;_=h+40|0;$=h+44|0;aa=j|0;ab=j+4|0;ac=j+8|0;ad=j+12|0;ae=k|0;af=k+4|0;ag=k+8|0;ah=k+12|0;ai=0;while(1){aj=b+48+(ai*84|0)|0;if((aj|0)!=0){ak=c[l>>2]|0;g[m>>2]=+g[ak+4>>2];g[s>>2]=+g[ak+20>>2];g[E>>2]=+g[ak+36>>2];g[F>>2]=0.0;g[G>>2]=+g[ak+8>>2];g[H>>2]=+g[ak+24>>2];g[I>>2]=+g[ak+40>>2];g[J>>2]=0.0;g[K>>2]=+g[ak+12>>2];g[L>>2]=+g[ak+28>>2];g[M>>2]=+g[ak+44>>2];g[N>>2]=0.0;al=c[r>>2]|0;g[O>>2]=+g[al+4>>2];g[P>>2]=+g[al+20>>2];g[Q>>2]=+g[al+36>>2];g[R>>2]=0.0;g[S>>2]=+g[al+8>>2];g[T>>2]=+g[al+24>>2];g[U>>2]=+g[al+40>>2];g[X>>2]=0.0;g[Y>>2]=+g[al+12>>2];g[Z>>2]=+g[al+28>>2];g[_>>2]=+g[al+44>>2];g[$>>2]=0.0;o=q- +g[ak+56>>2];y=A- +g[ak+60>>2];g[aa>>2]=z- +g[ak+52>>2];g[ab>>2]=o;g[ac>>2]=y;g[ad>>2]=0.0;y=w- +g[al+56>>2];o=x- +g[al+60>>2];g[ae>>2]=p- +g[al+52>>2];g[af>>2]=y;g[ag>>2]=o;g[ah>>2]=0.0;wF(aj,f,h,j,k,e+(ai<<4)|0,ak+392|0,+g[ak+340>>2],al+392|0,+g[al+340>>2])}al=ai+1|0;if((al|0)<3){ai=al}else{am=r;break}}}else{am=b+32|0}r=c[l>>2]|0;l=c[am>>2]|0;wq(b,r+4|0,l+4|0,r+260|0,l+260|0);i=d;return}function wu(b,d,e,f){b=b|0;d=d|0;e=e|0;f=+f;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0.0,A=0,B=0.0,C=0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0,I=0.0,J=0.0,K=0,L=0,M=0,N=0,O=0,P=0.0,Q=0.0,R=0.0,S=0.0,T=0.0,U=0.0,V=0.0,X=0.0,Y=0.0,Z=0,_=0,$=0,aa=0.0,ab=0,ac=0.0,ad=0,ae=0.0,af=0,ag=0,ah=0,ai=0,aj=0.0,ak=0,al=0.0,am=0,an=0.0,ao=0.0,ap=0.0,aq=0,ar=0,as=0,at=0,au=0,av=0,aw=0,ax=0,ay=0,az=0,aA=0,aB=0,aC=0,aD=0,aE=0,aF=0,aG=0,aH=0,aI=0,aJ=0.0,aK=0,aL=0.0,aM=0.0,aN=0.0,aO=0.0,aP=0.0,aQ=0.0,aR=0.0,aS=0.0,aT=0.0,aU=0.0,aV=0.0,aW=0,aX=0,aY=0,aZ=0,a_=0,a$=0,a0=0,a1=0,a2=0,a3=0,a4=0,a5=0,a6=0,a7=0,a8=0.0,a9=0.0,ba=0.0,bb=0.0,bc=0.0,bd=0.0,be=0.0,bf=0.0,bg=0.0,bh=0.0,bi=0.0,bj=0.0,bk=0.0,bl=0.0,bm=0.0,bn=0,bo=0.0,bp=0.0,bq=0.0,br=0.0,bs=0.0;h=i;i=i+480|0;j=h|0;k=h+16|0;l=h+24|0;m=h+40|0;n=h+48|0;o=h+112|0;p=h+176|0;q=h+192|0;r=h+208|0;s=h+272|0;t=h+288|0;u=h+352|0;v=h+416|0;if((a[b+527|0]&1)==0){i=h;return}w=b+28|0;x=c[w>>2]|0;y=b+348|0;z=+g[y>>2];A=b+352|0;B=+g[A>>2];C=b+356|0;D=+g[C>>2];E=+g[x+52>>2];F=z*+g[x+4>>2]+B*+g[x+8>>2]+D*+g[x+12>>2]+E;G=+g[x+56>>2];H=z*+g[x+20>>2]+B*+g[x+24>>2]+D*+g[x+28>>2]+G;I=+g[x+60>>2];J=z*+g[x+36>>2]+B*+g[x+40>>2]+D*+g[x+44>>2]+I;K=b+32|0;L=c[K>>2]|0;M=b+412|0;D=+g[M>>2];N=b+416|0;B=+g[N>>2];O=b+420|0;z=+g[O>>2];P=+g[L+52>>2];Q=D*+g[L+4>>2]+B*+g[L+8>>2]+z*+g[L+12>>2]+P;R=+g[L+56>>2];S=D*+g[L+20>>2]+B*+g[L+24>>2]+z*+g[L+28>>2]+R;T=+g[L+60>>2];U=D*+g[L+36>>2]+B*+g[L+40>>2]+z*+g[L+44>>2]+T;L4:do{if((a[b+524|0]&1)==0){z=F-E;B=H-G;D=J-I;V=Q-P;X=S-R;Y=U-T;L=d+64|0;Z=d+68|0;_=d+72|0;$=d+80|0;aa=+g[d+192>>2]+ +g[$>>2];ab=d+84|0;ac=+g[d+196>>2]+ +g[ab>>2];ad=d+88|0;ae=+g[d+200>>2]+ +g[ad>>2];af=e+64|0;ag=e+68|0;ah=e+72|0;ai=e+80|0;aj=+g[e+192>>2]+ +g[ai>>2];ak=e+84|0;al=+g[e+196>>2]+ +g[ak>>2];am=e+88|0;an=+g[e+200>>2]+ +g[am>>2];ao=+g[d+176>>2]+ +g[L>>2]+(D*ac-B*ae)-(+g[e+176>>2]+ +g[af>>2]+(Y*al-X*an));ap=+g[d+180>>2]+ +g[Z>>2]+(z*ae-D*aa)-(+g[e+180>>2]+ +g[ag>>2]+(V*an-Y*aj));an=+g[d+184>>2]+ +g[_>>2]+(B*aa-z*ac)-(+g[e+184>>2]+ +g[ah>>2]+(X*aj-V*al));al=F-Q;aj=H-S;ac=J-U;aq=b+36|0;ar=d+208|0;as=e+208|0;at=e+112|0;au=e+116|0;av=e+120|0;aw=e+96|0;ax=e+100|0;ay=e+104|0;az=d+112|0;aA=d+116|0;aB=d+120|0;aC=d+96|0;aD=d+100|0;aE=d+104|0;aF=0;aG=x;while(1){aa=1.0/+g[b+48+(aF*84|0)+80>>2];aH=b+48+(aF*84|0)|0;ae=+g[aH>>2];aI=b+48+(aF*84|0)+4|0;aJ=+g[aI>>2];aK=b+48+(aF*84|0)+8|0;aL=+g[aK>>2];aM=aa*((al*ae+aj*aJ+ac*aL)*-.30000001192092896/f)-aa*(ao*ae+ap*aJ+an*aL);g[aq>>2]=+g[aq>>2]+aM;aL=+g[aK>>2];aJ=+g[aI>>2];ae=B*aL-D*aJ;aa=+g[aH>>2];aN=D*aa-z*aL;aO=z*aJ-B*aa;aP=X*aL-Y*aJ;aQ=Y*aa-V*aL;aR=V*aJ-X*aa;aS=+g[aG+340>>2];if((c[ar>>2]|0)!=0){aT=aN*+g[aG+296>>2]+ae*+g[aG+292>>2]+aO*+g[aG+300>>2];aU=aN*+g[aG+280>>2]+ae*+g[aG+276>>2]+aO*+g[aG+284>>2];aV=aN*+g[aG+264>>2]+ae*+g[aG+260>>2]+aO*+g[aG+268>>2];aO=aM*aJ*aS*+g[aA>>2];aJ=aM*aL*aS*+g[aB>>2];g[L>>2]=aM*aa*aS*+g[az>>2]+ +g[L>>2];g[Z>>2]=aO+ +g[Z>>2];g[_>>2]=aJ+ +g[_>>2];aJ=aU*aM*+g[aD>>2];aU=aT*aM*+g[aE>>2];g[$>>2]=aV*aM*+g[aC>>2]+ +g[$>>2];g[ab>>2]=aJ+ +g[ab>>2];g[ad>>2]=aU+ +g[ad>>2]}aW=c[K>>2]|0;aU=+g[aW+340>>2];aJ=-0.0-aM;if((c[as>>2]|0)!=0){aM=aQ*+g[aW+296>>2]+aP*+g[aW+292>>2]+aR*+g[aW+300>>2];aV=aQ*+g[aW+280>>2]+aP*+g[aW+276>>2]+aR*+g[aW+284>>2];aT=aQ*+g[aW+264>>2]+aP*+g[aW+260>>2]+aR*+g[aW+268>>2];aR=aU*+g[aI>>2]*aJ*+g[au>>2];aP=aU*+g[aK>>2]*aJ*+g[av>>2];g[af>>2]=+g[at>>2]*aU*+g[aH>>2]*aJ+ +g[af>>2];g[ag>>2]=aR+ +g[ag>>2];g[ah>>2]=aP+ +g[ah>>2];aP=aV*+g[ax>>2]*aJ;aV=aM*+g[ay>>2]*aJ;g[ai>>2]=aT*+g[aw>>2]*aJ+ +g[ai>>2];g[ak>>2]=aP+ +g[ak>>2];g[am>>2]=aV+ +g[am>>2]}aH=aF+1|0;if((aH|0)>=3){break L4}aF=aH;aG=c[w>>2]|0}}}while(0);do{if((a[b+552|0]&1)==0){U=+g[b+440>>2];x=d+192|0;if(U<=1.1920928955078125e-7){aX=x;aY=d+80|0;aZ=d+196|0;a_=d+84|0;a$=d+200|0;a0=d+88|0;a1=e+192|0;a2=e+80|0;a3=e+196|0;a4=e+84|0;a5=e+200|0;a6=e+88|0;break}aG=d+80|0;J=+g[aG>>2];aF=d+196|0;am=d+84|0;S=+g[am>>2];ak=d+200|0;ai=d+88|0;H=+g[ai>>2];aw=e+192|0;ay=e+80|0;ax=e+196|0;ah=e+84|0;ag=e+200|0;af=e+88|0;Q=+g[aw>>2]+ +g[ay>>2]-(+g[x>>2]+J);F=+g[ax>>2]+ +g[ah>>2]-(+g[aF>>2]+S);T=+g[ag>>2]+ +g[af>>2]-(+g[ak>>2]+H);R=Q*Q+F*F+T*T;if(R<=1.1920928955078125e-7){aX=x;aY=aG;aZ=aF;a_=am;a$=ak;a0=ai;a1=aw;a2=ay;a3=ax;a4=ah;a5=ag;a6=af;break}P=1.0/+W(R);R=Q*P;I=F*P;G=T*P;at=c[w>>2]|0;P=+g[at+260>>2];E=+g[at+276>>2];X=+g[at+292>>2];V=+g[at+264>>2];Y=+g[at+280>>2];B=+g[at+296>>2];z=+g[at+268>>2];D=+g[at+284>>2];an=+g[at+300>>2];at=c[K>>2]|0;ap=U*(1.0/(R*(R*P+I*E+G*X)+I*(R*V+I*Y+G*B)+G*(R*z+I*D+G*an)+(R*(R*+g[at+260>>2]+I*+g[at+276>>2]+G*+g[at+292>>2])+I*(R*+g[at+264>>2]+I*+g[at+280>>2]+G*+g[at+296>>2])+G*(R*+g[at+268>>2]+I*+g[at+284>>2]+G*+g[at+300>>2]))));G=Q*ap;Q=F*ap;F=T*ap;ap=+W(F*F+(G*G+Q*Q));T=1.0/ap;I=T*G;G=T*Q;Q=T*F;if((c[d+208>>2]|0)==0){a7=at}else{F=ap*0.0;T=F*+g[d+116>>2];R=F*+g[d+120>>2];at=d+64|0;g[at>>2]=F*+g[d+112>>2]+ +g[at>>2];at=d+68|0;g[at>>2]=T+ +g[at>>2];at=d+72|0;g[at>>2]=R+ +g[at>>2];R=(G*Y+I*E+Q*D)*ap*+g[d+100>>2];D=(G*B+I*X+Q*an)*ap*+g[d+104>>2];g[aG>>2]=(G*V+I*P+Q*z)*ap*+g[d+96>>2]+J;g[am>>2]=R+S;g[ai>>2]=D+H;a7=c[K>>2]|0}H=-0.0-ap;if((c[e+208>>2]|0)==0){aX=x;aY=aG;aZ=aF;a_=am;a$=ak;a0=ai;a1=aw;a2=ay;a3=ax;a4=ah;a5=ag;a6=af;break}D=G*+g[a7+296>>2]+I*+g[a7+292>>2]+Q*+g[a7+300>>2];S=G*+g[a7+280>>2]+I*+g[a7+276>>2]+Q*+g[a7+284>>2];R=G*+g[a7+264>>2]+I*+g[a7+260>>2]+Q*+g[a7+268>>2];Q=ap*-0.0;ap=Q*+g[e+116>>2];I=Q*+g[e+120>>2];at=e+64|0;g[at>>2]=Q*+g[e+112>>2]+ +g[at>>2];at=e+68|0;g[at>>2]=ap+ +g[at>>2];at=e+72|0;g[at>>2]=I+ +g[at>>2];I=S*+g[e+100>>2]*H;S=D*+g[e+104>>2]*H;g[ay>>2]=R*+g[e+96>>2]*H+ +g[ay>>2];g[ah>>2]=I+ +g[ah>>2];g[af>>2]=S+ +g[af>>2];aX=x;aY=aG;aZ=aF;a_=am;a$=ak;a0=ai;a1=aw;a2=ay;a3=ax;a4=ah;a5=ag;a6=af}else{af=c[w>>2]|0;ag=n;ah=af+4|0;c[ag>>2]=c[ah>>2];c[ag+4>>2]=c[ah+4>>2];c[ag+8>>2]=c[ah+8>>2];c[ag+12>>2]=c[ah+12>>2];ah=n+16|0;ag=af+20|0;c[ah>>2]=c[ag>>2];c[ah+4>>2]=c[ag+4>>2];c[ah+8>>2]=c[ag+8>>2];c[ah+12>>2]=c[ag+12>>2];ag=n+32|0;ah=af+36|0;c[ag>>2]=c[ah>>2];c[ag+4>>2]=c[ah+4>>2];c[ag+8>>2]=c[ah+8>>2];c[ag+12>>2]=c[ah+12>>2];ah=n+48|0;ag=af+52|0;c[ah>>2]=c[ag>>2];c[ah+4>>2]=c[ag+4>>2];c[ah+8>>2]=c[ag+8>>2];c[ah+12>>2]=c[ag+12>>2];ag=c[K>>2]|0;ah=o;af=ag+4|0;c[ah>>2]=c[af>>2];c[ah+4>>2]=c[af+4>>2];c[ah+8>>2]=c[af+8>>2];c[ah+12>>2]=c[af+12>>2];af=o+16|0;ah=ag+20|0;c[af>>2]=c[ah>>2];c[af+4>>2]=c[ah+4>>2];c[af+8>>2]=c[ah+8>>2];c[af+12>>2]=c[ah+12>>2];ah=o+32|0;af=ag+36|0;c[ah>>2]=c[af>>2];c[ah+4>>2]=c[af+4>>2];c[ah+8>>2]=c[af+8>>2];c[ah+12>>2]=c[af+12>>2];af=o+48|0;ah=ag+52|0;c[af>>2]=c[ah>>2];c[af+4>>2]=c[ah+4>>2];c[af+8>>2]=c[ah+8>>2];c[af+12>>2]=c[ah+12>>2];ah=d+192|0;af=d+80|0;ag=d+196|0;ax=d+84|0;S=+g[ag>>2]+ +g[ax>>2];ay=d+200|0;aw=d+88|0;I=+g[ay>>2]+ +g[aw>>2];ai=p|0;g[ai>>2]=+g[ah>>2]+ +g[af>>2];ak=p+4|0;g[ak>>2]=S;am=p+8|0;g[am>>2]=I;g[p+12>>2]=0.0;aF=e+192|0;aG=e+80|0;x=e+196|0;at=e+84|0;I=+g[x>>2]+ +g[at>>2];av=e+200|0;au=e+88|0;S=+g[av>>2]+ +g[au>>2];as=q|0;g[as>>2]=+g[aF>>2]+ +g[aG>>2];ad=q+4|0;g[ad>>2]=I;ab=q+8|0;g[ab>>2]=S;g[q+12>>2]=0.0;$=r|0;g[$>>2]=1.0;aC=r+4|0;aE=r+20|0;K1(aC|0,0,16)|0;g[aE>>2]=1.0;aD=r+24|0;_=r+40|0;K1(aD|0,0,16)|0;g[_>>2]=1.0;K1(r+44|0,0,20)|0;K1(s|0,0,16)|0;vf(n,s,p,f,r);Z=t|0;g[Z>>2]=1.0;L=t+4|0;az=t+20|0;K1(L|0,0,16)|0;g[az>>2]=1.0;aB=t+24|0;aA=t+40|0;K1(aB|0,0,16)|0;g[aA>>2]=1.0;K1(t+44|0,0,20)|0;vf(o,s,q,f,t);S=+g[b+556>>2];I=+g[b+560>>2];H=+g[b+564>>2];R=+g[b+568>>2];D=2.0/(S*S+I*I+H*H+R*R);ap=S*D;Q=I*D;G=H*D;D=R*ap;J=R*Q;z=R*G;R=S*ap;ap=S*Q;P=S*G;S=I*Q;Q=I*G;I=H*G;G=1.0-(S+I);H=ap-z;V=P+J;an=ap+z;z=1.0-(R+I);I=Q-D;ap=P-J;J=Q+D;D=1.0-(R+S);S=+g[b+364>>2];R=+g[b+368>>2];Q=+g[b+372>>2];P=ap*Q+(R*an+S*G);X=Q*J+(S*H+R*z);B=S*V+R*I+Q*D;E=+g[b+380>>2];Y=+g[b+384>>2];T=+g[b+388>>2];F=G*E+an*Y+ap*T;U=H*E+z*Y+J*T;ao=V*E+I*Y+D*T;ac=+g[b+396>>2];aj=+g[b+400>>2];al=+g[b+404>>2];aV=G*ac+an*aj+ap*al;ap=H*ac+z*aj+J*al;J=V*ac+I*aj+D*al;D=+g[b+300>>2];I=+g[b+316>>2];V=+g[b+332>>2];z=+g[b+304>>2];H=+g[b+320>>2];an=+g[b+336>>2];G=+g[b+308>>2];aP=+g[b+324>>2];aJ=+g[b+340>>2];aT=-0.0- +g[y>>2];aM=-0.0- +g[A>>2];aR=-0.0- +g[C>>2];aU=D*aT+I*aM+V*aR;aQ=z*aT+H*aM+an*aR;aO=G*aT+aP*aM+aJ*aR;aR=P*D+X*z+B*G;aM=P*I+X*H+B*aP;aT=P*V+X*an+B*aJ;aS=F*D+U*z+ao*G;aa=F*I+U*H+ao*aP;aL=F*V+U*an+ao*aJ;ae=aV*D+ap*z+J*G;G=aV*I+ap*H+J*aP;aP=aV*V+ap*an+J*aJ;aJ=S*0.0+R*0.0+Q*0.0+ +g[M>>2]+(B*aO+(P*aU+X*aQ));X=E*0.0+Y*0.0+T*0.0+ +g[N>>2]+(ao*aO+(F*aU+U*aQ));U=ac*0.0+aj*0.0+al*0.0+ +g[O>>2]+(J*aO+(aV*aU+ap*aQ));aQ=+g[Z>>2];ap=+g[L>>2];aU=+g[t+8>>2];aV=+g[t+16>>2];aO=+g[az>>2];J=+g[aB>>2];al=+g[t+32>>2];aj=+g[t+36>>2];ac=+g[aA>>2];F=aU*U+(aQ*aJ+ap*X)+ +g[t+48>>2];ao=J*U+(aV*aJ+aO*X)+ +g[t+52>>2];T=aJ*al+X*aj+U*ac+ +g[t+56>>2];g[u>>2]=aR*aQ+aS*ap+ae*aU;g[u+4>>2]=aM*aQ+aa*ap+G*aU;g[u+8>>2]=aT*aQ+aL*ap+aP*aU;g[u+12>>2]=0.0;g[u+16>>2]=aR*aV+aS*aO+ae*J;g[u+20>>2]=aM*aV+aa*aO+G*J;g[u+24>>2]=aT*aV+aL*aO+aP*J;g[u+28>>2]=0.0;g[u+32>>2]=aR*al+aS*aj+ae*ac;g[u+36>>2]=aM*al+aa*aj+G*ac;g[u+40>>2]=aT*al+aL*aj+aP*ac;g[u+44>>2]=0.0;g[u+48>>2]=F;g[u+52>>2]=ao;g[u+56>>2]=T;g[u+60>>2]=0.0;T=-0.0-aJ;aJ=-0.0-X;X=-0.0-U;U=ae*X+(aR*T+aS*aJ);ao=G*X+(aM*T+aa*aJ);F=aP*X+(aT*T+aL*aJ);aJ=+g[$>>2];T=+g[aC>>2];X=+g[r+8>>2];ac=+g[r+16>>2];aj=+g[aE>>2];al=+g[aD>>2];J=+g[r+32>>2];aO=+g[r+36>>2];aV=+g[_>>2];aU=U*aJ+ao*T+F*X+ +g[r+48>>2];ap=U*ac+ao*aj+F*al+ +g[r+52>>2];aQ=U*J+ao*aO+F*aV+ +g[r+56>>2];g[v>>2]=aR*aJ+aM*T+aT*X;g[v+4>>2]=aS*aJ+aa*T+aL*X;g[v+8>>2]=ae*aJ+G*T+aP*X;g[v+12>>2]=0.0;g[v+16>>2]=aR*ac+aM*aj+aT*al;g[v+20>>2]=aS*ac+aa*aj+aL*al;g[v+24>>2]=ae*ac+G*aj+aP*al;g[v+28>>2]=0.0;g[v+32>>2]=aR*J+aM*aO+aT*aV;g[v+36>>2]=aS*J+aa*aO+aL*aV;g[v+40>>2]=ae*J+G*aO+aP*aV;g[v+44>>2]=0.0;g[v+48>>2]=aU;g[v+52>>2]=ap;g[v+56>>2]=aQ;g[v+60>>2]=0.0;aV=1.0/f;sE(n,u,j,k);aP=+g[k>>2];aO=aV*+g[j>>2]*aP;G=aV*aP*+g[j+4>>2];J=aV*aP*+g[j+8>>2];aP=aV*(ap- +g[o+52>>2]);ap=aV*(aQ- +g[o+56>>2]);g[s>>2]=aV*(aU- +g[o+48>>2]);g[s+4>>2]=aP;g[s+8>>2]=ap;g[s+12>>2]=0.0;sE(o,v,l,m);ap=+g[m>>2];aP=aO- +g[ai>>2];aO=G- +g[ak>>2];G=J- +g[am>>2];J=aV*+g[l>>2]*ap- +g[as>>2];aU=aV*ap*+g[l+4>>2]- +g[ad>>2];aQ=aV*ap*+g[l+8>>2]- +g[ab>>2];ap=aP*aP+aO*aO+G*G;if(ap>1.1920928955078125e-7){aV=1.0/+W(ap);ap=aP*aV;ae=aO*aV;aL=G*aV;ab=c[w>>2]|0;a8=ap*(ap*+g[ab+260>>2]+ae*+g[ab+276>>2]+aL*+g[ab+292>>2])+ae*(ap*+g[ab+264>>2]+ae*+g[ab+280>>2]+aL*+g[ab+296>>2])+aL*(ap*+g[ab+268>>2]+ae*+g[ab+284>>2]+aL*+g[ab+300>>2]);a9=ap;ba=ae;bb=aL}else{a8=0.0;a9=0.0;ba=0.0;bb=0.0}aL=J*J+aU*aU+aQ*aQ;if(aL>1.1920928955078125e-7){ae=1.0/+W(aL);aL=J*ae;ap=aU*ae;aV=aQ*ae;ab=c[K>>2]|0;bc=aL*(aL*+g[ab+260>>2]+ap*+g[ab+276>>2]+aV*+g[ab+292>>2])+ap*(aL*+g[ab+264>>2]+ap*+g[ab+280>>2]+aV*+g[ab+296>>2])+aV*(aL*+g[ab+268>>2]+ap*+g[ab+284>>2]+aV*+g[ab+300>>2]);bd=aL;be=ap;bf=aV}else{bc=0.0;bd=0.0;be=0.0;bf=0.0}aV=a9*a8+bd*bc;ap=ba*a8+be*bc;aL=bb*a8+bf*bc;ae=aL*aL+(aV*aV+ap*ap);if(ae<=1.1920928955078125e-7){aX=ah;aY=af;aZ=ag;a_=ax;a$=ay;a0=aw;a1=aF;a2=aG;a3=x;a4=at;a5=av;a6=au;break}aa=1.0/+W(ae);ae=aV*aa;aV=ap*aa;ap=aL*aa;ab=c[w>>2]|0;ad=ab+260|0;as=ab+276|0;am=ab+292|0;ak=ab+264|0;ai=ab+280|0;_=ab+296|0;aD=ab+268|0;aE=ab+284|0;aC=ab+300|0;aa=ae*(ae*+g[ad>>2]+aV*+g[as>>2]+ap*+g[am>>2])+aV*(ae*+g[ak>>2]+aV*+g[ai>>2]+ap*+g[_>>2])+ap*(ae*+g[aD>>2]+aV*+g[aE>>2]+ap*+g[aC>>2]);ab=c[K>>2]|0;aL=ae*(ae*+g[ab+260>>2]+aV*+g[ab+276>>2]+ap*+g[ab+292>>2])+aV*(ae*+g[ab+264>>2]+aV*+g[ab+280>>2]+ap*+g[ab+296>>2])+ap*(ae*+g[ab+268>>2]+aV*+g[ab+284>>2]+ap*+g[ab+300>>2]);ap=aa+aL;aV=1.0/(ap*ap);ap=aV*(aP*aa-J*aL);J=aV*(aO*aa-aU*aL);aU=aV*(G*aa-aQ*aL);aL=+g[b+572>>2];if(aL<0.0){bg=ap;bh=J;bi=aU}else{if((a[b+553|0]&1)==0){bj=aL}else{bj=aL/aa}$=b+576|0;aa=+g[$>>2];aL=ap+aa;aA=b+580|0;aQ=+g[aA>>2];G=J+aQ;aB=b+584|0;aV=+g[aB>>2];aO=aU+aV;aP=+W(aL*aL+G*G+aO*aO);if(aP>bj){ae=1.0/aP;bk=bj*aL*ae-aa;bl=bj*G*ae-aQ;bm=bj*aO*ae-aV}else{bk=ap;bl=J;bm=aU}g[$>>2]=bk+aa;g[aA>>2]=bl+aQ;g[aB>>2]=bm+aV;bg=bk;bh=bl;bi=bm}aV=+W(bi*bi+(bh*bh+bg*bg));aQ=1.0/aV;aa=bg*aQ;aU=bh*aQ;J=bi*aQ;if((c[d+208>>2]|0)==0){bn=ab}else{aQ=aU*+g[_>>2]+aa*+g[am>>2]+J*+g[aC>>2];ap=aU*+g[ai>>2]+aa*+g[as>>2]+J*+g[aE>>2];ae=aU*+g[ak>>2]+aa*+g[ad>>2]+J*+g[aD>>2];aO=aV*0.0;G=aO*+g[d+116>>2];aL=aO*+g[d+120>>2];aD=d+64|0;g[aD>>2]=aO*+g[d+112>>2]+ +g[aD>>2];aD=d+68|0;g[aD>>2]=G+ +g[aD>>2];aD=d+72|0;g[aD>>2]=aL+ +g[aD>>2];aL=ap*aV*+g[d+100>>2];ap=aQ*aV*+g[d+104>>2];g[af>>2]=ae*aV*+g[d+96>>2]+ +g[af>>2];g[ax>>2]=aL+ +g[ax>>2];g[aw>>2]=ap+ +g[aw>>2];bn=c[K>>2]|0}ap=-0.0-aV;if((c[e+208>>2]|0)==0){aX=ah;aY=af;aZ=ag;a_=ax;a$=ay;a0=aw;a1=aF;a2=aG;a3=x;a4=at;a5=av;a6=au;break}aL=aU*+g[bn+296>>2]+aa*+g[bn+292>>2]+J*+g[bn+300>>2];ae=aU*+g[bn+280>>2]+aa*+g[bn+276>>2]+J*+g[bn+284>>2];aQ=aU*+g[bn+264>>2]+aa*+g[bn+260>>2]+J*+g[bn+268>>2];J=aV*-0.0;aV=J*+g[e+116>>2];aa=J*+g[e+120>>2];aD=e+64|0;g[aD>>2]=J*+g[e+112>>2]+ +g[aD>>2];aD=e+68|0;g[aD>>2]=aV+ +g[aD>>2];aD=e+72|0;g[aD>>2]=aa+ +g[aD>>2];aa=ae*+g[e+100>>2]*ap;ae=aL*+g[e+104>>2]*ap;g[aG>>2]=aQ*+g[e+96>>2]*ap+ +g[aG>>2];g[at>>2]=aa+ +g[at>>2];g[au>>2]=ae+ +g[au>>2];aX=ah;aY=af;aZ=ag;a_=ax;a$=ay;a0=aw;a1=aF;a2=aG;a3=x;a4=at;a5=av;a6=au}}while(0);bi=+g[aX>>2]+ +g[aY>>2];bh=+g[aZ>>2]+ +g[a_>>2];bg=+g[a$>>2]+ +g[a0>>2];bm=+g[a1>>2]+ +g[a2>>2];bl=+g[a3>>2]+ +g[a4>>2];bk=+g[a5>>2]+ +g[a6>>2];do{if((a[b+526|0]&1)!=0){bj=+g[b+528>>2];bc=bj*+g[b+504>>2]*+g[b+432>>2]/f;bf=+g[b+460>>2];a8=+g[b+464>>2];bb=+g[b+468>>2];be=(bm-bi)*bf+(bl-bh)*a8+(bk-bg)*bb;if(be>0.0){bo=bc+bj*be*+g[b+436>>2]}else{bo=bc}a5=b+516|0;bc=+g[a5>>2];be=bc+bo*+g[b+492>>2];bj=be>0.0?be:0.0;g[a5>>2]=bj;be=bj-bc;bc=bf*be;bf=a8*be;a8=bb*be;be=+g[b+536>>2];bb=+g[b+540>>2];bj=+g[b+544>>2];ba=be*bc+bf*bb+a8*bj;bd=bc-be*ba;be=bf-bb*ba;bb=a8-bj*ba;ba=+W(bb*bb+(bd*bd+be*be));bj=1.0/ba;a8=bj*bd;bd=bj*be;be=bj*bb;a5=c[w>>2]|0;if((c[d+208>>2]|0)!=0){bb=bd*+g[a5+296>>2]+a8*+g[a5+292>>2]+be*+g[a5+300>>2];bj=bd*+g[a5+280>>2]+a8*+g[a5+276>>2]+be*+g[a5+284>>2];bf=bd*+g[a5+264>>2]+a8*+g[a5+260>>2]+be*+g[a5+268>>2];bc=ba*0.0;a9=bc*+g[d+116>>2];ae=bc*+g[d+120>>2];a5=d+64|0;g[a5>>2]=bc*+g[d+112>>2]+ +g[a5>>2];a5=d+68|0;g[a5>>2]=a9+ +g[a5>>2];a5=d+72|0;g[a5>>2]=ae+ +g[a5>>2];ae=bj*ba*+g[d+100>>2];bj=bb*ba*+g[d+104>>2];g[aY>>2]=bf*ba*+g[d+96>>2]+ +g[aY>>2];g[a_>>2]=ae+ +g[a_>>2];g[a0>>2]=bj+ +g[a0>>2]}a5=c[K>>2]|0;bj=-0.0-ba;if((c[e+208>>2]|0)==0){break}ae=bd*+g[a5+296>>2]+a8*+g[a5+292>>2]+be*+g[a5+300>>2];bf=bd*+g[a5+280>>2]+a8*+g[a5+276>>2]+be*+g[a5+284>>2];bb=bd*+g[a5+264>>2]+a8*+g[a5+260>>2]+be*+g[a5+268>>2];be=ba*-0.0;ba=be*+g[e+116>>2];a8=be*+g[e+120>>2];a5=e+64|0;g[a5>>2]=be*+g[e+112>>2]+ +g[a5>>2];a5=e+68|0;g[a5>>2]=ba+ +g[a5>>2];a5=e+72|0;g[a5>>2]=a8+ +g[a5>>2];a8=bf*+g[e+100>>2]*bj;bf=ae*+g[e+104>>2]*bj;g[a2>>2]=bb*+g[e+96>>2]*bj+ +g[a2>>2];g[a4>>2]=a8+ +g[a4>>2];g[a6>>2]=bf+ +g[a6>>2]}}while(0);if((a[b+525|0]&1)==0){i=h;return}bo=+g[b+532>>2];bf=bo*+g[b+508>>2]*+g[b+432>>2]/f;a5=b+476|0;f=+g[a5>>2];a3=b+480|0;a8=+g[a3>>2];a1=b+484|0;bj=+g[a1>>2];bb=(bm-bi)*f+(bl-bh)*a8+(bk-bg)*bj;if(bb>0.0){bp=bf+bo*bb*+g[b+436>>2]}else{bp=bf}a$=b+520|0;bf=+g[a$>>2];bb=bf+bp*+g[b+496>>2];bp=bb>0.0?bb:0.0;g[a$>>2]=bp;bb=bp-bf;a$=c[w>>2]|0;if((c[d+208>>2]|0)==0){bq=f;br=a8;bs=bj}else{bf=a8*+g[a$+296>>2]+f*+g[a$+292>>2]+bj*+g[a$+300>>2];bp=a8*+g[a$+280>>2]+f*+g[a$+276>>2]+bj*+g[a$+284>>2];bo=a8*+g[a$+264>>2]+f*+g[a$+260>>2]+bj*+g[a$+268>>2];bj=bb*0.0;f=bj*+g[d+116>>2];a8=bj*+g[d+120>>2];a$=d+64|0;g[a$>>2]=bj*+g[d+112>>2]+ +g[a$>>2];a$=d+68|0;g[a$>>2]=f+ +g[a$>>2];a$=d+72|0;g[a$>>2]=a8+ +g[a$>>2];a8=bp*bb*+g[d+100>>2];bp=bf*bb*+g[d+104>>2];g[aY>>2]=bo*bb*+g[d+96>>2]+ +g[aY>>2];g[a_>>2]=a8+ +g[a_>>2];g[a0>>2]=bp+ +g[a0>>2];bq=+g[a5>>2];br=+g[a3>>2];bs=+g[a1>>2]}a1=c[K>>2]|0;bp=-0.0-bb;if((c[e+208>>2]|0)==0){i=h;return}a8=br*+g[a1+296>>2]+bq*+g[a1+292>>2]+bs*+g[a1+300>>2];bo=br*+g[a1+280>>2]+bq*+g[a1+276>>2]+bs*+g[a1+284>>2];bf=br*+g[a1+264>>2]+bq*+g[a1+260>>2]+bs*+g[a1+268>>2];bs=bb*-0.0;bb=bs*+g[e+116>>2];bq=bs*+g[e+120>>2];a1=e+64|0;g[a1>>2]=bs*+g[e+112>>2]+ +g[a1>>2];a1=e+68|0;g[a1>>2]=bb+ +g[a1>>2];a1=e+72|0;g[a1>>2]=bq+ +g[a1>>2];bq=bo*+g[e+100>>2]*bp;bo=a8*+g[e+104>>2]*bp;g[a2>>2]=bf*+g[e+96>>2]*bp+ +g[a2>>2];g[a4>>2]=bq+ +g[a4>>2];g[a6>>2]=bo+ +g[a6>>2];i=h;return}function wv(a,b,c,d){a=a|0;b=b|0;c=+c;d=+d;var e=0.0,f=0.0,h=0.0,i=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0;e=+Y(c);f=+Z(c);c=+g[b+444>>2];if(+V(+e)>1.1920928955078125e-7){h=f*f;i=e*e;j=h/i;k=+g[b+448>>2];l=+W((j+1.0)/(1.0/(k*k)+j/(c*c)));m=i;n=h}else{l=c;m=e*e;n=f*f}c=l*.5;l=+Z(c)/+W(m+0.0+n);n=l*0.0;m=e*l;e=l*(-0.0-f);f=+Y(c);c=m*0.0;l=e*0.0;h=f*d+c-l;i=f*0.0;j=n*0.0;k=e*d+i-j;o=i+j-m*d;j=-0.0-n;n=d*j-c-l;l=-0.0-m;m=-0.0-e;g[a>>2]=k*m+(f*h+n*j)-o*l;g[a+4>>2]=o*j+(f*k+n*l)-h*m;g[a+8>>2]=h*l+(f*o+n*m)-k*j;g[a+12>>2]=0.0;return}function ww(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,h=0.0,i=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0,I=0.0,J=0.0,K=0.0,L=0.0,M=0.0,N=0.0,O=0.0,P=0.0,Q=0.0,R=0.0,S=0.0,T=0.0,U=0.0,X=0.0,_=0.0;d=a+556|0;e=d;f=b;c[e>>2]=c[f>>2];c[e+4>>2]=c[f+4>>2];c[e+8>>2]=c[f+8>>2];c[e+12>>2]=c[f+12>>2];f=a+568|0;h=+g[f>>2];i=+g[12276];e=a+560|0;j=+g[e>>2];k=+g[12278];b=a+564|0;l=+g[b>>2];m=+g[12277];n=h*i+j*k-l*m;o=+g[d>>2];p=i*l+h*m-k*o;q=h*k+m*o-i*j;r=-0.0-o;s=i*r-j*m-k*l;t=-0.0-j;u=-0.0-l;v=p*u+(h*n+s*r)-q*t;w=q*r+(h*p+s*t)-n*u;x=n*t+(h*q+s*u)-p*r;r=k*x+(m*w+i*v);do{if(r<-.9999998807907104){if(+V(+k)>.7071067690849304){p=1.0/+W(k*k+m*m);y=0.0;z=p*(-0.0-k);A=m*p;B=0.0;break}else{p=1.0/+W(i*i+m*m);y=p*(-0.0-m);z=i*p;A=0.0;B=0.0;break}}else{p=+W((r+1.0)*2.0);u=1.0/p;y=(m*x-k*w)*u;z=(k*v-i*x)*u;A=(i*w-m*v)*u;B=p*.5}}while(0);v=1.0/+W(B*B+(A*A+(z*z+y*y)));m=y*v;y=z*v;z=A*v;A=B*v;v=-0.0-m;B=-0.0-y;w=-0.0-z;i=A*o+h*v+l*B-j*w;x=o*w+(h*B+A*j)-l*v;k=h*w+A*l+j*v-o*B;r=A*h-o*v-j*B-l*w;w=1.0/+W(r*r+(k*k+(i*i+x*x)));l=i*w;i=w*x;x=w*k;k=w*r;r=+g[a+444>>2];do{if(r<.05000000074505806){C=m;D=y;E=z;F=A}else{w=+g[a+448>>2];if(w<.05000000074505806){C=m;D=y;E=z;F=A;break}B=A<-1.0?-1.0:A;j=+$(B>1.0?1.0:B)*2.0;do{if(j>1.1920928955078125e-7){B=1.0/+W(z*z+(m*m+y*y));v=m*B;o=y*B;h=z*B;if(+V(+o)<=1.1920928955078125e-7){G=v;H=o;I=h;J=r;break}B=h*h/(o*o);G=v;H=o;I=h;J=+W((B+1.0)/(1.0/(w*w)+B/(r*r)))}else{G=0.0;H=0.0;I=0.0;J=0.0}}while(0);if(+V(+j)<=1.1920928955078125e-7){C=m;D=y;E=z;F=A;break}do{if(j>J){K=J}else{w=-0.0-J;if(j>=w){K=j;break}K=w}}while(0);j=K*.5;w=+Z(j)/+W(I*I+(H*H+G*G));C=G*w;D=H*w;E=I*w;F=+Y(j)}}while(0);I=+g[a+452>>2];do{if(I<.05000000074505806){L=l;M=i;N=x;O=k}else{H=k<-1.0?-1.0:k;G=+$(H>1.0?1.0:H)*2.0;if(G>3.1415927410125732){H=k>1.0?-1.0:-0.0-k;P=-0.0-l;Q=-0.0-i;R=-0.0-x;S=+$(H>1.0?1.0:H)*2.0}else{P=l;Q=i;R=x;S=G}if(S>1.1920928955078125e-7){G=1.0/+W(R*R+(Q*Q+P*P));T=P*G;U=Q*G;X=R*G}else{T=P;U=Q;X=R}if(+V(+S)<=1.1920928955078125e-7){L=l;M=i;N=x;O=k;break}do{if(S>I){_=I}else{G=-0.0-I;if(S>=G){_=S;break}_=G}}while(0);G=_*.5;H=+Z(G)/+W(X*X+(U*U+T*T));L=T*H;M=U*H;N=X*H;O=+Y(G)}}while(0);g[a+556>>2]=D*N+(C*O+F*L)-E*M;g[e>>2]=E*L+(D*O+F*M)-C*N;g[b>>2]=E*O+F*N+C*M-D*L;g[f>>2]=F*O-C*L-D*M-E*N;return}function wx(a,b,d,e){a=a|0;b=b|0;d=+d;e=e|0;var f=0;if((b|0)==1|(b|0)==2){if(e>>>0<3>>>0){g[a+600>>2]=d;f=a+592|0;c[f>>2]=c[f>>2]|2;return}else{g[a+432>>2]=d;return}}else if((b|0)==3|(b|0)==4){if(e>>>0<3>>>0){g[a+596>>2]=d;e=a+592|0;c[e>>2]=c[e>>2]|1;return}else{g[a+604>>2]=d;e=a+592|0;c[e>>2]=c[e>>2]|4;return}}else{return}}function wy(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0;do{if((b|0)==1|(b|0)==2){if(c>>>0<3>>>0){d=+g[a+600>>2];break}if((c-3|0)>>>0>=3>>>0){d=0.0;break}d=+g[a+432>>2]}else if((b|0)==3|(b|0)==4){if(c>>>0<3>>>0){d=+g[a+596>>2];break}if((c-3|0)>>>0>=3>>>0){d=0.0;break}d=+g[a+604>>2]}else{d=0.0}}while(0);return+d}function wz(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=a+300|0;f=b;c[e>>2]=c[f>>2];c[e+4>>2]=c[f+4>>2];c[e+8>>2]=c[f+8>>2];c[e+12>>2]=c[f+12>>2];f=a+316|0;e=b+16|0;c[f>>2]=c[e>>2];c[f+4>>2]=c[e+4>>2];c[f+8>>2]=c[e+8>>2];c[f+12>>2]=c[e+12>>2];e=a+332|0;f=b+32|0;c[e>>2]=c[f>>2];c[e+4>>2]=c[f+4>>2];c[e+8>>2]=c[f+8>>2];c[e+12>>2]=c[f+12>>2];f=a+348|0;e=b+48|0;c[f>>2]=c[e>>2];c[f+4>>2]=c[e+4>>2];c[f+8>>2]=c[e+8>>2];c[f+12>>2]=c[e+12>>2];e=a+364|0;f=d;c[e>>2]=c[f>>2];c[e+4>>2]=c[f+4>>2];c[e+8>>2]=c[f+8>>2];c[e+12>>2]=c[f+12>>2];f=a+380|0;e=d+16|0;c[f>>2]=c[e>>2];c[f+4>>2]=c[e+4>>2];c[f+8>>2]=c[e+8>>2];c[f+12>>2]=c[e+12>>2];e=a+396|0;f=d+32|0;c[e>>2]=c[f>>2];c[e+4>>2]=c[f+4>>2];c[e+8>>2]=c[f+8>>2];c[e+12>>2]=c[f+12>>2];f=a+412|0;e=d+48|0;c[f>>2]=c[e>>2];c[f+4>>2]=c[e+4>>2];c[f+8>>2]=c[e+8>>2];c[f+12>>2]=c[e+12>>2];g$[c[(c[a>>2]|0)+8>>2]&1023](a);return}function wA(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=+e;return}function wB(a){a=a|0;return}function wC(a){a=a|0;zw(a);return}function wD(a){a=a|0;return 212}function wE(a,b,c){a=a|0;b=b|0;c=c|0;x6(a|0,b,c)|0;g[b+52>>2]=+g[a+300>>2];g[b+56>>2]=+g[a+304>>2];g[b+60>>2]=+g[a+308>>2];g[b+64>>2]=+g[a+312>>2];g[b+68>>2]=+g[a+316>>2];g[b+72>>2]=+g[a+320>>2];g[b+76>>2]=+g[a+324>>2];g[b+80>>2]=+g[a+328>>2];g[b+84>>2]=+g[a+332>>2];g[b+88>>2]=+g[a+336>>2];g[b+92>>2]=+g[a+340>>2];g[b+96>>2]=+g[a+344>>2];g[b+100>>2]=+g[a+348>>2];g[b+104>>2]=+g[a+352>>2];g[b+108>>2]=+g[a+356>>2];g[b+112>>2]=+g[a+360>>2];g[b+116>>2]=+g[a+364>>2];g[b+120>>2]=+g[a+368>>2];g[b+124>>2]=+g[a+372>>2];g[b+128>>2]=+g[a+376>>2];g[b+132>>2]=+g[a+380>>2];g[b+136>>2]=+g[a+384>>2];g[b+140>>2]=+g[a+388>>2];g[b+144>>2]=+g[a+392>>2];g[b+148>>2]=+g[a+396>>2];g[b+152>>2]=+g[a+400>>2];g[b+156>>2]=+g[a+404>>2];g[b+160>>2]=+g[a+408>>2];g[b+164>>2]=+g[a+412>>2];g[b+168>>2]=+g[a+416>>2];g[b+172>>2]=+g[a+420>>2];g[b+176>>2]=+g[a+424>>2];g[b+180>>2]=+g[a+444>>2];g[b+184>>2]=+g[a+448>>2];g[b+188>>2]=+g[a+452>>2];g[b+192>>2]=+g[a+428>>2];g[b+196>>2]=+g[a+432>>2];g[b+200>>2]=+g[a+436>>2];g[b+204>>2]=+g[a+440>>2];return 13464}function wF(a,b,d,e,f,h,i,j,k,l){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;i=i|0;j=+j;k=k|0;l=+l;var m=0,n=0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0;m=a;n=h;c[m>>2]=c[n>>2];c[m+4>>2]=c[n+4>>2];c[m+8>>2]=c[n+8>>2];c[m+12>>2]=c[n+12>>2];o=+g[e+4>>2];p=+g[a+8>>2];q=+g[e+8>>2];r=+g[a+4>>2];s=o*p-q*r;t=+g[a>>2];u=+g[e>>2];v=q*t-p*u;q=r*u-o*t;o=s*+g[b>>2]+ +g[b+4>>2]*v+q*+g[b+8>>2];u=s*+g[b+16>>2]+v*+g[b+20>>2]+q*+g[b+24>>2];w=s*+g[b+32>>2]+v*+g[b+36>>2]+q*+g[b+40>>2];g[a+16>>2]=o;g[a+20>>2]=u;g[a+24>>2]=w;g[a+28>>2]=0.0;q=-0.0-t;t=-0.0-r;r=-0.0-p;p=+g[f+4>>2];v=+g[f+8>>2];s=p*r-v*t;x=+g[f>>2];y=v*q-x*r;r=x*t-p*q;q=+g[d>>2]*s+ +g[d+4>>2]*y+r*+g[d+8>>2];p=s*+g[d+16>>2]+y*+g[d+20>>2]+r*+g[d+24>>2];t=s*+g[d+32>>2]+y*+g[d+36>>2]+r*+g[d+40>>2];g[a+32>>2]=q;g[a+36>>2]=p;g[a+40>>2]=t;g[a+44>>2]=0.0;r=+g[i>>2]*o;y=+g[i+4>>2]*u;s=+g[i+8>>2]*w;g[a+48>>2]=r;g[a+52>>2]=y;g[a+56>>2]=s;g[a+60>>2]=0.0;x=+g[k>>2]*q;v=+g[k+4>>2]*p;z=+g[k+8>>2]*t;g[a+64>>2]=x;g[a+68>>2]=v;g[a+72>>2]=z;g[a+76>>2]=0.0;g[a+80>>2]=r*o+y*u+s*w+j+l+(x*q+v*p+z*t);return}function wG(a){a=a|0;return 52}function wH(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0,e=0,f=0.0,h=0,i=0.0,j=0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0;d=+g[a+340>>2];if(d==0.0){return}e=b|0;f=+g[a+344>>2];h=b+4|0;i=+g[a+348>>2];j=b+8|0;k=+g[a+352>>2];l=d*+g[h>>2]*i;m=d*+g[j>>2]*k;b=a+308|0;g[b>>2]=d*+g[e>>2]*f+ +g[b>>2];b=a+312|0;g[b>>2]=l+ +g[b>>2];b=a+316|0;g[b>>2]=m+ +g[b>>2];b=a+540|0;if((b|0)==0){return}m=+g[e>>2]*f;f=+g[h>>2]*i;i=+g[j>>2]*k;k=+g[c+4>>2];l=+g[c+8>>2];d=k*i-f*l;n=+g[c>>2];o=m*l-i*n;i=f*n-m*k;k=(d*+g[a+276>>2]+o*+g[a+280>>2]+i*+g[a+284>>2])*+g[a+544>>2];m=(d*+g[a+292>>2]+o*+g[a+296>>2]+i*+g[a+300>>2])*+g[a+548>>2];c=a+324|0;g[c>>2]=(+g[a+260>>2]*d+ +g[a+264>>2]*o+i*+g[a+268>>2])*+g[b>>2]+ +g[c>>2];c=a+328|0;g[c>>2]=k+ +g[c>>2];c=a+332|0;g[c>>2]=m+ +g[c>>2];return}function wI(a,b,c,d){a=a|0;b=b|0;c=c|0;d=+d;return}function wJ(a){a=a|0;return}function wK(b,d,e,f,h,i){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;i=i|0;x4(b|0,6,d,e);c[b>>2]=31992;e=b+48|0;d=f;c[e>>2]=c[d>>2];c[e+4>>2]=c[d+4>>2];c[e+8>>2]=c[d+8>>2];c[e+12>>2]=c[d+12>>2];d=b+64|0;e=f+16|0;c[d>>2]=c[e>>2];c[d+4>>2]=c[e+4>>2];c[d+8>>2]=c[e+8>>2];c[d+12>>2]=c[e+12>>2];e=b+80|0;d=f+32|0;c[e>>2]=c[d>>2];c[e+4>>2]=c[d+4>>2];c[e+8>>2]=c[d+8>>2];c[e+12>>2]=c[d+12>>2];d=b+96|0;e=f+48|0;c[d>>2]=c[e>>2];c[d+4>>2]=c[e+4>>2];c[d+8>>2]=c[e+8>>2];c[d+12>>2]=c[e+12>>2];e=b+112|0;d=h;c[e>>2]=c[d>>2];c[e+4>>2]=c[d+4>>2];c[e+8>>2]=c[d+8>>2];c[e+12>>2]=c[d+12>>2];d=b+128|0;e=h+16|0;c[d>>2]=c[e>>2];c[d+4>>2]=c[e+4>>2];c[d+8>>2]=c[e+8>>2];c[d+12>>2]=c[e+12>>2];e=b+144|0;d=h+32|0;c[e>>2]=c[d>>2];c[e+4>>2]=c[d+4>>2];c[e+8>>2]=c[d+8>>2];c[e+12>>2]=c[d+12>>2];d=b+160|0;e=h+48|0;c[d>>2]=c[e>>2];c[d+4>>2]=c[e+4>>2];c[d+8>>2]=c[e+8>>2];c[d+12>>2]=c[e+12>>2];K1(b+680|0,0,48)|0;K1(b+740|0,0,16)|0;g[b+756>>2]=.20000000298023224;g[b+760>>2]=.20000000298023224;g[b+764>>2]=.20000000298023224;K1(b+768|0,0,20)|0;g[b+728>>2]=.699999988079071;g[b+732>>2]=1.0;g[b+736>>2]=.5;a[b+788|0]=0;g[b+792>>2]=0.0;g[b+808>>2]=0.0;a[b+789|0]=0;g[b+796>>2]=0.0;g[b+812>>2]=0.0;a[b+790|0]=0;g[b+800>>2]=0.0;g[b+816>>2]=0.0;g[b+928>>2]=0.0;g[b+876>>2]=0.0;g[b+880>>2]=.10000000149011612;g[b+884>>2]=300.0;g[b+868>>2]=1.0;g[b+872>>2]=-1.0;g[b+896>>2]=0.0;g[b+900>>2]=.20000000298023224;g[b+904>>2]=0.0;g[b+908>>2]=0.0;g[b+888>>2]=1.0;g[b+892>>2]=.5;c[b+924>>2]=0;g[b+916>>2]=0.0;a[b+912|0]=0;g[b+992>>2]=0.0;g[b+940>>2]=0.0;g[b+944>>2]=.10000000149011612;g[b+948>>2]=300.0;g[b+932>>2]=1.0;g[b+936>>2]=-1.0;g[b+960>>2]=0.0;g[b+964>>2]=.20000000298023224;g[b+968>>2]=0.0;g[b+972>>2]=0.0;g[b+952>>2]=1.0;g[b+956>>2]=.5;c[b+988>>2]=0;g[b+980>>2]=0.0;a[b+976|0]=0;g[b+1056>>2]=0.0;g[b+1004>>2]=0.0;g[b+1008>>2]=.10000000149011612;g[b+1012>>2]=300.0;g[b+996>>2]=1.0;g[b+1e3>>2]=-1.0;g[b+1024>>2]=0.0;g[b+1028>>2]=.20000000298023224;g[b+1032>>2]=0.0;g[b+1036>>2]=0.0;g[b+1016>>2]=1.0;g[b+1020>>2]=.5;c[b+1052>>2]=0;g[b+1044>>2]=0.0;a[b+1040|0]=0;a[b+1300|0]=i&1;a[b+1301|0]=1;c[b+1304>>2]=0;a[b+1308|0]=0;wO(b,(c[b+28>>2]|0)+4|0,(c[b+32>>2]|0)+4|0);return}function wL(a){a=a|0;wO(a,(c[a+28>>2]|0)+4|0,(c[a+32>>2]|0)+4|0);return}function wM(a,b){a=a|0;b=b|0;var c=0,d=0.0,e=0,f=0.0;c=a+32|0;d=+g[c>>2];if(d>=1.0){g[b>>2]=+ac(+(+g[a+4>>2]),+(+g[a+20>>2]));g[b+4>>2]=1.5707963705062866;g[b+8>>2]=0.0;e=0;return e|0}if(d>-1.0){g[b>>2]=+ac(+(-0.0- +g[a+36>>2]),+(+g[a+40>>2]));d=+g[c>>2];f=d<-1.0?-1.0:d;g[b+4>>2]=+aa(f>1.0?1.0:f);g[b+8>>2]=+ac(+(-0.0- +g[a+16>>2]),+(+g[a>>2]));e=1;return e|0}else{g[b>>2]=-0.0- +ac(+(+g[a+4>>2]),+(+g[a+20>>2]));g[b+4>>2]=-1.5707963705062866;g[b+8>>2]=0.0;e=0;return e|0}return 0}function wN(a){a=a|0;var b=0,c=0,d=0.0,e=0,f=0.0,h=0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0,z=0,A=0,B=0.0,C=0.0;b=i;i=i+48|0;c=b|0;d=+g[a+1084>>2];e=a+1104|0;f=+g[e>>2];h=a+1088|0;j=+g[h>>2];k=+g[a+1100>>2];l=d*f-j*k;m=+g[a+1096>>2];n=+g[a+1080>>2];o=j*m-f*n;p=k*n-d*m;q=+g[a+1064>>2];r=+g[a+1068>>2];s=a+1072|0;t=+g[s>>2];u=1.0/(l*q+r*o+p*t);v=l*u;l=u*(k*t-f*r);w=u*(j*r-d*t);x=o*u;o=u*(f*q-m*t);f=u*(n*t-j*q);j=p*u;p=u*(m*r-k*q);k=u*(d*q-n*r);y=a+1128|0;r=+g[y>>2];z=a+1144|0;n=+g[z>>2];A=a+1160|0;q=+g[A>>2];d=+g[a+1132>>2];u=+g[a+1148>>2];m=+g[a+1164>>2];t=+g[a+1136>>2];B=+g[a+1152>>2];C=+g[a+1168>>2];g[c>>2]=r*v+n*l+w*q;g[c+4>>2]=v*d+l*u+w*m;g[c+8>>2]=v*t+l*B+w*C;g[c+12>>2]=0.0;g[c+16>>2]=r*x+n*o+f*q;g[c+20>>2]=x*d+o*u+f*m;g[c+24>>2]=x*t+o*B+f*C;g[c+28>>2]=0.0;g[c+32>>2]=r*j+p*n+k*q;g[c+36>>2]=j*d+p*u+k*m;g[c+40>>2]=j*t+p*B+k*C;g[c+44>>2]=0.0;wM(c,a+1192|0)|0;C=+g[y>>2];k=+g[z>>2];B=+g[A>>2];p=+g[s>>2];t=+g[h>>2];j=+g[e>>2];m=B*t-k*j;u=C*j-B*p;d=k*p-C*t;g[a+1236>>2]=0.0;q=j*u-t*d;n=p*d-j*m;j=t*m-p*u;g[a+1220>>2]=0.0;p=k*d-B*u;t=B*m-C*d;B=C*u-k*m;g[a+1252>>2]=0.0;k=1.0/+W(q*q+n*n+j*j);g[a+1208>>2]=q*k;g[a+1212>>2]=n*k;g[a+1216>>2]=j*k;k=1.0/+W(m*m+u*u+d*d);g[a+1224>>2]=m*k;g[a+1228>>2]=u*k;g[a+1232>>2]=d*k;k=1.0/+W(p*p+t*t+B*B);g[a+1240>>2]=p*k;g[a+1244>>2]=t*k;g[a+1248>>2]=B*k;i=b;return}function wO(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,h=0,j=0,k=0,l=0.0,m=0.0,n=0,o=0.0,p=0.0;f=i;i=i+128|0;h=f|0;j=f+64|0;j_(h,d,b+48|0);d=b+1064|0;k=h;c[d>>2]=c[k>>2];c[d+4>>2]=c[k+4>>2];c[d+8>>2]=c[k+8>>2];c[d+12>>2]=c[k+12>>2];k=b+1080|0;d=h+16|0;c[k>>2]=c[d>>2];c[k+4>>2]=c[d+4>>2];c[k+8>>2]=c[d+8>>2];c[k+12>>2]=c[d+12>>2];d=b+1096|0;k=h+32|0;c[d>>2]=c[k>>2];c[d+4>>2]=c[k+4>>2];c[d+8>>2]=c[k+8>>2];c[d+12>>2]=c[k+12>>2];k=b+1112|0;d=h+48|0;c[k>>2]=c[d>>2];c[k+4>>2]=c[d+4>>2];c[k+8>>2]=c[d+8>>2];c[k+12>>2]=c[d+12>>2];j_(j,e,b+112|0);e=b+1128|0;d=j;c[e>>2]=c[d>>2];c[e+4>>2]=c[d+4>>2];c[e+8>>2]=c[d+8>>2];c[e+12>>2]=c[d+12>>2];d=b+1144|0;e=j+16|0;c[d>>2]=c[e>>2];c[d+4>>2]=c[e+4>>2];c[d+8>>2]=c[e+8>>2];c[d+12>>2]=c[e+12>>2];e=b+1160|0;d=j+32|0;c[e>>2]=c[d>>2];c[e+4>>2]=c[d+4>>2];c[e+8>>2]=c[d+8>>2];c[e+12>>2]=c[d+12>>2];d=b+1176|0;e=j+48|0;c[d>>2]=c[e>>2];c[d+4>>2]=c[e+4>>2];c[d+8>>2]=c[e+8>>2];c[d+12>>2]=c[e+12>>2];wP(b);wN(b);if((a[b+1301|0]&1)==0){i=f;return}l=+g[(c[b+28>>2]|0)+340>>2];m=+g[(c[b+32>>2]|0)+340>>2];if(l<1.1920928955078125e-7){n=1}else{n=m<1.1920928955078125e-7|0}a[b+1280|0]=n;o=l+m;if(o>0.0){l=m/o;g[b+1272>>2]=l;p=l}else{g[b+1272>>2]=.5;p=.5}g[b+1276>>2]=1.0-p;i=f;return}function wP(a){a=a|0;var b=0.0,d=0.0,e=0.0,f=0.0,h=0.0,i=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0;b=+g[a+1176>>2]- +g[a+1112>>2];d=+g[a+1180>>2]- +g[a+1116>>2];e=+g[a+1184>>2]- +g[a+1120>>2];f=+g[a+1084>>2];h=+g[a+1104>>2];i=+g[a+1088>>2];j=+g[a+1100>>2];k=f*h-i*j;l=+g[a+1096>>2];m=+g[a+1080>>2];n=i*l-h*m;o=j*m-f*l;p=+g[a+1064>>2];q=+g[a+1068>>2];r=+g[a+1072>>2];s=1.0/(k*p+q*n+o*r);t=k*s*b+s*(j*r-h*q)*d+s*(i*q-f*r)*e;k=b*n*s+d*s*(h*p-l*r)+s*(m*r-i*p)*e;i=b*o*s+s*(l*q-j*p)*d+s*(f*p-m*q)*e;g[a+1256>>2]=t;g[a+1260>>2]=k;g[a+1264>>2]=i;g[a+1268>>2]=0.0;g[a+840>>2]=t;e=+g[a+680>>2];q=+g[a+696>>2];do{if(e>q){c[a+856>>2]=0;g[a+824>>2]=0.0}else{if(e>t){c[a+856>>2]=2;g[a+824>>2]=t-e;break}u=a+856|0;if(q<t){c[u>>2]=1;g[a+824>>2]=t-q;break}else{c[u>>2]=0;g[a+824>>2]=0.0;break}}}while(0);g[a+844>>2]=k;q=+g[a+684>>2];t=+g[a+700>>2];do{if(q>t){c[a+860>>2]=0;g[a+828>>2]=0.0}else{if(q>k){c[a+860>>2]=2;g[a+828>>2]=k-q;break}u=a+860|0;if(t<k){c[u>>2]=1;g[a+828>>2]=k-t;break}else{c[u>>2]=0;g[a+828>>2]=0.0;break}}}while(0);g[a+848>>2]=i;t=+g[a+688>>2];k=+g[a+704>>2];if(t>k){c[a+864>>2]=0;g[a+832>>2]=0.0;return}if(t>i){c[a+864>>2]=2;g[a+832>>2]=i-t;return}u=a+864|0;if(k<i){c[u>>2]=1;g[a+832>>2]=i-k;return}else{c[u>>2]=0;g[a+832>>2]=0.0;return}}function wQ(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0.0,q=0.0;h=i;i=i+128|0;j=h|0;k=h+48|0;l=h+96|0;m=h+112|0;if((b|0)==0){i=h;return}n=c[a+28>>2]|0;g[j>>2]=+g[n+4>>2];g[j+4>>2]=+g[n+20>>2];g[j+8>>2]=+g[n+36>>2];g[j+12>>2]=0.0;g[j+16>>2]=+g[n+8>>2];g[j+20>>2]=+g[n+24>>2];g[j+24>>2]=+g[n+40>>2];g[j+28>>2]=0.0;g[j+32>>2]=+g[n+12>>2];g[j+36>>2]=+g[n+28>>2];g[j+40>>2]=+g[n+44>>2];g[j+44>>2]=0.0;o=c[a+32>>2]|0;g[k>>2]=+g[o+4>>2];g[k+4>>2]=+g[o+20>>2];g[k+8>>2]=+g[o+36>>2];g[k+12>>2]=0.0;g[k+16>>2]=+g[o+8>>2];g[k+20>>2]=+g[o+24>>2];g[k+24>>2]=+g[o+40>>2];g[k+28>>2]=0.0;g[k+32>>2]=+g[o+12>>2];g[k+36>>2]=+g[o+28>>2];g[k+40>>2]=+g[o+44>>2];g[k+44>>2]=0.0;p=+g[e+4>>2]- +g[n+56>>2];q=+g[e+8>>2]- +g[n+60>>2];g[l>>2]=+g[e>>2]- +g[n+52>>2];g[l+4>>2]=p;g[l+8>>2]=q;g[l+12>>2]=0.0;q=+g[f+4>>2]- +g[o+56>>2];p=+g[f+8>>2]- +g[o+60>>2];g[m>>2]=+g[f>>2]- +g[o+52>>2];g[m+4>>2]=q;g[m+8>>2]=p;g[m+12>>2]=0.0;wF(b,j,k,l,m,d,n+392|0,+g[n+340>>2],o+392|0,+g[o+340>>2]);i=h;return}function wR(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0.0,h=0.0,i=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0,B=0.0,C=0,D=0.0,E=0.0;if((b|0)==0){return}e=c[a+28>>2]|0;f=+g[e+4>>2];h=+g[e+20>>2];i=+g[e+36>>2];j=+g[e+8>>2];k=+g[e+24>>2];l=+g[e+40>>2];m=+g[e+12>>2];n=+g[e+28>>2];o=+g[e+44>>2];p=c[a+32>>2]|0;q=+g[p+4>>2];r=+g[p+20>>2];s=+g[p+36>>2];t=+g[p+8>>2];u=+g[p+24>>2];v=+g[p+40>>2];w=+g[p+12>>2];x=+g[p+28>>2];y=+g[p+44>>2];K1(b|0,0,16)|0;a=d|0;z=+g[a>>2];A=d+4|0;B=+g[A>>2];C=d+8|0;D=+g[C>>2];E=f*z+h*B+i*D;i=j*z+k*B+l*D;l=m*z+n*B+o*D;g[b+16>>2]=E;g[b+20>>2]=i;g[b+24>>2]=l;g[b+28>>2]=0.0;D=-0.0- +g[a>>2];o=-0.0- +g[A>>2];B=-0.0- +g[C>>2];n=q*D+r*o+s*B;s=t*D+u*o+v*B;v=w*D+x*o+y*B;g[b+32>>2]=n;g[b+36>>2]=s;g[b+40>>2]=v;g[b+44>>2]=0.0;B=E*+g[e+392>>2];y=i*+g[e+396>>2];o=l*+g[e+400>>2];g[b+48>>2]=B;g[b+52>>2]=y;g[b+56>>2]=o;g[b+60>>2]=0.0;x=n*+g[p+392>>2];D=s*+g[p+396>>2];w=v*+g[p+400>>2];g[b+64>>2]=x;g[b+68>>2]=D;g[b+72>>2]=w;g[b+76>>2]=0.0;g[b+80>>2]=E*B+i*y+l*o+(n*x+s*D+v*w);return}function wS(b,d){b=b|0;d=d|0;var e=0,f=0,h=0.0,i=0.0,j=0.0,k=0,l=0.0,m=0;e=b+868+(d<<6)|0;f=b+868+(d<<6)+4|0;h=+wT(+g[b+1192+(d<<2)>>2],+g[e>>2],+g[f>>2]);g[b+868+(d<<6)+52>>2]=h;i=+g[e>>2];j=+g[f>>2];do{if(i>j){c[b+868+(d<<6)+56>>2]=0;k=14}else{if(i>h){c[b+868+(d<<6)+56>>2]=1;l=h-i;f=b+868+(d<<6)+48|0;g[f>>2]=l;if(l>3.1415927410125732){g[f>>2]=l+ -6.2831854820251465;break}if(l>=-3.1415927410125732){break}g[f>>2]=l+6.2831854820251465;break}f=b+868+(d<<6)+56|0;if(j>=h){c[f>>2]=0;k=14;break}c[f>>2]=2;l=h-j;f=b+868+(d<<6)+48|0;g[f>>2]=l;if(l>3.1415927410125732){g[f>>2]=l+ -6.2831854820251465;break}if(l>=-3.1415927410125732){break}g[f>>2]=l+6.2831854820251465}}while(0);do{if((k|0)==14){if((a[b+868+(d<<6)+44|0]&1)==0){m=0}else{break}return m|0}}while(0);m=1;return m|0}function wT(a,b,c){a=+a;b=+b;c=+c;var d=0.0,e=0.0,f=0.0,g=0.0,h=0.0,i=0.0;if(b>=c){d=a;return+d}if(a<b){e=+c2(+(b-a),6.2831854820251465);do{if(e<-3.1415927410125732){f=e+6.2831854820251465}else{if(e<=3.1415927410125732){f=e;break}f=e+ -6.2831854820251465}}while(0);e=+V(+f);f=+c2(+(c-a),6.2831854820251465);do{if(f<-3.1415927410125732){g=f+6.2831854820251465}else{if(f<=3.1415927410125732){g=f;break}g=f+ -6.2831854820251465}}while(0);if(e<+V(+g)){d=a;return+d}d=a+6.2831854820251465;return+d}if(a<=c){d=a;return+d}g=+c2(+(a-c),6.2831854820251465);do{if(g<-3.1415927410125732){h=g+6.2831854820251465}else{if(g<=3.1415927410125732){h=g;break}h=g+ -6.2831854820251465}}while(0);g=+V(+h);h=+c2(+(a-b),6.2831854820251465);do{if(h<-3.1415927410125732){i=h+6.2831854820251465}else{if(h<=3.1415927410125732){i=h;break}i=h+ -6.2831854820251465}}while(0);if(+V(+i)>=g){d=a;return+d}d=a+ -6.2831854820251465;return+d}function wU(b){b=b|0;var d=0,e=0,f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0.0,s=0.0,t=0,u=0,v=0,w=0,x=0,y=0;d=i;i=i+48|0;e=d|0;f=d+16|0;h=d+32|0;if((a[b+1308|0]&1)==0){i=d;return}g[b+928>>2]=0.0;g[b+992>>2]=0.0;g[b+1056>>2]=0.0;K1(b+712|0,0,16)|0;wO(b,(c[b+28>>2]|0)+4|0,(c[b+32>>2]|0)+4|0);g$[c[(c[b>>2]|0)+44>>2]&1023](b);j=e;k=b+1284|0;c[j>>2]=c[k>>2];c[j+4>>2]=c[k+4>>2];c[j+8>>2]=c[k+8>>2];c[j+12>>2]=c[k+12>>2];j=f;c[j>>2]=c[k>>2];c[j+4>>2]=c[k+4>>2];c[j+8>>2]=c[k+8>>2];c[j+12>>2]=c[k+12>>2];k=b+1300|0;j=h|0;l=h+4|0;m=h+8|0;n=h+12|0;if(+g[b+696>>2]>=+g[b+680>>2]){if((a[k]&1)==0){o=b+1160|0;p=b+1144|0;q=b+1128|0}else{o=b+1096|0;p=b+1080|0;q=b+1064|0}r=+g[o>>2];s=+g[p>>2];g[j>>2]=+g[q>>2];g[l>>2]=s;g[m>>2]=r;g[n>>2]=0.0;wQ(b,b+176|0,h,e,f)}if(+g[b+700>>2]>=+g[b+684>>2]){if((a[k]&1)==0){t=b+1164|0;u=b+1148|0;v=b+1132|0}else{t=b+1100|0;u=b+1084|0;v=b+1068|0}r=+g[t>>2];s=+g[u>>2];g[j>>2]=+g[v>>2];g[l>>2]=s;g[m>>2]=r;g[n>>2]=0.0;wQ(b,b+260|0,h,e,f)}if(+g[b+704>>2]>=+g[b+688>>2]){if((a[k]&1)==0){w=b+1168|0;x=b+1152|0;y=b+1136|0}else{w=b+1104|0;x=b+1088|0;y=b+1072|0}r=+g[w>>2];s=+g[x>>2];g[j>>2]=+g[y>>2];g[l>>2]=s;g[m>>2]=r;g[n>>2]=0.0;wQ(b,b+344|0,h,e,f)}f=h;if(wS(b,0)|0){e=b+1208|0;c[f>>2]=c[e>>2];c[f+4>>2]=c[e+4>>2];c[f+8>>2]=c[e+8>>2];c[f+12>>2]=c[e+12>>2];wR(b,b+428|0,h)}if(wS(b,1)|0){e=b+1224|0;c[f>>2]=c[e>>2];c[f+4>>2]=c[e+4>>2];c[f+8>>2]=c[e+8>>2];c[f+12>>2]=c[e+12>>2];wR(b,b+512|0,h)}if(!(wS(b,2)|0)){i=d;return}e=b+1240|0;c[f>>2]=c[e>>2];c[f+4>>2]=c[e+4>>2];c[f+8>>2]=c[e+8>>2];c[f+12>>2]=c[e+12>>2];wR(b,b+596|0,h);i=d;return}function wV(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0;if((a[b+1308|0]&1)!=0){c[d>>2]=0;c[d+4>>2]=0;return}wO(b,(c[b+28>>2]|0)+4|0,(c[b+32>>2]|0)+4|0);e=d|0;c[e>>2]=0;f=d+4|0;c[f>>2]=6;if((c[b+856>>2]|0)==0){if((a[b+788|0]&1)==0){g=0;h=6}else{i=5}}else{i=5}if((i|0)==5){c[e>>2]=1;c[f>>2]=5;g=1;h=5}if((c[b+860>>2]|0)==0){if((a[b+789|0]&1)==0){j=g;k=h}else{i=14}}else{i=14}if((i|0)==14){d=g+1|0;c[e>>2]=d;g=h-1|0;c[f>>2]=g;j=d;k=g}if((c[b+864>>2]|0)==0){if((a[b+790|0]&1)!=0){i=17}}else{i=17}if((i|0)==17){c[e>>2]=j+1;c[f>>2]=k-1}if(wS(b,0)|0){c[e>>2]=(c[e>>2]|0)+1;c[f>>2]=(c[f>>2]|0)-1}if(wS(b,1)|0){c[e>>2]=(c[e>>2]|0)+1;c[f>>2]=(c[f>>2]|0)-1}if(!(wS(b,2)|0)){return}c[e>>2]=(c[e>>2]|0)+1;c[f>>2]=(c[f>>2]|0)-1;return}function wW(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0;e=c[b+28>>2]|0;f=e+4|0;g=c[b+32>>2]|0;h=g+4|0;i=e+308|0;j=g+308|0;k=e+324|0;e=g+324|0;if((a[b+1301|0]&1)==0){wX(b,d,wY(b,d,0,f,h,i,j,k,e)|0,f,h,i,j,k,e)|0;return}else{wY(b,d,wX(b,d,0,f,h,i,j,k,e)|0,f,h,i,j,k,e)|0;return}}function wX(b,d,e,f,h,j,k,l,m){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;n=i;i=i+16|0;o=n|0;p=o;q=b+1304|0;r=d+32|0;s=d+4|0;t=0;u=e;while(1){e=b+868+(t<<6)|0;if((c[b+868+(t<<6)+56>>2]|0)==0){if((a[b+868+(t<<6)+44|0]&1)==0){v=u}else{w=4}}else{w=4}if((w|0)==4){w=0;x=b+1208+(t<<4)|0;c[p>>2]=c[x>>2];c[p+4>>2]=c[x+4>>2];c[p+8>>2]=c[x+8>>2];c[p+12>>2]=c[x+12>>2];x=c[q>>2]>>(t*3|0)+9;if((x&1|0)==0){g[b+868+(t<<6)+28>>2]=+g[c[r>>2]>>2]}if((x&2|0)==0){g[b+868+(t<<6)+36>>2]=+g[c[r>>2]>>2]}if((x&4|0)==0){g[b+868+(t<<6)+32>>2]=+g[s>>2]}v=(wZ(b,e,f,h,j,k,l,m,d,u,o,1,0)|0)+u|0}e=t+1|0;if((e|0)<3){t=e;u=v}else{break}}i=n;return v|0}function wY(b,d,e,f,h,j,k,l,m){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0;n=i;i=i+80|0;o=n|0;p=n+64|0;g[o+60>>2]=0.0;q=o+8|0;g[q>>2]=0.0;r=o+12|0;g[r>>2]=.10000000149011612;s=o+16|0;g[s>>2]=300.0;t=o|0;g[t>>2]=1.0;u=o+4|0;g[u>>2]=-1.0;v=o+28|0;g[v>>2]=0.0;w=o+32|0;g[w>>2]=.20000000298023224;x=o+36|0;g[x>>2]=0.0;y=o+40|0;g[y>>2]=0.0;z=o+20|0;g[z>>2]=1.0;A=o+24|0;g[A>>2]=.5;B=o+56|0;c[B>>2]=0;C=o+48|0;g[C>>2]=0.0;D=o+44|0;a[D]=0;E=o+52|0;F=b+732|0;G=b+728|0;H=p|0;I=p+4|0;J=p+8|0;K=p+12|0;L=b+1304|0;M=d+32|0;N=d+4|0;O=b+1301|0;P=0;Q=e;while(1){e=c[b+856+(P<<2)>>2]|0;R=a[b+788+P|0]|0;if((e|0)==0){if((R&1)==0){S=Q}else{T=4}}else{T=4}do{if((T|0)==4){T=0;g[y>>2]=0.0;c[B>>2]=e;g[E>>2]=+g[b+840+(P<<2)>>2];g[C>>2]=+g[b+824+(P<<2)>>2];g[z>>2]=+g[F>>2];a[D]=R&1;g[u>>2]=+g[b+696+(P<<2)>>2];g[A>>2]=+g[G>>2];g[t>>2]=+g[b+680+(P<<2)>>2];g[s>>2]=0.0;g[r>>2]=+g[b+808+(P<<2)>>2];g[q>>2]=+g[b+792+(P<<2)>>2];g[H>>2]=+g[b+1064+(P<<2)>>2];g[I>>2]=+g[b+1080+(P<<2)>>2];g[J>>2]=+g[b+1096+(P<<2)>>2];g[K>>2]=0.0;U=c[L>>2]>>(P*3|0);if((U&1|0)==0){V=c[M>>2]|0}else{V=b+740+(P<<2)|0}g[v>>2]=+g[V>>2];if((U&2|0)==0){W=c[M>>2]|0}else{W=b+772+(P<<2)|0}g[x>>2]=+g[W>>2];if((U&4|0)==0){X=N}else{X=b+756+(P<<2)|0}g[w>>2]=+g[X>>2];if((a[O]&1)==0){S=(wZ(b,o,f,h,j,k,l,m,d,Q,p,0,0)|0)+Q|0;break}U=P+1|0;if((c[b+868+(((U|0)==3?0:U)<<6)+56>>2]|0)==0){Y=1}else{Y=(c[b+868+(((P+2|0)%3|0)<<6)+56>>2]|0)==0|0}S=(wZ(b,o,f,h,j,k,l,m,d,Q,p,0,Y)|0)+Q|0}}while(0);R=P+1|0;if((R|0)<3){P=R;Q=S}else{break}}i=n;return S|0}function wZ(b,d,e,f,h,i,j,k,l,m,n,o,p){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;p=p|0;var q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0.0,B=0.0,C=0,D=0.0,E=0,F=0.0,G=0.0,H=0.0,I=0.0,J=0.0,K=0.0,L=0.0,M=0.0,N=0.0,O=0.0,P=0.0,Q=0.0,R=0.0,S=0.0,T=0.0,U=0.0,V=0.0,W=0.0,X=0.0,Y=0.0,Z=0.0,_=0.0,$=0.0,aa=0,ab=0,ac=0.0,ad=0.0;q=ag(c[l+24>>2]|0,m)|0;m=(a[d+44|0]&1)==0;r=c[d+56>>2]|0;if(m&(r|0)==0){s=0;return s|0}t=(o|0)!=0;o=l+12|0;u=c[(t?o:l+8|0)>>2]|0;if(t){v=c[l+20>>2]|0}else{v=0}w=n|0;g[u+(q<<2)>>2]=+g[w>>2];x=n+4|0;y=q+1|0;g[u+(y<<2)>>2]=+g[x>>2];z=n+8|0;n=q+2|0;g[u+(n<<2)>>2]=+g[z>>2];do{if(t){g[v+(q<<2)>>2]=-0.0- +g[w>>2];g[v+(y<<2)>>2]=-0.0- +g[x>>2];g[v+(n<<2)>>2]=-0.0- +g[z>>2]}else{u=b+1176|0;A=+g[u>>2];if((a[b+1301|0]&1)==0){B=A- +g[e+48>>2];C=b+1180|0;D=+g[C>>2]- +g[e+52>>2];E=b+1184|0;F=+g[E>>2]- +g[e+56>>2];G=+g[z>>2];H=+g[x>>2];I=+g[w>>2];g[(c[o>>2]|0)+(q<<2)>>2]=D*G-F*H;g[(c[o>>2]|0)+(y<<2)>>2]=F*I-B*G;g[(c[o>>2]|0)+(n<<2)>>2]=B*H-D*I;I=+g[u>>2]- +g[f+48>>2];D=+g[C>>2]- +g[f+52>>2];H=+g[E>>2]- +g[f+56>>2];B=+g[z>>2];G=+g[x>>2];F=+g[w>>2];E=l+20|0;g[(c[E>>2]|0)+(q<<2)>>2]=-0.0-(D*B-H*G);g[(c[E>>2]|0)+(y<<2)>>2]=-0.0-(H*F-I*B);g[(c[E>>2]|0)+(n<<2)>>2]=-0.0-(I*G-D*F);break}F=A- +g[f+48>>2];A=+g[b+1180>>2]- +g[f+52>>2];D=+g[b+1184>>2]- +g[f+56>>2];G=+g[w>>2];I=+g[x>>2];B=+g[z>>2];H=F*G+A*I+D*B;J=G*H;K=I*H;L=B*H;H=+g[b+1112>>2]- +g[e+48>>2];M=+g[b+1116>>2]- +g[e+52>>2];N=+g[b+1120>>2]- +g[e+56>>2];O=G*H+I*M+B*N;P=G*O;Q=I*O;R=B*O;O=+g[d+52>>2]- +g[d+48>>2];S=P+G*O-J;T=Q+I*O-K;U=R+B*O-L;O=+g[b+1272>>2];V=H-P+O*S;P=M-Q+O*T;Q=N-R+O*U;R=+g[b+1276>>2];N=F-J-R*S;S=A-K-R*T;T=D-L-R*U;U=B*P-I*Q;L=G*Q-B*V;Q=I*V-G*P;P=B*S-I*T;V=G*T-B*N;B=I*N-G*S;if((a[b+1280|0]&1)!=0&(p|0)==0){W=O*U;X=O*L;Y=O*Q;Z=R*P;_=R*V;$=R*B}else{W=U;X=L;Y=Q;Z=P;_=V;$=B}g[(c[o>>2]|0)+(q<<2)>>2]=W;g[(c[o>>2]|0)+(y<<2)>>2]=X;g[(c[o>>2]|0)+(n<<2)>>2]=Y;E=l+20|0;g[(c[E>>2]|0)+(q<<2)>>2]=-0.0-Z;g[(c[E>>2]|0)+(y<<2)>>2]=-0.0-_;g[(c[E>>2]|0)+(n<<2)>>2]=-0.0-$}}while(0);n=(r|0)!=0;do{if(n){if(+g[d>>2]!=+g[d+4>>2]){aa=14;break}y=l+28|0;g[(c[y>>2]|0)+(q<<2)>>2]=0.0;ab=y}else{aa=14}}while(0);do{if((aa|0)==14){y=l+28|0;g[(c[y>>2]|0)+(q<<2)>>2]=0.0;if(!m){g[(c[l+32>>2]|0)+(q<<2)>>2]=+g[d+28>>2];if(n){ab=y;break}o=d+8|0;$=+g[o>>2];if(t){ac=$}else{ac=-0.0-$}$=+x5(b|0,+g[d+52>>2],+g[d>>2],+g[d+4>>2],ac,+g[l>>2]*+g[d+32>>2]);p=(c[y>>2]|0)+(q<<2)|0;g[p>>2]=$*+g[o>>2]+ +g[p>>2];p=d+12|0;g[(c[l+36>>2]|0)+(q<<2)>>2]=-0.0- +g[p>>2];g[(c[l+40>>2]|0)+(q<<2)>>2]=+g[p>>2]}if(n){ab=y;break}else{s=1}return s|0}}while(0);ac=+g[l>>2]*+g[d+32>>2];if(t){n=(c[ab>>2]|0)+(q<<2)|0;g[n>>2]=+g[d+48>>2]*(-0.0-ac)+ +g[n>>2]}else{n=(c[ab>>2]|0)+(q<<2)|0;g[n>>2]=ac*+g[d+48>>2]+ +g[n>>2]}g[(c[l+32>>2]|0)+(q<<2)>>2]=+g[d+36>>2];if(+g[d>>2]==+g[d+4>>2]){g[(c[l+36>>2]|0)+(q<<2)>>2]=-3.4028234663852886e+38;g[(c[l+40>>2]|0)+(q<<2)>>2]=3.4028234663852886e+38;s=1;return s|0}n=(r|0)==1;r=(c[l+36>>2]|0)+(q<<2)|0;if(n){g[r>>2]=0.0;g[(c[l+40>>2]|0)+(q<<2)>>2]=3.4028234663852886e+38}else{g[r>>2]=-3.4028234663852886e+38;g[(c[l+40>>2]|0)+(q<<2)>>2]=0.0}ac=+g[d+40>>2];if(ac<=0.0){s=1;return s|0}if(t){$=+g[w>>2];_=+g[x>>2];Z=+g[z>>2];ad=+g[j>>2]*$+ +g[j+4>>2]*_+ +g[j+8>>2]*Z-($*+g[k>>2]+_*+g[k+4>>2]+Z*+g[k+8>>2])}else{Z=+g[w>>2];_=+g[x>>2];$=+g[z>>2];ad=+g[h>>2]*Z+ +g[h+4>>2]*_+ +g[h+8>>2]*$-(Z*+g[i>>2]+_*+g[i+4>>2]+$*+g[i+8>>2])}if(n){if(ad>=0.0){s=1;return s|0}$=ad*(-0.0-ac);n=(c[ab>>2]|0)+(q<<2)|0;if($<=+g[n>>2]){s=1;return s|0}g[n>>2]=$;s=1;return s|0}else{if(ad<=0.0){s=1;return s|0}$=ad*(-0.0-ac);n=(c[ab>>2]|0)+(q<<2)|0;if($>=+g[n>>2]){s=1;return s|0}g[n>>2]=$;s=1;return s|0}return 0}function w_(a,b){a=a|0;b=b|0;return+(+g[a+1192+(b<<2)>>2])}function w$(a){a=a|0;var b=0.0,d=0.0,e=0.0,f=0.0;b=+g[(c[a+28>>2]|0)+340>>2];d=+g[(c[a+32>>2]|0)+340>>2];if(d==0.0){e=1.0}else{e=b/(b+d)}d=1.0-e;b=e*+g[a+1116>>2]+d*+g[a+1180>>2];f=e*+g[a+1120>>2]+d*+g[a+1184>>2];g[a+1284>>2]=e*+g[a+1112>>2]+d*+g[a+1176>>2];g[a+1288>>2]=b;g[a+1292>>2]=f;g[a+1296>>2]=0.0;return}function w0(a,b,d,e){a=a|0;b=b|0;d=+d;e=e|0;var f=0,h=0;if(e>>>0<3>>>0){if((b|0)==4){g[a+772+(e<<2)>>2]=d;f=a+1304|0;c[f>>2]=c[f>>2]|2<<(e*3|0);return}else if((b|0)==2){g[a+756+(e<<2)>>2]=d;f=a+1304|0;c[f>>2]=c[f>>2]|4<<(e*3|0);return}else if((b|0)==3){g[a+740+(e<<2)>>2]=d;f=a+1304|0;c[f>>2]=c[f>>2]|1<<(e*3|0);return}else{return}}f=e-3|0;if(f>>>0>=3>>>0){return}if((b|0)==3){g[a+868+(f<<6)+28>>2]=d;h=a+1304|0;c[h>>2]=c[h>>2]|1<<(e*3|0);return}else if((b|0)==2){g[a+868+(f<<6)+32>>2]=d;h=a+1304|0;c[h>>2]=c[h>>2]|4<<(e*3|0);return}else if((b|0)==4){g[a+868+(f<<6)+36>>2]=d;f=a+1304|0;c[f>>2]=c[f>>2]|2<<(e*3|0);return}else{return}}function w1(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0,e=0;do{if(c>>>0<3>>>0){if((b|0)==2){d=+g[a+756+(c<<2)>>2];break}else if((b|0)==3){d=+g[a+740+(c<<2)>>2];break}else if((b|0)==4){d=+g[a+772+(c<<2)>>2];break}else{d=0.0;break}}else{e=c-3|0;if(e>>>0>=3>>>0){d=0.0;break}if((b|0)==3){d=+g[a+868+(e<<6)+28>>2];break}else if((b|0)==2){d=+g[a+868+(e<<6)+32>>2];break}else if((b|0)==4){d=+g[a+868+(e<<6)+36>>2];break}else{d=0.0;break}}}while(0);return+d}function w2(a){a=a|0;return}function w3(a){a=a|0;zw(a);return}function w4(a){a=a|0;return 252}function w5(b,d,e){b=b|0;d=d|0;e=e|0;x6(b|0,d,e)|0;g[d+52>>2]=+g[b+48>>2];g[d+56>>2]=+g[b+52>>2];g[d+60>>2]=+g[b+56>>2];g[d+64>>2]=+g[b+60>>2];g[d+68>>2]=+g[b+64>>2];g[d+72>>2]=+g[b+68>>2];g[d+76>>2]=+g[b+72>>2];g[d+80>>2]=+g[b+76>>2];g[d+84>>2]=+g[b+80>>2];g[d+88>>2]=+g[b+84>>2];g[d+92>>2]=+g[b+88>>2];g[d+96>>2]=+g[b+92>>2];g[d+100>>2]=+g[b+96>>2];g[d+104>>2]=+g[b+100>>2];g[d+108>>2]=+g[b+104>>2];g[d+112>>2]=+g[b+108>>2];g[d+116>>2]=+g[b+112>>2];g[d+120>>2]=+g[b+116>>2];g[d+124>>2]=+g[b+120>>2];g[d+128>>2]=+g[b+124>>2];g[d+132>>2]=+g[b+128>>2];g[d+136>>2]=+g[b+132>>2];g[d+140>>2]=+g[b+136>>2];g[d+144>>2]=+g[b+140>>2];g[d+148>>2]=+g[b+144>>2];g[d+152>>2]=+g[b+148>>2];g[d+156>>2]=+g[b+152>>2];g[d+160>>2]=+g[b+156>>2];g[d+164>>2]=+g[b+160>>2];g[d+168>>2]=+g[b+164>>2];g[d+172>>2]=+g[b+168>>2];g[d+176>>2]=+g[b+172>>2];g[d+228>>2]=+g[b+868>>2];g[d+212>>2]=+g[b+872>>2];g[d+196>>2]=+g[b+680>>2];g[d+180>>2]=+g[b+696>>2];g[d+232>>2]=+g[b+932>>2];g[d+216>>2]=+g[b+936>>2];g[d+200>>2]=+g[b+684>>2];g[d+184>>2]=+g[b+700>>2];g[d+236>>2]=+g[b+996>>2];g[d+220>>2]=+g[b+1e3>>2];g[d+204>>2]=+g[b+688>>2];g[d+188>>2]=+g[b+704>>2];c[d+244>>2]=a[b+1300|0]&1;c[d+248>>2]=a[b+1301|0]&1;return 13392}function w6(b,d,e,f,h,i){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;i=i|0;wK(b,d,e,f,h,i);c[b>>2]=31232;c[b+4>>2]=9;a[b+1309|0]=0;g[b+1316>>2]=0.0;g[b+1340>>2]=0.0;g[b+1364>>2]=1.0;a[b+1310|0]=0;g[b+1320>>2]=0.0;g[b+1344>>2]=0.0;g[b+1368>>2]=1.0;a[b+1311|0]=0;g[b+1324>>2]=0.0;g[b+1348>>2]=0.0;g[b+1372>>2]=1.0;a[b+1312|0]=0;g[b+1328>>2]=0.0;g[b+1352>>2]=0.0;g[b+1376>>2]=1.0;a[b+1313|0]=0;g[b+1332>>2]=0.0;g[b+1356>>2]=0.0;g[b+1380>>2]=1.0;a[b+1314|0]=0;g[b+1336>>2]=0.0;g[b+1360>>2]=0.0;g[b+1384>>2]=1.0;return}function w7(b,c,d){b=b|0;c=c|0;d=d|0;var e=0;e=d&1;a[b+1309+c|0]=e;if((c|0)<3){a[b+(c+788)|0]=e;return}else{a[b+868+(c-3<<6)+44|0]=e;return}}function w8(b,d){b=b|0;d=d|0;var e=0,f=0,h=0.0,i=0.0;e=d|0;f=d+48|0;if((a[b+1309|0]&1)!=0){h=(+g[b+1256>>2]- +g[b+1316>>2])*+g[b+1340>>2];g[b+792>>2]=h*(+g[e>>2]*+g[b+1364>>2]/+(c[f>>2]|0));i=+V(+h);g[b+808>>2]=i/+g[e>>2]}if((a[b+1310|0]&1)!=0){i=(+g[b+1260>>2]- +g[b+1320>>2])*+g[b+1344>>2];g[b+796>>2]=i*(+g[e>>2]*+g[b+1368>>2]/+(c[f>>2]|0));h=+V(+i);g[b+812>>2]=h/+g[e>>2]}if((a[b+1311|0]&1)!=0){h=(+g[b+1264>>2]- +g[b+1324>>2])*+g[b+1348>>2];g[b+800>>2]=h*(+g[e>>2]*+g[b+1372>>2]/+(c[f>>2]|0));i=+V(+h);g[b+816>>2]=i/+g[e>>2]}if((a[b+1312|0]&1)!=0){i=+g[b+1352>>2]*(-0.0-(+g[b+1192>>2]- +g[b+1328>>2]));g[b+876>>2]=i*(+g[e>>2]*+g[b+1376>>2]/+(c[f>>2]|0));h=+V(+i);g[b+880>>2]=h/+g[e>>2]}if((a[b+1313|0]&1)!=0){h=+g[b+1356>>2]*(-0.0-(+g[b+1196>>2]- +g[b+1332>>2]));g[b+940>>2]=h*(+g[e>>2]*+g[b+1380>>2]/+(c[f>>2]|0));i=+V(+h);g[b+944>>2]=i/+g[e>>2]}if((a[b+1314|0]&1)==0){return}i=+g[b+1360>>2]*(-0.0-(+g[b+1200>>2]- +g[b+1336>>2]));g[b+1004>>2]=i*(+g[e>>2]*+g[b+1384>>2]/+(c[f>>2]|0));h=+V(+i);g[b+1008>>2]=h/+g[e>>2];return}function w9(a,b){a=a|0;b=b|0;w8(a,b);wW(a,b);return}function xa(a,b,d){a=a|0;b=b|0;d=d|0;var e=0.0,f=0.0,h=0.0,i=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0;e=+g[b>>2];f=+g[b+4>>2];h=+g[b+8>>2];i=1.0/+W(e*e+f*f+h*h);j=e*i;e=f*i;f=h*i;i=+g[d>>2];h=+g[d+4>>2];k=+g[d+8>>2];l=1.0/+W(i*i+h*h+k*k);m=i*l;i=h*l;h=k*l;l=f*i-e*h;k=j*h-f*m;n=e*m-j*i;d=c[a+28>>2]|0;o=+g[d+4>>2];p=+g[d+20>>2];q=+g[d+36>>2];r=+g[d+8>>2];s=+g[d+24>>2];t=+g[d+40>>2];u=+g[d+12>>2];v=+g[d+28>>2];w=+g[d+44>>2];x=-0.0- +g[d+52>>2];y=-0.0- +g[d+56>>2];z=-0.0- +g[d+60>>2];g[a+48>>2]=o*l+k*p+n*q;g[a+52>>2]=m*o+i*p+h*q;g[a+56>>2]=j*o+e*p+f*q;g[a+60>>2]=0.0;g[a+64>>2]=l*r+k*s+n*t;g[a+68>>2]=m*r+i*s+h*t;g[a+72>>2]=j*r+e*s+f*t;g[a+76>>2]=0.0;g[a+80>>2]=l*u+k*v+n*w;g[a+84>>2]=m*u+i*v+h*w;g[a+88>>2]=j*u+e*v+f*w;g[a+92>>2]=0.0;g[a+96>>2]=o*0.0+p*0.0+q*0.0+(o*x+p*y+q*z);g[a+100>>2]=r*0.0+s*0.0+t*0.0+(r*x+s*y+t*z);g[a+104>>2]=u*0.0+v*0.0+w*0.0+(u*x+v*y+w*z);g[a+108>>2]=0.0;d=c[a+32>>2]|0;z=+g[d+4>>2];w=+g[d+20>>2];y=+g[d+36>>2];v=+g[d+8>>2];x=+g[d+24>>2];u=+g[d+40>>2];t=+g[d+12>>2];s=+g[d+28>>2];r=+g[d+44>>2];q=-0.0- +g[d+52>>2];p=-0.0- +g[d+56>>2];o=-0.0- +g[d+60>>2];g[a+112>>2]=l*z+k*w+n*y;g[a+116>>2]=m*z+i*w+h*y;g[a+120>>2]=j*z+e*w+f*y;g[a+124>>2]=0.0;g[a+128>>2]=l*v+k*x+n*u;g[a+132>>2]=m*v+i*x+h*u;g[a+136>>2]=j*v+e*x+f*u;g[a+140>>2]=0.0;g[a+144>>2]=l*t+k*s+n*r;g[a+148>>2]=m*t+i*s+h*r;g[a+152>>2]=j*t+e*s+f*r;g[a+156>>2]=0.0;g[a+160>>2]=z*0.0+w*0.0+y*0.0+(z*q+w*p+y*o);g[a+164>>2]=v*0.0+x*0.0+u*0.0+(v*q+x*p+u*o);g[a+168>>2]=t*0.0+s*0.0+r*0.0+(t*q+s*p+r*o);g[a+172>>2]=0.0;wL(a);return}function xb(a){a=a|0;return}function xc(a){a=a|0;zw(a|0);return}function xd(a){a=a|0;return 348}function xe(b,d,e){b=b|0;d=d|0;e=e|0;w5(b,d,e)|0;g[d+276>>2]=+g[b+1316>>2];g[d+324>>2]=+g[b+1364>>2];c[d+252>>2]=a[b+1309|0]&1;g[d+300>>2]=+g[b+1340>>2];g[d+280>>2]=+g[b+1320>>2];g[d+328>>2]=+g[b+1368>>2];c[d+256>>2]=a[b+1310|0]&1;g[d+304>>2]=+g[b+1344>>2];g[d+284>>2]=+g[b+1324>>2];g[d+332>>2]=+g[b+1372>>2];c[d+260>>2]=a[b+1311|0]&1;g[d+308>>2]=+g[b+1348>>2];g[d+288>>2]=+g[b+1328>>2];g[d+336>>2]=+g[b+1376>>2];c[d+264>>2]=a[b+1312|0]&1;g[d+312>>2]=+g[b+1352>>2];g[d+292>>2]=+g[b+1332>>2];g[d+340>>2]=+g[b+1380>>2];c[d+268>>2]=a[b+1313|0]&1;g[d+316>>2]=+g[b+1356>>2];g[d+296>>2]=+g[b+1336>>2];g[d+344>>2]=+g[b+1384>>2];c[d+272>>2]=a[b+1314|0]&1;g[d+320>>2]=+g[b+1360>>2];return 13352}function xf(b,d,e,f,h,i,j,k){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;i=i|0;j=j|0;k=k|0;var l=0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0;x4(b|0,4,d,e);c[b>>2]=33504;g[b+688>>2]=0.0;g[b+692>>2]=-1.0;g[b+696>>2]=.8999999761581421;g[b+700>>2]=.30000001192092896;g[b+704>>2]=1.0;g[b+708>>2]=0.0;g[b+712>>2]=0.0;a[b+716|0]=0;a[b+736|0]=0;a[b+737|0]=0;a[b+738|0]=0;a[b+739|0]=1;a[b+740|0]=k&1;c[b+748>>2]=0;e=b+600|0;l=f;c[e>>2]=c[l>>2];c[e+4>>2]=c[l+4>>2];c[e+8>>2]=c[l+8>>2];c[e+12>>2]=c[l+12>>2];m=+g[d+4>>2];n=+g[d+20>>2];o=+g[d+36>>2];l=i|0;p=+g[l>>2];e=i+4|0;q=+g[e>>2];f=i+8|0;r=+g[f>>2];s=m*p+n*q+o*r;do{if(s<.9999998807907104){if(s>-.9999998807907104){t=o*q-n*r;u=m*r-o*p;v=n*p-m*q;w=t;x=u;y=v;z=r*u-q*v;A=p*v-r*t;B=q*t-p*u;break}else{w=+g[d+8>>2];x=+g[d+24>>2];y=+g[d+40>>2];z=+g[d+12>>2];A=+g[d+28>>2];B=+g[d+44>>2];break}}else{w=+g[d+8>>2];x=+g[d+24>>2];y=+g[d+40>>2];z=-0.0- +g[d+12>>2];A=-0.0- +g[d+28>>2];B=-0.0- +g[d+44>>2]}}while(0);g[b+552>>2]=z;g[b+556>>2]=w;g[b+560>>2]=+g[l>>2];g[b+564>>2]=0.0;g[b+568>>2]=A;g[b+572>>2]=x;g[b+576>>2]=+g[e>>2];g[b+580>>2]=0.0;g[b+584>>2]=B;g[b+588>>2]=y;g[b+592>>2]=+g[f>>2];g[b+596>>2]=0.0;y=+g[e>>2];e=j+8|0;x=+g[e>>2];w=+g[f>>2];f=j+4|0;p=+g[f>>2];d=j|0;q=+g[d>>2];r=+g[l>>2];m=x*w+(y*p+q*r);do{if(m<-.9999998807907104){if(+V(+w)>.7071067690849304){n=1.0/+W(y*y+w*w);C=0.0;D=n*(-0.0-w);E=y*n;F=0.0;break}else{n=1.0/+W(y*y+r*r);C=n*(-0.0-y);D=r*n;E=0.0;F=0.0;break}}else{n=+W((m+1.0)*2.0);o=1.0/n;C=(y*x-w*p)*o;D=(w*q-x*r)*o;E=(p*r-y*q)*o;F=n*.5}}while(0);y=z*F+B*D-A*E;r=A*F+z*E-B*C;w=B*F+A*C-z*D;m=-0.0-C;C=z*m-A*D-B*E;B=-0.0-D;D=-0.0-E;E=r*D+(F*y+C*m)-w*B;A=w*m+(F*r+C*B)-y*D;z=y*B+(F*w+C*D)-r*m;l=b+664|0;j=h;c[l>>2]=c[j>>2];c[l+4>>2]=c[j+4>>2];c[l+8>>2]=c[j+8>>2];c[l+12>>2]=c[j+12>>2];g[b+616>>2]=E;g[b+620>>2]=p*z-x*A;g[b+624>>2]=+g[d>>2];g[b+628>>2]=0.0;g[b+632>>2]=A;g[b+636>>2]=x*E-q*z;g[b+640>>2]=+g[f>>2];g[b+644>>2]=0.0;g[b+648>>2]=z;g[b+652>>2]=q*A-p*E;g[b+656>>2]=+g[e>>2];g[b+660>>2]=0.0;g[b+732>>2]=k?-1.0:1.0;return}function xg(b,d,e,f,h,i){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;i=i|0;x4(b|0,4,d,e);c[b>>2]=33504;e=b+552|0;d=f;c[e>>2]=c[d>>2];c[e+4>>2]=c[d+4>>2];c[e+8>>2]=c[d+8>>2];c[e+12>>2]=c[d+12>>2];d=b+568|0;e=f+16|0;c[d>>2]=c[e>>2];c[d+4>>2]=c[e+4>>2];c[d+8>>2]=c[e+8>>2];c[d+12>>2]=c[e+12>>2];e=b+584|0;d=f+32|0;c[e>>2]=c[d>>2];c[e+4>>2]=c[d+4>>2];c[e+8>>2]=c[d+8>>2];c[e+12>>2]=c[d+12>>2];d=b+600|0;e=f+48|0;c[d>>2]=c[e>>2];c[d+4>>2]=c[e+4>>2];c[d+8>>2]=c[e+8>>2];c[d+12>>2]=c[e+12>>2];e=b+616|0;d=h;c[e>>2]=c[d>>2];c[e+4>>2]=c[d+4>>2];c[e+8>>2]=c[d+8>>2];c[e+12>>2]=c[d+12>>2];d=b+632|0;e=h+16|0;c[d>>2]=c[e>>2];c[d+4>>2]=c[e+4>>2];c[d+8>>2]=c[e+8>>2];c[d+12>>2]=c[e+12>>2];e=b+648|0;d=h+32|0;c[e>>2]=c[d>>2];c[e+4>>2]=c[d+4>>2];c[e+8>>2]=c[d+8>>2];c[e+12>>2]=c[d+12>>2];d=b+664|0;e=h+48|0;c[d>>2]=c[e>>2];c[d+4>>2]=c[e+4>>2];c[d+8>>2]=c[e+8>>2];c[d+12>>2]=c[e+12>>2];g[b+688>>2]=0.0;g[b+692>>2]=-1.0;g[b+696>>2]=.8999999761581421;g[b+700>>2]=.30000001192092896;g[b+704>>2]=1.0;g[b+708>>2]=0.0;g[b+712>>2]=0.0;a[b+716|0]=0;a[b+736|0]=0;a[b+737|0]=0;a[b+738|0]=0;a[b+739|0]=1;a[b+740|0]=i&1;c[b+748>>2]=0;g[b+732>>2]=i?-1.0:1.0;return}function xh(b){b=b|0;var d=0,e=0,f=0,h=0,j=0,k=0,l=0,m=0,n=0.0,o=0.0,p=0.0,q=0.0,r=0,s=0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0,ai=0,aj=0,ak=0,al=0,am=0.0,an=0.0,ao=0.0,ap=0.0,aq=0.0,ar=0.0,as=0.0,at=0.0,au=0.0,av=0.0,aw=0.0,ax=0.0,ay=0.0,az=0;d=i;i=i+176|0;e=d|0;f=d+48|0;h=d+96|0;j=d+144|0;k=d+160|0;if((a[b+738|0]&1)==0){i=d;return}g[b+36>>2]=0.0;g[b+744>>2]=0.0;if((a[b+736|0]&1)==0){l=b+28|0;m=c[l>>2]|0;n=+g[b+600>>2];o=+g[b+604>>2];p=+g[b+608>>2];q=n*+g[m+20>>2]+o*+g[m+24>>2]+p*+g[m+28>>2]+ +g[m+56>>2];r=b+32|0;s=c[r>>2]|0;t=+g[b+664>>2];u=+g[b+668>>2];v=+g[b+672>>2];w=t*+g[s+20>>2]+u*+g[s+24>>2]+v*+g[s+28>>2]+ +g[s+56>>2];x=t*+g[s+36>>2]+u*+g[s+40>>2]+v*+g[s+44>>2]+ +g[s+60>>2];y=w-q;z=n*+g[m+4>>2]+o*+g[m+8>>2]+p*+g[m+12>>2]+ +g[m+52>>2];A=n*+g[m+36>>2]+o*+g[m+40>>2]+p*+g[m+44>>2]+ +g[m+60>>2];p=t*+g[s+4>>2]+u*+g[s+8>>2]+v*+g[s+12>>2]+ +g[s+52>>2];v=p-z;u=x-A;t=v*v+y*y+u*u;if(t>1.1920928955078125e-7){o=1.0/+W(t);t=v*o;v=y*o;y=u*o;g[e>>2]=t;g[e+4>>2]=v;g[e+8>>2]=y;g[e+12>>2]=0.0;B=y;C=v;D=t}else{g[e>>2]=1.0;g[e+4>>2]=0.0;g[e+8>>2]=0.0;g[e+12>>2]=0.0;B=0.0;C=0.0;D=1.0}s=e+16|0;m=e+32|0;if(+V(+B)>.7071067690849304){t=B*B+C*C;v=1.0/+W(t);g[s>>2]=0.0;y=v*(-0.0-B);g[e+20>>2]=y;o=v*C;g[e+24>>2]=o;g[m>>2]=t*v;g[e+36>>2]=o*(-0.0-D);g[e+40>>2]=D*y}else{y=D*D+C*C;o=1.0/+W(y);v=o*(-0.0-C);g[s>>2]=v;C=o*D;g[e+20>>2]=C;g[e+24>>2]=0.0;g[m>>2]=C*(-0.0-B);g[e+36>>2]=B*v;g[e+40>>2]=y*o}m=f|0;s=f+4|0;E=f+8|0;F=f+12|0;G=f+16|0;H=f+20|0;I=f+24|0;J=f+28|0;K=f+32|0;L=f+36|0;M=f+40|0;N=f+44|0;O=h|0;P=h+4|0;Q=h+8|0;R=h+12|0;S=h+16|0;T=h+20|0;U=h+24|0;X=h+28|0;Y=h+32|0;Z=h+36|0;_=h+40|0;$=h+44|0;aa=j|0;ab=j+4|0;ac=j+8|0;ad=j+12|0;ae=k|0;af=k+4|0;ag=k+8|0;ah=k+12|0;ai=0;do{aj=b+48+(ai*84|0)|0;if((aj|0)!=0){ak=c[l>>2]|0;g[m>>2]=+g[ak+4>>2];g[s>>2]=+g[ak+20>>2];g[E>>2]=+g[ak+36>>2];g[F>>2]=0.0;g[G>>2]=+g[ak+8>>2];g[H>>2]=+g[ak+24>>2];g[I>>2]=+g[ak+40>>2];g[J>>2]=0.0;g[K>>2]=+g[ak+12>>2];g[L>>2]=+g[ak+28>>2];g[M>>2]=+g[ak+44>>2];g[N>>2]=0.0;al=c[r>>2]|0;g[O>>2]=+g[al+4>>2];g[P>>2]=+g[al+20>>2];g[Q>>2]=+g[al+36>>2];g[R>>2]=0.0;g[S>>2]=+g[al+8>>2];g[T>>2]=+g[al+24>>2];g[U>>2]=+g[al+40>>2];g[X>>2]=0.0;g[Y>>2]=+g[al+12>>2];g[Z>>2]=+g[al+28>>2];g[_>>2]=+g[al+44>>2];g[$>>2]=0.0;o=q- +g[ak+56>>2];y=A- +g[ak+60>>2];g[aa>>2]=z- +g[ak+52>>2];g[ab>>2]=o;g[ac>>2]=y;g[ad>>2]=0.0;y=w- +g[al+56>>2];o=x- +g[al+60>>2];g[ae>>2]=p- +g[al+52>>2];g[af>>2]=y;g[ag>>2]=o;g[ah>>2]=0.0;wF(aj,f,h,j,k,e+(ai<<4)|0,ak+392|0,+g[ak+340>>2],al+392|0,+g[al+340>>2])}ai=ai+1|0;}while((ai|0)<3)}ai=b+560|0;e=b+576|0;k=b+592|0;p=+g[ai>>2];x=+g[e>>2];w=+g[k>>2];if(+V(+w)>.7071067690849304){z=x*x+w*w;A=1.0/+W(z);q=A*(-0.0-w);o=x*A;am=z*A;an=o*(-0.0-p);ao=p*q;ap=0.0;aq=q;ar=o}else{o=p*p+x*x;q=1.0/+W(o);A=q*(-0.0-x);z=p*q;am=z*(-0.0-w);an=w*A;ao=o*q;ap=A;aq=z;ar=0.0}j=b+28|0;h=c[j>>2]|0;f=h+4|0;z=+g[f>>2];ah=h+8|0;A=+g[ah>>2];ag=h+12|0;q=+g[ag>>2];o=ap*z+aq*A+ar*q;af=h+20|0;y=+g[af>>2];ae=h+24|0;v=+g[ae>>2];ad=h+28|0;B=+g[ad>>2];C=ap*y+aq*v+ar*B;ac=h+36|0;D=+g[ac>>2];ab=h+40|0;t=+g[ab>>2];aa=h+44|0;u=+g[aa>>2];n=ap*D+aq*t+ar*u;ar=am*z+an*A+ao*q;aq=am*y+an*v+ao*B;ap=am*D+an*t+ao*u;ao=z*p+A*x+q*w;an=y*p+v*x+B*w;am=D*p+t*x+u*w;$=b+300|0;if(($|0)!=0){_=c[b+32>>2]|0;w=+g[_+4>>2];x=+g[_+20>>2];p=+g[_+36>>2];as=+g[_+8>>2];at=+g[_+24>>2];au=+g[_+40>>2];av=+g[_+12>>2];aw=+g[_+28>>2];ax=+g[_+44>>2];K1($|0,0,16)|0;ay=z*o+y*C+D*n;D=A*o+v*C+t*n;t=q*o+B*C+u*n;g[b+316>>2]=ay;g[b+320>>2]=D;g[b+324>>2]=t;g[b+328>>2]=0.0;u=-0.0-o;o=-0.0-C;C=-0.0-n;n=w*u+x*o+p*C;p=as*u+at*o+au*C;au=av*u+aw*o+ax*C;g[b+332>>2]=n;g[b+336>>2]=p;g[b+340>>2]=au;g[b+344>>2]=0.0;C=ay*+g[h+392>>2];ax=D*+g[h+396>>2];o=t*+g[h+400>>2];g[b+348>>2]=C;g[b+352>>2]=ax;g[b+356>>2]=o;g[b+360>>2]=0.0;aw=n*+g[_+392>>2];u=p*+g[_+396>>2];av=au*+g[_+400>>2];g[b+364>>2]=aw;g[b+368>>2]=u;g[b+372>>2]=av;g[b+376>>2]=0.0;g[b+380>>2]=ay*C+D*ax+t*o+(n*aw+p*u+au*av)}_=b+384|0;if((_|0)!=0){av=+g[f>>2];au=+g[af>>2];u=+g[ac>>2];p=+g[ah>>2];aw=+g[ae>>2];n=+g[ab>>2];o=+g[ag>>2];t=+g[ad>>2];ax=+g[aa>>2];$=c[b+32>>2]|0;D=+g[$+4>>2];C=+g[$+20>>2];ay=+g[$+36>>2];at=+g[$+8>>2];as=+g[$+24>>2];x=+g[$+40>>2];w=+g[$+12>>2];B=+g[$+28>>2];q=+g[$+44>>2];K1(_|0,0,16)|0;v=ar*av+aq*au+ap*u;u=ar*p+aq*aw+ap*n;n=ar*o+aq*t+ap*ax;g[b+400>>2]=v;g[b+404>>2]=u;g[b+408>>2]=n;g[b+412>>2]=0.0;ax=-0.0-ar;ar=-0.0-aq;aq=-0.0-ap;ap=D*ax+C*ar+ay*aq;ay=at*ax+as*ar+x*aq;x=w*ax+B*ar+q*aq;g[b+416>>2]=ap;g[b+420>>2]=ay;g[b+424>>2]=x;g[b+428>>2]=0.0;aq=v*+g[h+392>>2];q=u*+g[h+396>>2];ar=n*+g[h+400>>2];g[b+432>>2]=aq;g[b+436>>2]=q;g[b+440>>2]=ar;g[b+444>>2]=0.0;B=ap*+g[$+392>>2];ax=ay*+g[$+396>>2];w=x*+g[$+400>>2];g[b+448>>2]=B;g[b+452>>2]=ax;g[b+456>>2]=w;g[b+460>>2]=0.0;g[b+464>>2]=v*aq+u*q+n*ar+(ap*B+ay*ax+x*w)}$=b+468|0;if(($|0)==0){az=b+32|0}else{w=+g[f>>2];x=+g[af>>2];ax=+g[ac>>2];ay=+g[ah>>2];B=+g[ae>>2];ap=+g[ab>>2];ar=+g[ag>>2];n=+g[ad>>2];q=+g[aa>>2];aa=b+32|0;ad=c[aa>>2]|0;u=+g[ad+4>>2];aq=+g[ad+20>>2];v=+g[ad+36>>2];as=+g[ad+8>>2];at=+g[ad+24>>2];C=+g[ad+40>>2];D=+g[ad+12>>2];t=+g[ad+28>>2];o=+g[ad+44>>2];K1($|0,0,16)|0;aw=ao*w+an*x+am*ax;ax=ao*ay+an*B+am*ap;ap=ao*ar+an*n+am*q;g[b+484>>2]=aw;g[b+488>>2]=ax;g[b+492>>2]=ap;g[b+496>>2]=0.0;q=-0.0-ao;ao=-0.0-an;an=-0.0-am;am=u*q+aq*ao+v*an;v=as*q+at*ao+C*an;C=D*q+t*ao+o*an;g[b+500>>2]=am;g[b+504>>2]=v;g[b+508>>2]=C;g[b+512>>2]=0.0;an=aw*+g[h+392>>2];o=ax*+g[h+396>>2];ao=ap*+g[h+400>>2];g[b+516>>2]=an;g[b+520>>2]=o;g[b+524>>2]=ao;g[b+528>>2]=0.0;t=am*+g[ad+392>>2];q=v*+g[ad+396>>2];D=C*+g[ad+400>>2];g[b+532>>2]=t;g[b+536>>2]=q;g[b+540>>2]=D;g[b+544>>2]=0.0;g[b+548>>2]=aw*an+ax*o+ap*ao+(am*t+v*q+C*D);az=aa}g[b+724>>2]=0.0;D=+xm(b,h+4|0,(c[az>>2]|0)+4|0);g[b+728>>2]=D;x9(b+688|0,D);h=c[j>>2]|0;D=+g[ai>>2];C=+g[e>>2];q=+g[k>>2];v=D*+g[h+4>>2]+C*+g[h+8>>2]+q*+g[h+12>>2];t=D*+g[h+20>>2]+C*+g[h+24>>2]+q*+g[h+28>>2];am=D*+g[h+36>>2]+C*+g[h+40>>2]+q*+g[h+44>>2];k=c[az>>2]|0;g[b+720>>2]=1.0/(v*(v*+g[h+260>>2]+t*+g[h+276>>2]+am*+g[h+292>>2])+t*(v*+g[h+264>>2]+t*+g[h+280>>2]+am*+g[h+296>>2])+am*(v*+g[h+268>>2]+t*+g[h+284>>2]+am*+g[h+300>>2])+(v*(v*+g[k+260>>2]+t*+g[k+276>>2]+am*+g[k+292>>2])+t*(v*+g[k+264>>2]+t*+g[k+280>>2]+am*+g[k+296>>2])+am*(v*+g[k+268>>2]+t*+g[k+284>>2]+am*+g[k+300>>2])));i=d;return}function xi(b,d){b=b|0;d=d|0;var e=0,f=0,h=0.0;e=d|0;if((a[b+738|0]&1)!=0){c[e>>2]=0;c[d+4>>2]=0;return}c[e>>2]=5;f=d+4|0;c[f>>2]=1;h=+xm(b,(c[b+28>>2]|0)+4|0,(c[b+32>>2]|0)+4|0);g[b+728>>2]=h;x9(b+688|0,h);do{if((a[b+716|0]&1)==0){if((a[b+737|0]&1)!=0){break}return}}while(0);c[e>>2]=(c[e>>2]|0)+1;c[f>>2]=(c[f>>2]|0)-1;return}function xj(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;e=c[b+28>>2]|0;f=e+4|0;g=c[b+32>>2]|0;h=g+4|0;i=e+324|0;e=g+324|0;if((a[b+739|0]&1)==0){xl(b,d,f,h,i,e);return}else{xk(b,d,f,h,i,e);return}}function xk(b,d,e,f,h,j){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0,I=0.0,J=0.0,K=0.0,L=0.0,M=0.0,N=0.0,O=0.0,P=0.0,Q=0.0,R=0.0,S=0.0,T=0.0,U=0.0,V=0.0,X=0.0,Y=0.0,Z=0.0,_=0.0,$=0.0,aa=0.0,ab=0,ac=0.0,ad=0.0,ae=0.0,af=0.0,ag=0.0,ah=0.0,ai=0,aj=0,ak=0,al=0,am=0,an=0.0,ao=0;k=i;i=i+128|0;l=k|0;m=k+64|0;n=d+24|0;o=c[n>>2]|0;j_(l,e,b+552|0);j_(m,f,b+616|0);p=+g[m+48>>2];q=+g[l+48>>2];r=p-q;s=+g[m+52>>2];t=+g[l+52>>2];u=s-t;v=+g[m+56>>2];w=+g[l+56>>2];x=v-w;y=+g[(c[b+28>>2]|0)+340>>2];z=+g[(c[b+32>>2]|0)+340>>2];if(y<1.1920928955078125e-7){A=1}else{A=z<1.1920928955078125e-7}B=y+z;if(B>0.0){C=z/B}else{C=.5}B=1.0-C;z=+g[l+8>>2];y=+g[l+24>>2];D=+g[l+40>>2];E=+g[m+8>>2];F=+g[m+24>>2];G=+g[m+40>>2];H=C*z+B*E;I=C*y+B*F;J=C*D+B*G;K=1.0/+W(H*H+I*I+J*J);L=H*K;H=I*K;I=J*K;m=o<<1;K=p- +g[f+48>>2];p=s- +g[f+52>>2];s=v- +g[f+56>>2];v=K*L+p*H+s*I;J=L*v;M=H*v;N=I*v;v=K-J;K=p-M;p=s-N;s=q- +g[e+48>>2];q=t- +g[e+52>>2];t=w- +g[e+56>>2];w=L*s+H*q+I*t;O=L*w;P=H*w;Q=I*w;w=s-O;s=q-P;q=t-Q;t=O-J;J=P-M;M=Q-N;N=w+C*t;Q=s+C*J;P=q+C*M;O=v-B*t;t=K-B*J;J=p-B*M;M=C*v+B*w;w=C*K+B*s;s=C*p+B*q;q=M*M+w*w+s*s;if(q>1.1920928955078125e-7){p=1.0/+W(q);R=p*s;S=p*w;T=M*p}else{R=+g[l+36>>2];S=+g[l+20>>2];T=+g[l+4>>2]}p=H*R-I*S;M=I*T-R*L;w=S*L-H*T;l=d+12|0;g[c[l>>2]>>2]=Q*R-P*S;g[(c[l>>2]|0)+4>>2]=P*T-N*R;g[(c[l>>2]|0)+8>>2]=N*S-Q*T;e=d+20|0;g[c[e>>2]>>2]=-0.0-(t*R-J*S);g[(c[e>>2]|0)+4>>2]=-0.0-(J*T-O*R);g[(c[e>>2]|0)+8>>2]=-0.0-(O*S-t*T);s=Q*w-P*M;q=P*p-N*w;K=N*M-Q*p;v=t*w-J*M;U=J*p-O*w;V=O*M-t*p;do{if(A){if((a[b+716|0]&1)==0){X=s;Y=q;Z=K;_=v;$=U;aa=V;break}X=C*s;Y=C*q;Z=C*K;_=B*v;$=B*U;aa=B*V}else{X=s;Y=q;Z=K;_=v;$=U;aa=V}}while(0);g[(c[l>>2]|0)+(o<<2)>>2]=X;f=o+1|0;g[(c[l>>2]|0)+(f<<2)>>2]=Y;ab=o+2|0;g[(c[l>>2]|0)+(ab<<2)>>2]=Z;g[(c[e>>2]|0)+(o<<2)>>2]=-0.0-_;g[(c[e>>2]|0)+(f<<2)>>2]=-0.0-$;g[(c[e>>2]|0)+(ab<<2)>>2]=-0.0-aa;aa=Q*I-P*H;$=P*L-N*I;P=N*H-Q*L;Q=t*I-J*H;N=J*L-O*I;J=O*H-t*L;if(A){ac=C*aa;ad=C*$;ae=C*P;af=B*Q;ag=B*N;ah=B*J}else{ac=aa;ad=$;ae=P;af=Q;ag=N;ah=J}g[(c[l>>2]|0)+(m<<2)>>2]=ac;A=m|1;g[(c[l>>2]|0)+(A<<2)>>2]=ad;ai=m+2|0;g[(c[l>>2]|0)+(ai<<2)>>2]=ae;g[(c[e>>2]|0)+(m<<2)>>2]=-0.0-af;g[(c[e>>2]|0)+(A<<2)>>2]=-0.0-ag;g[(c[e>>2]|0)+(ai<<2)>>2]=-0.0-ah;aj=d|0;ak=d+4|0;ah=+g[aj>>2]*+g[ak>>2];if((a[b+736|0]&1)==0){al=d+8|0;g[c[al>>2]>>2]=T;g[(c[al>>2]|0)+4>>2]=S;g[(c[al>>2]|0)+8>>2]=R;g[(c[al>>2]|0)+(o<<2)>>2]=p;g[(c[al>>2]|0)+(f<<2)>>2]=M;g[(c[al>>2]|0)+(ab<<2)>>2]=w;g[(c[al>>2]|0)+(m<<2)>>2]=L;g[(c[al>>2]|0)+(A<<2)>>2]=H;g[(c[al>>2]|0)+(ai<<2)>>2]=I;ai=d+28|0;g[c[ai>>2]>>2]=ah*(r*T+u*S+x*R);g[(c[ai>>2]|0)+(o<<2)>>2]=ah*(r*p+u*M+x*w);g[(c[ai>>2]|0)+(m<<2)>>2]=ah*(r*L+u*H+x*I);am=ai}else{am=d+28|0}ai=o*3|0;m=o<<2;g[(c[l>>2]|0)+(ai<<2)>>2]=T;o=ai+1|0;g[(c[l>>2]|0)+(o<<2)>>2]=S;al=ai+2|0;g[(c[l>>2]|0)+(al<<2)>>2]=R;g[(c[l>>2]|0)+(m<<2)>>2]=p;A=m|1;g[(c[l>>2]|0)+(A<<2)>>2]=M;ab=m|2;g[(c[l>>2]|0)+(ab<<2)>>2]=w;g[(c[e>>2]|0)+(ai<<2)>>2]=-0.0-T;g[(c[e>>2]|0)+(o<<2)>>2]=-0.0-S;g[(c[e>>2]|0)+(al<<2)>>2]=-0.0-R;g[(c[e>>2]|0)+(m<<2)>>2]=-0.0-p;g[(c[e>>2]|0)+(A<<2)>>2]=-0.0-M;g[(c[e>>2]|0)+(ab<<2)>>2]=-0.0-w;x=+g[aj>>2]*+g[ak>>2];u=y*G-D*F;r=D*E-z*G;G=z*F-y*E;g[(c[am>>2]|0)+(ai<<2)>>2]=x*(u*T+r*S+G*R);g[(c[am>>2]|0)+(m<<2)>>2]=x*(u*p+r*M+G*w);if((a[b+716|0]&1)==0){an=0.0;ao=0}else{w=+g[b+708>>2]*+g[b+732>>2];an=w;ao=w>0.0?1:2}m=(ao|0)!=0;ai=(a[b+737|0]&1)==0;if(ai&(m^1)){i=k;return}ab=(c[n>>2]|0)*5|0;g[(c[l>>2]|0)+(ab<<2)>>2]=L;n=ab+1|0;g[(c[l>>2]|0)+(n<<2)>>2]=H;A=ab+2|0;g[(c[l>>2]|0)+(A<<2)>>2]=I;g[(c[e>>2]|0)+(ab<<2)>>2]=-0.0-L;g[(c[e>>2]|0)+(n<<2)>>2]=-0.0-H;g[(c[e>>2]|0)+(A<<2)>>2]=-0.0-I;A=b+688|0;w=+yc(A);G=+yb(A);A=w==G;g[(c[am>>2]|0)+(ab<<2)>>2]=0.0;e=b+748|0;n=c[e>>2]|0;M=+g[((n&2|0)==0?ak:b+760|0)>>2];if(!(m&A|ai)){if((n&4|0)!=0){g[(c[d+32>>2]|0)+(ab<<2)>>2]=+g[b+752>>2]}n=b+680|0;r=+x5(b|0,+g[b+728>>2],w,G,+g[n>>2],M*+g[aj>>2]);ai=(c[am>>2]|0)+(ab<<2)|0;g[ai>>2]=r*+g[n>>2]*+g[b+732>>2]+ +g[ai>>2];ai=b+684|0;g[(c[d+36>>2]|0)+(ab<<2)>>2]=-0.0- +g[ai>>2];g[(c[d+40>>2]|0)+(ab<<2)>>2]=+g[ai>>2]}if(!m){i=k;return}m=(c[am>>2]|0)+(ab<<2)|0;g[m>>2]=+g[m>>2]+an*M*+g[aj>>2];if((c[e>>2]&1|0)!=0){g[(c[d+32>>2]|0)+(ab<<2)>>2]=+g[b+756>>2]}do{if(A){g[(c[d+36>>2]|0)+(ab<<2)>>2]=-3.4028234663852886e+38;g[(c[d+40>>2]|0)+(ab<<2)>>2]=3.4028234663852886e+38}else{e=(c[d+36>>2]|0)+(ab<<2)|0;if((ao|0)==1){g[e>>2]=0.0;g[(c[d+40>>2]|0)+(ab<<2)>>2]=3.4028234663852886e+38;break}else{g[e>>2]=-3.4028234663852886e+38;g[(c[d+40>>2]|0)+(ab<<2)>>2]=0.0;break}}}while(0);M=+g[b+704>>2];do{if(M>0.0){an=+g[h>>2]*L+ +g[h+4>>2]*H+ +g[h+8>>2]*I-(L*+g[j>>2]+H*+g[j+4>>2]+I*+g[j+8>>2]);if((ao|0)==1){if(an>=0.0){break}r=an*(-0.0-M);d=(c[am>>2]|0)+(ab<<2)|0;if(r<=+g[d>>2]){break}g[d>>2]=r;break}else{if(an<=0.0){break}r=an*(-0.0-M);d=(c[am>>2]|0)+(ab<<2)|0;if(r>=+g[d>>2]){break}g[d>>2]=r;break}}}while(0);ao=(c[am>>2]|0)+(ab<<2)|0;g[ao>>2]=+g[b+700>>2]*+g[ao>>2];i=k;return}function xl(b,d,e,f,h,j){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0,I=0.0,J=0.0,K=0.0,L=0.0,M=0.0,N=0.0,O=0.0,P=0;k=i;i=i+160|0;l=k|0;m=k+64|0;n=k+128|0;o=k+144|0;p=d+24|0;q=c[p>>2]|0;j_(l,e,b+552|0);j_(m,f,b+616|0);r=n;s=l+48|0;c[r>>2]=c[s>>2];c[r+4>>2]=c[s+4>>2];c[r+8>>2]=c[s+8>>2];c[r+12>>2]=c[s+12>>2];s=o;r=m+48|0;c[s>>2]=c[r>>2];c[s+4>>2]=c[r+4>>2];c[s+8>>2]=c[r+8>>2];c[s+12>>2]=c[r+12>>2];r=b+736|0;if((a[r]&1)==0){s=d+8|0;g[c[s>>2]>>2]=1.0;t=q+1|0;g[(c[s>>2]|0)+(t<<2)>>2]=1.0;u=q<<1;v=u+2|0;g[(c[s>>2]|0)+(v<<2)>>2]=1.0;w=u;x=t;y=v}else{v=q<<1;w=v;x=q+1|0;y=v+2|0}z=+g[n>>2];A=z- +g[e+48>>2];B=+g[n+4>>2];C=B- +g[e+52>>2];D=+g[n+8>>2];E=D- +g[e+56>>2];e=d+12|0;n=c[e>>2]|0;g[n>>2]=0.0;g[n+4>>2]=E;g[n+8>>2]=-0.0-C;g[n+12>>2]=0.0;g[n+(q<<2)>>2]=-0.0-E;g[n+(x<<2)>>2]=0.0;v=q+2|0;g[n+(v<<2)>>2]=A;t=q+3|0;g[n+(t<<2)>>2]=0.0;g[n+(w<<2)>>2]=C;u=w|1;g[n+(u<<2)>>2]=-0.0-A;g[n+(y<<2)>>2]=0.0;s=w+3|0;g[n+(s<<2)>>2]=0.0;A=+g[o>>2];C=A- +g[f+48>>2];E=+g[o+4>>2];F=E- +g[f+52>>2];G=+g[o+8>>2];H=G- +g[f+56>>2];f=d+20|0;o=c[f>>2]|0;g[o>>2]=0.0;g[o+4>>2]=-0.0-H;g[o+8>>2]=F;g[o+12>>2]=0.0;g[o+(q<<2)>>2]=H;g[o+(x<<2)>>2]=0.0;g[o+(v<<2)>>2]=-0.0-C;g[o+(t<<2)>>2]=0.0;g[o+(w<<2)>>2]=-0.0-F;g[o+(u<<2)>>2]=C;g[o+(y<<2)>>2]=0.0;g[o+(s<<2)>>2]=0.0;s=d|0;o=d+4|0;C=+g[s>>2]*+g[o>>2];y=d+28|0;if((a[r]&1)==0){g[c[y>>2]>>2]=C*(A-z);g[(c[y>>2]|0)+(q<<2)>>2]=C*(E-B);g[(c[y>>2]|0)+(q<<1<<2)>>2]=C*(G-D)}D=+g[l+8>>2];G=+g[l+24>>2];B=+g[l+40>>2];E=+g[l>>2];z=+g[l+16>>2];A=+g[l+32>>2];F=+g[l+4>>2];H=+g[l+20>>2];I=+g[l+36>>2];l=c[p>>2]|0;q=l*3|0;r=l<<2;g[(c[e>>2]|0)+(q<<2)>>2]=E;l=q+1|0;g[(c[e>>2]|0)+(l<<2)>>2]=z;u=q+2|0;g[(c[e>>2]|0)+(u<<2)>>2]=A;g[(c[e>>2]|0)+(r<<2)>>2]=F;w=r|1;g[(c[e>>2]|0)+(w<<2)>>2]=H;t=r|2;g[(c[e>>2]|0)+(t<<2)>>2]=I;g[(c[f>>2]|0)+(q<<2)>>2]=-0.0-E;g[(c[f>>2]|0)+(l<<2)>>2]=-0.0-z;g[(c[f>>2]|0)+(u<<2)>>2]=-0.0-A;g[(c[f>>2]|0)+(r<<2)>>2]=-0.0-F;g[(c[f>>2]|0)+(w<<2)>>2]=-0.0-H;g[(c[f>>2]|0)+(t<<2)>>2]=-0.0-I;J=+g[m+8>>2];K=+g[m+24>>2];L=+g[m+40>>2];M=G*L-B*K;N=B*J-D*L;L=D*K-G*J;g[(c[y>>2]|0)+(q<<2)>>2]=C*(A*L+(E*M+z*N));g[(c[y>>2]|0)+(r<<2)>>2]=C*(I*L+(F*M+H*N));if((a[b+716|0]&1)==0){O=0.0;P=0}else{N=+g[b+708>>2]*+g[b+732>>2];O=N;P=N>0.0?1:2}r=(P|0)!=0;q=(a[b+737|0]&1)==0;if(q&(r^1)){i=k;return}m=(c[p>>2]|0)*5|0;g[(c[e>>2]|0)+(m<<2)>>2]=D;p=m+1|0;g[(c[e>>2]|0)+(p<<2)>>2]=G;t=m+2|0;g[(c[e>>2]|0)+(t<<2)>>2]=B;g[(c[f>>2]|0)+(m<<2)>>2]=-0.0-D;g[(c[f>>2]|0)+(p<<2)>>2]=-0.0-G;g[(c[f>>2]|0)+(t<<2)>>2]=-0.0-B;t=b+688|0;N=+yc(t);H=+yb(t);t=N==H;g[(c[y>>2]|0)+(m<<2)>>2]=0.0;f=b+748|0;p=c[f>>2]|0;M=+g[((p&2|0)==0?o:b+760|0)>>2];if(!(r&t|q)){if((p&4|0)!=0){g[(c[d+32>>2]|0)+(m<<2)>>2]=+g[b+752>>2]}p=b+680|0;F=+x5(b|0,+g[b+728>>2],N,H,+g[p>>2],M*+g[s>>2]);q=(c[y>>2]|0)+(m<<2)|0;g[q>>2]=F*+g[p>>2]*+g[b+732>>2]+ +g[q>>2];q=b+684|0;g[(c[d+36>>2]|0)+(m<<2)>>2]=-0.0- +g[q>>2];g[(c[d+40>>2]|0)+(m<<2)>>2]=+g[q>>2]}if(!r){i=k;return}r=(c[y>>2]|0)+(m<<2)|0;g[r>>2]=+g[r>>2]+O*M*+g[s>>2];if((c[f>>2]&1|0)!=0){g[(c[d+32>>2]|0)+(m<<2)>>2]=+g[b+756>>2]}do{if(t){g[(c[d+36>>2]|0)+(m<<2)>>2]=-3.4028234663852886e+38;g[(c[d+40>>2]|0)+(m<<2)>>2]=3.4028234663852886e+38}else{f=(c[d+36>>2]|0)+(m<<2)|0;if((P|0)==1){g[f>>2]=0.0;g[(c[d+40>>2]|0)+(m<<2)>>2]=3.4028234663852886e+38;break}else{g[f>>2]=-3.4028234663852886e+38;g[(c[d+40>>2]|0)+(m<<2)>>2]=0.0;break}}}while(0);M=+g[b+704>>2];do{if(M>0.0){O=D*+g[h>>2]+G*+g[h+4>>2]+B*+g[h+8>>2]-(D*+g[j>>2]+G*+g[j+4>>2]+B*+g[j+8>>2]);if((P|0)==1){if(O>=0.0){break}F=O*(-0.0-M);d=(c[y>>2]|0)+(m<<2)|0;if(F<=+g[d>>2]){break}g[d>>2]=F;break}else{if(O<=0.0){break}F=O*(-0.0-M);d=(c[y>>2]|0)+(m<<2)|0;if(F>=+g[d>>2]){break}g[d>>2]=F;break}}}while(0);P=(c[y>>2]|0)+(m<<2)|0;g[P>>2]=+g[b+700>>2]*+g[P>>2];i=k;return}function xm(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0,e=0.0,f=0.0,h=0.0,i=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0;d=+g[a+552>>2];e=+g[a+568>>2];f=+g[a+584>>2];h=+g[b>>2];i=+g[b+4>>2];j=+g[b+8>>2];k=+g[b+16>>2];l=+g[b+20>>2];m=+g[b+24>>2];n=+g[b+32>>2];o=+g[b+36>>2];p=+g[b+40>>2];q=+g[a+556>>2];r=+g[a+572>>2];s=+g[a+588>>2];t=+g[a+620>>2];u=+g[a+636>>2];v=+g[a+652>>2];w=t*+g[c>>2]+u*+g[c+4>>2]+v*+g[c+8>>2];x=t*+g[c+16>>2]+u*+g[c+20>>2]+v*+g[c+24>>2];y=t*+g[c+32>>2]+u*+g[c+36>>2]+v*+g[c+40>>2];v=+ac(+((d*h+e*i+f*j)*w+(d*k+e*l+f*m)*x+(d*n+e*o+f*p)*y),+((h*q+i*r+j*s)*w+(k*q+l*r+m*s)*x+(n*q+o*r+p*s)*y));return+(v*+g[a+732>>2])}function xn(a,b,d){a=a|0;b=b|0;d=+d;var e=0,f=0,h=0,j=0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0.0,R=0.0,S=0.0,T=0.0,U=0;e=i;i=i+40|0;f=e|0;h=e+8|0;j=e+24|0;i_(a+616|0,h);k=-0.0- +g[h>>2];l=-0.0- +g[h+4>>2];m=-0.0- +g[h+8>>2];n=+g[h+12>>2];o=+g[b>>2];p=+g[b+12>>2];q=+g[b+8>>2];r=+g[b+4>>2];s=n*o+p*k+q*l-r*m;t=o*m+(p*l+n*r)-q*k;u=p*m+n*q+r*k-o*l;v=n*p-o*k-r*l-q*m;i_(a+552|0,j);m=+g[j>>2];q=+g[j+12>>2];l=+g[j+8>>2];r=+g[j+4>>2];k=m*v+s*q+t*l-u*r;o=m*u+(q*t+v*r)-s*l;p=q*u+v*l+s*r-m*t;n=v*q-m*s-t*r-u*l;l=1.0/+W(n*n+(p*p+(k*k+o*o)));u=k*l;k=l*o;o=l*p;p=l*n;n=+g[12280];l=+g[12282];r=+g[12281];t=n*p+l*k-o*r;s=n*o+p*r-u*l;m=p*l+u*r-n*k;q=-0.0-u;v=n*q-k*r-l*o;w=-0.0-k;x=-0.0-o;y=s*x+(p*t+v*q)-m*w;z=m*q+(p*s+v*w)-t*x;A=t*w+(p*m+v*x)-s*q;q=1.0/+W(A*A+(y*y+z*z));s=q*y;y=q*z;z=q*A;A=l*z+(r*y+n*s);do{if(A<-.9999998807907104){if(+V(+l)>.7071067690849304){q=1.0/+W(l*l+r*r);B=0.0;C=q*(-0.0-l);D=r*q;E=0.0;break}else{q=1.0/+W(n*n+r*r);B=q*(-0.0-r);C=n*q;D=0.0;E=0.0;break}}else{q=+W((A+1.0)*2.0);x=1.0/q;B=(r*z-l*y)*x;C=(l*s-n*z)*x;D=(n*y-r*s)*x;E=q*.5}}while(0);s=-0.0-B;B=-0.0-C;C=-0.0-D;D=o*B+(u*E+p*s)-k*C;r=u*C+(k*E+p*B)-o*s;y=o*E+p*C+k*s-u*B;n=p*E-u*s-k*B-o*C;C=1.0/+W(n*n+(y*y+(r*r+D*D)));D=C*y;y=C*n;n=y<-1.0?-1.0:y;C=+$(n>1.0?1.0:n)*2.0;if(C>3.1415927410125732){n=y>1.0?-1.0:-0.0-y;F=+$(n>1.0?1.0:n)*2.0;G=-0.0-D}else{F=C;G=D}if(G>=0.0){H=F;I=f;g[f>>2]=H;J=a+688|0;ya(J,f);K=a+28|0;L=c[K>>2]|0;M=L+4|0;N=a+32|0;O=c[N>>2]|0;P=O+4|0;Q=+xm(a,M,P);R=+g[f>>2];S=R-Q;T=S/d;U=a+680|0;g[U>>2]=T;i=e;return}H=-0.0-F;I=f;g[f>>2]=H;J=a+688|0;ya(J,f);K=a+28|0;L=c[K>>2]|0;M=L+4|0;N=a+32|0;O=c[N>>2]|0;P=O+4|0;Q=+xm(a,M,P);R=+g[f>>2];S=R-Q;T=S/d;U=a+680|0;g[U>>2]=T;i=e;return}function xo(a,b,d){a=a|0;b=+b;d=+d;var e=0,f=0;e=i;i=i+8|0;f=e|0;g[f>>2]=b;ya(a+688|0,f);b=+xm(a,(c[a+28>>2]|0)+4|0,(c[a+32>>2]|0)+4|0);g[a+680>>2]=(+g[f>>2]-b)/d;i=e;return}function xp(a,b,d,e){a=a|0;b=b|0;d=+d;e=e|0;if(!((e|0)==(-1|0)|(e|0)==5)){return}if((b|0)==4){g[a+756>>2]=d;e=a+748|0;c[e>>2]=c[e>>2]|1;return}else if((b|0)==2){g[a+760>>2]=d;e=a+748|0;c[e>>2]=c[e>>2]|2;return}else if((b|0)==3){g[a+752>>2]=d;b=a+748|0;c[b>>2]=c[b>>2]|4;return}else{return}}function xq(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0;do{if((c|0)==(-1|0)|(c|0)==5){if((b|0)==2){d=+g[a+760>>2];break}else if((b|0)==3){d=+g[a+752>>2];break}else if((b|0)==4){d=+g[a+756>>2];break}else{d=0.0;break}}else{d=0.0}}while(0);return+d}function xr(a){a=a|0;return}function xs(a){a=a|0;zw(a);return}function xt(a){a=a|0;return 220}function xu(b,d,e){b=b|0;d=d|0;e=e|0;x6(b|0,d,e)|0;g[d+52>>2]=+g[b+552>>2];g[d+56>>2]=+g[b+556>>2];g[d+60>>2]=+g[b+560>>2];g[d+64>>2]=+g[b+564>>2];g[d+68>>2]=+g[b+568>>2];g[d+72>>2]=+g[b+572>>2];g[d+76>>2]=+g[b+576>>2];g[d+80>>2]=+g[b+580>>2];g[d+84>>2]=+g[b+584>>2];g[d+88>>2]=+g[b+588>>2];g[d+92>>2]=+g[b+592>>2];g[d+96>>2]=+g[b+596>>2];g[d+100>>2]=+g[b+600>>2];g[d+104>>2]=+g[b+604>>2];g[d+108>>2]=+g[b+608>>2];g[d+112>>2]=+g[b+612>>2];g[d+116>>2]=+g[b+616>>2];g[d+120>>2]=+g[b+620>>2];g[d+124>>2]=+g[b+624>>2];g[d+128>>2]=+g[b+628>>2];g[d+132>>2]=+g[b+632>>2];g[d+136>>2]=+g[b+636>>2];g[d+140>>2]=+g[b+640>>2];g[d+144>>2]=+g[b+644>>2];g[d+148>>2]=+g[b+648>>2];g[d+152>>2]=+g[b+652>>2];g[d+156>>2]=+g[b+656>>2];g[d+160>>2]=+g[b+660>>2];g[d+164>>2]=+g[b+664>>2];g[d+168>>2]=+g[b+668>>2];g[d+172>>2]=+g[b+672>>2];g[d+176>>2]=+g[b+676>>2];c[d+184>>2]=a[b+736|0]&1;c[d+188>>2]=a[b+737|0]&1;g[d+196>>2]=+g[b+684>>2];g[d+192>>2]=+g[b+680>>2];c[d+180>>2]=a[b+740|0]&1;e=b+688|0;g[d+200>>2]=+yc(e);g[d+204>>2]=+yb(e);g[d+208>>2]=+g[b+696>>2];g[d+212>>2]=+g[b+700>>2];g[d+216>>2]=+g[b+704>>2];return 13136}function xv(b,d,e,f,h){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;x4(b|0,3,d,e);c[b>>2]=31928;e=b+300|0;d=f;c[e>>2]=c[d>>2];c[e+4>>2]=c[d+4>>2];c[e+8>>2]=c[d+8>>2];c[e+12>>2]=c[d+12>>2];d=b+316|0;e=h;c[d>>2]=c[e>>2];c[d+4>>2]=c[e+4>>2];c[d+8>>2]=c[e+8>>2];c[d+12>>2]=c[e+12>>2];c[b+332>>2]=0;a[b+344|0]=0;g[b+348>>2]=.30000001192092896;g[b+352>>2]=1.0;g[b+356>>2]=0.0;return}function xw(a){a=a|0;var b=0,d=0,e=0,f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0.0,ab=0.0,ac=0.0,ad=0.0,ae=0.0,af=0.0,ag=0.0,ah=0.0,ai=0.0,aj=0,ak=0.0,al=0.0,am=0.0,an=0.0,ao=0.0,ap=0.0,aq=0.0,ar=0.0,as=0.0,at=0.0,au=0.0,av=0.0,aw=0.0,ax=0.0,ay=0.0;b=i;i=i+144|0;d=b|0;e=b+16|0;f=b+64|0;h=b+112|0;j=b+128|0;g[a+36>>2]=0.0;k=a+28|0;l=e|0;m=e+4|0;n=e+8|0;o=e+12|0;p=e+16|0;q=e+20|0;r=e+24|0;s=e+28|0;t=e+32|0;u=e+36|0;v=e+40|0;w=e+44|0;x=a+32|0;y=f|0;z=f+4|0;A=f+8|0;B=f+12|0;C=f+16|0;D=f+20|0;E=f+24|0;F=f+28|0;G=f+32|0;H=f+36|0;I=f+40|0;J=f+44|0;K=a+300|0;L=a+304|0;M=a+308|0;N=h|0;O=h+4|0;P=h+8|0;Q=h+12|0;R=a+316|0;S=a+320|0;T=a+324|0;U=j|0;V=j+4|0;W=j+8|0;X=j+12|0;K1(d|0,0,16)|0;Y=0;do{Z=d+(Y<<2)|0;g[Z>>2]=1.0;_=a+48+(Y*84|0)|0;if((_|0)!=0){$=c[k>>2]|0;aa=+g[$+4>>2];g[l>>2]=aa;ab=+g[$+20>>2];g[m>>2]=ab;ac=+g[$+36>>2];g[n>>2]=ac;g[o>>2]=0.0;ad=+g[$+8>>2];g[p>>2]=ad;ae=+g[$+24>>2];g[q>>2]=ae;af=+g[$+40>>2];g[r>>2]=af;g[s>>2]=0.0;ag=+g[$+12>>2];g[t>>2]=ag;ah=+g[$+28>>2];g[u>>2]=ah;ai=+g[$+44>>2];g[v>>2]=ai;g[w>>2]=0.0;aj=c[x>>2]|0;ak=+g[aj+4>>2];g[y>>2]=ak;al=+g[aj+20>>2];g[z>>2]=al;am=+g[aj+36>>2];g[A>>2]=am;g[B>>2]=0.0;an=+g[aj+8>>2];g[C>>2]=an;ao=+g[aj+24>>2];g[D>>2]=ao;ap=+g[aj+40>>2];g[E>>2]=ap;g[F>>2]=0.0;aq=+g[aj+12>>2];g[G>>2]=aq;ar=+g[aj+28>>2];g[H>>2]=ar;as=+g[aj+44>>2];g[I>>2]=as;g[J>>2]=0.0;at=+g[K>>2];au=+g[L>>2];av=+g[M>>2];aw=+g[$+52>>2];ax=+g[$+56>>2];ay=+g[$+60>>2];g[N>>2]=at*aa+au*ad+av*ag+aw-aw;g[O>>2]=at*ab+au*ae+av*ah+ax-ax;g[P>>2]=at*ac+au*af+av*ai+ay-ay;g[Q>>2]=0.0;ay=+g[R>>2];ai=+g[S>>2];av=+g[T>>2];af=+g[aj+52>>2];au=+g[aj+56>>2];ac=+g[aj+60>>2];g[U>>2]=ay*ak+ai*an+av*aq+af-af;g[V>>2]=ay*al+ai*ao+av*ar+au-au;g[W>>2]=ay*am+ai*ap+av*as+ac-ac;g[X>>2]=0.0;wF(_,e,f,h,j,d,$+392|0,+g[$+340>>2],aj+392|0,+g[aj+340>>2])}g[Z>>2]=0.0;Y=Y+1|0;}while((Y|0)<3);i=b;return}function xx(b,d){b=b|0;d=d|0;var e=0;e=d|0;if((a[b+344|0]&1)==0){c[e>>2]=3;c[d+4>>2]=3;return}else{c[e>>2]=0;c[d+4>>2]=0;return}}function xy(a,b){a=a|0;b=b|0;xz(a,b,(c[a+28>>2]|0)+4|0,(c[a+32>>2]|0)+4|0);return}function xz(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,h=0,i=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0,p=0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0,w=0.0,x=0;f=b+8|0;g[c[f>>2]>>2]=1.0;h=b+24|0;g[(c[f>>2]|0)+((c[h>>2]|0)+1<<2)>>2]=1.0;g[(c[f>>2]|0)+((c[h>>2]<<1)+2<<2)>>2]=1.0;i=+g[a+300>>2];j=+g[a+304>>2];k=+g[a+308>>2];l=+g[d>>2]*i+ +g[d+4>>2]*j+ +g[d+8>>2]*k;m=i*+g[d+16>>2]+j*+g[d+20>>2]+k*+g[d+24>>2];n=i*+g[d+32>>2]+j*+g[d+36>>2]+k*+g[d+40>>2];f=c[b+12>>2]|0;o=c[h>>2]|0;p=o<<1;g[f>>2]=0.0;g[f+4>>2]=n;g[f+8>>2]=-0.0-m;g[f+12>>2]=0.0;g[f+(o<<2)>>2]=-0.0-n;g[f+(o+1<<2)>>2]=0.0;g[f+(o+2<<2)>>2]=l;g[f+(o+3<<2)>>2]=0.0;g[f+(p<<2)>>2]=m;g[f+((p|1)<<2)>>2]=-0.0-l;g[f+(p+2<<2)>>2]=0.0;g[f+(p+3<<2)>>2]=0.0;k=+g[a+316>>2];j=+g[a+320>>2];i=+g[a+324>>2];q=+g[e>>2]*k+ +g[e+4>>2]*j+ +g[e+8>>2]*i;r=k*+g[e+16>>2]+j*+g[e+20>>2]+i*+g[e+24>>2];s=k*+g[e+32>>2]+j*+g[e+36>>2]+i*+g[e+40>>2];p=c[b+20>>2]|0;f=c[h>>2]|0;o=f<<1;g[p>>2]=0.0;g[p+4>>2]=-0.0-s;g[p+8>>2]=r;g[p+12>>2]=0.0;g[p+(f<<2)>>2]=s;g[p+(f+1<<2)>>2]=0.0;g[p+(f+2<<2)>>2]=-0.0-q;g[p+(f+3<<2)>>2]=0.0;g[p+(o<<2)>>2]=-0.0-r;g[p+((o|1)<<2)>>2]=q;g[p+(o+2<<2)>>2]=0.0;g[p+(o+3<<2)>>2]=0.0;o=a+332|0;i=+g[((c[o>>2]&1|0)==0?b+4|0:a+336|0)>>2]*+g[b>>2];p=b+28|0;g[c[p>>2]>>2]=i*(q+ +g[e+48>>2]-l- +g[d+48>>2]);g[(c[p>>2]|0)+(c[h>>2]<<2)>>2]=i*(r+ +g[e+52>>2]-m- +g[d+52>>2]);g[(c[p>>2]|0)+(c[h>>2]<<1<<2)>>2]=i*(s+ +g[e+56>>2]-n- +g[d+56>>2]);if((c[o>>2]&2|0)!=0){o=a+340|0;d=b+32|0;g[c[d>>2]>>2]=+g[o>>2];g[(c[d>>2]|0)+(c[h>>2]<<2)>>2]=+g[o>>2];g[(c[d>>2]|0)+(c[h>>2]<<1<<2)>>2]=+g[o>>2]}o=a+356|0;n=+g[o>>2];s=-0.0-n;d=b+36|0;e=b+40|0;if(n>0.0){g[c[d>>2]>>2]=s;g[c[e>>2]>>2]=n;t=+g[o>>2]}else{t=n}if(t>0.0){g[(c[d>>2]|0)+(c[h>>2]<<2)>>2]=s;g[(c[e>>2]|0)+(c[h>>2]<<2)>>2]=n;u=+g[o>>2]}else{u=t}if(u<=0.0){v=a+352|0;w=+g[v>>2];x=b+52|0;g[x>>2]=w;return}g[(c[d>>2]|0)+(c[h>>2]<<1<<2)>>2]=s;g[(c[e>>2]|0)+(c[h>>2]<<1<<2)>>2]=n;v=a+352|0;w=+g[v>>2];x=b+52|0;g[x>>2]=w;return}function xA(a,b,d,e){a=a|0;b=b|0;d=+d;e=e|0;if((e|0)!=-1){return}if((b|0)==3|(b|0)==4){g[a+340>>2]=d;e=a+332|0;c[e>>2]=c[e>>2]|2;return}else if((b|0)==1|(b|0)==2){g[a+336>>2]=d;b=a+332|0;c[b>>2]=c[b>>2]|1;return}else{return}}function xB(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0;do{if((c|0)==-1){if((b|0)==3|(b|0)==4){d=+g[a+340>>2];break}else if((b|0)==1|(b|0)==2){d=+g[a+336>>2];break}else{d=3.4028234663852886e+38;break}}else{d=3.4028234663852886e+38}}while(0);return+d}function xC(a){a=a|0;return}function xD(a){a=a|0;zw(a);return}function xE(a){a=a|0;return 84}function xF(a,b,c){a=a|0;b=b|0;c=c|0;x6(a|0,b,c)|0;g[b+52>>2]=+g[a+300>>2];g[b+56>>2]=+g[a+304>>2];g[b+60>>2]=+g[a+308>>2];g[b+64>>2]=+g[a+312>>2];g[b+68>>2]=+g[a+316>>2];g[b+72>>2]=+g[a+320>>2];g[b+76>>2]=+g[a+324>>2];g[b+80>>2]=+g[a+328>>2];return 13040}function xG(b){b=b|0;c[b>>2]=30832;a[b+20|0]=1;c[b+16>>2]=0;c[b+8>>2]=0;c[b+12>>2]=0;a[b+40|0]=1;c[b+36>>2]=0;c[b+28>>2]=0;c[b+32>>2]=0;a[b+60|0]=1;c[b+56>>2]=0;c[b+48>>2]=0;c[b+52>>2]=0;a[b+80|0]=1;c[b+76>>2]=0;c[b+68>>2]=0;c[b+72>>2]=0;a[b+100|0]=1;c[b+96>>2]=0;c[b+88>>2]=0;c[b+92>>2]=0;a[b+120|0]=1;c[b+116>>2]=0;c[b+108>>2]=0;c[b+112>>2]=0;a[b+140|0]=1;c[b+136>>2]=0;c[b+128>>2]=0;c[b+132>>2]=0;a[b+160|0]=1;c[b+156>>2]=0;c[b+148>>2]=0;c[b+152>>2]=0;a[b+180|0]=1;c[b+176>>2]=0;c[b+168>>2]=0;c[b+172>>2]=0;c[b+188>>2]=0;return}function xH(a){a=a|0;xI(a);zw(a);return}function xI(b){b=b|0;var d=0,e=0,f=0,g=0,h=0;c[b>>2]=30832;d=b+168|0;e=b+176|0;f=c[e>>2]|0;g=b+180|0;if((f|0)!=0){if((a[g]&1)!=0){zw(f)}c[e>>2]=0}a[g]=1;c[e>>2]=0;c[d>>2]=0;c[b+172>>2]=0;d=b+148|0;e=b+156|0;g=c[e>>2]|0;f=b+160|0;if((g|0)!=0){if((a[f]&1)!=0){zw(g)}c[e>>2]=0}a[f]=1;c[e>>2]=0;c[d>>2]=0;c[b+152>>2]=0;d=b+128|0;e=b+136|0;f=c[e>>2]|0;g=b+140|0;if((f|0)!=0){if((a[g]&1)!=0){zw(f)}c[e>>2]=0}a[g]=1;c[e>>2]=0;c[d>>2]=0;c[b+132>>2]=0;d=b+108|0;e=b+116|0;g=c[e>>2]|0;f=b+120|0;if((g|0)!=0){if((a[f]&1)!=0){zw(g)}c[e>>2]=0}a[f]=1;c[e>>2]=0;c[d>>2]=0;c[b+112>>2]=0;d=b+88|0;e=b+96|0;f=c[e>>2]|0;g=b+100|0;if((f|0)!=0){if((a[g]&1)!=0){zw(f)}c[e>>2]=0}a[g]=1;c[e>>2]=0;c[d>>2]=0;c[b+92>>2]=0;d=b+68|0;e=b+76|0;g=c[e>>2]|0;f=b+80|0;if((g|0)!=0){if((a[f]&1)!=0){zw(g)}c[e>>2]=0}a[f]=1;c[e>>2]=0;c[d>>2]=0;c[b+72>>2]=0;d=b+48|0;e=b+56|0;f=c[e>>2]|0;g=b+60|0;if((f|0)!=0){if((a[g]&1)!=0){zw(f)}c[e>>2]=0}a[g]=1;c[e>>2]=0;c[d>>2]=0;c[b+52>>2]=0;d=b+28|0;e=b+36|0;g=c[e>>2]|0;f=b+40|0;if((g|0)!=0){if((a[f]&1)!=0){zw(g)}c[e>>2]=0}a[f]=1;c[e>>2]=0;c[d>>2]=0;c[b+32>>2]=0;d=b+8|0;e=b+16|0;f=c[e>>2]|0;g=b+20|0;if((f|0)==0){a[g]=1;c[e>>2]=0;c[d>>2]=0;h=b+12|0;c[h>>2]=0;return}if((a[g]&1)!=0){zw(f)}c[e>>2]=0;a[g]=1;c[e>>2]=0;c[d>>2]=0;h=b+12|0;c[h>>2]=0;return}function xJ(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0.0,h=0,i=0.0,j=0,k=0,l=0.0,m=0,n=0,o=0.0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0;a=e+84|0;f=+g[a>>2];h=e+16|0;i=+g[h>>2];j=b+64|0;k=e+20|0;l=+g[k>>2];m=b+68|0;n=e+24|0;o=+g[n>>2];p=b+72|0;q=b+80|0;r=b+84|0;s=b+88|0;t=d+64|0;u=d+68|0;v=d+72|0;w=d+80|0;x=d+84|0;y=d+88|0;z=+g[e+92>>2];A=+g[e+96>>2]-f*+g[e+100>>2]-(i*+g[j>>2]+l*+g[m>>2]+o*+g[p>>2]+(+g[e>>2]*+g[q>>2]+ +g[e+4>>2]*+g[r>>2]+ +g[e+8>>2]*+g[s>>2]))*z-z*(+g[e+32>>2]*+g[w>>2]+ +g[e+36>>2]*+g[x>>2]+ +g[e+40>>2]*+g[y>>2]-(i*+g[t>>2]+l*+g[u>>2]+o*+g[v>>2]));z=f+A;B=+g[e+104>>2];do{if(z<B){g[a>>2]=B;C=B-f}else{D=+g[e+108>>2];if(z>D){g[a>>2]=D;C=D-f;break}else{g[a>>2]=z;C=A;break}}}while(0);if((c[b+208>>2]|0)!=0){A=C*+g[b+132>>2]*l*+g[b+116>>2];l=C*+g[b+136>>2]*o*+g[b+120>>2];g[j>>2]=+g[b+112>>2]*C*+g[b+128>>2]*i+ +g[j>>2];g[m>>2]=A+ +g[m>>2];g[p>>2]=l+ +g[p>>2];l=C*+g[b+100>>2]*+g[e+52>>2];A=C*+g[b+104>>2]*+g[e+56>>2];g[q>>2]=C*+g[b+96>>2]*+g[e+48>>2]+ +g[q>>2];g[r>>2]=l+ +g[r>>2];g[s>>2]=A+ +g[s>>2]}if((c[d+208>>2]|0)==0){return}A=C*+g[d+132>>2]*(-0.0- +g[k>>2])*+g[d+116>>2];l=C*+g[d+136>>2]*(-0.0- +g[n>>2])*+g[d+120>>2];g[t>>2]=+g[d+112>>2]*C*+g[d+128>>2]*(-0.0- +g[h>>2])+ +g[t>>2];g[u>>2]=A+ +g[u>>2];g[v>>2]=l+ +g[v>>2];l=C*+g[d+100>>2]*+g[e+68>>2];A=C*+g[d+104>>2]*+g[e+72>>2];g[w>>2]=C*+g[d+96>>2]*+g[e+64>>2]+ +g[w>>2];g[x>>2]=l+ +g[x>>2];g[y>>2]=A+ +g[y>>2];return}function xK(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0.0,h=0,i=0.0,j=0,k=0,l=0.0,m=0,n=0,o=0.0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0;a=e+84|0;f=+g[a>>2];h=e+16|0;i=+g[h>>2];j=b+64|0;k=e+20|0;l=+g[k>>2];m=b+68|0;n=e+24|0;o=+g[n>>2];p=b+72|0;q=b+80|0;r=b+84|0;s=b+88|0;t=d+64|0;u=d+68|0;v=d+72|0;w=d+80|0;x=d+84|0;y=d+88|0;z=+g[e+92>>2];A=+g[e+96>>2]-f*+g[e+100>>2]-(i*+g[j>>2]+l*+g[m>>2]+o*+g[p>>2]+(+g[e>>2]*+g[q>>2]+ +g[e+4>>2]*+g[r>>2]+ +g[e+8>>2]*+g[s>>2]))*z-z*(+g[e+32>>2]*+g[w>>2]+ +g[e+36>>2]*+g[x>>2]+ +g[e+40>>2]*+g[y>>2]-(i*+g[t>>2]+l*+g[u>>2]+o*+g[v>>2]));z=f+A;B=+g[e+104>>2];if(z<B){C=B-f;D=B}else{C=A;D=z}g[a>>2]=D;if((c[b+208>>2]|0)!=0){D=C*+g[b+132>>2]*l*+g[b+116>>2];l=C*+g[b+136>>2]*o*+g[b+120>>2];g[j>>2]=+g[b+112>>2]*C*+g[b+128>>2]*i+ +g[j>>2];g[m>>2]=D+ +g[m>>2];g[p>>2]=l+ +g[p>>2];l=C*+g[b+100>>2]*+g[e+52>>2];D=C*+g[b+104>>2]*+g[e+56>>2];g[q>>2]=C*+g[b+96>>2]*+g[e+48>>2]+ +g[q>>2];g[r>>2]=l+ +g[r>>2];g[s>>2]=D+ +g[s>>2]}if((c[d+208>>2]|0)==0){return}D=C*+g[d+132>>2]*(-0.0- +g[k>>2])*+g[d+116>>2];l=C*+g[d+136>>2]*(-0.0- +g[n>>2])*+g[d+120>>2];g[t>>2]=+g[d+112>>2]*C*+g[d+128>>2]*(-0.0- +g[h>>2])+ +g[t>>2];g[u>>2]=D+ +g[u>>2];g[v>>2]=l+ +g[v>>2];l=C*+g[d+100>>2]*+g[e+68>>2];D=C*+g[d+104>>2]*+g[e+72>>2];g[w>>2]=C*+g[d+96>>2]*+g[e+64>>2]+ +g[w>>2];g[x>>2]=l+ +g[x>>2];g[y>>2]=D+ +g[y>>2];return}function xL(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,h=0.0,i=0,j=0.0,k=0,l=0,m=0.0,n=0,o=0,p=0.0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0;a=e+112|0;if(+g[a>>2]==0.0){return}c[12460]=(c[12460]|0)+1;f=e+80|0;h=+g[f>>2];i=e+16|0;j=+g[i>>2];k=b+144|0;l=e+20|0;m=+g[l>>2];n=b+148|0;o=e+24|0;p=+g[o>>2];q=b+152|0;r=b+160|0;s=b+164|0;t=b+168|0;u=d+144|0;v=d+148|0;w=d+152|0;x=d+160|0;y=d+164|0;z=d+168|0;A=+g[e+92>>2];B=+g[a>>2]-h*+g[e+100>>2]-(j*+g[k>>2]+m*+g[n>>2]+p*+g[q>>2]+(+g[e>>2]*+g[r>>2]+ +g[e+4>>2]*+g[s>>2]+ +g[e+8>>2]*+g[t>>2]))*A-A*(+g[e+32>>2]*+g[x>>2]+ +g[e+36>>2]*+g[y>>2]+ +g[e+40>>2]*+g[z>>2]-(j*+g[u>>2]+m*+g[v>>2]+p*+g[w>>2]));A=h+B;C=+g[e+104>>2];if(A<C){D=C-h;E=C}else{D=B;E=A}g[f>>2]=E;if((c[b+208>>2]|0)!=0){E=D*+g[b+132>>2]*m*+g[b+116>>2];m=D*+g[b+136>>2]*p*+g[b+120>>2];g[k>>2]=+g[b+112>>2]*D*+g[b+128>>2]*j+ +g[k>>2];g[n>>2]=E+ +g[n>>2];g[q>>2]=m+ +g[q>>2];m=D*+g[b+100>>2]*+g[e+52>>2];E=D*+g[b+104>>2]*+g[e+56>>2];g[r>>2]=D*+g[b+96>>2]*+g[e+48>>2]+ +g[r>>2];g[s>>2]=m+ +g[s>>2];g[t>>2]=E+ +g[t>>2]}if((c[d+208>>2]|0)==0){return}E=D*+g[d+132>>2]*(-0.0- +g[l>>2])*+g[d+116>>2];m=D*+g[d+136>>2]*(-0.0- +g[o>>2])*+g[d+120>>2];g[u>>2]=+g[d+112>>2]*D*+g[d+128>>2]*(-0.0- +g[i>>2])+ +g[u>>2];g[v>>2]=E+ +g[v>>2];g[w>>2]=m+ +g[w>>2];m=D*+g[d+100>>2]*+g[e+68>>2];E=D*+g[d+104>>2]*+g[e+72>>2];g[x>>2]=D*+g[d+96>>2]*+g[e+64>>2]+ +g[x>>2];g[y>>2]=m+ +g[y>>2];g[z>>2]=E+ +g[z>>2];return}function xM(a,b,d,e,f,h,i,j,k,l,m,n,o){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=+m;n=+n;o=+o;var p=0,q=0.0,r=0.0,s=0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0,E=0.0,F=0,G=0.0,H=0.0,I=0,J=0.0,K=0.0,L=0.0,M=0.0,N=0.0,O=0.0,P=0.0,Q=0.0,R=0.0,S=0.0,T=0.0,U=0.0,V=0.0,W=0.0,X=0.0,Y=0.0,Z=0.0,_=0.0,$=0.0,aa=0.0,ab=0.0,ac=0.0,ad=0.0,ae=0.0,af=0,ag=0,ah=0,ai=0;l=b+16|0;k=l;p=d;c[k>>2]=c[p>>2];c[k+4>>2]=c[p+4>>2];c[k+8>>2]=c[p+8>>2];c[k+12>>2]=c[p+12>>2];p=c[a+16>>2]|0;a=c[p+(e*212|0)+208>>2]|0;k=c[p+(f*212|0)+208>>2]|0;c[b+128>>2]=e;c[b+132>>2]=f;g[b+88>>2]=+g[h+84>>2];c[b+116>>2]=0;g[b+84>>2]=0.0;g[b+80>>2]=0.0;h=i+4|0;q=+g[h>>2];r=+g[b+24>>2];s=i+8|0;t=+g[s>>2];u=+g[b+20>>2];v=q*r-t*u;w=+g[l>>2];l=i|0;x=+g[l>>2];y=t*w-r*x;t=u*x-q*w;g[b>>2]=v;g[b+4>>2]=y;g[b+8>>2]=t;g[b+12>>2]=0.0;i=(a|0)!=0;if(i){z=(v*+g[a+260>>2]+y*+g[a+264>>2]+t*+g[a+268>>2])*+g[a+540>>2];A=(v*+g[a+276>>2]+y*+g[a+280>>2]+t*+g[a+284>>2])*+g[a+544>>2];B=(v*+g[a+292>>2]+y*+g[a+296>>2]+t*+g[a+300>>2])*+g[a+548>>2]}else{z=0.0;A=0.0;B=0.0}g[b+48>>2]=z;g[b+52>>2]=A;g[b+56>>2]=B;g[b+60>>2]=0.0;q=-0.0-w;x=-0.0-u;C=-0.0-r;D=j+4|0;E=+g[D>>2];F=j+8|0;G=+g[F>>2];H=E*C-G*x;I=j|0;J=+g[I>>2];K=G*q-J*C;C=J*x-E*q;g[b+32>>2]=H;g[b+36>>2]=K;g[b+40>>2]=C;g[b+44>>2]=0.0;j=(k|0)!=0;if(j){L=(H*+g[k+260>>2]+K*+g[k+264>>2]+C*+g[k+268>>2])*+g[k+540>>2];M=(H*+g[k+276>>2]+K*+g[k+280>>2]+C*+g[k+284>>2])*+g[k+544>>2];N=(H*+g[k+292>>2]+K*+g[k+296>>2]+C*+g[k+300>>2])*+g[k+548>>2]}else{L=0.0;M=0.0;N=0.0}g[b+64>>2]=L;g[b+68>>2]=M;g[b+72>>2]=N;g[b+76>>2]=0.0;if(i){q=+g[s>>2];E=+g[h>>2];x=+g[l>>2];O=+g[a+340>>2]+((A*q-B*E)*+g[d>>2]+(B*x-q*z)*+g[d+4>>2]+(E*z-A*x)*+g[d+8>>2])}else{O=0.0}if(j){x=-0.0-L;L=-0.0-M;M=-0.0-N;N=+g[F>>2];A=+g[D>>2];z=+g[I>>2];P=+g[k+340>>2]+((N*L-A*M)*+g[d>>2]+(z*M-N*x)*+g[d+4>>2]+(A*x-z*L)*+g[d+8>>2])}else{P=0.0}L=m/(O+P);g[b+92>>2]=L;if(i){Q=+g[p+(e*212|0)+192>>2];R=+g[p+(e*212|0)+196>>2];S=+g[p+(e*212|0)+200>>2];T=+g[p+(e*212|0)+176>>2]*w+ +g[p+(e*212|0)+180>>2]*u+ +g[p+(e*212|0)+184>>2]*r}else{Q=0.0;R=0.0;S=0.0;T=w*0.0+u*0.0+r*0.0}P=T+(Q*v+R*y+S*t);if(j){U=+g[p+(f*212|0)+192>>2];V=+g[p+(f*212|0)+196>>2];W=+g[p+(f*212|0)+200>>2];X=+g[p+(f*212|0)+176>>2]*w+ +g[p+(f*212|0)+180>>2]*u+ +g[p+(f*212|0)+184>>2]*r;Y=U*H;Z=V*K;_=Y+Z;$=W*C;aa=_+$;ab=aa-X;ac=P+ab;ad=n-ac;ae=L*ad;af=b+96|0;g[af>>2]=ae;ag=b+100|0;g[ag>>2]=o;ah=b+104|0;g[ah>>2]=0.0;ai=b+108|0;g[ai>>2]=1.0e10;return}else{U=0.0;V=0.0;W=0.0;X=w*0.0+u*0.0+r*0.0;Y=U*H;Z=V*K;_=Y+Z;$=W*C;aa=_+$;ab=aa-X;ac=P+ab;ad=n-ac;ae=L*ad;af=b+96|0;g[af>>2]=ae;ag=b+100|0;g[ag>>2]=o;ah=b+104|0;g[ah>>2]=0.0;ai=b+108|0;g[ai>>2]=1.0e10;return}}function xN(b,d,e,f,g,h,i,j,k,l,m,n,o){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=+m;n=+n;o=+o;var p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;l=b+68|0;k=c[l>>2]|0;p=b+72|0;do{if((k|0)==(c[p>>2]|0)){q=(k|0)==0?1:k<<1;if((k|0)>=(q|0)){r=k;break}if((q|0)==0){s=0;t=k}else{u=zv(q*136|0,16)|0;s=u;t=c[l>>2]|0}u=b+76|0;if((t|0)>0){v=0;do{K2(s+(v*136|0)|0,(c[u>>2]|0)+(v*136|0)|0,136)|0;v=v+1|0;}while((v|0)<(t|0))}v=c[u>>2]|0;w=b+80|0;if((v|0)!=0){if((a[w]&1)!=0){zw(v)}c[u>>2]=0}a[w]=1;c[u>>2]=s;c[p>>2]=q;r=c[l>>2]|0}else{r=k}}while(0);c[l>>2]=r+1;r=c[b+76>>2]|0;l=r+(k*136|0)|0;c[r+(k*136|0)+124>>2]=g;xM(b,l,d,e,f,h,i,j,0,0,m,n,o);return l|0}function xO(a,b,d,e,f,h,i,j,k,l,m,n,o){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=+m;n=+n;o=+o;var p=0.0,q=0.0,r=0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0,I=0.0,J=0.0,K=0.0,L=0.0,M=0.0,N=0.0,O=0.0,P=0.0,Q=0.0,R=0.0,S=0.0,T=0.0,U=0.0,V=0.0,W=0,X=0,Y=0,Z=0;K1(b+16|0,0,16)|0;l=c[a+16>>2]|0;a=c[l+(e*212|0)+208>>2]|0;k=c[l+(f*212|0)+208>>2]|0;c[b+128>>2]=e;c[b+132>>2]=f;g[b+88>>2]=+g[h+88>>2];c[b+116>>2]=0;g[b+84>>2]=0.0;g[b+80>>2]=0.0;h=d|0;m=-0.0- +g[h>>2];j=d+4|0;p=-0.0- +g[j>>2];i=d+8|0;q=-0.0- +g[i>>2];g[b>>2]=m;g[b+4>>2]=p;g[b+8>>2]=q;g[b+12>>2]=0.0;r=(a|0)!=0;if(r){s=(+g[a+260>>2]*m+ +g[a+264>>2]*p+ +g[a+268>>2]*q)*+g[a+540>>2];t=(+g[a+276>>2]*m+ +g[a+280>>2]*p+ +g[a+284>>2]*q)*+g[a+544>>2];u=(+g[a+292>>2]*m+ +g[a+296>>2]*p+ +g[a+300>>2]*q)*+g[a+548>>2]}else{s=0.0;t=0.0;u=0.0}g[b+48>>2]=s;g[b+52>>2]=t;g[b+56>>2]=u;g[b+60>>2]=0.0;u=+g[h>>2];t=+g[j>>2];s=+g[i>>2];v=+g[d+12>>2];g[b+32>>2]=u;g[b+36>>2]=t;g[b+40>>2]=s;g[b+44>>2]=v;d=(k|0)!=0;if(d){w=(u*+g[k+260>>2]+t*+g[k+264>>2]+s*+g[k+268>>2])*+g[k+540>>2];x=(u*+g[k+276>>2]+t*+g[k+280>>2]+s*+g[k+284>>2])*+g[k+544>>2];y=(u*+g[k+292>>2]+t*+g[k+296>>2]+s*+g[k+300>>2])*+g[k+548>>2]}else{w=0.0;x=0.0;y=0.0}g[b+64>>2]=w;g[b+68>>2]=x;g[b+72>>2]=y;g[b+76>>2]=0.0;if(r){z=+g[a+260>>2]*m+ +g[a+264>>2]*p+ +g[a+268>>2]*q;A=+g[a+276>>2]*m+ +g[a+280>>2]*p+ +g[a+284>>2]*q;B=+g[a+292>>2]*m+ +g[a+296>>2]*p+ +g[a+300>>2]*q}else{z=0.0;A=0.0;B=0.0}if(d){C=+g[k+260>>2]*u+ +g[k+264>>2]*t+ +g[k+268>>2]*s;D=u*+g[k+276>>2]+t*+g[k+280>>2]+s*+g[k+284>>2];E=u*+g[k+292>>2]+t*+g[k+296>>2]+s*+g[k+300>>2]}else{C=0.0;D=0.0;E=0.0}y=1.0/(z*m+A*p+B*q+0.0+(C*u+D*t+E*s));g[b+92>>2]=y;if(r){F=+g[l+(e*212|0)+192>>2];G=+g[l+(e*212|0)+196>>2];H=+g[l+(e*212|0)+200>>2];I=+g[l+(e*212|0)+176>>2]*0.0+ +g[l+(e*212|0)+180>>2]*0.0+ +g[l+(e*212|0)+184>>2]*0.0}else{F=0.0;G=0.0;H=0.0;I=0.0}E=I+(F*m+G*p+H*q);if(d){J=+g[l+(f*212|0)+192>>2];K=+g[l+(f*212|0)+196>>2];L=+g[l+(f*212|0)+200>>2];M=+g[l+(f*212|0)+176>>2]*0.0+ +g[l+(f*212|0)+180>>2]*0.0+ +g[l+(f*212|0)+184>>2]*0.0;N=J*u;O=K*t;P=N+O;Q=L*s;R=P+Q;S=R-M;T=E+S;U=n-T;V=y*U;W=b+96|0;g[W>>2]=V;X=b+100|0;g[X>>2]=o;Y=b+104|0;g[Y>>2]=0.0;Z=b+108|0;g[Z>>2]=1.0e10;return}else{J=0.0;K=0.0;L=0.0;M=0.0;N=J*u;O=K*t;P=N+O;Q=L*s;R=P+Q;S=R-M;T=E+S;U=n-T;V=y*U;W=b+96|0;g[W>>2]=V;X=b+100|0;g[X>>2]=o;Y=b+104|0;g[Y>>2]=0.0;Z=b+108|0;g[Z>>2]=1.0e10;return}}function xP(b,d,e,f,g,h,i,j,k,l,m,n,o){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=+m;n=+n;o=+o;var p=0,q=0,r=0,s=0,t=0,u=0;l=b+88|0;k=c[l>>2]|0;j=b+92|0;do{if((k|0)==(c[j>>2]|0)){i=(k|0)==0?1:k<<1;if((k|0)>=(i|0)){p=k;break}if((i|0)==0){q=0;r=k}else{s=zv(i*136|0,16)|0;q=s;r=c[l>>2]|0}s=b+96|0;if((r|0)>0){t=0;do{K2(q+(t*136|0)|0,(c[s>>2]|0)+(t*136|0)|0,136)|0;t=t+1|0;}while((t|0)<(r|0))}t=c[s>>2]|0;u=b+100|0;if((t|0)!=0){if((a[u]&1)!=0){zw(t)}c[s>>2]=0}a[u]=1;c[s>>2]=q;c[j>>2]=i;p=c[l>>2]|0}else{p=k}}while(0);c[l>>2]=p+1;p=c[b+96>>2]|0;l=p+(k*136|0)|0;c[p+(k*136|0)+124>>2]=g;xO(b,l,d,e,f,h,0,0,0,0,0.0,n,o);return l|0}function xQ(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0.0,q=0.0,r=0.0;d=i;i=i+208|0;e=d|0;f=b+212|0;h=c[f>>2]|0;if((h|0)>-1){j=h;i=d;return j|0}h=b+236|0;if((c[h>>2]&2|0)==0){j=0;i=d;return j|0}do{if(+g[b+340>>2]==0.0){if((c[b+204>>2]&2|0)==0){j=0}else{break}i=d;return j|0}}while(0);k=a+8|0;l=c[k>>2]|0;m=e;K1(m|0,0,208)|0;if((l|0)==(c[a+12>>2]|0)){xW(a+4|0,(l|0)==0?1:l<<1);n=c[k>>2]|0}else{n=l}c[k>>2]=n+1;n=a+16|0;a=c[n>>2]|0;k=a+(l*212|0)|0;c[k>>2]=c[m>>2];c[k+4>>2]=c[m+4>>2];c[k+8>>2]=c[m+8>>2];c[k+12>>2]=c[m+12>>2];m=a+(l*212|0)+16|0;k=e+16|0;c[m>>2]=c[k>>2];c[m+4>>2]=c[k+4>>2];c[m+8>>2]=c[k+8>>2];c[m+12>>2]=c[k+12>>2];k=a+(l*212|0)+32|0;m=e+32|0;c[k>>2]=c[m>>2];c[k+4>>2]=c[m+4>>2];c[k+8>>2]=c[m+8>>2];c[k+12>>2]=c[m+12>>2];m=a+(l*212|0)+48|0;k=e+48|0;c[m>>2]=c[k>>2];c[m+4>>2]=c[k+4>>2];c[m+8>>2]=c[k+8>>2];c[m+12>>2]=c[k+12>>2];k=a+(l*212|0)+64|0;m=e+64|0;c[k>>2]=c[m>>2];c[k+4>>2]=c[m+4>>2];c[k+8>>2]=c[m+8>>2];c[k+12>>2]=c[m+12>>2];m=a+(l*212|0)+80|0;k=e+80|0;c[m>>2]=c[k>>2];c[m+4>>2]=c[k+4>>2];c[m+8>>2]=c[k+8>>2];c[m+12>>2]=c[k+12>>2];k=a+(l*212|0)+96|0;m=e+96|0;c[k>>2]=c[m>>2];c[k+4>>2]=c[m+4>>2];c[k+8>>2]=c[m+8>>2];c[k+12>>2]=c[m+12>>2];m=a+(l*212|0)+112|0;k=e+112|0;c[m>>2]=c[k>>2];c[m+4>>2]=c[k+4>>2];c[m+8>>2]=c[k+8>>2];c[m+12>>2]=c[k+12>>2];k=a+(l*212|0)+128|0;m=e+128|0;c[k>>2]=c[m>>2];c[k+4>>2]=c[m+4>>2];c[k+8>>2]=c[m+8>>2];c[k+12>>2]=c[m+12>>2];m=a+(l*212|0)+144|0;k=e+144|0;c[m>>2]=c[k>>2];c[m+4>>2]=c[k+4>>2];c[m+8>>2]=c[k+8>>2];c[m+12>>2]=c[k+12>>2];k=a+(l*212|0)+160|0;m=e+160|0;c[k>>2]=c[m>>2];c[k+4>>2]=c[m+4>>2];c[k+8>>2]=c[m+8>>2];c[k+12>>2]=c[m+12>>2];m=a+(l*212|0)+176|0;k=e+176|0;c[m>>2]=c[k>>2];c[m+4>>2]=c[k+4>>2];c[m+8>>2]=c[k+8>>2];c[m+12>>2]=c[k+12>>2];k=a+(l*212|0)+192|0;m=e+192|0;c[k>>2]=c[m>>2];c[k+4>>2]=c[m+4>>2];c[k+8>>2]=c[m+8>>2];c[k+12>>2]=c[m+12>>2];c[a+(l*212|0)+208>>2]=0;a=c[n>>2]|0;n=a+(l*212|0)|0;if((c[h>>2]&2|0)==0){o=0}else{o=b}K1(a+(l*212|0)+64|0,0,32)|0;K1(a+(l*212|0)+144|0,0,32)|0;if((o|0)==0){g[n>>2]=1.0;K1(a+(l*212|0)+4|0,0,16)|0;g[a+(l*212|0)+20>>2]=1.0;K1(a+(l*212|0)+24|0,0,16)|0;g[a+(l*212|0)+40>>2]=1.0;K1(a+(l*212|0)+44|0,0,20)|0;c[a+(l*212|0)+208>>2]=0;K1(a+(l*212|0)+128|0,0,16)|0;g[a+(l*212|0)+96>>2]=1.0;g[a+(l*212|0)+100>>2]=1.0;g[a+(l*212|0)+104>>2]=1.0;g[a+(l*212|0)+108>>2]=0.0;g[a+(l*212|0)+112>>2]=1.0;g[a+(l*212|0)+116>>2]=1.0;g[a+(l*212|0)+120>>2]=1.0;g[a+(l*212|0)+124>>2]=0.0;K1(a+(l*212|0)+176|0,0,32)|0}else{b=n;n=o+4|0;c[b>>2]=c[n>>2];c[b+4>>2]=c[n+4>>2];c[b+8>>2]=c[n+8>>2];c[b+12>>2]=c[n+12>>2];n=a+(l*212|0)+16|0;b=o+20|0;c[n>>2]=c[b>>2];c[n+4>>2]=c[b+4>>2];c[n+8>>2]=c[b+8>>2];c[n+12>>2]=c[b+12>>2];b=a+(l*212|0)+32|0;n=o+36|0;c[b>>2]=c[n>>2];c[b+4>>2]=c[n+4>>2];c[b+8>>2]=c[n+8>>2];c[b+12>>2]=c[n+12>>2];n=a+(l*212|0)+48|0;b=o+52|0;c[n>>2]=c[b>>2];c[n+4>>2]=c[b+4>>2];c[n+8>>2]=c[b+8>>2];c[n+12>>2]=c[b+12>>2];p=+g[o+340>>2];b=o+344|0;q=p*+g[o+348>>2];r=p*+g[o+352>>2];g[a+(l*212|0)+128>>2]=p*+g[b>>2];g[a+(l*212|0)+132>>2]=q;g[a+(l*212|0)+136>>2]=r;g[a+(l*212|0)+140>>2]=0.0;c[a+(l*212|0)+208>>2]=o;n=a+(l*212|0)+96|0;h=o+540|0;c[n>>2]=c[h>>2];c[n+4>>2]=c[h+4>>2];c[n+8>>2]=c[h+8>>2];c[n+12>>2]=c[h+12>>2];h=a+(l*212|0)+112|0;n=b;c[h>>2]=c[n>>2];c[h+4>>2]=c[n+4>>2];c[h+8>>2]=c[n+8>>2];c[h+12>>2]=c[n+12>>2];n=a+(l*212|0)+176|0;h=o+308|0;c[n>>2]=c[h>>2];c[n+4>>2]=c[h+4>>2];c[n+8>>2]=c[h+8>>2];c[n+12>>2]=c[h+12>>2];h=a+(l*212|0)+192|0;a=o+324|0;c[h>>2]=c[a>>2];c[h+4>>2]=c[a+4>>2];c[h+8>>2]=c[a+8>>2];c[h+12>>2]=c[a+12>>2]}c[f>>2]=l;j=l;i=d;return j|0}function xR(a,b,d,e,f,h,i,j,k,l,m){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0.0,s=0.0,t=0,u=0,v=0,w=0,x=0,y=0,z=0.0,A=0,B=0.0,C=0.0,D=0,E=0.0,F=0.0,G=0.0,H=0,I=0.0,J=0.0,K=0.0,L=0,M=0,N=0.0,O=0.0,P=0.0,Q=0,R=0.0,S=0.0,T=0.0,U=0,V=0,W=0.0,X=0.0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0.0,ad=0.0,ae=0.0,af=0.0,ag=0.0,ah=0.0,ai=0.0,aj=0.0,ak=0.0,al=0.0,am=0.0,an=0.0,ao=0.0,ap=0.0,aq=0.0,ar=0.0,as=0,at=0,au=0.0,av=0.0,aw=0,ax=0,ay=0;n=c[a+16>>2]|0;a=n+(d*212|0)+208|0;o=c[a>>2]|0;p=n+(e*212|0)+208|0;q=c[p>>2]|0;r=+g[f+52>>2]- +g[n+(d*212|0)+52>>2];s=+g[f+56>>2]- +g[n+(d*212|0)+56>>2];t=l|0;g[t>>2]=+g[f+48>>2]- +g[n+(d*212|0)+48>>2];u=l+4|0;g[u>>2]=r;v=l+8|0;g[v>>2]=s;g[l+12>>2]=0.0;s=+g[f+36>>2]- +g[n+(e*212|0)+52>>2];r=+g[f+40>>2]- +g[n+(e*212|0)+56>>2];l=m|0;g[l>>2]=+g[f+32>>2]- +g[n+(e*212|0)+48>>2];w=m+4|0;g[w>>2]=s;x=m+8|0;g[x>>2]=r;g[m+12>>2]=0.0;g[k>>2]=1.0;m=f+64|0;r=+g[u>>2];y=f+72|0;s=+g[y>>2];z=+g[v>>2];A=f+68|0;B=+g[A>>2];C=r*s-z*B;D=m|0;E=+g[D>>2];F=+g[t>>2];G=z*E-s*F;s=B*F-r*E;H=(o|0)!=0;if(H){I=(C*+g[o+260>>2]+G*+g[o+264>>2]+s*+g[o+268>>2])*+g[o+540>>2];J=(C*+g[o+276>>2]+G*+g[o+280>>2]+s*+g[o+284>>2])*+g[o+544>>2];K=(C*+g[o+292>>2]+G*+g[o+296>>2]+s*+g[o+300>>2])*+g[o+548>>2]}else{I=0.0;J=0.0;K=0.0}g[b+48>>2]=I;L=b+52|0;g[L>>2]=J;M=b+56|0;g[M>>2]=K;g[b+60>>2]=0.0;E=+g[w>>2];r=+g[y>>2];F=+g[x>>2];B=+g[A>>2];z=E*r-F*B;N=+g[D>>2];O=+g[l>>2];P=F*N-r*O;r=B*O-E*N;Q=(q|0)!=0;if(Q){N=-0.0-z;E=-0.0-P;O=-0.0-r;R=(+g[q+260>>2]*N+ +g[q+264>>2]*E+ +g[q+268>>2]*O)*+g[q+540>>2];S=(+g[q+276>>2]*N+ +g[q+280>>2]*E+ +g[q+284>>2]*O)*+g[q+544>>2];T=(+g[q+292>>2]*N+ +g[q+296>>2]*E+ +g[q+300>>2]*O)*+g[q+548>>2]}else{R=0.0;S=0.0;T=0.0}g[b+64>>2]=R;U=b+68|0;g[U>>2]=S;V=b+72|0;g[V>>2]=T;g[b+76>>2]=0.0;if(H){O=+g[v>>2];E=+g[u>>2];N=+g[t>>2];W=+g[o+340>>2]+((J*O-K*E)*+g[D>>2]+(K*N-O*I)*+g[A>>2]+(E*I-J*N)*+g[y>>2])}else{W=0.0}if(Q){N=-0.0-R;R=-0.0-S;S=-0.0-T;T=+g[x>>2];J=+g[w>>2];I=+g[l>>2];X=+g[q+340>>2]+((T*R-J*S)*+g[D>>2]+(I*S-T*N)*+g[A>>2]+(J*N-I*R)*+g[y>>2])}else{X=0.0}Y=b+92|0;g[Y>>2]=+g[k>>2]/(W+X);k=b+16|0;Z=k;_=m;c[Z>>2]=c[_>>2];c[Z+4>>2]=c[_+4>>2];c[Z+8>>2]=c[_+8>>2];c[Z+12>>2]=c[_+12>>2];_=b|0;g[_>>2]=C;Z=b+4|0;g[Z>>2]=G;m=b+8|0;g[m>>2]=s;g[b+12>>2]=0.0;$=b+32|0;g[$>>2]=-0.0-z;aa=b+36|0;g[aa>>2]=-0.0-P;ab=b+40|0;g[ab>>2]=-0.0-r;g[b+44>>2]=0.0;r=+g[f+80>>2]+ +g[h+56>>2];if(H){P=+g[o+328>>2];z=+g[v>>2];s=+g[o+332>>2];G=+g[u>>2];C=+g[t>>2];X=+g[o+324>>2];ac=P*z-s*G+ +g[o+308>>2];ad=+g[o+312>>2]+(s*C-z*X);ae=G*X-P*C+ +g[o+316>>2]}else{ac=0.0;ad=0.0;ae=0.0}if(Q){C=+g[q+328>>2];P=+g[x>>2];X=+g[q+332>>2];G=+g[w>>2];z=+g[l>>2];s=+g[q+324>>2];af=C*P-X*G+ +g[q+308>>2];ag=+g[q+312>>2]+(X*z-P*s);ah=G*s-C*z+ +g[q+316>>2]}else{af=0.0;ag=0.0;ah=0.0}z=ac-af;af=ad-ag;ag=ae-ah;g[i>>2]=z;g[i+4>>2]=af;g[i+8>>2]=ag;g[i+12>>2]=0.0;g[j>>2]=+g[D>>2]*z+ +g[A>>2]*af+ +g[y>>2]*ag;g[b+88>>2]=+g[f+84>>2];ag=+g[f+92>>2]*(-0.0- +g[j>>2]);af=ag>0.0?ag:0.0;do{if((c[h+64>>2]&4|0)==0){g[b+84>>2]=0.0}else{ag=+g[f+120>>2]*+g[h+60>>2];j=b+84|0;g[j>>2]=ag;do{if(H){if((c[a>>2]|0)==0){break}z=ag*+g[n+(d*212|0)+132>>2]*+g[b+20>>2]*+g[o+348>>2]*+g[n+(d*212|0)+116>>2];ah=ag*+g[n+(d*212|0)+136>>2]*+g[b+24>>2]*+g[o+352>>2]*+g[n+(d*212|0)+120>>2];y=n+(d*212|0)+64|0;g[y>>2]=+g[n+(d*212|0)+112>>2]*ag*+g[n+(d*212|0)+128>>2]*+g[k>>2]*+g[o+344>>2]+ +g[y>>2];y=n+(d*212|0)+68|0;g[y>>2]=z+ +g[y>>2];y=n+(d*212|0)+72|0;g[y>>2]=ah+ +g[y>>2];ah=ag*+g[n+(d*212|0)+100>>2]*+g[L>>2];z=ag*+g[n+(d*212|0)+104>>2]*+g[M>>2];y=n+(d*212|0)+80|0;g[y>>2]=ag*+g[n+(d*212|0)+96>>2]*+g[b+48>>2]+ +g[y>>2];y=n+(d*212|0)+84|0;g[y>>2]=ah+ +g[y>>2];y=n+(d*212|0)+88|0;g[y>>2]=z+ +g[y>>2]}}while(0);if(!Q){break}ag=-0.0- +g[j>>2];if((c[p>>2]|0)==0){break}z=-0.0- +g[V>>2];ah=-0.0- +g[U>>2];ae=-0.0- +g[b+64>>2];ad=+g[n+(e*212|0)+132>>2]*+g[b+20>>2]*+g[q+348>>2]*ag*+g[n+(e*212|0)+116>>2];ac=+g[n+(e*212|0)+136>>2]*+g[b+24>>2]*+g[q+352>>2]*ag*+g[n+(e*212|0)+120>>2];y=n+(e*212|0)+64|0;g[y>>2]=+g[n+(e*212|0)+112>>2]*+g[n+(e*212|0)+128>>2]*+g[k>>2]*+g[q+344>>2]*ag+ +g[y>>2];y=n+(e*212|0)+68|0;g[y>>2]=ad+ +g[y>>2];y=n+(e*212|0)+72|0;g[y>>2]=ac+ +g[y>>2];ac=+g[n+(e*212|0)+100>>2]*ag*ah;ah=+g[n+(e*212|0)+104>>2]*ag*z;y=n+(e*212|0)+80|0;g[y>>2]=+g[n+(e*212|0)+96>>2]*ag*ae+ +g[y>>2];y=n+(e*212|0)+84|0;g[y>>2]=ac+ +g[y>>2];y=n+(e*212|0)+88|0;g[y>>2]=ah+ +g[y>>2]}}while(0);g[b+80>>2]=0.0;if(H){ai=+g[n+(d*212|0)+176>>2];aj=+g[n+(d*212|0)+180>>2];ak=+g[n+(d*212|0)+184>>2]}else{ai=0.0;aj=0.0;ak=0.0}ah=+g[k>>2];ac=+g[b+20>>2];ae=+g[b+24>>2];if(H){al=+g[n+(d*212|0)+192>>2];am=+g[n+(d*212|0)+196>>2];an=+g[n+(d*212|0)+200>>2]}else{al=0.0;am=0.0;an=0.0}if(Q){ao=+g[n+(e*212|0)+192>>2];ap=+g[n+(e*212|0)+196>>2];aq=+g[n+(e*212|0)+200>>2];ar=+g[n+(e*212|0)+176>>2]*ah+ +g[n+(e*212|0)+180>>2]*ac+ +g[n+(e*212|0)+184>>2]*ae}else{ao=0.0;ap=0.0;aq=0.0;ar=ah*0.0+ac*0.0+ae*0.0}ag=af-(ai*ah+aj*ac+ak*ae+(al*+g[_>>2]+am*+g[Z>>2]+an*+g[m>>2])+(ao*+g[$>>2]+ap*+g[aa>>2]+aq*+g[ab>>2]-ar));ab=(c[h+44>>2]|0)==0;if(ab){as=30}else{if(r>+g[h+48>>2]){as=30}else{at=h+36|0}}if((as|0)==30){at=h+32|0}if(r>0.0){au=ag-r/+g[h+12>>2];av=0.0}else{au=ag;av=+g[at>>2]*(-0.0-r)/+g[h+12>>2]}ag=+g[Y>>2];ar=av*ag;av=au*ag;do{if(!ab){if(r>+g[h+48>>2]){break}g[b+96>>2]=av;g[b+112>>2]=ar;aw=b+100|0;g[aw>>2]=0.0;ax=b+104|0;g[ax>>2]=0.0;ay=b+108|0;g[ay>>2]=1.0e10;return}}while(0);g[b+96>>2]=ar+av;g[b+112>>2]=0.0;aw=b+100|0;g[aw>>2]=0.0;ax=b+104|0;g[ax>>2]=0.0;ay=b+108|0;g[ay>>2]=1.0e10;return}function xS(a,b,d,e,f,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0.0,r=0,s=0.0,t=0.0,u=0.0,v=0,w=0.0,x=0.0,y=0.0;i=c[a+16>>2]|0;j=i+(d*212|0)+208|0;k=c[j>>2]|0;l=i+(e*212|0)+208|0;m=c[l>>2]|0;n=b+124|0;b=c[n>>2]|0;o=a+76|0;a=c[o>>2]|0;p=h+64|0;do{if((c[p>>2]&4|0)==0){g[a+(b*136|0)+84>>2]=0.0}else{q=+g[f+124>>2]*+g[h+60>>2];r=a+(b*136|0)+84|0;g[r>>2]=q;do{if((k|0)!=0){s=+g[k+340>>2];if((c[j>>2]|0)==0){break}t=q*s*+g[a+(b*136|0)+20>>2]*+g[k+348>>2]*+g[i+(d*212|0)+116>>2];u=q*s*+g[a+(b*136|0)+24>>2]*+g[k+352>>2]*+g[i+(d*212|0)+120>>2];v=i+(d*212|0)+64|0;g[v>>2]=+g[i+(d*212|0)+112>>2]*q*s*+g[a+(b*136|0)+16>>2]*+g[k+344>>2]+ +g[v>>2];v=i+(d*212|0)+68|0;g[v>>2]=t+ +g[v>>2];v=i+(d*212|0)+72|0;g[v>>2]=u+ +g[v>>2];u=q*+g[i+(d*212|0)+100>>2]*+g[a+(b*136|0)+52>>2];t=q*+g[i+(d*212|0)+104>>2]*+g[a+(b*136|0)+56>>2];v=i+(d*212|0)+80|0;g[v>>2]=q*+g[i+(d*212|0)+96>>2]*+g[a+(b*136|0)+48>>2]+ +g[v>>2];v=i+(d*212|0)+84|0;g[v>>2]=u+ +g[v>>2];v=i+(d*212|0)+88|0;g[v>>2]=t+ +g[v>>2]}}while(0);if((m|0)==0){break}q=+g[m+340>>2];t=-0.0- +g[r>>2];if((c[l>>2]|0)==0){break}u=-0.0- +g[a+(b*136|0)+72>>2];s=-0.0- +g[a+(b*136|0)+68>>2];w=-0.0- +g[a+(b*136|0)+64>>2];x=q*+g[a+(b*136|0)+20>>2]*+g[m+348>>2]*t*+g[i+(e*212|0)+116>>2];y=q*+g[a+(b*136|0)+24>>2]*+g[m+352>>2]*t*+g[i+(e*212|0)+120>>2];v=i+(e*212|0)+64|0;g[v>>2]=+g[i+(e*212|0)+112>>2]*q*+g[a+(b*136|0)+16>>2]*+g[m+344>>2]*t+ +g[v>>2];v=i+(e*212|0)+68|0;g[v>>2]=x+ +g[v>>2];v=i+(e*212|0)+72|0;g[v>>2]=y+ +g[v>>2];y=+g[i+(e*212|0)+100>>2]*t*s;s=+g[i+(e*212|0)+104>>2]*t*u;v=i+(e*212|0)+80|0;g[v>>2]=+g[i+(e*212|0)+96>>2]*t*w+ +g[v>>2];v=i+(e*212|0)+84|0;g[v>>2]=y+ +g[v>>2];v=i+(e*212|0)+88|0;g[v>>2]=s+ +g[v>>2]}}while(0);b=c[p>>2]|0;if((b&16|0)==0){return}p=(c[n>>2]|0)+1|0;n=c[o>>2]|0;if((b&4|0)==0){g[n+(p*136|0)+84>>2]=0.0;return}s=+g[f+128>>2]*+g[h+60>>2];h=n+(p*136|0)+84|0;g[h>>2]=s;do{if((k|0)!=0){y=+g[k+340>>2];if((c[j>>2]|0)==0){break}w=s*y*+g[n+(p*136|0)+20>>2]*+g[i+(d*212|0)+116>>2];t=s*y*+g[n+(p*136|0)+24>>2]*+g[i+(d*212|0)+120>>2];f=i+(d*212|0)+64|0;g[f>>2]=+g[i+(d*212|0)+112>>2]*s*y*+g[n+(p*136|0)+16>>2]+ +g[f>>2];f=i+(d*212|0)+68|0;g[f>>2]=w+ +g[f>>2];f=i+(d*212|0)+72|0;g[f>>2]=t+ +g[f>>2];t=s*+g[i+(d*212|0)+100>>2]*+g[n+(p*136|0)+52>>2];w=s*+g[i+(d*212|0)+104>>2]*+g[n+(p*136|0)+56>>2];f=i+(d*212|0)+80|0;g[f>>2]=s*+g[i+(d*212|0)+96>>2]*+g[n+(p*136|0)+48>>2]+ +g[f>>2];f=i+(d*212|0)+84|0;g[f>>2]=t+ +g[f>>2];f=i+(d*212|0)+88|0;g[f>>2]=w+ +g[f>>2]}}while(0);if((m|0)==0){return}s=+g[m+340>>2];w=-0.0- +g[h>>2];if((c[l>>2]|0)==0){return}t=-0.0- +g[n+(p*136|0)+72>>2];y=-0.0- +g[n+(p*136|0)+68>>2];u=-0.0- +g[n+(p*136|0)+64>>2];x=s*+g[n+(p*136|0)+20>>2]*w*+g[i+(e*212|0)+116>>2];q=s*+g[n+(p*136|0)+24>>2]*w*+g[i+(e*212|0)+120>>2];l=i+(e*212|0)+64|0;g[l>>2]=+g[i+(e*212|0)+112>>2]*s*+g[n+(p*136|0)+16>>2]*w+ +g[l>>2];l=i+(e*212|0)+68|0;g[l>>2]=x+ +g[l>>2];l=i+(e*212|0)+72|0;g[l>>2]=q+ +g[l>>2];q=+g[i+(e*212|0)+100>>2]*w*y;y=+g[i+(e*212|0)+104>>2]*w*t;l=i+(e*212|0)+80|0;g[l>>2]=+g[i+(e*212|0)+96>>2]*w*u+ +g[l>>2];l=i+(e*212|0)+84|0;g[l>>2]=q+ +g[l>>2];l=i+(e*212|0)+88|0;g[l>>2]=y+ +g[l>>2];return}function xT(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0,ai=0,aj=0,ak=0,al=0,am=0,an=0,ao=0,ap=0,aq=0,ar=0,as=0,at=0,au=0,av=0,aw=0,ax=0,ay=0,az=0,aA=0,aB=0,aC=0,aD=0,aE=0,aF=0,aG=0,aH=0,aI=0,aJ=0,aK=0,aL=0,aM=0,aN=0,aO=0,aP=0,aQ=0,aR=0,aS=0,aT=0.0,aU=0.0,aV=0.0,aW=0.0,aX=0.0,aY=0.0,aZ=0.0,a_=0.0,a$=0.0,a0=0.0,a1=0.0,a2=0.0,a3=0.0,a4=0.0,a5=0.0,a6=0.0,a7=0.0,a8=0.0,a9=0.0,ba=0.0,bb=0.0,bc=0.0,bd=0.0,be=0.0,bf=0.0,bg=0.0,bh=0.0,bi=0.0,bj=0.0,bk=0.0,bl=0.0,bm=0,bn=0,bo=0.0,bp=0.0,bq=0.0,br=0.0,bs=0.0,bt=0.0,bu=0.0,bv=0.0,bw=0.0,bx=0.0,by=0.0,bz=0.0,bA=0.0,bB=0.0,bC=0.0,bD=0.0,bE=0.0,bF=0.0,bG=0,bH=0.0,bI=0,bJ=0.0;f=i;i=i+112|0;h=f|0;j=f+16|0;k=f+32|0;l=f+40|0;m=f+48|0;n=f+64|0;o=f+80|0;p=f+96|0;q=c[d+740>>2]|0;r=c[d+744>>2]|0;s=xQ(b,q)|0;t=xQ(b,r)|0;u=c[b+16>>2]|0;if((u+(s*212|0)|0)==0){i=f;return}v=u+(s*212|0)+208|0;do{if((c[v>>2]|0)==0){if((u+(t*212|0)|0)==0){i=f;return}if((c[u+(t*212|0)+208>>2]|0)!=0){break}i=f;return}}while(0);w=d+748|0;if((c[w>>2]|0)<=0){i=f;return}x=d+756|0;y=b+28|0;z=b+32|0;A=b+36|0;B=b+40|0;C=b+68|0;D=u+(t*212|0)+208|0;E=n|0;F=n+4|0;G=n+8|0;H=n+12|0;I=e+80|0;J=(q|0)==0;K=(r|0)==0;L=r+180|0;M=r+4|0;N=r+20|0;O=r+36|0;P=r+8|0;Q=r+24|0;R=r+40|0;S=r+12|0;T=r+28|0;U=r+44|0;X=r+164|0;Y=r+168|0;Z=r+172|0;_=q+180|0;$=q+4|0;aa=q+20|0;ab=q+36|0;ac=q+8|0;ad=q+24|0;ae=q+40|0;af=q+12|0;ag=q+28|0;ah=q+44|0;ai=q+164|0;aj=q+168|0;ak=q+172|0;al=o|0;am=o+4|0;an=o+8|0;ao=p|0;ap=p+4|0;aq=p+8|0;ar=p+12|0;as=o+12|0;at=e+64|0;au=m|0;av=m+4|0;aw=m+8|0;ax=u+(t*212|0)+192|0;ay=u+(t*212|0)+80|0;az=u+(t*212|0)+196|0;aA=u+(t*212|0)+84|0;aB=u+(t*212|0)+200|0;aC=u+(t*212|0)+88|0;aD=u+(s*212|0)+192|0;aE=u+(s*212|0)+80|0;aF=u+(s*212|0)+196|0;aG=u+(s*212|0)+84|0;aH=u+(s*212|0)+200|0;aI=u+(s*212|0)+88|0;u=0;aJ=1;while(1){aK=d+4+(u*184|0)|0;L16:do{if(+g[d+4+(u*184|0)+80>>2]>+g[x>>2]){aL=aJ}else{aM=c[y>>2]|0;do{if((aM|0)==(c[z>>2]|0)){aN=(aM|0)==0?1:aM<<1;if((aM|0)>=(aN|0)){aO=aM;break}if((aN|0)==0){aP=0;aQ=aM}else{aR=zv(aN*136|0,16)|0;aP=aR;aQ=c[y>>2]|0}if((aQ|0)>0){aR=0;do{K2(aP+(aR*136|0)|0,(c[A>>2]|0)+(aR*136|0)|0,136)|0;aR=aR+1|0;}while((aR|0)<(aQ|0))}aR=c[A>>2]|0;if((aR|0)!=0){if((a[B]&1)!=0){zw(aR)}c[A>>2]=0}a[B]=1;c[A>>2]=aP;c[z>>2]=aN;aO=c[y>>2]|0}else{aO=aM}}while(0);c[y>>2]=aO+1;aR=c[A>>2]|0;aS=aR+(aM*136|0)|0;c[aR+(aM*136|0)+128>>2]=s;c[aR+(aM*136|0)+132>>2]=t;c[aR+(aM*136|0)+116>>2]=aK;xR(b,aS,s,t,aK,e,m,l,k,h,j);c[aR+(aM*136|0)+124>>2]=c[C>>2];if((c[v>>2]|0)==0){aT=0.0;aU=0.0;aV=0.0}else{aT=+g[aD>>2]+ +g[aE>>2];aU=+g[aF>>2]+ +g[aG>>2];aV=+g[aH>>2]+ +g[aI>>2]}if((c[D>>2]|0)==0){aW=0.0;aX=0.0;aY=0.0}else{aW=+g[ax>>2]+ +g[ay>>2];aX=+g[az>>2]+ +g[aA>>2];aY=+g[aB>>2]+ +g[aC>>2]}aZ=aW-aT;a_=aX-aU;a$=aY-aV;g[E>>2]=aZ;g[F>>2]=a_;g[G>>2]=a$;g[H>>2]=0.0;do{if(+g[d+4+(u*184|0)+88>>2]>0.0&(aJ|0)>0){aR=aJ-1|0;a0=+W(aZ*aZ+a_*a_+a$*a$);if(a0>+g[I>>2]){a1=1.0/a0;a0=aZ*a1;g[E>>2]=a0;a2=a_*a1;g[F>>2]=a2;a3=a$*a1;g[G>>2]=a3;do{if(J){a4=a0;a5=a2;a6=a3}else{if((c[_>>2]&2|0)==0){a4=a0;a5=a2;a6=a3;break}a1=+g[$>>2];a7=+g[aa>>2];a8=+g[ab>>2];a9=+g[ac>>2];ba=+g[ad>>2];bb=+g[ae>>2];bc=+g[af>>2];bd=+g[ag>>2];be=+g[ah>>2];bf=(a1*a0+a7*a2+a3*a8)*+g[ai>>2];bg=(a0*a9+a2*ba+a3*bb)*+g[aj>>2];bh=(a0*bc+a2*bd+a3*be)*+g[ak>>2];bi=a1*bf+a9*bg+bc*bh;bc=a7*bf+ba*bg+bd*bh;bd=a8*bf+bb*bg+be*bh;g[E>>2]=bi;g[F>>2]=bc;g[G>>2]=bd;g[H>>2]=0.0;a4=bi;a5=bc;a6=bd}}while(0);do{if(K){bj=a4;bk=a5;bl=a6}else{if((c[L>>2]&2|0)==0){bj=a4;bk=a5;bl=a6;break}a3=+g[M>>2];a2=+g[N>>2];a0=+g[O>>2];bd=+g[P>>2];bc=+g[Q>>2];bi=+g[R>>2];bh=+g[S>>2];be=+g[T>>2];bg=+g[U>>2];bb=(a3*a4+a2*a5+a0*a6)*+g[X>>2];bf=(a4*bd+a5*bc+a6*bi)*+g[Y>>2];a8=(a4*bh+a5*be+a6*bg)*+g[Z>>2];ba=a3*bb+bd*bf+bh*a8;bh=a2*bb+bc*bf+be*a8;be=a0*bb+bi*bf+bg*a8;g[E>>2]=ba;g[F>>2]=bh;g[G>>2]=be;g[H>>2]=0.0;bj=ba;bk=bh;bl=be}}while(0);if(+W(bj*bj+bk*bk+bl*bl)<=.001){bm=aR;break}xP(b,n,s,t,aM,aK,0,0,0,0,0.0,0.0,0.0)|0;bm=aR;break}aN=d+4+(u*184|0)+64|0;xP(b,aN,s,t,aM,aK,0,0,0,0,0.0,0.0,0.0)|0;bn=aN|0;be=+g[d+4+(u*184|0)+72>>2];if(+V(+be)>.7071067690849304){bh=+g[d+4+(u*184|0)+68>>2];ba=be*be+bh*bh;a8=1.0/+W(ba);g[al>>2]=0.0;bg=a8*(-0.0-be);g[am>>2]=bg;bf=a8*bh;g[an>>2]=bf;bh=ba*a8;g[ao>>2]=bh;a8=+g[bn>>2];ba=bf*(-0.0-a8);g[ap>>2]=ba;bo=0.0;bp=bg;bq=bf;br=bh;bs=ba;bt=a8*bg}else{bg=+g[bn>>2];a8=+g[d+4+(u*184|0)+68>>2];ba=bg*bg+a8*a8;bh=1.0/+W(ba);bf=bh*(-0.0-a8);g[al>>2]=bf;a8=bh*bg;g[am>>2]=a8;g[an>>2]=0.0;bg=a8*(-0.0-be);g[ao>>2]=bg;bi=be*bf;g[ap>>2]=bi;bo=bf;bp=a8;bq=0.0;br=bg;bs=bi;bt=ba*bh}g[aq>>2]=bt;do{if(J){bu=bo;bv=bp;bw=bq}else{if((c[_>>2]&2|0)==0){bu=bo;bv=bp;bw=bq;break}bh=+g[$>>2];ba=+g[aa>>2];bi=+g[ab>>2];bg=+g[ac>>2];a8=+g[ad>>2];bf=+g[ae>>2];be=+g[af>>2];bb=+g[ag>>2];a0=+g[ah>>2];bc=(bh*bo+ba*bp+bi*bq)*+g[ai>>2];a2=(bo*bg+bp*a8+bq*bf)*+g[aj>>2];bd=(bo*be+bp*bb+bq*a0)*+g[ak>>2];a3=bh*bc+bg*a2+be*bd;be=ba*bc+a8*a2+bb*bd;bb=bi*bc+bf*a2+a0*bd;g[al>>2]=a3;g[am>>2]=be;g[an>>2]=bb;g[as>>2]=0.0;bu=a3;bv=be;bw=bb}}while(0);do{if(K){bx=bu;by=bv;bz=bw}else{if((c[L>>2]&2|0)==0){bx=bu;by=bv;bz=bw;break}bb=+g[M>>2];be=+g[N>>2];a3=+g[O>>2];bd=+g[P>>2];a0=+g[Q>>2];a2=+g[R>>2];bf=+g[S>>2];bc=+g[T>>2];bi=+g[U>>2];a8=(bb*bu+be*bv+a3*bw)*+g[X>>2];ba=(bu*bd+bv*a0+bw*a2)*+g[Y>>2];bg=(bu*bf+bv*bc+bw*bi)*+g[Z>>2];bh=bb*a8+bd*ba+bf*bg;bf=be*a8+a0*ba+bc*bg;bc=a3*a8+a2*ba+bi*bg;g[al>>2]=bh;g[am>>2]=bf;g[an>>2]=bc;g[as>>2]=0.0;bx=bh;by=bf;bz=bc}}while(0);do{if(J){bA=br;bB=bs;bC=bt}else{if((c[_>>2]&2|0)==0){bA=br;bB=bs;bC=bt;break}bc=+g[$>>2];bf=+g[aa>>2];bh=+g[ab>>2];bg=+g[ac>>2];bi=+g[ad>>2];ba=+g[ae>>2];a2=+g[af>>2];a8=+g[ag>>2];a3=+g[ah>>2];a0=(bc*br+bf*bs+bh*bt)*+g[ai>>2];be=(br*bg+bs*bi+bt*ba)*+g[aj>>2];bd=(br*a2+bs*a8+bt*a3)*+g[ak>>2];bb=bc*a0+bg*be+a2*bd;a2=bf*a0+bi*be+a8*bd;a8=bh*a0+ba*be+a3*bd;g[ao>>2]=bb;g[ap>>2]=a2;g[aq>>2]=a8;g[ar>>2]=0.0;bA=bb;bB=a2;bC=a8}}while(0);do{if(K){bD=bA;bE=bB;bF=bC}else{if((c[L>>2]&2|0)==0){bD=bA;bE=bB;bF=bC;break}a8=+g[M>>2];a2=+g[N>>2];bb=+g[O>>2];bd=+g[P>>2];a3=+g[Q>>2];be=+g[R>>2];ba=+g[S>>2];a0=+g[T>>2];bh=+g[U>>2];bi=(a8*bA+a2*bB+bb*bC)*+g[X>>2];bf=(bA*bd+bB*a3+bC*be)*+g[Y>>2];bg=(bA*ba+bB*a0+bC*bh)*+g[Z>>2];bc=a8*bi+bd*bf+ba*bg;ba=a2*bi+a3*bf+a0*bg;a0=bb*bi+be*bf+bh*bg;g[ao>>2]=bc;g[ap>>2]=ba;g[aq>>2]=a0;g[ar>>2]=0.0;bD=bc;bE=ba;bF=a0}}while(0);if(+W(bx*bx+by*by+bz*bz)>.001){xP(b,o,s,t,aM,aK,0,0,0,0,0.0,0.0,0.0)|0}if(+W(bD*bD+bE*bE+bF*bF)<=.001){bm=aR;break}xP(b,p,s,t,aM,aK,0,0,0,0,0.0,0.0,0.0)|0;bm=aR}else{bm=aJ}}while(0);do{if((c[at>>2]&32|0)!=0){if((a[d+4+(u*184|0)+116|0]&1)==0){break}a$=+g[k>>2];xN(b,d+4+(u*184|0)+152|0,s,t,aM,aK,h,j,0,0,a$,+g[d+4+(u*184|0)+132>>2],+g[d+4+(u*184|0)+140>>2])|0;if((c[at>>2]&16|0)!=0){xN(b,d+4+(u*184|0)+168|0,s,t,aM,aK,h,j,0,0,a$,+g[d+4+(u*184|0)+136>>2],+g[d+4+(u*184|0)+144>>2])|0}xS(b,aS,s,t,aK,e);aL=bm;break L16}}while(0);aS=d+4+(u*184|0)+152|0;a$=+g[d+4+(u*184|0)+64>>2];a_=+g[l>>2];aZ=+g[d+4+(u*184|0)+68>>2];a0=+g[d+4+(u*184|0)+72>>2];ba=+g[au>>2]-a$*a_;bc=+g[av>>2]-a_*aZ;bg=+g[aw>>2]-a_*a0;g[d+4+(u*184|0)+152>>2]=ba;bn=d+4+(u*184|0)+156|0;g[bn>>2]=bc;aN=d+4+(u*184|0)+160|0;g[aN>>2]=bg;g[d+4+(u*184|0)+164>>2]=0.0;bG=aS|0;a_=ba*ba+bc*bc+bg*bg;if((c[at>>2]&64|0)==0&a_>1.1920928955078125e-7){bh=1.0/+W(a_);a_=ba*bh;g[bG>>2]=a_;ba=bh*bc;g[bn>>2]=ba;bc=bh*bg;g[aN>>2]=bc;if((c[at>>2]&16|0)==0){bH=+g[k>>2]}else{bI=d+4+(u*184|0)+168|0;bg=ba*a0-bc*aZ;bh=bc*a$-a0*a_;bc=aZ*a_-ba*a$;g[d+4+(u*184|0)+168>>2]=bg;g[d+4+(u*184|0)+180>>2]=0.0;ba=1.0/+W(bg*bg+bh*bh+bc*bc);g[bI>>2]=bg*ba;g[d+4+(u*184|0)+172>>2]=bh*ba;g[d+4+(u*184|0)+176>>2]=bc*ba;xU(q,bI,1);xU(r,bI,1);ba=+g[k>>2];xN(b,bI,s,t,aM,aK,h,j,0,0,ba,0.0,0.0)|0;bH=ba}xU(q,aS,1);xU(r,aS,1);xN(b,aS,s,t,aM,aK,h,j,0,0,bH,0.0,0.0)|0;aL=bm;break}bI=d+4+(u*184|0)+168|0;if(+V(+a0)>.7071067690849304){ba=a0*a0+aZ*aZ;bc=1.0/+W(ba);g[bG>>2]=0.0;bh=bc*(-0.0-a0);g[bn>>2]=bh;bg=bc*aZ;g[aN>>2]=bg;g[bI>>2]=ba*bc;g[d+4+(u*184|0)+172>>2]=bg*(-0.0-a$);g[d+4+(u*184|0)+176>>2]=a$*bh}else{bh=a$*a$+aZ*aZ;bg=1.0/+W(bh);bc=bg*(-0.0-aZ);g[bG>>2]=bc;aZ=bg*a$;g[bn>>2]=aZ;g[aN>>2]=0.0;g[bI>>2]=aZ*(-0.0-a0);g[d+4+(u*184|0)+172>>2]=a0*bc;g[d+4+(u*184|0)+176>>2]=bh*bg}if((c[at>>2]&16|0)==0){bJ=+g[k>>2]}else{xU(q,bI,1);xU(r,bI,1);bg=+g[k>>2];xN(b,bI,s,t,aM,aK,h,j,0,0,bg,0.0,0.0)|0;bJ=bg}xU(q,aS,1);xU(r,aS,1);xN(b,aS,s,t,aM,aK,h,j,0,0,bJ,0.0,0.0)|0;if((c[at>>2]&80|0)!=80){aL=bm;break}a[d+4+(u*184|0)+116|0]=1;aL=bm}}while(0);aK=u+1|0;if((aK|0)<(c[w>>2]|0)){u=aK;aJ=aL}else{break}}i=f;return}function xU(a,b,d){a=a|0;b=b|0;d=d|0;var e=0.0,f=0.0,h=0.0,i=0,j=0.0,k=0.0,l=0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0;if((a|0)==0){return}if((c[a+180>>2]&d|0)==0){return}e=+g[a+4>>2];d=b|0;f=+g[d>>2];h=+g[a+20>>2];i=b+4|0;j=+g[i>>2];k=+g[a+36>>2];l=b+8|0;m=+g[l>>2];n=+g[a+8>>2];o=+g[a+24>>2];p=+g[a+40>>2];q=+g[a+12>>2];r=+g[a+28>>2];s=+g[a+44>>2];t=(e*f+h*j+k*m)*+g[a+164>>2];u=(f*n+j*o+m*p)*+g[a+168>>2];v=(f*q+j*r+m*s)*+g[a+172>>2];g[d>>2]=e*t+n*u+q*v;g[i>>2]=h*t+o*u+r*v;g[l>>2]=k*t+p*u+s*v;g[b+12>>2]=0.0;return}function xV(b,d,e,f,h,j,k,l,m,n){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;var o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0.0,N=0.0,O=0.0,P=0.0,Q=0.0,R=0.0,S=0.0,T=0.0,U=0.0,W=0.0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0,ai=0,aj=0,ak=0,al=0,am=0,an=0,ao=0,ap=0,aq=0,ar=0,as=0,at=0,au=0,av=0,aw=0,ax=0,ay=0,az=0,aA=0,aB=0,aC=0,aD=0,aE=0,aF=0,aG=0,aH=0,aI=0,aJ=0,aK=0,aL=0,aM=0,aN=0,aO=0,aP=0,aQ=0,aR=0,aS=0,aT=0.0,aU=0.0,aV=0.0,aW=0.0,aX=0,aY=0,aZ=0,a_=0,a$=0,a0=0,a1=0,a2=0;n=i;i=i+488|0;m=n|0;o=n+208|0;p=n+416|0;q=n+432|0;z_(13008);r=b+184|0;c[r>>2]=0;s=(e|0)>0;if(s){t=0;do{c[(c[d+(t<<2)>>2]|0)+212>>2]=-1;t=t+1|0;}while((t|0)<(e|0))}t=b+4|0;xW(t,e+1|0);u=m;K1(u|0,0,208)|0;v=b+8|0;w=c[v>>2]|0;if((w|0)<0){xW(t,0);x=b+16|0;y=m+16|0;z=m+32|0;A=m+48|0;B=m+64|0;C=m+80|0;D=m+96|0;E=m+112|0;F=m+128|0;G=m+144|0;H=m+160|0;I=m+176|0;J=m+192|0;m=w;do{w=c[x>>2]|0;K=w+(m*212|0)|0;c[K>>2]=c[u>>2];c[K+4>>2]=c[u+4>>2];c[K+8>>2]=c[u+8>>2];c[K+12>>2]=c[u+12>>2];K=w+(m*212|0)+16|0;c[K>>2]=c[y>>2];c[K+4>>2]=c[y+4>>2];c[K+8>>2]=c[y+8>>2];c[K+12>>2]=c[y+12>>2];K=w+(m*212|0)+32|0;c[K>>2]=c[z>>2];c[K+4>>2]=c[z+4>>2];c[K+8>>2]=c[z+8>>2];c[K+12>>2]=c[z+12>>2];K=w+(m*212|0)+48|0;c[K>>2]=c[A>>2];c[K+4>>2]=c[A+4>>2];c[K+8>>2]=c[A+8>>2];c[K+12>>2]=c[A+12>>2];K=w+(m*212|0)+64|0;c[K>>2]=c[B>>2];c[K+4>>2]=c[B+4>>2];c[K+8>>2]=c[B+8>>2];c[K+12>>2]=c[B+12>>2];K=w+(m*212|0)+80|0;c[K>>2]=c[C>>2];c[K+4>>2]=c[C+4>>2];c[K+8>>2]=c[C+8>>2];c[K+12>>2]=c[C+12>>2];K=w+(m*212|0)+96|0;c[K>>2]=c[D>>2];c[K+4>>2]=c[D+4>>2];c[K+8>>2]=c[D+8>>2];c[K+12>>2]=c[D+12>>2];K=w+(m*212|0)+112|0;c[K>>2]=c[E>>2];c[K+4>>2]=c[E+4>>2];c[K+8>>2]=c[E+8>>2];c[K+12>>2]=c[E+12>>2];K=w+(m*212|0)+128|0;c[K>>2]=c[F>>2];c[K+4>>2]=c[F+4>>2];c[K+8>>2]=c[F+8>>2];c[K+12>>2]=c[F+12>>2];K=w+(m*212|0)+144|0;c[K>>2]=c[G>>2];c[K+4>>2]=c[G+4>>2];c[K+8>>2]=c[G+8>>2];c[K+12>>2]=c[G+12>>2];K=w+(m*212|0)+160|0;c[K>>2]=c[H>>2];c[K+4>>2]=c[H+4>>2];c[K+8>>2]=c[H+8>>2];c[K+12>>2]=c[H+12>>2];K=w+(m*212|0)+176|0;c[K>>2]=c[I>>2];c[K+4>>2]=c[I+4>>2];c[K+8>>2]=c[I+8>>2];c[K+12>>2]=c[I+12>>2];K=w+(m*212|0)+192|0;c[K>>2]=c[J>>2];c[K+4>>2]=c[J+4>>2];c[K+8>>2]=c[J+8>>2];c[K+12>>2]=c[J+12>>2];c[w+(m*212|0)+208>>2]=0;m=m+1|0;}while((m|0)<0)}c[v>>2]=0;m=o;K1(m|0,0,208)|0;if((c[b+12>>2]|0)==0){xW(t,1);L=(c[v>>2]|0)+1|0}else{L=1}c[v>>2]=L;L=b+16|0;v=c[L>>2]|0;t=v;c[t>>2]=c[m>>2];c[t+4>>2]=c[m+4>>2];c[t+8>>2]=c[m+8>>2];c[t+12>>2]=c[m+12>>2];m=v+16|0;t=o+16|0;c[m>>2]=c[t>>2];c[m+4>>2]=c[t+4>>2];c[m+8>>2]=c[t+8>>2];c[m+12>>2]=c[t+12>>2];t=v+32|0;m=o+32|0;c[t>>2]=c[m>>2];c[t+4>>2]=c[m+4>>2];c[t+8>>2]=c[m+8>>2];c[t+12>>2]=c[m+12>>2];m=v+48|0;t=o+48|0;c[m>>2]=c[t>>2];c[m+4>>2]=c[t+4>>2];c[m+8>>2]=c[t+8>>2];c[m+12>>2]=c[t+12>>2];t=v+64|0;m=o+64|0;c[t>>2]=c[m>>2];c[t+4>>2]=c[m+4>>2];c[t+8>>2]=c[m+8>>2];c[t+12>>2]=c[m+12>>2];m=v+80|0;t=o+80|0;c[m>>2]=c[t>>2];c[m+4>>2]=c[t+4>>2];c[m+8>>2]=c[t+8>>2];c[m+12>>2]=c[t+12>>2];t=v+96|0;m=o+96|0;c[t>>2]=c[m>>2];c[t+4>>2]=c[m+4>>2];c[t+8>>2]=c[m+8>>2];c[t+12>>2]=c[m+12>>2];m=v+112|0;t=o+112|0;c[m>>2]=c[t>>2];c[m+4>>2]=c[t+4>>2];c[m+8>>2]=c[t+8>>2];c[m+12>>2]=c[t+12>>2];t=v+128|0;m=o+128|0;c[t>>2]=c[m>>2];c[t+4>>2]=c[m+4>>2];c[t+8>>2]=c[m+8>>2];c[t+12>>2]=c[m+12>>2];m=v+144|0;t=o+144|0;c[m>>2]=c[t>>2];c[m+4>>2]=c[t+4>>2];c[m+8>>2]=c[t+8>>2];c[m+12>>2]=c[t+12>>2];t=v+160|0;m=o+160|0;c[t>>2]=c[m>>2];c[t+4>>2]=c[m+4>>2];c[t+8>>2]=c[m+8>>2];c[t+12>>2]=c[m+12>>2];m=v+176|0;t=o+176|0;c[m>>2]=c[t>>2];c[m+4>>2]=c[t+4>>2];c[m+8>>2]=c[t+8>>2];c[m+12>>2]=c[t+12>>2];t=v+192|0;m=o+192|0;c[t>>2]=c[m>>2];c[t+4>>2]=c[m+4>>2];c[t+8>>2]=c[m+8>>2];c[t+12>>2]=c[m+12>>2];c[v+208>>2]=0;v=c[L>>2]|0;K1(v+64|0,0,32)|0;K1(v+144|0,0,32)|0;g[v>>2]=1.0;K1(v+4|0,0,16)|0;g[v+20>>2]=1.0;K1(v+24|0,0,16)|0;g[v+40>>2]=1.0;K1(v+44|0,0,20)|0;c[v+208>>2]=0;K1(v+128|0,0,16)|0;g[v+96>>2]=1.0;g[v+100>>2]=1.0;g[v+104>>2]=1.0;g[v+108>>2]=0.0;g[v+112>>2]=1.0;g[v+116>>2]=1.0;g[v+120>>2]=1.0;g[v+124>>2]=0.0;K1(v+176|0,0,32)|0;if(s){s=l+12|0;v=l+76|0;m=p|0;t=p+4|0;o=p+8|0;J=0;do{I=d+(J<<2)|0;H=xQ(b,c[I>>2]|0)|0;G=c[I>>2]|0;do{if((c[G+236>>2]&2|0)!=0){if((G|0)==0){break}I=G+340|0;M=+g[I>>2];if(M==0.0){break}F=c[L>>2]|0;if((c[G+500>>2]&2|0)==0){N=0.0;O=0.0;P=0.0;Q=M}else{zj(p,G,+g[v>>2]);N=+g[m>>2];O=+g[t>>2];P=+g[o>>2];Q=+g[I>>2]}M=+g[s>>2];R=Q*+g[G+412>>2]*M;S=M*Q*+g[G+416>>2];I=F+(H*212|0)+176|0;g[I>>2]=Q*+g[G+408>>2]*M+ +g[I>>2];I=F+(H*212|0)+180|0;g[I>>2]=R+ +g[I>>2];I=F+(H*212|0)+184|0;g[I>>2]=S+ +g[I>>2];S=+g[G+424>>2]-N;R=+g[G+428>>2]-O;M=+g[G+432>>2]-P;T=+g[s>>2];U=(S*+g[G+264>>2]+R*+g[G+280>>2]+M*+g[G+296>>2])*T;W=T*(S*+g[G+268>>2]+R*+g[G+284>>2]+M*+g[G+300>>2]);I=F+(H*212|0)+192|0;g[I>>2]=(S*+g[G+260>>2]+R*+g[G+276>>2]+M*+g[G+292>>2])*T+ +g[I>>2];I=F+(H*212|0)+196|0;g[I>>2]=U+ +g[I>>2];I=F+(H*212|0)+200|0;g[I>>2]=W+ +g[I>>2]}}while(0);J=J+1|0;}while((J|0)<(e|0))}e=(k|0)>0;if(e){J=0;do{s=c[j+(J<<2)>>2]|0;g$[c[(c[s>>2]|0)+8>>2]&1023](s);g[s+36>>2]=0.0;J=J+1|0;}while((J|0)<(k|0))}J=b+168|0;s=c[J>>2]|0;do{if((s|0)<(k|0)){o=b+172|0;if((c[o>>2]|0)>=(k|0)){break}if((k|0)==0){X=0;Y=s}else{t=zv(k<<3,16)|0;X=t;Y=c[J>>2]|0}t=b+176|0;if((Y|0)>0){m=0;do{v=X+(m<<3)|0;if((v|0)!=0){p=(c[t>>2]|0)+(m<<3)|0;d=v;v=c[p+4>>2]|0;c[d>>2]=c[p>>2];c[d+4>>2]=v}m=m+1|0;}while((m|0)<(Y|0))}m=c[t>>2]|0;v=b+180|0;if((m|0)!=0){if((a[v]&1)!=0){zw(m)}c[t>>2]=0}a[v]=1;c[t>>2]=X;c[o>>2]=k}}while(0);c[J>>2]=k;if(e){J=b+176|0;X=0;Y=0;while(1){s=c[J>>2]|0;v=s+(X<<3)|0;m=j+(X<<2)|0;d=c[m>>2]|0;p=c[d+44>>2]|0;if((p|0)==0){Z=d}else{K1(p|0,0,64)|0;Z=c[m>>2]|0}if((a[Z+20|0]&1)==0){c[v>>2]=0;c[s+(X<<3)+4>>2]=0;_=0}else{g0[c[(c[Z>>2]|0)+16>>2]&511](Z,v);_=c[v>>2]|0}v=_+Y|0;s=X+1|0;if((s|0)<(k|0)){X=s;Y=v}else{$=v;break}}}else{$=0}Y=b+48|0;X=c[Y>>2]|0;do{if((X|0)<($|0)){_=b+52|0;if((c[_>>2]|0)>=($|0)){break}if(($|0)==0){aa=0;ab=X}else{Z=zv($*136|0,16)|0;aa=Z;ab=c[Y>>2]|0}Z=b+56|0;if((ab|0)>0){J=0;do{K2(aa+(J*136|0)|0,(c[Z>>2]|0)+(J*136|0)|0,136)|0;J=J+1|0;}while((J|0)<(ab|0))}J=c[Z>>2]|0;o=b+60|0;if((J|0)!=0){if((a[o]&1)!=0){zw(J)}c[Z>>2]=0}a[o]=1;c[Z>>2]=aa;c[_>>2]=$}}while(0);c[Y>>2]=$;if(e){e=b+176|0;$=b+56|0;aa=l+12|0;ab=q|0;X=l+32|0;o=q+4|0;J=q+8|0;t=q+12|0;v=q+16|0;s=q+20|0;m=q+24|0;p=q+28|0;d=l+40|0;H=l+4|0;G=q+52|0;I=q+32|0;F=q+36|0;E=q+40|0;D=l+20|0;C=q+48|0;B=0;A=0;z=c[e>>2]|0;while(1){y=z+(A<<3)|0;if((c[y>>2]|0)==0){ac=z;ad=0}else{u=c[$>>2]|0;x=j+(A<<2)|0;w=c[x>>2]|0;K=w+28|0;ae=c[K>>2]|0;af=w+32|0;ag=c[af>>2]|0;ah=xQ(b,ae|0)|0;ai=xQ(b,ag|0)|0;aj=c[L>>2]|0;ak=c[w+24>>2]|0;if((ak|0)>0){al=ak}else{al=c[D>>2]|0}if((al|0)>(c[r>>2]|0)){c[r>>2]=al}if((c[y>>2]|0)>0){ak=0;do{am=ak+B|0;K1(u+(am*136|0)|0,0,136)|0;g[u+(am*136|0)+104>>2]=-3.4028234663852886e+38;g[u+(am*136|0)+108>>2]=3.4028234663852886e+38;g[u+(am*136|0)+84>>2]=0.0;g[u+(am*136|0)+80>>2]=0.0;c[u+(am*136|0)+128>>2]=ah;c[u+(am*136|0)+132>>2]=ai;c[u+(am*136|0)+120>>2]=al;ak=ak+1|0;}while((ak|0)<(c[y>>2]|0))}K1(aj+(ah*212|0)+64|0,0,32)|0;K1(aj+(ah*212|0)+144|0,0,32)|0;K1(aj+(ai*212|0)+64|0,0,32)|0;K1(aj+(ai*212|0)+144|0,0,32)|0;g[ab>>2]=1.0/+g[aa>>2];g[o>>2]=+g[X>>2];c[J>>2]=u+(B*136|0)+16;c[t>>2]=u+(B*136|0);c[v>>2]=0;c[s>>2]=u+(B*136|0)+32;c[m>>2]=34;c[p>>2]=u+(B*136|0)+96;ak=u+(B*136|0)+100|0;g[ak>>2]=+g[d>>2];g[G>>2]=+g[H>>2];c[I>>2]=ak;c[F>>2]=u+(B*136|0)+104;c[E>>2]=u+(B*136|0)+108;c[C>>2]=c[D>>2];ak=c[x>>2]|0;g0[c[(c[ak>>2]|0)+20>>2]&511](ak,q);if((c[y>>2]|0)>0){ak=w;_=ae+340|0;Z=ae+260|0;am=ae+264|0;an=ae+268|0;ao=ae+276|0;ap=ae+280|0;aq=ae+284|0;ar=ae+292|0;as=ae+296|0;at=ae+300|0;au=ag+340|0;av=ag+260|0;aw=ag+264|0;ax=ag+268|0;ay=ag+276|0;az=ag+280|0;aA=ag+284|0;aB=ag+292|0;aC=ag+296|0;aD=ag+300|0;aE=ae+308|0;aF=ae+312|0;aG=ae+316|0;aH=ae+324|0;aI=ae+328|0;aJ=ae+332|0;aK=ag+308|0;aL=ag+312|0;aM=ag+316|0;aN=ag+324|0;aO=ag+328|0;aP=ag+332|0;aQ=0;do{aR=aQ+B|0;aS=u+(aR*136|0)+108|0;P=+g[(c[x>>2]|0)+16>>2];if(+g[aS>>2]<P){aT=P}else{g[aS>>2]=P;aT=+g[(c[x>>2]|0)+16>>2]}aS=u+(aR*136|0)+104|0;P=-0.0-aT;if(+g[aS>>2]<=P){g[aS>>2]=P}c[u+(aR*136|0)+116>>2]=ak;aS=c[K>>2]|0;P=+g[u+(aR*136|0)>>2];O=+g[u+(aR*136|0)+4>>2];N=+g[u+(aR*136|0)+8>>2];Q=(P*+g[aS+276>>2]+O*+g[aS+280>>2]+N*+g[aS+284>>2])*+g[aS+544>>2];W=(P*+g[aS+292>>2]+O*+g[aS+296>>2]+N*+g[aS+300>>2])*+g[aS+548>>2];g[u+(aR*136|0)+48>>2]=(+g[aS+260>>2]*P+ +g[aS+264>>2]*O+ +g[aS+268>>2]*N)*+g[aS+540>>2];g[u+(aR*136|0)+52>>2]=Q;g[u+(aR*136|0)+56>>2]=W;g[u+(aR*136|0)+60>>2]=0.0;aS=c[af>>2]|0;W=+g[u+(aR*136|0)+32>>2];Q=+g[u+(aR*136|0)+36>>2];U=+g[u+(aR*136|0)+40>>2];T=(W*+g[aS+276>>2]+Q*+g[aS+280>>2]+U*+g[aS+284>>2])*+g[aS+544>>2];M=(W*+g[aS+292>>2]+Q*+g[aS+296>>2]+U*+g[aS+300>>2])*+g[aS+548>>2];g[u+(aR*136|0)+64>>2]=(+g[aS+260>>2]*W+ +g[aS+264>>2]*Q+ +g[aS+268>>2]*U)*+g[aS+540>>2];g[u+(aR*136|0)+68>>2]=T;g[u+(aR*136|0)+72>>2]=M;g[u+(aR*136|0)+76>>2]=0.0;M=+g[_>>2];T=+g[u+(aR*136|0)+16>>2];R=+g[u+(aR*136|0)+20>>2];S=+g[u+(aR*136|0)+24>>2];aU=+g[au>>2];aV=T*M*T+R*M*R+S*M*S+(P*(+g[Z>>2]*P+ +g[am>>2]*O+ +g[an>>2]*N)+O*(P*+g[ao>>2]+O*+g[ap>>2]+N*+g[aq>>2])+N*(P*+g[ar>>2]+O*+g[as>>2]+N*+g[at>>2]))+(S*S*aU+(T*T*aU+R*R*aU))+(W*(+g[av>>2]*W+ +g[aw>>2]*Q+ +g[ax>>2]*U)+Q*(W*+g[ay>>2]+Q*+g[az>>2]+U*+g[aA>>2])+U*(W*+g[aB>>2]+Q*+g[aC>>2]+U*+g[aD>>2]));if(+V(+aV)>1.1920928955078125e-7){aW=1.0/aV}else{aW=0.0}g[u+(aR*136|0)+92>>2]=aW;aS=u+(aR*136|0)+96|0;g[aS>>2]=aW*+g[aS>>2]+aW*(0.0- +g[G>>2]*(T*+g[aE>>2]+R*+g[aF>>2]+S*+g[aG>>2]+(P*+g[aH>>2]+O*+g[aI>>2]+N*+g[aJ>>2])+(W*+g[aN>>2]+Q*+g[aO>>2]+U*+g[aP>>2]-(T*+g[aK>>2]+R*+g[aL>>2]+S*+g[aM>>2]))));g[u+(aR*136|0)+84>>2]=0.0;aQ=aQ+1|0;}while((aQ|0)<(c[y>>2]|0))}y=c[e>>2]|0;ac=y;ad=c[y+(A<<3)>>2]|0}y=A+1|0;if((y|0)<(k|0)){B=ad+B|0;A=y;z=ac}else{break}}}if((h|0)>0){ac=0;do{xT(b,c[f+(ac<<2)>>2]|0,l);ac=ac+1|0;}while((ac|0)<(h|0))}h=c[Y>>2]|0;Y=c[b+28>>2]|0;ac=c[b+68>>2]|0;f=b+128|0;z=c[f>>2]|0;do{if((z|0)<(h|0)){A=b+132|0;if((c[A>>2]|0)>=(h|0)){break}if((h|0)==0){aX=0;aY=z}else{B=zv(h<<2,16)|0;aX=B;aY=c[f>>2]|0}B=b+136|0;if((aY|0)>0){ad=0;do{k=aX+(ad<<2)|0;if((k|0)!=0){c[k>>2]=c[(c[B>>2]|0)+(ad<<2)>>2]}ad=ad+1|0;}while((ad|0)<(aY|0))}ad=c[B>>2]|0;k=b+140|0;if((ad|0)!=0){if((a[k]&1)!=0){zw(ad)}c[B>>2]=0}a[k]=1;c[B>>2]=aX;c[A>>2]=h}}while(0);c[f>>2]=h;if((c[l+64>>2]&16|0)==0){l=b+108|0;f=c[l>>2]|0;do{if((f|0)<(Y|0)){aX=b+112|0;if((c[aX>>2]|0)>=(Y|0)){break}if((Y|0)==0){aZ=0;a_=f}else{aY=zv(Y<<2,16)|0;aZ=aY;a_=c[l>>2]|0}aY=b+116|0;if((a_|0)>0){z=0;do{k=aZ+(z<<2)|0;if((k|0)!=0){c[k>>2]=c[(c[aY>>2]|0)+(z<<2)>>2]}z=z+1|0;}while((z|0)<(a_|0))}z=c[aY>>2]|0;A=b+120|0;if((z|0)!=0){if((a[A]&1)!=0){zw(z)}c[aY>>2]=0}a[A]=1;c[aY>>2]=aZ;c[aX>>2]=Y}}while(0);c[l>>2]=Y}else{l=Y<<1;aZ=b+108|0;a_=c[aZ>>2]|0;do{if((a_|0)<(l|0)){f=b+112|0;if((c[f>>2]|0)>=(l|0)){break}if((l|0)==0){a$=0;a0=a_}else{A=zv(Y<<3,16)|0;a$=A;a0=c[aZ>>2]|0}A=b+116|0;if((a0|0)>0){z=0;do{B=a$+(z<<2)|0;if((B|0)!=0){c[B>>2]=c[(c[A>>2]|0)+(z<<2)>>2]}z=z+1|0;}while((z|0)<(a0|0))}z=c[A>>2]|0;aX=b+120|0;if((z|0)!=0){if((a[aX]&1)!=0){zw(z)}c[A>>2]=0}a[aX]=1;c[A>>2]=a$;c[f>>2]=l}}while(0);c[aZ>>2]=l}l=b+148|0;aZ=c[l>>2]|0;do{if((aZ|0)<(ac|0)){a$=b+152|0;if((c[a$>>2]|0)>=(ac|0)){break}if((ac|0)==0){a1=0;a2=aZ}else{a0=zv(ac<<2,16)|0;a1=a0;a2=c[l>>2]|0}a0=b+156|0;if((a2|0)>0){a_=0;do{aX=a1+(a_<<2)|0;if((aX|0)!=0){c[aX>>2]=c[(c[a0>>2]|0)+(a_<<2)>>2]}a_=a_+1|0;}while((a_|0)<(a2|0))}a_=c[a0>>2]|0;f=b+160|0;if((a_|0)!=0){if((a[f]&1)!=0){zw(a_)}c[a0>>2]=0}a[f]=1;c[a0>>2]=a1;c[a$>>2]=ac}}while(0);c[l>>2]=ac;if((h|0)>0){l=b+136|0;a1=0;do{c[(c[l>>2]|0)+(a1<<2)>>2]=a1;a1=a1+1|0;}while((a1|0)<(h|0))}if((Y|0)>0){h=b+116|0;a1=0;do{c[(c[h>>2]|0)+(a1<<2)>>2]=a1;a1=a1+1|0;}while((a1|0)<(Y|0))}if((ac|0)>0){Y=b+156|0;b=0;do{c[(c[Y>>2]|0)+(b<<2)>>2]=b;b=b+1|0;}while((b|0)<(ac|0))}z$();i=n;return+0.0}function xW(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;e=b+8|0;if((c[e>>2]|0)>=(d|0)){return}if((d|0)==0){f=0}else{f=zv(d*212|0,16)|0}g=c[b+4>>2]|0;h=b+12|0;if((g|0)>0){i=0;do{j=c[h>>2]|0;k=f+(i*212|0)|0;l=j+(i*212|0)|0;c[k>>2]=c[l>>2];c[k+4>>2]=c[l+4>>2];c[k+8>>2]=c[l+8>>2];c[k+12>>2]=c[l+12>>2];l=f+(i*212|0)+16|0;k=j+(i*212|0)+16|0;c[l>>2]=c[k>>2];c[l+4>>2]=c[k+4>>2];c[l+8>>2]=c[k+8>>2];c[l+12>>2]=c[k+12>>2];k=f+(i*212|0)+32|0;l=j+(i*212|0)+32|0;c[k>>2]=c[l>>2];c[k+4>>2]=c[l+4>>2];c[k+8>>2]=c[l+8>>2];c[k+12>>2]=c[l+12>>2];l=f+(i*212|0)+48|0;k=j+(i*212|0)+48|0;c[l>>2]=c[k>>2];c[l+4>>2]=c[k+4>>2];c[l+8>>2]=c[k+8>>2];c[l+12>>2]=c[k+12>>2];k=f+(i*212|0)+64|0;l=j+(i*212|0)+64|0;c[k>>2]=c[l>>2];c[k+4>>2]=c[l+4>>2];c[k+8>>2]=c[l+8>>2];c[k+12>>2]=c[l+12>>2];l=f+(i*212|0)+80|0;k=j+(i*212|0)+80|0;c[l>>2]=c[k>>2];c[l+4>>2]=c[k+4>>2];c[l+8>>2]=c[k+8>>2];c[l+12>>2]=c[k+12>>2];k=f+(i*212|0)+96|0;l=j+(i*212|0)+96|0;c[k>>2]=c[l>>2];c[k+4>>2]=c[l+4>>2];c[k+8>>2]=c[l+8>>2];c[k+12>>2]=c[l+12>>2];l=f+(i*212|0)+112|0;k=j+(i*212|0)+112|0;c[l>>2]=c[k>>2];c[l+4>>2]=c[k+4>>2];c[l+8>>2]=c[k+8>>2];c[l+12>>2]=c[k+12>>2];k=f+(i*212|0)+128|0;l=j+(i*212|0)+128|0;c[k>>2]=c[l>>2];c[k+4>>2]=c[l+4>>2];c[k+8>>2]=c[l+8>>2];c[k+12>>2]=c[l+12>>2];l=f+(i*212|0)+144|0;k=j+(i*212|0)+144|0;c[l>>2]=c[k>>2];c[l+4>>2]=c[k+4>>2];c[l+8>>2]=c[k+8>>2];c[l+12>>2]=c[k+12>>2];k=f+(i*212|0)+160|0;l=j+(i*212|0)+160|0;c[k>>2]=c[l>>2];c[k+4>>2]=c[l+4>>2];c[k+8>>2]=c[l+8>>2];c[k+12>>2]=c[l+12>>2];l=f+(i*212|0)+176|0;k=j+(i*212|0)+176|0;c[l>>2]=c[k>>2];c[l+4>>2]=c[k+4>>2];c[l+8>>2]=c[k+8>>2];c[l+12>>2]=c[k+12>>2];k=f+(i*212|0)+192|0;l=j+(i*212|0)+192|0;c[k>>2]=c[l>>2];c[k+4>>2]=c[l+4>>2];c[k+8>>2]=c[l+8>>2];c[k+12>>2]=c[l+12>>2];c[f+(i*212|0)+208>>2]=c[j+(i*212|0)+208>>2];i=i+1|0;}while((i|0)<(g|0))}g=c[h>>2]|0;i=b+16|0;if((g|0)!=0){if((a[i]&1)!=0){zw(g)}c[h>>2]=0}a[i]=1;c[h>>2]=f;c[e>>2]=d;return}function xX(b,d,e,f,h,i,j,k,l,m,n){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;var o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0.0,G=0.0,H=0.0,I=0;n=b+48|0;m=c[n>>2]|0;i=b+28|0;h=c[i>>2]|0;f=b+68|0;e=c[f>>2]|0;o=l+64|0;do{if((c[o>>2]&1|0)!=0){if((m|0)>0){p=b+136|0;q=b+188|0;r=0;do{s=c[p>>2]|0;t=s+(r<<2)|0;u=c[t>>2]|0;r=r+1|0;v=(ag(c[q>>2]|0,1664525)|0)+1013904223|0;c[q>>2]=v;do{if(r>>>0<65537>>>0){w=v>>>16^v;if(r>>>0>=257>>>0){x=w;break}y=w>>>8^w;if(r>>>0>=17>>>0){x=y;break}w=y>>>4^y;if(r>>>0>=5>>>0){x=w;break}y=w>>>2^w;if(r>>>0>=3>>>0){x=y;break}x=y>>>1^y}else{x=v}}while(0);v=(x>>>0)%(r>>>0)|0;c[t>>2]=c[s+(v<<2)>>2];c[(c[p>>2]|0)+(v<<2)>>2]=u;}while((r|0)<(m|0))}if((c[l+20>>2]|0)<=(d|0)){break}if((h|0)>0){r=b+116|0;p=b+188|0;q=0;do{v=c[r>>2]|0;y=v+(q<<2)|0;w=c[y>>2]|0;q=q+1|0;z=(ag(c[p>>2]|0,1664525)|0)+1013904223|0;c[p>>2]=z;do{if(q>>>0<65537>>>0){A=z>>>16^z;if(q>>>0>=257>>>0){B=A;break}C=A>>>8^A;if(q>>>0>=17>>>0){B=C;break}A=C>>>4^C;if(q>>>0>=5>>>0){B=A;break}C=A>>>2^A;if(q>>>0>=3>>>0){B=C;break}B=C>>>1^C}else{B=z}}while(0);z=(B>>>0)%(q>>>0)|0;c[y>>2]=c[v+(z<<2)>>2];c[(c[r>>2]|0)+(z<<2)>>2]=w;}while((q|0)<(h|0))}if((e|0)<=0){break}q=b+156|0;r=b+188|0;p=0;do{z=c[q>>2]|0;u=z+(p<<2)|0;s=c[u>>2]|0;p=p+1|0;t=(ag(c[r>>2]|0,1664525)|0)+1013904223|0;c[r>>2]=t;do{if(p>>>0<65537>>>0){C=t>>>16^t;if(p>>>0>=257>>>0){D=C;break}A=C>>>8^C;if(p>>>0>=17>>>0){D=A;break}C=A>>>4^A;if(p>>>0>=5>>>0){D=C;break}A=C>>>2^C;if(p>>>0>=3>>>0){D=A;break}D=A>>>1^A}else{D=t}}while(0);t=(D>>>0)%(p>>>0)|0;c[u>>2]=c[z+(t<<2)>>2];c[(c[q>>2]|0)+(t<<2)>>2]=s;}while((p|0)<(e|0))}}while(0);e=c[n>>2]|0;D=(e|0)>0;if((c[o>>2]&256|0)==0){if(D){h=b+136|0;B=b+56|0;m=b+16|0;x=0;p=e;while(1){q=c[(c[h>>2]|0)+(x<<2)>>2]|0;r=c[B>>2]|0;if((c[r+(q*136|0)+120>>2]|0)>(d|0)){t=c[m>>2]|0;xJ(0,t+((c[r+(q*136|0)+128>>2]|0)*212|0)|0,t+((c[r+(q*136|0)+132>>2]|0)*212|0)|0,r+(q*136|0)|0);E=c[n>>2]|0}else{E=p}q=x+1|0;if((q|0)<(E|0)){x=q;p=E}else{break}}}if((c[l+20>>2]|0)<=(d|0)){return+0.0}if((k|0)>0){E=b+16|0;p=l+12|0;x=0;do{m=j+(x<<2)|0;B=c[m>>2]|0;if((a[B+20|0]&1)!=0){h=xQ(b,c[B+28>>2]|0)|0;B=xQ(b,c[(c[m>>2]|0)+32>>2]|0)|0;q=c[E>>2]|0;r=c[m>>2]|0;ha[c[(c[r>>2]|0)+24>>2]&31](r,q+(h*212|0)|0,q+(B*212|0)|0,+g[p>>2])}x=x+1|0;}while((x|0)<(k|0))}x=c[i>>2]|0;if((x|0)>0){p=b+116|0;E=b+36|0;B=b+16|0;q=0;do{h=c[(c[p>>2]|0)+(q<<2)>>2]|0;r=c[E>>2]|0;m=c[B>>2]|0;xK(0,m+((c[r+(h*136|0)+128>>2]|0)*212|0)|0,m+((c[r+(h*136|0)+132>>2]|0)*212|0)|0,r+(h*136|0)|0);q=q+1|0;}while((q|0)<(x|0))}x=c[f>>2]|0;if((x|0)>0){q=b+156|0;B=b+76|0;E=b+36|0;p=b+16|0;h=0;do{r=c[(c[q>>2]|0)+(h<<2)>>2]|0;m=c[B>>2]|0;F=+g[(c[E>>2]|0)+((c[m+(r*136|0)+124>>2]|0)*136|0)+84>>2];if(F>0.0){G=F*+g[m+(r*136|0)+88>>2];g[m+(r*136|0)+104>>2]=-0.0-G;g[m+(r*136|0)+108>>2]=G;t=c[p>>2]|0;xJ(0,t+((c[m+(r*136|0)+128>>2]|0)*212|0)|0,t+((c[m+(r*136|0)+132>>2]|0)*212|0)|0,m+(r*136|0)|0)}h=h+1|0;}while((h|0)<(x|0))}x=c[b+88>>2]|0;if((x|0)<=0){return+0.0}h=b+96|0;p=b+36|0;E=b+16|0;B=0;do{q=c[h>>2]|0;G=+g[(c[p>>2]|0)+((c[q+(B*136|0)+124>>2]|0)*136|0)+84>>2];if(G>0.0){F=+g[q+(B*136|0)+88>>2];H=G*F;G=H>F?F:H;g[q+(B*136|0)+104>>2]=-0.0-G;g[q+(B*136|0)+108>>2]=G;r=c[E>>2]|0;xJ(0,r+((c[q+(B*136|0)+128>>2]|0)*212|0)|0,r+((c[q+(B*136|0)+132>>2]|0)*212|0)|0,q+(B*136|0)|0)}B=B+1|0;}while((B|0)<(x|0));return+0.0}if(D){D=b+136|0;x=b+56|0;B=b+16|0;E=0;p=e;while(1){e=c[(c[D>>2]|0)+(E<<2)>>2]|0;h=c[x>>2]|0;if((c[h+(e*136|0)+120>>2]|0)>(d|0)){q=c[B>>2]|0;xJ(0,q+((c[h+(e*136|0)+128>>2]|0)*212|0)|0,q+((c[h+(e*136|0)+132>>2]|0)*212|0)|0,h+(e*136|0)|0);I=c[n>>2]|0}else{I=p}e=E+1|0;if((e|0)<(I|0)){E=e;p=I}else{break}}}if((c[l+20>>2]|0)<=(d|0)){return+0.0}if((k|0)>0){d=b+16|0;I=l+12|0;l=0;do{p=j+(l<<2)|0;E=c[p>>2]|0;if((a[E+20|0]&1)!=0){n=xQ(b,c[E+28>>2]|0)|0;E=xQ(b,c[(c[p>>2]|0)+32>>2]|0)|0;B=c[d>>2]|0;x=c[p>>2]|0;ha[c[(c[x>>2]|0)+24>>2]&31](x,B+(n*212|0)|0,B+(E*212|0)|0,+g[I>>2])}l=l+1|0;}while((l|0)<(k|0))}k=c[o>>2]|0;l=c[i>>2]|0;if((k&512|0)!=0){i=(k>>>4&1)+1|0;if((l|0)<=0){return+0.0}k=b+116|0;I=b+36|0;d=b+16|0;j=b+156|0;E=b+76|0;B=0;do{n=c[(c[k>>2]|0)+(B<<2)>>2]|0;x=c[I>>2]|0;p=c[d>>2]|0;xK(0,p+((c[x+(n*136|0)+128>>2]|0)*212|0)|0,p+((c[x+(n*136|0)+132>>2]|0)*212|0)|0,x+(n*136|0)|0);G=+g[x+(n*136|0)+84>>2];n=ag(B,i)|0;x=c[(c[j>>2]|0)+(n<<2)>>2]|0;p=c[E>>2]|0;D=G>0.0;if(D){H=G*+g[p+(x*136|0)+88>>2];g[p+(x*136|0)+104>>2]=-0.0-H;g[p+(x*136|0)+108>>2]=H;e=c[d>>2]|0;xJ(0,e+((c[p+(x*136|0)+128>>2]|0)*212|0)|0,e+((c[p+(x*136|0)+132>>2]|0)*212|0)|0,p+(x*136|0)|0)}do{if((c[o>>2]&16|0)!=0){x=c[(c[j>>2]|0)+(n+1<<2)>>2]|0;p=c[E>>2]|0;if(!D){break}H=G*+g[p+(x*136|0)+88>>2];g[p+(x*136|0)+104>>2]=-0.0-H;g[p+(x*136|0)+108>>2]=H;e=c[d>>2]|0;xJ(0,e+((c[p+(x*136|0)+128>>2]|0)*212|0)|0,e+((c[p+(x*136|0)+132>>2]|0)*212|0)|0,p+(x*136|0)|0)}}while(0);B=B+1|0;}while((B|0)<(l|0));return+0.0}if((l|0)>0){B=b+116|0;d=b+36|0;E=b+16|0;j=0;do{o=c[(c[B>>2]|0)+(j<<2)>>2]|0;i=c[d>>2]|0;I=c[E>>2]|0;xK(0,I+((c[i+(o*136|0)+128>>2]|0)*212|0)|0,I+((c[i+(o*136|0)+132>>2]|0)*212|0)|0,i+(o*136|0)|0);j=j+1|0;}while((j|0)<(l|0))}l=c[f>>2]|0;if((l|0)>0){f=b+156|0;j=b+76|0;E=b+36|0;d=b+16|0;B=0;do{o=c[(c[f>>2]|0)+(B<<2)>>2]|0;i=c[j>>2]|0;G=+g[(c[E>>2]|0)+((c[i+(o*136|0)+124>>2]|0)*136|0)+84>>2];if(G>0.0){H=G*+g[i+(o*136|0)+88>>2];g[i+(o*136|0)+104>>2]=-0.0-H;g[i+(o*136|0)+108>>2]=H;I=c[d>>2]|0;xJ(0,I+((c[i+(o*136|0)+128>>2]|0)*212|0)|0,I+((c[i+(o*136|0)+132>>2]|0)*212|0)|0,i+(o*136|0)|0)}B=B+1|0;}while((B|0)<(l|0))}l=c[b+88>>2]|0;if((l|0)<=0){return+0.0}B=b+96|0;d=b+36|0;E=b+16|0;b=0;do{j=c[B>>2]|0;H=+g[(c[d>>2]|0)+((c[j+(b*136|0)+124>>2]|0)*136|0)+84>>2];if(H>0.0){G=+g[j+(b*136|0)+88>>2];F=H*G;H=F>G?G:F;g[j+(b*136|0)+104>>2]=-0.0-H;g[j+(b*136|0)+108>>2]=H;f=c[E>>2]|0;xJ(0,f+((c[j+(b*136|0)+128>>2]|0)*212|0)|0,f+((c[j+(b*136|0)+132>>2]|0)*212|0)|0,j+(b*136|0)|0)}b=b+1|0;}while((b|0)<(l|0));return+0.0}function xY(a,b,d,e,f,g,h,i,j,k){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0;if((c[i+44>>2]|0)==0){return}k=i+20|0;j=c[k>>2]|0;h=(j|0)>0;if((c[i+64>>2]&256|0)==0){if(!h){return}i=a+28|0;g=a+116|0;f=a+36|0;e=a+16|0;d=1;b=j;while(1){l=c[i>>2]|0;if((l|0)>0){m=0;do{n=c[(c[g>>2]|0)+(m<<2)>>2]|0;o=c[f>>2]|0;p=c[e>>2]|0;xL(0,p+((c[o+(n*136|0)+128>>2]|0)*212|0)|0,p+((c[o+(n*136|0)+132>>2]|0)*212|0)|0,o+(n*136|0)|0);m=m+1|0;}while((m|0)<(l|0));q=c[k>>2]|0}else{q=b}if((d|0)>=(q|0)){break}d=d+1|0;b=q}return}else{if(!h){return}h=a+28|0;q=a+116|0;b=a+36|0;d=a+16|0;a=1;e=j;while(1){j=c[h>>2]|0;if((j|0)>0){f=0;do{g=c[(c[q>>2]|0)+(f<<2)>>2]|0;i=c[b>>2]|0;l=c[d>>2]|0;xL(0,l+((c[i+(g*136|0)+128>>2]|0)*212|0)|0,l+((c[i+(g*136|0)+132>>2]|0)*212|0)|0,i+(g*136|0)|0);f=f+1|0;}while((f|0)<(j|0));r=c[k>>2]|0}else{r=e}if((a|0)>=(r|0)){break}a=a+1|0;e=r}return}}function xZ(a,b,d,e,f,g,h,i,j,k){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;z_(22440);hw[c[(c[a>>2]|0)+24>>2]&7](a,b,d,e,f,g,h,i,j,k);k=c[a+184>>2]|0;j=c[i+20>>2]|0;f=(k|0)>(j|0)?k:j;if((f|0)>0){j=0;do{+xX(a,j,0,0,0,0,g,h,i,0,0);j=j+1|0;}while((j|0)<(f|0))}z$();return+0.0}function x_(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0.0,r=0,s=0,t=0,u=0,v=0.0,w=0.0,x=0.0,y=0,z=0;e=b+28|0;d=c[e>>2]|0;h=f+64|0;if((c[h>>2]&4|0)!=0&(d|0)>0){i=b+36|0;j=b+76|0;k=0;do{l=c[i>>2]|0;m=c[l+(k*136|0)+116>>2]|0;g[m+120>>2]=+g[l+(k*136|0)+84>>2];n=l+(k*136|0)+124|0;g[m+124>>2]=+g[(c[j>>2]|0)+((c[n>>2]|0)*136|0)+84>>2];if((c[h>>2]&16|0)!=0){g[m+128>>2]=+g[(c[j>>2]|0)+(((c[n>>2]|0)+1|0)*136|0)+84>>2]}k=k+1|0;}while((k|0)<(d|0))}d=b+48|0;k=c[d>>2]|0;if((k|0)>0){j=b+56|0;h=f+12|0;i=0;do{n=c[j>>2]|0;m=c[n+(i*136|0)+116>>2]|0;l=c[m+44>>2]|0;o=n+(i*136|0)+84|0;if((l|0)!=0){p=n+(i*136|0)+16|0;q=+g[o>>2];r=n+(i*136|0)+20|0;s=n+(i*136|0)+24|0;t=m+28|0;u=c[t>>2]|0;v=1.0/+g[h>>2];w=q*+g[r>>2]*+g[u+348>>2]*v;x=q*+g[s>>2]*+g[u+352>>2]*v;y=l|0;g[y>>2]=+g[p>>2]*q*+g[u+344>>2]*v+ +g[y>>2];y=l+4|0;g[y>>2]=w+ +g[y>>2];y=l+8|0;g[y>>2]=x+ +g[y>>2];x=+g[o>>2];y=m+32|0;u=c[y>>2]|0;w=1.0/+g[h>>2];v=x*(-0.0- +g[r>>2])*+g[u+348>>2]*w;q=x*(-0.0- +g[s>>2])*+g[u+352>>2]*w;s=l+32|0;g[s>>2]=x*(-0.0- +g[p>>2])*+g[u+344>>2]*w+ +g[s>>2];s=l+36|0;g[s>>2]=v+ +g[s>>2];s=l+40|0;g[s>>2]=q+ +g[s>>2];s=c[t>>2]|0;t=n+(i*136|0)|0;u=n+(i*136|0)+4|0;p=n+(i*136|0)+8|0;q=+g[o>>2];v=1.0/+g[h>>2];w=+g[u>>2]*+g[s+544>>2]*q*v;x=q*+g[p>>2]*+g[s+548>>2]*v;n=l+16|0;g[n>>2]=+g[t>>2]*+g[s+540>>2]*q*v+ +g[n>>2];n=l+20|0;g[n>>2]=w+ +g[n>>2];n=l+24|0;g[n>>2]=x+ +g[n>>2];n=c[y>>2]|0;x=+g[o>>2];w=1.0/+g[h>>2];v=+g[n+544>>2]*(-0.0- +g[u>>2])*x*w;q=x*+g[n+548>>2]*(-0.0- +g[p>>2])*w;p=l+48|0;g[p>>2]=+g[n+540>>2]*(-0.0- +g[t>>2])*x*w+ +g[p>>2];p=l+52|0;g[p>>2]=v+ +g[p>>2];p=l+56|0;g[p>>2]=q+ +g[p>>2]}g[m+36>>2]=+g[o>>2];q=+V(+(+g[o>>2]));if(q>=+g[m+16>>2]){a[m+20|0]=0}i=i+1|0;}while((i|0)<(k|0))}k=b+4|0;i=b+8|0;h=c[i>>2]|0;if((h|0)>0){j=b+16|0;m=f+44|0;o=f+12|0;p=f+52|0;f=0;l=h;while(1){h=c[j>>2]|0;t=h+(f*212|0)|0;if((c[h+(f*212|0)+208>>2]|0)==0){z=l}else{if((c[m>>2]|0)==0){n=h+(f*212|0)+176|0;g[n>>2]=+g[h+(f*212|0)+64>>2]+ +g[n>>2];n=h+(f*212|0)+180|0;g[n>>2]=+g[h+(f*212|0)+68>>2]+ +g[n>>2];n=h+(f*212|0)+184|0;g[n>>2]=+g[h+(f*212|0)+72>>2]+ +g[n>>2];n=h+(f*212|0)+192|0;g[n>>2]=+g[h+(f*212|0)+80>>2]+ +g[n>>2];n=h+(f*212|0)+196|0;g[n>>2]=+g[h+(f*212|0)+84>>2]+ +g[n>>2];n=h+(f*212|0)+200|0;g[n>>2]=+g[h+(f*212|0)+88>>2]+ +g[n>>2]}else{x$(t,+g[o>>2],+g[p>>2])}t=c[j>>2]|0;n=(c[t+(f*212|0)+208>>2]|0)+308|0;h=t+(f*212|0)+176|0;c[n>>2]=c[h>>2];c[n+4>>2]=c[h+4>>2];c[n+8>>2]=c[h+8>>2];c[n+12>>2]=c[h+12>>2];h=c[j>>2]|0;n=(c[h+(f*212|0)+208>>2]|0)+324|0;t=h+(f*212|0)+192|0;c[n>>2]=c[t>>2];c[n+4>>2]=c[t+4>>2];c[n+8>>2]=c[t+8>>2];c[n+12>>2]=c[t+12>>2];if((c[m>>2]|0)!=0){t=c[j>>2]|0;n=c[t+(f*212|0)+208>>2]|0;h=n+4|0;u=t+(f*212|0)|0;c[h>>2]=c[u>>2];c[h+4>>2]=c[u+4>>2];c[h+8>>2]=c[u+8>>2];c[h+12>>2]=c[u+12>>2];u=n+20|0;h=t+(f*212|0)+16|0;c[u>>2]=c[h>>2];c[u+4>>2]=c[h+4>>2];c[u+8>>2]=c[h+8>>2];c[u+12>>2]=c[h+12>>2];h=n+36|0;u=t+(f*212|0)+32|0;c[h>>2]=c[u>>2];c[h+4>>2]=c[u+4>>2];c[h+8>>2]=c[u+8>>2];c[h+12>>2]=c[u+12>>2];u=n+52|0;n=t+(f*212|0)+48|0;c[u>>2]=c[n>>2];c[u+4>>2]=c[n+4>>2];c[u+8>>2]=c[n+8>>2];c[u+12>>2]=c[n+12>>2]}c[(c[(c[j>>2]|0)+(f*212|0)+208>>2]|0)+212>>2]=-1;z=c[i>>2]|0}n=f+1|0;if((n|0)<(z|0)){f=n;l=z}else{break}}}do{if((c[e>>2]|0)<0){z=b+32|0;if((c[z>>2]|0)>=0){break}l=b+36|0;f=c[l>>2]|0;j=b+40|0;if((f|0)!=0){if((a[j]&1)!=0){zw(f)}c[l>>2]=0}a[j]=1;c[l>>2]=0;c[z>>2]=0}}while(0);c[e>>2]=0;do{if((c[d>>2]|0)<0){e=b+52|0;if((c[e>>2]|0)>=0){break}z=b+56|0;l=c[z>>2]|0;j=b+60|0;if((l|0)!=0){if((a[j]&1)!=0){zw(l)}c[z>>2]=0}a[j]=1;c[z>>2]=0;c[e>>2]=0}}while(0);c[d>>2]=0;d=b+68|0;do{if((c[d>>2]|0)<0){e=b+72|0;if((c[e>>2]|0)>=0){break}z=b+76|0;j=c[z>>2]|0;l=b+80|0;if((j|0)!=0){if((a[l]&1)!=0){zw(j)}c[z>>2]=0}a[l]=1;c[z>>2]=0;c[e>>2]=0}}while(0);c[d>>2]=0;d=b+88|0;do{if((c[d>>2]|0)<0){e=b+92|0;if((c[e>>2]|0)>=0){break}z=b+96|0;l=c[z>>2]|0;j=b+100|0;if((l|0)!=0){if((a[j]&1)!=0){zw(l)}c[z>>2]=0}a[j]=1;c[z>>2]=0;c[e>>2]=0}}while(0);c[d>>2]=0;if((c[i>>2]|0)>=0){c[i>>2]=0;return+0.0}xW(k,0);c[i>>2]=0;return+0.0}function x$(a,b,d){a=a|0;b=+b;d=+d;var e=0,f=0,h=0,j=0,k=0.0,l=0.0;e=i;i=i+80|0;f=e|0;h=e+64|0;if((c[a+208>>2]|0)==0){i=e;return}j=a+176|0;g[j>>2]=+g[a+64>>2]+ +g[j>>2];j=a+180|0;g[j>>2]=+g[a+68>>2]+ +g[j>>2];j=a+184|0;g[j>>2]=+g[a+72>>2]+ +g[j>>2];j=a+192|0;g[j>>2]=+g[a+80>>2]+ +g[j>>2];j=a+196|0;g[j>>2]=+g[a+84>>2]+ +g[j>>2];j=a+200|0;g[j>>2]=+g[a+88>>2]+ +g[j>>2];j=a+144|0;do{if(+g[j>>2]==0.0){if(+g[a+148>>2]!=0.0){break}if(+g[a+152>>2]!=0.0){break}if(+g[a+160>>2]!=0.0){break}if(+g[a+164>>2]!=0.0){break}if(+g[a+168>>2]!=0.0){break}i=e;return}}while(0);k=+g[a+164>>2]*d;l=+g[a+168>>2]*d;g[h>>2]=+g[a+160>>2]*d;g[h+4>>2]=k;g[h+8>>2]=l;g[h+12>>2]=0.0;vf(a|0,j,h,b,f);h=a;j=f;c[h>>2]=c[j>>2];c[h+4>>2]=c[j+4>>2];c[h+8>>2]=c[j+8>>2];c[h+12>>2]=c[j+12>>2];j=a+16|0;h=f+16|0;c[j>>2]=c[h>>2];c[j+4>>2]=c[h+4>>2];c[j+8>>2]=c[h+8>>2];c[j+12>>2]=c[h+12>>2];h=a+32|0;j=f+32|0;c[h>>2]=c[j>>2];c[h+4>>2]=c[j+4>>2];c[h+8>>2]=c[j+8>>2];c[h+12>>2]=c[j+12>>2];j=a+48|0;a=f+48|0;c[j>>2]=c[a>>2];c[j+4>>2]=c[a+4>>2];c[j+8>>2]=c[a+8>>2];c[j+12>>2]=c[a+12>>2];i=e;return}function x0(a,b,d,e,f,g,h,i,j,k,l){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;z_(20576);l=a;+hp[c[(c[l>>2]|0)+32>>2]&7](a,b,d,e,f,g,h,i,j,k);+hp[c[(c[l>>2]|0)+36>>2]&7](a,b,d,e,f,g,h,i,j,k);+hC[c[(c[a>>2]|0)+28>>2]&3](a,b,d,i);z$();return+0.0}function x1(a){a=a|0;c[a+188>>2]=0;return}function x2(a,b,c){a=a|0;b=b|0;c=c|0;return}function x3(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return}function x4(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;c[b+4>>2]=d;c[b>>2]=33440;c[b+8>>2]=-1;c[b+12>>2]=-1;g[b+16>>2]=3.4028234663852886e+38;a[b+20|0]=1;a[b+21|0]=0;c[b+24>>2]=-1;c[b+28>>2]=e;c[b+32>>2]=f;g[b+36>>2]=0.0;g[b+40>>2]=.30000001192092896;c[b+44>>2]=0;return}function x5(a,b,c,d,e,f){a=a|0;b=+b;c=+c;d=+d;e=+e;f=+f;var g=0.0,h=0.0;L1:do{if(c>d){g=1.0}else{if(c==d){g=0.0;break}h=e/f;if(h<0.0){do{if(b>=c){if(c-h<=b){break}g=(c-b)/h;break L1}}while(0);g=b<c?0.0:1.0;break}if(h<=0.0){g=0.0;break}do{if(b<=d){if(d-h>=b){break}g=(d-b)/h;break L1}}while(0);g=b>d?0.0:1.0}}while(0);return+g}function x6(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;f=e;h=b+28|0;c[d>>2]=hx[c[(c[f>>2]|0)+28>>2]&127](e,c[h>>2]|0)|0;i=b+32|0;c[d+4>>2]=hx[c[(c[f>>2]|0)+28>>2]&127](e,c[i>>2]|0)|0;j=hx[c[(c[f>>2]|0)+40>>2]&127](e,b)|0;k=hx[c[(c[f>>2]|0)+28>>2]&127](e,j)|0;c[d+8>>2]=k;if((k|0)!=0){g0[c[(c[e>>2]|0)+48>>2]&511](e,j)}c[d+12>>2]=c[b+4>>2];c[d+24>>2]=a[b+21|0]&1;c[d+40>>2]=c[b+24>>2];g[d+44>>2]=+g[b+16>>2];c[d+48>>2]=a[b+20|0]&1;c[d+20>>2]=c[b+12>>2];c[d+16>>2]=c[b+8>>2];g[d+28>>2]=+g[b+36>>2];g[d+32>>2]=+g[b+40>>2];j=d+36|0;c[j>>2]=0;d=c[h>>2]|0;if((c[d+484>>2]|0)>0){e=0;k=d;while(1){if((c[(c[k+492>>2]|0)+(e<<2)>>2]|0)==(b|0)){c[j>>2]=1;l=c[h>>2]|0}else{l=k}d=e+1|0;if((d|0)<(c[l+484>>2]|0)){e=d;k=l}else{break}}}l=c[i>>2]|0;if((c[l+484>>2]|0)>0){m=0;n=l}else{return 12968}while(1){if((c[(c[n+492>>2]|0)+(m<<2)>>2]|0)==(b|0)){c[j>>2]=1;o=c[i>>2]|0}else{o=n}l=m+1|0;if((l|0)<(c[o+484>>2]|0)){m=l;n=o}else{break}}return 12968}function x7(b){b=b|0;var d=0,e=0,f=0,g=0;c[b>>2]=35360;d=b+484|0;e=b+492|0;f=c[e>>2]|0;g=b+496|0;if((f|0)!=0){if((a[g]&1)!=0){zw(f)}c[e>>2]=0}a[g]=1;c[e>>2]=0;c[d>>2]=0;c[b+488>>2]=0;rR(b|0);return}function x8(a,b,c,d,e,f){a=a|0;b=+b;c=+c;d=+d;e=+e;f=+f;var h=0.0,i=0.0;h=(c-b)*.5;g[a+4>>2]=h;c=+c2(+(h+b),6.2831854820251465);do{if(c<-3.1415927410125732){i=c+6.2831854820251465}else{if(c<=3.1415927410125732){i=c;break}i=c+ -6.2831854820251465}}while(0);g[a>>2]=i;g[a+8>>2]=d;g[a+12>>2]=e;g[a+16>>2]=f;return}function x9(b,c){b=b|0;c=+c;var d=0,e=0,f=0,h=0,i=0.0,j=0.0;d=b+20|0;g[d>>2]=0.0;e=b+24|0;g[e>>2]=0.0;f=b+28|0;a[f]=0;h=b+4|0;if(+g[h>>2]<0.0){return}i=+c2(+(c- +g[b>>2]),6.2831854820251465);do{if(i<-3.1415927410125732){j=i+6.2831854820251465}else{if(i<=3.1415927410125732){j=i;break}j=i+ -6.2831854820251465}}while(0);i=+g[h>>2];if(j<-0.0-i){a[f]=1;g[d>>2]=-0.0-(j+i);g[e>>2]=1.0;return}if(j<=i){return}a[f]=1;g[d>>2]=i-j;g[e>>2]=-1.0;return}function ya(a,b){a=a|0;b=b|0;var c=0,d=0,e=0.0,f=0.0,h=0.0,i=0.0,j=0.0;c=a+4|0;if(+g[c>>2]<=0.0){return}d=a|0;e=+c2(+(+g[b>>2]- +g[d>>2]),6.2831854820251465);do{if(e<-3.1415927410125732){f=e+6.2831854820251465}else{if(e<=3.1415927410125732){f=e;break}f=e+ -6.2831854820251465}}while(0);e=+g[c>>2];if(f<=e&f>=-0.0-e){return}h=+g[d>>2];if(f>0.0){f=+c2(+(h+e),6.2831854820251465);do{if(f<-3.1415927410125732){i=f+6.2831854820251465}else{if(f<=3.1415927410125732){i=f;break}i=f+ -6.2831854820251465}}while(0);g[b>>2]=i;return}else{i=+c2(+(h-e),6.2831854820251465);do{if(i<-3.1415927410125732){j=i+6.2831854820251465}else{if(i<=3.1415927410125732){j=i;break}j=i+ -6.2831854820251465}}while(0);g[b>>2]=j;return}}function yb(a){a=a|0;var b=0.0,c=0.0;b=+c2(+(+g[a>>2]+ +g[a+4>>2]),6.2831854820251465);if(b<-3.1415927410125732){c=b+6.2831854820251465;return+c}if(b<=3.1415927410125732){c=b;return+c}c=b+ -6.2831854820251465;return+c}function yc(a){a=a|0;var b=0.0,c=0.0;b=+c2(+(+g[a>>2]- +g[a+4>>2]),6.2831854820251465);if(b<-3.1415927410125732){c=b+6.2831854820251465;return+c}if(b<=3.1415927410125732){c=b;return+c}c=b+ -6.2831854820251465;return+c}function yd(a){a=a|0;return}function ye(a){a=a|0;zw(a);return}function yf(b,d,e,f,h){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;var i=0,j=0,k=0;rZ(b|0,d,e,h);c[b+88>>2]=0;c[b+92>>2]=0;c[b+96>>2]=0;g[b+100>>2]=.6000000238418579;g[b+104>>2]=1.0;g[b+108>>2]=.30000001192092896;g[b+112>>2]=.01666666753590107;g[b+116>>2]=0.0;g[b+124>>2]=20.0;c[b+120>>2]=10;g[b+132>>2]=.20000000298023224;g[b+136>>2]=.800000011920929;g[b+140>>2]=0.0;g[b+128>>2]=1.0;c[b+144>>2]=1;g[b+148>>2]=-.03999999910593033;g[b+152>>2]=.10000000149011612;g[b+156>>2]=0.0;g[b+160>>2]=.8500000238418579;c[b+164>>2]=260;c[b+168>>2]=2;c[b+172>>2]=128;g[b+176>>2]=100.0;g[b+180>>2]=1.0000000150474662e+30;c[b>>2]=32056;a[b+200|0]=1;c[b+196>>2]=0;c[b+188>>2]=0;c[b+192>>2]=0;h=b+204|0;c[h>>2]=0;e=b+208|0;c[e>>2]=f;a[b+232|0]=1;c[b+228>>2]=0;c[b+220>>2]=0;c[b+224>>2]=0;a[b+252|0]=1;c[b+248>>2]=0;c[b+240>>2]=0;c[b+244>>2]=0;g[b+256>>2]=0.0;g[b+260>>2]=-10.0;g[b+264>>2]=0.0;g[b+268>>2]=0.0;g[b+272>>2]=0.0;a[b+278|0]=0;a[b+279|0]=0;a[b+296|0]=1;c[b+292>>2]=0;c[b+284>>2]=0;c[b+288>>2]=0;c[b+300>>2]=0;a[b+320|0]=1;c[b+316>>2]=0;c[b+308>>2]=0;c[b+312>>2]=0;if((f|0)==0){f=zv(192,16)|0;xG(f);c[e>>2]=f;a[b+277|0]=1}else{a[b+277|0]=0}f=zv(68,16)|0;if((f|0)==0){i=0}else{j=f;uH(j);i=j}c[b+212>>2]=i;a[b+276|0]=1;i=zv(92,16)|0;if((i|0)==0){k=0;c[h>>2]=k;return}j=c[e>>2]|0;e=c[b+72>>2]|0;c[i>>2]=31496;c[i+4>>2]=0;c[i+8>>2]=j;c[i+12>>2]=0;c[i+16>>2]=0;c[i+20>>2]=0;c[i+24>>2]=e;c[i+28>>2]=d;a[i+48|0]=1;c[i+44>>2]=0;c[i+36>>2]=0;c[i+40>>2]=0;a[i+68|0]=1;c[i+64>>2]=0;c[i+56>>2]=0;c[i+60>>2]=0;a[i+88|0]=1;c[i+84>>2]=0;c[i+76>>2]=0;c[i+80>>2]=0;k=i;c[h>>2]=k;return}function yg(a){a=a|0;yh(a);zw(a);return}function yh(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0;c[b>>2]=32056;if((a[b+276|0]&1)!=0){d=b+212|0;e=c[d>>2]|0;g$[c[c[e>>2]>>2]&1023](e);zw(c[d>>2]|0)}d=b+204|0;e=c[d>>2]|0;if((e|0)!=0){g$[c[c[e>>2]>>2]&1023](e);zw(c[d>>2]|0)}if((a[b+277|0]&1)!=0){d=b+208|0;e=c[d>>2]|0;g$[c[c[e>>2]>>2]&1023](e);zw(c[d>>2]|0)}d=b+308|0;e=b+316|0;f=c[e>>2]|0;g=b+320|0;if((f|0)!=0){if((a[g]&1)!=0){zw(f)}c[e>>2]=0}a[g]=1;c[e>>2]=0;c[d>>2]=0;c[b+312>>2]=0;d=b+284|0;e=b+292|0;g=c[e>>2]|0;f=b+296|0;if((g|0)!=0){if((a[f]&1)!=0){zw(g)}c[e>>2]=0}a[f]=1;c[e>>2]=0;c[d>>2]=0;c[b+288>>2]=0;d=b+240|0;e=b+248|0;f=c[e>>2]|0;g=b+252|0;if((f|0)!=0){if((a[g]&1)!=0){zw(f)}c[e>>2]=0}a[g]=1;c[e>>2]=0;c[d>>2]=0;c[b+244>>2]=0;d=b+220|0;e=b+228|0;g=c[e>>2]|0;f=b+232|0;if((g|0)!=0){if((a[f]&1)!=0){zw(g)}c[e>>2]=0}a[f]=1;c[e>>2]=0;c[d>>2]=0;c[b+224>>2]=0;d=b+188|0;e=b+196|0;f=c[e>>2]|0;g=b+200|0;if((f|0)==0){a[g]=1;c[e>>2]=0;c[d>>2]=0;h=b+192|0;c[h>>2]=0;i=b|0;r$(i);return}if((a[g]&1)!=0){zw(f)}c[e>>2]=0;a[g]=1;c[e>>2]=0;c[d>>2]=0;h=b+192|0;c[h>>2]=0;i=b|0;r$(i);return}function yi(a,b){a=a|0;b=+b;var d=0,e=0,f=0,g=0,h=0;d=a+8|0;e=c[d>>2]|0;if((e|0)<=0){return}f=a+16|0;a=0;g=e;while(1){e=c[(c[f>>2]|0)+(a<<2)>>2]|0;do{if((c[e+236>>2]&2|0)==0){h=g}else{if((e|0)==0){h=g;break}if((c[e+216>>2]|0)==2){h=g;break}if((c[e+204>>2]&2|0)==0){h=g;break}zd(e,b);h=c[d>>2]|0}}while(0);e=a+1|0;if((e|0)<(h|0)){a=e;g=h}else{break}}return}function yj(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0;z_(12936);b=a|0;sk(b);d=a;L3:do{if((g3[c[(c[d>>2]|0)+20>>2]&511](b)|0)!=0){e=g3[c[(c[d>>2]|0)+20>>2]&511](b)|0;if(((g3[c[(c[e>>2]|0)+48>>2]&511](e)|0)&6144|0)==0){break}e=a;f=g3[c[(c[a>>2]|0)+104>>2]&511](a)|0;while(1){g=f-1|0;if((f|0)<=0){break L3}yk(a,hx[c[(c[e>>2]|0)+108>>2]&127](a,g)|0);f=g}}}while(0);do{if((g3[c[(c[d>>2]|0)+20>>2]&511](b)|0)!=0){f=g3[c[(c[d>>2]|0)+20>>2]&511](b)|0;if(((g3[c[(c[f>>2]|0)+48>>2]&511](f)|0)&16387|0)==0){break}if((g3[c[(c[d>>2]|0)+20>>2]&511](b)|0)==0){break}f=g3[c[(c[d>>2]|0)+20>>2]&511](b)|0;if((g3[c[(c[f>>2]|0)+48>>2]&511](f)|0)==0){break}f=a+284|0;if((c[f>>2]|0)<=0){break}e=a+292|0;g=a+80|0;h=0;do{i=c[(c[e>>2]|0)+(h<<2)>>2]|0;g0[c[(c[i>>2]|0)+12>>2]&511](i,c[g>>2]|0);h=h+1|0;}while((h|0)<(c[f>>2]|0))}}while(0);z$();return}function yk(b,d){b=b|0;d=d|0;var e=0,f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0.0,W=0,X=0,_=0,$=0,aa=0.0,ab=0.0,ac=0,ad=0,ae=0.0,af=0,ag=0,ah=0,ai=0,aj=0,ak=0,al=0,am=0,an=0,ao=0.0,ap=0,aq=0.0,ar=0,as=0,at=0,au=0,av=0,aw=0,ax=0,ay=0.0,az=0.0,aA=0.0,aB=0.0,aC=0.0,aD=0.0,aE=0.0,aF=0.0,aG=0.0,aH=0.0,aI=0.0;e=i;i=i+1008|0;f=e|0;h=e+64|0;j=e+128|0;k=e+192|0;l=e+208|0;m=e+224|0;n=e+240|0;o=e+304|0;p=e+368|0;q=e+384|0;r=e+400|0;s=e+416|0;t=e+432|0;u=e+496|0;v=e+560|0;w=e+576|0;x=e+592|0;y=e+608|0;z=e+624|0;A=e+688|0;B=e+704|0;C=e+720|0;D=e+736|0;E=e+752|0;F=e+768|0;G=e+784|0;H=e+800|0;I=e+816|0;J=e+832|0;K=e+848|0;L=e+912|0;M=e+928|0;N=e+944|0;O=e+960|0;P=e+976|0;Q=e+992|0;R=b|0;S=b;b=g3[c[(c[S>>2]|0)+20>>2]&511](R)|0;T=(g3[c[(c[b>>2]|0)+48>>2]&511](b)|0)>>>11;b=g3[c[(c[S>>2]|0)+20>>2]&511](R)|0;U=(g3[c[(c[b>>2]|0)+48>>2]&511](b)|0)>>>12;V=+g[d+40>>2];if(V<=0.0){i=e;return}switch(c[d+4>>2]|0){case 5:{b=d;W=d+28|0;X=d+300|0;j_(n,(c[W>>2]|0)+4|0,X);if((T&1|0)==0){j_(o,(c[d+32>>2]|0)+4|0,d+364|0);_=n;$=o;c[_>>2]=c[$>>2];c[_+4>>2]=c[$+4>>2];c[_+8>>2]=c[$+8>>2];c[_+12>>2]=c[$+12>>2];$=n+16|0;_=o+16|0;c[$>>2]=c[_>>2];c[$+4>>2]=c[_+4>>2];c[$+8>>2]=c[_+8>>2];c[$+12>>2]=c[_+12>>2];_=n+32|0;$=o+32|0;c[_>>2]=c[$>>2];c[_+4>>2]=c[$+4>>2];c[_+8>>2]=c[$+8>>2];c[_+12>>2]=c[$+12>>2];$=n+48|0;_=o+48|0;c[$>>2]=c[_>>2];c[$+4>>2]=c[_+4>>2];c[$+8>>2]=c[_+8>>2];c[$+12>>2]=c[_+12>>2]}else{_=g3[c[(c[S>>2]|0)+20>>2]&511](R)|0;hJ[c[(c[_>>2]|0)+56>>2]&7](_,n,V);j_(o,(c[d+32>>2]|0)+4|0,d+364|0);_=n;$=o;c[_>>2]=c[$>>2];c[_+4>>2]=c[$+4>>2];c[_+8>>2]=c[$+8>>2];c[_+12>>2]=c[$+12>>2];$=n+16|0;_=o+16|0;c[$>>2]=c[_>>2];c[$+4>>2]=c[_+4>>2];c[$+8>>2]=c[_+8>>2];c[$+12>>2]=c[_+12>>2];_=n+32|0;$=o+32|0;c[_>>2]=c[$>>2];c[_+4>>2]=c[$+4>>2];c[_+8>>2]=c[$+8>>2];c[_+12>>2]=c[$+12>>2];$=n+48|0;_=o+48|0;c[$>>2]=c[_>>2];c[$+4>>2]=c[_+4>>2];c[$+8>>2]=c[_+8>>2];c[$+12>>2]=c[_+12>>2];_=g3[c[(c[S>>2]|0)+20>>2]&511](R)|0;hJ[c[(c[_>>2]|0)+56>>2]&7](_,n,V)}if((U&1|0)==0){i=e;return}wv(p,b,6.0868353843688965,V);_=p|0;aa=+g[_>>2];$=n|0;o=p+4|0;ab=+g[o>>2];ac=n+4|0;ad=p+8|0;ae=+g[ad>>2];af=n+8|0;ag=n+16|0;ah=n+20|0;ai=n+24|0;aj=n+32|0;ak=n+36|0;al=n+40|0;am=n+48|0;an=n+52|0;ao=aa*+g[ag>>2]+ab*+g[ah>>2]+ae*+g[ai>>2]+ +g[an>>2];ap=n+56|0;aq=aa*+g[aj>>2]+ab*+g[ak>>2]+ae*+g[al>>2]+ +g[ap>>2];ar=p;g[_>>2]=aa*+g[$>>2]+ab*+g[ac>>2]+ae*+g[af>>2]+ +g[am>>2];g[o>>2]=ao;g[ad>>2]=aq;g[p+12>>2]=0.0;ad=q|0;o=q+4|0;_=q+8|0;as=q;at=q+12|0;au=n+48|0;av=0;do{wv(q,b,+(av|0)*6.283185005187988*.03125,V);aq=+g[ad>>2];ao=+g[o>>2];ae=+g[_>>2];ab=aq*+g[ag>>2]+ao*+g[ah>>2]+ae*+g[ai>>2]+ +g[an>>2];aa=aq*+g[aj>>2]+ao*+g[ak>>2]+ae*+g[al>>2]+ +g[ap>>2];g[ad>>2]=aq*+g[$>>2]+ao*+g[ac>>2]+ae*+g[af>>2]+ +g[am>>2];g[o>>2]=ab;g[_>>2]=aa;g[at>>2]=0.0;aw=g3[c[(c[S>>2]|0)+20>>2]&511](R)|0;ax=c[(c[aw>>2]|0)+8>>2]|0;K1(r|0,0,16)|0;hM[ax&255](aw,p,q,r);if((av&3|0)==0){aw=g3[c[(c[S>>2]|0)+20>>2]&511](R)|0;ax=c[(c[aw>>2]|0)+8>>2]|0;K1(s|0,0,16)|0;hM[ax&255](aw,au,q,s)}c[ar>>2]=c[as>>2];c[ar+4>>2]=c[as+4>>2];c[ar+8>>2]=c[as+8>>2];c[ar+12>>2]=c[as+12>>2];av=av+1|0;}while((av|0)<32);aa=+g[d+452>>2];ab=+g[d+512>>2];av=c[d+32>>2]|0;if(+g[av+340>>2]>0.0){j_(t,av+4|0,d+364|0);av=n;as=t;c[av>>2]=c[as>>2];c[av+4>>2]=c[as+4>>2];c[av+8>>2]=c[as+8>>2];c[av+12>>2]=c[as+12>>2];as=n+16|0;av=t+16|0;c[as>>2]=c[av>>2];c[as+4>>2]=c[av+4>>2];c[as+8>>2]=c[av+8>>2];c[as+12>>2]=c[av+12>>2];av=n+32|0;as=t+32|0;c[av>>2]=c[as>>2];c[av+4>>2]=c[as+4>>2];c[av+8>>2]=c[as+8>>2];c[av+12>>2]=c[as+12>>2];as=au;av=t+48|0;c[as>>2]=c[av>>2];c[as+4>>2]=c[av+4>>2];c[as+8>>2]=c[av+8>>2];c[as+12>>2]=c[av+12>>2]}else{j_(u,(c[W>>2]|0)+4|0,X);X=n;W=u;c[X>>2]=c[W>>2];c[X+4>>2]=c[W+4>>2];c[X+8>>2]=c[W+8>>2];c[X+12>>2]=c[W+12>>2];W=n+16|0;X=u+16|0;c[W>>2]=c[X>>2];c[W+4>>2]=c[X+4>>2];c[W+8>>2]=c[X+8>>2];c[W+12>>2]=c[X+12>>2];X=n+32|0;n=u+32|0;c[X>>2]=c[n>>2];c[X+4>>2]=c[n+4>>2];c[X+8>>2]=c[n+8>>2];c[X+12>>2]=c[n+12>>2];n=au;X=u+48|0;c[n>>2]=c[X>>2];c[n+4>>2]=c[X+4>>2];c[n+8>>2]=c[X+8>>2];c[n+12>>2]=c[X+12>>2]}X=v;n=au;c[X>>2]=c[n>>2];c[X+4>>2]=c[n+4>>2];c[X+8>>2]=c[n+8>>2];c[X+12>>2]=c[n+12>>2];g[w>>2]=+g[$>>2];g[w+4>>2]=+g[ag>>2];g[w+8>>2]=+g[aj>>2];g[w+12>>2]=0.0;g[x>>2]=+g[ac>>2];g[x+4>>2]=+g[ah>>2];g[x+8>>2]=+g[ak>>2];g[x+12>>2]=0.0;ak=g3[c[(c[S>>2]|0)+20>>2]&511](R)|0;ah=c[(c[ak>>2]|0)+60>>2]|0;K1(y|0,0,16)|0;g5[ah&3](ak,v,w,x,V,V,-0.0-ab-aa,aa-ab,y,1,10.0);i=e;return};case 4:{j_(h,(c[d+28>>2]|0)+4|0,d+552|0);if((T&1|0)==0){j_(j,(c[d+32>>2]|0)+4|0,d+616|0);y=h;x=j;c[y>>2]=c[x>>2];c[y+4>>2]=c[x+4>>2];c[y+8>>2]=c[x+8>>2];c[y+12>>2]=c[x+12>>2];x=h+16|0;y=j+16|0;c[x>>2]=c[y>>2];c[x+4>>2]=c[y+4>>2];c[x+8>>2]=c[y+8>>2];c[x+12>>2]=c[y+12>>2];y=h+32|0;x=j+32|0;c[y>>2]=c[x>>2];c[y+4>>2]=c[x+4>>2];c[y+8>>2]=c[x+8>>2];c[y+12>>2]=c[x+12>>2];x=h+48|0;y=j+48|0;c[x>>2]=c[y>>2];c[x+4>>2]=c[y+4>>2];c[x+8>>2]=c[y+8>>2];c[x+12>>2]=c[y+12>>2]}else{y=g3[c[(c[S>>2]|0)+20>>2]&511](R)|0;hJ[c[(c[y>>2]|0)+56>>2]&7](y,h,V);j_(j,(c[d+32>>2]|0)+4|0,d+616|0);y=h;x=j;c[y>>2]=c[x>>2];c[y+4>>2]=c[x+4>>2];c[y+8>>2]=c[x+8>>2];c[y+12>>2]=c[x+12>>2];x=h+16|0;y=j+16|0;c[x>>2]=c[y>>2];c[x+4>>2]=c[y+4>>2];c[x+8>>2]=c[y+8>>2];c[x+12>>2]=c[y+12>>2];y=h+32|0;x=j+32|0;c[y>>2]=c[x>>2];c[y+4>>2]=c[x+4>>2];c[y+8>>2]=c[x+8>>2];c[y+12>>2]=c[x+12>>2];x=h+48|0;y=j+48|0;c[x>>2]=c[y>>2];c[x+4>>2]=c[y+4>>2];c[x+8>>2]=c[y+8>>2];c[x+12>>2]=c[y+12>>2];y=g3[c[(c[S>>2]|0)+20>>2]&511](R)|0;hJ[c[(c[y>>2]|0)+56>>2]&7](y,h,V)}y=d+688|0;ab=+yc(y);aa=+yb(y);if(ab==aa){i=e;return}y=ab>aa;if((U&1|0)==0){i=e;return}g[k>>2]=+g[h+8>>2];g[k+4>>2]=+g[h+24>>2];g[k+8>>2]=+g[h+40>>2];g[k+12>>2]=0.0;g[l>>2]=+g[h>>2];g[l+4>>2]=+g[h+16>>2];g[l+8>>2]=+g[h+32>>2];g[l+12>>2]=0.0;x=g3[c[(c[S>>2]|0)+20>>2]&511](R)|0;j=c[(c[x>>2]|0)+60>>2]|0;K1(m|0,0,16)|0;g5[j&3](x,h+48|0,k,l,V,V,y?0.0:ab,y?6.2831854820251465:aa,m,y^1,10.0);i=e;return};case 3:{g[f>>2]=1.0;K1(f+4|0,0,16)|0;g[f+20>>2]=1.0;K1(f+24|0,0,16)|0;g[f+40>>2]=1.0;K1(f+44|0,0,20)|0;aa=+g[d+300>>2];ab=+g[d+304>>2];ae=+g[d+308>>2];y=c[d+28>>2]|0;ao=aa*+g[y+20>>2]+ab*+g[y+24>>2]+ae*+g[y+28>>2]+ +g[y+56>>2];aq=aa*+g[y+36>>2]+ab*+g[y+40>>2]+ae*+g[y+44>>2]+ +g[y+60>>2];m=f+48|0;g[m>>2]=aa*+g[y+4>>2]+ab*+g[y+8>>2]+ae*+g[y+12>>2]+ +g[y+52>>2];y=f+52|0;g[y>>2]=ao;l=f+56|0;g[l>>2]=aq;k=f+60|0;g[k>>2]=0.0;h=g3[c[(c[S>>2]|0)+20>>2]&511](R)|0;hJ[c[(c[h>>2]|0)+56>>2]&7](h,f,V);aq=+g[d+316>>2];ao=+g[d+320>>2];ae=+g[d+324>>2];h=c[d+32>>2]|0;ab=aq*+g[h+20>>2]+ao*+g[h+24>>2]+ae*+g[h+28>>2]+ +g[h+56>>2];aa=aq*+g[h+36>>2]+ao*+g[h+40>>2]+ae*+g[h+44>>2]+ +g[h+60>>2];g[m>>2]=aq*+g[h+4>>2]+ao*+g[h+8>>2]+ae*+g[h+12>>2]+ +g[h+52>>2];g[y>>2]=ab;g[l>>2]=aa;g[k>>2]=0.0;if((T&1|0)==0){i=e;return}k=g3[c[(c[S>>2]|0)+20>>2]&511](R)|0;hJ[c[(c[k>>2]|0)+56>>2]&7](k,f,V);i=e;return};case 9:case 6:{f=d;k=d+1064|0;l=z;y=k;c[l>>2]=c[y>>2];c[l+4>>2]=c[y+4>>2];c[l+8>>2]=c[y+8>>2];c[l+12>>2]=c[y+12>>2];h=z+16|0;m=k+16|0;c[h>>2]=c[m>>2];c[h+4>>2]=c[m+4>>2];c[h+8>>2]=c[m+8>>2];c[h+12>>2]=c[m+12>>2];x=z+32|0;j=k+32|0;c[x>>2]=c[j>>2];c[x+4>>2]=c[j+4>>2];c[x+8>>2]=c[j+8>>2];c[x+12>>2]=c[j+12>>2];w=z+48|0;v=k+48|0;c[w>>2]=c[v>>2];c[w+4>>2]=c[v+4>>2];c[w+8>>2]=c[v+8>>2];c[w+12>>2]=c[v+12>>2];if((T&1|0)==0){k=d+1128|0;ak=k;c[l>>2]=c[ak>>2];c[l+4>>2]=c[ak+4>>2];c[l+8>>2]=c[ak+8>>2];c[l+12>>2]=c[ak+12>>2];ak=k+16|0;c[h>>2]=c[ak>>2];c[h+4>>2]=c[ak+4>>2];c[h+8>>2]=c[ak+8>>2];c[h+12>>2]=c[ak+12>>2];ak=k+32|0;c[x>>2]=c[ak>>2];c[x+4>>2]=c[ak+4>>2];c[x+8>>2]=c[ak+8>>2];c[x+12>>2]=c[ak+12>>2];ak=k+48|0;c[w>>2]=c[ak>>2];c[w+4>>2]=c[ak+4>>2];c[w+8>>2]=c[ak+8>>2];c[w+12>>2]=c[ak+12>>2]}else{ak=g3[c[(c[S>>2]|0)+20>>2]&511](R)|0;hJ[c[(c[ak>>2]|0)+56>>2]&7](ak,z,V);ak=d+1128|0;k=ak;c[l>>2]=c[k>>2];c[l+4>>2]=c[k+4>>2];c[l+8>>2]=c[k+8>>2];c[l+12>>2]=c[k+12>>2];k=ak+16|0;c[h>>2]=c[k>>2];c[h+4>>2]=c[k+4>>2];c[h+8>>2]=c[k+8>>2];c[h+12>>2]=c[k+12>>2];k=ak+32|0;c[x>>2]=c[k>>2];c[x+4>>2]=c[k+4>>2];c[x+8>>2]=c[k+8>>2];c[x+12>>2]=c[k+12>>2];k=ak+48|0;c[w>>2]=c[k>>2];c[w+4>>2]=c[k+4>>2];c[w+8>>2]=c[k+8>>2];c[w+12>>2]=c[k+12>>2];k=g3[c[(c[S>>2]|0)+20>>2]&511](R)|0;hJ[c[(c[k>>2]|0)+56>>2]&7](k,z,V)}if((U&1|0)==0){i=e;return}c[l>>2]=c[y>>2];c[l+4>>2]=c[y+4>>2];c[l+8>>2]=c[y+8>>2];c[l+12>>2]=c[y+12>>2];c[h>>2]=c[m>>2];c[h+4>>2]=c[m+4>>2];c[h+8>>2]=c[m+8>>2];c[h+12>>2]=c[m+12>>2];c[x>>2]=c[j>>2];c[x+4>>2]=c[j+4>>2];c[x+8>>2]=c[j+8>>2];c[x+12>>2]=c[j+12>>2];c[w>>2]=c[v>>2];c[w+4>>2]=c[v+4>>2];c[w+8>>2]=c[v+8>>2];c[w+12>>2]=c[v+12>>2];k=d+1128|0;ak=k+48|0;ah=ak;g[A>>2]=+g[z+8>>2];g[A+4>>2]=+g[z+24>>2];g[A+8>>2]=+g[z+40>>2];g[A+12>>2]=0.0;ac=z|0;aj=z+16|0;ag=z+32|0;$=B|0;g[$>>2]=+g[ac>>2];n=B+4|0;g[n>>2]=+g[aj>>2];X=B+8|0;g[X>>2]=+g[ag>>2];au=B+12|0;g[au>>2]=0.0;u=d+932|0;aa=+g[u>>2];ab=+g[u+4>>2];u=d+996|0;ae=+g[u>>2];ao=+g[u+4>>2];u=g3[c[(c[S>>2]|0)+20>>2]&511](R)|0;W=c[(c[u>>2]|0)+64>>2]|0;K1(C|0,0,16)|0;g_[W&3](u,ah,A,B,V*.8999999761581421,aa,ab,ae,ao,C,10.0);ao=+g[z+20>>2];ae=+g[z+36>>2];g[$>>2]=+g[z+4>>2];g[n>>2]=ao;g[X>>2]=ae;g[au>>2]=0.0;ae=+w_(f,1);ao=+w_(f,2);ab=+Y(ae);aa=+Z(ae);ae=+Y(ao);aq=+Z(ao);ao=+g[$>>2];ay=+g[n>>2];az=+g[X>>2];g[D>>2]=ab*ae*ao+ab*aq*ay-aa*az;g[D+4>>2]=ao*(-0.0-aq)+ae*ay;g[D+8>>2]=aa*ae*ao+aa*aq*ay+ab*az;X=k;c[l>>2]=c[X>>2];c[l+4>>2]=c[X+4>>2];c[l+8>>2]=c[X+8>>2];c[l+12>>2]=c[X+12>>2];X=k+16|0;c[h>>2]=c[X>>2];c[h+4>>2]=c[X+4>>2];c[h+8>>2]=c[X+8>>2];c[h+12>>2]=c[X+12>>2];X=k+32|0;c[x>>2]=c[X>>2];c[x+4>>2]=c[X+4>>2];c[x+8>>2]=c[X+8>>2];c[x+12>>2]=c[X+12>>2];X=ak;c[w>>2]=c[X>>2];c[w+4>>2]=c[X+4>>2];c[w+8>>2]=c[X+8>>2];c[w+12>>2]=c[X+12>>2];az=-0.0- +g[aj>>2];ab=-0.0- +g[ag>>2];g[E>>2]=-0.0- +g[ac>>2];g[E+4>>2]=az;g[E+8>>2]=ab;g[E+12>>2]=0.0;ac=d+868|0;ab=+g[ac>>2];az=+g[ac+4>>2];do{if(ab>az){ac=g3[c[(c[S>>2]|0)+20>>2]&511](R)|0;ag=c[(c[ac>>2]|0)+60>>2]|0;K1(F|0,0,16)|0;g5[ag&3](ac,ah,E,D,V,V,-3.1415927410125732,3.1415927410125732,F,0,10.0)}else{if(ab>=az){break}ac=g3[c[(c[S>>2]|0)+20>>2]&511](R)|0;ag=c[(c[ac>>2]|0)+60>>2]|0;K1(G|0,0,16)|0;g5[ag&3](ac,ah,E,D,V,V,ab,az,G,1,10.0)}}while(0);c[l>>2]=c[y>>2];c[l+4>>2]=c[y+4>>2];c[l+8>>2]=c[y+8>>2];c[l+12>>2]=c[y+12>>2];c[h>>2]=c[m>>2];c[h+4>>2]=c[m+4>>2];c[h+8>>2]=c[m+8>>2];c[h+12>>2]=c[m+12>>2];c[x>>2]=c[j>>2];c[x+4>>2]=c[j+4>>2];c[x+8>>2]=c[j+8>>2];c[x+12>>2]=c[j+12>>2];c[w>>2]=c[v>>2];c[w+4>>2]=c[v+4>>2];c[w+8>>2]=c[v+8>>2];c[w+12>>2]=c[v+12>>2];v=d+680|0;w=H;j=v;c[w>>2]=c[j>>2];c[w+4>>2]=c[j+4>>2];c[w+8>>2]=c[j+8>>2];c[w+12>>2]=c[j+12>>2];j=I;w=v+16|0;c[j>>2]=c[w>>2];c[j+4>>2]=c[w+4>>2];c[j+8>>2]=c[w+8>>2];c[j+12>>2]=c[w+12>>2];w=g3[c[(c[S>>2]|0)+20>>2]&511](R)|0;j=c[(c[w>>2]|0)+72>>2]|0;K1(J|0,0,16)|0;g7[j&127](w,H,I,z,J);i=e;return};case 7:{J=d+824|0;z=K;I=J;c[z>>2]=c[I>>2];c[z+4>>2]=c[I+4>>2];c[z+8>>2]=c[I+8>>2];c[z+12>>2]=c[I+12>>2];I=K+16|0;H=J+16|0;c[I>>2]=c[H>>2];c[I+4>>2]=c[H+4>>2];c[I+8>>2]=c[H+8>>2];c[I+12>>2]=c[H+12>>2];H=K+32|0;w=J+32|0;c[H>>2]=c[w>>2];c[H+4>>2]=c[w+4>>2];c[H+8>>2]=c[w+8>>2];c[H+12>>2]=c[w+12>>2];w=K+48|0;j=J+48|0;c[w>>2]=c[j>>2];c[w+4>>2]=c[j+4>>2];c[w+8>>2]=c[j+8>>2];c[w+12>>2]=c[j+12>>2];if((T&1|0)==0){T=d+888|0;j=T;c[z>>2]=c[j>>2];c[z+4>>2]=c[j+4>>2];c[z+8>>2]=c[j+8>>2];c[z+12>>2]=c[j+12>>2];j=T+16|0;c[I>>2]=c[j>>2];c[I+4>>2]=c[j+4>>2];c[I+8>>2]=c[j+8>>2];c[I+12>>2]=c[j+12>>2];j=T+32|0;c[H>>2]=c[j>>2];c[H+4>>2]=c[j+4>>2];c[H+8>>2]=c[j+8>>2];c[H+12>>2]=c[j+12>>2];j=T+48|0;c[w>>2]=c[j>>2];c[w+4>>2]=c[j+4>>2];c[w+8>>2]=c[j+8>>2];c[w+12>>2]=c[j+12>>2]}else{j=g3[c[(c[S>>2]|0)+20>>2]&511](R)|0;hJ[c[(c[j>>2]|0)+56>>2]&7](j,K,V);j=d+888|0;T=j;c[z>>2]=c[T>>2];c[z+4>>2]=c[T+4>>2];c[z+8>>2]=c[T+8>>2];c[z+12>>2]=c[T+12>>2];T=j+16|0;c[I>>2]=c[T>>2];c[I+4>>2]=c[T+4>>2];c[I+8>>2]=c[T+8>>2];c[I+12>>2]=c[T+12>>2];T=j+32|0;c[H>>2]=c[T>>2];c[H+4>>2]=c[T+4>>2];c[H+8>>2]=c[T+8>>2];c[H+12>>2]=c[T+12>>2];T=j+48|0;c[w>>2]=c[T>>2];c[w+4>>2]=c[T+4>>2];c[w+8>>2]=c[T+8>>2];c[w+12>>2]=c[T+12>>2];T=g3[c[(c[S>>2]|0)+20>>2]&511](R)|0;hJ[c[(c[T>>2]|0)+56>>2]&7](T,K,V)}if((U&1|0)==0){i=e;return}U=d+888|0;K=(a[d+180|0]&1)!=0?J:U;az=+g[K>>2];ab=+g[K+4>>2];ay=+g[K+16>>2];aq=+g[K+20>>2];aa=+g[K+32>>2];ao=+g[K+36>>2];ae=+g[K+48>>2];aA=+g[K+52>>2];aB=+g[K+56>>2];aC=+g[d+184>>2];aD=ab*0.0;aE=+g[K+8>>2]*0.0;aF=aq*0.0;aG=+g[K+24>>2]*0.0;aH=ao*0.0;aI=+g[K+40>>2]*0.0;g[L>>2]=ae+(aE+(aD+az*aC));g[L+4>>2]=aA+(aG+(aF+ay*aC));g[L+8>>2]=aB+(aI+(aH+aa*aC));g[L+12>>2]=0.0;aC=+g[d+188>>2];g[M>>2]=ae+(aE+(aD+az*aC));g[M+4>>2]=aA+(aG+(aF+ay*aC));g[M+8>>2]=aB+(aI+(aH+aa*aC));g[M+12>>2]=0.0;K=g3[c[(c[S>>2]|0)+20>>2]&511](R)|0;J=c[(c[K>>2]|0)+8>>2]|0;K1(N|0,0,16)|0;hM[J&255](K,L,M,N);g[O>>2]=az;g[O+4>>2]=ay;g[O+8>>2]=aa;g[O+12>>2]=0.0;g[P>>2]=ab;g[P+4>>2]=aq;g[P+8>>2]=ao;g[P+12>>2]=0.0;ao=+g[d+192>>2];aq=+g[d+196>>2];d=g3[c[(c[S>>2]|0)+20>>2]&511](R)|0;R=c[(c[d>>2]|0)+60>>2]|0;K1(Q|0,0,16)|0;g5[R&3](d,U+48|0,O,P,V,V,ao,aq,Q,1,10.0);i=e;return};default:{i=e;return}}}function yl(a){a=a|0;var b=0,d=0;b=a+240|0;if((c[b>>2]|0)<=0){return}d=a+248|0;a=0;do{K1((c[(c[d>>2]|0)+(a<<2)>>2]|0)+408|0,0,32)|0;a=a+1|0;}while((a|0)<(c[b>>2]|0));return}function ym(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0;b=a+240|0;d=c[b>>2]|0;if((d|0)<=0){return}e=a+248|0;a=0;f=d;while(1){d=c[(c[e>>2]|0)+(a<<2)>>2]|0;g=c[d+216>>2]|0;if((g|0)==5|(g|0)==2){h=f}else{zg(d);h=c[b>>2]|0}d=a+1|0;if((d|0)<(h|0)){a=d;f=h}else{break}}return}function yn(b){b=b|0;var d=0,e=0,f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;d=i;i=i+128|0;e=d|0;f=d+64|0;z_(22416);do{if((a[b+278|0]&1)==0){h=b+240|0;j=c[h>>2]|0;if((j|0)<=0){break}k=b+248|0;l=b+272|0;m=0;n=j;while(1){j=c[(c[k>>2]|0)+(m<<2)>>2]|0;o=c[j+216>>2]|0;do{if((o|0)==5|(o|0)==2){p=n}else{q=j+476|0;if((c[q>>2]|0)==0){p=n;break}if((c[j+204>>2]&3|0)!=0){p=n;break}vf(j+68|0,j+132|0,j+148|0,+g[l>>2]*+g[j+244>>2],f);r=c[q>>2]|0;g0[c[(c[r>>2]|0)+12>>2]&511](r,f);p=c[h>>2]|0}}while(0);j=m+1|0;if((j|0)<(p|0)){m=j;n=p}else{break}}}else{n=b+8|0;m=c[n>>2]|0;if((m|0)<=0){break}h=b+16|0;l=b+272|0;k=0;j=m;while(1){m=c[(c[h>>2]|0)+(k<<2)>>2]|0;do{if((c[m+236>>2]&2|0)==0|(m|0)==0){s=j}else{o=m+476|0;if((c[o>>2]|0)==0){s=j;break}if((c[m+204>>2]&3|0)!=0){s=j;break}vf(m+68|0,m+132|0,m+148|0,+g[l>>2]*+g[m+244>>2],e);r=c[o>>2]|0;g0[c[(c[r>>2]|0)+12>>2]&511](r,e);s=c[n>>2]|0}}while(0);m=k+1|0;if((m|0)<(s|0)){k=m;j=s}else{break}}}}while(0);z$();i=d;return}function yo(b,d,e,f){b=b|0;d=+d;e=e|0;f=+f;var h=0,i=0,j=0,k=0.0,l=0,m=0.0,n=0;z0();z_(20560);h=b+272|0;do{if((e|0)==0){g[h>>2]=d;i=+V(+d)>=1.1920928955078125e-7|0;j=i;k=d;l=i}else{m=+g[h>>2]+d;g[h>>2]=m;if(m<f){j=e;k=f;l=0;break}i=~~(m/f);g[h>>2]=m- +(i|0)*f;j=e;k=f;l=i}}while(0);e=b|0;h=b;if((g3[c[(c[h>>2]|0)+20>>2]&511](e)|0)!=0){i=g3[c[(c[h>>2]|0)+20>>2]&511](e)|0;a[49912]=(g3[c[(c[i>>2]|0)+48>>2]&511](i)|0)>>>4&1}do{if((l|0)==0){g$[c[(c[b>>2]|0)+80>>2]&1023](b)}else{i=(l|0)>(j|0)?j:l;e=b;gY[c[(c[e>>2]|0)+160>>2]&63](b,k*+(i|0));h=b;g$[c[(c[h>>2]|0)+164>>2]&1023](b);if((i|0)>0){n=0}else{break}do{gY[c[(c[e>>2]|0)+156>>2]&63](b,k);g$[c[(c[h>>2]|0)+80>>2]&1023](b);n=n+1|0;}while((n|0)<(i|0))}}while(0);g$[c[(c[b>>2]|0)+120>>2]&1023](b);z1();z$();return l|0}function yp(a,b){a=a|0;b=+b;var d=0,e=0,f=0,h=0,i=0,j=0;z_(18832);d=a|0;e=c[a+92>>2]|0;if((e|0)!=0){gY[e&63](d,b)}e=a;gY[c[(c[e>>2]|0)+140>>2]&63](a,b);f=a|0;g[a+28>>2]=b;c[a+32>>2]=0;c[a+48>>2]=g3[c[(c[a>>2]|0)+20>>2]&511](f)|0;yq(a,b);g$[c[(c[a>>2]|0)+44>>2]&1023](f);g$[c[(c[a>>2]|0)+148>>2]&1023](a);g[a+112>>2]=b;g0[c[(c[a>>2]|0)+152>>2]&511](a,a+100|0);gY[c[(c[e>>2]|0)+144>>2]&63](a,b);z_(17432);e=a+284|0;if((c[e>>2]|0)>0){h=a+292|0;i=0;do{j=c[(c[h>>2]|0)+(i<<2)>>2]|0;hJ[c[(c[j>>2]|0)+8>>2]&7](j,f,b);i=i+1|0;}while((i|0)<(c[e>>2]|0))}z$();yr(a,b);e=c[a+88>>2]|0;if((e|0)!=0){gY[e&63](d,b)}z$();return}function yq(d,e){d=d|0;e=+e;var f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0,ai=0,aj=0,ak=0,al=0,am=0,an=0,ao=0,ap=0,aq=0,ar=0,as=0,at=0.0,au=0,av=0.0,aw=0,ax=0.0,ay=0.0,az=0.0,aA=0,aB=0,aC=0,aD=0,aE=0,aF=0,aG=0,aH=0,aI=0.0,aJ=0.0,aK=0.0,aL=0.0,aM=0.0,aN=0.0,aO=0.0,aP=0.0,aQ=0.0,aR=0.0,aS=0.0,aT=0.0,aU=0.0,aV=0.0;f=i;i=i+464|0;h=f|0;j=f+64|0;k=f+160|0;l=f+216|0;m=f+280|0;z_(13496);z_(12800);n=d+308|0;o=d+316|0;p=c[o>>2]|0;if((c[n>>2]|0)>0){q=d+24|0;r=0;s=p;while(1){t=c[q>>2]|0;g0[c[(c[t>>2]|0)+16>>2]&511](t,c[s+(r<<2)>>2]|0);t=r+1|0;u=c[o>>2]|0;if((t|0)<(c[n>>2]|0)){r=t;s=u}else{v=u;break}}}else{v=p}p=d+320|0;if((v|0)!=0){if((a[p]&1)!=0){zw(v)}c[o>>2]=0}a[p]=1;c[o>>2]=0;c[n>>2]=0;v=d+312|0;c[v>>2]=0;z$();s=d+240|0;if((c[s>>2]|0)>0){r=d+248|0;q=h+48|0;u=q|0;t=h+52|0;w=h+56|0;x=d|0;y=d+44|0;z=d+76|0;A=d+24|0;B=j|0;C=j+4|0;D=j+8|0;E=j+10|0;F=j+12|0;G=j+28|0;H=q;q=j+76|0;I=j+80|0;J=j+84|0;K=j+88|0;L=j+92|0;M=k|0;N=k|0;O=k+4|0;P=k+28|0;Q=k+44|0;R=d+56|0;d=j|0;S=l;T=h;U=l+16|0;V=h+16|0;W=l+32|0;X=h+32|0;Y=l+48|0;Z=k|0;k=j+44|0;_=k|0;$=j+48|0;aa=j+52|0;j=m+16|0;ab=m+20|0;ac=m+24|0;ad=m+28|0;ae=m+64|0;af=k;k=m+80|0;ag=m+84|0;ah=m+88|0;ai=m+92|0;aj=m+112|0;ak=m+116|0;al=m+120|0;am=0;do{an=c[(c[r>>2]|0)+(am<<2)>>2]|0;ao=an|0;g[an+244>>2]=1.0;ap=c[an+216>>2]|0;do{if(!((ap|0)==5|(ap|0)==2)){if((c[an+204>>2]&3|0)!=0){break}zc(an,e,h);aq=an+4|0;ar=an+52|0;as=ar|0;at=+g[u>>2]- +g[as>>2];au=an+56|0;av=+g[t>>2]- +g[au>>2];aw=an+60|0;ax=+g[w>>2]- +g[aw>>2];if((a[y]&1)==0){break}ay=+g[an+252>>2];az=ay*ay;if(!(az!=0.0&az<at*at+av*av+ax*ax)){break}z_(25480);if((c[(c[an+192>>2]|0)+4>>2]|0)<20){c[12468]=(c[12468]|0)+1;aA=c[z>>2]|0;aB=g3[c[(c[aA>>2]|0)+36>>2]&511](aA)|0;aA=c[A>>2]|0;g[C>>2]=1.0;b[D>>1]=1;b[E>>1]=-1;c[B>>2]=30560;aC=ar;c[F>>2]=c[aC>>2];c[F+4>>2]=c[aC+4>>2];c[F+8>>2]=c[aC+8>>2];c[F+12>>2]=c[aC+12>>2];c[G>>2]=c[H>>2];c[G+4>>2]=c[H+4>>2];c[G+8>>2]=c[H+8>>2];c[G+12>>2]=c[H+12>>2];c[q>>2]=0;c[B>>2]=30928;c[I>>2]=ao;g[J>>2]=0.0;c[K>>2]=aB;c[L>>2]=aA;ax=+g[an+248>>2];ne(M);c[N>>2]=35032;c[O>>2]=8;g[P>>2]=ax;g[Q>>2]=ax;g[J>>2]=+g[R>>2];aA=an+188|0;b[D>>1]=b[(c[aA>>2]|0)+4>>1]|0;b[E>>1]=b[(c[aA>>2]|0)+6>>1]|0;c[S>>2]=c[T>>2];c[S+4>>2]=c[T+4>>2];c[S+8>>2]=c[T+8>>2];c[S+12>>2]=c[T+12>>2];c[U>>2]=c[V>>2];c[U+4>>2]=c[V+4>>2];c[U+8>>2]=c[V+8>>2];c[U+12>>2]=c[V+12>>2];c[W>>2]=c[X>>2];c[W+4>>2]=c[X+4>>2];c[W+8>>2]=c[X+8>>2];c[W+12>>2]=c[X+12>>2];c[Y>>2]=c[H>>2];c[Y+4>>2]=c[H+4>>2];c[Y+8>>2]=c[H+8>>2];c[Y+12>>2]=c[H+12>>2];aA=aq;c[S>>2]=c[aA>>2];c[S+4>>2]=c[aA+4>>2];c[S+8>>2]=c[aA+8>>2];c[S+12>>2]=c[aA+12>>2];aA=an+20|0;c[U>>2]=c[aA>>2];c[U+4>>2]=c[aA+4>>2];c[U+8>>2]=c[aA+8>>2];c[U+12>>2]=c[aA+12>>2];aA=an+36|0;c[W>>2]=c[aA>>2];c[W+4>>2]=c[aA+4>>2];c[W+8>>2]=c[aA+8>>2];c[W+12>>2]=c[aA+12>>2];se(x,Z,aq,l,d,0.0);ax=+g[C>>2];if(ax<1.0){av=ax*(+g[u>>2]- +g[as>>2]);at=ax*(+g[t>>2]- +g[au>>2]);az=ax*(+g[w>>2]- +g[aw>>2]);ax=av*(-0.0- +g[_>>2])+at*(-0.0- +g[$>>2])+az*(-0.0- +g[aa>>2]);aq=c[A>>2]|0;aA=hd[c[(c[aq>>2]|0)+12>>2]&127](aq,ao,c[q>>2]|0)|0;aq=c[n>>2]|0;do{if((aq|0)==(c[v>>2]|0)){aB=(aq|0)==0?1:aq<<1;if((aq|0)>=(aB|0)){aD=aq;break}if((aB|0)==0){aE=0;aF=aq}else{ar=zv(aB<<2,16)|0;aE=ar;aF=c[n>>2]|0}if((aF|0)>0){ar=0;do{aG=aE+(ar<<2)|0;if((aG|0)!=0){c[aG>>2]=c[(c[o>>2]|0)+(ar<<2)>>2]}ar=ar+1|0;}while((ar|0)<(aF|0))}ar=c[o>>2]|0;if((ar|0)!=0){if((a[p]&1)!=0){zw(ar)}c[o>>2]=0}a[p]=1;c[o>>2]=aE;c[v>>2]=aB;aD=c[n>>2]|0}else{aD=aq}}while(0);aq=(c[o>>2]|0)+(aD<<2)|0;if((aq|0)==0){aH=aD}else{c[aq>>2]=aA;aH=c[n>>2]|0}c[n>>2]=aH+1;ay=av+ +g[as>>2];aI=at+ +g[au>>2];aJ=az+ +g[aw>>2];aq=c[q>>2]|0;aK=+g[aq+4>>2];aL=+g[aq+20>>2];aM=+g[aq+36>>2];aN=+g[aq+8>>2];aO=+g[aq+24>>2];aP=+g[aq+40>>2];aQ=+g[aq+12>>2];aR=+g[aq+28>>2];aS=+g[aq+44>>2];aT=-0.0- +g[aq+52>>2];aU=-0.0- +g[aq+56>>2];aV=-0.0- +g[aq+60>>2];K1(m|0,0,16)|0;g[j>>2]=ay*aK+aI*aL+aJ*aM+(aK*aT+aL*aU+aM*aV);g[ab>>2]=ay*aN+aI*aO+aJ*aP+(aN*aT+aO*aU+aP*aV);g[ac>>2]=ay*aQ+aI*aR+aJ*aS+(aQ*aT+aR*aU+aS*aV);g[ad>>2]=0.0;c[ae>>2]=c[af>>2];c[ae+4>>2]=c[af+4>>2];c[ae+8>>2]=c[af+8>>2];c[ae+12>>2]=c[af+12>>2];g[k>>2]=ax;g[ag>>2]=0.0;g[ah>>2]=0.0;g[ai>>2]=0.0;c[aj>>2]=0;a[ak]=0;K1(al|0,0,32)|0;aq=vW(aA,m,1)|0;g[aA+4+(aq*184|0)+92>>2]=0.0;g[aA+4+(aq*184|0)+84>>2]=+uB(ao,c[q>>2]|0);ar=aA+4+(aq*184|0)+48|0;c[ar>>2]=c[aC>>2];c[ar+4>>2]=c[aC+4>>2];c[ar+8>>2]=c[aC+8>>2];c[ar+12>>2]=c[aC+12>>2];g[aA+4+(aq*184|0)+32>>2]=ay;g[aA+4+(aq*184|0)+36>>2]=aI;g[aA+4+(aq*184|0)+40>>2]=aJ;g[aA+4+(aq*184|0)+44>>2]=0.0}nv(Z)}z$()}}while(0);am=am+1|0;}while((am|0)<(c[s>>2]|0))}z$();i=f;return}function yr(b,d){b=b|0;d=+d;var e=0,f=0,h=0,i=0,j=0,k=0,l=0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0,v=0;z_(15968);e=b+240|0;if((c[e>>2]|0)>0){f=b+248|0;b=0;do{h=c[(c[f>>2]|0)+(b<<2)>>2]|0;L5:do{if((h|0)!=0){i=h|0;j=h+216|0;k=c[j>>2]|0;L7:do{if((k|0)==2|(k|0)==4){l=k}else{m=+g[h+308>>2];n=+g[h+312>>2];o=+g[h+316>>2];p=+g[h+468>>2];do{if(m*m+n*n+o*o<p*p){q=+g[h+324>>2];r=+g[h+328>>2];s=+g[h+332>>2];t=+g[h+472>>2];if(q*q+r*r+s*s>=t*t){break}u=h+220|0;g[u>>2]=+g[u>>2]+d;l=k;break L7}}while(0);g[h+220>>2]=0.0;rS(i,0);l=c[j>>2]|0}}while(0);k=(l|0)==4;if(k){break}p=+g[538];L16:do{if(!((a[49912]&1)!=0|p==0.0)){do{if((l-2|0)>>>0>=2>>>0){if(+g[h+220>>2]>p){break}if(k){break L5}else{break L16}}}while(0);if((c[h+204>>2]&3|0)!=0){rS(i,2);break L5}if((l|0)==1){rS(i,3);v=c[j>>2]|0}else{v=l}if((v|0)!=2){break L5}K1(h+308|0,0,32)|0;break L5}}while(0);rS(i,1)}}while(0);b=b+1|0;}while((b|0)<(c[e>>2]|0))}z$();return}function ys(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0;d=a+256|0;e=b;c[d>>2]=c[e>>2];c[d+4>>2]=c[e+4>>2];c[d+8>>2]=c[e+8>>2];c[d+12>>2]=c[e+12>>2];e=a+240|0;d=c[e>>2]|0;if((d|0)<=0){return}f=a+248|0;a=0;g=d;while(1){d=c[(c[f>>2]|0)+(a<<2)>>2]|0;h=c[d+216>>2]|0;do{if((h|0)==5|(h|0)==2){i=g}else{if((c[d+500>>2]&1|0)!=0){i=g;break}ze(d,b);i=c[e>>2]|0}}while(0);d=a+1|0;if((d|0)<(i|0)){a=d;g=i}else{break}}return}function yt(a,b){a=a|0;b=b|0;var d=0;d=a;a=b+256|0;c[d>>2]=c[a>>2];c[d+4>>2]=c[a+4>>2];c[d+8>>2]=c[a+8>>2];c[d+12>>2]=c[a+12>>2];return}function yu(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;r0(a|0,b,c,d);return}function yv(a,b){a=a|0;b=b|0;if((c[b+236>>2]&2|0)==0|(b|0)==0){r5(a|0,b);return}else{g0[c[(c[a>>2]|0)+92>>2]&511](a,b);return}}function yw(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;d=a+240|0;e=c[d>>2]|0;f=a+248|0;g=0;while(1){if((g|0)>=(e|0)){h=7;break}i=c[f>>2]|0;j=i+(g<<2)|0;if((c[j>>2]|0)==(b|0)){break}else{g=g+1|0}}if((h|0)==7){k=a|0;l=b|0;r5(k,l);return}h=e-1|0;c[j>>2]=c[i+(h<<2)>>2];c[(c[f>>2]|0)+(h<<2)>>2]=b;c[d>>2]=(c[d>>2]|0)-1;k=a|0;l=b|0;r5(k,l);return}function yx(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;e=d|0;f=d+204|0;do{if((c[f>>2]&3|0)==0){if((c[d+500>>2]&1|0)!=0){break}ze(d,b+256|0)}}while(0);if((c[d+192>>2]|0)==0){return}if((c[f>>2]&1|0)==0){g=b+240|0;h=c[g>>2]|0;i=b+244|0;do{if((h|0)==(c[i>>2]|0)){j=(h|0)==0?1:h<<1;if((h|0)>=(j|0)){k=h;break}if((j|0)==0){l=0;m=h}else{n=zv(j<<2,16)|0;l=n;m=c[g>>2]|0}n=b+248|0;if((m|0)>0){o=0;do{p=l+(o<<2)|0;if((p|0)!=0){c[p>>2]=c[(c[n>>2]|0)+(o<<2)>>2]}o=o+1|0;}while((o|0)<(m|0))}o=c[n>>2]|0;p=b+252|0;if((o|0)!=0){if((a[p]&1)!=0){zw(o)}c[n>>2]=0}a[p]=1;c[n>>2]=l;c[i>>2]=j;k=c[g>>2]|0}else{k=h}}while(0);h=(c[b+248>>2]|0)+(k<<2)|0;if((h|0)==0){q=k}else{c[h>>2]=d;q=c[g>>2]|0}c[g>>2]=q+1}else{rS(e,2)}q=c[f>>2]|0;if((q&1|0)==0){r=(q&2|0)==0}else{r=0}hM[c[(c[b>>2]|0)+36>>2]&255](b,e,r?1:2,r?-1:-3);return}function yy(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;g=d|0;h=d+204|0;do{if((c[h>>2]&3|0)==0){if((c[d+500>>2]&1|0)!=0){break}ze(d,b+256|0)}}while(0);if((c[d+192>>2]|0)==0){return}if((c[h>>2]&1|0)==0){h=b+240|0;i=c[h>>2]|0;j=b+244|0;do{if((i|0)==(c[j>>2]|0)){k=(i|0)==0?1:i<<1;if((i|0)>=(k|0)){l=i;break}if((k|0)==0){m=0;n=i}else{o=zv(k<<2,16)|0;m=o;n=c[h>>2]|0}o=b+248|0;if((n|0)>0){p=0;do{q=m+(p<<2)|0;if((q|0)!=0){c[q>>2]=c[(c[o>>2]|0)+(p<<2)>>2]}p=p+1|0;}while((p|0)<(n|0))}p=c[o>>2]|0;q=b+252|0;if((p|0)!=0){if((a[q]&1)!=0){zw(p)}c[o>>2]=0}a[q]=1;c[o>>2]=m;c[j>>2]=k;l=c[h>>2]|0}else{l=i}}while(0);i=(c[b+248>>2]|0)+(l<<2)|0;if((i|0)==0){r=l}else{c[i>>2]=d;r=c[h>>2]|0}c[h>>2]=r+1}else{rS(g,2)}hM[c[(c[b>>2]|0)+36>>2]&255](b,g,e,f);return}function yz(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;f=b+220|0;g=c[f>>2]|0;h=b+224|0;do{if((g|0)==(c[h>>2]|0)){i=(g|0)==0?1:g<<1;if((g|0)>=(i|0)){j=g;break}if((i|0)==0){k=0;l=g}else{m=zv(i<<2,16)|0;k=m;l=c[f>>2]|0}m=b+228|0;if((l|0)>0){n=0;do{o=k+(n<<2)|0;if((o|0)!=0){c[o>>2]=c[(c[m>>2]|0)+(n<<2)>>2]}n=n+1|0;}while((n|0)<(l|0))}n=c[m>>2]|0;o=b+232|0;if((n|0)!=0){if((a[o]&1)!=0){zw(n)}c[m>>2]=0}a[o]=1;c[m>>2]=k;c[h>>2]=i;j=c[f>>2]|0}else{j=g}}while(0);g=(c[b+228>>2]|0)+(j<<2)|0;if((g|0)==0){p=j}else{c[g>>2]=d;p=c[f>>2]|0}c[f>>2]=p+1;if(!e){return}zl(c[d+28>>2]|0,d);zl(c[d+32>>2]|0,d);return}function yA(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;e=b+4|0;f=c[e>>2]|0;g=b+8|0;do{if((f|0)==(c[g>>2]|0)){h=(f|0)==0?1:f<<1;if((f|0)>=(h|0)){i=f;break}if((h|0)==0){j=0;k=f}else{l=zv(h<<2,16)|0;j=l;k=c[e>>2]|0}l=b+12|0;if((k|0)>0){m=0;do{n=j+(m<<2)|0;if((n|0)!=0){c[n>>2]=c[(c[l>>2]|0)+(m<<2)>>2]}m=m+1|0;}while((m|0)<(k|0))}m=c[l>>2]|0;n=b+16|0;if((m|0)!=0){if((a[n]&1)!=0){zw(m)}c[l>>2]=0}a[n]=1;c[l>>2]=j;c[g>>2]=h;i=c[e>>2]|0}else{i=f}}while(0);f=(c[b+12>>2]|0)+(i<<2)|0;if((f|0)==0){o=i;p=o+1|0;c[e>>2]=p;return}c[f>>2]=c[d>>2];o=c[e>>2]|0;p=o+1|0;c[e>>2]=p;return}function yB(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0;d=a+220|0;e=c[d>>2]|0;f=a+228|0;a=0;while(1){if((a|0)>=(e|0)){break}g=c[f>>2]|0;h=g+(a<<2)|0;if((c[h>>2]|0)==(b|0)){i=4;break}else{a=a+1|0}}if((i|0)==4){i=e-1|0;c[h>>2]=c[g+(i<<2)>>2];c[(c[f>>2]|0)+(i<<2)>>2]=b;c[d>>2]=(c[d>>2]|0)-1}zm(c[b+28>>2]|0,b);zm(c[b+32>>2]|0,b);return}function yC(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;e=b+284|0;f=c[e>>2]|0;g=b+288|0;do{if((f|0)==(c[g>>2]|0)){h=(f|0)==0?1:f<<1;if((f|0)>=(h|0)){i=f;break}if((h|0)==0){j=0;k=f}else{l=zv(h<<2,16)|0;j=l;k=c[e>>2]|0}l=b+292|0;if((k|0)>0){m=0;do{n=j+(m<<2)|0;if((n|0)!=0){c[n>>2]=c[(c[l>>2]|0)+(m<<2)>>2]}m=m+1|0;}while((m|0)<(k|0))}m=c[l>>2]|0;n=b+296|0;if((m|0)!=0){if((a[n]&1)!=0){zw(m)}c[l>>2]=0}a[n]=1;c[l>>2]=j;c[g>>2]=h;i=c[e>>2]|0}else{i=f}}while(0);f=(c[b+292>>2]|0)+(i<<2)|0;if((f|0)==0){o=i;p=o+1|0;c[e>>2]=p;return}c[f>>2]=d;o=c[e>>2]|0;p=o+1|0;c[e>>2]=p;return}function yD(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0;d=a+284|0;e=c[d>>2]|0;f=a+292|0;a=0;while(1){if((a|0)>=(e|0)){g=7;break}h=c[f>>2]|0;i=h+(a<<2)|0;if((c[i>>2]|0)==(b|0)){break}else{a=a+1|0}}if((g|0)==7){return}g=e-1|0;c[i>>2]=c[h+(g<<2)>>2];c[(c[f>>2]|0)+(g<<2)>>2]=b;c[d>>2]=(c[d>>2]|0)-1;return}function yE(a,b){a=a|0;b=b|0;g0[c[(c[a>>2]|0)+64>>2]&511](a,b);return}function yF(a,b){a=a|0;b=b|0;g0[c[(c[a>>2]|0)+68>>2]&511](a,b);return}function yG(a,b){a=a|0;b=b|0;g0[c[(c[a>>2]|0)+64>>2]&511](a,b);return}function yH(a,b){a=a|0;b=b|0;g0[c[(c[a>>2]|0)+68>>2]&511](a,b);return}function yI(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;e=i;i=i+8|0;f=e|0;z_(14952);g=b+184|0;h=c[b+220>>2]|0;j=b+188|0;k=c[j>>2]|0;if((k|0)<(h|0)){l=b+192|0;if((c[l>>2]|0)<(h|0)){if((h|0)==0){m=0;n=k}else{o=zv(h<<2,16)|0;m=o;n=c[j>>2]|0}o=b+196|0;if((n|0)>0){p=0;do{q=m+(p<<2)|0;if((q|0)!=0){c[q>>2]=c[(c[o>>2]|0)+(p<<2)>>2]}p=p+1|0;}while((p|0)<(n|0))}n=c[o>>2]|0;p=b+200|0;if((n|0)!=0){if((a[p]&1)!=0){zw(n)}c[o>>2]=0}a[p]=1;c[o>>2]=m;c[l>>2]=h;r=o}else{r=b+196|0}o=k;do{k=(c[r>>2]|0)+(o<<2)|0;if((k|0)!=0){c[k>>2]=0}o=o+1|0;}while((o|0)<(h|0))}c[j>>2]=h;h=b;o=b+228|0;r=b+196|0;k=0;while(1){if((k|0)>=(g3[c[(c[h>>2]|0)+104>>2]&511](b)|0)){break}c[(c[r>>2]|0)+(k<<2)>>2]=c[(c[o>>2]|0)+(k<<2)>>2];k=k+1|0}k=c[j>>2]|0;if((k|0)>1){y_(g,f,0,k-1|0)}if((g3[c[(c[h>>2]|0)+104>>2]&511](b)|0)==0){s=0}else{s=c[r>>2]|0}r=b+204|0;h=c[r>>2]|0;k=c[j>>2]|0;j=b|0;yJ(h,d,s,k,g3[c[(c[b>>2]|0)+20>>2]&511](j)|0);k=b+208|0;s=c[k>>2]|0;h=c[(c[s>>2]|0)+8>>2]|0;f=c[b+8>>2]|0;g=b+24|0;o=c[g>>2]|0;l=g3[c[(c[o>>2]|0)+36>>2]&511](o)|0;hF[h&255](s,f,l);uO(c[b+212>>2]|0,c[g>>2]|0,j,c[r>>2]|0);yK(c[r>>2]|0);r=c[k>>2]|0;hM[c[(c[r>>2]|0)+16>>2]&255](r,d,c[b+80>>2]|0,c[b+72>>2]|0);z$();i=e;return}function yJ(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0;c[b+4>>2]=d;c[b+12>>2]=e;c[b+16>>2]=f;c[b+20>>2]=g;g=b+36|0;f=c[g>>2]|0;if((f|0)<0){e=b+40|0;d=b+44|0;if((c[e>>2]|0)<0){h=c[d>>2]|0;i=b+48|0;if((h|0)!=0){if((a[i]&1)!=0){zw(h)}c[d>>2]=0}a[i]=1;c[d>>2]=0;c[e>>2]=0}e=f;do{f=(c[d>>2]|0)+(e<<2)|0;if((f|0)!=0){c[f>>2]=0}e=e+1|0;}while((e|0)<0)}c[g>>2]=0;g=b+56|0;e=c[g>>2]|0;if((e|0)<0){d=b+60|0;f=b+64|0;if((c[d>>2]|0)<0){i=c[f>>2]|0;h=b+68|0;if((i|0)!=0){if((a[h]&1)!=0){zw(i)}c[f>>2]=0}a[h]=1;c[f>>2]=0;c[d>>2]=0}d=e;do{e=(c[f>>2]|0)+(d<<2)|0;if((e|0)!=0){c[e>>2]=0}d=d+1|0;}while((d|0)<0)}c[g>>2]=0;g=b+76|0;d=c[g>>2]|0;if((d|0)>=0){c[g>>2]=0;return}f=b+80|0;e=b+84|0;if((c[f>>2]|0)<0){h=c[e>>2]|0;i=b+88|0;if((h|0)!=0){if((a[i]&1)!=0){zw(h)}c[e>>2]=0}a[i]=1;c[e>>2]=0;c[f>>2]=0}f=d;do{d=(c[e>>2]|0)+(f<<2)|0;if((d|0)!=0){c[d>>2]=0}f=f+1|0;}while((f|0)<0);c[g>>2]=0;return}function yK(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;d=b+36|0;e=c[d>>2]|0;if((e|0)==0){f=0}else{f=c[b+44>>2]|0}g=b+56|0;h=c[g>>2]|0;if((h|0)==0){i=0}else{i=c[b+64>>2]|0}j=b+76|0;k=c[j>>2]|0;if((k|0)==0){l=0}else{l=c[b+84>>2]|0}m=c[b+8>>2]|0;+hb[c[(c[m>>2]|0)+12>>2]&3](m,f,e,i,h,l,k,c[b+4>>2]|0,c[b+20>>2]|0,c[b+24>>2]|0,c[b+28>>2]|0);k=c[d>>2]|0;if((k|0)<0){l=b+40|0;h=b+44|0;if((c[l>>2]|0)<0){i=c[h>>2]|0;e=b+48|0;if((i|0)!=0){if((a[e]&1)!=0){zw(i)}c[h>>2]=0}a[e]=1;c[h>>2]=0;c[l>>2]=0}l=k;do{k=(c[h>>2]|0)+(l<<2)|0;if((k|0)!=0){c[k>>2]=0}l=l+1|0;}while((l|0)<0)}c[d>>2]=0;d=c[g>>2]|0;if((d|0)<0){l=b+60|0;h=b+64|0;if((c[l>>2]|0)<0){k=c[h>>2]|0;e=b+68|0;if((k|0)!=0){if((a[e]&1)!=0){zw(k)}c[h>>2]=0}a[e]=1;c[h>>2]=0;c[l>>2]=0}l=d;do{d=(c[h>>2]|0)+(l<<2)|0;if((d|0)!=0){c[d>>2]=0}l=l+1|0;}while((l|0)<0)}c[g>>2]=0;g=c[j>>2]|0;if((g|0)>=0){c[j>>2]=0;return}l=b+80|0;h=b+84|0;if((c[l>>2]|0)<0){d=c[h>>2]|0;e=b+88|0;if((d|0)!=0){if((a[e]&1)!=0){zw(d)}c[h>>2]=0}a[e]=1;c[h>>2]=0;c[l>>2]=0}l=g;do{g=(c[h>>2]|0)+(l<<2)|0;if((g|0)!=0){c[g>>2]=0}l=l+1|0;}while((l|0)<0);c[j>>2]=0;return}function yL(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;z_(13984);d=b+212|0;e=c[d>>2]|0;f=b|0;hF[c[(c[e>>2]|0)+8>>2]&255](e,f,c[b+24>>2]|0);e=b+308|0;if((c[e>>2]|0)>0){g=b+316|0;h=0;do{i=c[(c[g>>2]|0)+(h<<2)>>2]|0;j=c[i+740>>2]|0;k=c[i+744>>2]|0;do{if((j|0)!=0){if((c[j+204>>2]&3|0)!=0|(k|0)==0){break}if((c[k+204>>2]&3|0)!=0){break}i=c[j+216>>2]|0;if((i|0)==5|(i|0)==2){i=c[k+216>>2]|0;if((i|0)==5|(i|0)==2){break}}i=c[j+208>>2]|0;l=c[k+208>>2]|0;m=(c[d>>2]|0)+16|0;n=c[m>>2]|0;o=n+(i<<3)|0;p=c[o>>2]|0;if((p|0)==(i|0)){q=i;r=n}else{i=n;n=o;o=p;while(1){p=i+(o<<3)|0;c[n>>2]=c[p>>2];s=c[p>>2]|0;p=c[m>>2]|0;t=p+(s<<3)|0;u=c[t>>2]|0;if((s|0)==(u|0)){q=s;r=p;break}else{i=p;n=t;o=u}}}o=r+(l<<3)|0;n=c[o>>2]|0;if((n|0)==(l|0)){v=l;w=r}else{i=r;u=o;o=n;while(1){n=i+(o<<3)|0;c[u>>2]=c[n>>2];t=c[n>>2]|0;n=c[m>>2]|0;p=n+(t<<3)|0;s=c[p>>2]|0;if((t|0)==(s|0)){v=t;w=n;break}else{i=n;u=p;o=s}}}if((q|0)==(v|0)){break}c[w+(q<<3)>>2]=v;o=c[m>>2]|0;u=o+(v<<3)+4|0;c[u>>2]=(c[u>>2]|0)+(c[o+(q<<3)+4>>2]|0)}}while(0);h=h+1|0;}while((h|0)<(c[e>>2]|0))}e=c[b+220>>2]|0;if((e|0)>0){h=b+228|0;b=0;do{q=c[(c[h>>2]|0)+(b<<2)>>2]|0;do{if((a[q+20|0]&1)!=0){v=c[q+28>>2]|0;w=c[q+32>>2]|0;if((v|0)==0){break}if((c[v+204>>2]&3|0)!=0|(w|0)==0){break}if((c[w+204>>2]&3|0)!=0){break}r=c[v+216>>2]|0;if((r|0)==5|(r|0)==2){r=c[w+216>>2]|0;if((r|0)==5|(r|0)==2){break}}r=c[v+208>>2]|0;v=c[w+208>>2]|0;w=(c[d>>2]|0)+16|0;g=c[w>>2]|0;k=g+(r<<3)|0;j=c[k>>2]|0;if((j|0)==(r|0)){x=r;y=g}else{r=g;g=k;k=j;while(1){j=r+(k<<3)|0;c[g>>2]=c[j>>2];o=c[j>>2]|0;j=c[w>>2]|0;u=j+(o<<3)|0;i=c[u>>2]|0;if((o|0)==(i|0)){x=o;y=j;break}else{r=j;g=u;k=i}}}k=y+(v<<3)|0;g=c[k>>2]|0;if((g|0)==(v|0)){z=v;A=y}else{r=y;m=k;k=g;while(1){g=r+(k<<3)|0;c[m>>2]=c[g>>2];i=c[g>>2]|0;g=c[w>>2]|0;u=g+(i<<3)|0;j=c[u>>2]|0;if((i|0)==(j|0)){z=i;A=g;break}else{r=g;m=u;k=j}}}if((x|0)==(z|0)){break}c[A+(x<<3)>>2]=z;k=c[w>>2]|0;m=k+(z<<3)+4|0;c[m>>2]=(c[m>>2]|0)+(c[k+(x<<3)+4>>2]|0)}}while(0);b=b+1|0;}while((b|0)<(e|0))}e=c[d>>2]|0;g0[c[(c[e>>2]|0)+12>>2]&511](e,f);z$();return}function yM(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;e=b+4|0;f=c[e>>2]|0;g=b+8|0;do{if((f|0)==(c[g>>2]|0)){h=(f|0)==0?1:f<<1;if((f|0)>=(h|0)){i=f;break}if((h|0)==0){j=0;k=f}else{l=zv(h<<2,16)|0;j=l;k=c[e>>2]|0}l=b+12|0;if((k|0)>0){m=0;do{n=j+(m<<2)|0;if((n|0)!=0){c[n>>2]=c[(c[l>>2]|0)+(m<<2)>>2]}m=m+1|0;}while((m|0)<(k|0))}m=c[l>>2]|0;n=b+16|0;if((m|0)!=0){if((a[n]&1)!=0){zw(m)}c[l>>2]=0}a[n]=1;c[l>>2]=j;c[g>>2]=h;i=c[e>>2]|0}else{i=f}}while(0);f=(c[b+12>>2]|0)+(i<<2)|0;if((f|0)==0){o=i;p=o+1|0;c[e>>2]=p;return}c[f>>2]=c[d>>2];o=c[e>>2]|0;p=o+1|0;c[e>>2]=p;return}function yN(a){a=a|0;return}function yO(d,e){d=d|0;e=+e;var f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0.0,ae=0.0,af=0.0,ag=0.0,ah=0.0,ai=0,aj=0,ak=0,al=0,am=0,an=0,ao=0;f=i;i=i+344|0;h=f|0;j=f+64|0;k=f+160|0;l=f+216|0;m=f+280|0;n=f+296|0;o=f+312|0;p=f+328|0;z_(24456);q=d+240|0;if((c[q>>2]|0)>0){r=d+248|0;s=h+48|0;t=s|0;u=h+52|0;v=h+56|0;w=d|0;x=d+44|0;y=d+76|0;z=d+24|0;A=j|0;B=j+4|0;C=j+8|0;D=j+10|0;E=j+12|0;F=j+28|0;G=s;s=j+76|0;H=j+80|0;I=j+84|0;J=j+88|0;K=j+92|0;L=k|0;M=k|0;N=k+4|0;O=k+28|0;P=k+44|0;Q=d+56|0;R=j|0;j=l;S=h;T=l+16|0;U=h+16|0;V=l+32|0;W=h+32|0;X=l+48|0;Y=k|0;k=0;do{Z=c[(c[r>>2]|0)+(k<<2)>>2]|0;_=Z|0;$=Z+244|0;g[$>>2]=1.0;aa=c[Z+216>>2]|0;L5:do{if(!((aa|0)==5|(aa|0)==2)){if((c[Z+204>>2]&3|0)!=0){break}zc(Z,e,h);ab=Z+4|0;ac=Z+52|0;ad=+g[t>>2]- +g[ac>>2];ae=+g[u>>2]- +g[Z+56>>2];af=+g[v>>2]- +g[Z+60>>2];do{if((a[x]&1)!=0){ag=+g[Z+252>>2];ah=ag*ag;if(!(ah!=0.0&ah<ad*ad+ae*ae+af*af)){break}z_(24080);do{if((c[(c[Z+192>>2]|0)+4>>2]|0)<20){c[12468]=(c[12468]|0)+1;ai=c[y>>2]|0;aj=g3[c[(c[ai>>2]|0)+36>>2]&511](ai)|0;ai=c[z>>2]|0;g[B>>2]=1.0;b[C>>1]=1;b[D>>1]=-1;c[A>>2]=30560;ak=ac;c[E>>2]=c[ak>>2];c[E+4>>2]=c[ak+4>>2];c[E+8>>2]=c[ak+8>>2];c[E+12>>2]=c[ak+12>>2];c[F>>2]=c[G>>2];c[F+4>>2]=c[G+4>>2];c[F+8>>2]=c[G+8>>2];c[F+12>>2]=c[G+12>>2];c[s>>2]=0;c[A>>2]=30928;c[H>>2]=_;g[I>>2]=0.0;c[J>>2]=aj;c[K>>2]=ai;ah=+g[Z+248>>2];ne(L);c[M>>2]=35032;c[N>>2]=8;g[O>>2]=ah;g[P>>2]=ah;g[I>>2]=+g[Q>>2];ai=Z+188|0;b[C>>1]=b[(c[ai>>2]|0)+4>>1]|0;b[D>>1]=b[(c[ai>>2]|0)+6>>1]|0;c[j>>2]=c[S>>2];c[j+4>>2]=c[S+4>>2];c[j+8>>2]=c[S+8>>2];c[j+12>>2]=c[S+12>>2];c[T>>2]=c[U>>2];c[T+4>>2]=c[U+4>>2];c[T+8>>2]=c[U+8>>2];c[T+12>>2]=c[U+12>>2];c[V>>2]=c[W>>2];c[V+4>>2]=c[W+4>>2];c[V+8>>2]=c[W+8>>2];c[V+12>>2]=c[W+12>>2];c[X>>2]=c[G>>2];c[X+4>>2]=c[G+4>>2];c[X+8>>2]=c[G+8>>2];c[X+12>>2]=c[G+12>>2];ai=ab;c[j>>2]=c[ai>>2];c[j+4>>2]=c[ai+4>>2];c[j+8>>2]=c[ai+8>>2];c[j+12>>2]=c[ai+12>>2];ai=Z+20|0;c[T>>2]=c[ai>>2];c[T+4>>2]=c[ai+4>>2];c[T+8>>2]=c[ai+8>>2];c[T+12>>2]=c[ai+12>>2];ai=Z+36|0;c[V>>2]=c[ai>>2];c[V+4>>2]=c[ai+4>>2];c[V+8>>2]=c[ai+8>>2];c[V+12>>2]=c[ai+12>>2];se(w,Y,ab,l,R,0.0);ah=+g[B>>2];if(ah>=1.0){nv(Y);al=0;break}g[$>>2]=ah;zc(Z,ah*e,h);g[$>>2]=0.0;zh(Z,h);nv(Y);al=4}else{al=0}}while(0);z$();if((al|0)==4){break L5}}}while(0);zh(Z,h)}}while(0);k=k+1|0;}while((k|0)<(c[q>>2]|0))}if((a[d+279|0]&1)!=0){z_(23776);q=d+308|0;k=c[q>>2]|0;if((k|0)>0){h=d+316|0;d=m|0;al=m+4|0;Y=m+8|0;B=m+12|0;R=n|0;l=n+4|0;w=n+8|0;V=n+12|0;T=o|0;j=o+4|0;G=o+8|0;X=o+12|0;W=p|0;U=p+4|0;S=p+8|0;D=p+12|0;C=0;Q=k;while(1){k=c[(c[h>>2]|0)+(C<<2)>>2]|0;I=c[k+740>>2]|0;if((c[I+236>>2]&2|0)==0){am=0}else{am=I}I=c[k+744>>2]|0;if((c[I+236>>2]&2|0)==0){an=0}else{an=I}I=k+748|0;if((c[I>>2]|0)>0){P=am|0;O=an|0;N=am+52|0;M=am+56|0;L=am+60|0;K=an+52|0;J=an+56|0;H=an+60|0;A=(an|0)==0;if((am|0)==0){s=0;do{e=+uC(P,O);do{if(e>0.0){af=+g[k+4+(s*184|0)+120>>2];if(af==0.0){break}ae=e*af*(-0.0- +g[k+4+(s*184|0)+64>>2]);ad=e*af*(-0.0- +g[k+4+(s*184|0)+68>>2]);ah=e*af*(-0.0- +g[k+4+(s*184|0)+72>>2]);g[d>>2]=ae;g[al>>2]=ad;g[Y>>2]=ah;g[B>>2]=0.0;af=+g[k+4+(s*184|0)+52>>2]- +g[M>>2];ag=+g[k+4+(s*184|0)+56>>2]- +g[L>>2];g[R>>2]=+g[k+4+(s*184|0)+48>>2]- +g[N>>2];g[l>>2]=af;g[w>>2]=ag;g[V>>2]=0.0;ag=+g[k+4+(s*184|0)+36>>2]- +g[J>>2];af=+g[k+4+(s*184|0)+40>>2]- +g[H>>2];g[T>>2]=+g[k+4+(s*184|0)+32>>2]- +g[K>>2];g[j>>2]=ag;g[G>>2]=af;g[X>>2]=0.0;if(A){break}g[W>>2]=-0.0-ae;g[U>>2]=-0.0-ad;g[S>>2]=-0.0-ah;g[D>>2]=0.0;wH(an,p,o)}}while(0);s=s+1|0;}while((s|0)<(c[I>>2]|0))}else{s=0;do{e=+uC(P,O);do{if(e>0.0){ah=+g[k+4+(s*184|0)+120>>2];if(ah==0.0){break}ad=e*ah*(-0.0- +g[k+4+(s*184|0)+68>>2]);ae=e*ah*(-0.0- +g[k+4+(s*184|0)+72>>2]);g[d>>2]=e*ah*(-0.0- +g[k+4+(s*184|0)+64>>2]);g[al>>2]=ad;g[Y>>2]=ae;g[B>>2]=0.0;ae=+g[k+4+(s*184|0)+52>>2]- +g[M>>2];ad=+g[k+4+(s*184|0)+56>>2]- +g[L>>2];g[R>>2]=+g[k+4+(s*184|0)+48>>2]- +g[N>>2];g[l>>2]=ae;g[w>>2]=ad;g[V>>2]=0.0;ad=+g[k+4+(s*184|0)+36>>2]- +g[J>>2];ae=+g[k+4+(s*184|0)+40>>2]- +g[H>>2];g[T>>2]=+g[k+4+(s*184|0)+32>>2]- +g[K>>2];g[j>>2]=ad;g[G>>2]=ae;g[X>>2]=0.0;wH(am,m,n);if(A){break}ae=-0.0- +g[al>>2];ad=-0.0- +g[Y>>2];g[W>>2]=-0.0- +g[d>>2];g[U>>2]=ae;g[S>>2]=ad;g[D>>2]=0.0;wH(an,p,o)}}while(0);s=s+1|0;}while((s|0)<(c[I>>2]|0))}ao=c[q>>2]|0}else{ao=Q}I=C+1|0;if((I|0)<(ao|0)){C=I;Q=ao}else{break}}}z$()}z$();i=f;return}function yP(a,b){a=a|0;b=+b;var d=0,e=0,f=0,g=0,h=0;z_(23576);d=a+240|0;e=c[d>>2]|0;if((e|0)>0){f=a+248|0;a=0;g=e;while(1){e=c[(c[f>>2]|0)+(a<<2)>>2]|0;if((c[e+204>>2]&3|0)==0){zf(e,b);zc(e,b,e+68|0);h=c[d>>2]|0}else{h=g}e=a+1|0;if((e|0)<(h|0)){a=e;g=h}else{break}}}z$();return}function yQ(b,d){b=b|0;d=d|0;var e=0,f=0;e=b+277|0;f=b+208|0;if((a[e]&1)!=0){zw(c[f>>2]|0)}a[e]=0;c[f>>2]=d;c[(c[b+204>>2]|0)+8>>2]=d;return}function yR(a){a=a|0;return c[a+208>>2]|0}function yS(a){a=a|0;return c[a+220>>2]|0}function yT(a,b){a=a|0;b=b|0;return c[(c[a+228>>2]|0)+(b<<2)>>2]|0}function yU(a,b){a=a|0;b=b|0;return c[(c[a+228>>2]|0)+(b<<2)>>2]|0}function yV(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;d=a+8|0;e=c[d>>2]|0;if((e|0)>0){f=a+16|0;g=b;h=b;i=0;j=e;while(1){e=c[(c[f>>2]|0)+(i<<2)>>2]|0;if((c[e+236>>2]&2|0)==0){k=j}else{l=g3[c[(c[e>>2]|0)+16>>2]&511](e)|0;m=hd[c[(c[g>>2]|0)+16>>2]&127](b,l,1)|0;l=hd[c[(c[e>>2]|0)+20>>2]&127](e,c[m+8>>2]|0,b)|0;g7[c[(c[h>>2]|0)+20>>2]&127](b,m,l,1497645650,e);k=c[d>>2]|0}e=i+1|0;if((e|0)<(k|0)){i=e;j=k}else{break}}}k=a+220|0;if((c[k>>2]|0)<=0){return}j=a+228|0;a=b;i=b;d=0;do{h=c[(c[j>>2]|0)+(d<<2)>>2]|0;g=g3[c[(c[h>>2]|0)+36>>2]&511](h)|0;f=hd[c[(c[a>>2]|0)+16>>2]&127](b,g,1)|0;g=hd[c[(c[h>>2]|0)+40>>2]&127](h,c[f+8>>2]|0,b)|0;g7[c[(c[i>>2]|0)+20>>2]&127](b,f,g,1397641027,h);d=d+1|0;}while((d|0)<(c[k>>2]|0));return}function yW(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=b;g$[c[(c[d>>2]|0)+32>>2]&1023](b);e=hd[c[(c[b>>2]|0)+16>>2]&127](b,104,1)|0;f=c[e+8>>2]|0;K1(f|0,0,104)|0;g[f+88>>2]=+g[a+256>>2];g[f+92>>2]=+g[a+260>>2];g[f+96>>2]=+g[a+264>>2];g[f+100>>2]=+g[a+268>>2];g[f>>2]=+g[a+100>>2];g[f+4>>2]=+g[a+104>>2];g[f+8>>2]=+g[a+108>>2];g[f+12>>2]=+g[a+112>>2];g[f+16>>2]=+g[a+116>>2];g[f+20>>2]=+g[a+124>>2];g[f+24>>2]=+g[a+128>>2];g[f+28>>2]=+g[a+132>>2];g[f+32>>2]=+g[a+136>>2];g[f+36>>2]=+g[a+140>>2];g[f+40>>2]=+g[a+148>>2];g[f+44>>2]=+g[a+152>>2];g[f+48>>2]=+g[a+156>>2];g[f+52>>2]=+g[a+160>>2];g[f+56>>2]=+g[a+176>>2];g[f+60>>2]=+g[a+180>>2];c[f+64>>2]=c[a+120>>2];c[f+68>>2]=c[a+164>>2];c[f+72>>2]=c[a+168>>2];c[f+76>>2]=c[a+172>>2];c[f+80>>2]=c[a+144>>2];g7[c[(c[b>>2]|0)+20>>2]&127](b,e,23352,1145853764,f);yV(a,b);sl(a|0,b);g$[c[(c[d>>2]|0)+36>>2]&1023](b);return}function yX(a){a=a|0;return 2}function yY(a,b){a=a|0;b=b|0;return}function yZ(a,b){a=a|0;b=+b;var d=0,e=0,f=0,g=0;z_(17432);d=a+284|0;if((c[d>>2]|0)>0){e=a+292|0;f=a|0;a=0;do{g=c[(c[e>>2]|0)+(a<<2)>>2]|0;hJ[c[(c[g>>2]|0)+8>>2]&7](g,f,b);a=a+1|0;}while((a|0)<(c[d>>2]|0))}z$();return}function y_(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;f=a+12|0;g=d;while(1){d=c[f>>2]|0;h=c[d+(((g+e|0)/2|0)<<2)>>2]|0;i=h+28|0;j=h+32|0;h=g;k=e;l=d;while(1){d=c[(c[i>>2]|0)+208>>2]|0;m=(d|0)>-1;if(m){n=h;while(1){o=c[l+(n<<2)>>2]|0;p=c[(c[o+28>>2]|0)+208>>2]|0;if((p|0)>-1){q=p}else{q=c[(c[o+32>>2]|0)+208>>2]|0}if((q|0)<(d|0)){n=n+1|0}else{r=n;s=o;break}}}else{n=h;while(1){o=c[l+(n<<2)>>2]|0;p=c[(c[o+28>>2]|0)+208>>2]|0;if((p|0)>-1){t=p}else{t=c[(c[o+32>>2]|0)+208>>2]|0}if((t|0)<(c[(c[j>>2]|0)+208>>2]|0)){n=n+1|0}else{r=n;s=o;break}}}if(m){n=k;while(1){o=c[l+(n<<2)>>2]|0;p=c[(c[o+28>>2]|0)+208>>2]|0;if((p|0)>-1){u=p}else{u=c[(c[o+32>>2]|0)+208>>2]|0}if((d|0)<(u|0)){n=n-1|0}else{v=n;w=o;break}}}else{n=k;while(1){d=c[l+(n<<2)>>2]|0;m=c[(c[d+28>>2]|0)+208>>2]|0;if((m|0)>-1){x=m}else{x=c[(c[d+32>>2]|0)+208>>2]|0}if((c[(c[j>>2]|0)+208>>2]|0)<(x|0)){n=n-1|0}else{v=n;w=d;break}}}if((r|0)>(v|0)){y=r;z=v}else{c[l+(r<<2)>>2]=w;c[(c[f>>2]|0)+(v<<2)>>2]=s;y=r+1|0;z=v-1|0}if((y|0)>(z|0)){break}h=y;k=z;l=c[f>>2]|0}if((z|0)>(g|0)){y_(a,b,g,z)}if((y|0)<(e|0)){g=y}else{break}}return}function y$(a){a=a|0;KU(a);return}function y0(a,d){a=a|0;d=d|0;var e=0,f=0,g=0;e=c[d>>2]|0;f=c[a+80>>2]|0;if((e|0)==(f|0)){g=0;return g|0}if((b[a+10>>1]&b[d+4>>1])<<16>>16==0){g=0;return g|0}if((b[d+6>>1]&b[a+8>>1])<<16>>16==0){g=0;return g|0}d=c[a+92>>2]|0;g=hd[c[(c[d>>2]|0)+28>>2]&127](d,f,e)|0;return g|0}function y1(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,h=0.0,i=0,j=0,k=0,l=0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0;e=b|0;f=c[e>>2]|0;if((f|0)==(c[a+80>>2]|0)){h=1.0;return+h}if((c[f+204>>2]&4|0)!=0){h=1.0;return+h}f=b+8|0;i=b+12|0;j=b+16|0;if((+g[a+28>>2]- +g[a+12>>2])*+g[f>>2]+(+g[a+32>>2]- +g[a+16>>2])*+g[i>>2]+(+g[a+36>>2]- +g[a+20>>2])*+g[j>>2]>=-0.0- +g[a+84>>2]){h=1.0;return+h}k=b+40|0;g[a+4>>2]=+g[k>>2];l=c[e>>2]|0;c[a+76>>2]=l;if(d){d=a+44|0;e=f;c[d>>2]=c[e>>2];c[d+4>>2]=c[e+4>>2];c[d+8>>2]=c[e+8>>2];c[d+12>>2]=c[e+12>>2]}else{m=+g[b+8>>2];n=+g[i>>2];o=+g[j>>2];p=m*+g[l+20>>2]+n*+g[l+24>>2]+o*+g[l+28>>2];q=m*+g[l+36>>2]+n*+g[l+40>>2]+o*+g[l+44>>2];g[a+44>>2]=+g[l+4>>2]*m+ +g[l+8>>2]*n+ +g[l+12>>2]*o;g[a+48>>2]=p;g[a+52>>2]=q;g[a+56>>2]=0.0}l=a+60|0;a=b+24|0;c[l>>2]=c[a>>2];c[l+4>>2]=c[a+4>>2];c[l+8>>2]=c[a+8>>2];c[l+12>>2]=c[a+12>>2];h=+g[k>>2];return+h}function y2(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,h=0,i=0,j=0,k=0,l=0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0;e=b+40|0;g[a+4>>2]=+g[e>>2];f=c[b>>2]|0;c[a+76>>2]=f;if(d){d=a+44|0;h=b+8|0;c[d>>2]=c[h>>2];c[d+4>>2]=c[h+4>>2];c[d+8>>2]=c[h+8>>2];c[d+12>>2]=c[h+12>>2];i=a+60|0;j=b+24|0;k=i;l=j;c[k>>2]=c[l>>2];c[k+4>>2]=c[l+4>>2];c[k+8>>2]=c[l+8>>2];c[k+12>>2]=c[l+12>>2];m=+g[e>>2];return+m}else{n=+g[b+8>>2];o=+g[b+12>>2];p=+g[b+16>>2];q=n*+g[f+20>>2]+o*+g[f+24>>2]+p*+g[f+28>>2];r=n*+g[f+36>>2]+o*+g[f+40>>2]+p*+g[f+44>>2];g[a+44>>2]=+g[f+4>>2]*n+ +g[f+8>>2]*o+ +g[f+12>>2]*p;g[a+48>>2]=q;g[a+52>>2]=r;g[a+56>>2]=0.0;i=a+60|0;j=b+24|0;k=i;l=j;c[k>>2]=c[l>>2];c[k+4>>2]=c[l+4>>2];c[k+8>>2]=c[l+8>>2];c[k+12>>2]=c[l+12>>2];m=+g[e>>2];return+m}return 0.0}function y3(a){a=a|0;return}function y4(a){a=a|0;KU(a);return}function y5(a){a=a|0;y8(a);return}function y6(a){a=a|0;y8(a);KU(a);return}
function r6(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0;h=i;i=i+16|0;j=h|0;c[j>>2]=0;c[j+4>>2]=e;c[j+8>>2]=d;c[j+12>>2]=f;r7(a,b,j,g);i=h;return}function r7(a,d,e,f){a=a|0;d=d|0;e=e|0;f=f|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0.0,L=0,M=0.0,N=0,O=0.0,P=0.0,Q=0.0,R=0.0,S=0.0,T=0,U=0,V=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0.0,ad=0.0,ae=0.0,af=0.0,ag=0.0,ah=0.0,ai=0.0,aj=0.0;h=i;i=i+1280|0;j=h|0;k=h+64|0;l=h+80|0;m=h+112|0;n=h+168|0;o=h+344|0;p=h+704|0;q=h+720|0;r=h+752|0;s=h+768|0;t=h+784|0;u=h+904|0;v=h+920|0;w=h+936|0;x=h+1056|0;y=h+1072|0;z=h+1088|0;A=h+1120|0;B=h+1136|0;C=h+1200|0;D=h+1216|0;ne(m|0);c[m>>2]=35032;c[m+4>>2]=8;g[m+28>>2]=0.0;g[m+44>>2]=0.0;E=m|0;m=c[e+4>>2]|0;F=c[e+12>>2]|0;G=c[m+4>>2]|0;if((G|0)<20){c[n>>2]=30624;H=n+164|0;c[n+168>>2]=0;g[n+172>>2]=0.0;I=f+4|0;g[H>>2]=+g[I>>2];g[o+308>>2]=9999999747378752.0e-20;b[o+332>>1]=0;wa(p,E,m,o);do{if(wb(p,a,d,F,F,n)|0){o=n+132|0;J=o|0;K=+g[J>>2];L=n+136|0;M=+g[L>>2];N=n+140|0;O=+g[N>>2];if(K*K+M*M+O*O<=9999999747378752.0e-20){break}P=+g[H>>2];if(P>=+g[I>>2]){break}Q=K*+g[a>>2]+M*+g[a+4>>2]+O*+g[a+8>>2];R=K*+g[a+16>>2]+M*+g[a+20>>2]+O*+g[a+24>>2];S=K*+g[a+32>>2]+M*+g[a+36>>2]+O*+g[a+40>>2];g[n+144>>2]=0.0;O=1.0/+W(Q*Q+R*R+S*S);g[J>>2]=Q*O;g[L>>2]=R*O;g[N>>2]=S*O;c[q>>2]=c[e+8>>2];c[q+4>>2]=0;N=q+8|0;L=o;c[N>>2]=c[L>>2];c[N+4>>2]=c[L+4>>2];c[N+8>>2]=c[L+8>>2];c[N+12>>2]=c[L+12>>2];g[q+24>>2]=P;+hn[c[(c[f>>2]|0)+12>>2]&31](f,q,1)}}while(0);vi(p|0);nv(E);i=h;return}if((G-21|0)>>>0>=9>>>0){if((G|0)!=31){nv(E);i=h;return}p=m;q=c[m+64>>2]|0;n=c[e+8>>2]|0;c[z>>2]=27224;I=z+4|0;c[I>>2]=n;n=z+8|0;c[n>>2]=p;H=z+12|0;c[H>>2]=F;L=z+16|0;c[L>>2]=a;N=z+20|0;c[N>>2]=d;o=z+24|0;c[o>>2]=f;if((q|0)!=0){r9(B,F,a);J=A;T=B+48|0;c[J>>2]=c[T>>2];c[J+4>>2]=c[T+4>>2];c[J+8>>2]=c[T+8>>2];c[J+12>>2]=c[T+12>>2];r9(D,F,d);T=C;J=D+48|0;c[T>>2]=c[J>>2];c[T+4>>2]=c[J+4>>2];c[T+8>>2]=c[J+8>>2];c[T+12>>2]=c[J+12>>2];sa(c[q>>2]|0,A,C,z|0);nv(E);i=h;return}z=c[m+16>>2]|0;if((z|0)<=0){nv(E);i=h;return}C=k|0;A=k+4|0;q=k+8|0;J=k+12|0;T=l|0;D=l+4|0;B=l+8|0;U=l+12|0;V=l+14|0;X=l+16|0;Y=l+20|0;Z=l+24|0;_=l|0;l=0;$=p;p=F;while(1){aa=c[$+24>>2]|0;ab=c[aa+(l*80|0)+64>>2]|0;j_(j,p,aa+(l*80|0)|0);aa=c[I>>2]|0;c[C>>2]=0;c[A>>2]=ab;c[q>>2]=aa;c[J>>2]=j;aa=c[o>>2]|0;g[D>>2]=1.0;c[B>>2]=0;b[U>>1]=1;b[V>>1]=-1;c[X>>2]=0;c[T>>2]=27336;c[Y>>2]=aa;c[Z>>2]=l;g[D>>2]=+g[aa+4>>2];c[X>>2]=c[aa+16>>2];r7(c[L>>2]|0,c[N>>2]|0,k,_);aa=l+1|0;if((aa|0)>=(z|0)){break}l=aa;$=c[n>>2]|0;p=c[H>>2]|0}nv(E);i=h;return}if((G|0)==21){P=+g[F>>2];O=+g[F+16>>2];S=+g[F+32>>2];R=+g[F+4>>2];Q=+g[F+20>>2];M=+g[F+36>>2];K=+g[F+8>>2];ac=+g[F+24>>2];ad=+g[F+40>>2];ae=-0.0- +g[F+48>>2];af=-0.0- +g[F+52>>2];ag=-0.0- +g[F+56>>2];ah=P*ae+O*af+S*ag;ai=R*ae+Q*af+M*ag;aj=K*ae+ac*af+ad*ag;ag=+g[a+48>>2];af=+g[a+52>>2];ae=+g[a+56>>2];g[r>>2]=ah+(P*ag+O*af+S*ae);g[r+4>>2]=ai+(R*ag+Q*af+M*ae);g[r+8>>2]=aj+(K*ag+ac*af+ad*ae);g[r+12>>2]=0.0;ae=+g[d+48>>2];af=+g[d+52>>2];ag=+g[d+56>>2];g[s>>2]=ah+(P*ae+O*af+S*ag);g[s+4>>2]=ai+(R*ae+Q*af+M*ag);g[s+8>>2]=aj+(K*ae+ac*af+ad*ag);g[s+12>>2]=0.0;G=c[e+8>>2]|0;v2(t|0,r,s,c[f+16>>2]|0);c[t>>2]=27304;c[t+44>>2]=f;c[t+48>>2]=G;c[t+52>>2]=m;G=t+56|0;H=F;c[G>>2]=c[H>>2];c[G+4>>2]=c[H+4>>2];c[G+8>>2]=c[H+8>>2];c[G+12>>2]=c[H+12>>2];H=t+72|0;G=F+16|0;c[H>>2]=c[G>>2];c[H+4>>2]=c[G+4>>2];c[H+8>>2]=c[G+8>>2];c[H+12>>2]=c[G+12>>2];G=t+88|0;H=F+32|0;c[G>>2]=c[H>>2];c[G+4>>2]=c[H+4>>2];c[G+8>>2]=c[H+8>>2];c[G+12>>2]=c[H+12>>2];H=t+104|0;G=F+48|0;c[H>>2]=c[G>>2];c[H+4>>2]=c[G+4>>2];c[H+8>>2]=c[G+8>>2];c[H+12>>2]=c[G+12>>2];g[t+40>>2]=+g[f+4>>2];G=t|0;mr(m,G,r,s);ov(G);nv(E);i=h;return}G=m;ag=+g[F>>2];ad=+g[F+16>>2];af=+g[F+32>>2];ac=+g[F+4>>2];ae=+g[F+20>>2];K=+g[F+36>>2];aj=+g[F+8>>2];M=+g[F+24>>2];Q=+g[F+40>>2];R=-0.0- +g[F+48>>2];ai=-0.0- +g[F+52>>2];S=-0.0- +g[F+56>>2];O=ag*R+ad*ai+af*S;P=ac*R+ae*ai+K*S;ah=aj*R+M*ai+Q*S;S=+g[a+48>>2];ai=+g[a+52>>2];R=+g[a+56>>2];g[u>>2]=O+(ag*S+ad*ai+af*R);g[u+4>>2]=P+(ac*S+ae*ai+K*R);g[u+8>>2]=ah+(aj*S+M*ai+Q*R);g[u+12>>2]=0.0;R=+g[d+48>>2];ai=+g[d+52>>2];S=+g[d+56>>2];d=v|0;g[d>>2]=O+(ag*R+ad*ai+af*S);a=v+4|0;g[a>>2]=P+(ac*R+ae*ai+K*S);s=v+8|0;g[s>>2]=ah+(aj*R+M*ai+Q*S);r=v+12|0;g[r>>2]=0.0;t=c[e+8>>2]|0;v2(w|0,u,v,c[f+16>>2]|0);c[w>>2]=27272;c[w+44>>2]=f;c[w+48>>2]=t;c[w+52>>2]=G;t=w+56|0;v=F;c[t>>2]=c[v>>2];c[t+4>>2]=c[v+4>>2];c[t+8>>2]=c[v+8>>2];c[t+12>>2]=c[v+12>>2];v=w+72|0;t=F+16|0;c[v>>2]=c[t>>2];c[v+4>>2]=c[t+4>>2];c[v+8>>2]=c[t+8>>2];c[v+12>>2]=c[t+12>>2];t=w+88|0;v=F+32|0;c[t>>2]=c[v>>2];c[t+4>>2]=c[v+4>>2];c[t+8>>2]=c[v+8>>2];c[t+12>>2]=c[v+12>>2];v=w+104|0;t=F+48|0;c[v>>2]=c[t>>2];c[v+4>>2]=c[t+4>>2];c[v+8>>2]=c[t+8>>2];c[v+12>>2]=c[t+12>>2];g[w+40>>2]=+g[f+4>>2];f=x;t=u;c[f>>2]=c[t>>2];c[f+4>>2]=c[t+4>>2];c[f+8>>2]=c[t+8>>2];c[f+12>>2]=c[t+12>>2];f=x|0;S=+g[d>>2];if(S<+g[f>>2]){g[f>>2]=S}f=x+4|0;Q=+g[a>>2];if(Q<+g[f>>2]){g[f>>2]=Q}f=x+8|0;ai=+g[s>>2];if(ai<+g[f>>2]){g[f>>2]=ai}f=x+12|0;M=+g[r>>2];if(M<+g[f>>2]){g[f>>2]=M}f=y;c[f>>2]=c[t>>2];c[f+4>>2]=c[t+4>>2];c[f+8>>2]=c[t+8>>2];c[f+12>>2]=c[t+12>>2];t=y|0;if(+g[t>>2]<S){g[t>>2]=S}t=y+4|0;if(+g[t>>2]<Q){g[t>>2]=Q}t=y+8|0;if(+g[t>>2]<ai){g[t>>2]=ai}t=y+12|0;if(+g[t>>2]<M){g[t>>2]=M}t=w|0;hM[c[(c[m>>2]|0)+64>>2]&255](G,t,x,y);ov(t);nv(E);i=h;return}function r8(a){a=a|0;return}function r9(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0,e=0.0,f=0.0,h=0.0,i=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0;d=+g[c+48>>2]- +g[b+48>>2];e=+g[c+52>>2]- +g[b+52>>2];f=+g[c+56>>2]- +g[b+56>>2];h=+g[b>>2];i=+g[c>>2];j=+g[b+16>>2];k=+g[c+16>>2];l=+g[b+32>>2];m=+g[c+32>>2];n=+g[c+4>>2];o=+g[c+20>>2];p=+g[c+36>>2];q=+g[c+8>>2];r=+g[c+24>>2];s=+g[c+40>>2];t=+g[b+4>>2];u=+g[b+20>>2];v=+g[b+36>>2];w=+g[b+8>>2];x=+g[b+24>>2];y=+g[b+40>>2];g[a>>2]=h*i+j*k+l*m;g[a+4>>2]=h*n+j*o+l*p;g[a+8>>2]=h*q+j*r+l*s;g[a+12>>2]=0.0;g[a+16>>2]=i*t+k*u+m*v;g[a+20>>2]=n*t+o*u+p*v;g[a+24>>2]=q*t+r*u+s*v;g[a+28>>2]=0.0;g[a+32>>2]=i*w+k*x+m*y;g[a+36>>2]=n*w+o*x+p*y;g[a+40>>2]=q*w+r*x+s*y;g[a+44>>2]=0.0;g[a+48>>2]=d*h+e*j+f*l;g[a+52>>2]=d*t+e*u+f*v;g[a+56>>2]=d*w+e*x+f*y;g[a+60>>2]=0.0;return}function sa(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,h=0,j=0,k=0.0,l=0,m=0.0,n=0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0.0,P=0.0,Q=0.0,R=0,S=0,T=0,U=0,V=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0;f=i;i=i+32|0;h=f|0;if((a|0)==0){i=f;return}j=b|0;k=+g[d>>2]- +g[j>>2];l=b+4|0;m=+g[d+4>>2]- +g[l>>2];n=b+8|0;o=+g[d+8>>2]- +g[n>>2];p=1.0/+W(k*k+m*m+o*o);q=k*p;r=m*p;s=o*p;if(q==0.0){t=999999984306749400.0}else{t=1.0/q}if(r==0.0){u=999999984306749400.0}else{u=1.0/r}if(s==0.0){v=999999984306749400.0}else{v=1.0/s}d=t<0.0|0;b=u<0.0|0;w=v<0.0|0;p=q*k+r*m+s*o;x=zv(512,16)|0;y=0;do{z=x+(y<<2)|0;if((z|0)!=0){c[z>>2]=0}y=y+1|0;}while((y|0)<128);c[x>>2]=a;a=h;y=h+16|0;z=h+(d<<4)|0;A=h+((d^1)<<4)|0;d=h+(b<<4)+4|0;B=h+((b^1)<<4)+4|0;b=h+(w<<4)+8|0;C=h+((w^1)<<4)+8|0;w=e;h=1;D=126;E=128;F=128;G=x;while(1){x=h-1|0;H=c[G+(x<<2)>>2]|0;I=H;c[a>>2]=c[I>>2];c[a+4>>2]=c[I+4>>2];c[a+8>>2]=c[I+8>>2];c[a+12>>2]=c[I+12>>2];I=H+16|0;c[y>>2]=c[I>>2];c[y+4>>2]=c[I+4>>2];c[y+8>>2]=c[I+8>>2];c[y+12>>2]=c[I+12>>2];o=+g[j>>2];s=t*(+g[z>>2]-o);m=t*(+g[A>>2]-o);o=+g[l>>2];r=u*(+g[d>>2]-o);k=u*(+g[B>>2]-o);do{if(s>k|r>m){J=x;K=D;L=E;M=F;N=G}else{o=r>s?r:s;q=k<m?k:m;O=+g[n>>2];P=v*(+g[b>>2]-O);Q=v*(+g[C>>2]-O);if(o>Q|P>q){J=x;K=D;L=E;M=F;N=G;break}if((P>o?P:o)>=p){J=x;K=D;L=E;M=F;N=G;break}if((Q<q?Q:q)<=0.0){J=x;K=D;L=E;M=F;N=G;break}I=H+40|0;if((c[I>>2]|0)==0){g0[c[(c[w>>2]|0)+12>>2]&511](e,H);J=x;K=D;L=E;M=F;N=G;break}if((x|0)>(D|0)){R=E<<1;if((E|0)<(R|0)){do{if((F|0)<(R|0)){if((R|0)==0){S=0}else{S=zv(E<<3,16)|0}if((E|0)>0){T=0;do{U=S+(T<<2)|0;if((U|0)!=0){c[U>>2]=c[G+(T<<2)>>2]}T=T+1|0;}while((T|0)<(E|0))}if((G|0)==0){V=R;X=S;break}zw(G);V=R;X=S}else{V=F;X=G}}while(0);T=E;while(1){U=X+(T<<2)|0;if((U|0)!=0){c[U>>2]=0}U=T+1|0;if((U|0)<(R|0)){T=U}else{Y=V;Z=X;break}}}else{Y=F;Z=G}_=R-2|0;$=R;aa=Y;ab=Z}else{_=D;$=E;aa=F;ab=G}c[ab+(x<<2)>>2]=c[H+36>>2];c[ab+(h<<2)>>2]=c[I>>2];J=h+1|0;K=_;L=$;M=aa;N=ab}}while(0);if((J|0)==0){break}else{h=J;D=K;E=L;F=M;G=N}}if((N|0)==0){i=f;return}zw(N);i=f;return}function sb(a,d,e,f,h,j){a=a|0;d=d|0;e=e|0;f=f|0;h=h|0;j=+j;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0.0,P=0,Q=0.0,R=0,S=0.0,T=0.0,U=0.0,V=0.0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0,ai=0,aj=0,ak=0,al=0,am=0,an=0,ao=0,ap=0,aq=0,ar=0,as=0,at=0,au=0,av=0,aw=0,ax=0,ay=0,az=0,aA=0,aB=0,aC=0,aD=0.0,aE=0.0,aF=0.0,aG=0.0,aH=0.0,aI=0.0,aJ=0,aK=0.0,aL=0.0,aM=0.0,aN=0.0,aO=0.0,aP=0.0,aQ=0.0,aR=0.0,aS=0.0,aT=0.0,aU=0.0,aV=0.0,aW=0.0,aX=0.0,aY=0.0,aZ=0.0,a_=0.0,a$=0.0;k=i;i=i+1672|0;l=k|0;m=k+176|0;n=k+536|0;o=k+544|0;p=k+568|0;q=k+616|0;r=k+632|0;s=k+648|0;t=k+712|0;u=k+936|0;v=k+952|0;w=k+968|0;x=k+1144|0;y=k+1168|0;z=k+1216|0;A=k+1280|0;B=k+1504|0;C=k+1520|0;D=k+1536|0;E=k+1552|0;F=k+1568|0;G=k+1632|0;H=k+1656|0;I=c[f+4>>2]|0;J=c[f+12>>2]|0;K=c[I+4>>2]|0;if((K|0)<20){c[l>>2]=30624;L=l+164|0;c[l+168>>2]=0;g[l+172>>2]=j;M=h+4|0;g[L>>2]=+g[M>>2];g[m+308>>2]=9999999747378752.0e-20;b[m+332>>1]=0;c[n>>2]=31160;vb(o,a,I,m,n|0);n=o|0;do{if(g1[c[(c[o>>2]|0)+8>>2]&7](n,d,e,J,J,l)|0){m=l+132|0;N=m|0;O=+g[N>>2];P=l+136|0;Q=+g[P>>2];R=l+140|0;S=+g[R>>2];T=O*O+Q*Q+S*S;if(T<=9999999747378752.0e-20){break}U=+g[L>>2];if(U>=+g[M>>2]){break}V=1.0/+W(T);g[N>>2]=O*V;g[P>>2]=Q*V;g[R>>2]=S*V;c[p>>2]=c[f+8>>2];c[p+4>>2]=0;R=p+8|0;P=m;c[R>>2]=c[P>>2];c[R+4>>2]=c[P+4>>2];c[R+8>>2]=c[P+8>>2];c[R+12>>2]=c[P+12>>2];P=p+24|0;R=l+148|0;c[P>>2]=c[R>>2];c[P+4>>2]=c[R+4>>2];c[P+8>>2]=c[R+8>>2];c[P+12>>2]=c[R+12>>2];g[p+40>>2]=U;+hn[c[(c[h>>2]|0)+12>>2]&31](h,p,1)}}while(0);vi(n);i=k;return}if((K-21|0)>>>0>=9>>>0){if((K|0)!=31){i=k;return}z_(13544);n=I+16|0;if((c[n>>2]|0)>0){p=I+24|0;l=J|0;M=J+4|0;L=J+8|0;o=J+16|0;R=J+20|0;P=J+24|0;m=J+32|0;N=J+36|0;X=J+40|0;Y=J+48|0;Z=J+52|0;_=J+56|0;$=F|0;aa=F+4|0;ab=F+8|0;ac=F+12|0;ad=F+16|0;ae=F+20|0;af=F+24|0;ag=F+28|0;ah=F+32|0;ai=F+36|0;aj=F+40|0;ak=F+44|0;al=F+48|0;am=F+52|0;an=F+56|0;ao=F+60|0;ap=G|0;aq=G+4|0;ar=G+8|0;as=G+10|0;at=G+12|0;au=G+16|0;av=h+4|0;aw=f+8|0;ax=H|0;ay=H+4|0;az=H+8|0;aA=H+12|0;aB=G|0;G=0;do{aC=c[p>>2]|0;U=+g[aC+(G*80|0)>>2];V=+g[aC+(G*80|0)+4>>2];S=+g[aC+(G*80|0)+8>>2];Q=+g[aC+(G*80|0)+16>>2];O=+g[aC+(G*80|0)+20>>2];T=+g[aC+(G*80|0)+24>>2];aD=+g[aC+(G*80|0)+32>>2];aE=+g[aC+(G*80|0)+36>>2];aF=+g[aC+(G*80|0)+40>>2];aG=+g[aC+(G*80|0)+48>>2];aH=+g[aC+(G*80|0)+52>>2];aI=+g[aC+(G*80|0)+56>>2];aJ=c[aC+(G*80|0)+64>>2]|0;aK=+g[l>>2];aL=+g[M>>2];aM=+g[L>>2];aN=+g[o>>2];aO=+g[R>>2];aP=+g[P>>2];aQ=+g[m>>2];aR=+g[N>>2];aS=+g[X>>2];aT=aG*aK+aH*aL+aI*aM+ +g[Y>>2];aU=aG*aN+aH*aO+aI*aP+ +g[Z>>2];aV=aG*aQ+aH*aR+aI*aS+ +g[_>>2];g[$>>2]=U*aK+Q*aL+aD*aM;g[aa>>2]=V*aK+O*aL+aE*aM;g[ab>>2]=S*aK+T*aL+aF*aM;g[ac>>2]=0.0;g[ad>>2]=U*aN+Q*aO+aD*aP;g[ae>>2]=V*aN+O*aO+aE*aP;g[af>>2]=S*aN+T*aO+aF*aP;g[ag>>2]=0.0;g[ah>>2]=U*aQ+Q*aR+aD*aS;g[ai>>2]=V*aQ+O*aR+aE*aS;g[aj>>2]=S*aQ+T*aR+aF*aS;g[ak>>2]=0.0;g[al>>2]=aT;g[am>>2]=aU;g[an>>2]=aV;g[ao>>2]=0.0;b[ar>>1]=1;b[as>>1]=-1;c[ap>>2]=27192;c[at>>2]=h;c[au>>2]=G;g[aq>>2]=+g[av>>2];aC=c[aw>>2]|0;c[ax>>2]=f;c[ay>>2]=aJ;c[az>>2]=aC;c[aA>>2]=F;sb(a,d,e,H,aB,j);G=G+1|0;}while((G|0)<(c[n>>2]|0))}z$();i=k;return}if((K|0)==21){aV=+g[J>>2];aU=+g[J+16>>2];aT=+g[J+32>>2];aS=+g[J+4>>2];aF=+g[J+20>>2];aR=+g[J+36>>2];T=+g[J+8>>2];aQ=+g[J+24>>2];S=+g[J+40>>2];aE=-0.0- +g[J+48>>2];O=-0.0- +g[J+52>>2];V=-0.0- +g[J+56>>2];aD=aV*aE+aU*O+aT*V;Q=aS*aE+aF*O+aR*V;U=T*aE+aQ*O+S*V;V=+g[d+48>>2];O=+g[d+52>>2];aE=+g[d+56>>2];g[q>>2]=aD+(aV*V+aU*O+aT*aE);g[q+4>>2]=Q+(aS*V+aF*O+aR*aE);g[q+8>>2]=U+(T*V+aQ*O+S*aE);g[q+12>>2]=0.0;aE=+g[e+48>>2];O=+g[e+52>>2];V=+g[e+56>>2];g[r>>2]=aD+(aV*aE+aU*O+aT*V);g[r+4>>2]=Q+(aS*aE+aF*O+aR*V);g[r+8>>2]=U+(T*aE+aQ*O+S*V);g[r+12>>2]=0.0;V=+g[e>>2];O=+g[e+16>>2];aE=+g[e+32>>2];U=+g[e+4>>2];Q=+g[e+20>>2];aD=+g[e+36>>2];aP=+g[e+8>>2];aO=+g[e+24>>2];aN=+g[e+40>>2];g[s>>2]=aV*V+aU*O+aT*aE;g[s+4>>2]=aV*U+aU*Q+aT*aD;g[s+8>>2]=aV*aP+aU*aO+aT*aN;g[s+12>>2]=0.0;g[s+16>>2]=aS*V+aF*O+aR*aE;g[s+20>>2]=aS*U+aF*Q+aR*aD;g[s+24>>2]=aS*aP+aF*aO+aR*aN;g[s+28>>2]=0.0;g[s+32>>2]=T*V+aQ*O+S*aE;g[s+36>>2]=T*U+aQ*Q+S*aD;g[s+40>>2]=T*aP+aQ*aO+S*aN;K1(s+44|0,0,20)|0;n=c[f+8>>2]|0;v4(t|0,a,d,e,J,+g6[c[(c[I>>2]|0)+48>>2]&15](I));c[t>>2]=27160;c[t+212>>2]=h;c[t+216>>2]=n;c[t+220>>2]=I;g[t+200>>2]=+g[h+4>>2];g[t+208>>2]=j;hM[c[(c[a>>2]|0)+8>>2]&255](a,s,u,v);s=t|0;ms(I,s,q,r,u,v);ov(s);i=k;return}else if((K|0)==28){c[w>>2]=30624;K=w+164|0;c[w+168>>2]=0;g[w+172>>2]=j;s=h+4|0;g[K>>2]=+g[s>>2];vc(x,a,I);v=x|0;do{if(g1[c[(c[x>>2]|0)+8>>2]&7](v,d,e,J,J,w)|0){u=w+132|0;r=u|0;aN=+g[r>>2];q=w+136|0;S=+g[q>>2];t=w+140|0;aO=+g[t>>2];aQ=aN*aN+S*S+aO*aO;if(aQ<=9999999747378752.0e-20){break}aP=+g[K>>2];if(aP>=+g[s>>2]){break}T=1.0/+W(aQ);g[r>>2]=aN*T;g[q>>2]=S*T;g[t>>2]=aO*T;c[y>>2]=c[f+8>>2];c[y+4>>2]=0;t=y+8|0;q=u;c[t>>2]=c[q>>2];c[t+4>>2]=c[q+4>>2];c[t+8>>2]=c[q+8>>2];c[t+12>>2]=c[q+12>>2];q=y+24|0;t=w+148|0;c[q>>2]=c[t>>2];c[q+4>>2]=c[t+4>>2];c[q+8>>2]=c[t+8>>2];c[q+12>>2]=c[t+12>>2];g[y+40>>2]=aP;+hn[c[(c[h>>2]|0)+12>>2]&31](h,y,1)}}while(0);vi(v);i=k;return}else{v=I;aP=+g[J>>2];T=+g[J+16>>2];aO=+g[J+32>>2];S=+g[J+4>>2];aN=+g[J+20>>2];aQ=+g[J+36>>2];aD=+g[J+8>>2];Q=+g[J+24>>2];U=+g[J+40>>2];aE=-0.0- +g[J+48>>2];O=-0.0- +g[J+52>>2];V=-0.0- +g[J+56>>2];aR=aP*aE+T*O+aO*V;aF=S*aE+aN*O+aQ*V;aS=aD*aE+Q*O+U*V;V=+g[d+48>>2];O=+g[d+52>>2];aE=+g[d+56>>2];aT=aR+(aP*V+T*O+aO*aE);aU=aF+(S*V+aN*O+aQ*aE);aV=aS+(aD*V+Q*O+U*aE);aE=+g[e+48>>2];O=+g[e+52>>2];V=+g[e+56>>2];aM=aR+(aP*aE+T*O+aO*V);aR=aF+(S*aE+aN*O+aQ*V);aF=aS+(aD*aE+Q*O+U*V);V=+g[e>>2];O=+g[e+16>>2];aE=+g[e+32>>2];aS=+g[e+4>>2];aL=+g[e+20>>2];aK=+g[e+36>>2];aI=+g[e+8>>2];aH=+g[e+24>>2];aG=+g[e+40>>2];g[z>>2]=aP*V+T*O+aO*aE;g[z+4>>2]=aP*aS+T*aL+aO*aK;g[z+8>>2]=aP*aI+T*aH+aO*aG;g[z+12>>2]=0.0;g[z+16>>2]=S*V+aN*O+aQ*aE;g[z+20>>2]=S*aS+aN*aL+aQ*aK;g[z+24>>2]=S*aI+aN*aH+aQ*aG;g[z+28>>2]=0.0;g[z+32>>2]=aD*V+Q*O+U*aE;g[z+36>>2]=aD*aS+Q*aL+U*aK;g[z+40>>2]=aD*aI+Q*aH+U*aG;K1(z+44|0,0,20)|0;y=c[f+8>>2]|0;v4(A|0,a,d,e,J,+g6[c[(c[I>>2]|0)+48>>2]&15](v));c[A>>2]=27128;c[A+212>>2]=h;c[A+216>>2]=y;c[A+220>>2]=v;g[A+200>>2]=+g[h+4>>2];g[A+208>>2]=j;hM[c[(c[a>>2]|0)+8>>2]&255](a,z,B,C);z=D|0;g[z>>2]=aT;a=D+4|0;g[a>>2]=aU;h=D+8|0;g[h>>2]=aV;g[D+12>>2]=0.0;if(aM<aT){g[z>>2]=aM;aW=aM}else{aW=aT}if(aR<aU){g[a>>2]=aR;aX=aR}else{aX=aU}if(aF<aV){g[h>>2]=aF;aY=aF}else{aY=aV}y=E|0;g[y>>2]=aT;J=E+4|0;g[J>>2]=aU;e=E+8|0;g[e>>2]=aV;g[E+12>>2]=0.0;if(aT<aM){g[y>>2]=aM;aZ=aM}else{aZ=aT}if(aU<aR){g[J>>2]=aR;a_=aR}else{a_=aU}if(aV<aF){g[e>>2]=aF;a$=aF}else{a$=aV}g[z>>2]=+g[B>>2]+aW;g[a>>2]=+g[B+4>>2]+aX;g[h>>2]=+g[B+8>>2]+aY;g[y>>2]=+g[C>>2]+aZ;g[J>>2]=+g[C+4>>2]+a_;g[e>>2]=+g[C+8>>2]+a$;C=A|0;hM[c[(c[I>>2]|0)+64>>2]&255](v,C,D,E);ov(C);i=k;return}}function sc(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0;f=i;i=i+256|0;g=f|0;h=f+224|0;j=f+240|0;sF(g,b,d,a,e);e=c[a+76>>2]|0;a=c[(c[e>>2]|0)+24>>2]|0;K1(h|0,0,16)|0;K1(j|0,0,16)|0;hk[a&63](e,b,d,g|0,h,j);i=f;return}function sd(a){a=a|0;return}function se(a,b,d,e,f,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;h=+h;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0.0,G=0.0,H=0.0,I=0.0,J=0.0,K=0.0,L=0.0,M=0.0,N=0.0,O=0.0,P=0.0,Q=0.0,R=0.0,S=0.0;j=i;i=i+496|0;k=j|0;l=j+16|0;m=j+24|0;n=j+88|0;o=j+152|0;p=j+168|0;q=j+184|0;r=j+200|0;s=j+216|0;t=j+280|0;u=j+296|0;z_(12904);v=m;w=d;c[v>>2]=c[w>>2];c[v+4>>2]=c[w+4>>2];c[v+8>>2]=c[w+8>>2];c[v+12>>2]=c[w+12>>2];v=m+16|0;x=d+16|0;c[v>>2]=c[x>>2];c[v+4>>2]=c[x+4>>2];c[v+8>>2]=c[x+8>>2];c[v+12>>2]=c[x+12>>2];v=m+32|0;y=d+32|0;c[v>>2]=c[y>>2];c[v+4>>2]=c[y+4>>2];c[v+8>>2]=c[y+8>>2];c[v+12>>2]=c[y+12>>2];v=m+48|0;z=v;A=d+48|0;c[z>>2]=c[A>>2];c[z+4>>2]=c[A+4>>2];c[z+8>>2]=c[A+8>>2];c[z+12>>2]=c[A+12>>2];z=n;d=e;c[z>>2]=c[d>>2];c[z+4>>2]=c[d+4>>2];c[z+8>>2]=c[d+8>>2];c[z+12>>2]=c[d+12>>2];z=n+16|0;B=e+16|0;c[z>>2]=c[B>>2];c[z+4>>2]=c[B+4>>2];c[z+8>>2]=c[B+8>>2];c[z+12>>2]=c[B+12>>2];z=n+32|0;C=e+32|0;c[z>>2]=c[C>>2];c[z+4>>2]=c[C+4>>2];c[z+8>>2]=c[C+8>>2];c[z+12>>2]=c[C+12>>2];z=n+48|0;D=z;E=e+48|0;c[D>>2]=c[E>>2];c[D+4>>2]=c[E+4>>2];c[D+8>>2]=c[E+8>>2];c[D+12>>2]=c[E+12>>2];sE(m,n,k,l);F=+g[l>>2];G=F*+g[k+4>>2];H=F*+g[k+8>>2];g[q>>2]=+g[k>>2]*F;g[q+4>>2]=G;g[q+8>>2]=H;g[q+12>>2]=0.0;K1(r|0,0,16)|0;k=s+4|0;K1(k|0,0,12)|0;l=s+24|0;K1(l|0,0,12)|0;n=s+44|0;K1(n|0,0,20)|0;i_(m|0,t);H=+g[t>>2];G=+g[t+4>>2];F=+g[t+8>>2];I=+g[t+12>>2];J=2.0/(H*H+G*G+F*F+I*I);K=H*J;L=G*J;M=F*J;J=I*K;N=I*L;O=I*M;I=H*K;K=H*L;P=H*M;H=G*L;L=G*M;G=F*M;g[s>>2]=1.0-(H+G);g[k>>2]=K-O;g[s+8>>2]=P+N;g[s+12>>2]=0.0;g[s+16>>2]=K+O;g[s+20>>2]=1.0-(I+G);g[l>>2]=L-J;g[s+28>>2]=0.0;g[s+32>>2]=P-N;g[s+36>>2]=L+J;g[s+40>>2]=1.0-(I+H);g[n>>2]=0.0;m6(b|0,s,r,q,1.0,o,p);c[u>>2]=32680;q=u+36|0;c[q>>2]=c[w>>2];c[q+4>>2]=c[w+4>>2];c[q+8>>2]=c[w+8>>2];c[q+12>>2]=c[w+12>>2];w=u+52|0;c[w>>2]=c[x>>2];c[w+4>>2]=c[x+4>>2];c[w+8>>2]=c[x+8>>2];c[w+12>>2]=c[x+12>>2];x=u+68|0;c[x>>2]=c[y>>2];c[x+4>>2]=c[y+4>>2];c[x+8>>2]=c[y+8>>2];c[x+12>>2]=c[y+12>>2];y=u+84|0;x=y;c[x>>2]=c[A>>2];c[x+4>>2]=c[A+4>>2];c[x+8>>2]=c[A+8>>2];c[x+12>>2]=c[A+12>>2];A=u+100|0;c[A>>2]=c[d>>2];c[A+4>>2]=c[d+4>>2];c[A+8>>2]=c[d+8>>2];c[A+12>>2]=c[d+12>>2];d=u+116|0;c[d>>2]=c[B>>2];c[d+4>>2]=c[B+4>>2];c[d+8>>2]=c[B+8>>2];c[d+12>>2]=c[B+12>>2];B=u+132|0;c[B>>2]=c[C>>2];c[B+4>>2]=c[C+4>>2];c[B+8>>2]=c[C+8>>2];c[B+12>>2]=c[C+12>>2];C=u+148|0;B=C;c[B>>2]=c[E>>2];c[B+4>>2]=c[E+4>>2];c[B+8>>2]=c[E+8>>2];c[B+12>>2]=c[E+12>>2];c[u+180>>2]=a;c[u+184>>2]=f;g[u+188>>2]=h;c[u+192>>2]=b;h=+g[C>>2]- +g[y>>2];H=+g[u+152>>2]- +g[u+88>>2];I=+g[u+156>>2]- +g[u+92>>2];J=1.0/+W(h*h+H*H+I*I);L=h*J;N=H*J;P=I*J;if(L==0.0){Q=999999984306749400.0}else{Q=1.0/L}g[u+4>>2]=Q;if(N==0.0){R=999999984306749400.0}else{R=1.0/N}g[u+8>>2]=R;if(P==0.0){S=999999984306749400.0}else{S=1.0/P}g[u+12>>2]=S;c[u+20>>2]=Q<0.0;c[u+24>>2]=R<0.0;c[u+28>>2]=S<0.0;g[u+32>>2]=I*P+(h*L+H*N);y=c[a+76>>2]|0;hk[c[(c[y>>2]|0)+24>>2]&63](y,v,z,u|0,o,p);z$();i=j;return}function sf(a){a=a|0;return}function sg(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0;f=i;i=i+72|0;g=f|0;h=f+16|0;j=f+32|0;k=c[b+192>>2]|0;c[g>>2]=0;c[g+4>>2]=k;c[g+8>>2]=b;c[g+12>>2]=b+4;b=c[d+192>>2]|0;c[h>>2]=0;c[h+4>>2]=b;c[h+8>>2]=d;c[h+12>>2]=d+4;d=a+24|0;b=c[d>>2]|0;k=hD[c[(c[b>>2]|0)+8>>2]&63](b,g,h,0)|0;if((k|0)==0){i=f;return}b=j|0;uD(b,g,h);c[j>>2]=32320;c[j+32>>2]=e;g7[c[(c[k>>2]|0)+8>>2]&127](k,g,h,a+28|0,b);g$[c[c[k>>2]>>2]&1023](k);b=c[d>>2]|0;g0[c[(c[b>>2]|0)+60>>2]&511](b,k);i=f;return}function sh(a){a=a|0;return}function si(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0,ai=0,aj=0.0,ak=0.0,al=0.0,am=0.0,an=0.0,ao=0.0,ap=0.0,aq=0.0,ar=0.0,as=0.0,at=0.0,au=0.0,av=0,aw=0.0,ax=0.0,ay=0.0,az=0.0,aA=0.0,aB=0.0,aC=0.0,aD=0.0,aE=0.0,aF=0.0,aG=0.0,aH=0.0,aI=0.0,aJ=0,aK=0,aL=0,aM=0,aN=0,aO=0,aP=0,aQ=0,aR=0.0,aS=0.0,aT=0.0,aU=0;f=i;i=i+576|0;h=f|0;j=f+64|0;k=f+80|0;l=f+96|0;m=f+160|0;n=f+176|0;o=f+192|0;p=f+208|0;q=f+224|0;r=f+240|0;s=f+256|0;t=f+272|0;u=f+288|0;v=f+304|0;w=f+320|0;x=f+336|0;y=f+352|0;z=f+448|0;A=f+464|0;B=f+480|0;C=a;D=g3[c[(c[C>>2]|0)+20>>2]&511](a)|0;hJ[c[(c[D>>2]|0)+56>>2]&7](D,b,1.0);D=d+4|0;E=c[D>>2]|0;switch(E|0){case 31:{F=c[d+16>>2]|0;if((F|0)<=0){i=f;return}G=d+24|0;H=a;I=b|0;J=b+4|0;K=b+8|0;L=b+16|0;M=b+20|0;N=b+24|0;O=b+32|0;P=b+36|0;Q=b+40|0;R=b+48|0;S=b+52|0;T=b+56|0;U=h|0;V=h+4|0;W=h+8|0;X=h+12|0;Y=h+16|0;Z=h+20|0;_=h+24|0;$=h+28|0;aa=h+32|0;ab=h+36|0;ac=h+40|0;ad=h+44|0;ae=h+48|0;af=h+52|0;ag=h+56|0;ah=h+60|0;ai=F;do{ai=ai-1|0;F=c[G>>2]|0;aj=+g[F+(ai*80|0)>>2];ak=+g[F+(ai*80|0)+4>>2];al=+g[F+(ai*80|0)+8>>2];am=+g[F+(ai*80|0)+16>>2];an=+g[F+(ai*80|0)+20>>2];ao=+g[F+(ai*80|0)+24>>2];ap=+g[F+(ai*80|0)+32>>2];aq=+g[F+(ai*80|0)+36>>2];ar=+g[F+(ai*80|0)+40>>2];as=+g[F+(ai*80|0)+48>>2];at=+g[F+(ai*80|0)+52>>2];au=+g[F+(ai*80|0)+56>>2];av=c[F+(ai*80|0)+64>>2]|0;F=c[(c[H>>2]|0)+28>>2]|0;aw=+g[I>>2];ax=+g[J>>2];ay=+g[K>>2];az=+g[L>>2];aA=+g[M>>2];aB=+g[N>>2];aC=+g[O>>2];aD=+g[P>>2];aE=+g[Q>>2];aF=as*aw+at*ax+au*ay+ +g[R>>2];aG=as*az+at*aA+au*aB+ +g[S>>2];aH=as*aC+at*aD+au*aE+ +g[T>>2];g[U>>2]=aj*aw+am*ax+ap*ay;g[V>>2]=ak*aw+an*ax+aq*ay;g[W>>2]=al*aw+ao*ax+ar*ay;g[X>>2]=0.0;g[Y>>2]=aj*az+am*aA+ap*aB;g[Z>>2]=ak*az+an*aA+aq*aB;g[_>>2]=al*az+ao*aA+ar*aB;g[$>>2]=0.0;g[aa>>2]=aj*aC+am*aD+ap*aE;g[ab>>2]=ak*aC+an*aD+aq*aE;g[ac>>2]=al*aC+ao*aD+ar*aE;g[ad>>2]=0.0;g[ae>>2]=aF;g[af>>2]=aG;g[ag>>2]=aH;g[ah>>2]=0.0;hM[F&255](a,h,av,e);}while((ai|0)>0);i=f;return};case 9:{ai=c[d+92>>2]|0;if((ai|0)<=0){i=f;return}h=d+100|0;ah=d+120|0;ag=b|0;af=b+4|0;ae=b+8|0;ad=b+16|0;ac=b+20|0;ab=b+24|0;aa=b+32|0;$=b+36|0;_=b+40|0;Z=b+48|0;Y=b+52|0;X=b+56|0;W=l|0;V=l+4|0;U=l+8|0;T=l+12|0;S=l+16|0;R=l+20|0;Q=l+24|0;P=l+28|0;O=l+32|0;N=l+36|0;M=l+40|0;L=l+44|0;K=l+48|0;J=l+52|0;I=l+56|0;H=l+60|0;G=ai;do{G=G-1|0;ai=c[h>>2]|0;aH=+g[ai+(G<<4)>>2];aG=+g[ai+(G<<4)+4>>2];aF=+g[ai+(G<<4)+8>>2];ai=g3[c[(c[C>>2]|0)+20>>2]&511](a)|0;av=c[(c[ai>>2]|0)+16>>2]|0;aE=+g[(c[ah>>2]|0)+(G<<2)>>2];ar=+g[ag>>2];aD=+g[af>>2];ao=aD*0.0;aC=+g[ae>>2];al=aC*0.0;aq=ar*0.0;an=+g[ad>>2];ak=+g[ac>>2];ap=ak*0.0;am=+g[ab>>2];aj=am*0.0;aB=an*0.0;aA=+g[aa>>2];az=+g[$>>2];ay=az*0.0;ax=+g[_>>2];aw=ax*0.0;au=aA*0.0;at=aH*ar+aG*aD+aF*aC+ +g[Z>>2];as=aH*an+aG*ak+aF*am+ +g[Y>>2];aI=aH*aA+aG*az+aF*ax+ +g[X>>2];g[W>>2]=ar+ao+al;g[V>>2]=aq+aD+al;g[U>>2]=aC+(aq+ao);g[T>>2]=0.0;g[S>>2]=an+ap+aj;g[R>>2]=aB+ak+aj;g[Q>>2]=am+(aB+ap);g[P>>2]=0.0;g[O>>2]=aA+ay+aw;g[N>>2]=au+az+aw;g[M>>2]=ax+(au+ay);g[L>>2]=0.0;g[K>>2]=at;g[J>>2]=as;g[I>>2]=aI;g[H>>2]=0.0;hu[av&3](ai,aE,l,e);}while((G|0)>0);i=f;return};case 0:{G=j;l=d+28|0;c[G>>2]=c[l>>2];c[G+4>>2]=c[l+4>>2];c[G+8>>2]=c[l+8>>2];c[G+12>>2]=c[l+12>>2];l=d;G=d;aE=+g6[c[(c[G>>2]|0)+48>>2]&15](l);aI=+g6[c[(c[G>>2]|0)+48>>2]&15](l);as=+g6[c[(c[G>>2]|0)+48>>2]&15](l);l=j|0;at=aE+ +g[l>>2];g[l>>2]=at;l=j+4|0;aE=aI+ +g[l>>2];g[l>>2]=aE;l=j+8|0;aI=as+ +g[l>>2];g[l>>2]=aI;l=g3[c[(c[C>>2]|0)+20>>2]&511](a)|0;G=c[(c[l>>2]|0)+72>>2]|0;g[k>>2]=-0.0-at;g[k+4>>2]=-0.0-aE;g[k+8>>2]=-0.0-aI;g[k+12>>2]=0.0;g7[G&127](l,k,j,b,e);i=f;return};case 11:{aI=+g[d+56>>2];aE=+g[d+60>>2];j=c[d+68>>2]|0;k=g3[c[(c[C>>2]|0)+20>>2]&511](a)|0;g9[c[(c[k>>2]|0)+84>>2]&7](k,aI,aE,j,b,e);i=f;return};case 10:{j=d;k=c[d+52>>2]|0;aE=+g[j+28+(((k+2|0)%3|0)<<2)>>2];aI=+g[j+28+(k<<2)>>2];j=g3[c[(c[C>>2]|0)+20>>2]&511](a)|0;g9[c[(c[j>>2]|0)+76>>2]&7](j,aE,aI,k,b,e);i=f;return};case 8:{aI=+g6[c[(c[d>>2]|0)+48>>2]&15](d);k=g3[c[(c[C>>2]|0)+20>>2]&511](a)|0;hu[c[(c[k>>2]|0)+16>>2]&3](k,aI,b,e);i=f;return};case 13:{k=c[d+52>>2]|0;aI=+g6[c[(c[d>>2]|0)+92>>2]&15](d);j=m;l=d+28|0;c[j>>2]=c[l>>2];c[j+4>>2]=c[l+4>>2];c[j+8>>2]=c[l+8>>2];c[j+12>>2]=c[l+12>>2];l=d;j=d;aE=+g6[c[(c[j>>2]|0)+48>>2]&15](l);at=+g6[c[(c[j>>2]|0)+48>>2]&15](l);as=+g6[c[(c[j>>2]|0)+48>>2]&15](l);l=m|0;g[l>>2]=aE+ +g[l>>2];l=m+4|0;g[l>>2]=at+ +g[l>>2];l=m+8|0;g[l>>2]=as+ +g[l>>2];as=+g[m+(k<<2)>>2];m=g3[c[(c[C>>2]|0)+20>>2]&511](a)|0;g9[c[(c[m>>2]|0)+80>>2]&7](m,aI,as,k,b,e);i=f;return};case 28:{as=+g[d+64>>2];k=g3[c[(c[C>>2]|0)+20>>2]&511](a)|0;gZ[c[(c[k>>2]|0)+88>>2]&3](k,d+48|0,as,b,e);i=f;return};default:{L27:do{if((E|0)<7){k=d;m=c[d+52>>2]|0;if((m|0)==0){l=d;if((g3[c[(c[l>>2]|0)+100>>2]&511](k)|0)<=0){break}j=d;G=s|0;H=b|0;I=s+4|0;J=b+4|0;K=s+8|0;L=b+8|0;M=b+16|0;N=b+20|0;O=b+24|0;P=b+32|0;Q=b+36|0;R=b+40|0;S=b+48|0;T=b+52|0;U=b+56|0;V=u|0;W=u+4|0;X=u+8|0;Y=u+12|0;Z=t|0;_=t+4|0;$=t+8|0;aa=v|0;ab=v+4|0;ac=v+8|0;ad=v+12|0;ae=0;while(1){hM[c[(c[j>>2]|0)+104>>2]&255](k,ae,s,t);as=+g[G>>2];aI=+g[H>>2];at=+g[I>>2];aE=+g[J>>2];ay=+g[K>>2];au=+g[L>>2];ax=+g[M>>2];aw=+g[N>>2];az=+g[O>>2];aA=+g[P>>2];ap=+g[Q>>2];aB=+g[R>>2];am=+g[S>>2];aj=+g[T>>2];ak=+g[U>>2];g[V>>2]=as*aI+at*aE+ay*au+am;g[W>>2]=as*ax+at*aw+ay*az+aj;g[X>>2]=as*aA+at*ap+ay*aB+ak;g[Y>>2]=0.0;ay=+g[Z>>2];at=+g[_>>2];as=+g[$>>2];g[aa>>2]=ay*aI+at*aE+as*au+am;g[ab>>2]=ay*ax+at*aw+as*az+aj;g[ac>>2]=ay*aA+at*ap+as*aB+ak;g[ad>>2]=0.0;af=g3[c[(c[C>>2]|0)+20>>2]&511](a)|0;hM[c[(c[af>>2]|0)+8>>2]&255](af,u,v,e);ae=ae+1|0;if((ae|0)>=(g3[c[(c[l>>2]|0)+100>>2]&511](k)|0)){break L27}}}k=m+28|0;if((c[k>>2]|0)<=0){break}l=m+36|0;ae=p|0;ad=p+4|0;ac=p+8|0;ab=p+12|0;aa=b|0;$=b+4|0;_=b+8|0;Z=b+16|0;Y=b+20|0;X=b+24|0;W=b+32|0;V=b+36|0;U=b+40|0;T=b+48|0;S=b+52|0;R=b+56|0;Q=q|0;P=q+4|0;O=q+8|0;N=q+12|0;M=r|0;L=r+4|0;K=r+8|0;J=r+12|0;I=m+16|0;H=n|0;G=n+4|0;j=n+8|0;af=n+12|0;ag=o|0;ah=o+4|0;h=o+8|0;ai=o+12|0;av=0;do{F=c[l>>2]|0;aJ=c[F+(av*36|0)+4>>2]|0;L38:do{if((aJ|0)>0){aK=c[F+(av*36|0)+12>>2]|0;ak=0.0;aB=0.0;as=0.0;aL=c[aK+(aJ-1<<2)>>2]|0;aM=0;aN=aK;while(1){aK=c[aN+(aM<<2)>>2]|0;aO=c[I>>2]|0;ap=as+ +g[aO+(aK<<4)>>2];at=aB+ +g[aO+(aK<<4)+4>>2];aA=ak+ +g[aO+(aK<<4)+8>>2];aO=g3[c[(c[C>>2]|0)+20>>2]&511](a)|0;aP=c[(c[aO>>2]|0)+8>>2]|0;aQ=c[I>>2]|0;ay=+g[aQ+(aL<<4)>>2];aj=+g[aa>>2];az=+g[aQ+(aL<<4)+4>>2];aw=+g[$>>2];ax=+g[aQ+(aL<<4)+8>>2];am=+g[_>>2];au=+g[Z>>2];aE=+g[Y>>2];aI=+g[X>>2];an=+g[W>>2];ao=+g[V>>2];aq=+g[U>>2];aC=+g[T>>2];al=+g[S>>2];aD=+g[R>>2];g[H>>2]=ay*aj+az*aw+ax*am+aC;g[G>>2]=ay*au+az*aE+ax*aI+al;g[j>>2]=ay*an+az*ao+ax*aq+aD;g[af>>2]=0.0;aQ=c[I>>2]|0;ax=+g[aQ+(aK<<4)>>2];az=+g[aQ+(aK<<4)+4>>2];ay=+g[aQ+(aK<<4)+8>>2];g[ag>>2]=ax*aj+az*aw+ay*am+aC;g[ah>>2]=ax*au+az*aE+ay*aI+al;g[h>>2]=ax*an+az*ao+ay*aq+aD;g[ai>>2]=0.0;hM[aP&255](aO,n,o,e);aO=aM+1|0;aP=c[l>>2]|0;if((aO|0)>=(c[aP+(av*36|0)+4>>2]|0)){aR=ap;aS=at;aT=aA;break L38}ak=aA;aB=at;as=ap;aL=aK;aM=aO;aN=c[aP+(av*36|0)+12>>2]|0}}else{aR=0.0;aS=0.0;aT=0.0}}while(0);as=1.0/+(aJ|0);aB=aR*as;ak=aS*as;ap=aT*as;F=g3[c[(c[C>>2]|0)+20>>2]&511](a)|0;if(((g3[c[(c[F>>2]|0)+48>>2]&511](F)|0)&16384|0)!=0){g[ae>>2]=1.0;g[ad>>2]=1.0;g[ac>>2]=0.0;g[ab>>2]=0.0;F=c[l>>2]|0;as=+g[F+(av*36|0)+20>>2];at=+g[F+(av*36|0)+24>>2];aA=+g[F+(av*36|0)+28>>2];F=g3[c[(c[C>>2]|0)+20>>2]&511](a)|0;aN=c[(c[F>>2]|0)+8>>2]|0;aD=+g[aa>>2];aq=+g[$>>2];ay=+g[_>>2];ao=+g[Z>>2];az=+g[Y>>2];an=+g[X>>2];ax=+g[W>>2];al=+g[V>>2];aI=+g[U>>2];aE=+g[T>>2];au=+g[S>>2];aC=+g[R>>2];g[Q>>2]=aB*aD+ak*aq+ap*ay+aE;g[P>>2]=aB*ao+ak*az+ap*an+au;g[O>>2]=aB*ax+ak*al+ap*aI+aC;g[N>>2]=0.0;am=aB+as;as=ak+at;at=ap+aA;g[M>>2]=am*aD+as*aq+at*ay+aE;g[L>>2]=am*ao+as*az+at*an+au;g[K>>2]=am*ax+as*al+at*aI+aC;g[J>>2]=0.0;hM[aN&255](F,q,r,p)}av=av+1|0;}while((av|0)<(c[k>>2]|0))}}while(0);p=c[D>>2]|0;if((p-21|0)>>>0<9>>>0){g[w>>2]=999999984306749400.0;g[w+4>>2]=999999984306749400.0;g[w+8>>2]=999999984306749400.0;g[w+12>>2]=0.0;g[x>>2]=-999999984306749400.0;g[x+4>>2]=-999999984306749400.0;g[x+8>>2]=-999999984306749400.0;g[x+12>>2]=0.0;r=g3[c[(c[C>>2]|0)+20>>2]&511](a)|0;c[y>>2]=33648;c[y+4>>2]=33672;c[y+8>>2]=r;r=y+12|0;q=e;c[r>>2]=c[q>>2];c[r+4>>2]=c[q+4>>2];c[r+8>>2]=c[q+8>>2];c[r+12>>2]=c[q+12>>2];q=y+28|0;r=b;c[q>>2]=c[r>>2];c[q+4>>2]=c[r+4>>2];c[q+8>>2]=c[r+8>>2];c[q+12>>2]=c[r+12>>2];r=y+44|0;q=b+16|0;c[r>>2]=c[q>>2];c[r+4>>2]=c[q+4>>2];c[r+8>>2]=c[q+8>>2];c[r+12>>2]=c[q+12>>2];q=y+60|0;r=b+32|0;c[q>>2]=c[r>>2];c[q+4>>2]=c[r+4>>2];c[q+8>>2]=c[r+8>>2];c[q+12>>2]=c[r+12>>2];r=y+76|0;q=b+48|0;c[r>>2]=c[q>>2];c[r+4>>2]=c[q+4>>2];c[r+8>>2]=c[q+8>>2];c[r+12>>2]=c[q+12>>2];q=y|0;hM[c[(c[d>>2]|0)+64>>2]&255](d,q,x,w);ow(y+4|0);ov(q);aU=c[D>>2]|0}else{aU=p}if((aU|0)!=3){i=f;return}g[z>>2]=999999984306749400.0;g[z+4>>2]=999999984306749400.0;g[z+8>>2]=999999984306749400.0;g[z+12>>2]=0.0;g[A>>2]=-999999984306749400.0;g[A+4>>2]=-999999984306749400.0;g[A+8>>2]=-999999984306749400.0;g[A+12>>2]=0.0;aU=g3[c[(c[C>>2]|0)+20>>2]&511](a)|0;c[B>>2]=33648;c[B+4>>2]=33672;c[B+8>>2]=aU;aU=B+12|0;a=e;c[aU>>2]=c[a>>2];c[aU+4>>2]=c[a+4>>2];c[aU+8>>2]=c[a+8>>2];c[aU+12>>2]=c[a+12>>2];a=B+28|0;aU=b;c[a>>2]=c[aU>>2];c[a+4>>2]=c[aU+4>>2];c[a+8>>2]=c[aU+8>>2];c[a+12>>2]=c[aU+12>>2];aU=B+44|0;a=b+16|0;c[aU>>2]=c[a>>2];c[aU+4>>2]=c[a+4>>2];c[aU+8>>2]=c[a+8>>2];c[aU+12>>2]=c[a+12>>2];a=B+60|0;aU=b+32|0;c[a>>2]=c[aU>>2];c[a+4>>2]=c[aU+4>>2];c[a+8>>2]=c[aU+8>>2];c[a+12>>2]=c[aU+12>>2];aU=B+76|0;a=b+48|0;c[aU>>2]=c[a>>2];c[aU+4>>2]=c[a+4>>2];c[aU+8>>2]=c[a+8>>2];c[aU+12>>2]=c[a+12>>2];a=c[d+92>>2]|0;d=B+4|0;hM[c[(c[a>>2]|0)+8>>2]&255](a,d,A,z);ow(d);ov(B|0);i=f;return}}}function sj(a){a=a|0;ow(a+4|0);ov(a|0);return}function sk(b){b=b|0;var d=0,e=0,f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0.0,W=0.0,X=0.0,Y=0.0,Z=0.0,_=0.0,$=0.0;d=i;i=i+112|0;e=d|0;f=d+16|0;h=d+32|0;j=d+48|0;k=d+64|0;l=d+80|0;m=d+96|0;n=b;do{if((g3[c[(c[n>>2]|0)+20>>2]&511](b)|0)!=0){o=g3[c[(c[n>>2]|0)+20>>2]&511](b)|0;if(((g3[c[(c[o>>2]|0)+48>>2]&511](o)|0)&8|0)==0){break}o=b+24|0;p=c[o>>2]|0;q=g3[c[(c[p>>2]|0)+36>>2]&511](p)|0;g[e>>2]=1.0;g[e+4>>2]=1.0;g[e+8>>2]=0.0;g[e+12>>2]=0.0;if((q|0)>0){r=0}else{break}do{p=c[o>>2]|0;s=hx[c[(c[p>>2]|0)+40>>2]&127](p,r)|0;p=c[s+748>>2]|0;if((p|0)>0){t=0;do{u=g3[c[(c[n>>2]|0)+20>>2]&511](b)|0;ho[c[(c[u>>2]|0)+32>>2]&3](u,s+4+(t*184|0)+32|0,s+4+(t*184|0)+64|0,+g[s+4+(t*184|0)+80>>2],c[s+4+(t*184|0)+148>>2]|0,e);t=t+1|0;}while((t|0)<(p|0))}r=r+1|0;}while((r|0)<(q|0))}}while(0);if((g3[c[(c[n>>2]|0)+20>>2]&511](b)|0)==0){i=d;return}r=g3[c[(c[n>>2]|0)+20>>2]&511](b)|0;if(((g3[c[(c[r>>2]|0)+48>>2]&511](r)|0)&3|0)==0){i=d;return}r=b+8|0;if((c[r>>2]|0)<=0){i=d;return}e=b+16|0;q=b+80|0;o=k|0;p=k+4|0;t=k+8|0;s=k+12|0;u=h|0;v=h+4|0;w=h+8|0;x=j|0;y=j+4|0;z=j+8|0;A=b+44|0;B=l|0;C=l+4|0;D=l+8|0;E=m|0;F=m+4|0;G=m+8|0;H=h+12|0;I=l+12|0;J=j+12|0;K=m+12|0;L=f|0;M=f+4|0;N=f+8|0;O=f+12|0;P=b;Q=0;do{R=c[(c[e>>2]|0)+(Q<<2)>>2]|0;S=R+204|0;do{if((c[S>>2]&32|0)==0){do{if((g3[c[(c[n>>2]|0)+20>>2]&511](b)|0)!=0){T=g3[c[(c[n>>2]|0)+20>>2]&511](b)|0;if(((g3[c[(c[T>>2]|0)+48>>2]&511](T)|0)&1|0)==0){break}g[L>>2]=1.0;g[M>>2]=1.0;g[N>>2]=1.0;g[O>>2]=0.0;switch(c[R+216>>2]|0){case 3:{g[L>>2]=0.0;g[M>>2]=1.0;g[N>>2]=1.0;g[O>>2]=0.0;break};case 1:{g[L>>2]=1.0;g[M>>2]=1.0;g[N>>2]=1.0;g[O>>2]=0.0;break};case 4:{g[L>>2]=1.0;g[M>>2]=0.0;g[N>>2]=0.0;g[O>>2]=0.0;break};case 2:{g[L>>2]=0.0;g[M>>2]=1.0;g[N>>2]=0.0;g[O>>2]=0.0;break};case 5:{g[L>>2]=1.0;g[M>>2]=1.0;g[N>>2]=0.0;g[O>>2]=0.0;break};default:{g[L>>2]=1.0;g[M>>2]=0.0;g[N>>2]=0.0;g[O>>2]=0.0}}hM[c[(c[P>>2]|0)+28>>2]&255](b,R+4|0,c[R+192>>2]|0,f)}}while(0);T=c[q>>2]|0;if((T|0)==0){break}if(((g3[c[(c[T>>2]|0)+48>>2]&511](T)|0)&2|0)==0){break}g[o>>2]=1.0;g[p>>2]=0.0;g[t>>2]=0.0;g[s>>2]=0.0;T=R+192|0;U=c[T>>2]|0;hM[c[(c[U>>2]|0)+8>>2]&255](U,R+4|0,h,j);V=+g[542];g[u>>2]=+g[u>>2]-V;g[v>>2]=+g[v>>2]-V;g[w>>2]=+g[w>>2]-V;g[x>>2]=V+ +g[x>>2];g[y>>2]=V+ +g[y>>2];g[z>>2]=V+ +g[z>>2];do{if((a[A]&1)!=0){if((c[R+236>>2]|0)!=2){break}if((c[S>>2]&3|0)!=0){break}U=c[T>>2]|0;hM[c[(c[U>>2]|0)+8>>2]&255](U,R+68|0,l,m);W=+g[B>>2]-V;g[B>>2]=W;X=+g[C>>2]-V;g[C>>2]=X;Y=+g[D>>2]-V;g[D>>2]=Y;Z=V+ +g[E>>2];g[E>>2]=Z;_=V+ +g[F>>2];g[F>>2]=_;$=V+ +g[G>>2];g[G>>2]=$;if(W<+g[u>>2]){g[u>>2]=W}if(X<+g[v>>2]){g[v>>2]=X}if(Y<+g[w>>2]){g[w>>2]=Y}Y=+g[I>>2];if(Y<+g[H>>2]){g[H>>2]=Y}if(+g[x>>2]<Z){g[x>>2]=Z}if(+g[y>>2]<_){g[y>>2]=_}if(+g[z>>2]<$){g[z>>2]=$}$=+g[K>>2];if(+g[J>>2]>=$){break}g[J>>2]=$}}while(0);T=c[q>>2]|0;hM[c[(c[T>>2]|0)+52>>2]&255](T,h,j,k)}}while(0);Q=Q+1|0;}while((Q|0)<(c[r>>2]|0));i=d;return}function sl(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0;e=i;i=i+96|0;f=e|0;g=e+80|0;h=e+88|0;j=b+8|0;k=c[j>>2]|0;if((k|0)>0){l=b+16|0;m=0;n=k;while(1){o=c[(c[l>>2]|0)+(m<<2)>>2]|0;if((c[o+236>>2]|0)==1){g0[c[(c[o>>2]|0)+24>>2]&511](o,d);p=c[j>>2]|0}else{p=n}o=m+1|0;if((o|0)<(p|0)){m=o;n=p}else{q=p;break}}}else{q=k}a[f+16|0]=1;k=f+12|0;c[k>>2]=0;p=f+4|0;c[p>>2]=0;c[f+8>>2]=0;a[f+36|0]=1;n=f+32|0;c[n>>2]=0;c[f+24>>2]=0;c[f+28>>2]=0;a[f+56|0]=1;m=f+52|0;c[m>>2]=0;c[f+44>>2]=0;l=f+48|0;c[l>>2]=0;a[f+76|0]=1;o=f+72|0;c[o>>2]=0;c[f+64>>2]=0;c[f+68>>2]=0;if((q|0)<=0){sr(f);i=e;return}r=b+16|0;b=h|0;s=0;t=-1;u=0;v=q;while(1){q=c[(c[(c[r>>2]|0)+(s<<2)>>2]|0)+192>>2]|0;c[g>>2]=q;w=q;x=w+~(w<<15)|0;y=(x>>10^x)*9|0;x=y>>6^y;y=x+~(x<<11)|0;x=(y>>16^y)&t;y=q;L14:do{if(x>>>0<u>>>0){q=c[(c[k>>2]|0)+(x<<2)>>2]|0;if((q|0)==-1){z=15;break}A=c[o>>2]|0;B=c[n>>2]|0;C=q;while(1){if((y|0)==(c[A+(C<<3)>>2]|0)){break}q=c[B+(C<<2)>>2]|0;if((q|0)==-1){z=15;break L14}else{C=q}}if((C|0)==-1){z=15;break}if(((c[m>>2]|0)+(C<<2)|0)==0){z=15}else{D=v}}else{z=15}}while(0);if((z|0)==15){z=0;c[b>>2]=w;sm(f,h,g);y=c[g>>2]|0;g0[c[(c[y>>2]|0)+60>>2]&511](y,d);D=c[j>>2]|0}y=s+1|0;if((y|0)>=(D|0)){break}s=y;t=(c[l>>2]|0)-1|0;u=c[p>>2]|0;v=D}sr(f);i=e;return}function sm(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;f=d|0;g=c[f>>2]|0;h=g+~(g<<15)|0;i=(h>>10^h)*9|0;h=i>>6^i;i=h+~(h<<11)|0;h=b+48|0;j=c[h>>2]|0;k=(i>>16^i)&j-1;i=g;L1:do{if(k>>>0<(c[b+4>>2]|0)>>>0){g=c[(c[b+12>>2]|0)+(k<<2)>>2]|0;if((g|0)==-1){break}l=c[b+72>>2]|0;m=b+32|0;n=g;while(1){if((i|0)==(c[l+(n<<3)>>2]|0)){break}g=c[(c[m>>2]|0)+(n<<2)>>2]|0;if((g|0)==-1){break L1}else{n=g}}if((n|0)==-1){break}c[(c[b+52>>2]|0)+(n<<2)>>2]=c[e>>2];return}}while(0);i=b+44|0;m=c[i>>2]|0;do{if((m|0)==(j|0)){l=(j|0)==0?1:j<<1;if((j|0)>=(l|0)){o=j;break}if((l|0)==0){p=0;q=j}else{g=zv(l<<2,16)|0;p=g;q=c[i>>2]|0}g=b+52|0;if((q|0)>0){r=0;do{s=p+(r<<2)|0;if((s|0)!=0){c[s>>2]=c[(c[g>>2]|0)+(r<<2)>>2]}r=r+1|0;}while((r|0)<(q|0))}r=c[g>>2]|0;n=b+56|0;if((r|0)!=0){if((a[n]&1)!=0){zw(r)}c[g>>2]=0}a[n]=1;c[g>>2]=p;c[h>>2]=l;o=c[i>>2]|0}else{o=m}}while(0);p=(c[b+52>>2]|0)+(o<<2)|0;if((p|0)==0){t=o}else{c[p>>2]=c[e>>2];t=c[i>>2]|0}c[i>>2]=t+1;t=b+64|0;i=c[t>>2]|0;e=b+68|0;do{if((i|0)==(c[e>>2]|0)){p=(i|0)==0?1:i<<1;if((i|0)>=(p|0)){u=i;break}if((p|0)==0){v=0;w=i}else{o=zv(p<<3,16)|0;v=o;w=c[t>>2]|0}o=b+72|0;if((w|0)>0){q=0;do{n=v+(q<<3)|0;if((n|0)!=0){r=(c[o>>2]|0)+(q<<3)|0;s=n;n=c[r+4>>2]|0;c[s>>2]=c[r>>2];c[s+4>>2]=n}q=q+1|0;}while((q|0)<(w|0))}q=c[o>>2]|0;l=b+76|0;if((q|0)!=0){if((a[l]&1)!=0){zw(q)}c[o>>2]=0}a[l]=1;c[o>>2]=v;c[e>>2]=p;u=c[t>>2]|0}else{u=i}}while(0);i=(c[b+72>>2]|0)+(u<<3)|0;if((i|0)==0){x=u}else{u=d;d=i;i=c[u+4>>2]|0;c[d>>2]=c[u>>2];c[d+4>>2]=i;x=c[t>>2]|0}c[t>>2]=x+1;if((j|0)<(c[h>>2]|0)){sq(b,0);j=c[f>>2]|0;f=j+~(j<<15)|0;j=(f>>10^f)*9|0;f=j>>6^j;j=f+~(f<<11)|0;y=(j>>16^j)&(c[h>>2]|0)-1}else{y=k}k=b+12|0;c[(c[b+32>>2]|0)+(m<<2)>>2]=c[(c[k>>2]|0)+(y<<2)>>2];c[(c[k>>2]|0)+(y<<2)>>2]=m;return}function sn(a,b){a=a|0;b=b|0;var d=0;d=b;g$[c[(c[d>>2]|0)+32>>2]&1023](b);sl(a,b);g$[c[(c[d>>2]|0)+36>>2]&1023](b);return}function so(a,b){a=a|0;b=b|0;c[a+80>>2]=b;return}function sp(a){a=a|0;return c[a+80>>2]|0}function sq(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;d=b+48|0;e=c[d>>2]|0;f=b+4|0;g=c[f>>2]|0;if((g|0)>=(e|0)){return}if((g|0)<=(e|0)){h=b+8|0;if((c[h>>2]|0)<(e|0)){if((e|0)==0){i=0;j=g}else{k=zv(e<<2,16)|0;i=k;j=c[f>>2]|0}k=b+12|0;if((j|0)>0){l=0;do{m=i+(l<<2)|0;if((m|0)!=0){c[m>>2]=c[(c[k>>2]|0)+(l<<2)>>2]}l=l+1|0;}while((l|0)<(j|0))}j=c[k>>2]|0;l=b+16|0;if((j|0)!=0){if((a[l]&1)!=0){zw(j)}c[k>>2]=0}a[l]=1;c[k>>2]=i;c[h>>2]=e;n=k}else{n=b+12|0}k=g;do{h=(c[n>>2]|0)+(k<<2)|0;if((h|0)!=0){c[h>>2]=0}k=k+1|0;}while((k|0)<(e|0))}c[f>>2]=e;f=b+24|0;k=c[f>>2]|0;if((k|0)<(e|0)){n=b+28|0;if((c[n>>2]|0)<(e|0)){if((e|0)==0){o=0;p=k}else{h=zv(e<<2,16)|0;o=h;p=c[f>>2]|0}h=b+32|0;if((p|0)>0){i=0;do{l=o+(i<<2)|0;if((l|0)!=0){c[l>>2]=c[(c[h>>2]|0)+(i<<2)>>2]}i=i+1|0;}while((i|0)<(p|0))}p=c[h>>2]|0;i=b+36|0;if((p|0)!=0){if((a[i]&1)!=0){zw(p)}c[h>>2]=0}a[i]=1;c[h>>2]=o;c[n>>2]=e;q=h}else{q=b+32|0}h=k;do{k=(c[q>>2]|0)+(h<<2)|0;if((k|0)!=0){c[k>>2]=0}h=h+1|0;}while((h|0)<(e|0))}c[f>>2]=e;f=(e|0)>0;do{if(f){h=b+12|0;q=0;do{c[(c[h>>2]|0)+(q<<2)>>2]=-1;q=q+1|0;}while((q|0)<(e|0));if(!f){break}q=b+32|0;h=0;do{c[(c[q>>2]|0)+(h<<2)>>2]=-1;h=h+1|0;}while((h|0)<(e|0))}}while(0);if((g|0)<=0){return}e=b+72|0;f=b+12|0;h=b+32|0;b=0;do{q=c[(c[e>>2]|0)+(b<<3)>>2]|0;k=q+~(q<<15)|0;q=(k>>10^k)*9|0;k=q>>6^q;q=k+~(k<<11)|0;k=(q>>16^q)&(c[d>>2]|0)-1;c[(c[h>>2]|0)+(b<<2)>>2]=c[(c[f>>2]|0)+(k<<2)>>2];c[(c[f>>2]|0)+(k<<2)>>2]=b;b=b+1|0;}while((b|0)<(g|0));return}function sr(b){b=b|0;var d=0,e=0,f=0,g=0,h=0;d=b+64|0;e=b+72|0;f=c[e>>2]|0;g=b+76|0;if((f|0)!=0){if((a[g]&1)!=0){zw(f)}c[e>>2]=0}a[g]=1;c[e>>2]=0;c[d>>2]=0;c[b+68>>2]=0;d=b+44|0;e=b+52|0;g=c[e>>2]|0;f=b+56|0;if((g|0)!=0){if((a[f]&1)!=0){zw(g)}c[e>>2]=0}a[f]=1;c[e>>2]=0;c[d>>2]=0;c[b+48>>2]=0;d=b+24|0;e=b+32|0;f=c[e>>2]|0;g=b+36|0;if((f|0)!=0){if((a[g]&1)!=0){zw(f)}c[e>>2]=0}a[g]=1;c[e>>2]=0;c[d>>2]=0;c[b+28>>2]=0;d=b+4|0;e=b+12|0;g=c[e>>2]|0;f=b+16|0;if((g|0)==0){a[f]=1;c[e>>2]=0;c[d>>2]=0;h=b+8|0;c[h>>2]=0;return}if((a[f]&1)!=0){zw(g)}c[e>>2]=0;a[f]=1;c[e>>2]=0;c[d>>2]=0;h=b+8|0;c[h>>2]=0;return}function ss(a){a=a|0;ow(a-92+92|0);ov(a-92+88|0);return}function st(a){a=a|0;ow(a+4|0);ov(a|0);KU(a);return}function su(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,h=0,j=0,k=0,l=0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,X=0,Y=0,Z=0,_=0;e=i;i=i+96|0;d=e|0;f=e+16|0;h=e+32|0;j=e+48|0;k=e+64|0;l=e+80|0;m=+g[b>>2];n=+g[a+28>>2];o=+g[b+4>>2];p=+g[a+32>>2];q=+g[b+8>>2];r=+g[a+36>>2];s=+g[a+44>>2];t=+g[a+48>>2];u=+g[a+52>>2];v=+g[a+60>>2];w=+g[a+64>>2];x=+g[a+68>>2];y=+g[a+76>>2];z=m*n+o*p+q*r+y;A=+g[a+80>>2];B=m*s+o*t+q*u+A;C=+g[a+84>>2];D=m*v+o*w+q*x+C;g[d>>2]=z;g[d+4>>2]=B;g[d+8>>2]=D;g[d+12>>2]=0.0;q=+g[b+16>>2];o=+g[b+20>>2];m=+g[b+24>>2];E=q*n+o*p+m*r+y;F=q*s+o*t+m*u+A;G=q*v+o*w+m*x+C;g[f>>2]=E;g[f+4>>2]=F;g[f+8>>2]=G;g[f+12>>2]=0.0;m=+g[b+32>>2];o=+g[b+36>>2];q=+g[b+40>>2];H=m*n+o*p+q*r+y;y=m*s+o*t+q*u+A;A=m*v+o*w+q*x+C;g[h>>2]=H;g[h+4>>2]=y;g[h+8>>2]=A;g[h+12>>2]=0.0;C=(z+E+H)*.3333333432674408;x=(B+F+y)*.3333333432674408;q=(D+G+A)*.3333333432674408;g[j>>2]=C;g[j+4>>2]=x;g[j+8>>2]=q;g[j+12>>2]=0.0;b=a+8|0;I=c[b>>2]|0;if(((g3[c[(c[I>>2]|0)+48>>2]&511](I)|0)&16384|0)==0){J=c[b>>2]|0;K=J;L=c[K>>2]|0;M=L+8|0;N=c[M>>2]|0;O=a+12|0;hM[N&255](J,d,f,O);P=c[b>>2]|0;Q=P;R=c[Q>>2]|0;S=R+8|0;T=c[S>>2]|0;hM[T&255](P,f,h,O);U=c[b>>2]|0;V=U;X=c[V>>2]|0;Y=X+8|0;Z=c[Y>>2]|0;hM[Z&255](U,h,d,O);i=e;return}w=E-z;E=F-B;F=G-D;G=H-z;z=y-B;B=A-D;D=E*B-F*z;A=F*G-w*B;B=w*z-E*G;G=1.0/+W(B*B+(D*D+A*A));g[k>>2]=1.0;g[k+4>>2]=1.0;g[k+8>>2]=0.0;g[k+12>>2]=0.0;I=c[b>>2]|0;_=c[(c[I>>2]|0)+8>>2]|0;g[l>>2]=G*D+C;g[l+4>>2]=G*A+x;g[l+8>>2]=G*B+q;g[l+12>>2]=0.0;hM[_&255](I,j,l,k);J=c[b>>2]|0;K=J;L=c[K>>2]|0;M=L+8|0;N=c[M>>2]|0;O=a+12|0;hM[N&255](J,d,f,O);P=c[b>>2]|0;Q=P;R=c[Q>>2]|0;S=R+8|0;T=c[S>>2]|0;hM[T&255](P,f,h,O);U=c[b>>2]|0;V=U;X=c[V>>2]|0;Y=X+8|0;Z=c[Y>>2]|0;hM[Z&255](U,h,d,O);i=e;return}function sv(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;hM[c[(c[a>>2]|0)+8>>2]&255](a,b,d,e);return}function sw(a){a=a|0;var b=0;b=a-92+88|0;ow(a-92+92|0);ov(b);KU(b);return}function sx(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0;f=a-92+88|0;hM[c[(c[f>>2]|0)+8>>2]&255](f,b,d,e);return}function sy(a){a=a|0;KU(a);return}function sz(a,b,d){a=a|0;b=b|0;d=d|0;c[a+16>>2]=b;c[a+24>>2]=d;return}function sA(a,b,d){a=a|0;b=b|0;d=d|0;c[a+20>>2]=b;c[a+28>>2]=d;return}function sB(b,d,e,f){b=b|0;d=d|0;e=e|0;f=+f;var h=0,j=0,k=0,l=0,m=0,n=0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0.0;h=i;i=i+184|0;j=h|0;k=c[(c[b+4>>2]|0)+740>>2]|0;l=b+8|0;m=c[(c[l>>2]|0)+8>>2]|0;n=(k|0)!=(m|0);o=+g[e>>2];p=+g[d>>2]*f+o;q=+g[e+4>>2];r=+g[d+4>>2]*f+q;s=+g[e+8>>2];t=+g[d+8>>2]*f+s;if(n){u=c[(c[b+12>>2]|0)+8>>2]|0;v=p- +g[u+52>>2];w=r- +g[u+56>>2];x=t- +g[u+60>>2];y=o- +g[m+52>>2];z=q- +g[m+56>>2];A=s- +g[m+60>>2];B=y*+g[m+4>>2]+z*+g[m+20>>2]+A*+g[m+36>>2];C=y*+g[m+8>>2]+z*+g[m+24>>2]+A*+g[m+40>>2];D=y*+g[m+12>>2]+z*+g[m+28>>2]+A*+g[m+44>>2];E=v*+g[u+4>>2]+w*+g[u+20>>2]+x*+g[u+36>>2];F=v*+g[u+8>>2]+w*+g[u+24>>2]+x*+g[u+40>>2];G=v*+g[u+12>>2]+w*+g[u+28>>2]+x*+g[u+44>>2]}else{x=p- +g[k+52>>2];w=r- +g[k+56>>2];v=t- +g[k+60>>2];u=c[(c[b+12>>2]|0)+8>>2]|0;A=o- +g[u+52>>2];o=q- +g[u+56>>2];q=s- +g[u+60>>2];B=A*+g[u+4>>2]+o*+g[u+20>>2]+q*+g[u+36>>2];C=A*+g[u+8>>2]+o*+g[u+24>>2]+q*+g[u+40>>2];D=A*+g[u+12>>2]+o*+g[u+28>>2]+q*+g[u+44>>2];E=x*+g[k+4>>2]+w*+g[k+20>>2]+v*+g[k+36>>2];F=x*+g[k+8>>2]+w*+g[k+24>>2]+v*+g[k+40>>2];G=x*+g[k+12>>2]+w*+g[k+28>>2]+v*+g[k+44>>2]}g[j>>2]=E;g[j+4>>2]=F;g[j+8>>2]=G;g[j+12>>2]=0.0;g[j+16>>2]=B;g[j+20>>2]=C;g[j+24>>2]=D;g[j+28>>2]=0.0;k=j+64|0;u=d;c[k>>2]=c[u>>2];c[k+4>>2]=c[u+4>>2];c[k+8>>2]=c[u+8>>2];c[k+12>>2]=c[u+12>>2];g[j+80>>2]=f;g[j+84>>2]=0.0;g[j+88>>2]=0.0;g[j+92>>2]=0.0;c[j+112>>2]=0;a[j+116|0]=0;K1(j+120|0,0,32)|0;g[j+48>>2]=p;g[j+52>>2]=r;g[j+56>>2]=t;g[j+60>>2]=0.0;u=j+32|0;k=e;c[u>>2]=c[k>>2];c[u+4>>2]=c[k+4>>2];c[u+8>>2]=c[k+8>>2];c[u+12>>2]=c[k+12>>2];if(n){k=c[b+20>>2]|0;c[j+96>>2]=k;u=c[b+16>>2]|0;c[j+100>>2]=u;e=c[b+28>>2]|0;c[j+104>>2]=e;d=c[b+24>>2]|0;c[j+108>>2]=d;H=k;I=e;J=u;K=d;L=b+12|0;M=n?L:l;N=c[M>>2]|0;O=n?l:L;P=c[O>>2]|0;Q=b+32|0;R=c[Q>>2]|0;S=R;T=c[S>>2]|0;U=T+12|0;V=c[U>>2]|0;W=+hA[V&3](R,j,N,H,I,P,J,K);i=h;return}else{d=c[b+16>>2]|0;c[j+96>>2]=d;u=c[b+20>>2]|0;c[j+100>>2]=u;e=c[b+24>>2]|0;c[j+104>>2]=e;k=c[b+28>>2]|0;c[j+108>>2]=k;H=d;I=e;J=u;K=k;L=b+12|0;M=n?L:l;N=c[M>>2]|0;O=n?l:L;P=c[O>>2]|0;Q=b+32|0;R=c[Q>>2]|0;S=R;T=c[S>>2]|0;U=T+12|0;V=c[U>>2]|0;W=+hA[V&3](R,j,N,H,I,P,J,K);i=h;return}}function sC(a){a=a|0;KU(a);return}function sD(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,h=0,j=0,k=0,l=0,m=0.0;d=i;i=i+16|0;e=d|0;f=a+184|0;h=c[f>>2]|0;if(+g[h+4>>2]==0.0){j=0;i=d;return j|0}k=c[b>>2]|0;if(!(hx[c[(c[h>>2]|0)+8>>2]&127](h,c[k+188>>2]|0)|0)){j=1;i=d;return j|0}h=c[a+192>>2]|0;b=c[k+192>>2]|0;l=c[f>>2]|0;m=+g[a+188>>2];c[e>>2]=0;c[e+4>>2]=b;c[e+8>>2]=k;c[e+12>>2]=k+4;sb(h,a+36|0,a+100|0,e,l,m);j=1;i=d;return j|0}function sE(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,h=0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0;e=i;i=i+64|0;f=e|0;h=e+48|0;j=+g[a+20>>2];k=+g[a+40>>2];l=+g[a+24>>2];m=+g[a+36>>2];n=j*k-l*m;o=+g[a+32>>2];p=+g[a+16>>2];q=l*o-k*p;r=m*p-j*o;s=+g[a>>2];t=+g[a+4>>2];u=+g[a+8>>2];v=1.0/(n*s+t*q+r*u);w=n*v;n=v*(m*u-k*t);x=v*(l*t-j*u);y=q*v;q=v*(k*s-o*u);k=v*(p*u-l*s);l=r*v;r=v*(o*t-m*s);m=v*(j*s-p*t);t=+g[b>>2];p=+g[b+4>>2];s=+g[b+8>>2];j=+g[b+16>>2];v=+g[b+20>>2];o=+g[b+24>>2];u=+g[b+32>>2];z=+g[b+36>>2];A=+g[b+40>>2];g[f>>2]=w*t+y*p+l*s;g[f+4>>2]=t*n+p*q+r*s;g[f+8>>2]=t*x+p*k+m*s;g[f+12>>2]=0.0;g[f+16>>2]=w*j+y*v+l*o;g[f+20>>2]=n*j+q*v+r*o;g[f+24>>2]=x*j+k*v+m*o;g[f+28>>2]=0.0;g[f+32>>2]=w*u+y*z+l*A;g[f+36>>2]=n*u+q*z+r*A;g[f+40>>2]=x*u+k*z+m*A;g[f+44>>2]=0.0;i_(f,h);f=h|0;A=+g[f>>2];b=h+4|0;m=+g[b>>2];a=h+8|0;z=+g[a>>2];B=h+12|0;k=+g[B>>2];u=1.0/+W(A*A+m*m+z*z+k*k);x=A*u;g[f>>2]=x;A=m*u;g[b>>2]=A;m=z*u;g[a>>2]=m;z=k*u;g[B>>2]=z;u=z<-1.0?-1.0:z;g[d>>2]=+$(u>1.0?1.0:u)*2.0;d=c|0;g[d>>2]=x;B=c+4|0;g[B>>2]=A;a=c+8|0;g[a>>2]=m;b=c+12|0;g[b>>2]=0.0;u=x*x+A*A+m*m;if(u<1.4210854715202004e-14){g[d>>2]=1.0;g[B>>2]=0.0;g[a>>2]=0.0;g[b>>2]=0.0;i=e;return}else{z=1.0/+W(u);g[d>>2]=x*z;g[B>>2]=z*A;g[a>>2]=z*m;i=e;return}}function sF(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var h=0,i=0,j=0,k=0,l=0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0;c[a>>2]=33288;h=a+36|0;i=h;j=b;c[i>>2]=c[j>>2];c[i+4>>2]=c[j+4>>2];c[i+8>>2]=c[j+8>>2];c[i+12>>2]=c[j+12>>2];j=a+52|0;k=j;l=d;c[k>>2]=c[l>>2];c[k+4>>2]=c[l+4>>2];c[k+8>>2]=c[l+8>>2];c[k+12>>2]=c[l+12>>2];c[a+212>>2]=e;c[a+216>>2]=f;g[a+68>>2]=1.0;K1(a+72|0,0,16)|0;g[a+88>>2]=1.0;K1(a+92|0,0,16)|0;g[a+108>>2]=1.0;c[a+112>>2]=0;f=a+116|0;c[f>>2]=c[i>>2];c[f+4>>2]=c[i+4>>2];c[f+8>>2]=c[i+8>>2];c[f+12>>2]=c[i+12>>2];g[a+132>>2]=1.0;K1(a+136|0,0,16)|0;g[a+152>>2]=1.0;K1(a+156|0,0,16)|0;g[a+172>>2]=1.0;c[a+176>>2]=0;i=a+180|0;c[i>>2]=c[k>>2];c[i+4>>2]=c[k+4>>2];c[i+8>>2]=c[k+8>>2];c[i+12>>2]=c[k+12>>2];m=+g[d>>2]- +g[b>>2];n=+g[d+4>>2]- +g[b+4>>2];o=+g[d+8>>2]- +g[b+8>>2];p=1.0/+W(m*m+n*n+o*o);q=m*p;m=n*p;n=o*p;if(q==0.0){r=999999984306749400.0}else{r=1.0/q}g[a+4>>2]=r;if(m==0.0){s=999999984306749400.0}else{s=1.0/m}g[a+8>>2]=s;if(n==0.0){t=999999984306749400.0}else{t=1.0/n}g[a+12>>2]=t;c[a+20>>2]=r<0.0;c[a+24>>2]=s<0.0;c[a+28>>2]=t<0.0;g[a+32>>2]=q*(+g[j>>2]- +g[h>>2])+m*(+g[a+56>>2]- +g[a+40>>2])+n*(+g[a+60>>2]- +g[a+44>>2]);return}function sG(a){a=a|0;KU(a);return}function sH(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,h=0,j=0,k=0;d=i;i=i+16|0;e=d|0;f=a+216|0;h=c[f>>2]|0;if(+g[h+4>>2]==0.0){j=0;i=d;return j|0}k=c[b>>2]|0;if(!(hx[c[(c[h>>2]|0)+8>>2]&127](h,c[k+188>>2]|0)|0)){j=1;i=d;return j|0}h=c[k+192>>2]|0;b=c[f>>2]|0;c[e>>2]=0;c[e+4>>2]=h;c[e+8>>2]=k;c[e+12>>2]=k+4;r7(a+68|0,a+132|0,e,b);j=1;i=d;return j|0}function sI(a){a=a|0;return}function sJ(a){a=a|0;KU(a);return}function sK(a,b){a=a|0;b=b|0;var d=0;d=c[a+12>>2]|0;return hx[c[(c[d>>2]|0)+8>>2]&127](d,b)|0}function sL(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,h=0,j=0.0;e=i;i=i+8|0;f=e|0;c[f>>2]=-1;c[f+4>>2]=c[a+16>>2];h=b+4|0;if((c[h>>2]|0)==0){c[h>>2]=f}f=a+12|0;h=c[f>>2]|0;j=+hn[c[(c[h>>2]|0)+12>>2]&31](h,b,d);g[a+4>>2]=+g[(c[f>>2]|0)+4>>2];i=e;return+j}function sM(a){a=a|0;ov(a|0);return}function sN(a){a=a|0;ov(a|0);KU(a);return}function sO(a,b,d,e,f,h){a=a|0;b=b|0;d=d|0;e=+e;f=f|0;h=h|0;var j=0,k=0,l=0,m=0.0;j=i;i=i+56|0;k=j|0;l=j+8|0;c[k>>2]=f;c[k+4>>2]=h;h=c[a+212>>2]|0;if(+g[h+4>>2]<e){m=e;i=j;return+m}c[l>>2]=c[a+216>>2];c[l+4>>2]=k;k=l+8|0;a=b;c[k>>2]=c[a>>2];c[k+4>>2]=c[a+4>>2];c[k+8>>2]=c[a+8>>2];c[k+12>>2]=c[a+12>>2];a=l+24|0;k=d;c[a>>2]=c[k>>2];c[a+4>>2]=c[k+4>>2];c[a+8>>2]=c[k+8>>2];c[a+12>>2]=c[k+12>>2];g[l+40>>2]=e;m=+hn[c[(c[h>>2]|0)+12>>2]&31](h,l,0);i=j;return+m}function sP(a){a=a|0;ov(a|0);return}function sQ(a){a=a|0;ov(a|0);KU(a);return}function sR(a,b,d,e,f,h){a=a|0;b=b|0;d=d|0;e=+e;f=f|0;h=h|0;var j=0,k=0,l=0,m=0.0;j=i;i=i+56|0;k=j|0;l=j+8|0;c[k>>2]=f;c[k+4>>2]=h;h=c[a+212>>2]|0;if(+g[h+4>>2]<e){m=e;i=j;return+m}c[l>>2]=c[a+216>>2];c[l+4>>2]=k;k=l+8|0;a=b;c[k>>2]=c[a>>2];c[k+4>>2]=c[a+4>>2];c[k+8>>2]=c[a+8>>2];c[k+12>>2]=c[a+12>>2];a=l+24|0;k=d;c[a>>2]=c[k>>2];c[a+4>>2]=c[k+4>>2];c[a+8>>2]=c[k+8>>2];c[a+12>>2]=c[k+12>>2];g[l+40>>2]=e;m=+hn[c[(c[h>>2]|0)+12>>2]&31](h,l,1);i=j;return+m}function sS(a){a=a|0;return}function sT(a){a=a|0;return}function sU(a){a=a|0;KU(a);return}function sV(a,b){a=a|0;b=b|0;var d=0;d=c[a+20>>2]|0;return hx[c[(c[d>>2]|0)+8>>2]&127](d,b)|0}function sW(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,h=0,j=0.0;e=i;i=i+8|0;f=e|0;c[f>>2]=-1;c[f+4>>2]=c[a+24>>2];h=b+4|0;if((c[h>>2]|0)==0){c[h>>2]=f}f=a+20|0;h=c[f>>2]|0;j=+hn[c[(c[h>>2]|0)+12>>2]&31](h,b,d);g[a+4>>2]=+g[(c[f>>2]|0)+4>>2];i=e;return+j}function sX(a){a=a|0;KU(a);return}function sY(a,d){a=a|0;d=d|0;var e=0,f=0,h=0,j=0,k=0,l=0;e=i;i=i+112|0;f=e|0;h=e+64|0;j=e+80|0;k=c[d+36>>2]|0;d=c[(c[a+8>>2]|0)+24>>2]|0;l=c[d+(k*80|0)+64>>2]|0;j_(f,c[a+12>>2]|0,d+(k*80|0)|0);d=c[a+4>>2]|0;c[h>>2]=0;c[h+4>>2]=l;c[h+8>>2]=d;c[h+12>>2]=f;f=c[a+24>>2]|0;d=j+4|0;g[d>>2]=1.0;c[j+8>>2]=0;b[j+12>>1]=1;b[j+14>>1]=-1;l=j+16|0;c[l>>2]=0;c[j>>2]=27336;c[j+20>>2]=f;c[j+24>>2]=k;g[d>>2]=+g[f+4>>2];c[l>>2]=c[f+16>>2];r7(c[a+16>>2]|0,c[a+20>>2]|0,h,j|0);i=e;return}function sZ(a){a=a|0;ov(a|0);return}function s_(a){a=a|0;ov(a|0);KU(a);return}function s$(a,b,d,e,f){a=a|0;b=b|0;d=+d;e=e|0;f=f|0;var h=0,j=0,k=0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0;h=i;i=i+40|0;j=h|0;k=h+8|0;c[j>>2]=e;c[j+4>>2]=f;l=+g[b>>2];m=+g[b+4>>2];n=+g[b+8>>2];o=+g[a+56>>2]*l+ +g[a+60>>2]*m+ +g[a+64>>2]*n;p=l*+g[a+72>>2]+m*+g[a+76>>2]+n*+g[a+80>>2];q=l*+g[a+88>>2]+m*+g[a+92>>2]+n*+g[a+96>>2];c[k>>2]=c[a+48>>2];c[k+4>>2]=j;g[k+8>>2]=o;g[k+12>>2]=p;g[k+16>>2]=q;g[k+20>>2]=0.0;g[k+24>>2]=d;j=c[a+44>>2]|0;d=+hn[c[(c[j>>2]|0)+12>>2]&31](j,k,1);i=h;return+d}function s0(a){a=a|0;ov(a|0);return}function s1(a){a=a|0;ov(a|0);KU(a);return}function s2(a,b,d,e,f){a=a|0;b=b|0;d=+d;e=e|0;f=f|0;var h=0,j=0,k=0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0;h=i;i=i+40|0;j=h|0;k=h+8|0;c[j>>2]=e;c[j+4>>2]=f;l=+g[b>>2];m=+g[b+4>>2];n=+g[b+8>>2];o=+g[a+56>>2]*l+ +g[a+60>>2]*m+ +g[a+64>>2]*n;p=l*+g[a+72>>2]+m*+g[a+76>>2]+n*+g[a+80>>2];q=l*+g[a+88>>2]+m*+g[a+92>>2]+n*+g[a+96>>2];c[k>>2]=c[a+48>>2];c[k+4>>2]=j;g[k+8>>2]=o;g[k+12>>2]=p;g[k+16>>2]=q;g[k+20>>2]=0.0;g[k+24>>2]=d;j=c[a+44>>2]|0;d=+hn[c[(c[j>>2]|0)+12>>2]&31](j,k,1);i=h;return+d}function s3(a,b){a=a|0;b=+b;return}function s4(a,b){a=a|0;b=b|0;return}function s5(a,b,c){a=a|0;b=b|0;c=c|0;return}function s6(a){a=a|0;KU(a);return}function s7(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;rf(b|0,d,e,f);c[b>>2]=31424;a[b+24|0]=1;c[b+20>>2]=0;c[b+12>>2]=0;c[b+16>>2]=0;a[b+28|0]=g&1;c[b+32>>2]=c[d+4>>2];a[b+36|0]=0;c[b+40>>2]=c[(c[(g?f:e)+4>>2]|0)+68>>2];s8(b,e,f);return}function s8(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;f=i;i=i+16|0;g=f|0;h=(a[b+28|0]&1)!=0;j=h?e:d;k=h?d:e;e=c[j+4>>2]|0;d=c[e+16>>2]|0;h=b+12|0;l=c[h>>2]|0;if((l|0)<(d|0)){m=b+16|0;if((c[m>>2]|0)<(d|0)){if((d|0)==0){n=0;o=l}else{p=zv(d<<2,16)|0;n=p;o=c[h>>2]|0}p=b+20|0;if((o|0)>0){q=0;do{r=n+(q<<2)|0;if((r|0)!=0){c[r>>2]=c[(c[p>>2]|0)+(q<<2)>>2]}q=q+1|0;}while((q|0)<(o|0))}o=c[p>>2]|0;q=b+24|0;if((o|0)!=0){if((a[q]&1)!=0){zw(o)}c[p>>2]=0}a[q]=1;c[p>>2]=n;c[m>>2]=d;s=p}else{s=b+20|0}p=l;do{l=(c[s>>2]|0)+(p<<2)|0;if((l|0)!=0){c[l>>2]=0}p=p+1|0;}while((p|0)<(d|0))}c[h>>2]=d;if((d|0)<=0){i=f;return}h=e+64|0;p=e+24|0;e=j+8|0;s=j+12|0;l=g|0;m=g+4|0;n=g+8|0;q=g+12|0;o=b+4|0;r=b+32|0;t=b+20|0;b=0;do{if((c[h>>2]|0)==0){u=c[(c[p>>2]|0)+(b*80|0)+64>>2]|0;v=c[e>>2]|0;w=c[s>>2]|0;c[l>>2]=j;c[m>>2]=u;c[n>>2]=v;c[q>>2]=w;w=c[o>>2]|0;v=hD[c[(c[w>>2]|0)+8>>2]&63](w,g,k,c[r>>2]|0)|0;c[(c[t>>2]|0)+(b<<2)>>2]=v}else{c[(c[t>>2]|0)+(b<<2)>>2]=0}b=b+1|0;}while((b|0)<(d|0));i=f;return}function s9(a){a=a|0;ta(a);KU(a);return}function ta(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0;c[b>>2]=31424;d=b+12|0;e=c[d>>2]|0;f=b+20|0;if((e|0)>0){g=b+4|0;h=0;do{i=c[(c[f>>2]|0)+(h<<2)>>2]|0;if((i|0)!=0){g$[c[c[i>>2]>>2]&1023](i);i=c[g>>2]|0;g0[c[(c[i>>2]|0)+60>>2]&511](i,c[(c[f>>2]|0)+(h<<2)>>2]|0)}h=h+1|0;}while((h|0)<(e|0))}e=c[f>>2]|0;h=b+24|0;if((e|0)==0){a[h]=1;c[f>>2]=0;c[d>>2]=0;j=b+16|0;c[j>>2]=0;k=b|0;rh(k);return}if((a[h]&1)!=0){zw(e)}c[f>>2]=0;a[h]=1;c[f>>2]=0;c[d>>2]=0;j=b+16|0;c[j>>2]=0;k=b|0;rh(k);return}function tb(b,d,e,f,h){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0.0,W=0.0,X=0.0,Y=0.0,Z=0.0,_=0.0,$=0.0,aa=0.0,ab=0.0,ac=0.0,ad=0.0,ae=0.0,af=0.0,ag=0.0,ah=0.0,ai=0.0,aj=0.0,ak=0.0,al=0.0,am=0.0,an=0.0,ao=0.0,ap=0.0,aq=0.0,ar=0,as=0,at=0,au=0;j=i;i=i+312|0;k=j|0;l=j+32|0;m=j+56|0;n=j+72|0;o=j+88|0;p=j+152|0;q=j+184|0;r=j+248|0;s=j+264|0;t=j+280|0;u=j+296|0;v=(a[b+28|0]&1)!=0;w=v?e:d;x=v?d:e;v=c[w+4>>2]|0;y=b+12|0;if((c[v+68>>2]|0)!=(c[b+40>>2]|0)){z=c[y>>2]|0;if((z|0)>0){A=b+20|0;B=b+4|0;C=0;do{D=c[(c[A>>2]|0)+(C<<2)>>2]|0;if((D|0)!=0){g$[c[c[D>>2]>>2]&1023](D);D=c[B>>2]|0;g0[c[(c[D>>2]|0)+60>>2]&511](D,c[(c[A>>2]|0)+(C<<2)>>2]|0)}C=C+1|0;}while((C|0)<(z|0))}s8(b,d,e)}e=c[v+64>>2]|0;d=b+4|0;z=c[d>>2]|0;C=b+20|0;A=c[C>>2]|0;B=c[b+32>>2]|0;c[k>>2]=32448;c[k+4>>2]=w;c[k+8>>2]=x;c[k+12>>2]=z;c[k+16>>2]=f;c[k+20>>2]=h;c[k+24>>2]=A;c[k+28>>2]=B;B=l+16|0;a[B]=1;f=l+12|0;c[f>>2]=0;z=l+4|0;c[z>>2]=0;b=l+8|0;c[b>>2]=0;D=c[y>>2]|0;do{if((D|0)>0){E=h+4|0;F=h+8|0;G=h+12|0;H=0;I=D;J=A;while(1){K=c[J+(H<<2)>>2]|0;if((K|0)==0){L=I}else{g0[c[(c[K>>2]|0)+16>>2]&511](K,l);K=c[z>>2]|0;if((K|0)>0){M=0;N=K;while(1){O=c[(c[f>>2]|0)+(M<<2)>>2]|0;P=O+748|0;if((c[P>>2]|0)==0){Q=N}else{c[E>>2]=O;do{if((c[P>>2]|0)!=0){R=c[O+740>>2]|0;S=c[(c[F>>2]|0)+8>>2]|0;if((R|0)==(S|0)){vX(O,R+4|0,(c[(c[G>>2]|0)+8>>2]|0)+4|0);break}else{vX(O,(c[(c[G>>2]|0)+8>>2]|0)+4|0,S+4|0);break}}}while(0);c[E>>2]=0;Q=c[z>>2]|0}O=M+1|0;if((O|0)<(Q|0)){M=O;N=Q}else{T=Q;break}}}else{T=K}if((T|0)<0){if((c[b>>2]|0)<0){N=c[f>>2]|0;if((T|0)>0){M=0;do{if((M|0)!=0){c[M<<2>>2]=c[N+(M<<2)>>2]}M=M+1|0;}while((M|0)<(T|0))}if((N|0)!=0){if((a[B]&1)!=0){zw(N)}c[f>>2]=0}a[B]=1;c[f>>2]=0;c[b>>2]=0;U=T}else{U=T}do{M=(c[f>>2]|0)+(U<<2)|0;if((M|0)!=0){c[M>>2]=0}U=U+1|0;}while((U|0)<0)}c[z>>2]=0;L=c[y>>2]|0}N=H+1|0;if((N|0)>=(L|0)){break}H=N;I=L;J=c[C>>2]|0}J=c[f>>2]|0;if((J|0)==0){break}if((a[B]&1)!=0){zw(J)}c[f>>2]=0}}while(0);a[B]=1;c[f>>2]=0;c[z>>2]=0;c[b>>2]=0;if((e|0)==0){b=c[y>>2]|0;if((b|0)<=0){i=j;return}z=v+24|0;f=0;do{tc(k,c[(c[z>>2]|0)+(f*80|0)+64>>2]|0,f);f=f+1|0;}while((f|0)<(b|0))}else{b=c[w+12>>2]|0;V=+g[b>>2];W=+g[b+16>>2];X=+g[b+32>>2];Y=+g[b+4>>2];Z=+g[b+20>>2];_=+g[b+36>>2];$=+g[b+8>>2];aa=+g[b+24>>2];ab=+g[b+40>>2];ac=-0.0- +g[b+48>>2];ad=-0.0- +g[b+52>>2];ae=-0.0- +g[b+56>>2];b=c[x+12>>2]|0;af=+g[b>>2];ag=+g[b+16>>2];ah=+g[b+32>>2];ai=+g[b+4>>2];aj=+g[b+20>>2];ak=+g[b+36>>2];al=+g[b+8>>2];am=+g[b+24>>2];an=+g[b+40>>2];ao=+g[b+48>>2];ap=+g[b+52>>2];aq=+g[b+56>>2];g[o>>2]=V*af+W*ag+X*ah;g[o+4>>2]=V*ai+W*aj+X*ak;g[o+8>>2]=V*al+W*am+X*an;g[o+12>>2]=0.0;g[o+16>>2]=Y*af+Z*ag+_*ah;g[o+20>>2]=Y*ai+Z*aj+_*ak;g[o+24>>2]=Y*al+Z*am+_*an;g[o+28>>2]=0.0;g[o+32>>2]=$*af+aa*ag+ab*ah;g[o+36>>2]=$*ai+aa*aj+ab*ak;g[o+40>>2]=$*al+aa*am+ab*an;g[o+44>>2]=0.0;g[o+48>>2]=V*ac+W*ad+X*ae+(V*ao+W*ap+X*aq);g[o+52>>2]=Y*ac+Z*ad+_*ae+(Y*ao+Z*ap+_*aq);g[o+56>>2]=$*ac+aa*ad+ab*ae+($*ao+aa*ap+ab*aq);g[o+60>>2]=0.0;b=c[x+4>>2]|0;hM[c[(c[b>>2]|0)+8>>2]&255](b,o,m,n);o=p;b=m;c[o>>2]=c[b>>2];c[o+4>>2]=c[b+4>>2];c[o+8>>2]=c[b+8>>2];c[o+12>>2]=c[b+12>>2];b=p+16|0;o=n;c[b>>2]=c[o>>2];c[b+4>>2]=c[o+4>>2];c[b+8>>2]=c[o+8>>2];c[b+12>>2]=c[o+12>>2];p3(0,c[e>>2]|0,p,k|0)}k=c[y>>2]|0;if((k|0)<=0){i=j;return}y=v+24|0;v=w+12|0;w=q|0;p=q+4|0;e=q+8|0;o=q+12|0;b=q+16|0;n=q+20|0;m=q+24|0;f=q+28|0;z=q+32|0;B=q+36|0;L=q+40|0;U=q+44|0;T=q+48|0;Q=q+52|0;l=q+56|0;A=q+60|0;D=x+4|0;h=x+12|0;x=r|0;J=u|0;I=r+8|0;H=u+8|0;E=r+4|0;G=u+4|0;F=s+4|0;N=t+4|0;M=s+8|0;K=t+8|0;O=s|0;P=t|0;S=0;do{do{if((c[(c[C>>2]|0)+(S<<2)>>2]|0)!=0){R=c[y>>2]|0;ar=c[R+(S*80|0)+64>>2]|0;as=c[v>>2]|0;aq=+g[as>>2];ab=+g[as+4>>2];ap=+g[as+8>>2];aa=+g[as+16>>2];ao=+g[as+20>>2];$=+g[as+24>>2];ae=+g[as+32>>2];ad=+g[as+36>>2];ac=+g[as+40>>2];_=+g[R+(S*80|0)>>2];Z=+g[R+(S*80|0)+16>>2];Y=+g[R+(S*80|0)+32>>2];X=+g[R+(S*80|0)+4>>2];W=+g[R+(S*80|0)+20>>2];V=+g[R+(S*80|0)+36>>2];an=+g[R+(S*80|0)+8>>2];am=+g[R+(S*80|0)+24>>2];al=+g[R+(S*80|0)+40>>2];ak=+g[R+(S*80|0)+48>>2];aj=+g[R+(S*80|0)+52>>2];ai=+g[R+(S*80|0)+56>>2];ah=+g[as+48>>2]+(aq*ak+ab*aj+ap*ai);ag=+g[as+52>>2]+(aa*ak+ao*aj+$*ai);af=+g[as+56>>2]+(ae*ak+ad*aj+ac*ai);g[w>>2]=aq*_+ab*Z+ap*Y;g[p>>2]=aq*X+ab*W+ap*V;g[e>>2]=aq*an+ab*am+ap*al;g[o>>2]=0.0;g[b>>2]=aa*_+ao*Z+$*Y;g[n>>2]=aa*X+ao*W+$*V;g[m>>2]=aa*an+ao*am+$*al;g[f>>2]=0.0;g[z>>2]=ae*_+ad*Z+ac*Y;g[B>>2]=ae*X+ad*W+ac*V;g[L>>2]=ae*an+ad*am+ac*al;g[U>>2]=0.0;g[T>>2]=ah;g[Q>>2]=ag;g[l>>2]=af;g[A>>2]=0.0;hM[c[(c[ar>>2]|0)+8>>2]&255](ar,q,r,s);ar=c[D>>2]|0;hM[c[(c[ar>>2]|0)+8>>2]&255](ar,c[h>>2]|0,t,u);do{if(+g[x>>2]>+g[J>>2]){at=0}else{if(+g[O>>2]<+g[P>>2]){at=0;break}at=1}}while(0);do{if(+g[I>>2]>+g[H>>2]){au=0}else{if(+g[M>>2]<+g[K>>2]){au=0;break}au=at}}while(0);if(+g[E>>2]<=+g[G>>2]){if(!(+g[F>>2]<+g[N>>2]|au^1)){break}}ar=c[(c[C>>2]|0)+(S<<2)>>2]|0;g$[c[c[ar>>2]>>2]&1023](ar);ar=c[d>>2]|0;g0[c[(c[ar>>2]|0)+60>>2]&511](ar,c[(c[C>>2]|0)+(S<<2)>>2]|0);c[(c[C>>2]|0)+(S<<2)>>2]=0}}while(0);S=S+1|0;}while((S|0)<(k|0));i=j;return}function tc(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0,I=0.0,J=0.0,K=0.0,L=0.0,M=0.0,N=0.0,O=0.0,P=0,Q=0,R=0,S=0;e=i;i=i+144|0;f=e|0;h=e+64|0;j=e+80|0;k=e+96|0;l=e+112|0;m=e+128|0;n=a+4|0;o=c[n>>2]|0;p=c[o+12>>2]|0;q=+g[p>>2];r=+g[p+4>>2];s=+g[p+8>>2];t=+g[p+16>>2];u=+g[p+20>>2];v=+g[p+24>>2];w=+g[p+32>>2];x=+g[p+36>>2];y=+g[p+40>>2];z=c[(c[o+4>>2]|0)+24>>2]|0;A=+g[z+(d*80|0)>>2];B=+g[z+(d*80|0)+16>>2];C=+g[z+(d*80|0)+32>>2];D=+g[z+(d*80|0)+4>>2];E=+g[z+(d*80|0)+20>>2];F=+g[z+(d*80|0)+36>>2];G=+g[z+(d*80|0)+8>>2];H=+g[z+(d*80|0)+24>>2];I=+g[z+(d*80|0)+40>>2];J=+g[z+(d*80|0)+48>>2];K=+g[z+(d*80|0)+52>>2];L=+g[z+(d*80|0)+56>>2];M=+g[p+48>>2]+(q*J+r*K+s*L);N=+g[p+52>>2]+(t*J+u*K+v*L);O=+g[p+56>>2]+(w*J+x*K+y*L);g[f>>2]=q*A+r*B+s*C;g[f+4>>2]=q*D+r*E+s*F;g[f+8>>2]=q*G+r*H+s*I;g[f+12>>2]=0.0;g[f+16>>2]=t*A+u*B+v*C;g[f+20>>2]=t*D+u*E+v*F;g[f+24>>2]=t*G+u*H+v*I;g[f+28>>2]=0.0;g[f+32>>2]=w*A+x*B+y*C;g[f+36>>2]=w*D+x*E+y*F;g[f+40>>2]=w*G+x*H+y*I;g[f+44>>2]=0.0;g[f+48>>2]=M;g[f+52>>2]=N;g[f+56>>2]=O;g[f+60>>2]=0.0;hM[c[(c[b>>2]|0)+8>>2]&255](b,f,h,j);p=a+8|0;z=c[p>>2]|0;o=c[z+4>>2]|0;hM[c[(c[o>>2]|0)+8>>2]&255](o,c[z+12>>2]|0,k,l);do{if(+g[h>>2]>+g[l>>2]){P=0}else{if(+g[j>>2]<+g[k>>2]){P=0;break}P=1}}while(0);do{if(+g[h+8>>2]>+g[l+8>>2]){Q=0}else{if(+g[j+8>>2]<+g[k+8>>2]){Q=0;break}Q=P}}while(0);if(+g[h+4>>2]>+g[l+4>>2]){i=e;return}if(+g[j+4>>2]<+g[k+4>>2]|Q^1){i=e;return}Q=c[n>>2]|0;k=c[Q+8>>2]|0;c[m>>2]=Q;c[m+4>>2]=b;c[m+8>>2]=k;c[m+12>>2]=f;f=a+24|0;if((c[(c[f>>2]|0)+(d<<2)>>2]|0)==0){k=c[a+12>>2]|0;b=hD[c[(c[k>>2]|0)+8>>2]&63](k,m,c[p>>2]|0,c[a+28>>2]|0)|0;c[(c[f>>2]|0)+(d<<2)>>2]=b;R=c[n>>2]|0}else{R=Q}Q=a+20|0;b=c[Q>>2]|0;k=b+8|0;j=c[k>>2]|0;if((c[j+8>>2]|0)==(c[R+8>>2]|0)){c[k>>2]=m;k=c[Q>>2]|0;hF[c[(c[k>>2]|0)+8>>2]&255](k,-1,d);S=j}else{j=b+12|0;b=c[j>>2]|0;c[j>>2]=m;j=c[Q>>2]|0;hF[c[(c[j>>2]|0)+12>>2]&255](j,-1,d);S=b}b=c[(c[f>>2]|0)+(d<<2)>>2]|0;g7[c[(c[b>>2]|0)+8>>2]&127](b,m,c[p>>2]|0,c[a+16>>2]|0,c[Q>>2]|0);a=c[Q>>2]|0;Q=a+8|0;if((c[(c[Q>>2]|0)+8>>2]|0)==(c[(c[n>>2]|0)+8>>2]|0)){c[Q>>2]=S;i=e;return}else{c[a+12>>2]=S;i=e;return}}function td(a){a=a|0;return}function te(b,d,e,f,h){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;var i=0,j=0,k=0,l=0.0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0,I=0.0,J=0.0,K=0.0,L=0.0,M=0.0,N=0.0,O=0.0,P=0.0,Q=0.0,R=0.0,S=0.0,T=0,U=0.0,V=0.0,W=0.0,X=0.0,Y=0.0,Z=0.0,_=0.0,$=0.0,aa=0.0,ab=0.0,ac=0.0,ad=0.0;i=(a[b+28|0]&1)!=0;j=i?e:d;k=i?d:e;e=c[b+12>>2]|0;if((e|0)<=0){l=1.0;return+l}d=j+4|0;i=j+8|0;m=j+12|0;n=j+16|0;o=j+20|0;p=j+24|0;q=j+28|0;r=j+32|0;s=j+36|0;t=j+40|0;u=j+44|0;v=j+48|0;w=j+52|0;x=j+56|0;y=j+60|0;z=j+64|0;A=(c[j+192>>2]|0)+24|0;B=b+20|0;C=+g[d>>2];D=+g[i>>2];E=+g[m>>2];F=+g[n>>2];G=+g[o>>2];H=+g[p>>2];I=+g[q>>2];J=+g[r>>2];K=+g[s>>2];L=+g[t>>2];M=+g[u>>2];N=+g[v>>2];O=+g[w>>2];P=+g[x>>2];Q=+g[y>>2];R=+g[z>>2];b=0;S=1.0;while(1){T=c[A>>2]|0;U=+g[T+(b*80|0)>>2];V=+g[T+(b*80|0)+16>>2];W=+g[T+(b*80|0)+32>>2];X=+g[T+(b*80|0)+4>>2];Y=+g[T+(b*80|0)+20>>2];Z=+g[T+(b*80|0)+36>>2];_=+g[T+(b*80|0)+8>>2];$=+g[T+(b*80|0)+24>>2];aa=+g[T+(b*80|0)+40>>2];ab=+g[T+(b*80|0)+48>>2];ac=+g[T+(b*80|0)+52>>2];ad=+g[T+(b*80|0)+56>>2];g[d>>2]=C*U+D*V+E*W;g[i>>2]=C*X+D*Y+E*Z;g[m>>2]=C*_+D*$+E*aa;g[n>>2]=0.0;g[o>>2]=G*U+H*V+I*W;g[p>>2]=G*X+H*Y+I*Z;g[q>>2]=G*_+H*$+I*aa;g[r>>2]=0.0;g[s>>2]=K*U+L*V+M*W;g[t>>2]=K*X+L*Y+M*Z;g[u>>2]=K*_+L*$+M*aa;g[v>>2]=0.0;g[w>>2]=O+(C*ab+D*ac+E*ad);g[x>>2]=P+(G*ab+H*ac+I*ad);g[y>>2]=Q+(K*ab+L*ac+M*ad);g[z>>2]=0.0;T=c[(c[B>>2]|0)+(b<<2)>>2]|0;ad=+hq[c[(c[T>>2]|0)+12>>2]&31](T,j,k,f,h);ac=ad<S?ad:S;g[d>>2]=C;g[i>>2]=D;g[m>>2]=E;g[n>>2]=F;g[o>>2]=G;g[p>>2]=H;g[q>>2]=I;g[r>>2]=J;g[s>>2]=K;g[t>>2]=L;g[u>>2]=M;g[v>>2]=N;g[w>>2]=O;g[x>>2]=P;g[y>>2]=Q;g[z>>2]=R;T=b+1|0;if((T|0)<(e|0)){b=T;S=ac}else{l=ac;break}}return+l}function tf(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=a+12|0;e=c[d>>2]|0;if((e|0)<=0){return}f=a+20|0;a=0;g=e;while(1){e=c[(c[f>>2]|0)+(a<<2)>>2]|0;if((e|0)==0){h=g}else{g0[c[(c[e>>2]|0)+16>>2]&511](e,b);h=c[d>>2]|0}e=a+1|0;if((e|0)<(h|0)){a=e;g=h}else{break}}return}function tg(a){a=a|0;KU(a);return}function th(a,b){a=a|0;b=b|0;var d=0;d=c[b+36>>2]|0;tc(a,c[(c[(c[(c[a+4>>2]|0)+4>>2]|0)+24>>2]|0)+(d*80|0)+64>>2]|0,d);return}function ti(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0;rf(b|0,d,e,f);c[b>>2]=30992;a[b+8|0]=g&1;h=c[d>>2]|0;c[b+12>>2]=31752;d=b+60|0;c[d>>2]=h;c[b+64>>2]=0;i=g?f:e;c[b+16>>2]=i;j=g?e:f;c[b+20>>2]=j;f=hd[c[(c[h>>2]|0)+12>>2]&127](h,c[i+8>>2]|0,c[j+8>>2]|0)|0;c[b+76>>2]=f;b=c[d>>2]|0;g0[c[(c[b>>2]|0)+20>>2]&511](b,f);return}function tj(a){a=a|0;var b=0,d=0,e=0,f=0;c[a>>2]=30992;b=a+12|0;c[b>>2]=31752;d=a+60|0;e=c[d>>2]|0;f=a+76|0;g0[c[(c[e>>2]|0)+20>>2]&511](e,c[f>>2]|0);e=c[d>>2]|0;g0[c[(c[e>>2]|0)+16>>2]&511](e,c[f>>2]|0);ov(b|0);rh(a|0);KU(a);return}function tk(a){a=a|0;var b=0,d=0,e=0,f=0;c[a>>2]=30992;b=a+12|0;c[b>>2]=31752;d=a+60|0;e=c[d>>2]|0;f=a+76|0;g0[c[(c[e>>2]|0)+20>>2]&511](e,c[f>>2]|0);e=c[d>>2]|0;g0[c[(c[e>>2]|0)+16>>2]&511](e,c[f>>2]|0);ov(b|0);rh(a|0);return}function tl(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;e=b+76|0;if((c[e>>2]|0)==0){return}b=d+4|0;f=c[b>>2]|0;g=d+8|0;do{if((f|0)==(c[g>>2]|0)){h=(f|0)==0?1:f<<1;if((f|0)>=(h|0)){i=f;break}if((h|0)==0){j=0;k=f}else{l=zv(h<<2,16)|0;j=l;k=c[b>>2]|0}l=d+12|0;if((k|0)>0){m=0;do{n=j+(m<<2)|0;if((n|0)!=0){c[n>>2]=c[(c[l>>2]|0)+(m<<2)>>2]}m=m+1|0;}while((m|0)<(k|0))}m=c[l>>2]|0;n=d+16|0;if((m|0)!=0){if((a[n]&1)!=0){zw(m)}c[l>>2]=0}a[n]=1;c[l>>2]=j;c[g>>2]=h;i=c[b>>2]|0}else{i=f}}while(0);f=(c[d+12>>2]|0)+(i<<2)|0;if((f|0)==0){o=i}else{c[f>>2]=c[e>>2];o=c[b>>2]|0}c[b>>2]=o+1;return}function tm(a){a=a|0;var b=0,d=0,e=0;c[a>>2]=31752;b=a+48|0;d=c[b>>2]|0;e=a+64|0;g0[c[(c[d>>2]|0)+20>>2]&511](d,c[e>>2]|0);d=c[b>>2]|0;g0[c[(c[d>>2]|0)+16>>2]&511](d,c[e>>2]|0);ov(a|0);KU(a);return}function tn(a){a=a|0;var b=0,d=0,e=0;c[a>>2]=31752;b=a+48|0;d=c[b>>2]|0;e=a+64|0;g0[c[(c[d>>2]|0)+20>>2]&511](d,c[e>>2]|0);d=c[b>>2]|0;g0[c[(c[d>>2]|0)+16>>2]&511](d,c[e>>2]|0);ov(a|0);return}function to(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;f=i;i=i+120|0;h=f|0;j=f+104|0;k=c[a+48>>2]|0;l=a+4|0;if((c[(c[(c[l>>2]|0)+4>>2]|0)+4>>2]|0)>=20){i=f;return}m=h|0;n6(m);c[h>>2]=34136;c[h+4>>2]=1;n=h+56|0;o=b;c[n>>2]=c[o>>2];c[n+4>>2]=c[o+4>>2];c[n+8>>2]=c[o+8>>2];c[n+12>>2]=c[o+12>>2];o=h+72|0;n=b+16|0;c[o>>2]=c[n>>2];c[o+4>>2]=c[n+4>>2];c[o+8>>2]=c[n+8>>2];c[o+12>>2]=c[n+12>>2];n=h+88|0;o=b+32|0;c[n>>2]=c[o>>2];c[n+4>>2]=c[o+4>>2];c[n+8>>2]=c[o+8>>2];c[n+12>>2]=c[o+12>>2];g[h+44>>2]=+g[a+56>>2];o=a+8|0;n=c[o>>2]|0;b=c[n+8>>2]|0;p=c[n+12>>2]|0;c[j>>2]=n;c[j+4>>2]=h;c[j+8>>2]=b;c[j+12>>2]=p;p=hD[c[(c[k>>2]|0)+8>>2]&63](k,c[l>>2]|0,j,c[a+64>>2]|0)|0;b=a+44|0;h=c[b>>2]|0;n=h+8|0;q=c[n>>2]|0;if((c[q+8>>2]|0)==(c[(c[o>>2]|0)+8>>2]|0)){c[n>>2]=j;n=c[b>>2]|0;hF[c[(c[n>>2]|0)+8>>2]&255](n,d,e);r=q}else{q=h+12|0;h=c[q>>2]|0;c[q>>2]=j;q=c[b>>2]|0;hF[c[(c[q>>2]|0)+12>>2]&255](q,d,e);r=h}g7[c[(c[p>>2]|0)+8>>2]&127](p,c[l>>2]|0,j,c[a+52>>2]|0,c[b>>2]|0);a=c[b>>2]|0;b=a+8|0;if((c[(c[b>>2]|0)+8>>2]|0)==(c[(c[o>>2]|0)+8>>2]|0)){c[b>>2]=r}else{c[a+12>>2]=r}g$[c[c[p>>2]>>2]&1023](p);g0[c[(c[k>>2]|0)+60>>2]&511](k,p);n8(m);i=f;return}function tp(a,b,d,e,f,h){a=a|0;b=+b;d=d|0;e=e|0;f=f|0;h=h|0;var j=0,k=0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0,I=0.0;j=i;i=i+64|0;k=j|0;c[a+4>>2]=e;c[a+8>>2]=f;c[a+52>>2]=d;g[a+56>>2]=b;c[a+44>>2]=h;h=c[f+12>>2]|0;l=+g[h>>2];m=+g[h+16>>2];n=+g[h+32>>2];o=+g[h+4>>2];p=+g[h+20>>2];q=+g[h+36>>2];r=+g[h+8>>2];s=+g[h+24>>2];t=+g[h+40>>2];u=-0.0- +g[h+48>>2];v=-0.0- +g[h+52>>2];w=-0.0- +g[h+56>>2];h=c[e+12>>2]|0;x=+g[h>>2];y=+g[h+16>>2];z=+g[h+32>>2];A=+g[h+4>>2];B=+g[h+20>>2];C=+g[h+36>>2];D=+g[h+8>>2];E=+g[h+24>>2];F=+g[h+40>>2];G=+g[h+48>>2];H=+g[h+52>>2];I=+g[h+56>>2];g[k>>2]=l*x+m*y+n*z;g[k+4>>2]=l*A+m*B+n*C;g[k+8>>2]=l*D+m*E+n*F;g[k+12>>2]=0.0;g[k+16>>2]=o*x+p*y+q*z;g[k+20>>2]=o*A+p*B+q*C;g[k+24>>2]=o*D+p*E+q*F;g[k+28>>2]=0.0;g[k+32>>2]=r*x+s*y+t*z;g[k+36>>2]=r*A+s*B+t*C;g[k+40>>2]=r*D+s*E+t*F;g[k+44>>2]=0.0;g[k+48>>2]=l*u+m*v+n*w+(l*G+m*H+n*I);g[k+52>>2]=o*u+p*v+q*w+(o*G+p*H+q*I);g[k+56>>2]=r*u+s*v+t*w+(r*G+s*H+t*I);g[k+60>>2]=0.0;h=c[e+4>>2]|0;e=a+12|0;f=a+28|0;hM[c[(c[h>>2]|0)+8>>2]&255](h,k,e,f);k=f|0;g[k>>2]=+g[k>>2]+b;k=a+32|0;g[k>>2]=+g[k>>2]+b;k=a+36|0;g[k>>2]=+g[k>>2]+b;k=e|0;g[k>>2]=+g[k>>2]-b;k=a+16|0;g[k>>2]=+g[k>>2]-b;k=a+20|0;g[k>>2]=+g[k>>2]-b;i=j;return}function tq(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0.0,l=0,m=0;h=(a[b+8|0]&1)!=0;i=h?e:d;j=h?d:e;e=c[j+4>>2]|0;if(((c[e+4>>2]|0)-21|0)>>>0>=9>>>0){return}d=e;if((c[(c[i+4>>2]|0)+4>>2]|0)>=20){return}k=+g6[c[(c[e>>2]|0)+48>>2]&15](d);h=b+12|0;l=b+76|0;m=g+4|0;c[m>>2]=c[l>>2];tp(h,k,f,i,j,g);f=c[l>>2]|0;l=c[j+8>>2]|0;c[f+740>>2]=c[i+8>>2];c[f+744>>2]=l;hM[c[(c[e>>2]|0)+64>>2]&255](d,h|0,b+24|0,b+40|0);h=c[m>>2]|0;do{if((c[h+748>>2]|0)!=0){m=c[h+740>>2]|0;d=c[(c[g+8>>2]|0)+8>>2]|0;if((m|0)==(d|0)){vX(h,m+4|0,(c[(c[g+12>>2]|0)+8>>2]|0)+4|0);break}else{vX(h,(c[(c[g+12>>2]|0)+8>>2]|0)+4|0,d+4|0);break}}}while(0);c[b+16>>2]=0;c[b+20>>2]=0;return}function tr(b,d,e,f,h){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;var j=0,k=0,l=0,m=0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0,I=0.0,J=0.0,K=0.0,L=0.0,M=0.0,N=0.0,O=0.0,P=0.0,Q=0.0,R=0.0,S=0.0,T=0.0,U=0.0,V=0.0,W=0.0,X=0.0,Y=0.0,Z=0.0,_=0.0,$=0.0,aa=0,ab=0,ac=0,ad=0.0,ae=0.0,af=0.0;h=i;i=i+240|0;f=h|0;j=h+16|0;k=h+32|0;l=(a[b+8|0]&1)!=0;b=l?e:d;m=l?d:e;n=+g[b+116>>2];o=+g[b+52>>2];p=n-o;q=+g[b+120>>2];r=+g[b+56>>2];s=q-r;t=+g[b+124>>2];u=+g[b+60>>2];v=t-u;w=+g[b+252>>2];if(p*p+s*s+v*v<w*w){x=1.0;i=h;return+x}w=+g[m+4>>2];v=+g[m+20>>2];s=+g[m+36>>2];p=+g[m+8>>2];y=+g[m+24>>2];z=+g[m+40>>2];A=+g[m+12>>2];B=+g[m+28>>2];C=+g[m+44>>2];D=-0.0- +g[m+52>>2];E=-0.0- +g[m+56>>2];F=-0.0- +g[m+60>>2];G=w*D+v*E+s*F;H=p*D+y*E+z*F;I=A*D+B*E+C*F;F=+g[b+4>>2];E=+g[b+20>>2];D=+g[b+36>>2];J=+g[b+8>>2];K=+g[b+24>>2];L=+g[b+40>>2];M=+g[b+12>>2];N=+g[b+28>>2];O=+g[b+44>>2];P=G+(w*o+v*r+s*u);Q=H+(p*o+y*r+z*u);R=I+(A*o+B*r+C*u);u=+g[b+68>>2];r=+g[b+84>>2];o=+g[b+100>>2];S=+g[b+72>>2];T=+g[b+88>>2];U=+g[b+104>>2];V=+g[b+76>>2];W=+g[b+92>>2];X=+g[b+108>>2];Y=G+(w*n+v*q+s*t);G=H+(p*n+y*q+z*t);H=I+(A*n+B*q+C*t);e=c[m+192>>2]|0;if(((c[e+4>>2]|0)-21|0)>>>0>=9>>>0){x=1.0;i=h;return+x}m=f|0;g[m>>2]=P;d=f+4|0;g[d>>2]=Q;l=f+8|0;g[l>>2]=R;g[f+12>>2]=0.0;if(Y<P){g[m>>2]=Y;Z=Y}else{Z=P}if(G<Q){g[d>>2]=G;_=G}else{_=Q}if(H<R){g[l>>2]=H;$=H}else{$=R}aa=j|0;g[aa>>2]=P;ab=j+4|0;g[ab>>2]=Q;ac=j+8|0;g[ac>>2]=R;g[j+12>>2]=0.0;if(P<Y){g[aa>>2]=Y;ad=Y}else{ad=P}if(Q<G){g[ab>>2]=G;ae=G}else{ae=Q}if(R<H){g[ac>>2]=H;af=H}else{af=R}t=+g[b+248>>2];g[m>>2]=Z-t;g[d>>2]=_-t;g[l>>2]=$-t;g[aa>>2]=t+ad;g[ab>>2]=t+ae;g[ac>>2]=t+af;c[k>>2]=26888;g[k+4>>2]=w*F+v*E+s*D;g[k+8>>2]=w*J+v*K+s*L;g[k+12>>2]=w*M+v*N+s*O;g[k+16>>2]=0.0;g[k+20>>2]=p*F+y*E+z*D;g[k+24>>2]=p*J+y*K+z*L;g[k+28>>2]=p*M+y*N+z*O;g[k+32>>2]=0.0;g[k+36>>2]=A*F+B*E+C*D;g[k+40>>2]=A*J+B*K+C*L;g[k+44>>2]=A*M+B*N+C*O;g[k+48>>2]=0.0;g[k+52>>2]=P;g[k+56>>2]=Q;g[k+60>>2]=R;g[k+64>>2]=0.0;g[k+68>>2]=w*u+v*r+s*o;g[k+72>>2]=w*S+v*T+s*U;g[k+76>>2]=w*V+v*W+s*X;g[k+80>>2]=0.0;g[k+84>>2]=p*u+y*r+z*o;g[k+88>>2]=p*S+y*T+z*U;g[k+92>>2]=p*V+y*W+z*X;g[k+96>>2]=0.0;g[k+100>>2]=A*u+B*r+C*o;g[k+104>>2]=A*S+B*T+C*U;g[k+108>>2]=A*V+B*W+C*X;g[k+112>>2]=0.0;g[k+116>>2]=Y;g[k+120>>2]=G;g[k+124>>2]=H;g[k+128>>2]=0.0;g[k+196>>2]=t;ac=k+200|0;ab=b+244|0;g[ac>>2]=+g[ab>>2];do{if((e|0)!=0){hM[c[(c[e>>2]|0)+64>>2]&255](e,k|0,f,j);t=+g[ac>>2];if(t>=+g[ab>>2]){break}g[ab>>2]=t;ov(k|0);x=t;i=h;return+x}}while(0);ov(k|0);x=1.0;i=h;return+x}function ts(a){a=a|0;ov(a|0);return}function tt(a){a=a|0;ov(a|0);KU(a);return}function tu(a,d,e,f){a=a|0;d=d|0;e=e|0;f=f|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0.0,q=0,r=0,s=0,t=0;f=i;i=i+776|0;e=f|0;h=f+64|0;j=f+240|0;k=f+296|0;l=f+400|0;m=f+760|0;g[e>>2]=1.0;K1(e+4|0,0,16)|0;g[e+20>>2]=1.0;K1(e+24|0,0,16)|0;g[e+40>>2]=1.0;K1(e+44|0,0,20)|0;c[h>>2]=30624;n=h+164|0;c[h+168>>2]=0;g[h+172>>2]=0.0;o=a+200|0;g[n>>2]=+g[o>>2];p=+g[a+196>>2];ne(j|0);c[j>>2]=35032;c[j+4>>2]=8;g[j+28>>2]=p;g[j+44>>2]=p;q=k|0;n6(q);c[k>>2]=34136;c[k+4>>2]=1;r=k+56|0;s=d;c[r>>2]=c[s>>2];c[r+4>>2]=c[s+4>>2];c[r+8>>2]=c[s+8>>2];c[r+12>>2]=c[s+12>>2];s=k+72|0;r=d+16|0;c[s>>2]=c[r>>2];c[s+4>>2]=c[r+4>>2];c[s+8>>2]=c[r+8>>2];c[s+12>>2]=c[r+12>>2];r=k+88|0;s=d+32|0;c[r>>2]=c[s>>2];c[r+4>>2]=c[s+4>>2];c[r+8>>2]=c[s+8>>2];c[r+12>>2]=c[s+12>>2];g[l+308>>2]=9999999747378752.0e-20;b[l+332>>1]=0;s=j|0;wa(m,s,k|0,l);if(!(wb(m,a+4|0,a+68|0,e,e,h)|0)){t=m|0;vi(t);n8(q);nv(s);i=f;return}p=+g[n>>2];if(+g[o>>2]<=p){t=m|0;vi(t);n8(q);nv(s);i=f;return}g[o>>2]=p;t=m|0;vi(t);n8(q);nv(s);i=f;return}function tv(b,d,e){b=b|0;d=d|0;e=e|0;a[b+4|0]=0;c[b>>2]=30496;c[b+16>>2]=0;c[b+20>>2]=3;c[b+12>>2]=d;c[b+8>>2]=e;return}function tw(a){a=a|0;KU(a);return}function tx(a){a=a|0;return}function ty(b){b=b|0;var d=0,e=0;c[b>>2]=32248;do{if((a[b+16|0]&1)!=0){d=c[b+20>>2]|0;if((d|0)==0){break}e=c[b+4>>2]|0;g0[c[(c[e>>2]|0)+16>>2]&511](e,d)}}while(0);rh(b|0);KU(b);return}function tz(b){b=b|0;var d=0,e=0;c[b>>2]=32248;do{if((a[b+16|0]&1)!=0){d=c[b+20>>2]|0;if((d|0)==0){break}e=c[b+4>>2]|0;g0[c[(c[e>>2]|0)+16>>2]&511](e,d)}}while(0);rh(b|0);return}function tA(b,d,e,f,h){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0.0,I=0,J=0.0,K=0.0,L=0.0,M=0.0,N=0,O=0.0,P=0.0,Q=0.0,R=0.0,S=0.0,T=0.0,U=0,X=0.0,_=0.0,$=0.0,aa=0.0,ab=0.0,ac=0.0,ad=0.0,ae=0.0,af=0.0,ag=0.0,ah=0.0,ai=0.0,aj=0.0,ak=0.0,al=0.0,am=0.0,an=0.0,ao=0.0,ap=0.0,aq=0.0,ar=0,as=0,at=0,au=0,av=0,aw=0,ax=0,ay=0,az=0.0,aA=0.0,aB=0,aC=0,aD=0,aE=0,aF=0,aG=0.0,aH=0,aI=0,aJ=0,aK=0,aL=0,aM=0,aN=0,aO=0,aP=0,aQ=0,aR=0,aS=0,aT=0.0,aU=0.0,aV=0.0,aW=0,aX=0,aY=0,aZ=0,a_=0,a$=0,a0=0,a1=0,a2=0,a3=0,a4=0,a5=0,a6=0,a7=0,a8=0,a9=0,ba=0,bb=0,bc=0,bd=0,be=0,bf=0;j=i;i=i+656|0;k=j|0;l=j+16|0;m=j+32|0;n=j+168|0;o=j+248|0;p=j+256|0;q=j+296|0;r=j+312|0;s=j+336|0;t=j+352|0;u=j+368|0;v=j+384|0;w=j+400|0;x=j+416|0;y=b+20|0;z=c[y>>2]|0;if((z|0)==0){A=c[b+4>>2]|0;B=hd[c[(c[A>>2]|0)+12>>2]&127](A,c[d+8>>2]|0,c[e+8>>2]|0)|0;c[y>>2]=B;a[b+16|0]=1;C=B}else{C=z}z=h+4|0;c[z>>2]=C;C=c[d+4>>2]|0;B=C;A=c[e+4>>2]|0;D=A;E=C+4|0;do{if((c[E>>2]|0)==10){if((c[A+4>>2]|0)!=10){break}F=C;G=A;H=+vV(c[y>>2]|0);I=c[C+52>>2]|0;J=+g[F+28+(I<<2)>>2];K=+g[F+28+(((I+2|0)%3|0)<<2)>>2];F=c[A+52>>2]|0;L=+g[G+28+(F<<2)>>2];M=+g[G+28+(((F+2|0)%3|0)<<2)>>2];G=c[d+12>>2]|0;N=c[e+12>>2]|0;O=+g[G+(I<<2)>>2];P=+g[G+16+(I<<2)>>2];Q=+g[G+32+(I<<2)>>2];R=+g[N+(F<<2)>>2];S=+g[N+16+(F<<2)>>2];T=+g[N+32+(F<<2)>>2];F=N+48|0;I=N+52|0;U=N+56|0;X=+g[F>>2]- +g[G+48>>2];_=+g[I>>2]- +g[G+52>>2];$=+g[U>>2]- +g[G+56>>2];aa=O*R+P*S+Q*T;ab=O*X+P*_+Q*$;ac=R*X+S*_+T*$;ad=1.0-aa*aa;do{if(ad==0.0){ae=0.0}else{af=(ab-aa*ac)/ad;ag=-0.0-J;if(af<ag){ae=ag;break}if(af<=J){ae=af;break}ae=J}}while(0);ad=aa*ae-ac;af=-0.0-L;do{if(ad<af){ag=aa*af+ab;ah=-0.0-J;if(ag<ah){ai=ah;aj=af;break}if(ag<=J){ai=ag;aj=af;break}ai=J;aj=af}else{if(ad<=L){ai=ae;aj=ad;break}ag=L*aa+ab;ah=-0.0-J;if(ag<ah){ai=ah;aj=L;break}if(ag<=J){ai=ag;aj=L;break}ai=J;aj=L}}while(0);L=R*aj;J=S*aj;ab=T*aj;aa=L+(X-O*ai);ad=J+(_-P*ai);af=ab+($-Q*ai);ac=af*af+(aa*aa+ad*ad);ag=+W(ac);ah=ag-K-M;if(ah<=H){do{if(ac>1.4210854715202004e-14){ak=-0.0-1.0/ag;al=aa*ak;am=ad*ak;an=af*ak;g[k>>2]=al;g[k+4>>2]=am;g[k+8>>2]=an;g[k+12>>2]=0.0;ao=al;ap=am;aq=an}else{if(+V(+Q)>.7071067690849304){an=1.0/+W(P*P+Q*Q);g[k>>2]=0.0;am=an*(-0.0-Q);g[k+4>>2]=am;al=P*an;g[k+8>>2]=al;ao=0.0;ap=am;aq=al;break}else{al=1.0/+W(O*O+P*P);am=al*(-0.0-P);g[k>>2]=am;an=O*al;g[k+4>>2]=an;g[k+8>>2]=0.0;ao=am;ap=an;aq=0.0;break}}}while(0);O=M*ap+(J+ +g[I>>2]);P=M*aq+(ab+ +g[U>>2]);g[l>>2]=M*ao+(L+ +g[F>>2]);g[l+4>>2]=O;g[l+8>>2]=P;g[l+12>>2]=0.0}if(ah<H){ha[c[(c[h>>2]|0)+16>>2]&31](h,k,l,ah)}G=c[z>>2]|0;if((c[G+748>>2]|0)==0){i=j;return}N=c[G+740>>2]|0;ar=c[(c[h+8>>2]|0)+8>>2]|0;if((N|0)==(ar|0)){vX(G,N+4|0,(c[(c[h+12>>2]|0)+8>>2]|0)+4|0);i=j;return}else{vX(G,(c[(c[h+12>>2]|0)+8>>2]|0)+4|0,ar+4|0);i=j;return}}}while(0);l=m+128|0;g[l>>2]=999999984306749400.0;k=m+132|0;c[k>>2]=0;vD(n,B,D,c[b+8>>2]|0,c[b+12>>2]|0);c[n+28>>2]=B;c[n+32>>2]=D;ar=C;ao=+g6[c[(c[ar>>2]|0)+48>>2]&15](B);G=A;aq=+g6[c[(c[G>>2]|0)+48>>2]&15](D);ap=ao+aq+ +vV(c[y>>2]|0);g[l>>2]=ap*ap;c[k>>2]=c[f+40>>2];k=d+12|0;d=c[k>>2]|0;l=m;N=d;c[l>>2]=c[N>>2];c[l+4>>2]=c[N+4>>2];c[l+8>>2]=c[N+8>>2];c[l+12>>2]=c[N+12>>2];N=m+16|0;as=d+16|0;c[N>>2]=c[as>>2];c[N+4>>2]=c[as+4>>2];c[N+8>>2]=c[as+8>>2];c[N+12>>2]=c[as+12>>2];as=m+32|0;at=d+32|0;c[as>>2]=c[at>>2];c[as+4>>2]=c[at+4>>2];c[as+8>>2]=c[at+8>>2];c[as+12>>2]=c[at+12>>2];at=m+48|0;au=d+48|0;c[at>>2]=c[au>>2];c[at+4>>2]=c[au+4>>2];c[at+8>>2]=c[au+8>>2];c[at+12>>2]=c[au+12>>2];au=e+12|0;e=c[au>>2]|0;d=m+64|0;av=e;c[d>>2]=c[av>>2];c[d+4>>2]=c[av+4>>2];c[d+8>>2]=c[av+8>>2];c[d+12>>2]=c[av+12>>2];av=m+80|0;aw=e+16|0;c[av>>2]=c[aw>>2];c[av+4>>2]=c[aw+4>>2];c[av+8>>2]=c[aw+8>>2];c[av+12>>2]=c[aw+12>>2];aw=m+96|0;ax=e+32|0;c[aw>>2]=c[ax>>2];c[aw+4>>2]=c[ax+4>>2];c[aw+8>>2]=c[ax+8>>2];c[aw+12>>2]=c[ax+12>>2];ax=m+112|0;ay=e+48|0;c[ax>>2]=c[ay>>2];c[ax+4>>2]=c[ay+4>>2];c[ax+8>>2]=c[ay+8>>2];c[ax+12>>2]=c[ay+12>>2];do{if((c[E>>2]|0)<7){ay=A+4|0;if((c[ay>>2]|0)>=7){break}c[o>>2]=27024;if((c[E>>2]|0)==0){az=0.0}else{az=+g6[c[(c[ar>>2]|0)+48>>2]&15](B)}if((c[ay>>2]|0)==0){aA=0.0}else{aA=+g6[c[(c[G>>2]|0)+48>>2]&15](D)}e=h|0;c[p>>2]=26984;c[p+4>>2]=e;g[p+24>>2]=az;g[p+28>>2]=aA;aB=p+36|0;a[aB]=0;aC=C+52|0;if((c[aC>>2]|0)==0){break}aD=A+52|0;if((c[aD>>2]|0)!=0){ap=+vV(c[y>>2]|0);if((a[f+24|0]&1)==0){vF(n,m,p|0,c[f+20>>2]|0,0);aE=q;aF=p+8|0;c[aE>>2]=c[aF>>2];c[aE+4>>2]=c[aF+4>>2];c[aE+8>>2]=c[aF+8>>2];c[aE+12>>2]=c[aF+12>>2];aq=+g[p+32>>2];if((a[aB]&1)!=0&aq<0.0){aG=aq;aH=50}}else{if(v_(c[aC>>2]|0,c[aD>>2]|0,c[k>>2]|0,c[au>>2]|0,q,e)|0){aG=-1.0000000150474662e+30;aH=50}}if((aH|0)==50){v1(q,c[aC>>2]|0,c[aD>>2]|0,c[k>>2]|0,c[au>>2]|0,aG-ap,ap,e)}if((a[b+16|0]&1)==0){i=j;return}aD=c[z>>2]|0;if((c[aD+748>>2]|0)==0){i=j;return}aB=c[aD+740>>2]|0;aF=c[(c[h+8>>2]|0)+8>>2]|0;if((aB|0)==(aF|0)){vX(aD,aB+4|0,(c[(c[h+12>>2]|0)+8>>2]|0)+4|0);i=j;return}else{vX(aD,(c[(c[h+12>>2]|0)+8>>2]|0)+4|0,aF+4|0);i=j;return}}if((c[ay>>2]|0)!=1){break}ay=r+16|0;a[ay]=1;aF=r+12|0;c[aF>>2]=0;aD=r+4|0;c[aD>>2]=0;aB=r+8|0;c[aB>>2]=0;aE=c[au>>2]|0;aI=A+56|0;ap=+g[aI>>2];aq=+g[aI+4>>2];ao=+g[aI+8>>2];ai=ap*+g[aE>>2]+aq*+g[aE+4>>2]+ao*+g[aE+8>>2]+ +g[aE+48>>2];aj=ap*+g[aE+16>>2]+aq*+g[aE+20>>2]+ao*+g[aE+24>>2]+ +g[aE+52>>2];ae=ap*+g[aE+32>>2]+aq*+g[aE+36>>2]+ao*+g[aE+40>>2]+ +g[aE+56>>2];aE=zv(16,16)|0;aJ=c[aD>>2]|0;if((aJ|0)>0){aK=0;do{aL=aE+(aK<<4)|0;aM=(c[aF>>2]|0)+(aK<<4)|0;c[aL>>2]=c[aM>>2];c[aL+4>>2]=c[aM+4>>2];c[aL+8>>2]=c[aM+8>>2];c[aL+12>>2]=c[aM+12>>2];aK=aK+1|0;}while((aK|0)<(aJ|0))}aJ=c[aF>>2]|0;if((aJ|0)!=0){if((a[ay]&1)!=0){zw(aJ)}c[aF>>2]=0}a[ay]=1;c[aF>>2]=aE;c[aB>>2]=1;aJ=c[aD>>2]|0;g[aE+(aJ<<4)>>2]=ai;g[aE+(aJ<<4)+4>>2]=aj;g[aE+(aJ<<4)+8>>2]=ae;g[aE+(aJ<<4)+12>>2]=0.0;aJ=(c[aD>>2]|0)+1|0;c[aD>>2]=aJ;aK=c[au>>2]|0;ah=+g[aI+16>>2];H=+g[aI+20>>2];L=+g[aI+24>>2];M=ah*+g[aK>>2]+H*+g[aK+4>>2]+L*+g[aK+8>>2]+ +g[aK+48>>2];ab=ah*+g[aK+16>>2]+H*+g[aK+20>>2]+L*+g[aK+24>>2]+ +g[aK+52>>2];J=ah*+g[aK+32>>2]+H*+g[aK+36>>2]+L*+g[aK+40>>2]+ +g[aK+56>>2];do{if((aJ|0)==(c[aB>>2]|0)){aK=(aJ|0)==0?1:aJ<<1;if((aJ|0)>=(aK|0)){aN=aJ;break}if((aK|0)==0){aO=0;aP=aJ}else{F=zv(aK<<4,16)|0;aO=F;aP=c[aD>>2]|0}if((aP|0)>0){F=0;do{U=aO+(F<<4)|0;I=(c[aF>>2]|0)+(F<<4)|0;c[U>>2]=c[I>>2];c[U+4>>2]=c[I+4>>2];c[U+8>>2]=c[I+8>>2];c[U+12>>2]=c[I+12>>2];F=F+1|0;}while((F|0)<(aP|0))}F=c[aF>>2]|0;if((F|0)!=0){if((a[ay]&1)!=0){zw(F)}c[aF>>2]=0}a[ay]=1;c[aF>>2]=aO;c[aB>>2]=aK;aN=c[aD>>2]|0}else{aN=aJ}}while(0);aJ=c[aF>>2]|0;g[aJ+(aN<<4)>>2]=M;g[aJ+(aN<<4)+4>>2]=ab;g[aJ+(aN<<4)+8>>2]=J;g[aJ+(aN<<4)+12>>2]=0.0;aJ=(c[aD>>2]|0)+1|0;c[aD>>2]=aJ;aE=c[au>>2]|0;ae=+g[aI+32>>2];aj=+g[aI+36>>2];ai=+g[aI+40>>2];L=ae*+g[aE>>2]+aj*+g[aE+4>>2]+ai*+g[aE+8>>2]+ +g[aE+48>>2];H=ae*+g[aE+16>>2]+aj*+g[aE+20>>2]+ai*+g[aE+24>>2]+ +g[aE+52>>2];ah=ae*+g[aE+32>>2]+aj*+g[aE+36>>2]+ai*+g[aE+40>>2]+ +g[aE+56>>2];do{if((aJ|0)==(c[aB>>2]|0)){aE=(aJ|0)==0?1:aJ<<1;if((aJ|0)>=(aE|0)){aQ=aJ;break}if((aE|0)==0){aR=0;aS=aJ}else{F=zv(aE<<4,16)|0;aR=F;aS=c[aD>>2]|0}if((aS|0)>0){F=0;do{I=aR+(F<<4)|0;U=(c[aF>>2]|0)+(F<<4)|0;c[I>>2]=c[U>>2];c[I+4>>2]=c[U+4>>2];c[I+8>>2]=c[U+8>>2];c[I+12>>2]=c[U+12>>2];F=F+1|0;}while((F|0)<(aS|0))}F=c[aF>>2]|0;if((F|0)!=0){if((a[ay]&1)!=0){zw(F)}c[aF>>2]=0}a[ay]=1;c[aF>>2]=aR;c[aB>>2]=aE;aQ=c[aD>>2]|0}else{aQ=aJ}}while(0);aJ=c[aF>>2]|0;g[aJ+(aQ<<4)>>2]=L;g[aJ+(aQ<<4)+4>>2]=H;g[aJ+(aQ<<4)+8>>2]=ah;g[aJ+(aQ<<4)+12>>2]=0.0;c[aD>>2]=(c[aD>>2]|0)+1;J=+vV(c[y>>2]|0);vF(n,m,o|0,c[f+20>>2]|0,0);ab=+g[n+4>>2];M=+g[n+8>>2];ai=+g[n+12>>2];aj=ab*ab+M*M+ai*ai;if(aj>1.1920928955078125e-7){ae=1.0/aj;g[s>>2]=ab*ae;g[s+4>>2]=M*ae;g[s+8>>2]=ai*ae;g[s+12>>2]=0.0;ae=+g[n+56>>2];ai=+g6[c[(c[ar>>2]|0)+48>>2]&15](B);M=ae-ai- +g6[c[(c[G>>2]|0)+48>>2]&15](D);v0(s,c[aC>>2]|0,c[k>>2]|0,r,M-J,J,e)}do{if((a[b+16|0]&1)!=0){aJ=c[z>>2]|0;if((c[aJ+748>>2]|0)==0){break}aI=c[aJ+740>>2]|0;F=c[(c[h+8>>2]|0)+8>>2]|0;if((aI|0)==(F|0)){vX(aJ,aI+4|0,(c[(c[h+12>>2]|0)+8>>2]|0)+4|0);break}else{vX(aJ,(c[(c[h+12>>2]|0)+8>>2]|0)+4|0,F+4|0);break}}}while(0);e=c[aF>>2]|0;if((e|0)!=0){if((a[ay]&1)!=0){zw(e)}c[aF>>2]=0}a[ay]=1;c[aF>>2]=0;c[aD>>2]=0;c[aB>>2]=0;i=j;return}}while(0);r=f+20|0;vF(n,m,h|0,c[r>>2]|0,0);f=b+28|0;L150:do{if((c[f>>2]|0)!=0){if((c[(c[z>>2]|0)+748>>2]|0)>=(c[b+32>>2]|0)){break}aG=+g[n+4>>2];aA=+g[n+8>>2];az=+g[n+12>>2];ah=aG*aG+aA*aA+az*az;if(ah<=1.1920928955078125e-7){break}H=1.0/ah;ah=aG*H;aG=aA*H;aA=az*H;if(+V(+aA)>.7071067690849304){H=1.0/+W(aA*aA+aG*aG);aT=0.0;aU=H*(-0.0-aA);aV=aG*H}else{H=1.0/+W(ah*ah+aG*aG);aT=H*(-0.0-aG);aU=ah*H;aV=0.0}H=+g6[c[(c[C>>2]|0)+16>>2]&15](C);az=+g6[c[(c[A>>2]|0)+16>>2]&15](A);s=H<az;L=+g[542]/(s?H:az);D=t;if(s){c[D>>2]=c[l>>2];c[D+4>>2]=c[l+4>>2];c[D+8>>2]=c[l+8>>2];c[D+12>>2]=c[l+12>>2];G=u;c[G>>2]=c[N>>2];c[G+4>>2]=c[N+4>>2];c[G+8>>2]=c[N+8>>2];c[G+12>>2]=c[N+12>>2];G=v;c[G>>2]=c[as>>2];c[G+4>>2]=c[as+4>>2];c[G+8>>2]=c[as+8>>2];c[G+12>>2]=c[as+12>>2];G=w;c[G>>2]=c[at>>2];c[G+4>>2]=c[at+4>>2];c[G+8>>2]=c[at+8>>2];c[G+12>>2]=c[at+12>>2]}else{c[D>>2]=c[d>>2];c[D+4>>2]=c[d+4>>2];c[D+8>>2]=c[d+8>>2];c[D+12>>2]=c[d+12>>2];D=u;c[D>>2]=c[av>>2];c[D+4>>2]=c[av+4>>2];c[D+8>>2]=c[av+8>>2];c[D+12>>2]=c[av+12>>2];D=v;c[D>>2]=c[aw>>2];c[D+4>>2]=c[aw+4>>2];c[D+8>>2]=c[aw+8>>2];c[D+12>>2]=c[aw+12>>2];D=w;c[D>>2]=c[ax>>2];c[D+4>>2]=c[ax+4>>2];c[D+8>>2]=c[ax+8>>2];c[D+12>>2]=c[ax+12>>2]}D=c[f>>2]|0;if((D|0)<=0){break}az=aV*aV+(aU*aU+aT*aT);H=L>.39269909262657166?.19634954631328583:L*.5;L=aA*aA+(ah*ah+aG*aG);G=m|0;B=m+4|0;ar=m+8|0;o=m+12|0;y=m+16|0;aQ=m+20|0;aR=m+24|0;aS=m+28|0;aN=m+32|0;aO=m+36|0;aP=m+40|0;q=m+44|0;aH=x|0;p=x+32|0;E=x+36|0;e=x+52|0;aC=x+68|0;F=x+84|0;aJ=x+100|0;aI=x+116|0;aK=x+132|0;U=x+148|0;I=x+164|0;aM=t;aL=x+180|0;aW=u;aX=x+196|0;aY=v;aZ=x+212|0;a_=w;a$=x+228|0;a0=s&1;a1=x+232|0;a2=x|0;a3=m+64|0;a4=m+68|0;a5=m+72|0;a6=m+76|0;a7=m+80|0;a8=m+84|0;a9=m+88|0;ba=m+92|0;bb=m+96|0;bc=m+100|0;bd=m+104|0;be=m+108|0;if(az<=1.1920928955078125e-7){if(s){bf=0;while(1){bf=bf+1|0;if((bf|0)>=(D|0)){break L150}}}else{bf=0;while(1){bf=bf+1|0;if((bf|0)>=(D|0)){break L150}}}}if(s){bf=0;aB=D;do{J=+Z(H)/+W(az);M=aT*J;ai=aU*J;ae=aV*J;J=+Y(H);ab=+(bf|0)*(6.2831854820251465/+(aB|0))*.5;aj=+Z(ab)/+W(L);ao=ah*aj;aq=aG*aj;ap=aA*aj;aj=+Y(ab);ab=-0.0-ao;P=-0.0-aq;O=-0.0-ap;Q=ae*P+(M*aj+J*ab)-ai*O;af=M*O+(ai*aj+J*P)-ae*ab;ad=ai*ab+(ae*aj+J*O)-M*P;aa=J*aj-M*ab-ai*P-ae*O;O=ap*af+(ao*aa+aj*Q)-aq*ad;ae=ao*ad+(aj*af+aq*aa)-ap*Q;P=aq*Q+(ap*aa+aj*ad)-ao*af;ai=aj*aa-ao*Q-aq*af-ap*ad;ad=2.0/(ai*ai+(P*P+(O*O+ae*ae)));ap=O*ad;af=ae*ad;aq=P*ad;ad=ai*ap;Q=ai*af;ao=ai*aq;ai=O*ap;ap=O*af;aa=O*aq;O=ae*af;af=ae*aq;ae=P*aq;aq=1.0-(O+ae);P=ap-ao;aj=aa+Q;ab=ap+ao;ao=1.0-(ai+ae);ae=af-ad;ap=aa-Q;Q=af+ad;ad=1.0-(ai+O);aD=c[k>>2]|0;O=+g[aD>>2];ai=+g[aD+16>>2];af=+g[aD+32>>2];aa=+g[aD+4>>2];M=+g[aD+20>>2];J=+g[aD+36>>2];ag=+g[aD+8>>2];ac=+g[aD+24>>2];K=+g[aD+40>>2];g[G>>2]=aj*af+(ai*P+O*aq);g[B>>2]=aq*aa+P*M+aj*J;g[ar>>2]=aq*ag+P*ac+aj*K;g[o>>2]=0.0;g[y>>2]=ae*af+(O*ab+ai*ao);g[aQ>>2]=ab*aa+ao*M+ae*J;g[aR>>2]=ab*ag+ao*ac+ae*K;g[aS>>2]=0.0;g[aN>>2]=O*ap+ai*Q+af*ad;g[aO>>2]=ap*aa+Q*M+ad*J;g[aP>>2]=ap*ag+Q*ac+ad*K;g[q>>2]=0.0;aD=c[au>>2]|0;aF=aD;c[d>>2]=c[aF>>2];c[d+4>>2]=c[aF+4>>2];c[d+8>>2]=c[aF+8>>2];c[d+12>>2]=c[aF+12>>2];aF=aD+16|0;c[av>>2]=c[aF>>2];c[av+4>>2]=c[aF+4>>2];c[av+8>>2]=c[aF+8>>2];c[av+12>>2]=c[aF+12>>2];aF=aD+32|0;c[aw>>2]=c[aF>>2];c[aw+4>>2]=c[aF+4>>2];c[aw+8>>2]=c[aF+8>>2];c[aw+12>>2]=c[aF+12>>2];aF=aD+48|0;c[ax>>2]=c[aF>>2];c[ax+4>>2]=c[aF+4>>2];c[ax+8>>2]=c[aF+8>>2];c[ax+12>>2]=c[aF+12>>2];aF=c[r>>2]|0;c[aH>>2]=31712;c[p>>2]=h;c[E>>2]=c[l>>2];c[E+4>>2]=c[l+4>>2];c[E+8>>2]=c[l+8>>2];c[E+12>>2]=c[l+12>>2];c[e>>2]=c[N>>2];c[e+4>>2]=c[N+4>>2];c[e+8>>2]=c[N+8>>2];c[e+12>>2]=c[N+12>>2];c[aC>>2]=c[as>>2];c[aC+4>>2]=c[as+4>>2];c[aC+8>>2]=c[as+8>>2];c[aC+12>>2]=c[as+12>>2];c[F>>2]=c[at>>2];c[F+4>>2]=c[at+4>>2];c[F+8>>2]=c[at+8>>2];c[F+12>>2]=c[at+12>>2];c[aJ>>2]=c[d>>2];c[aJ+4>>2]=c[d+4>>2];c[aJ+8>>2]=c[d+8>>2];c[aJ+12>>2]=c[d+12>>2];c[aI>>2]=c[av>>2];c[aI+4>>2]=c[av+4>>2];c[aI+8>>2]=c[av+8>>2];c[aI+12>>2]=c[av+12>>2];c[aK>>2]=c[aw>>2];c[aK+4>>2]=c[aw+4>>2];c[aK+8>>2]=c[aw+8>>2];c[aK+12>>2]=c[aw+12>>2];c[U>>2]=c[ax>>2];c[U+4>>2]=c[ax+4>>2];c[U+8>>2]=c[ax+8>>2];c[U+12>>2]=c[ax+12>>2];c[I>>2]=c[aM>>2];c[I+4>>2]=c[aM+4>>2];c[I+8>>2]=c[aM+8>>2];c[I+12>>2]=c[aM+12>>2];c[aL>>2]=c[aW>>2];c[aL+4>>2]=c[aW+4>>2];c[aL+8>>2]=c[aW+8>>2];c[aL+12>>2]=c[aW+12>>2];c[aX>>2]=c[aY>>2];c[aX+4>>2]=c[aY+4>>2];c[aX+8>>2]=c[aY+8>>2];c[aX+12>>2]=c[aY+12>>2];c[aZ>>2]=c[a_>>2];c[aZ+4>>2]=c[a_+4>>2];c[aZ+8>>2]=c[a_+8>>2];c[aZ+12>>2]=c[a_+12>>2];a[a$]=a0;c[a1>>2]=aF;vF(n,m,a2,aF,0);aB=c[f>>2]|0;bf=bf+1|0;}while((bf|0)<(aB|0))}else{aB=0;bf=D;do{K=+Z(H)/+W(az);ad=aT*K;ac=aU*K;Q=aV*K;K=+Y(H);ag=+(aB|0)*(6.2831854820251465/+(bf|0))*.5;ap=+Z(ag)/+W(L);J=ah*ap;M=aG*ap;aa=aA*ap;ap=+Y(ag);q=c[k>>2]|0;aP=q;c[l>>2]=c[aP>>2];c[l+4>>2]=c[aP+4>>2];c[l+8>>2]=c[aP+8>>2];c[l+12>>2]=c[aP+12>>2];aP=q+16|0;c[N>>2]=c[aP>>2];c[N+4>>2]=c[aP+4>>2];c[N+8>>2]=c[aP+8>>2];c[N+12>>2]=c[aP+12>>2];aP=q+32|0;c[as>>2]=c[aP>>2];c[as+4>>2]=c[aP+4>>2];c[as+8>>2]=c[aP+8>>2];c[as+12>>2]=c[aP+12>>2];aP=q+48|0;c[at>>2]=c[aP>>2];c[at+4>>2]=c[aP+4>>2];c[at+8>>2]=c[aP+8>>2];c[at+12>>2]=c[aP+12>>2];ag=-0.0-J;af=-0.0-M;ai=-0.0-aa;O=Q*af+(ad*ap+K*ag)-ac*ai;ae=ad*ai+(ac*ap+K*af)-Q*ag;ao=ac*ag+(Q*ap+K*ai)-ad*af;ab=K*ap-ad*ag-ac*af-Q*ai;ai=aa*ae+(J*ab+ap*O)-M*ao;Q=J*ao+(ap*ae+M*ab)-aa*O;af=M*O+(aa*ab+ap*ao)-J*ae;ac=ap*ab-J*O-M*ae-aa*ao;ao=2.0/(ac*ac+(af*af+(ai*ai+Q*Q)));aa=ai*ao;ae=Q*ao;M=af*ao;ao=ac*aa;O=ac*ae;J=ac*M;ac=ai*aa;aa=ai*ae;ab=ai*M;ai=Q*ae;ae=Q*M;Q=af*M;M=1.0-(ai+Q);af=aa-J;ap=ab+O;ag=aa+J;J=1.0-(ac+Q);Q=ae-ao;aa=ab-O;O=ae+ao;ao=1.0-(ac+ai);aP=c[au>>2]|0;ai=+g[aP>>2];ac=+g[aP+16>>2];ae=+g[aP+32>>2];ab=+g[aP+4>>2];ad=+g[aP+20>>2];K=+g[aP+36>>2];aj=+g[aP+8>>2];P=+g[aP+24>>2];aq=+g[aP+40>>2];g[a3>>2]=ap*ae+(ac*af+ai*M);g[a4>>2]=M*ab+af*ad+ap*K;g[a5>>2]=M*aj+af*P+ap*aq;g[a6>>2]=0.0;g[a7>>2]=Q*ae+(ai*ag+ac*J);g[a8>>2]=ag*ab+J*ad+Q*K;g[a9>>2]=ag*aj+J*P+Q*aq;g[ba>>2]=0.0;g[bb>>2]=ai*aa+ac*O+ae*ao;g[bc>>2]=aa*ab+O*ad+ao*K;g[bd>>2]=aa*aj+O*P+ao*aq;g[be>>2]=0.0;aP=c[r>>2]|0;c[aH>>2]=31712;c[p>>2]=h;c[E>>2]=c[l>>2];c[E+4>>2]=c[l+4>>2];c[E+8>>2]=c[l+8>>2];c[E+12>>2]=c[l+12>>2];c[e>>2]=c[N>>2];c[e+4>>2]=c[N+4>>2];c[e+8>>2]=c[N+8>>2];c[e+12>>2]=c[N+12>>2];c[aC>>2]=c[as>>2];c[aC+4>>2]=c[as+4>>2];c[aC+8>>2]=c[as+8>>2];c[aC+12>>2]=c[as+12>>2];c[F>>2]=c[at>>2];c[F+4>>2]=c[at+4>>2];c[F+8>>2]=c[at+8>>2];c[F+12>>2]=c[at+12>>2];c[aJ>>2]=c[d>>2];c[aJ+4>>2]=c[d+4>>2];c[aJ+8>>2]=c[d+8>>2];c[aJ+12>>2]=c[d+12>>2];c[aI>>2]=c[av>>2];c[aI+4>>2]=c[av+4>>2];c[aI+8>>2]=c[av+8>>2];c[aI+12>>2]=c[av+12>>2];c[aK>>2]=c[aw>>2];c[aK+4>>2]=c[aw+4>>2];c[aK+8>>2]=c[aw+8>>2];c[aK+12>>2]=c[aw+12>>2];c[U>>2]=c[ax>>2];c[U+4>>2]=c[ax+4>>2];c[U+8>>2]=c[ax+8>>2];c[U+12>>2]=c[ax+12>>2];c[I>>2]=c[aM>>2];c[I+4>>2]=c[aM+4>>2];c[I+8>>2]=c[aM+8>>2];c[I+12>>2]=c[aM+12>>2];c[aL>>2]=c[aW>>2];c[aL+4>>2]=c[aW+4>>2];c[aL+8>>2]=c[aW+8>>2];c[aL+12>>2]=c[aW+12>>2];c[aX>>2]=c[aY>>2];c[aX+4>>2]=c[aY+4>>2];c[aX+8>>2]=c[aY+8>>2];c[aX+12>>2]=c[aY+12>>2];c[aZ>>2]=c[a_>>2];c[aZ+4>>2]=c[a_+4>>2];c[aZ+8>>2]=c[a_+8>>2];c[aZ+12>>2]=c[a_+12>>2];a[a$]=a0;c[a1>>2]=aP;vF(n,m,a2,aP,0);bf=c[f>>2]|0;aB=aB+1|0;}while((aB|0)<(bf|0))}}}while(0);if((a[b+16|0]&1)==0){i=j;return}b=c[z>>2]|0;if((c[b+748>>2]|0)==0){i=j;return}z=c[b+740>>2]|0;f=c[(c[h+8>>2]|0)+8>>2]|0;if((z|0)==(f|0)){vX(b,z+4|0,(c[(c[h+12>>2]|0)+8>>2]|0)+4|0);i=j;return}else{vX(b,(c[(c[h+12>>2]|0)+8>>2]|0)+4|0,f+4|0);i=j;return}}function tB(a){a=a|0;return}function tC(d,e,f,h,j){d=d|0;e=e|0;f=f|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0.0,t=0.0,u=0.0,v=0,w=0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0,E=0,F=0,G=0.0,H=0.0;j=i;i=i+1216|0;h=j|0;d=j+56|0;k=j+232|0;l=j+592|0;m=j+608|0;n=j+664|0;o=j+840|0;p=j+1200|0;q=e+68|0;r=e+4|0;s=+g[e+116>>2]- +g[e+52>>2];t=+g[e+120>>2]- +g[e+56>>2];u=+g[e+124>>2]- +g[e+60>>2];v=f+68|0;w=f+4|0;x=+g[f+116>>2]- +g[f+52>>2];y=+g[f+120>>2]- +g[f+56>>2];z=+g[f+124>>2]- +g[f+60>>2];A=+g[e+252>>2];do{if(s*s+t*t+u*u<A*A){B=+g[f+252>>2];if(x*x+y*y+z*z<B*B){C=1.0}else{break}i=j;return+C}}while(0);if((a[49960]&1)!=0){C=1.0;i=j;return+C}D=c[e+192>>2]|0;z=+g[f+248>>2];ne(h|0);c[h>>2]=35032;c[h+4>>2]=8;g[h+28>>2]=z;g[h+44>>2]=z;c[d>>2]=30624;E=d+164|0;g[E>>2]=999999984306749400.0;c[d+168>>2]=0;g[d+172>>2]=0.0;g[k+308>>2]=9999999747378752.0e-20;b[k+332>>1]=0;F=h|0;vj(l,D,F,k);do{if(vk(l,r,q,w,v,d)|0){k=e+244|0;z=+g[E>>2];if(+g[k>>2]>z){g[k>>2]=z}k=f+244|0;if(+g[k>>2]>z){g[k>>2]=z}if(z>=1.0){G=1.0;break}G=z}else{G=1.0}}while(0);vi(l|0);nv(F);F=c[f+192>>2]|0;z=+g[e+248>>2];ne(m|0);c[m>>2]=35032;c[m+4>>2]=8;g[m+28>>2]=z;g[m+44>>2]=z;c[n>>2]=30624;l=n+164|0;g[l>>2]=999999984306749400.0;c[n+168>>2]=0;g[n+172>>2]=0.0;g[o+308>>2]=9999999747378752.0e-20;b[o+332>>1]=0;E=m|0;vj(p,E,F,o);do{if(vk(p,r,q,w,v,n)|0){o=e+244|0;z=+g[l>>2];if(+g[o>>2]>z){g[o>>2]=z}o=f+244|0;if(+g[o>>2]>z){g[o>>2]=z}if(G<=z){H=G;break}H=z}else{H=G}}while(0);vi(p|0);nv(E);C=H;i=j;return+C}function tD(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;e=b+20|0;if((c[e>>2]|0)==0){return}if((a[b+16|0]&1)==0){return}b=d+4|0;f=c[b>>2]|0;g=d+8|0;do{if((f|0)==(c[g>>2]|0)){h=(f|0)==0?1:f<<1;if((f|0)>=(h|0)){i=f;break}if((h|0)==0){j=0;k=f}else{l=zv(h<<2,16)|0;j=l;k=c[b>>2]|0}l=d+12|0;if((k|0)>0){m=0;do{n=j+(m<<2)|0;if((n|0)!=0){c[n>>2]=c[(c[l>>2]|0)+(m<<2)>>2]}m=m+1|0;}while((m|0)<(k|0))}m=c[l>>2]|0;n=d+16|0;if((m|0)!=0){if((a[n]&1)!=0){zw(m)}c[l>>2]=0}a[n]=1;c[l>>2]=j;c[g>>2]=h;i=c[b>>2]|0}else{i=f}}while(0);f=(c[d+12>>2]|0)+(i<<2)|0;if((f|0)==0){o=i}else{c[f>>2]=c[e>>2];o=c[b>>2]|0}c[b>>2]=o+1;return}function tE(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;g=c[d>>2]|0;h=hx[c[(c[g>>2]|0)+56>>2]&127](g,36)|0;if((h|0)==0){i=0;j=i|0;return j|0}g=c[d+4>>2]|0;k=c[b+12>>2]|0;l=c[b+8>>2]|0;m=c[b+16>>2]|0;n=c[b+20>>2]|0;rf(h,d,e,f);c[h>>2]=32248;c[h+8>>2]=k;c[h+12>>2]=l;a[h+16|0]=0;c[h+20>>2]=g;a[h+24|0]=0;c[h+28>>2]=m;c[h+32>>2]=n;i=h;j=i|0;return j|0}function tF(a){a=a|0;KU(a);return}function tG(b,d,e,f){b=b|0;d=d|0;e=e|0;f=+f;var h=0,j=0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0,I=0.0,J=0.0,K=0.0,L=0.0,M=0.0,N=0.0,O=0.0,P=0,Q=0,R=0,S=0,T=0,U=0;h=i;i=i+16|0;j=h|0;k=+g[d>>2];l=+g[d+4>>2];m=+g[d+8>>2];n=+g[e>>2];o=k*f+n;p=+g[e+4>>2];q=l*f+p;r=+g[e+8>>2];s=m*f+r;e=b+164|0;if((a[b+228|0]&1)==0){f=+g[b+100>>2];t=+g[b+116>>2];u=+g[b+132>>2];v=+g[b+104>>2];w=+g[b+120>>2];x=+g[b+136>>2];y=+g[b+108>>2];z=+g[b+124>>2];A=+g[b+140>>2];B=-0.0- +g[b+148>>2];C=-0.0- +g[b+152>>2];D=-0.0- +g[b+156>>2];E=f*B+t*C+u*D;F=v*B+w*C+x*D;G=y*B+z*C+A*D;D=+g[e>>2];C=+g[b+168>>2];B=+g[b+172>>2];H=+g[b+180>>2];I=+g[b+184>>2];J=+g[b+188>>2];K=+g[b+196>>2];L=+g[b+200>>2];M=+g[b+204>>2];N=r*(u*D+x*C+A*B)+(n*(f*D+v*C+y*B)+p*(t*D+w*C+z*B))+(G*B+(D*E+C*F)+ +g[b+212>>2]);C=r*(u*H+x*I+A*J)+(n*(f*H+v*I+y*J)+p*(t*H+w*I+z*J))+(E*H+F*I+G*J+ +g[b+216>>2]);J=E*K+F*L+G*M+ +g[b+220>>2]+(r*(u*K+x*L+A*M)+(n*(f*K+v*L+y*M)+p*(t*K+w*L+z*M)));g[j>>2]=N;g[j+4>>2]=C;g[j+8>>2]=J;g[j+12>>2]=0.0;O=(o-N)*k+(q-C)*l+(s-J)*m;P=b+32|0;Q=c[P>>2]|0;R=Q;S=c[R>>2]|0;T=S+16|0;U=c[T>>2]|0;ha[U&31](Q,d,j,O);i=h;return}else{J=+g[b+36>>2];C=+g[b+52>>2];N=+g[b+68>>2];M=+g[b+40>>2];z=+g[b+56>>2];L=+g[b+72>>2];w=+g[b+44>>2];K=+g[b+60>>2];t=+g[b+76>>2];y=-0.0- +g[b+84>>2];v=-0.0- +g[b+88>>2];f=-0.0- +g[b+92>>2];A=J*y+C*v+N*f;x=M*y+z*v+L*f;u=w*y+K*v+t*f;f=+g[e>>2];v=+g[b+168>>2];y=+g[b+172>>2];G=+g[b+180>>2];F=+g[b+184>>2];E=+g[b+188>>2];I=+g[b+196>>2];H=+g[b+200>>2];D=+g[b+204>>2];B=s*(N*f+L*v+t*y)+(o*(J*f+M*v+w*y)+q*(C*f+z*v+K*y))+(u*y+(f*A+v*x)+ +g[b+212>>2]);v=s*(N*G+L*F+t*E)+(o*(J*G+M*F+w*E)+q*(C*G+z*F+K*E))+(A*G+x*F+u*E+ +g[b+216>>2]);E=A*I+x*H+u*D+ +g[b+220>>2]+(s*(N*I+L*H+t*D)+(o*(J*I+M*H+w*D)+q*(C*I+z*H+K*D)));D=k*(B-n)+l*(v-p)+m*(E-r);g[j>>2]=B+k*D;g[j+4>>2]=v+l*D;g[j+8>>2]=E+m*D;g[j+12>>2]=0.0;O=D;P=b+32|0;Q=c[P>>2]|0;R=Q;S=c[R>>2]|0;T=S+16|0;U=c[T>>2]|0;ha[U&31](Q,d,j,O);i=h;return}}function tH(a){a=a|0;return}function tI(a){a=a|0;return}function tJ(a){a=a|0;KU(a);return}function tK(a,b,c){a=a|0;b=b|0;c=c|0;return}function tL(a,b,c){a=a|0;b=b|0;c=c|0;return}function tM(b,d,e,f){b=b|0;d=d|0;e=e|0;f=+f;var h=0,j=0,k=0,l=0,m=0,n=0.0,o=0.0,p=0.0,q=0,r=0,s=0,t=0,u=0,v=0;h=i;i=i+16|0;j=h|0;k=b+32|0;g[k>>2]=f;l=b+8|0;m=d;c[l>>2]=c[m>>2];c[l+4>>2]=c[m+4>>2];c[l+8>>2]=c[m+8>>2];c[l+12>>2]=c[m+12>>2];n=+g[b+28>>2];o=+g[e+4>>2]-n*+g[d+4>>2];p=+g[e+8>>2]-n*+g[d+8>>2];g[j>>2]=+g[e>>2]- +g[d>>2]*n;g[j+4>>2]=o;g[j+8>>2]=p;g[j+12>>2]=0.0;p=+g[b+24>>2]+n+f;g[k>>2]=p;if(p>=0.0){q=b+4|0;r=c[q>>2]|0;s=r;t=c[s>>2]|0;u=t+16|0;v=c[u>>2]|0;ha[v&31](r,d,j,p);i=h;return}a[b+36|0]=1;q=b+4|0;r=c[q>>2]|0;s=r;t=c[s>>2]|0;u=t+16|0;v=c[u>>2]|0;ha[v&31](r,d,j,p);i=h;return}function tN(a){a=a|0;KU(a);return}function tO(a,b,c){a=a|0;b=b|0;c=c|0;return}function tP(a,b,c){a=a|0;b=b|0;c=c|0;return}function tQ(a,b,c,d){a=a|0;b=b|0;c=c|0;d=+d;return}function tR(b,d,e,f,g,h,i,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;var k=0;pJ(b|0,e);c[b>>2]=31120;e=b+8|0;a[e]=0;k=b+12|0;c[k>>2]=d;a[b+16|0]=h&1;c[b+20>>2]=i;c[b+24>>2]=j;if((d|0)!=0){return}d=b+4|0;b=c[d>>2]|0;j=(h?g:f)+8|0;i=(h?f:g)+8|0;if(!(hd[c[(c[b>>2]|0)+24>>2]&127](b,c[j>>2]|0,c[i>>2]|0)|0)){return}b=c[d>>2]|0;c[k>>2]=hd[c[(c[b>>2]|0)+12>>2]&127](b,c[j>>2]|0,c[i>>2]|0)|0;a[e]=1;return}function tS(b){b=b|0;var d=0,e=0,f=0;c[b>>2]=31120;if((a[b+8|0]&1)==0){d=b;KU(d);return}e=c[b+12>>2]|0;if((e|0)==0){d=b;KU(d);return}f=c[b+4>>2]|0;g0[c[(c[f>>2]|0)+16>>2]&511](f,e);d=b;KU(d);return}function tT(b){b=b|0;var d=0,e=0;c[b>>2]=31120;if((a[b+8|0]&1)==0){return}d=c[b+12>>2]|0;if((d|0)==0){return}e=c[b+4>>2]|0;g0[c[(c[e>>2]|0)+16>>2]&511](e,d);return}function tU(b,d,e,f,h,j){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0,I=0.0,J=0.0,K=0.0,L=0.0,M=0.0,N=0.0,O=0.0,P=0.0,Q=0.0,R=0.0,S=0.0,T=0.0,U=0.0,V=0.0,W=0.0,X=0.0,Y=0.0,Z=0.0,_=0.0,$=0.0,aa=0.0,ab=0.0,ac=0.0,ad=0;h=i;i=i+64|0;k=h|0;l=h+16|0;m=h+32|0;n=h+48|0;o=(a[b+16|0]&1)!=0;p=o?f:e;q=o?e:f;f=c[p+4>>2]|0;e=c[q+4>>2]|0;o=c[p+12>>2]|0;r=+g[o>>2];s=+g[o+4>>2];t=+g[o+8>>2];u=+g[o+16>>2];v=+g[o+20>>2];w=+g[o+24>>2];x=+g[o+32>>2];y=+g[o+36>>2];z=+g[o+40>>2];A=+g[o+48>>2];B=+g[o+52>>2];C=+g[o+56>>2];o=q+12|0;q=c[o>>2]|0;D=+g[q>>2];E=+g[q+16>>2];F=+g[q+32>>2];G=+g[q+4>>2];H=+g[q+20>>2];I=+g[q+36>>2];J=+g[q+8>>2];K=+g[q+24>>2];L=+g[q+40>>2];M=-0.0- +g[q+48>>2];N=-0.0- +g[q+52>>2];O=-0.0- +g[q+56>>2];P=+g[d>>2];Q=+g[d+4>>2];R=+g[d+8>>2];S=+g[d+12>>2];T=2.0/(P*P+Q*Q+R*R+S*S);U=P*T;V=Q*T;W=R*T;T=S*U;X=S*V;Y=S*W;S=P*U;U=P*V;Z=P*W;P=Q*V;V=Q*W;Q=R*W;W=1.0-(P+Q);R=U-Y;_=Z+X;$=U+Y;Y=1.0-(S+Q);Q=V-T;U=Z-X;X=V+T;T=1.0-(S+P);P=t*U+(s*$+r*W);S=t*X+(r*R+s*Y);V=r*_+s*Q+t*T;Z=w*U+(v*$+u*W);aa=w*X+(u*R+v*Y);ab=u*_+v*Q+w*T;ac=z*U+(y*$+x*W);W=z*X+(x*R+y*Y);Y=x*_+y*Q+z*T;d=c[(c[f>>2]|0)+64>>2]|0;q=e+48|0;T=-0.0- +g[q>>2];p=e+52|0;Q=-0.0- +g[p>>2];ad=e+56|0;_=-0.0- +g[ad>>2];g[l>>2]=(L*ac+(J*P+K*Z))*_+((F*ac+(D*P+E*Z))*T+(I*ac+(G*P+H*Z))*Q);g[l+4>>2]=(L*W+(J*S+K*aa))*_+((F*W+(D*S+E*aa))*T+(I*W+(G*S+H*aa))*Q);g[l+8>>2]=(L*Y+(J*V+K*ab))*_+((F*Y+(D*V+E*ab))*T+(I*Y+(G*V+H*ab))*Q);g[l+12>>2]=0.0;hF[d&255](k,f,l);Q=+g[k>>2];ab=+g[k+4>>2];V=+g[k+8>>2];Y=A*D+B*E+C*F+(D*M+E*N+F*O)+((r*D+u*E+x*F)*Q+(s*D+v*E+y*F)*ab+(t*D+w*E+z*F)*V);F=A*G+B*H+C*I+(G*M+H*N+I*O)+((r*G+u*H+x*I)*Q+(s*G+v*H+y*I)*ab+(t*G+w*H+z*I)*V);I=A*J+B*K+C*L+(J*M+K*N+L*O)+((r*J+u*K+x*L)*Q+(s*J+v*K+y*L)*ab+(t*J+w*K+z*L)*V);V=+g[q>>2];L=+g[p>>2];z=+g[ad>>2];K=z*I+(V*Y+L*F)- +g[e+64>>2];w=Y-V*K;V=F-L*K;L=I-z*K;e=c[o>>2]|0;z=+g[e>>2];I=+g[e+4>>2];F=+g[e+8>>2];Y=+g[e+16>>2];J=+g[e+20>>2];t=+g[e+24>>2];ab=+g[e+32>>2];y=+g[e+36>>2];v=+g[e+40>>2];s=+g[e+48>>2];Q=+g[e+52>>2];x=+g[e+56>>2];e=b+12|0;b=K<+vV(c[e>>2]|0);c[j+4>>2]=c[e>>2];if(!b){i=h;return}b=c[o>>2]|0;u=+g[q>>2];r=+g[p>>2];O=+g[ad>>2];N=u*+g[b+16>>2]+r*+g[b+20>>2]+O*+g[b+24>>2];M=u*+g[b+32>>2]+r*+g[b+36>>2]+O*+g[b+40>>2];g[m>>2]=+g[b>>2]*u+ +g[b+4>>2]*r+ +g[b+8>>2]*O;g[m+4>>2]=N;g[m+8>>2]=M;g[m+12>>2]=0.0;g[n>>2]=F*L+(z*w+I*V)+s;g[n+4>>2]=w*Y+V*J+L*t+Q;g[n+8>>2]=w*ab+V*y+L*v+x;g[n+12>>2]=0.0;ha[c[(c[j>>2]|0)+16>>2]&31](j,m,n,K);i=h;return}function tV(b,d,e,f,h){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0,I=0.0,J=0.0,K=0.0,L=0.0,M=0.0,N=0.0,O=0.0,P=0.0,Q=0.0,R=0.0,S=0.0,T=0,U=0.0,X=0,_=0.0,$=0.0,aa=0.0,ab=0.0,ac=0.0,ad=0,ae=0;f=i;i=i+80|0;j=f|0;k=f+16|0;l=f+32|0;m=f+48|0;n=f+64|0;o=b+12|0;if((c[o>>2]|0)==0){i=f;return}p=(a[b+16|0]&1)!=0;q=p?e:d;r=p?d:e;p=c[q+4>>2]|0;s=c[r+4>>2]|0;t=c[q+12>>2]|0;u=+g[t>>2];v=+g[t+16>>2];w=+g[t+32>>2];x=+g[t+4>>2];y=+g[t+20>>2];z=+g[t+36>>2];A=+g[t+8>>2];B=+g[t+24>>2];C=+g[t+40>>2];D=+g[t+48>>2];E=+g[t+52>>2];F=+g[t+56>>2];t=r+12|0;r=c[t>>2]|0;G=+g[r>>2];H=+g[r+16>>2];I=+g[r+32>>2];J=u*G+v*H+w*I;K=+g[r+4>>2];L=+g[r+20>>2];M=+g[r+36>>2];N=u*K+v*L+w*M;O=+g[r+8>>2];P=+g[r+24>>2];Q=+g[r+40>>2];R=u*O+v*P+w*Q;w=x*G+y*H+z*I;v=x*K+y*L+z*M;u=x*O+y*P+z*Q;z=A*G+B*H+C*I;y=A*K+B*L+C*M;x=A*O+B*P+C*Q;C=-0.0- +g[r+48>>2];B=-0.0- +g[r+52>>2];A=-0.0- +g[r+56>>2];r=c[(c[p>>2]|0)+64>>2]|0;q=s+48|0;S=-0.0- +g[q>>2];T=s+52|0;U=-0.0- +g[T>>2];X=s+56|0;_=-0.0- +g[X>>2];g[k>>2]=J*S+N*U+R*_;g[k+4>>2]=w*S+v*U+u*_;g[k+8>>2]=z*S+y*U+x*_;g[k+12>>2]=0.0;hF[r&255](j,p,k);_=+g[j>>2];U=+g[j+4>>2];S=+g[j+8>>2];$=D*G+E*H+F*I+(G*C+H*B+I*A)+(J*_+w*U+z*S);z=D*K+E*L+F*M+(K*C+L*B+M*A)+(N*_+v*U+y*S);y=D*O+E*P+F*Q+(O*C+P*B+Q*A)+(R*_+u*U+x*S);S=+g[q>>2];x=+g[T>>2];U=+g[X>>2];u=U*y+(S*$+x*z)- +g[s+64>>2];_=$-S*u;S=z-x*u;x=y-U*u;s=c[t>>2]|0;U=+g[s>>2];y=+g[s+4>>2];z=+g[s+8>>2];$=+g[s+16>>2];R=+g[s+20>>2];A=+g[s+24>>2];Q=+g[s+32>>2];B=+g[s+36>>2];P=+g[s+40>>2];C=+g[s+48>>2];O=+g[s+52>>2];F=+g[s+56>>2];s=u<+vV(c[o>>2]|0);j=h+4|0;c[j>>2]=c[o>>2];if(s){s=c[t>>2]|0;E=+g[q>>2];D=+g[T>>2];v=+g[X>>2];N=E*+g[s+16>>2]+D*+g[s+20>>2]+v*+g[s+24>>2];M=E*+g[s+32>>2]+D*+g[s+36>>2]+v*+g[s+40>>2];g[l>>2]=+g[s>>2]*E+ +g[s+4>>2]*D+ +g[s+8>>2]*v;g[l+4>>2]=N;g[l+8>>2]=M;g[l+12>>2]=0.0;g[m>>2]=z*x+(U*_+y*S)+C;g[m+4>>2]=_*$+S*R+x*A+O;g[m+8>>2]=_*Q+S*B+x*P+F;g[m+12>>2]=0.0;ha[c[(c[h>>2]|0)+16>>2]&31](h,l,m,u)}do{if((c[p+4>>2]|0)<7){if((c[(c[j>>2]|0)+748>>2]|0)>=(c[b+24>>2]|0)){break}u=+g[X>>2];if(+V(+u)>.7071067690849304){F=+g[T>>2];P=1.0/+W(u*u+F*F);aa=0.0;ab=P*(-0.0-u);ac=F*P}else{P=+g[q>>2];F=+g[T>>2];u=1.0/+W(P*P+F*F);aa=u*(-0.0-F);ab=P*u;ac=0.0}u=+g6[c[(c[p>>2]|0)+16>>2]&15](p);P=+g[542]/u;u=+W(ac*ac+(ab*ab+aa*aa));F=P>.39269909262657166?.19634954631328583:P*.5;P=+Z(F)/u;u=aa*P;x=ab*P;B=ac*P;P=+Y(F);m=b+20|0;l=c[m>>2]|0;if((l|0)<=0){break}s=n|0;t=n+4|0;k=n+8|0;r=n+12|0;ad=0;ae=l;do{F=+g[q>>2];S=+g[T>>2];Q=+g[X>>2];_=+(ad|0)*(6.2831854820251465/+(ae|0))*.5;O=+Z(_)/+W(F*F+S*S+Q*Q);A=F*O;F=S*O;S=Q*O;O=+Y(_);_=-0.0-A;Q=-0.0-F;R=-0.0-S;$=B*Q+(u*O+P*_)-x*R;C=u*R+(x*O+P*Q)-B*_;y=x*_+(B*O+P*R)-u*Q;U=P*O-u*_-x*Q-B*R;g[s>>2]=S*C+(A*U+O*$)-F*y;g[t>>2]=A*y+(O*C+F*U)-S*$;g[k>>2]=F*$+(S*U+O*y)-A*C;g[r>>2]=O*U-A*$-F*C-S*y;tU(b,n,d,e,0,h);ad=ad+1|0;ae=c[m>>2]|0;}while((ad|0)<(ae|0))}}while(0);if((a[b+8|0]&1)==0){i=f;return}if((c[(c[o>>2]|0)+748>>2]|0)==0){i=f;return}o=c[j>>2]|0;if((c[o+748>>2]|0)==0){i=f;return}j=c[o+740>>2]|0;b=c[(c[h+8>>2]|0)+8>>2]|0;if((j|0)==(b|0)){vX(o,j+4|0,(c[(c[h+12>>2]|0)+8>>2]|0)+4|0);i=f;return}else{vX(o,(c[(c[h+12>>2]|0)+8>>2]|0)+4|0,b+4|0);i=f;return}}function tW(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return+1.0}function tX(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;e=b+12|0;if((c[e>>2]|0)==0){return}if((a[b+8|0]&1)==0){return}b=d+4|0;f=c[b>>2]|0;g=d+8|0;do{if((f|0)==(c[g>>2]|0)){h=(f|0)==0?1:f<<1;if((f|0)>=(h|0)){i=f;break}if((h|0)==0){j=0;k=f}else{l=zv(h<<2,16)|0;j=l;k=c[b>>2]|0}l=d+12|0;if((k|0)>0){m=0;do{n=j+(m<<2)|0;if((n|0)!=0){c[n>>2]=c[(c[l>>2]|0)+(m<<2)>>2]}m=m+1|0;}while((m|0)<(k|0))}m=c[l>>2]|0;n=d+16|0;if((m|0)!=0){if((a[n]&1)!=0){zw(m)}c[l>>2]=0}a[n]=1;c[l>>2]=j;c[g>>2]=h;i=c[b>>2]|0}else{i=f}}while(0);f=(c[d+12>>2]|0)+(i<<2)|0;if((f|0)==0){o=i}else{c[f>>2]=c[e>>2];o=c[b>>2]|0}c[b>>2]=o+1;return}function tY(d,e){d=d|0;e=e|0;var f=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0;c[d>>2]=31072;f=zv(360,16)|0;g[f+308>>2]=9999999747378752.0e-20;h=f+332|0;b[h>>1]=b[h>>1]&-16;h=d+32|0;c[h>>2]=f;f=(c[e+28>>2]|0)==0;i=zv(4,16)|0;j=(i|0)==0;if(f){if(j){k=0}else{c[i>>2]=30960;k=i}c[d+36>>2]=k}else{if(j){l=0}else{c[i>>2]=31160;l=i}c[d+36>>2]=l}l=zv(24,16)|0;if((l|0)==0){m=0}else{i=l;tv(i,c[h>>2]|0,c[d+36>>2]|0);m=i}c[d+40>>2]=m;m=zv(8,16)|0;if((m|0)==0){n=0}else{a[m+4|0]=0;c[m>>2]=30304;n=m}c[d+44>>2]=n;n=zv(8,16)|0;if((n|0)==0){o=0}else{a[n+4|0]=0;c[n>>2]=30272;o=n}c[d+48>>2]=o;o=zv(8,16)|0;if((o|0)==0){p=0}else{a[o+4|0]=0;c[o>>2]=30432;p=o}c[d+52>>2]=p;p=zv(8,16)|0;if((p|0)==0){q=0}else{a[p+4|0]=0;c[p>>2]=30400;q=p}c[d+56>>2]=q;q=zv(8,16)|0;if((q|0)==0){r=0}else{a[q+4|0]=0;c[q>>2]=30528;r=q}c[d+60>>2]=r;r=zv(8,16)|0;if((r|0)==0){s=0}else{a[r+4|0]=0;c[r>>2]=30336;s=r}c[d+64>>2]=s;s=zv(8,16)|0;if((s|0)==0){t=0}else{a[s+4|0]=0;c[s>>2]=30240;t=s}c[d+80>>2]=t;t=zv(8,16)|0;if((t|0)==0){u=0}else{a[t+4|0]=0;c[t>>2]=30240;u=t}c[d+84>>2]=u;a[u+4|0]=1;u=zv(8,16)|0;if((u|0)==0){v=0}else{a[u+4|0]=0;c[u>>2]=30464;v=u}c[d+76>>2]=v;v=zv(16,16)|0;if((v|0)==0){w=0}else{a[v+4|0]=0;c[v>>2]=30368;c[v+8>>2]=1;c[v+12>>2]=0;w=v}c[d+92>>2]=w;w=zv(16,16)|0;if((w|0)==0){x=0}else{a[w+4|0]=0;c[w>>2]=30368;c[w+8>>2]=1;c[w+12>>2]=0;x=w}c[d+88>>2]=x;a[x+4|0]=1;x=c[e+20>>2]|0;w=(x|0)<36?36:x;x=(w|0)>80?w:80;w=(x|0)>44?x:44;x=e|0;v=d+12|0;if((c[x>>2]|0)==0){a[v]=1;u=zv(20,16)|0;if((u|0)==0){y=0}else{t=c[e+24>>2]|0;K1(u|0,0,17)|0;s=u;c[s>>2]=0;c[u+8>>2]=0;c[s>>2]=zv(t,16)|0;c[u+4>>2]=t;y=u}c[d+8>>2]=y}else{a[v]=0;c[d+8>>2]=c[x>>2]}x=e+4|0;v=d+20|0;if((c[x>>2]|0)==0){a[v]=1;y=zv(20,16)|0;if((y|0)==0){z=0}else{u=y;t=c[e+12>>2]|0;s=y;c[s>>2]=772;r=y+4|0;c[r>>2]=t;q=zv(t*772|0,16)|0;c[y+16>>2]=q;c[y+12>>2]=q;t=c[r>>2]|0;c[y+8>>2]=t;y=t-1|0;if((y|0)==0){A=q}else{t=q;q=y;y=c[s>>2]|0;while(1){c[t>>2]=t+y;r=c[s>>2]|0;p=t+r|0;o=q-1|0;if((o|0)==0){A=p;break}else{t=p;q=o;y=r}}}c[A>>2]=0;z=u}c[d+16>>2]=z}else{a[v]=0;c[d+16>>2]=c[x>>2]}x=e+8|0;v=d+28|0;if((c[x>>2]|0)!=0){a[v]=0;c[d+24>>2]=c[x>>2];return}a[v]=1;v=zv(20,16)|0;if((v|0)==0){B=0}else{x=v;z=c[e+16>>2]|0;e=v;c[e>>2]=w;u=v+4|0;c[u>>2]=z;A=zv(ag(z,w)|0,16)|0;c[v+16>>2]=A;c[v+12>>2]=A;w=c[u>>2]|0;c[v+8>>2]=w;v=w-1|0;if((v|0)==0){C=A}else{w=A;A=v;v=c[e>>2]|0;while(1){c[w>>2]=w+v;u=c[e>>2]|0;z=w+u|0;y=A-1|0;if((y|0)==0){C=z;break}else{w=z;A=y;v=u}}}c[C>>2]=0;B=x}c[d+24>>2]=B;return}function tZ(a){a=a|0;t_(a);KU(a);return}function t_(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;c[b>>2]=31072;if((a[b+12|0]&1)!=0){d=b+8|0;e=c[d>>2]|0;f=e+8|0;do{if((c[f>>2]|0)==0){g=e|0;do{if((a[e+16|0]&1)==0){h=c[g>>2]|0;if((h|0)==0){break}zw(h)}}while(0);c[g>>2]=0;c[f>>2]=0;h=c[d>>2]|0;i=h+8|0;if((c[h+8>>2]|0)!=0){j=h;break}k=h|0;do{if((a[h+16|0]&1)==0){l=c[k>>2]|0;if((l|0)==0){break}zw(l)}}while(0);c[k>>2]=0;c[i>>2]=0;j=c[d>>2]|0}else{j=e}}while(0);zw(j)}if((a[b+28|0]&1)!=0){j=b+24|0;zw(c[(c[j>>2]|0)+16>>2]|0);zw(c[j>>2]|0)}if((a[b+20|0]&1)!=0){j=b+16|0;zw(c[(c[j>>2]|0)+16>>2]|0);zw(c[j>>2]|0)}j=b+40|0;e=c[j>>2]|0;g$[c[c[e>>2]>>2]&1023](e);zw(c[j>>2]|0);j=b+44|0;e=c[j>>2]|0;g$[c[c[e>>2]>>2]&1023](e);zw(c[j>>2]|0);j=b+48|0;e=c[j>>2]|0;g$[c[c[e>>2]>>2]&1023](e);zw(c[j>>2]|0);j=b+52|0;e=c[j>>2]|0;g$[c[c[e>>2]>>2]&1023](e);zw(c[j>>2]|0);j=b+56|0;e=c[j>>2]|0;g$[c[c[e>>2]>>2]&1023](e);zw(c[j>>2]|0);j=b+60|0;e=c[j>>2]|0;g$[c[c[e>>2]>>2]&1023](e);zw(c[j>>2]|0);j=b+64|0;e=c[j>>2]|0;g$[c[c[e>>2]>>2]&1023](e);zw(c[j>>2]|0);j=b+80|0;e=c[j>>2]|0;g$[c[c[e>>2]>>2]&1023](e);zw(c[j>>2]|0);j=b+84|0;e=c[j>>2]|0;g$[c[c[e>>2]>>2]&1023](e);zw(c[j>>2]|0);j=b+76|0;e=c[j>>2]|0;g$[c[c[e>>2]>>2]&1023](e);zw(c[j>>2]|0);j=b+92|0;e=c[j>>2]|0;g$[c[c[e>>2]>>2]&1023](e);zw(c[j>>2]|0);j=b+88|0;e=c[j>>2]|0;g$[c[c[e>>2]>>2]&1023](e);zw(c[j>>2]|0);zw(c[b+32>>2]|0);j=b+36|0;b=c[j>>2]|0;g$[c[c[b>>2]>>2]&1023](b);zw(c[j>>2]|0);return}function t$(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;e=(b|0)==8;f=(d|0)==8;L1:do{if(e&f){g=a+64|0}else{if(e&(d|0)==1){g=a+80|0;break}if((b|0)==1&f){g=a+84|0;break}if((d|b|0)==0){g=a+76|0;break}h=(b|0)<20;if(h&(d|0)==28){g=a+92|0;break}i=(d|0)<20;if(i&(b|0)==28){g=a+88|0;break}do{if(h){if(i){g=a+40|0;break L1}if((d-21|0)>>>0>=9>>>0){break}g=a+44|0;break L1}else{if(!i){break}if((b-21|0)>>>0>=9>>>0){break}g=a+48|0;break L1}}while(0);if((b|0)==31){g=a+52|0;break}if((d|0)==31){g=a+56|0;break}else{g=a+60|0;break}}}while(0);return c[g>>2]|0}function t0(a){a=a|0;return c[a+16>>2]|0}function t1(a){a=a|0;return c[a+24>>2]|0}function t2(a){a=a|0;return c[a+8>>2]|0}function t3(a){a=a|0;return c[a+32>>2]|0}function t4(a){a=a|0;return}function t5(a){a=a|0;KU(a);return}function t6(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0;g=c[d>>2]|0;h=hx[c[(c[g>>2]|0)+56>>2]&127](g,28)|0;g=(h|0)==0;if((a[b+4|0]&1)==0){if(g){i=0;j=i|0;return j|0}k=h;tR(k,0,d,e,f,0,c[b+8>>2]|0,c[b+12>>2]|0);i=k;j=i|0;return j|0}else{if(g){i=0;j=i|0;return j|0}g=h;tR(g,0,d,e,f,1,c[b+8>>2]|0,c[b+12>>2]|0);i=g;j=i|0;return j|0}return 0}function t7(a){a=a|0;return}function t8(a){a=a|0;KU(a);return}function t9(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;a=c[b>>2]|0;f=hx[c[(c[a>>2]|0)+56>>2]&127](a,16)|0;if((f|0)==0){g=0;h=g|0;return h|0}a=f;ri(a,0,b,d,e);g=a;h=g|0;return h|0}function ua(a){a=a|0;return}function ub(a){a=a|0;KU(a);return}function uc(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0;g=c[d>>2]|0;h=hx[c[(c[g>>2]|0)+56>>2]&127](g,20)|0;if((h|0)==0){i=0;j=i|0;return j|0}g=h;uW(g,c[d+4>>2]|0,d,e,f,(a[b+4|0]&1)!=0);i=g;j=i|0;return j|0}function ud(a){a=a|0;return}function ue(a){a=a|0;KU(a);return}function uf(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;a=c[b>>2]|0;f=hx[c[(c[a>>2]|0)+56>>2]&127](a,16)|0;if((f|0)==0){g=0;h=g|0;return h|0}a=f;uQ(a,0,b,d,e);g=a;h=g|0;return h|0}function ug(a){a=a|0;return}function uh(a){a=a|0;KU(a);return}function ui(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;e=c[b>>2]|0;d=hx[c[(c[e>>2]|0)+56>>2]&127](e,8)|0;if((d|0)==0){f=0;g=f|0;return g|0}e=d;uv(e,b);f=e;g=f|0;return g|0}function uj(a){a=a|0;return}function uk(a){a=a|0;KU(a);return}function ul(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;a=c[b>>2]|0;f=hx[c[(c[a>>2]|0)+56>>2]&127](a,44)|0;if((f|0)==0){g=0;h=g|0;return h|0}a=f;s7(a,b,d,e,1);g=a;h=g|0;return h|0}function um(a){a=a|0;return}function un(a){a=a|0;KU(a);return}function uo(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;a=c[b>>2]|0;f=hx[c[(c[a>>2]|0)+56>>2]&127](a,44)|0;if((f|0)==0){g=0;h=g|0;return h|0}a=f;s7(a,b,d,e,0);g=a;h=g|0;return h|0}function up(a){a=a|0;return}function uq(a){a=a|0;KU(a);return}function ur(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;a=c[b>>2]|0;f=hx[c[(c[a>>2]|0)+56>>2]&127](a,80)|0;if((f|0)==0){g=0;h=g|0;return h|0}a=f;ti(a,b,d,e,1);g=a;h=g|0;return h|0}function us(a){a=a|0;return}function ut(a){a=a|0;KU(a);return}function uu(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;a=c[b>>2]|0;f=hx[c[(c[a>>2]|0)+56>>2]&127](a,80)|0;if((f|0)==0){g=0;h=g|0;return h|0}a=f;ti(a,b,d,e,0);g=a;h=g|0;return h|0}function uv(a,b){a=a|0;b=b|0;pJ(a|0,b);c[a>>2]=33808;return}function uw(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return}function ux(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return+1.0}function uy(a){a=a|0;return}function uz(a){a=a|0;KU(a);return}function uA(a,b){a=a|0;b=b|0;return}function uB(a,b){a=a|0;b=b|0;var c=0.0,d=0.0;c=+g[a+224>>2]*+g[b+224>>2];d=c<-10.0?-10.0:c;return+(d>10.0?10.0:d)}function uC(a,b){a=a|0;b=b|0;return+(+g[a+228>>2]*+g[b+228>>2])}function uD(a,b,d){a=a|0;b=b|0;d=d|0;c[a>>2]=33768;c[a+4>>2]=0;c[a+8>>2]=b;c[a+12>>2]=d;return}function uE(b,d,e,f){b=b|0;d=d|0;e=e|0;f=+f;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0,I=0.0,J=0,K=0,L=0,M=0;h=i;i=i+184|0;j=h|0;k=b+4|0;if(+vV(c[k>>2]|0)<f){i=h;return}l=c[k>>2]|0;m=c[l+740>>2]|0;n=b+8|0;o=c[(c[n>>2]|0)+8>>2]|0;p=(m|0)!=(o|0);q=+g[e>>2];r=+g[d>>2]*f+q;s=+g[e+4>>2];t=+g[d+4>>2]*f+s;u=+g[e+8>>2];v=+g[d+8>>2]*f+u;if(p){w=c[(c[b+12>>2]|0)+8>>2]|0;x=r- +g[w+52>>2];y=t- +g[w+56>>2];z=v- +g[w+60>>2];A=q- +g[o+52>>2];B=s- +g[o+56>>2];C=u- +g[o+60>>2];D=A*+g[o+4>>2]+B*+g[o+20>>2]+C*+g[o+36>>2];E=A*+g[o+8>>2]+B*+g[o+24>>2]+C*+g[o+40>>2];F=A*+g[o+12>>2]+B*+g[o+28>>2]+C*+g[o+44>>2];G=x*+g[w+4>>2]+y*+g[w+20>>2]+z*+g[w+36>>2];H=x*+g[w+8>>2]+y*+g[w+24>>2]+z*+g[w+40>>2];I=x*+g[w+12>>2]+y*+g[w+28>>2]+z*+g[w+44>>2]}else{z=r- +g[m+52>>2];y=t- +g[m+56>>2];x=v- +g[m+60>>2];w=c[(c[b+12>>2]|0)+8>>2]|0;C=q- +g[w+52>>2];q=s- +g[w+56>>2];s=u- +g[w+60>>2];D=C*+g[w+4>>2]+q*+g[w+20>>2]+s*+g[w+36>>2];E=C*+g[w+8>>2]+q*+g[w+24>>2]+s*+g[w+40>>2];F=C*+g[w+12>>2]+q*+g[w+28>>2]+s*+g[w+44>>2];G=z*+g[m+4>>2]+y*+g[m+20>>2]+x*+g[m+36>>2];H=z*+g[m+8>>2]+y*+g[m+24>>2]+x*+g[m+40>>2];I=z*+g[m+12>>2]+y*+g[m+28>>2]+x*+g[m+44>>2]}g[j>>2]=G;g[j+4>>2]=H;g[j+8>>2]=I;g[j+12>>2]=0.0;g[j+16>>2]=D;g[j+20>>2]=E;g[j+24>>2]=F;g[j+28>>2]=0.0;m=j+64|0;w=m;o=d;c[w>>2]=c[o>>2];c[w+4>>2]=c[o+4>>2];c[w+8>>2]=c[o+8>>2];c[w+12>>2]=c[o+12>>2];g[j+80>>2]=f;o=j+84|0;g[o>>2]=0.0;w=j+88|0;g[w>>2]=0.0;d=j+92|0;g[d>>2]=0.0;c[j+112>>2]=0;a[j+116|0]=0;K1(j+120|0,0,32)|0;g[j+48>>2]=r;g[j+52>>2]=t;g[j+56>>2]=v;g[j+60>>2]=0.0;J=j+32|0;K=e;c[J>>2]=c[K>>2];c[J+4>>2]=c[K+4>>2];c[J+8>>2]=c[K+8>>2];c[J+12>>2]=c[K+12>>2];K=vU(l,j)|0;l=(c[n>>2]|0)+8|0;J=b+12|0;e=(c[J>>2]|0)+8|0;v=+g[(c[l>>2]|0)+224>>2]*+g[(c[e>>2]|0)+224>>2];t=v<-10.0?-10.0:v;g[o>>2]=t>10.0?10.0:t;g[d>>2]=+g[(c[l>>2]|0)+228>>2]*+g[(c[e>>2]|0)+228>>2];t=+g[(c[l>>2]|0)+232>>2]*+g[(c[e>>2]|0)+232>>2];v=t<-10.0?-10.0:t;g[w>>2]=v>10.0?10.0:v;w=j+152|0;e=j+168|0;l=m|0;v=+g[j+72>>2];if(+V(+v)>.7071067690849304){t=+g[j+68>>2];r=v*v+t*t;f=1.0/+W(r);g[w>>2]=0.0;F=f*(-0.0-v);g[j+156>>2]=F;E=f*t;g[j+160>>2]=E;g[e>>2]=r*f;f=+g[l>>2];g[j+172>>2]=E*(-0.0-f);g[j+176>>2]=f*F}else{F=+g[l>>2];f=+g[j+68>>2];E=F*F+f*f;r=1.0/+W(E);t=r*(-0.0-f);g[w>>2]=t;f=r*F;g[j+156>>2]=f;g[j+160>>2]=0.0;g[e>>2]=f*(-0.0-v);g[j+172>>2]=v*t;g[j+176>>2]=E*r}if(p){c[j+96>>2]=c[b+20>>2];c[j+100>>2]=c[b+16>>2];c[j+104>>2]=c[b+28>>2];c[j+108>>2]=c[b+24>>2]}else{c[j+96>>2]=c[b+16>>2];c[j+100>>2]=c[b+20>>2];c[j+104>>2]=c[b+24>>2];c[j+108>>2]=c[b+28>>2]}b=c[k>>2]|0;if((K|0)>-1){e=b+4+(K*184|0)+148|0;w=c[e>>2]|0;l=b+4+(K*184|0)+120|0;r=+g[l>>2];m=b+4+(K*184|0)+124|0;E=+g[m>>2];d=b+4+(K*184|0)+128|0;t=+g[d>>2];o=b+4+(K*184|0)+112|0;L=c[o>>2]|0;K2(b+4+(K*184|0)|0,j|0,184)|0;c[o>>2]=L;g[l>>2]=r;g[m>>2]=E;g[d>>2]=t;c[e>>2]=w;M=K}else{M=vW(b,j,0)|0}b=c[12484]|0;if((b|0)==0){i=h;return}do{if((c[(c[(c[n>>2]|0)+8>>2]|0)+204>>2]&8|0)==0){if((c[(c[(c[J>>2]|0)+8>>2]|0)+204>>2]&8|0)!=0){break}i=h;return}}while(0);gX[b&1]((c[k>>2]|0)+4+(M*184|0)|0,c[(p?J:n)>>2]|0,c[j+96>>2]|0,c[j+104>>2]|0,c[(p?n:J)>>2]|0,c[j+100>>2]|0,c[j+108>>2]|0)|0;i=h;return}function uF(a){a=a|0;return}function uG(a){a=a|0;KU(a);return}function uH(b){b=b|0;c[b>>2]=31680;u1(b+4|0);a[b+40|0]=1;c[b+36>>2]=0;c[b+28>>2]=0;c[b+32>>2]=0;a[b+60|0]=1;c[b+56>>2]=0;c[b+48>>2]=0;c[b+52>>2]=0;a[b+64|0]=1;return}function uI(b){b=b|0;var d=0,e=0,f=0,g=0;c[b>>2]=31680;d=b+48|0;e=b+56|0;f=c[e>>2]|0;g=b+60|0;if((f|0)!=0){if((a[g]&1)!=0){zw(f)}c[e>>2]=0}a[g]=1;c[e>>2]=0;c[d>>2]=0;c[b+52>>2]=0;d=b+28|0;e=b+36|0;g=c[e>>2]|0;f=b+40|0;if((g|0)!=0){if((a[f]&1)!=0){zw(g)}c[e>>2]=0}a[f]=1;c[e>>2]=0;c[d>>2]=0;c[b+32>>2]=0;u0(b+4|0);KU(b);return}function uJ(b){b=b|0;var d=0,e=0,f=0,g=0;c[b>>2]=31680;d=b+48|0;e=b+56|0;f=c[e>>2]|0;g=b+60|0;if((f|0)!=0){if((a[g]&1)!=0){zw(f)}c[e>>2]=0}a[g]=1;c[e>>2]=0;c[d>>2]=0;c[b+52>>2]=0;d=b+28|0;e=b+36|0;g=c[e>>2]|0;f=b+40|0;if((g|0)!=0){if((a[f]&1)!=0){zw(g)}c[e>>2]=0}a[f]=1;c[e>>2]=0;c[d>>2]=0;c[b+32>>2]=0;u0(b+4|0);return}function uK(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;b=c[d+76>>2]|0;d=g3[c[(c[b>>2]|0)+36>>2]&511](b)|0;b=g3[c[(c[d>>2]|0)+36>>2]&511](d)|0;if((b|0)==0){return}e=g3[c[(c[d>>2]|0)+20>>2]&511](d)|0;if((b|0)<=0){return}d=a+16|0;a=0;do{f=c[c[e+(a<<4)>>2]>>2]|0;g=c[c[e+(a<<4)+4>>2]>>2]|0;do{if((f|0)!=0){if((c[f+204>>2]&7|0)!=0|(g|0)==0){break}if((c[g+204>>2]&7|0)!=0){break}h=c[f+208>>2]|0;i=c[g+208>>2]|0;j=c[d>>2]|0;k=j+(h<<3)|0;l=c[k>>2]|0;if((l|0)==(h|0)){m=h;n=j}else{h=j;j=k;k=l;while(1){l=h+(k<<3)|0;c[j>>2]=c[l>>2];o=c[l>>2]|0;l=c[d>>2]|0;p=l+(o<<3)|0;q=c[p>>2]|0;if((o|0)==(q|0)){m=o;n=l;break}else{h=l;j=p;k=q}}}k=n+(i<<3)|0;j=c[k>>2]|0;if((j|0)==(i|0)){r=i;s=n}else{h=n;q=k;k=j;while(1){j=h+(k<<3)|0;c[q>>2]=c[j>>2];p=c[j>>2]|0;j=c[d>>2]|0;l=j+(p<<3)|0;o=c[l>>2]|0;if((p|0)==(o|0)){r=p;s=j;break}else{h=j;q=l;k=o}}}if((m|0)==(r|0)){break}c[s+(m<<3)>>2]=r;k=c[d>>2]|0;q=k+(r<<3)+4|0;c[q>>2]=(c[q>>2]|0)+(c[k+(m<<3)+4>>2]|0)}}while(0);a=a+1|0;}while((a|0)<(b|0));return}function uL(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,h=0,i=0,j=0,k=0;d=b+8|0;if((c[d>>2]|0)>0){e=b+16|0;f=0;h=0;while(1){i=c[(c[e>>2]|0)+(f<<2)>>2]|0;if((c[i+204>>2]&3|0)==0){c[i+208>>2]=h;j=h+1|0}else{j=h}c[i+212>>2]=-1;g[i+244>>2]=1.0;i=f+1|0;if((i|0)<(c[d>>2]|0)){f=i;h=j}else{k=j;break}}}else{k=0}u3(a+4|0,k);uK(a,0,b);return}function uM(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;d=b+8|0;if((c[d>>2]|0)<=0){return}e=b+16|0;b=a+16|0;a=0;f=0;while(1){g=c[(c[e>>2]|0)+(a<<2)>>2]|0;if((c[g+204>>2]&3|0)==0){h=c[b>>2]|0;i=h+(f<<3)|0;j=c[i>>2]|0;if((j|0)==(f|0)){k=f}else{l=h;h=i;i=j;while(1){j=l+(i<<3)|0;c[h>>2]=c[j>>2];m=c[j>>2]|0;j=c[b>>2]|0;n=j+(m<<3)|0;o=c[n>>2]|0;if((m|0)==(o|0)){k=m;break}else{l=j;h=n;i=o}}}c[g+208>>2]=k;c[(c[b>>2]|0)+(f<<3)+4>>2]=a;c[g+212>>2]=-1;p=f+1|0}else{c[g+208>>2]=-1;c[g+212>>2]=-2;p=f}i=a+1|0;if((i|0)<(c[d>>2]|0)){a=i;f=p}else{break}}return}function uN(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0;z_(13952);f=b+28|0;h=c[f>>2]|0;if((h|0)<0){i=b+32|0;j=b+36|0;if((c[i>>2]|0)<0){k=c[j>>2]|0;l=b+40|0;if((k|0)!=0){if((a[l]&1)!=0){zw(k)}c[j>>2]=0}a[l]=1;c[j>>2]=0;c[i>>2]=0}i=h;do{h=(c[j>>2]|0)+(i<<2)|0;if((h|0)!=0){c[h>>2]=0}i=i+1|0;}while((i|0)<0)}c[f>>2]=0;u4(b+4|0);i=c[b+8>>2]|0;if((i|0)>0){j=b+16|0;h=e+16|0;e=0;while(1){l=c[j>>2]|0;k=c[l+(e<<3)>>2]|0;m=e;do{m=m+1|0;n=(m|0)<(i|0);if(!n){break}}while((c[l+(m<<3)>>2]|0)==(k|0));o=(e|0)<(m|0);L27:do{if(o){p=c[h>>2]|0;q=e;r=1;while(1){s=c[p+(c[l+(q<<3)+4>>2]<<2)>>2]|0;if((c[s+208>>2]|0)==(k|0)){t=c[s+216>>2]|0;u=r&(t|0)!=1&(t|0)!=4}else{u=r}t=q+1|0;if((t|0)<(m|0)){q=t;r=u}else{break}}if(u){if(o){v=e;w=l}else{break}while(1){r=c[(c[h>>2]|0)+(c[w+(v<<3)+4>>2]<<2)>>2]|0;if((c[r+208>>2]|0)==(k|0)){rS(r,2)}r=v+1|0;if((r|0)>=(m|0)){break L27}v=r;w=c[j>>2]|0}}if(o){x=e;y=l}else{break}while(1){r=c[(c[h>>2]|0)+(c[y+(x<<3)+4>>2]<<2)>>2]|0;do{if((c[r+208>>2]|0)==(k|0)){if((c[r+216>>2]|0)!=2){break}rS(r,3);g[r+220>>2]=0.0}}while(0);r=x+1|0;if((r|0)>=(m|0)){break L27}x=r;y=c[j>>2]|0}}}while(0);if(n){e=m}else{break}}}e=g3[c[(c[d>>2]|0)+36>>2]&511](d)|0;if((e|0)>0){n=d;j=b+64|0;y=d;x=b+32|0;h=b+36|0;w=b+40|0;b=0;do{v=hx[c[(c[n>>2]|0)+40>>2]&127](d,b)|0;u=c[v+740>>2]|0;i=c[v+744>>2]|0;if((u|0)==0){z=50}else{if((c[u+216>>2]|0)==2){z=50}else{z=52}}do{if((z|0)==50){z=0;if((i|0)==0){break}if((c[i+216>>2]|0)!=2){z=52}}}while(0);do{if((z|0)==52){z=0;m=c[u+204>>2]|0;do{if((m&2|0)!=0){if((c[u+216>>2]|0)==2){break}if((m&4|0)!=0){break}rT(i,0)}}while(0);m=c[i+204>>2]|0;do{if((m&2|0)!=0){if((c[i+216>>2]|0)==2){break}if((m&4|0)!=0){break}rT(u,0)}}while(0);if((a[j]&1)==0){break}if(!(hd[c[(c[y>>2]|0)+28>>2]&127](d,u,i)|0)){break}m=c[f>>2]|0;do{if((m|0)==(c[x>>2]|0)){k=(m|0)==0?1:m<<1;if((m|0)>=(k|0)){A=m;break}if((k|0)==0){B=0;C=m}else{l=zv(k<<2,16)|0;B=l;C=c[f>>2]|0}if((C|0)>0){l=0;do{o=B+(l<<2)|0;if((o|0)!=0){c[o>>2]=c[(c[h>>2]|0)+(l<<2)>>2]}l=l+1|0;}while((l|0)<(C|0))}l=c[h>>2]|0;if((l|0)!=0){if((a[w]&1)!=0){zw(l)}c[h>>2]=0}a[w]=1;c[h>>2]=B;c[x>>2]=k;A=c[f>>2]|0}else{A=m}}while(0);m=(c[h>>2]|0)+(A<<2)|0;if((m|0)==0){D=A}else{c[m>>2]=v;D=c[f>>2]|0}c[f>>2]=D+1}}while(0);b=b+1|0;}while((b|0)<(e|0))}z$();return}function uO(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0;g=i;i=i+8|0;h=g|0;uN(b,d,e);j=c[b+8>>2]|0;z_(22800);do{if((a[b+64|0]&1)==0){k=g3[c[(c[d>>2]|0)+44>>2]&511](d)|0;l=g3[c[(c[d>>2]|0)+36>>2]&511](d)|0;hk[c[(c[f>>2]|0)+8>>2]&63](f,c[e+16>>2]|0,c[e+8>>2]|0,k,l,-1)}else{l=c[b+28>>2]|0;if((l|0)>1){uP(b+24|0,h,0,l-1|0)}if((j|0)<=0){break}k=b+16|0;m=b+36|0;n=b+48|0;o=b+52|0;p=b+56|0;q=b+60|0;r=f;s=e+16|0;t=1;u=0;v=0;while(1){w=c[k>>2]|0;x=c[w+(v<<3)>>2]|0;L9:do{if((v|0)<(j|0)){y=1;z=v;A=w;B=x;while(1){if((B|0)!=(x|0)){C=y;D=z;break L9}E=c[(c[s>>2]|0)+(c[A+(z<<3)+4>>2]<<2)>>2]|0;F=c[n>>2]|0;do{if((F|0)==(c[o>>2]|0)){G=(F|0)==0?1:F<<1;if((F|0)>=(G|0)){H=F;break}if((G|0)==0){I=0;J=F}else{K=zv(G<<2,16)|0;I=K;J=c[n>>2]|0}if((J|0)>0){K=0;do{L=I+(K<<2)|0;if((L|0)!=0){c[L>>2]=c[(c[p>>2]|0)+(K<<2)>>2]}K=K+1|0;}while((K|0)<(J|0))}K=c[p>>2]|0;if((K|0)!=0){if((a[q]&1)!=0){zw(K)}c[p>>2]=0}a[q]=1;c[p>>2]=I;c[o>>2]=G;H=c[n>>2]|0}else{H=F}}while(0);F=(c[p>>2]|0)+(H<<2)|0;if((F|0)==0){M=H}else{c[F>>2]=E;M=c[n>>2]|0}c[n>>2]=M+1;F=c[E+216>>2]|0;K=y&((F|0)==2|(F|0)==5);F=z+1|0;if((F|0)>=(j|0)){C=K;D=F;break L9}L=c[k>>2]|0;y=K;z=F;A=L;B=c[L+(F<<3)>>2]|0}}else{C=1;D=v}}while(0);do{if((u|0)<(l|0)){w=c[m>>2]|0;B=w+(u<<2)|0;A=c[B>>2]|0;z=c[(c[A+740>>2]|0)+208>>2]|0;if((z|0)>-1){N=z}else{N=c[(c[A+744>>2]|0)+208>>2]|0}if((N|0)==(x|0)){O=u}else{P=0;Q=0;R=t;break}do{O=O+1|0;if((O|0)>=(l|0)){break}A=c[w+(O<<2)>>2]|0;z=c[(c[A+740>>2]|0)+208>>2]|0;if((z|0)>-1){S=z}else{S=c[(c[A+744>>2]|0)+208>>2]|0}}while((x|0)==(S|0));P=B;Q=O-u|0;R=O}else{P=0;Q=0;R=t}}while(0);if(!C){hk[c[(c[r>>2]|0)+8>>2]&63](f,c[p>>2]|0,c[n>>2]|0,P,Q,x)}w=(Q|0)==0?u:R;A=c[n>>2]|0;if((A|0)<0){if((c[o>>2]|0)<0){z=c[p>>2]|0;if((z|0)!=0){if((a[q]&1)!=0){zw(z)}c[p>>2]=0}a[q]=1;c[p>>2]=0;c[o>>2]=0;T=A}else{T=A}do{A=(c[p>>2]|0)+(T<<2)|0;if((A|0)!=0){c[A>>2]=0}T=T+1|0;}while((T|0)<0)}c[n>>2]=0;if((D|0)<(j|0)){t=R;u=w;v=D}else{break}}}}while(0);z$();i=g;return}function uP(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;f=a+12|0;g=d;while(1){d=c[f>>2]|0;h=c[d+(((g+e|0)/2|0)<<2)>>2]|0;i=h+740|0;j=h+744|0;h=g;k=e;l=d;while(1){d=c[(c[i>>2]|0)+208>>2]|0;m=(d|0)>-1;if(m){n=h;while(1){o=c[l+(n<<2)>>2]|0;p=c[(c[o+740>>2]|0)+208>>2]|0;if((p|0)>-1){q=p}else{q=c[(c[o+744>>2]|0)+208>>2]|0}if((q|0)<(d|0)){n=n+1|0}else{r=n;s=o;break}}}else{n=h;while(1){o=c[l+(n<<2)>>2]|0;p=c[(c[o+740>>2]|0)+208>>2]|0;if((p|0)>-1){t=p}else{t=c[(c[o+744>>2]|0)+208>>2]|0}if((t|0)<(c[(c[j>>2]|0)+208>>2]|0)){n=n+1|0}else{r=n;s=o;break}}}if(m){n=k;while(1){o=c[l+(n<<2)>>2]|0;p=c[(c[o+740>>2]|0)+208>>2]|0;if((p|0)>-1){u=p}else{u=c[(c[o+744>>2]|0)+208>>2]|0}if((d|0)<(u|0)){n=n-1|0}else{v=n;w=o;break}}}else{n=k;while(1){d=c[l+(n<<2)>>2]|0;m=c[(c[d+740>>2]|0)+208>>2]|0;if((m|0)>-1){x=m}else{x=c[(c[d+744>>2]|0)+208>>2]|0}if((c[(c[j>>2]|0)+208>>2]|0)<(x|0)){n=n-1|0}else{v=n;w=d;break}}}if((r|0)>(v|0)){y=r;z=v}else{c[l+(r<<2)>>2]=w;c[(c[f>>2]|0)+(v<<2)>>2]=s;y=r+1|0;z=v-1|0}if((y|0)>(z|0)){break}h=y;k=z;l=c[f>>2]|0}if((z|0)>(g|0)){uP(a,b,g,z)}if((y|0)<(e|0)){g=y}else{break}}return}function uQ(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0;rf(b|0,e,f,g);c[b>>2]=31032;e=b+8|0;a[e]=0;h=b+12|0;c[h>>2]=d;if((d|0)!=0){return}d=c[b+4>>2]|0;c[h>>2]=hd[c[(c[d>>2]|0)+12>>2]&127](d,c[f+8>>2]|0,c[g+8>>2]|0)|0;a[e]=1;return}function uR(b){b=b|0;var d=0,e=0;c[b>>2]=31032;do{if((a[b+8|0]&1)!=0){d=c[b+12>>2]|0;if((d|0)==0){break}e=c[b+4>>2]|0;g0[c[(c[e>>2]|0)+16>>2]&511](e,d)}}while(0);rh(b|0);KU(b);return}function uS(b){b=b|0;var d=0,e=0;c[b>>2]=31032;do{if((a[b+8|0]&1)!=0){d=c[b+12>>2]|0;if((d|0)==0){break}e=c[b+4>>2]|0;g0[c[(c[e>>2]|0)+16>>2]&511](e,d)}}while(0);rh(b|0);return}function uT(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0.0,p=0,q=0.0,r=0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0;e=i;i=i+32|0;h=e|0;j=e+16|0;k=c[a+12>>2]|0;if((k|0)==0){i=e;return}a=f+4|0;c[a>>2]=k;l=c[b+4>>2]|0;m=c[d+4>>2]|0;n=c[b+12>>2]|0;b=c[d+12>>2]|0;d=b+48|0;o=+g[n+48>>2]- +g[d>>2];p=b+52|0;q=+g[n+52>>2]- +g[p>>2];r=b+56|0;s=+g[n+56>>2]- +g[r>>2];t=+W(o*o+q*q+s*s);u=+g[m+28>>2]*+g[m+12>>2];v=+g[l+28>>2]*+g[l+12>>2]+u;if(t>v){if((c[k+748>>2]|0)==0){i=e;return}l=c[k+740>>2]|0;m=c[(c[f+8>>2]|0)+8>>2]|0;if((l|0)==(m|0)){vX(k,l+4|0,(c[(c[f+12>>2]|0)+8>>2]|0)+4|0);i=e;return}else{vX(k,(c[(c[f+12>>2]|0)+8>>2]|0)+4|0,m+4|0);i=e;return}}m=h|0;g[m>>2]=1.0;k=h+4|0;g[k>>2]=0.0;l=h+8|0;g[l>>2]=0.0;n=h+12|0;g[n>>2]=0.0;if(t>1.1920928955078125e-7){w=1.0/t;x=o*w;o=q*w;q=s*w;g[m>>2]=x;g[k>>2]=o;g[l>>2]=q;g[n>>2]=0.0;y=x;z=o;A=q}else{y=1.0;z=0.0;A=0.0}q=u*z+ +g[p>>2];z=u*A+ +g[r>>2];g[j>>2]=u*y+ +g[d>>2];g[j+4>>2]=q;g[j+8>>2]=z;g[j+12>>2]=0.0;ha[c[(c[f>>2]|0)+16>>2]&31](f,h,j,t-v);j=c[a>>2]|0;if((c[j+748>>2]|0)==0){i=e;return}a=c[j+740>>2]|0;h=c[(c[f+8>>2]|0)+8>>2]|0;if((a|0)==(h|0)){vX(j,a+4|0,(c[(c[f+12>>2]|0)+8>>2]|0)+4|0);i=e;return}else{vX(j,(c[(c[f+12>>2]|0)+8>>2]|0)+4|0,h+4|0);i=e;return}}function uU(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return+1.0}function uV(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;e=b+12|0;if((c[e>>2]|0)==0){return}if((a[b+8|0]&1)==0){return}b=d+4|0;f=c[b>>2]|0;g=d+8|0;do{if((f|0)==(c[g>>2]|0)){h=(f|0)==0?1:f<<1;if((f|0)>=(h|0)){i=f;break}if((h|0)==0){j=0;k=f}else{l=zv(h<<2,16)|0;j=l;k=c[b>>2]|0}l=d+12|0;if((k|0)>0){m=0;do{n=j+(m<<2)|0;if((n|0)!=0){c[n>>2]=c[(c[l>>2]|0)+(m<<2)>>2]}m=m+1|0;}while((m|0)<(k|0))}m=c[l>>2]|0;n=d+16|0;if((m|0)!=0){if((a[n]&1)!=0){zw(m)}c[l>>2]=0}a[n]=1;c[l>>2]=j;c[g>>2]=h;i=c[b>>2]|0}else{i=f}}while(0);f=(c[d+12>>2]|0)+(i<<2)|0;if((f|0)==0){o=i}else{c[f>>2]=c[e>>2];o=c[b>>2]|0}c[b>>2]=o+1;return}function uW(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0;rf(b|0,e,f,g);c[b>>2]=30888;e=b+8|0;a[e]=0;i=b+12|0;c[i>>2]=d;a[b+16|0]=h&1;if((d|0)!=0){return}d=c[b+4>>2]|0;c[i>>2]=hd[c[(c[d>>2]|0)+12>>2]&127](d,c[f+8>>2]|0,c[g+8>>2]|0)|0;a[e]=1;return}function uX(b){b=b|0;var d=0,e=0;c[b>>2]=30888;do{if((a[b+8|0]&1)!=0){d=c[b+12>>2]|0;if((d|0)==0){break}e=c[b+4>>2]|0;g0[c[(c[e>>2]|0)+16>>2]&511](e,d)}}while(0);rh(b|0);KU(b);return}function uY(b){b=b|0;var d=0,e=0;c[b>>2]=30888;do{if((a[b+8|0]&1)!=0){d=c[b+12>>2]|0;if((d|0)==0){break}e=c[b+4>>2]|0;g0[c[(c[e>>2]|0)+16>>2]&511](e,d)}}while(0);rh(b|0);return}function uZ(b,d,e,f,h){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;j=i;i=i+152|0;k=j|0;l=j+16|0;m=b+12|0;n=c[m>>2]|0;if((n|0)==0){i=j;return}o=b+16|0;p=(a[o]&1)!=0;q=p?e:d;r=p?d:e;e=c[q+4>>2]|0;d=c[r+4>>2]|0;p=h+4|0;c[p>>2]=n;lZ(k,e,d,+vV(c[m>>2]|0));c[l+132>>2]=0;g[l+128>>2]=999999984306749400.0;m=c[q+12>>2]|0;q=l;d=m;c[q>>2]=c[d>>2];c[q+4>>2]=c[d+4>>2];c[q+8>>2]=c[d+8>>2];c[q+12>>2]=c[d+12>>2];d=l+16|0;q=m+16|0;c[d>>2]=c[q>>2];c[d+4>>2]=c[q+4>>2];c[d+8>>2]=c[q+8>>2];c[d+12>>2]=c[q+12>>2];q=l+32|0;d=m+32|0;c[q>>2]=c[d>>2];c[q+4>>2]=c[d+4>>2];c[q+8>>2]=c[d+8>>2];c[q+12>>2]=c[d+12>>2];d=l+48|0;q=m+48|0;c[d>>2]=c[q>>2];c[d+4>>2]=c[q+4>>2];c[d+8>>2]=c[q+8>>2];c[d+12>>2]=c[q+12>>2];q=c[r+12>>2]|0;r=l+64|0;d=q;c[r>>2]=c[d>>2];c[r+4>>2]=c[d+4>>2];c[r+8>>2]=c[d+8>>2];c[r+12>>2]=c[d+12>>2];d=l+80|0;r=q+16|0;c[d>>2]=c[r>>2];c[d+4>>2]=c[r+4>>2];c[d+8>>2]=c[r+8>>2];c[d+12>>2]=c[r+12>>2];r=l+96|0;d=q+32|0;c[r>>2]=c[d>>2];c[r+4>>2]=c[d+4>>2];c[r+8>>2]=c[d+8>>2];c[r+12>>2]=c[d+12>>2];d=l+112|0;r=q+48|0;c[d>>2]=c[r>>2];c[d+4>>2]=c[r+4>>2];c[d+8>>2]=c[r+8>>2];c[d+12>>2]=c[r+12>>2];l_(k,l,h|0,c[f+20>>2]|0,(a[o]&1)!=0);if((a[b+8|0]&1)==0){i=j;return}b=c[p>>2]|0;if((c[b+748>>2]|0)==0){i=j;return}p=c[b+740>>2]|0;o=c[(c[h+8>>2]|0)+8>>2]|0;if((p|0)==(o|0)){vX(b,p+4|0,(c[(c[h+12>>2]|0)+8>>2]|0)+4|0);i=j;return}else{vX(b,(c[(c[h+12>>2]|0)+8>>2]|0)+4|0,o+4|0);i=j;return}}function u_(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return+1.0}function u$(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;e=b+12|0;if((c[e>>2]|0)==0){return}if((a[b+8|0]&1)==0){return}b=d+4|0;f=c[b>>2]|0;g=d+8|0;do{if((f|0)==(c[g>>2]|0)){h=(f|0)==0?1:f<<1;if((f|0)>=(h|0)){i=f;break}if((h|0)==0){j=0;k=f}else{l=zv(h<<2,16)|0;j=l;k=c[b>>2]|0}l=d+12|0;if((k|0)>0){m=0;do{n=j+(m<<2)|0;if((n|0)!=0){c[n>>2]=c[(c[l>>2]|0)+(m<<2)>>2]}m=m+1|0;}while((m|0)<(k|0))}m=c[l>>2]|0;n=d+16|0;if((m|0)!=0){if((a[n]&1)!=0){zw(m)}c[l>>2]=0}a[n]=1;c[l>>2]=j;c[g>>2]=h;i=c[b>>2]|0}else{i=f}}while(0);f=(c[d+12>>2]|0)+(i<<2)|0;if((f|0)==0){o=i}else{c[f>>2]=c[e>>2];o=c[b>>2]|0}c[b>>2]=o+1;return}function u0(b){b=b|0;var d=0,e=0,f=0,g=0;d=b+4|0;e=b+12|0;f=c[e>>2]|0;g=b+16|0;if((f|0)!=0){if((a[g]&1)!=0){zw(f)}c[e>>2]=0}a[g]=1;c[e>>2]=0;c[d>>2]=0;c[b+8>>2]=0;return}function u1(b){b=b|0;a[b+16|0]=1;c[b+12>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;return}function u2(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;e=b+4|0;f=c[e>>2]|0;if((f|0)>=(d|0)){c[e>>2]=d;return}g=b+8|0;if((c[g>>2]|0)<(d|0)){if((d|0)==0){h=0;i=f}else{j=zv(d<<3,16)|0;h=j;i=c[e>>2]|0}j=b+12|0;if((i|0)>0){k=0;do{l=h+(k<<3)|0;if((l|0)!=0){m=(c[j>>2]|0)+(k<<3)|0;n=l;l=c[m+4>>2]|0;c[n>>2]=c[m>>2];c[n+4>>2]=l}k=k+1|0;}while((k|0)<(i|0))}i=c[j>>2]|0;k=b+16|0;if((i|0)!=0){if((a[k]&1)!=0){zw(i)}c[j>>2]=0}a[k]=1;c[j>>2]=h;c[g>>2]=d;o=j}else{o=b+12|0}b=f;do{f=(c[o>>2]|0)+(b<<3)|0;if((f|0)!=0){j=f;c[j>>2]=0;c[j+4>>2]=0}b=b+1|0;}while((b|0)<(d|0));c[e>>2]=d;return}function u3(a,b){a=a|0;b=b|0;var d=0;u2(a,b);if((b|0)<=0){return}d=a+12|0;a=0;do{c[(c[d>>2]|0)+(a<<3)>>2]=a;c[(c[d>>2]|0)+(a<<3)+4>>2]=1;a=a+1|0;}while((a|0)<(b|0));return}function u4(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;b=i;i=i+8|0;d=b|0;e=a|0;f=a+4|0;g=c[f>>2]|0;if((g|0)<=0){i=b;return}h=a+12|0;a=0;do{j=c[h>>2]|0;k=j+(a<<3)|0;l=c[k>>2]|0;if((l|0)==(a|0)){m=a;n=j}else{o=j;j=k;k=l;while(1){l=o+(k<<3)|0;c[j>>2]=c[l>>2];p=c[l>>2]|0;l=c[h>>2]|0;q=l+(p<<3)|0;r=c[q>>2]|0;if((p|0)==(r|0)){m=p;n=l;break}else{o=l;j=q;k=r}}}c[n+(a<<3)>>2]=m;a=a+1|0;}while((a|0)<(g|0));g=c[f>>2]|0;if((g|0)<=1){i=b;return}u5(e,d,0,g-1|0);i=b;return}function u5(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;f=a+12|0;g=d;while(1){d=c[f>>2]|0;h=c[d+(((g+e|0)/2|0)<<3)>>2]|0;i=e;j=g;k=d;while(1){d=j;while(1){l=d+1|0;if((c[k+(d<<3)>>2]|0)<(h|0)){d=l}else{m=i;break}}while(1){n=k+(m<<3)|0;o=m-1|0;if((h|0)<(c[n>>2]|0)){m=o}else{break}}if((d|0)>(m|0)){p=m;q=d}else{r=k+(d<<3)|0;s=c[r>>2]|0;t=c[r+4>>2]|0;u=n;v=c[u+4>>2]|0;c[r>>2]=c[u>>2];c[r+4>>2]=v;v=(c[f>>2]|0)+(m<<3)|0;c[v>>2]=s;c[v+4>>2]=t;p=o;q=l}if((q|0)>(p|0)){break}i=p;j=q;k=c[f>>2]|0}if((p|0)>(g|0)){u5(a,b,g,p)}if((q|0)<(e|0)){g=q}else{break}}return}function u6(a){a=a|0;var b=0,d=0,e=0,f=0,g=0;c[a>>2]=32424;b=a+76|0;if((c[b>>2]|0)==0){d=a;KU(d);return}else{e=0}do{f=a+12+(e<<2)|0;g=c[f>>2]|0;zw(c[g>>2]|0);zw(c[g+4>>2]|0);zw(c[g+8>>2]|0);c[g+12>>2]=0;c[g+16>>2]=0;zw(c[f>>2]|0);e=e+1|0;}while(e>>>0<(c[b>>2]|0)>>>0);d=a;KU(d);return}function u7(a){a=a|0;var b=0,d=0,e=0,f=0;c[a>>2]=32424;b=a+76|0;if((c[b>>2]|0)==0){return}else{d=0}do{e=a+12+(d<<2)|0;f=c[e>>2]|0;zw(c[f>>2]|0);zw(c[f+4>>2]|0);zw(c[f+8>>2]|0);c[f+12>>2]=0;c[f+16>>2]=0;zw(c[e>>2]|0);d=d+1|0;}while(d>>>0<(c[b>>2]|0)>>>0);return}function u8(a){a=a|0;var b=0,d=0,e=0,f=0;c[a>>2]=32424;b=a+76|0;if((c[b>>2]|0)==0){return}else{d=0}do{e=a+12+(d<<2)|0;f=c[e>>2]|0;zw(c[f>>2]|0);zw(c[f+4>>2]|0);zw(c[f+8>>2]|0);c[f+12>>2]=0;c[f+16>>2]=0;zw(c[e>>2]|0);d=d+1|0;}while(d>>>0<(c[b>>2]|0)>>>0);return}function u9(a){a=a|0;var b=0,d=0,e=0,f=0,g=0;c[a>>2]=32424;b=a+76|0;if((c[b>>2]|0)==0){d=a;KU(d);return}else{e=0}do{f=a+12+(e<<2)|0;g=c[f>>2]|0;zw(c[g>>2]|0);zw(c[g+4>>2]|0);zw(c[g+8>>2]|0);c[g+12>>2]=0;c[g+16>>2]=0;zw(c[f>>2]|0);e=e+1|0;}while(e>>>0<(c[b>>2]|0)>>>0);d=a;KU(d);return}function va(){c[12455]=0;c[12437]=8;c[12438]=32768;c[12436]=32632;ep(158,49744,q|0)|0;return}function vb(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;c[a>>2]=31464;c[a+4>>2]=e;c[a+8>>2]=f;c[a+12>>2]=b;c[a+16>>2]=d;c[a+20>>2]=0;return}function vc(a,b,d){a=a|0;b=b|0;d=d|0;c[a>>2]=31464;c[a+4>>2]=0;c[a+8>>2]=0;c[a+12>>2]=b;c[a+16>>2]=0;c[a+20>>2]=d;return}function vd(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0.0,N=0.0,O=0.0,P=0.0,Q=0.0,R=0.0,S=0.0,T=0.0,U=0.0,V=0,W=0.0,X=0,Y=0.0,Z=0,_=0.0,$=0.0,aa=0.0,ab=0.0,ac=0.0,ad=0.0,ae=0.0,af=0.0,ag=0,ah=0,ai=0,aj=0;f=i;i=i+280|0;h=f|0;j=f+80|0;k=f+216|0;l=f+232|0;m=f+248|0;n=f+264|0;o=a+16|0;if((c[o>>2]|0)==0){p=c[a+12>>2]|0;q=c[a+20>>2]|0;r=+g[b>>2];s=+g[b+4>>2];t=+g[b+8>>2];u=+g[b+16>>2];v=+g[b+20>>2];w=+g[b+24>>2];x=+g[b+32>>2];y=+g[b+36>>2];z=+g[b+40>>2];A=+g[b+48>>2];B=+g[b+52>>2];C=+g[b+56>>2];D=d|0;E=d+16|0;F=d+32|0;G=d+4|0;H=d+20|0;I=d+36|0;J=d+8|0;K=d+24|0;L=d+40|0;M=+g[D>>2];N=+g[E>>2];O=+g[F>>2];P=+g[G>>2];Q=+g[H>>2];R=+g[I>>2];S=+g[J>>2];T=+g[K>>2];U=+g[L>>2];V=d+48|0;W=-0.0- +g[V>>2];X=d+52|0;Y=-0.0- +g[X>>2];Z=d+56|0;_=-0.0- +g[Z>>2];$=r*M+u*N+x*O;aa=s*M+v*N+y*O;ab=t*M+w*N+z*O;ac=r*P+u*Q+x*R;ad=s*P+v*Q+y*R;ae=t*P+w*Q+z*R;af=r*S+u*T+x*U;x=s*S+v*T+y*U;y=t*S+w*T+z*U;ag=c[(c[p>>2]|0)+64>>2]|0;ah=q+48|0;z=-0.0- +g[ah>>2];ai=q+52|0;w=-0.0- +g[ai>>2];aj=q+56|0;t=-0.0- +g[aj>>2];g[l>>2]=$*z+ac*w+af*t;g[l+4>>2]=aa*z+ad*w+x*t;g[l+8>>2]=ab*z+ae*w+y*t;g[l+12>>2]=0.0;hF[ag&255](k,p,l);t=+g[k>>2];w=+g[k+4>>2];z=+g[k+8>>2];v=A*M+B*N+C*O+(M*W+N*Y+O*_)+($*t+aa*w+ab*z);ab=A*P+B*Q+C*R+(P*W+Q*Y+R*_)+(ac*t+ad*w+ae*z);ae=A*S+B*T+C*U+(S*W+T*Y+U*_)+(af*t+x*w+y*z);z=+g[ah>>2];y=+g[ai>>2];w=+g[aj>>2];x=w*ae+(z*v+y*ab)- +g[q+64>>2];t=v-z*x;z=ab-y*x;y=ae-w*x;w=+g[D>>2];ae=+g[G>>2];ab=+g[J>>2];v=+g[E>>2];af=+g[H>>2];_=+g[K>>2];U=+g[F>>2];Y=+g[I>>2];T=+g[L>>2];W=v*t+z*af+y*_+ +g[X>>2];S=t*U+z*Y+y*T+ +g[Z>>2];g[m>>2]=ab*y+(w*t+ae*z)+ +g[V>>2];g[m+4>>2]=W;g[m+8>>2]=S;g[m+12>>2]=0.0;S=+g[ah>>2];W=+g[ai>>2];z=+g[aj>>2];g[n>>2]=w*S+ae*W+ab*z;g[n+4>>2]=S*v+W*af+z*_;g[n+8>>2]=S*U+W*Y+z*T;g[n+12>>2]=0.0;ha[c[(c[e>>2]|0)+16>>2]&31](e,n,m,x);i=f;return}else{m=a+4|0;wf(c[m>>2]|0);n=c[a+12>>2]|0;aj=c[o>>2]|0;ai=c[n+4>>2]|0;ah=c[aj+4>>2]|0;x=+g6[c[(c[n>>2]|0)+48>>2]&15](n);V=c[o>>2]|0;T=+g6[c[(c[V>>2]|0)+48>>2]&15](V);vE(h,n,aj,ai,ah,x,T,c[m>>2]|0,c[a+8>>2]|0);g[j+128>>2]=999999984306749400.0;c[j+132>>2]=0;a=j;m=b;c[a>>2]=c[m>>2];c[a+4>>2]=c[m+4>>2];c[a+8>>2]=c[m+8>>2];c[a+12>>2]=c[m+12>>2];m=j+16|0;a=b+16|0;c[m>>2]=c[a>>2];c[m+4>>2]=c[a+4>>2];c[m+8>>2]=c[a+8>>2];c[m+12>>2]=c[a+12>>2];a=j+32|0;m=b+32|0;c[a>>2]=c[m>>2];c[a+4>>2]=c[m+4>>2];c[a+8>>2]=c[m+8>>2];c[a+12>>2]=c[m+12>>2];m=j+48|0;a=b+48|0;c[m>>2]=c[a>>2];c[m+4>>2]=c[a+4>>2];c[m+8>>2]=c[a+8>>2];c[m+12>>2]=c[a+12>>2];a=j+64|0;m=d;c[a>>2]=c[m>>2];c[a+4>>2]=c[m+4>>2];c[a+8>>2]=c[m+8>>2];c[a+12>>2]=c[m+12>>2];m=j+80|0;a=d+16|0;c[m>>2]=c[a>>2];c[m+4>>2]=c[a+4>>2];c[m+8>>2]=c[a+8>>2];c[m+12>>2]=c[a+12>>2];a=j+96|0;m=d+32|0;c[a>>2]=c[m>>2];c[a+4>>2]=c[m+4>>2];c[a+8>>2]=c[m+8>>2];c[a+12>>2]=c[m+12>>2];m=j+112|0;a=d+48|0;c[m>>2]=c[a>>2];c[m+4>>2]=c[a+4>>2];c[m+8>>2]=c[a+8>>2];c[m+12>>2]=c[a+12>>2];vF(h,j,e|0,0,0);i=f;return}}function ve(b,d,e,f,h,j){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0,I=0.0,J=0.0,K=0.0,L=0.0,M=0.0,N=0.0,O=0.0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0;k=i;i=i+384|0;l=k|0;m=k+16|0;n=k+24|0;o=k+40|0;p=k+48|0;q=k+64|0;r=k+80|0;s=k+96|0;t=k+112|0;u=k+128|0;v=k+176|0;w=k+192|0;x=k+256|0;y=k+320|0;z=k+336|0;A=+g[e+48>>2]- +g[d+48>>2];B=+g[e+52>>2]- +g[d+52>>2];C=+g[e+56>>2]- +g[d+56>>2];g[p>>2]=A;g[p+4>>2]=B;g[p+8>>2]=C;g[p+12>>2]=0.0;sE(d,e,n,o);D=+g[o>>2];E=+g[n>>2]*D;F=D*+g[n+4>>2];G=D*+g[n+8>>2];g[q>>2]=E;g[q+4>>2]=F;g[q+8>>2]=G;g[q+12>>2]=0.0;D=+g[h+48>>2]- +g[f+48>>2];H=+g[h+52>>2]- +g[f+52>>2];I=+g[h+56>>2]- +g[f+56>>2];g[r>>2]=D;g[r+4>>2]=H;g[r+8>>2]=I;g[r+12>>2]=0.0;sE(f,h,l,m);J=+g[m>>2];K=+g[l>>2]*J;L=J*+g[l+4>>2];M=J*+g[l+8>>2];g[s>>2]=K;g[s+4>>2]=L;g[s+8>>2]=M;g[s+12>>2]=0.0;l=c[b+12>>2]|0;J=+g6[c[(c[l>>2]|0)+16>>2]&15](l|0);l=c[b+16>>2]|0;if((l|0)==0){N=0.0}else{N=+g6[c[(c[l>>2]|0)+16>>2]&15](l|0)}O=J*+W(E*E+F*F+G*G)+N*+W(K*K+L*L+M*M);M=D-A;A=H-B;B=I-C;if(O+ +W(M*M+A*A+B*B)==0.0){P=0;i=k;return P|0}c[u>>2]=33728;l=u+36|0;g[l>>2]=999999984306749400.0;m=u+40|0;a[m]=0;vd(b,d,f,u);h=(a[m]&1)==0;m=t;n=u+20|0;c[m>>2]=c[n>>2];c[m+4>>2]=c[n+4>>2];c[m+8>>2]=c[n+8>>2];c[m+12>>2]=c[n+12>>2];if(h){P=0;i=k;return P|0}h=j+172|0;C=+g[u+4>>2];I=+g[u+8>>2];H=+g[u+12>>2];if(O+(M*C+A*I+B*H)<=1.1920928955078125e-7){P=0;i=k;return P|0}n=j+168|0;o=j;e=z|0;Q=z+36|0;R=z+40|0;S=z+20|0;T=z+4|0;U=z+8|0;V=z+12|0;X=z+16|0;Y=w+48|0;Z=y|0;_=y+4|0;$=y+8|0;aa=y+12|0;ab=v|0;ac=v+4|0;ad=v+8|0;ae=v+12|0;D=+g[l>>2]+ +g[h>>2];l=0;L=0.0;K=C;C=I;I=H;H=+g[u+16>>2];while(1){if(D<=.0010000000474974513){af=27;break}u=c[n>>2]|0;if((u|0)!=0){ag=c[(c[u>>2]|0)+20>>2]|0;g[ab>>2]=1.0;g[ac>>2]=1.0;g[ad>>2]=1.0;g[ae>>2]=0.0;hG[ag&15](u,t,.20000000298023224,v)}N=O+(B*I+(A*C+M*K));if(N<=1.1920928955078125e-7){P=0;af=33;break}G=L+D/N;if(!(G>=0.0&G<=1.0&G>L)){P=0;af=30;break}vf(d,p,q,G,w);vf(f,r,s,G,x);u=c[n>>2]|0;if((u|0)!=0){ag=c[(c[u>>2]|0)+20>>2]|0;g[Z>>2]=1.0;g[_>>2]=0.0;g[$>>2]=0.0;g[aa>>2]=0.0;hG[ag&15](u,Y,.20000000298023224,y)}gY[c[c[o>>2]>>2]&63](j,G);c[e>>2]=33728;g[Q>>2]=999999984306749400.0;a[R]=0;vd(b,w,x,z);if((a[R]&1)==0){af=25;break}N=+g[Q>>2]+ +g[h>>2];c[m>>2]=c[S>>2];c[m+4>>2]=c[S+4>>2];c[m+8>>2]=c[S+8>>2];c[m+12>>2]=c[S+12>>2];ah=l+1|0;if((ah|0)>64){af=26;break}else{D=N;l=ah;L=G;K=+g[T>>2];C=+g[U>>2];I=+g[V>>2];H=+g[X>>2]}}if((af|0)==25){hF[c[(c[j>>2]|0)+8>>2]&255](j,-1,l);P=0;i=k;return P|0}else if((af|0)==26){hF[c[(c[j>>2]|0)+8>>2]&255](j,-2,ah);P=0;i=k;return P|0}else if((af|0)==27){g[j+164>>2]=L;g[j+132>>2]=K;g[j+136>>2]=C;g[j+140>>2]=I;g[j+144>>2]=H;ah=j+148|0;c[ah>>2]=c[m>>2];c[ah+4>>2]=c[m+4>>2];c[ah+8>>2]=c[m+8>>2];c[ah+12>>2]=c[m+12>>2];P=1;i=k;return P|0}else if((af|0)==30){i=k;return P|0}else if((af|0)==33){i=k;return P|0}return 0}function vf(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=+d;e=e|0;var f=0,h=0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0;f=i;i=i+16|0;h=f|0;j=+g[b+4>>2]*d+ +g[a+52>>2];k=+g[b+8>>2]*d+ +g[a+56>>2];g[e+48>>2]=+g[b>>2]*d+ +g[a+48>>2];g[e+52>>2]=j;g[e+56>>2]=k;g[e+60>>2]=0.0;k=+g[c>>2];j=+g[c+4>>2];l=+g[c+8>>2];m=+W(k*k+j*j+l*l);if(m*d>.7853981852531433){n=.7853981852531433/d}else{n=m}if(n<.0010000000474974513){o=d*.5-n*d*d*d*.02083333395421505*n}else{o=+Z(n*.5*d)/n}m=o*k;k=o*j;j=o*l;l=+Y(n*d*.5);i_(a|0,h);d=+g[h>>2];n=+g[h+12>>2];o=+g[h+8>>2];p=+g[h+4>>2];q=l*d+m*n+k*o-j*p;r=j*d+(k*n+l*p)-m*o;s=j*n+l*o+m*p-k*d;t=l*n-m*d-k*p-j*o;o=1.0/+W(t*t+(s*s+(q*q+r*r)));j=q*o;q=o*r;r=o*s;s=o*t;t=2.0/(s*s+(r*r+(j*j+q*q)));o=j*t;p=t*q;k=t*r;t=s*o;d=s*p;m=s*k;s=j*o;o=j*p;n=j*k;j=q*p;p=q*k;q=r*k;g[e>>2]=1.0-(q+j);g[e+4>>2]=o-m;g[e+8>>2]=n+d;g[e+12>>2]=0.0;g[e+16>>2]=m+o;g[e+20>>2]=1.0-(s+q);g[e+24>>2]=p-t;g[e+28>>2]=0.0;g[e+32>>2]=n-d;g[e+36>>2]=t+p;g[e+40>>2]=1.0-(s+j);g[e+44>>2]=0.0;i=f;return}function vg(a){a=a|0;vi(a|0);return}function vh(a){a=a|0;vi(a|0);KU(a);return}function vi(a){a=a|0;return}function vj(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;c[a>>2]=34368;c[a+4>>2]=e;c[a+8>>2]=b;c[a+12>>2]=d;return}function vk(b,d,e,f,h,j){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0.0,C=0.0,D=0.0,E=0,F=0,G=0,H=0.0,I=0.0,J=0,K=0.0,L=0,M=0.0,N=0,O=0.0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0.0,W=0.0,X=0.0,Y=0.0,Z=0,_=0.0,$=0,aa=0.0,ab=0.0,ac=0.0,ad=0.0,ae=0.0,af=0.0,ag=0.0,ah=0.0,ai=0.0,aj=0.0;k=i;i=i+280|0;l=k+16|0;m=k+64|0;n=k+144|0;o=b+4|0;wf(c[o>>2]|0);p=d+48|0;q=e+48|0;r=p|0;s=e+52|0;t=d+52|0;u=e+56|0;e=d+56|0;v=f+48|0;w=h+48|0;x=v|0;y=h+52|0;z=f+52|0;A=h+56|0;h=f+56|0;B=+g[q>>2]- +g[r>>2]-(+g[w>>2]- +g[x>>2]);C=+g[s>>2]- +g[t>>2]-(+g[y>>2]- +g[z>>2]);D=+g[u>>2]- +g[e>>2]-(+g[A>>2]- +g[h>>2]);c[l>>2]=33728;E=l+36|0;g[E>>2]=999999984306749400.0;F=l+40|0;a[F]=0;vD(m,c[b+8>>2]|0,c[b+12>>2]|0,c[o>>2]|0,0);g[n+128>>2]=999999984306749400.0;c[n+132>>2]=0;o=n;b=d;c[o>>2]=c[b>>2];c[o+4>>2]=c[b+4>>2];c[o+8>>2]=c[b+8>>2];c[o+12>>2]=c[b+12>>2];b=n+16|0;o=d+16|0;c[b>>2]=c[o>>2];c[b+4>>2]=c[o+4>>2];c[b+8>>2]=c[o+8>>2];c[b+12>>2]=c[o+12>>2];o=n+32|0;b=d+32|0;c[o>>2]=c[b>>2];c[o+4>>2]=c[b+4>>2];c[o+8>>2]=c[b+8>>2];c[o+12>>2]=c[b+12>>2];b=n+48|0;o=b;d=p;c[o>>2]=c[d>>2];c[o+4>>2]=c[d+4>>2];c[o+8>>2]=c[d+8>>2];c[o+12>>2]=c[d+12>>2];d=n+64|0;o=f;c[d>>2]=c[o>>2];c[d+4>>2]=c[o+4>>2];c[d+8>>2]=c[o+8>>2];c[d+12>>2]=c[o+12>>2];o=n+80|0;d=f+16|0;c[o>>2]=c[d>>2];c[o+4>>2]=c[d+4>>2];c[o+8>>2]=c[d+8>>2];c[o+12>>2]=c[d+12>>2];d=n+96|0;o=f+32|0;c[d>>2]=c[o>>2];c[d+4>>2]=c[o+4>>2];c[d+8>>2]=c[o+8>>2];c[d+12>>2]=c[o+12>>2];o=n+112|0;d=o;f=v;c[d>>2]=c[f>>2];c[d+4>>2]=c[f+4>>2];c[d+8>>2]=c[f+8>>2];c[d+12>>2]=c[f+12>>2];f=l|0;vF(m,n,f,0,0);d=(a[F]&1)==0;v=l+20|0;p=k|0;c[p>>2]=c[v>>2];c[p+4>>2]=c[v+4>>2];c[p+8>>2]=c[v+8>>2];c[p+12>>2]=c[v+12>>2];if(d){G=0;i=k;return G|0}H=+g[E>>2];d=l+4|0;I=+g[d>>2];J=l+8|0;K=+g[J>>2];L=l+12|0;M=+g[L>>2];N=l+16|0;O=+g[N>>2];do{if(H>.0010000000474974513){l=j;P=b|0;Q=n+52|0;R=n+56|0;S=o|0;T=n+116|0;U=n+120|0;V=M;W=K;X=I;Y=0.0;Z=1;_=H;while(1){if((Z|0)>32){G=0;$=24;break}aa=Y-_/(D*V+(C*W+B*X));if(!(aa>=0.0&aa<=1.0&aa>Y)){G=0;$=28;break}gY[c[c[l>>2]>>2]&63](j,aa);ab=1.0-aa;g[P>>2]=ab*+g[r>>2]+aa*+g[q>>2];g[Q>>2]=ab*+g[t>>2]+aa*+g[s>>2];g[R>>2]=ab*+g[e>>2]+aa*+g[u>>2];g[S>>2]=ab*+g[x>>2]+aa*+g[w>>2];g[T>>2]=ab*+g[z>>2]+aa*+g[y>>2];g[U>>2]=ab*+g[h>>2]+aa*+g[A>>2];vF(m,n,f,0,0);if((a[F]&1)==0){G=0;$=26;break}ab=+g[E>>2];if(ab<0.0){$=16;break}c[p>>2]=c[v>>2];c[p+4>>2]=c[v+4>>2];c[p+8>>2]=c[v+8>>2];c[p+12>>2]=c[v+12>>2];ac=+g[d>>2];ad=+g[J>>2];ae=+g[L>>2];if(ab>.0010000000474974513){V=ae;W=ad;X=ac;Y=aa;Z=Z+1|0;_=ab}else{$=18;break}}if(($|0)==16){g[j+164>>2]=aa;_=+g[J>>2];Y=+g[L>>2];X=+g[N>>2];g[j+132>>2]=+g[d>>2];g[j+136>>2]=_;g[j+140>>2]=Y;g[j+144>>2]=X;Z=j+148|0;c[Z>>2]=c[v>>2];c[Z+4>>2]=c[v+4>>2];c[Z+8>>2]=c[v+8>>2];c[Z+12>>2]=c[v+12>>2];G=1;i=k;return G|0}else if(($|0)==18){af=+g[N>>2];ag=ae;ah=ad;ai=ac;aj=aa;break}else if(($|0)==24){i=k;return G|0}else if(($|0)==26){i=k;return G|0}else if(($|0)==28){i=k;return G|0}}else{af=O;ag=M;ah=K;ai=I;aj=0.0}}while(0);if(D*ag+(C*ah+B*ai)>=-0.0- +g[j+172>>2]){G=0;i=k;return G|0}g[j+164>>2]=aj;g[j+132>>2]=ai;g[j+136>>2]=ah;g[j+140>>2]=ag;g[j+144>>2]=af;$=j+148|0;c[$>>2]=c[p>>2];c[$+4>>2]=c[p+4>>2];c[$+8>>2]=c[p+8>>2];c[$+12>>2]=c[p+12>>2];G=1;i=k;return G|0}function vl(a){a=a|0;vi(a|0);return}function vm(a){a=a|0;vi(a|0);KU(a);return}function vn(a,b,d,e,f,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0.0,t=0.0,u=0.0,v=0,w=0.0,x=0.0,y=0,z=0.0,A=0.0,B=0,C=0.0,D=0,E=0.0,F=0,G=0.0,H=0.0,I=0,J=0.0,K=0,L=0.0,M=0,N=0.0,O=0.0,P=0.0,Q=0.0,R=0.0,S=0.0,T=0.0,U=0.0,V=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0,ai=0,aj=0,ak=0,al=0,am=0,an=0,ao=0,ap=0,aq=0,ar=0,as=0,at=0,au=0.0,av=0.0,aw=0.0,ax=0.0,ay=0.0,az=0.0,aA=0,aB=0,aC=0,aD=0,aE=0,aF=0,aG=0,aH=0,aI=0,aJ=0,aK=0,aL=0;j=i;i=i+560|0;k=j|0;l=j+16|0;m=j+32|0;n=j+160|0;o=j+544|0;p=h+20|0;q=h+20|0;r=h+4|0;K1(q|0,0,16)|0;c[r>>2]=c[p>>2];c[r+4>>2]=c[p+4>>2];c[r+8>>2]=c[p+8>>2];c[r+12>>2]=c[p+12>>2];p=h|0;c[p>>2]=0;r=m|0;c[r>>2]=a;a=m+4|0;c[a>>2]=d;s=+g[e>>2];d=b|0;t=+g[d>>2];u=+g[e+16>>2];v=b+16|0;w=+g[v>>2];x=+g[e+32>>2];y=b+32|0;z=+g[y>>2];A=s*t+u*w+x*z;B=b+4|0;C=+g[B>>2];D=b+20|0;E=+g[D>>2];F=b+36|0;G=+g[F>>2];H=s*C+u*E+x*G;I=b+8|0;J=+g[I>>2];K=b+24|0;L=+g[K>>2];M=b+40|0;N=+g[M>>2];O=s*J+u*L+x*N;x=+g[e+4>>2];u=+g[e+20>>2];s=+g[e+36>>2];P=t*x+w*u+z*s;Q=C*x+E*u+G*s;R=J*x+L*u+N*s;s=+g[e+8>>2];u=+g[e+24>>2];x=+g[e+40>>2];S=t*s+w*u+z*x;T=C*s+E*u+G*x;U=J*s+L*u+N*x;V=m+8|0;g[V>>2]=A;X=m+12|0;g[X>>2]=H;Y=m+16|0;g[Y>>2]=O;g[m+20>>2]=0.0;Z=m+24|0;g[Z>>2]=P;_=m+28|0;g[_>>2]=Q;$=m+32|0;g[$>>2]=R;g[m+36>>2]=0.0;aa=m+40|0;g[aa>>2]=S;ab=m+44|0;g[ab>>2]=T;ac=m+48|0;g[ac>>2]=U;g[m+52>>2]=0.0;ad=b+48|0;x=+g[e+48>>2]- +g[ad>>2];ae=b+52|0;u=+g[e+52>>2]- +g[ae>>2];af=b+56|0;s=+g[e+56>>2]- +g[af>>2];e=m+56|0;g[e>>2]=A;b=m+60|0;g[b>>2]=P;ag=m+64|0;g[ag>>2]=S;g[m+68>>2]=0.0;ah=m+72|0;g[ah>>2]=H;ai=m+76|0;g[ai>>2]=Q;aj=m+80|0;g[aj>>2]=T;g[m+84>>2]=0.0;ak=m+88|0;g[ak>>2]=O;al=m+92|0;g[al>>2]=R;am=m+96|0;g[am>>2]=U;g[m+100>>2]=0.0;an=m+104|0;g[an>>2]=x*t+u*w+s*z;ao=m+108|0;g[ao>>2]=x*C+u*E+s*G;ap=m+112|0;g[ap>>2]=x*J+u*L+s*N;g[m+116>>2]=0.0;aq=m+120|0;c[aq>>2]=208;ar=m+124|0;c[ar>>2]=0;c[n+364>>2]=0;K1(n+128|0,0,16)|0;c[n+376>>2]=2;c[n+368>>2]=0;g[n+144>>2]=0.0;as=vo(n,m,f)|0;if((as|0)!=0){c[p>>2]=(as|0)==1?1:2;at=0;i=j;return at|0}as=n+372|0;n=c[as>>2]|0;if((c[n+32>>2]|0)==0){au=0.0;av=0.0;aw=0.0;ax=0.0;ay=0.0;az=0.0}else{p=o|0;f=o+4|0;m=o+8|0;aA=l|0;aB=l+4|0;aC=l+8|0;aD=l+12|0;aE=k|0;aF=k+4|0;aG=k+8|0;N=0.0;s=0.0;L=0.0;u=0.0;J=0.0;x=0.0;aH=0;aI=n;while(1){G=+g[aI+16+(aH<<2)>>2];n=c[aq>>2]|0;aJ=(c[r>>2]|0)+(c[ar>>2]|0)|0;if((n&1|0)==0){aK=n}else{aK=c[(c[aJ>>2]|0)+(n-1)>>2]|0}hF[aK&255](o,aJ,c[aI+(aH<<2)>>2]|0);E=L+G*+g[p>>2];C=s+G*+g[f>>2];z=N+G*+g[m>>2];aJ=c[(c[as>>2]|0)+(aH<<2)>>2]|0;w=-0.0- +g[aJ>>2];t=-0.0- +g[aJ+4>>2];U=-0.0- +g[aJ+8>>2];aJ=c[aq>>2]|0;n=(c[a>>2]|0)+(c[ar>>2]|0)|0;if((aJ&1|0)==0){aL=aJ}else{aL=c[(c[n>>2]|0)+(aJ-1)>>2]|0}R=+g[Z>>2]*w+ +g[_>>2]*t+ +g[$>>2]*U;O=+g[aa>>2]*w+ +g[ab>>2]*t+ +g[ac>>2]*U;g[aA>>2]=+g[V>>2]*w+ +g[X>>2]*t+ +g[Y>>2]*U;g[aB>>2]=R;g[aC>>2]=O;g[aD>>2]=0.0;hF[aL&255](k,n,l);O=+g[aE>>2];R=+g[aF>>2];U=+g[aG>>2];t=x+G*(O*+g[e>>2]+R*+g[b>>2]+U*+g[ag>>2]+ +g[an>>2]);w=J+G*(O*+g[ah>>2]+R*+g[ai>>2]+U*+g[aj>>2]+ +g[ao>>2]);T=u+G*(O*+g[ak>>2]+R*+g[al>>2]+U*+g[am>>2]+ +g[ap>>2]);n=aH+1|0;aJ=c[as>>2]|0;if(n>>>0<(c[aJ+32>>2]|0)>>>0){N=z;s=C;L=E;u=T;J=w;x=t;aH=n;aI=aJ}else{au=z;av=C;aw=E;ax=T;ay=w;az=t;break}}}x=aw*+g[v>>2]+av*+g[D>>2]+au*+g[K>>2]+ +g[ae>>2];J=aw*+g[y>>2]+av*+g[F>>2]+au*+g[M>>2]+ +g[af>>2];g[h+4>>2]=aw*+g[d>>2]+av*+g[B>>2]+au*+g[I>>2]+ +g[ad>>2];g[h+8>>2]=x;g[h+12>>2]=J;g[h+16>>2]=0.0;J=az*+g[v>>2]+ay*+g[D>>2]+ax*+g[K>>2]+ +g[ae>>2];x=az*+g[y>>2]+ay*+g[F>>2]+ax*+g[M>>2]+ +g[af>>2];g[q>>2]=az*+g[d>>2]+ay*+g[B>>2]+ax*+g[I>>2]+ +g[ad>>2];g[h+24>>2]=J;g[h+28>>2]=x;g[h+32>>2]=0.0;x=aw-az;az=av-ay;ay=au-ax;g[h+48>>2]=0.0;ax=+W(x*x+az*az+ay*ay);g[h+52>>2]=ax;au=1.0/(ax>9999999747378752.0e-20?ax:1.0);g[h+36>>2]=au*x;g[h+40>>2]=au*az;g[h+44>>2]=au*ay;at=1;i=j;return at|0}function vo(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0.0,v=0.0,w=0.0,x=0.0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0.0,G=0.0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0.0,R=0,S=0,T=0,U=0,V=0,X=0.0;e=i;i=i+120|0;f=e|0;h=e+64|0;j=e+80|0;k=e+96|0;l=e+112|0;c[a+348>>2]=a+220;c[a+352>>2]=a+252;c[a+356>>2]=a+284;m=a+316|0;c[a+360>>2]=m;n=a+364|0;c[n>>2]=4;o=a+368|0;c[o>>2]=0;p=a+376|0;c[p>>2]=0;q=b;r=a;s=c[q+4>>2]|0;c[r>>2]=c[q>>2];c[r+4>>2]=s;s=a+8|0;r=b+8|0;c[s>>2]=c[r>>2];c[s+4>>2]=c[r+4>>2];c[s+8>>2]=c[r+8>>2];c[s+12>>2]=c[r+12>>2];r=a+24|0;s=b+24|0;c[r>>2]=c[s>>2];c[r+4>>2]=c[s+4>>2];c[r+8>>2]=c[s+8>>2];c[r+12>>2]=c[s+12>>2];s=a+40|0;r=b+40|0;c[s>>2]=c[r>>2];c[s+4>>2]=c[r+4>>2];c[s+8>>2]=c[r+8>>2];c[s+12>>2]=c[r+12>>2];r=a+56|0;s=b+56|0;c[r>>2]=c[s>>2];c[r+4>>2]=c[s+4>>2];c[r+8>>2]=c[s+8>>2];c[r+12>>2]=c[s+12>>2];s=a+72|0;r=b+72|0;c[s>>2]=c[r>>2];c[s+4>>2]=c[r+4>>2];c[s+8>>2]=c[r+8>>2];c[s+12>>2]=c[r+12>>2];r=a+88|0;s=b+88|0;c[r>>2]=c[s>>2];c[r+4>>2]=c[s+4>>2];c[r+8>>2]=c[s+8>>2];c[r+12>>2]=c[s+12>>2];s=a+104|0;r=b+104|0;c[s>>2]=c[r>>2];c[s+4>>2]=c[r+4>>2];c[s+8>>2]=c[r+8>>2];c[s+12>>2]=c[r+12>>2];r=b+120|0;b=c[r+4>>2]|0;s=a+120|0;c[s>>2]=c[r>>2];c[s+4>>2]=b;b=a+144|0;g[b>>2]=0.0;s=a+180|0;c[s>>2]=0;r=a+128|0;q=r;t=d;c[q>>2]=c[t>>2];c[q+4>>2]=c[t+4>>2];c[q+8>>2]=c[t+8>>2];c[q+12>>2]=c[t+12>>2];t=r|0;u=+g[t>>2];r=a+132|0;v=+g[r>>2];d=a+136|0;w=+g[d>>2];x=u*u+v*v+w*w;if(x>0.0){g[h>>2]=-0.0-u;g[h+4>>2]=-0.0-v;g[h+8>>2]=-0.0-w;g[h+12>>2]=0.0}else{g[h>>2]=1.0;g[h+4>>2]=0.0;g[h+8>>2]=0.0;g[h+12>>2]=0.0}y=a+164|0;g[y>>2]=0.0;c[n>>2]=3;z=a+148|0;c[z>>2]=m;c[s>>2]=1;vt(a,h,m);g[y>>2]=1.0;y=(c[z>>2]|0)+16|0;c[q>>2]=c[y>>2];c[q+4>>2]=c[y+4>>2];c[q+8>>2]=c[y+8>>2];c[q+12>>2]=c[y+12>>2];q=f+48|0;c[q>>2]=c[y>>2];c[q+4>>2]=c[y+4>>2];c[q+8>>2]=c[y+8>>2];c[q+12>>2]=c[y+12>>2];q=f+32|0;c[q>>2]=c[y>>2];c[q+4>>2]=c[y+4>>2];c[q+8>>2]=c[y+8>>2];c[q+12>>2]=c[y+12>>2];q=f+16|0;c[q>>2]=c[y>>2];c[q+4>>2]=c[y+4>>2];c[q+8>>2]=c[y+8>>2];c[q+12>>2]=c[y+12>>2];q=f;c[q>>2]=c[y>>2];c[q+4>>2]=c[y+4>>2];c[q+8>>2]=c[y+8>>2];c[q+12>>2]=c[y+12>>2];y=j|0;q=j+4|0;z=j+8|0;m=j+12|0;h=a+128|0;s=k|0;A=1;w=x;B=1;x=0.0;L5:while(1){C=c[o>>2]|0;D=1-C|0;E=a+148+(C*36|0)|0;v=+g[t>>2];u=+g[r>>2];F=+g[d>>2];G=+W(v*v+u*u+F*F);if(G<9999999747378752.0e-20){H=6;break}g[y>>2]=-0.0-v;g[q>>2]=-0.0-u;g[z>>2]=-0.0-F;g[m>>2]=0.0;I=a+148+(C*36|0)+32|0;g[a+148+(C*36|0)+16+(c[I>>2]<<2)>>2]=0.0;J=(c[n>>2]|0)-1|0;c[n>>2]=J;c[a+148+(C*36|0)+(c[I>>2]<<2)>>2]=c[a+348+(J<<2)>>2];J=c[I>>2]|0;c[I>>2]=J+1;vt(a,j,c[a+148+(C*36|0)+(J<<2)>>2]|0);J=c[I>>2]|0;K=c[a+148+(C*36|0)+(J-1<<2)>>2]|0;L=K+16|0;M=L|0;N=K+20|0;O=K+24|0;K=0;while(1){if(K>>>0>=4>>>0){break}F=+g[M>>2]- +g[f+(K<<4)>>2];u=+g[N>>2]- +g[f+(K<<4)+4>>2];v=+g[O>>2]- +g[f+(K<<4)+8>>2];if(F*F+u*u+v*v<9999999747378752.0e-20){H=10;break L5}else{K=K+1|0}}K=f+(B<<4)|0;P=L;c[K>>2]=c[P>>2];c[K+4>>2]=c[P+4>>2];c[K+8>>2]=c[P+8>>2];c[K+12>>2]=c[P+12>>2];v=(+g[t>>2]*+g[M>>2]+ +g[r>>2]*+g[N>>2]+ +g[d>>2]*+g[O>>2])/G;u=v>x?v:x;if(G-u-G*9999999747378752.0e-20<=0.0){H=12;break}c[l>>2]=0;if((J|0)==2){Q=+vx((c[E>>2]|0)+16|0,(c[a+148+(C*36|0)+4>>2]|0)+16|0,s,l)}else if((J|0)==3){Q=+vy((c[E>>2]|0)+16|0,(c[a+148+(C*36|0)+4>>2]|0)+16|0,(c[a+148+(C*36|0)+8>>2]|0)+16|0,s,l)}else if((J|0)==4){Q=+vz((c[E>>2]|0)+16|0,(c[a+148+(C*36|0)+4>>2]|0)+16|0,(c[a+148+(C*36|0)+8>>2]|0)+16|0,(c[a+148+(C*36|0)+12>>2]|0)+16|0,s,l)}else{Q=w}if(Q<0.0){H=25;break}P=a+148+(D*36|0)+32|0;c[P>>2]=0;K1(h|0,0,16)|0;c[o>>2]=D;K=c[I>>2]|0;R=c[l>>2]|0;if((K|0)!=0){S=0;do{T=a+148+(C*36|0)+(S<<2)|0;U=c[T>>2]|0;if((R&1<<S|0)==0){V=c[n>>2]|0;c[n>>2]=V+1;c[a+348+(V<<2)>>2]=U}else{c[a+148+(D*36|0)+(c[P>>2]<<2)>>2]=U;v=+g[k+(S<<2)>>2];U=c[P>>2]|0;c[P>>2]=U+1;g[a+148+(D*36|0)+16+(U<<2)>>2]=v;U=c[T>>2]|0;F=v*+g[U+20>>2];X=v*+g[U+24>>2];g[t>>2]=+g[U+16>>2]*v+ +g[t>>2];g[r>>2]=F+ +g[r>>2];g[d>>2]=X+ +g[d>>2]}S=S+1|0;}while(S>>>0<K>>>0)}if((R|0)==15){c[p>>2]=1}if(A>>>0>=128>>>0){H=27;break}if((c[p>>2]|0)!=0){break}A=A+1|0;w=Q;B=B+1&3;x=u}if((H|0)==10){B=c[o>>2]|0;A=a+148+(B*36|0)+32|0;k=(c[A>>2]|0)-1|0;c[A>>2]=k;A=c[a+148+(B*36|0)+(k<<2)>>2]|0;k=c[n>>2]|0;c[n>>2]=k+1;c[a+348+(k<<2)>>2]=A}else if((H|0)==25){A=c[o>>2]|0;k=a+148+(A*36|0)+32|0;B=(c[k>>2]|0)-1|0;c[k>>2]=B;k=c[a+148+(A*36|0)+(B<<2)>>2]|0;B=c[n>>2]|0;c[n>>2]=B+1;c[a+348+(B<<2)>>2]=k}else if((H|0)==27){c[p>>2]=2}else if((H|0)==6){c[p>>2]=1}else if((H|0)==12){H=c[o>>2]|0;k=a+148+(H*36|0)+32|0;B=(c[k>>2]|0)-1|0;c[k>>2]=B;k=c[a+148+(H*36|0)+(B<<2)>>2]|0;B=c[n>>2]|0;c[n>>2]=B+1;c[a+348+(B<<2)>>2]=k}c[a+372>>2]=a+148+((c[o>>2]|0)*36|0);o=c[p>>2]|0;if((o|0)==0){x=+g[t>>2];Q=+g[r>>2];w=+g[d>>2];g[b>>2]=+W(x*x+Q*Q+w*w);i=e;return o|0}else if((o|0)==1){g[b>>2]=0.0;i=e;return o|0}else{i=e;return o|0}return 0}function vp(a,b,d,e,f,h,j){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0,A=0.0,B=0.0,C=0,D=0.0,E=0,F=0.0,G=0,H=0.0,I=0.0,J=0,K=0.0,L=0,M=0.0,N=0,O=0.0,P=0.0,Q=0.0,R=0.0,S=0.0,T=0.0,U=0.0,V=0.0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0.0,ag=0.0,ah=0.0,ai=0;k=i;i=i+9856|0;l=k|0;m=k+128|0;n=k+512|0;o=k+528|0;p=k+9824|0;q=k+9840|0;r=h+20|0;s=h+20|0;t=h+4|0;K1(s|0,0,16)|0;c[t>>2]=c[r>>2];c[t+4>>2]=c[r+4>>2];c[t+8>>2]=c[r+8>>2];c[t+12>>2]=c[r+12>>2];r=h|0;c[r>>2]=0;t=l|0;c[t>>2]=a;c[l+4>>2]=d;u=+g[e>>2];d=b|0;v=+g[d>>2];w=+g[e+16>>2];a=b+16|0;x=+g[a>>2];y=+g[e+32>>2];z=b+32|0;A=+g[z>>2];B=u*v+w*x+y*A;C=b+4|0;D=+g[C>>2];E=b+20|0;F=+g[E>>2];G=b+36|0;H=+g[G>>2];I=u*D+w*F+y*H;J=b+8|0;K=+g[J>>2];L=b+24|0;M=+g[L>>2];N=b+40|0;O=+g[N>>2];P=u*K+w*M+y*O;y=+g[e+4>>2];w=+g[e+20>>2];u=+g[e+36>>2];Q=v*y+x*w+A*u;R=D*y+F*w+H*u;S=K*y+M*w+O*u;u=+g[e+8>>2];w=+g[e+24>>2];y=+g[e+40>>2];T=v*u+x*w+A*y;U=D*u+F*w+H*y;V=K*u+M*w+O*y;g[l+8>>2]=B;g[l+12>>2]=I;g[l+16>>2]=P;g[l+20>>2]=0.0;g[l+24>>2]=Q;g[l+28>>2]=R;g[l+32>>2]=S;g[l+36>>2]=0.0;g[l+40>>2]=T;g[l+44>>2]=U;g[l+48>>2]=V;g[l+52>>2]=0.0;W=b+48|0;y=+g[e+48>>2]- +g[W>>2];X=b+52|0;w=+g[e+52>>2]- +g[X>>2];Y=b+56|0;u=+g[e+56>>2]- +g[Y>>2];g[l+56>>2]=B;g[l+60>>2]=Q;g[l+64>>2]=T;g[l+68>>2]=0.0;g[l+72>>2]=I;g[l+76>>2]=R;g[l+80>>2]=U;g[l+84>>2]=0.0;g[l+88>>2]=P;g[l+92>>2]=S;g[l+96>>2]=V;g[l+100>>2]=0.0;g[l+104>>2]=y*v+w*x+u*A;g[l+108>>2]=y*D+w*F+u*H;g[l+112>>2]=y*K+w*M+u*O;g[l+116>>2]=0.0;e=l+120|0;c[e>>2]=j?142:208;b=l+124|0;c[b>>2]=j?0:0;c[m+364>>2]=0;K1(m+128|0,0,16)|0;c[m+376>>2]=2;c[m+368>>2]=0;g[m+144>>2]=0.0;j=f|0;Z=f+4|0;O=-0.0- +g[Z>>2];_=f+8|0;u=-0.0- +g[_>>2];g[n>>2]=-0.0- +g[j>>2];g[n+4>>2]=O;g[n+8>>2]=u;g[n+12>>2]=0.0;f=vo(m,l,n)|0;if((f|0)==1){n=o+9288|0;l=o+9292|0;K1(o+9280|0,0,16)|0;c[o>>2]=9;$=o+40|0;c[o+9276>>2]=0;K1($|0,0,20)|0;aa=0;do{ab=128-aa-1|0;ac=o+2108+(ab*56|0)|0;c[o+2108+(ab*56|0)+44>>2]=0;ad=c[n>>2]|0;c[o+2108+(ab*56|0)+48>>2]=ad;if((ad|0)!=0){c[ad+44>>2]=ac}c[n>>2]=ac;c[l>>2]=(c[l>>2]|0)+1;aa=aa+1|0;}while(aa>>>0<128>>>0);u=-0.0- +g[Z>>2];O=-0.0- +g[_>>2];g[p>>2]=-0.0- +g[j>>2];g[p+4>>2]=u;g[p+8>>2]=O;g[p+12>>2]=0.0;if((vq(o,m,p)|0)==9){c[r>>2]=3;ae=0;i=k;return ae|0}p=o+36|0;if((c[p>>2]|0)==0){af=0.0;ag=0.0;ah=0.0}else{m=q|0;j=q+4|0;_=q+8|0;O=0.0;u=0.0;M=0.0;Z=0;while(1){aa=c[e>>2]|0;l=(c[t>>2]|0)+(c[b>>2]|0)|0;if((aa&1|0)==0){ai=aa}else{ai=c[(c[l>>2]|0)+(aa-1)>>2]|0}hF[ai&255](q,l,c[o+4+(Z<<2)>>2]|0);w=+g[o+20+(Z<<2)>>2];K=M+ +g[m>>2]*w;y=u+w*+g[j>>2];H=O+w*+g[_>>2];l=Z+1|0;if(l>>>0<(c[p>>2]|0)>>>0){O=H;u=y;M=K;Z=l}else{af=H;ag=y;ah=K;break}}}c[r>>2]=1;M=ah*+g[a>>2]+ag*+g[E>>2]+af*+g[L>>2]+ +g[X>>2];u=ah*+g[z>>2]+ag*+g[G>>2]+af*+g[N>>2]+ +g[Y>>2];g[h+4>>2]=ah*+g[d>>2]+ag*+g[C>>2]+af*+g[J>>2]+ +g[W>>2];g[h+8>>2]=M;g[h+12>>2]=u;g[h+16>>2]=0.0;u=+g[$>>2];M=+g[o+56>>2];O=+g[o+44>>2];K=+g[o+48>>2];y=ah-u*M;ah=ag-M*O;ag=af-M*K;af=y*+g[a>>2]+ah*+g[E>>2]+ag*+g[L>>2]+ +g[X>>2];H=y*+g[z>>2]+ah*+g[G>>2]+ag*+g[N>>2]+ +g[Y>>2];g[s>>2]=y*+g[d>>2]+ah*+g[C>>2]+ag*+g[J>>2]+ +g[W>>2];g[h+24>>2]=af;g[h+28>>2]=H;g[h+32>>2]=0.0;g[h+36>>2]=-0.0-u;g[h+40>>2]=-0.0-O;g[h+44>>2]=-0.0-K;g[h+48>>2]=0.0;g[h+52>>2]=-0.0-M;ae=1;i=k;return ae|0}else if((f|0)==2){c[r>>2]=2;ae=0;i=k;return ae|0}else{ae=0;i=k;return ae|0}return 0}function vq(b,e,f){b=b|0;e=e|0;f=f|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0,D=0,E=0.0,F=0,G=0,H=0,I=0,J=0,K=0.0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,X=0,Y=0,Z=0,_=0,$=0.0,aa=0,ab=0,ac=0.0,ad=0.0,ae=0.0,af=0.0,ag=0,ah=0,ai=0,aj=0,ak=0,al=0,am=0.0,an=0.0,ao=0.0,ap=0.0,aq=0.0,ar=0,as=0.0,at=0.0,au=0.0,av=0.0,aw=0.0,ax=0.0,ay=0.0,az=0,aA=0.0,aB=0.0,aC=0.0;h=i;i=i+16|0;j=h|0;k=c[e+372>>2]|0;do{if((c[k+32>>2]|0)>>>0>1>>>0){if(!(vr(e)|0)){break}l=b+9280|0;m=c[l>>2]|0;if((m|0)!=0){n=b+9284|0;o=b+9288|0;p=b+9292|0;q=m;do{m=q+48|0;r=c[m>>2]|0;s=q+44|0;if((r|0)!=0){c[r+44>>2]=c[s>>2]}r=c[s>>2]|0;if((r|0)!=0){c[r+48>>2]=c[m>>2]}if((c[l>>2]|0)==(q|0)){c[l>>2]=c[m>>2]}c[n>>2]=(c[n>>2]|0)-1;c[s>>2]=0;c[m>>2]=c[o>>2];m=c[o>>2]|0;if((m|0)!=0){c[m+44>>2]=q}c[o>>2]=q;c[p>>2]=(c[p>>2]|0)+1;q=c[l>>2]|0;}while((q|0)!=0)}q=b|0;c[q>>2]=0;p=b+9276|0;c[p>>2]=0;o=k|0;n=c[o>>2]|0;m=k+12|0;s=c[m>>2]|0;t=+g[s+16>>2];u=+g[n+16>>2]-t;v=+g[s+20>>2];w=+g[n+20>>2]-v;x=+g[s+24>>2];y=+g[n+24>>2]-x;s=k+4|0;r=c[s>>2]|0;z=+g[r+16>>2]-t;A=+g[r+20>>2]-v;B=+g[r+24>>2]-x;C=k+8|0;D=c[C>>2]|0;E=+g[D+16>>2]-t;t=+g[D+20>>2]-v;v=+g[D+24>>2]-x;if(u*A*v+(w*B*E+y*z*t-u*B*t-w*z*v)-y*A*E<0.0){c[o>>2]=r;c[s>>2]=n;F=k+16|0;G=k+20|0;E=+g[F>>2];g[F>>2]=+g[G>>2];g[G>>2]=E;H=r;I=n}else{H=n;I=r}r=vs(b,H,I,D,1)|0;D=vs(b,c[s>>2]|0,c[o>>2]|0,c[m>>2]|0,1)|0;n=vs(b,c[C>>2]|0,c[s>>2]|0,c[m>>2]|0,1)|0;s=vs(b,c[o>>2]|0,c[C>>2]|0,c[m>>2]|0,1)|0;m=b+9284|0;if((c[m>>2]|0)!=4){break}C=c[l>>2]|0;E=+g[C+16>>2];o=c[C+48>>2]|0;if((o|0)==0){J=C;K=E}else{A=E*E;G=C;C=o;while(1){E=+g[C+16>>2];y=E*E;o=y<A;L=o?C:G;F=c[C+48>>2]|0;if((F|0)==0){break}else{A=o?y:A;G=L;C=F}}J=L;K=+g[L+16>>2]}A=+g[J>>2];y=+g[J+4>>2];E=+g[J+8>>2];v=+g[J+12>>2];C=c[J+20>>2]|0;G=c[J+24>>2]|0;F=c[J+28>>2]|0;a[r+52|0]=0;c[r+32>>2]=D;a[D+52|0]=0;c[D+32>>2]=r;a[r+53|0]=0;c[r+36>>2]=n;a[n+52|0]=1;c[n+32>>2]=r;a[r+54|0]=0;c[r+40>>2]=s;a[s+52|0]=2;c[s+32>>2]=r;a[D+53|0]=2;c[D+36>>2]=s;a[s+54|0]=1;c[s+40>>2]=D;a[D+54|0]=1;c[D+40>>2]=n;a[n+53|0]=2;c[n+36>>2]=D;a[n+54|0]=1;c[n+40>>2]=s;a[s+53|0]=2;c[s+36>>2]=n;c[q>>2]=0;o=j|0;M=j+4|0;N=j+8|0;O=b+9288|0;P=b+9292|0;Q=F;F=G;G=C;z=K;w=v;v=E;E=y;y=A;C=0;R=1;S=J;while(1){T=c[p>>2]|0;if(T>>>0>=64>>>0){U=42;break}c[o>>2]=0;c[M>>2]=0;c[N>>2]=0;c[p>>2]=T+1;V=b+60+(T<<5)|0;a[S+55|0]=R;vt(e,S|0,V);if(+g[S>>2]*+g[b+60+(T<<5)+16>>2]+ +g[S+4>>2]*+g[b+60+(T<<5)+20>>2]+ +g[S+8>>2]*+g[b+60+(T<<5)+24>>2]- +g[S+16>>2]>9999999747378752.0e-20){X=1;Y=0}else{U=41;break}do{X=X&(vu(b,R,V,c[S+32+(Y<<2)>>2]|0,d[S+52+Y|0]|0,j)|0);Y=Y+1|0;}while(!(Y>>>0>2>>>0|X^1));if(!X){U=40;break}if((c[N>>2]|0)>>>0<=2>>>0){U=40;break}V=c[o>>2]|0;T=c[M>>2]|0;a[V+53|0]=2;c[V+36>>2]=T;a[T+54|0]=1;c[T+40>>2]=V;V=S+48|0;T=c[V>>2]|0;Z=S+44|0;if((T|0)!=0){c[T+44>>2]=c[Z>>2]}T=c[Z>>2]|0;if((T|0)!=0){c[T+48>>2]=c[V>>2]}if((c[l>>2]|0)==(S|0)){c[l>>2]=c[V>>2]}c[m>>2]=(c[m>>2]|0)-1;c[Z>>2]=0;c[V>>2]=c[O>>2];V=c[O>>2]|0;if((V|0)!=0){c[V+44>>2]=S}c[O>>2]=S;c[P>>2]=(c[P>>2]|0)+1;V=c[l>>2]|0;A=+g[V+16>>2];Z=c[V+48>>2]|0;if((Z|0)==0){_=V;$=A}else{t=A*A;T=V;V=Z;while(1){A=+g[V+16>>2];B=A*A;Z=B<t;aa=Z?V:T;ab=c[V+48>>2]|0;if((ab|0)==0){break}else{t=Z?B:t;T=aa;V=ab}}_=aa;$=+g[aa+16>>2]}ac=+g[_>>2];ad=+g[_+4>>2];ae=+g[_+8>>2];af=+g[_+12>>2];ag=c[_+20>>2]|0;ah=c[_+24>>2]|0;ai=c[_+28>>2]|0;V=C+1|0;if(V>>>0<255>>>0){Q=ai;F=ah;G=ag;z=$;w=af;v=ae;E=ad;y=ac;C=V;R=R+1|0;S=_}else{U=43;break}}if((U|0)==40){c[q>>2]=4;aj=Q;ak=F;al=G;am=z;an=w;ao=v;ap=E;aq=y;ar=4}else if((U|0)==41){c[q>>2]=7;aj=Q;ak=F;al=G;am=z;an=w;ao=v;ap=E;aq=y;ar=7}else if((U|0)==42){c[q>>2]=6;aj=Q;ak=F;al=G;am=z;an=w;ao=v;ap=E;aq=y;ar=6}else if((U|0)==43){aj=ai;ak=ah;al=ag;am=$;an=af;ao=ae;ap=ad;aq=ac;ar=c[q>>2]|0}t=am*aq;B=am*ap;A=am*ao;g[b+40>>2]=aq;g[b+44>>2]=ap;g[b+48>>2]=ao;g[b+52>>2]=an;g[b+56>>2]=am;c[b+36>>2]=3;c[b+4>>2]=al;c[b+8>>2]=ak;c[b+12>>2]=aj;S=ak+16|0;u=+g[S>>2]-t;R=ak+20|0;x=+g[R>>2]-B;C=ak+24|0;as=+g[C>>2]-A;l=aj+16|0;at=+g[l>>2]-t;P=aj+20|0;au=+g[P>>2]-B;O=aj+24|0;av=+g[O>>2]-A;aw=x*av-as*au;ax=as*at-u*av;av=u*au-x*at;at=+W(av*av+(aw*aw+ax*ax));m=b+20|0;g[m>>2]=at;ax=+g[l>>2]-t;aw=+g[P>>2]-B;av=+g[O>>2]-A;O=al+16|0;x=+g[O>>2]-t;P=al+20|0;au=+g[P>>2]-B;l=al+24|0;u=+g[l>>2]-A;as=aw*u-av*au;ay=av*x-ax*u;u=ax*au-aw*x;x=+W(u*u+(as*as+ay*ay));M=b+24|0;g[M>>2]=x;ay=+g[O>>2]-t;as=+g[P>>2]-B;u=+g[l>>2]-A;aw=+g[S>>2]-t;t=+g[R>>2]-B;B=+g[C>>2]-A;A=as*B-u*t;au=u*aw-ay*B;B=ay*t-as*aw;aw=+W(B*B+(A*A+au*au));au=aw+(at+x);g[m>>2]=at/au;g[M>>2]=x/au;g[b+28>>2]=aw/au;az=ar;i=h;return az|0}}while(0);c[b>>2]=8;am=+g[f>>2];an=-0.0-am;ao=+g[f+4>>2];ap=-0.0-ao;aq=+g[f+8>>2];ac=-0.0-aq;f=b+40|0;g[f>>2]=an;ar=b+44|0;g[ar>>2]=ap;al=b+48|0;g[al>>2]=ac;aj=b+52|0;g[aj>>2]=0.0;ad=+W(am*am+ao*ao+aq*aq);if(ad>0.0){aq=1.0/ad;aA=aq*ac;aB=aq*ap;aC=aq*an}else{aA=0.0;aB=0.0;aC=1.0}g[f>>2]=aC;g[ar>>2]=aB;g[al>>2]=aA;g[aj>>2]=0.0;g[b+56>>2]=0.0;c[b+36>>2]=1;c[b+4>>2]=c[k>>2];g[b+20>>2]=1.0;az=8;i=h;return az|0}function vr(a){a=a|0;var b=0,d=0,e=0,f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0.0,H=0.0,I=0.0,J=0.0,K=0.0,L=0.0,M=0.0,N=0.0,O=0.0,P=0.0,Q=0,R=0;b=i;i=i+112|0;d=b|0;e=b+16|0;f=b+32|0;h=b+48|0;j=b+64|0;k=b+80|0;l=b+96|0;m=a+372|0;n=c[m>>2]|0;o=n+32|0;p=c[o>>2]|0;L1:do{if((p|0)==1){q=d|0;r=d+4|0;s=d+8|0;t=a+364|0;u=e|0;v=e+4|0;w=e+8|0;x=e+12|0;y=0;z=n;A=1;while(1){K1(d|0,0,16)|0;g[d+(y<<2)>>2]=1.0;B=z+32|0;g[z+16+(A<<2)>>2]=0.0;C=(c[t>>2]|0)-1|0;c[t>>2]=C;c[z+(c[B>>2]<<2)>>2]=c[a+348+(C<<2)>>2];C=c[B>>2]|0;c[B>>2]=C+1;vt(a,d,c[z+(C<<2)>>2]|0);if(vr(a)|0){D=1;E=26;break}C=c[m>>2]|0;B=C+32|0;F=(c[B>>2]|0)-1|0;c[B>>2]=F;B=c[C+(F<<2)>>2]|0;F=c[t>>2]|0;c[t>>2]=F+1;c[a+348+(F<<2)>>2]=B;B=c[m>>2]|0;G=-0.0- +g[r>>2];H=-0.0- +g[s>>2];g[u>>2]=-0.0- +g[q>>2];g[v>>2]=G;g[w>>2]=H;g[x>>2]=0.0;F=B+32|0;g[B+16+(c[F>>2]<<2)>>2]=0.0;C=(c[t>>2]|0)-1|0;c[t>>2]=C;c[B+(c[F>>2]<<2)>>2]=c[a+348+(C<<2)>>2];C=c[F>>2]|0;c[F>>2]=C+1;vt(a,e,c[B+(C<<2)>>2]|0);if(vr(a)|0){D=1;E=22;break}C=c[m>>2]|0;B=C+32|0;F=(c[B>>2]|0)-1|0;c[B>>2]=F;B=c[C+(F<<2)>>2]|0;F=c[t>>2]|0;c[t>>2]=F+1;c[a+348+(F<<2)>>2]=B;B=y+1|0;if(B>>>0>=3>>>0){break L1}F=c[m>>2]|0;y=B;z=F;A=c[F+32>>2]|0}if((E|0)==22){i=b;return D|0}else if((E|0)==26){i=b;return D|0}}else if((p|0)==3){A=c[n+4>>2]|0;z=c[n>>2]|0;H=+g[z+16>>2];G=+g[A+16>>2]-H;I=+g[z+20>>2];J=+g[A+20>>2]-I;K=+g[z+24>>2];L=+g[A+24>>2]-K;A=c[n+8>>2]|0;M=+g[A+16>>2]-H;H=+g[A+20>>2]-I;I=+g[A+24>>2]-K;K=J*I-L*H;N=L*M-G*I;I=G*H-J*M;A=k|0;g[A>>2]=K;z=k+4|0;g[z>>2]=N;y=k+8|0;g[y>>2]=I;g[k+12>>2]=0.0;if(K*K+N*N+I*I<=0.0){break}g[n+28>>2]=0.0;t=a+364|0;x=(c[t>>2]|0)-1|0;c[t>>2]=x;c[n+(c[o>>2]<<2)>>2]=c[a+348+(x<<2)>>2];x=c[o>>2]|0;c[o>>2]=x+1;vt(a,k,c[n+(x<<2)>>2]|0);if(vr(a)|0){D=1;i=b;return D|0}x=c[m>>2]|0;w=x+32|0;v=(c[w>>2]|0)-1|0;c[w>>2]=v;w=c[x+(v<<2)>>2]|0;v=c[t>>2]|0;c[t>>2]=v+1;c[a+348+(v<<2)>>2]=w;w=c[m>>2]|0;I=-0.0- +g[z>>2];N=-0.0- +g[y>>2];g[l>>2]=-0.0- +g[A>>2];g[l+4>>2]=I;g[l+8>>2]=N;g[l+12>>2]=0.0;A=w+32|0;g[w+16+(c[A>>2]<<2)>>2]=0.0;y=(c[t>>2]|0)-1|0;c[t>>2]=y;c[w+(c[A>>2]<<2)>>2]=c[a+348+(y<<2)>>2];y=c[A>>2]|0;c[A>>2]=y+1;vt(a,l,c[w+(y<<2)>>2]|0);if(vr(a)|0){D=1;i=b;return D|0}else{y=c[m>>2]|0;w=y+32|0;A=(c[w>>2]|0)-1|0;c[w>>2]=A;w=c[y+(A<<2)>>2]|0;A=c[t>>2]|0;c[t>>2]=A+1;c[a+348+(A<<2)>>2]=w;break}}else if((p|0)==4){w=c[n>>2]|0;A=c[n+12>>2]|0;N=+g[A+16>>2];I=+g[w+16>>2]-N;K=+g[A+20>>2];M=+g[w+20>>2]-K;J=+g[A+24>>2];H=+g[w+24>>2]-J;w=c[n+4>>2]|0;G=+g[w+16>>2]-N;L=+g[w+20>>2]-K;O=+g[w+24>>2]-J;w=c[n+8>>2]|0;P=+g[w+16>>2]-N;N=+g[w+20>>2]-K;K=+g[w+24>>2]-J;if(I*L*K+(M*O*P+H*G*N-I*O*N-M*G*K)-H*L*P==0.0){break}else{D=1}i=b;return D|0}else if((p|0)==2){w=c[n+4>>2]|0;A=c[n>>2]|0;P=+g[w+16>>2]- +g[A+16>>2];L=+g[w+20>>2]- +g[A+20>>2];H=+g[w+24>>2]- +g[A+24>>2];A=f|0;w=f+4|0;t=f+8|0;y=h|0;z=h+4|0;v=h+8|0;x=h+12|0;q=a+364|0;u=j|0;s=j+4|0;r=j+8|0;F=j+12|0;B=0;while(1){K1(f|0,0,16)|0;g[f+(B<<2)>>2]=1.0;K=+g[t>>2];G=+g[w>>2];M=L*K-H*G;N=+g[A>>2];O=H*N-P*K;K=P*G-L*N;g[y>>2]=M;g[z>>2]=O;g[v>>2]=K;g[x>>2]=0.0;if(M*M+O*O+K*K>0.0){C=c[m>>2]|0;Q=C+32|0;g[C+16+(c[Q>>2]<<2)>>2]=0.0;R=(c[q>>2]|0)-1|0;c[q>>2]=R;c[C+(c[Q>>2]<<2)>>2]=c[a+348+(R<<2)>>2];R=c[Q>>2]|0;c[Q>>2]=R+1;vt(a,h,c[C+(R<<2)>>2]|0);if(vr(a)|0){D=1;E=20;break}R=c[m>>2]|0;C=R+32|0;Q=(c[C>>2]|0)-1|0;c[C>>2]=Q;C=c[R+(Q<<2)>>2]|0;Q=c[q>>2]|0;c[q>>2]=Q+1;c[a+348+(Q<<2)>>2]=C;C=c[m>>2]|0;K=-0.0- +g[z>>2];O=-0.0- +g[v>>2];g[u>>2]=-0.0- +g[y>>2];g[s>>2]=K;g[r>>2]=O;g[F>>2]=0.0;Q=C+32|0;g[C+16+(c[Q>>2]<<2)>>2]=0.0;R=(c[q>>2]|0)-1|0;c[q>>2]=R;c[C+(c[Q>>2]<<2)>>2]=c[a+348+(R<<2)>>2];R=c[Q>>2]|0;c[Q>>2]=R+1;vt(a,j,c[C+(R<<2)>>2]|0);if(vr(a)|0){D=1;E=21;break}R=c[m>>2]|0;C=R+32|0;Q=(c[C>>2]|0)-1|0;c[C>>2]=Q;C=c[R+(Q<<2)>>2]|0;Q=c[q>>2]|0;c[q>>2]=Q+1;c[a+348+(Q<<2)>>2]=C}B=B+1|0;if(B>>>0>=3>>>0){break L1}}if((E|0)==20){i=b;return D|0}else if((E|0)==21){i=b;return D|0}}}while(0);D=0;i=b;return D|0}function vs(b,d,e,f,h){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0.0,s=0.0,t=0,u=0.0,v=0.0,w=0,x=0.0,y=0.0,z=0.0,A=0.0,B=0,C=0,D=0,E=0;i=b+9288|0;j=c[i>>2]|0;if((j|0)==0){c[b>>2]=5;k=0;return k|0}l=j+48|0;m=c[l>>2]|0;n=j+44|0;if((m|0)!=0){c[m+44>>2]=c[n>>2]}m=c[n>>2]|0;if((m|0)!=0){c[m+48>>2]=c[l>>2]}if((c[i>>2]|0)==(j|0)){c[i>>2]=c[l>>2]}m=b+9292|0;c[m>>2]=(c[m>>2]|0)-1;c[n>>2]=0;o=b+9280|0;c[l>>2]=c[o>>2];p=c[o>>2]|0;if((p|0)!=0){c[p+44>>2]=j}c[o>>2]=j;p=b+9284|0;c[p>>2]=(c[p>>2]|0)+1;a[j+55|0]=0;c[j+20>>2]=d;c[j+24>>2]=e;c[j+28>>2]=f;q=d+16|0;r=+g[q>>2];s=+g[e+16>>2]-r;t=d+20|0;u=+g[t>>2];v=+g[e+20>>2]-u;w=d+24|0;x=+g[w>>2];y=+g[e+24>>2]-x;z=+g[f+16>>2]-r;r=+g[f+20>>2]-u;u=+g[f+24>>2]-x;x=v*u-y*r;A=y*z-s*u;u=s*r-v*z;B=j|0;g[B>>2]=x;C=j+4|0;g[C>>2]=A;D=j+8|0;g[D>>2]=u;g[j+12>>2]=0.0;z=+W(x*x+A*A+u*u);do{if(z>9999999747378752.0e-20){E=j+16|0;do{if(!(vw(0,j,d,e,E)|0)){if(vw(0,j,e,f,E)|0){break}if(vw(0,j,f,d,E)|0){break}g[E>>2]=(+g[q>>2]*+g[B>>2]+ +g[t>>2]*+g[C>>2]+ +g[w>>2]*+g[D>>2])/z}}while(0);u=1.0/z;g[B>>2]=u*+g[B>>2];g[C>>2]=u*+g[C>>2];g[D>>2]=u*+g[D>>2];if(h){k=j;return k|0}if(+g[E>>2]<-9999999747378752.0e-21){c[b>>2]=3;break}else{k=j;return k|0}}else{c[b>>2]=2}}while(0);b=c[l>>2]|0;if((b|0)!=0){c[b+44>>2]=c[n>>2]}b=c[n>>2]|0;if((b|0)!=0){c[b+48>>2]=c[l>>2]}if((c[o>>2]|0)==(j|0)){c[o>>2]=c[l>>2]}c[p>>2]=(c[p>>2]|0)-1;c[n>>2]=0;c[l>>2]=c[i>>2];l=c[i>>2]|0;if((l|0)!=0){c[l+44>>2]=j}c[i>>2]=j;c[m>>2]=(c[m>>2]|0)+1;k=0;return k|0}function vt(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,h=0,j=0,k=0.0,l=0.0,m=0.0,n=0.0,o=0,p=0,q=0,r=0,s=0,t=0;e=i;i=i+48|0;f=e|0;h=e+16|0;j=e+32|0;k=+g[b>>2];l=+g[b+4>>2];m=+g[b+8>>2];n=1.0/+W(k*k+l*l+m*m);b=d|0;g[b>>2]=k*n;o=d+4|0;g[o>>2]=l*n;p=d+8|0;g[p>>2]=m*n;g[d+12>>2]=0.0;q=a+120|0;r=(c[a>>2]|0)+(c[q+4>>2]|0)|0;s=c[q>>2]|0;if((s&1|0)==0){t=s}else{t=c[(c[r>>2]|0)+(s-1)>>2]|0}hF[t&255](f,r,d|0);n=-0.0- +g[o>>2];m=-0.0- +g[p>>2];g[j>>2]=-0.0- +g[b>>2];g[j+4>>2]=n;g[j+8>>2]=m;g[j+12>>2]=0.0;vv(h,a|0,j);m=+g[f+4>>2]- +g[h+4>>2];n=+g[f+8>>2]- +g[h+8>>2];g[d+16>>2]=+g[f>>2]- +g[h>>2];g[d+20>>2]=m;g[d+24>>2]=n;g[d+28>>2]=0.0;i=e;return}function vu(b,e,f,h,i,j){b=b|0;e=e|0;f=f|0;h=h|0;i=i|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0;k=h+55|0;if((d[k]|0|0)==(e|0)){l=0;return l|0}m=c[26728+(i<<2)>>2]|0;if(+g[h>>2]*+g[f+16>>2]+ +g[h+4>>2]*+g[f+20>>2]+ +g[h+8>>2]*+g[f+24>>2]- +g[h+16>>2]<-9999999747378752.0e-21){n=vs(b,c[h+20+(m<<2)>>2]|0,c[h+20+(i<<2)>>2]|0,f,0)|0;if((n|0)==0){l=0;return l|0}a[n+52|0]=i;c[n+32>>2]=h;a[h+52+i|0]=0;c[h+32+(i<<2)>>2]=n;o=j|0;p=c[o>>2]|0;if((p|0)==0){c[j+4>>2]=n}else{a[p+53|0]=2;c[p+36>>2]=n;a[n+54|0]=1;c[n+40>>2]=p}c[o>>2]=n;n=j+8|0;c[n>>2]=(c[n>>2]|0)+1;l=1;return l|0}n=c[26712+(i<<2)>>2]|0;a[k]=e;if(!(vu(b,e,f,c[h+32+(m<<2)>>2]|0,d[h+52+m|0]|0,j)|0)){l=0;return l|0}if(!(vu(b,e,f,c[h+32+(n<<2)>>2]|0,d[h+52+n|0]|0,j)|0)){l=0;return l|0}j=h+48|0;n=c[j>>2]|0;f=h+44|0;if((n|0)!=0){c[n+44>>2]=c[f>>2]}n=c[f>>2]|0;if((n|0)!=0){c[n+48>>2]=c[j>>2]}n=b+9280|0;if((c[n>>2]|0)==(h|0)){c[n>>2]=c[j>>2]}n=b+9284|0;c[n>>2]=(c[n>>2]|0)-1;c[f>>2]=0;f=b+9288|0;c[j>>2]=c[f>>2];j=c[f>>2]|0;if((j|0)!=0){c[j+44>>2]=h}c[f>>2]=h;h=b+9292|0;c[h>>2]=(c[h>>2]|0)+1;l=1;return l|0}function vv(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,h=0,j=0,k=0,l=0,m=0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0;e=i;i=i+32|0;f=e|0;h=e+16|0;j=b+120|0;k=(c[b+4>>2]|0)+(c[j+4>>2]|0)|0;l=c[j>>2]|0;if((l&1|0)==0){m=l}else{m=c[(c[k>>2]|0)+(l-1)>>2]|0}n=+g[d>>2];o=+g[d+4>>2];p=+g[d+8>>2];q=n*+g[b+24>>2]+o*+g[b+28>>2]+p*+g[b+32>>2];r=n*+g[b+40>>2]+o*+g[b+44>>2]+p*+g[b+48>>2];g[h>>2]=+g[b+8>>2]*n+ +g[b+12>>2]*o+ +g[b+16>>2]*p;g[h+4>>2]=q;g[h+8>>2]=r;g[h+12>>2]=0.0;hF[m&255](f,k,h);r=+g[f>>2];q=+g[f+4>>2];p=+g[f+8>>2];o=r*+g[b+72>>2]+q*+g[b+76>>2]+p*+g[b+80>>2]+ +g[b+108>>2];n=r*+g[b+88>>2]+q*+g[b+92>>2]+p*+g[b+96>>2]+ +g[b+112>>2];g[a>>2]=r*+g[b+56>>2]+q*+g[b+60>>2]+p*+g[b+64>>2]+ +g[b+104>>2];g[a+4>>2]=o;g[a+8>>2]=n;g[a+12>>2]=0.0;i=e;return}function vw(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0.0,h=0.0,i=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0;f=+g[d+16>>2];h=+g[c+16>>2];i=f-h;j=+g[d+20>>2];k=+g[c+20>>2];l=j-k;m=+g[d+24>>2];n=+g[c+24>>2];o=m-n;p=+g[b+8>>2];q=+g[b+4>>2];r=+g[b>>2];if(n*(i*q-l*r)+(h*(l*p-o*q)+k*(o*r-i*p))>=0.0){s=0;return s|0}if(h*i+k*l+n*o>0.0){g[e>>2]=+W(h*h+k*k+n*n);s=1;return s|0}if(f*i+j*l+m*o<0.0){g[e>>2]=+W(f*f+j*j+m*m);s=1;return s|0}else{p=f*h+j*k+m*n;r=((f*f+j*j+m*m)*(h*h+k*k+n*n)-p*p)/(i*i+l*l+o*o);g[e>>2]=+W(r>0.0?r:0.0);s=1;return s|0}return 0}function vx(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,h=0,i=0.0,j=0.0,k=0,l=0,m=0.0,n=0.0,o=0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0;f=b|0;h=a|0;i=+g[h>>2];j=+g[f>>2]-i;k=b+4|0;l=a+4|0;m=+g[l>>2];n=+g[k>>2]-m;o=b+8|0;b=a+8|0;p=+g[b>>2];q=+g[o>>2]-p;r=j*j+n*n+q*q;if(r<=0.0){s=-1.0;return+s}t=(-0.0-(i*j+m*n+p*q))/r;if(t>=1.0){g[d>>2]=0.0;g[d+4>>2]=1.0;c[e>>2]=2;r=+g[f>>2];p=+g[k>>2];m=+g[o>>2];s=r*r+p*p+m*m;return+s}if(t>0.0){g[d+4>>2]=t;g[d>>2]=1.0-t;c[e>>2]=3;m=j*t+ +g[h>>2];j=n*t+ +g[l>>2];n=q*t+ +g[b>>2];s=m*m+j*j+n*n;return+s}else{g[d>>2]=1.0;g[d+4>>2]=0.0;c[e>>2]=1;n=+g[h>>2];j=+g[l>>2];m=+g[b>>2];s=n*n+j*j+m*m;return+s}return 0.0}function vy(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0.0,p=0,q=0.0,r=0.0,s=0,t=0.0,u=0,v=0.0,w=0.0,x=0,y=0.0,z=0,A=0.0,B=0.0,C=0.0,D=0.0,E=0,F=0.0,G=0,H=0.0,I=0.0,J=0.0,K=0.0,L=0.0,M=0,N=0.0,O=0,P=0.0,Q=0.0,R=0;h=i;i=i+80|0;j=h|0;k=h+16|0;l=h+64|0;m=h+72|0;c[j>>2]=a;c[j+4>>2]=b;c[j+8>>2]=d;n=a|0;o=+g[n>>2];p=b|0;q=+g[p>>2];r=o-q;s=a+4|0;t=+g[s>>2];u=b+4|0;v=+g[u>>2];w=t-v;x=a+8|0;y=+g[x>>2];z=b+8|0;A=+g[z>>2];B=y-A;g[k>>2]=r;g[k+4>>2]=w;g[k+8>>2]=B;g[k+12>>2]=0.0;b=d|0;C=+g[b>>2];D=q-C;E=d+4|0;q=+g[E>>2];F=v-q;G=d+8|0;v=+g[G>>2];H=A-v;g[k+16>>2]=D;g[k+20>>2]=F;g[k+24>>2]=H;g[k+28>>2]=0.0;A=C-o;C=q-t;q=v-y;g[k+32>>2]=A;g[k+36>>2]=C;g[k+40>>2]=q;g[k+44>>2]=0.0;v=w*H-B*F;I=B*D-H*r;J=F*r-w*D;K=J*J+(v*v+I*I);if(K<=0.0){L=-1.0;i=h;return+L}c[l>>2]=0;c[l+4>>2]=0;c[m>>2]=0;d=l;M=l+4|0;l=0;N=-1.0;O=a;P=w;w=B;B=r;r=o;o=t;t=y;while(1){do{if(r*(J*P-I*w)+o*(v*w-J*B)+(I*B-v*P)*t>0.0){a=c[26696+(l<<2)>>2]|0;y=+vx(O,c[j+(a<<2)>>2]|0,d,m);if(!(N<0.0|y<N)){Q=N;break}R=c[m>>2]|0;c[f>>2]=((R&1|0)==0?0:1<<l)+((R&2|0)==0?0:1<<a);g[e+(l<<2)>>2]=+g[d>>2];g[e+(a<<2)>>2]=+g[M>>2];g[e+(c[26696+(a<<2)>>2]<<2)>>2]=0.0;Q=y}else{Q=N}}while(0);a=l+1|0;if(a>>>0>=3>>>0){break}R=c[j+(a<<2)>>2]|0;l=a;N=Q;O=R;P=+g[k+(a<<4)+4>>2];w=+g[k+(a<<4)+8>>2];B=+g[k+(a<<4)>>2];r=+g[R>>2];o=+g[R+4>>2];t=+g[R+8>>2]}if(Q>=0.0){L=Q;i=h;return+L}Q=+W(K);t=(v*+g[n>>2]+I*+g[s>>2]+J*+g[x>>2])/K;K=v*t;v=I*t;I=J*t;c[f>>2]=7;t=+g[p>>2]-K;J=+g[u>>2]-v;o=+g[z>>2]-I;r=F*o-J*H;B=t*H-o*D;o=J*D-t*F;F=+W(o*o+(r*r+B*B))/Q;g[e>>2]=F;B=+g[b>>2]-K;r=+g[E>>2]-v;o=+g[G>>2]-I;t=C*o-r*q;D=B*q-o*A;o=r*A-B*C;C=+W(o*o+(t*t+D*D))/Q;g[e+4>>2]=C;g[e+8>>2]=1.0-(C+F);L=I*I+(K*K+v*v);i=h;return+L}function vz(a,b,d,e,f,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0.0,q=0,r=0.0,s=0.0,t=0,u=0.0,v=0,w=0.0,x=0.0,y=0,z=0.0,A=0.0,B=0.0,C=0,D=0.0,E=0.0,F=0,G=0.0,H=0.0,I=0,J=0.0,K=0.0,L=0.0,M=0.0,N=0,O=0.0,P=0.0,Q=0,R=0.0,S=0.0,T=0.0,U=0.0,V=0,W=0,X=0,Y=0,Z=0.0,_=0;j=i;i=i+88|0;k=j|0;l=j+16|0;m=j+64|0;n=j+80|0;c[k>>2]=a;c[k+4>>2]=b;c[k+8>>2]=d;c[k+12>>2]=e;o=a|0;p=+g[o>>2];q=e|0;r=+g[q>>2];s=p-r;t=a+4|0;u=+g[t>>2];v=e+4|0;w=+g[v>>2];x=u-w;y=a+8|0;z=+g[y>>2];a=e+8|0;A=+g[a>>2];B=z-A;g[l>>2]=s;g[l+4>>2]=x;g[l+8>>2]=B;g[l+12>>2]=0.0;C=b|0;D=+g[C>>2];E=D-r;F=b+4|0;G=+g[F>>2];H=G-w;I=b+8|0;J=+g[I>>2];K=J-A;g[l+16>>2]=E;g[l+20>>2]=H;g[l+24>>2]=K;g[l+28>>2]=0.0;b=d|0;L=+g[b>>2];M=L-r;N=d+4|0;O=+g[N>>2];P=O-w;Q=d+8|0;R=+g[Q>>2];S=R-A;g[l+32>>2]=M;g[l+36>>2]=P;g[l+40>>2]=S;g[l+44>>2]=0.0;T=x*K*M+B*E*P-P*K*s-x*E*S+S*s*H-M*B*H;H=D-L;L=G-O;O=J-R;R=p-D;D=u-G;G=z-J;if(T*(z*(H*D-L*R)+(p*(L*G-O*D)+u*(O*R-H*G)))>0.0|T==0.0){U=-1.0;i=j;return+U}K1(m|0,0,12)|0;c[n>>2]=0;d=m|0;V=m+4|0;W=m+8|0;m=f+12|0;X=0;G=-1.0;H=x;x=B;B=s;s=r;r=w;w=A;while(1){Y=c[26680+(X<<2)>>2]|0;A=+g[l+(Y<<4)+8>>2];R=+g[l+(Y<<4)+4>>2];O=+g[l+(Y<<4)>>2];do{if(T*((H*A-x*R)*s+r*(x*O-A*B)+(R*B-H*O)*w)>0.0){u=+vy(c[k+(X<<2)>>2]|0,c[k+(Y<<2)>>2]|0,e,d,n);if(!(G<0.0|u<G)){Z=G;break}_=c[n>>2]|0;c[h>>2]=((_&2|0)==0?0:1<<Y)+(_<<1&8)+((_&1|0)==0?0:1<<X);g[f+(X<<2)>>2]=+g[d>>2];g[f+(Y<<2)>>2]=+g[V>>2];g[f+(c[26680+(Y<<2)>>2]<<2)>>2]=0.0;g[m>>2]=+g[W>>2];Z=u}else{Z=G}}while(0);Y=X+1|0;if(Y>>>0>=3>>>0){break}X=Y;G=Z;H=+g[l+(Y<<4)+4>>2];x=+g[l+(Y<<4)+8>>2];B=+g[l+(Y<<4)>>2];s=+g[q>>2];r=+g[v>>2];w=+g[a>>2]}if(Z>=0.0){U=Z;i=j;return+U}c[h>>2]=15;Z=+g[N>>2];w=+g[I>>2];r=+g[q>>2];s=+g[Q>>2];B=+g[C>>2];x=+g[v>>2];H=+g[b>>2];G=+g[a>>2];O=+g[F>>2];R=(Z*w*r+s*B*x-x*w*H-Z*B*G+G*H*O-r*s*O)/T;g[f>>2]=R;O=+g[t>>2];s=+g[Q>>2];r=+g[q>>2];H=+g[y>>2];G=+g[b>>2];B=+g[v>>2];Z=+g[o>>2];w=+g[a>>2];x=+g[N>>2];A=(O*s*r+H*G*B-B*s*Z-O*G*w+w*Z*x-r*H*x)/T;g[f+4>>2]=A;x=+g[F>>2];H=+g[y>>2];r=+g[q>>2];Z=+g[I>>2];w=+g[o>>2];G=+g[v>>2];O=+g[C>>2];s=+g[a>>2];B=+g[t>>2];u=(x*H*r+Z*w*G-G*H*O-x*w*s+s*O*B-r*Z*B)/T;g[f+8>>2]=u;g[m>>2]=1.0-(u+(R+A));U=0.0;i=j;return+U}function vA(a,b,d,e,f,h,j,k,l,m,n){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;var o=0.0,p=0.0,q=0,r=0;n=i;i=i+72|0;m=n|0;b=n+16|0;o=+g[f+52>>2]- +g[h+52>>2];p=+g[f+56>>2]- +g[h+56>>2];g[m>>2]=+g[f+48>>2]- +g[h+48>>2];g[m+4>>2]=o;g[m+8>>2]=p;g[m+12>>2]=0.0;if(vp(d,f,e,h,m,b,1)|0){a=k;q=b+4|0;c[a>>2]=c[q>>2];c[a+4>>2]=c[q+4>>2];c[a+8>>2]=c[q+8>>2];c[a+12>>2]=c[q+12>>2];q=l;a=b+20|0;c[q>>2]=c[a>>2];c[q+4>>2]=c[a+4>>2];c[q+8>>2]=c[a+8>>2];c[q+12>>2]=c[a+12>>2];a=j;q=b+36|0;c[a>>2]=c[q>>2];c[a+4>>2]=c[q+4>>2];c[a+8>>2]=c[q+8>>2];c[a+12>>2]=c[q+12>>2];r=1;i=n;return r|0}if(!(vn(d,f,e,h,m,b)|0)){r=0;i=n;return r|0}m=k;k=b+4|0;c[m>>2]=c[k>>2];c[m+4>>2]=c[k+4>>2];c[m+8>>2]=c[k+8>>2];c[m+12>>2]=c[k+12>>2];k=l;l=b+20|0;c[k>>2]=c[l>>2];c[k+4>>2]=c[l+4>>2];c[k+8>>2]=c[l+8>>2];c[k+12>>2]=c[l+12>>2];l=j;j=b+36|0;c[l>>2]=c[j>>2];c[l+4>>2]=c[j+4>>2];c[l+8>>2]=c[j+8>>2];c[l+12>>2]=c[j+12>>2];r=0;i=n;return r|0}function vB(a){a=a|0;return}function vC(a){a=a|0;KU(a);return}function vD(b,d,e,f,h){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;c[b>>2]=33568;g[b+4>>2]=0.0;g[b+8>>2]=1.0;g[b+12>>2]=0.0;g[b+16>>2]=0.0;c[b+20>>2]=h;c[b+24>>2]=f;c[b+28>>2]=d;c[b+32>>2]=e;c[b+36>>2]=c[d+4>>2];c[b+40>>2]=c[e+4>>2];g[b+44>>2]=+g6[c[(c[d>>2]|0)+48>>2]&15](d);g[b+48>>2]=+g6[c[(c[e>>2]|0)+48>>2]&15](e);a[b+52|0]=0;c[b+60>>2]=-1;c[b+72>>2]=1;return}function vE(b,d,e,f,h,i,j,k,l){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;i=+i;j=+j;k=k|0;l=l|0;c[b>>2]=33568;g[b+4>>2]=0.0;g[b+8>>2]=1.0;g[b+12>>2]=0.0;g[b+16>>2]=0.0;c[b+20>>2]=l;c[b+24>>2]=k;c[b+28>>2]=d;c[b+32>>2]=e;c[b+36>>2]=f;c[b+40>>2]=h;g[b+44>>2]=i;g[b+48>>2]=j;a[b+52|0]=0;c[b+60>>2]=-1;c[b+72>>2]=1;return}function vF(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;vG(a,b,c,d);return}function vG(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0.0,K=0.0,L=0.0,M=0.0,N=0,O=0.0,P=0,Q=0.0,R=0.0,S=0.0,T=0.0,U=0,V=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0,ai=0,aj=0,ak=0,al=0,am=0,an=0,ao=0,ap=0,aq=0,ar=0,as=0,at=0,au=0,av=0,aw=0,ax=0,ay=0,az=0,aA=0,aB=0,aC=0,aD=0,aE=0,aF=0,aG=0,aH=0,aI=0,aJ=0,aK=0,aL=0,aM=0,aN=0,aO=0,aP=0,aQ=0,aR=0,aS=0,aT=0,aU=0,aV=0,aW=0,aX=0,aY=0,aZ=0,a_=0,a$=0,a0=0,a1=0,a2=0,a3=0,a4=0,a5=0,a6=0,a7=0,a8=0,a9=0,ba=0,bb=0,bc=0,bd=0,be=0,bf=0,bg=0,bh=0,bi=0.0,bj=0.0,bk=0.0,bl=0.0,bm=0.0,bn=0.0,bo=0.0,bp=0,bq=0.0,br=0.0,bs=0.0,bt=0.0,bu=0.0,bv=0.0,bw=0,bx=0.0,by=0,bz=0.0,bA=0.0,bB=0,bC=0.0,bD=0.0,bE=0.0,bF=0.0,bG=0.0,bH=0.0;h=i;i=i+352|0;j=h|0;k=h+16|0;l=h+32|0;m=h+48|0;n=h+112|0;o=h+176|0;p=h+192|0;q=h+208|0;r=h+224|0;s=h+240|0;t=h+256|0;u=h+272|0;v=h+288|0;w=h+304|0;x=h+320|0;y=h+336|0;z=b+56|0;g[z>>2]=0.0;A=j|0;B=j+4|0;C=j+8|0;D=j+12|0;E=m;F=d;K1(j|0,0,16)|0;c[E>>2]=c[F>>2];c[E+4>>2]=c[F+4>>2];c[E+8>>2]=c[F+8>>2];c[E+12>>2]=c[F+12>>2];F=m+16|0;E=d+16|0;c[F>>2]=c[E>>2];c[F+4>>2]=c[E+4>>2];c[F+8>>2]=c[E+8>>2];c[F+12>>2]=c[E+12>>2];E=m+32|0;F=d+32|0;c[E>>2]=c[F>>2];c[E+4>>2]=c[F+4>>2];c[E+8>>2]=c[F+8>>2];c[E+12>>2]=c[F+12>>2];F=m+48|0;E=F;G=d+48|0;c[E>>2]=c[G>>2];c[E+4>>2]=c[G+4>>2];c[E+8>>2]=c[G+8>>2];c[E+12>>2]=c[G+12>>2];G=d+64|0;E=n;H=G;c[E>>2]=c[H>>2];c[E+4>>2]=c[H+4>>2];c[E+8>>2]=c[H+8>>2];c[E+12>>2]=c[H+12>>2];H=n+16|0;E=d+80|0;c[H>>2]=c[E>>2];c[H+4>>2]=c[E+4>>2];c[H+8>>2]=c[E+8>>2];c[H+12>>2]=c[E+12>>2];E=n+32|0;H=d+96|0;c[E>>2]=c[H>>2];c[E+4>>2]=c[H+4>>2];c[E+8>>2]=c[H+8>>2];c[E+12>>2]=c[H+12>>2];H=n+48|0;E=H;I=d+112|0;c[E>>2]=c[I>>2];c[E+4>>2]=c[I+4>>2];c[E+8>>2]=c[I+8>>2];c[E+12>>2]=c[I+12>>2];I=F|0;J=+g[I>>2];F=H|0;K=+g[F>>2];H=m+52|0;L=+g[H>>2];E=n+52|0;M=+g[E>>2];N=m+56|0;O=+g[N>>2];P=n+56|0;Q=+g[P>>2];R=(J+K)*.5;S=(L+M)*.5;T=(O+Q)*.5;g[I>>2]=J-R;g[H>>2]=L-S;g[N>>2]=O-T;g[F>>2]=K-R;g[E>>2]=M-S;g[P>>2]=Q-T;F=b+28|0;I=b+32|0;if(((c[(c[F>>2]|0)+4>>2]|0)-17|0)>>>0<2>>>0){U=((c[(c[I>>2]|0)+4>>2]|0)-17|0)>>>0<2>>>0}else{U=0}Q=+g[b+44>>2];M=+g[b+48>>2];c[12464]=(c[12464]|0)+1;V=(a[b+52|0]&1)==0;K=V?Q:0.0;Q=V?M:0.0;V=b+64|0;c[V>>2]=0;X=b+4|0;Y=X|0;g[Y>>2]=0.0;Z=b+8|0;g[Z>>2]=1.0;_=b+12|0;g[_>>2]=0.0;$=b+16|0;g[$>>2]=0.0;aa=b+68|0;c[aa>>2]=0;ab=b+60|0;c[ab>>2]=-1;M=K+Q;ac=b+24|0;wf(c[ac>>2]|0);ad=d|0;ae=d+16|0;af=d+32|0;ag=d+4|0;ah=d+20|0;ai=d+36|0;aj=d+8|0;ak=d+24|0;al=d+40|0;am=o|0;an=o+4|0;ao=o+8|0;ap=o+12|0;aq=G|0;G=d+80|0;ar=d+96|0;as=d+68|0;at=d+84|0;au=d+100|0;av=d+72|0;aw=d+88|0;ax=d+104|0;ay=p|0;az=p+4|0;aA=p+8|0;aB=p+12|0;aC=q|0;aD=m|0;aE=q+4|0;aF=m+4|0;aG=q+8|0;aH=m+8|0;aI=m+16|0;aJ=m+20|0;aK=m+24|0;aL=m+32|0;aM=m+36|0;aN=m+40|0;aO=m+48|0;aP=s|0;aQ=s+4|0;aR=s+8|0;aS=s+12|0;aT=r|0;aU=n|0;aV=r+4|0;aW=n+4|0;aX=r+8|0;aY=n+8|0;aZ=n+16|0;a_=n+20|0;a$=n+24|0;a0=n+32|0;a1=n+36|0;a2=n+40|0;a3=n+48|0;a4=t|0;a5=t+4|0;a6=t+8|0;a7=t+12|0;a8=u|0;a9=u+4|0;ba=u+8|0;bb=u+12|0;bc=d+128|0;bd=v|0;be=v+4|0;bf=v+8|0;bg=X;bh=v;L4:do{if(U){O=999999984306749400.0;while(1){L=+g[Y>>2];J=-0.0-L;bi=+g[Z>>2];bj=-0.0-bi;bk=+g[_>>2];bl=-0.0-bk;bm=+g[ag>>2]*J+ +g[ah>>2]*bj+ +g[ai>>2]*bl;bn=+g[aj>>2]*J+ +g[ak>>2]*bj+ +g[al>>2]*bl;g[am>>2]=+g[ad>>2]*J+ +g[ae>>2]*bj+ +g[af>>2]*bl;g[an>>2]=bm;g[ao>>2]=bn;g[ap>>2]=0.0;bn=L*+g[as>>2]+bi*+g[at>>2]+bk*+g[au>>2];bm=L*+g[av>>2]+bi*+g[aw>>2]+bk*+g[ax>>2];g[ay>>2]=+g[aq>>2]*L+ +g[G>>2]*bi+ +g[ar>>2]*bk;g[az>>2]=bn;g[aA>>2]=bm;g[aB>>2]=0.0;nx(q,c[F>>2]|0,o);nx(r,c[I>>2]|0,p);bm=+g[aC>>2];bn=+g[aE>>2];bk=+g[aG>>2];bi=bm*+g[aD>>2]+bn*+g[aF>>2]+bk*+g[aH>>2]+ +g[aO>>2];L=bm*+g[aI>>2]+bn*+g[aJ>>2]+bk*+g[aK>>2]+ +g[H>>2];g[aP>>2]=bi;g[aQ>>2]=L;g[aS>>2]=0.0;bk=+g[aT>>2];bn=+g[aV>>2];bm=+g[aX>>2];bl=bk*+g[aU>>2]+bn*+g[aW>>2]+bm*+g[aY>>2]+ +g[a3>>2];bj=bk*+g[aZ>>2]+bn*+g[a_>>2]+bm*+g[a$>>2]+ +g[E>>2];g[a4>>2]=bl;g[a5>>2]=bj;g[a7>>2]=0.0;g[aR>>2]=0.0;g[a6>>2]=0.0;bm=bi-bl;bl=L-bj;g[a8>>2]=bm;g[a9>>2]=bl;g[ba>>2]=0.0;g[bb>>2]=0.0;bj=+g[Y>>2]*bm+ +g[Z>>2]*bl+ +g[_>>2]*0.0;if(bj>0.0){if(bj*bj>O*+g[bc>>2]){bo=O;bp=15;break L4}}if(wl(c[ac>>2]|0,u)|0){bq=O;bp=17;break L4}bl=O-bj;if(bl<=O*9.999999974752427e-7){br=O;bs=bl;bp=19;break L4}wg(c[ac>>2]|0,u,s,t);if(!(wk(c[ac>>2]|0,v)|0)){bt=O;bp=21;break L4}bl=+g[bd>>2];bj=+g[be>>2];bm=+g[bf>>2];L=bl*bl+bj*bj+bm*bm;if(L<9.999999974752427e-7){bu=O;bp=23;break L4}if(O-L<=O*1.1920928955078125e-7){bv=L;bp=25;break L4}c[bg>>2]=c[bh>>2];c[bg+4>>2]=c[bh+4>>2];c[bg+8>>2]=c[bh+8>>2];c[bg+12>>2]=c[bh+12>>2];bw=c[V>>2]|0;c[V>>2]=bw+1;if((bw|0)>1e3){bx=0.0;by=0;break L4}if((c[c[ac>>2]>>2]|0)==4){bp=28;break}else{O=L}}}else{O=999999984306749400.0;while(1){L=+g[Y>>2];bm=-0.0-L;bj=+g[Z>>2];bl=-0.0-bj;bi=+g[_>>2];bn=-0.0-bi;bk=+g[ag>>2]*bm+ +g[ah>>2]*bl+ +g[ai>>2]*bn;J=+g[aj>>2]*bm+ +g[ak>>2]*bl+ +g[al>>2]*bn;g[am>>2]=+g[ad>>2]*bm+ +g[ae>>2]*bl+ +g[af>>2]*bn;g[an>>2]=bk;g[ao>>2]=J;g[ap>>2]=0.0;J=L*+g[as>>2]+bj*+g[at>>2]+bi*+g[au>>2];bk=L*+g[av>>2]+bj*+g[aw>>2]+bi*+g[ax>>2];g[ay>>2]=+g[aq>>2]*L+ +g[G>>2]*bj+ +g[ar>>2]*bi;g[az>>2]=J;g[aA>>2]=bk;g[aB>>2]=0.0;nx(q,c[F>>2]|0,o);nx(r,c[I>>2]|0,p);bk=+g[aC>>2];J=+g[aE>>2];bi=+g[aG>>2];bj=bk*+g[aD>>2]+J*+g[aF>>2]+bi*+g[aH>>2]+ +g[aO>>2];L=bk*+g[aI>>2]+J*+g[aJ>>2]+bi*+g[aK>>2]+ +g[H>>2];bn=bk*+g[aL>>2]+J*+g[aM>>2]+bi*+g[aN>>2]+ +g[N>>2];g[aP>>2]=bj;g[aQ>>2]=L;g[aR>>2]=bn;g[aS>>2]=0.0;bi=+g[aT>>2];J=+g[aV>>2];bk=+g[aX>>2];bl=bi*+g[aU>>2]+J*+g[aW>>2]+bk*+g[aY>>2]+ +g[a3>>2];bm=bi*+g[aZ>>2]+J*+g[a_>>2]+bk*+g[a$>>2]+ +g[E>>2];bz=bi*+g[a0>>2]+J*+g[a1>>2]+bk*+g[a2>>2]+ +g[P>>2];g[a4>>2]=bl;g[a5>>2]=bm;g[a6>>2]=bz;g[a7>>2]=0.0;bk=bj-bl;bl=L-bm;bm=bn-bz;g[a8>>2]=bk;g[a9>>2]=bl;g[ba>>2]=bm;g[bb>>2]=0.0;bz=+g[Y>>2]*bk+ +g[Z>>2]*bl+ +g[_>>2]*bm;if(bz>0.0){if(bz*bz>O*+g[bc>>2]){bo=O;bp=15;break L4}}if(wl(c[ac>>2]|0,u)|0){bq=O;bp=17;break L4}bm=O-bz;if(bm<=O*9.999999974752427e-7){br=O;bs=bm;bp=19;break L4}wg(c[ac>>2]|0,u,s,t);if(!(wk(c[ac>>2]|0,v)|0)){bt=O;bp=21;break L4}bm=+g[bd>>2];bz=+g[be>>2];bl=+g[bf>>2];bk=bm*bm+bz*bz+bl*bl;if(bk<9.999999974752427e-7){bu=O;bp=23;break L4}if(O-bk<=O*1.1920928955078125e-7){bv=bk;bp=25;break L4}c[bg>>2]=c[bh>>2];c[bg+4>>2]=c[bh+4>>2];c[bg+8>>2]=c[bh+8>>2];c[bg+12>>2]=c[bh+12>>2];bw=c[V>>2]|0;c[V>>2]=bw+1;if((bw|0)>1e3){bx=0.0;by=0;break L4}if((c[c[ac>>2]>>2]|0)==4){bp=28;break}else{O=bk}}}}while(0);if((bp|0)==28){c[aa>>2]=13;bx=0.0;by=0}else if((bp|0)==15){c[aa>>2]=10;bA=bo;bp=29}else if((bp|0)==23){c[bg>>2]=c[bh>>2];c[bg+4>>2]=c[bh+4>>2];c[bg+8>>2]=c[bh+8>>2];c[bg+12>>2]=c[bh+12>>2];c[aa>>2]=6;bA=bu;bp=29}else if((bp|0)==21){c[aa>>2]=3;bA=bt;bp=29}else if((bp|0)==25){c[aa>>2]=12;bA=bv;bp=29}else if((bp|0)==17){c[aa>>2]=1;bA=bq;bp=29}else if((bp|0)==19){c[aa>>2]=bs>0.0?11:2;bA=br;bp=29}do{if((bp|0)==29){wm(c[ac>>2]|0,k,l);bh=j;c[bh>>2]=c[bg>>2];c[bh+4>>2]=c[bg+4>>2];c[bh+8>>2]=c[bg+8>>2];c[bh+12>>2]=c[bg+12>>2];br=+g[Y>>2];bs=+g[Z>>2];bq=+g[_>>2];bv=br*br+bs*bs+bq*bq;if(bv<1.0e-4){c[aa>>2]=5}if(bv>1.4210854715202004e-14){bt=1.0/+W(bv);g[A>>2]=bt*+g[A>>2];g[B>>2]=bt*+g[B>>2];g[C>>2]=bt*+g[C>>2];bv=+W(bA);bu=K/bv;bh=k|0;g[bh>>2]=+g[bh>>2]-bu*br;bh=k+4|0;g[bh>>2]=+g[bh>>2]-bu*bs;bh=k+8|0;g[bh>>2]=+g[bh>>2]-bu*bq;bu=Q/bv;bh=l|0;g[bh>>2]=bu*br+ +g[bh>>2];bh=l+4|0;g[bh>>2]=bu*bs+ +g[bh>>2];bh=l+8|0;g[bh>>2]=bu*bq+ +g[bh>>2];c[ab>>2]=1;bx=1.0/bt-M;by=1;break}else{c[ab>>2]=2;bx=0.0;by=0;break}}}while(0);do{if((c[b+72>>2]|0)==0){bB=0}else{if((c[b+20>>2]|0)==0){bB=0;break}if((c[aa>>2]|0)==0){bB=0;break}bB=M+bx<.01}}while(0);aa=by^1;do{if(bB|aa){bh=b+20|0;if((c[bh>>2]|0)==0){bp=52;break}c[12466]=(c[12466]|0)+1;K1(bg|0,0,16)|0;V=c[bh>>2]|0;if(!(ht[c[(c[V>>2]|0)+8>>2]&7](V,c[ac>>2]|0,c[F>>2]|0,c[I>>2]|0,m,n,X,w,x,f,c[d+132>>2]|0)|0)){bA=+g[Y>>2];bt=+g[Z>>2];bq=+g[_>>2];if(bA*bA+bt*bt+bq*bq<=0.0){bp=52;break}bu=+g[w>>2]- +g[x>>2];bs=+g[w+4>>2]- +g[x+4>>2];br=+g[w+8>>2]- +g[x+8>>2];bv=+W(bu*bu+bs*bs+br*br)-M;if(bv<bx|aa){V=k;bh=w;c[V>>2]=c[bh>>2];c[V+4>>2]=c[bh+4>>2];c[V+8>>2]=c[bh+8>>2];c[V+12>>2]=c[bh+12>>2];bh=l;V=x;c[bh>>2]=c[V>>2];c[bh+4>>2]=c[V+4>>2];c[bh+8>>2]=c[V+8>>2];c[bh+12>>2]=c[V+12>>2];V=k|0;g[V>>2]=+g[V>>2]-K*bA;V=k+4|0;g[V>>2]=+g[V>>2]-K*bt;V=k+8|0;g[V>>2]=+g[V>>2]-K*bq;V=l|0;g[V>>2]=Q*bA+ +g[V>>2];V=l+4|0;g[V>>2]=Q*bt+ +g[V>>2];V=l+8|0;g[V>>2]=Q*bq+ +g[V>>2];V=j;c[V>>2]=c[bg>>2];c[V+4>>2]=c[bg+4>>2];c[V+8>>2]=c[bg+8>>2];c[V+12>>2]=c[bg+12>>2];bq=+g[A>>2];bt=+g[B>>2];bA=+g[C>>2];br=1.0/+W(bq*bq+bt*bt+bA*bA);g[A>>2]=bq*br;g[B>>2]=bt*br;g[C>>2]=bA*br;c[ab>>2]=6;bC=bv;break}c[ab>>2]=5;if(by){bC=bx;break}i=h;return}bv=+g[x>>2];br=+g[w>>2];bA=bv-br;bt=+g[x+4>>2];bq=+g[w+4>>2];bs=bt-bq;bu=+g[x+8>>2];bo=+g[w+8>>2];O=bu-bo;bk=bA*bA+bs*bs+O*O;if(bk>1.4210854715202004e-14){bD=bk;bE=bA;bF=bs;bG=O;bH=0.0}else{O=+g[b+4>>2];bs=+g[Z>>2];bA=+g[_>>2];bD=O*O+bs*bs+bA*bA;bE=O;bF=bs;bG=bA;bH=+g[$>>2]}if(bD<=1.4210854715202004e-14){c[ab>>2]=9;if(by){bC=bx;break}i=h;return}bA=1.0/+W(bD);bs=br-bv;bv=bq-bt;bt=bo-bu;bu=-0.0- +W(bs*bs+bv*bv+bt*bt);if(bx>bu|aa){V=k;bh=w;c[V>>2]=c[bh>>2];c[V+4>>2]=c[bh+4>>2];c[V+8>>2]=c[bh+8>>2];c[V+12>>2]=c[bh+12>>2];bh=l;V=x;c[bh>>2]=c[V>>2];c[bh+4>>2]=c[V+4>>2];c[bh+8>>2]=c[V+8>>2];c[bh+12>>2]=c[V+12>>2];g[A>>2]=bE*bA;g[B>>2]=bF*bA;g[C>>2]=bG*bA;g[D>>2]=bH;c[ab>>2]=3;bC=bu;break}c[ab>>2]=8;if(by){bC=bx;break}i=h;return}else{bp=52}}while(0);do{if((bp|0)==52){if(by){bC=bx;break}i=h;return}}while(0);do{if(bC>=0.0){if(bC*bC<+g[bc>>2]){break}i=h;return}}while(0);bc=j;c[bg>>2]=c[bc>>2];c[bg+4>>2]=c[bc+4>>2];c[bg+8>>2]=c[bc+8>>2];c[bg+12>>2]=c[bc+12>>2];g[z>>2]=bC;z=c[(c[e>>2]|0)+16>>2]|0;bx=S+ +g[l+4>>2];S=T+ +g[l+8>>2];g[y>>2]=R+ +g[l>>2];g[y+4>>2]=bx;g[y+8>>2]=S;g[y+12>>2]=0.0;ha[z&31](e,j,y,bC);i=h;return}function vH(a){a=a|0;return}function vI(a){a=a|0;KU(a);return}function vJ(b,d,e,f,h,j,k,l,m,n,o){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;var p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0.0,W=0.0,X=0.0,Y=0.0,Z=0.0,_=0.0,$=0.0,aa=0.0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0,ai=0,aj=0,ak=0,al=0,am=0.0,an=0.0,ao=0.0,ap=0.0,aq=0.0,ar=0.0,as=0.0,at=0.0,au=0.0,av=0.0,aw=0.0,ax=0.0,ay=0.0,az=0.0,aA=0.0,aB=0.0,aC=0.0,aD=0.0,aE=0.0,aF=0.0,aG=0;o=i;i=i+4264|0;b=o|0;p=o+992|0;q=o+1984|0;r=o+2976|0;s=o+3968|0;t=o+3984|0;u=o+4e3|0;v=o+4080|0;w=o+4216|0;if(((c[e+4>>2]|0)-17|0)>>>0<2>>>0){x=((c[f+4>>2]|0)-17|0)>>>0<2>>>0}else{x=0}y=b|0;z=p|0;A=q|0;B=r|0;C=h|0;D=h+16|0;E=h+32|0;F=h+4|0;G=h+20|0;H=h+36|0;I=h+8|0;J=h+24|0;K=h+40|0;L=j|0;M=j+16|0;N=j+32|0;O=j+4|0;P=j+20|0;Q=j+36|0;R=j+8|0;S=j+24|0;T=j+40|0;U=0;do{vK()|0;V=+g[52656+(U<<4)>>2];W=+g[52660+(U<<4)>>2];X=+g[52664+(U<<4)>>2];Y=-0.0-V;Z=-0.0-W;_=-0.0-X;$=+g[F>>2]*Y+ +g[G>>2]*Z+ +g[H>>2]*_;aa=+g[I>>2]*Y+ +g[J>>2]*Z+ +g[K>>2]*_;g[q+(U<<4)>>2]=+g[C>>2]*Y+ +g[D>>2]*Z+ +g[E>>2]*_;g[q+(U<<4)+4>>2]=$;g[q+(U<<4)+8>>2]=aa;g[q+(U<<4)+12>>2]=0.0;aa=V*+g[O>>2]+W*+g[P>>2]+X*+g[Q>>2];$=V*+g[R>>2]+W*+g[S>>2]+X*+g[T>>2];g[r+(U<<4)>>2]=V*+g[L>>2]+W*+g[M>>2]+X*+g[N>>2];g[r+(U<<4)+4>>2]=aa;g[r+(U<<4)+8>>2]=$;g[r+(U<<4)+12>>2]=0.0;U=U+1|0;}while((U|0)<42);U=g3[c[(c[e>>2]|0)+84>>2]&511](e)|0;if((U|0)>0){ab=e;ac=s|0;ad=s+4|0;ae=s+8|0;af=s;ag=s+12|0;ah=0;ai=42;while(1){hF[c[(c[ab>>2]|0)+88>>2]&255](e,ah,s);$=+g[ac>>2];aa=+g[ad>>2];X=+g[ae>>2];W=$*+g[D>>2]+aa*+g[G>>2]+X*+g[J>>2];V=$*+g[E>>2]+aa*+g[H>>2]+X*+g[K>>2];g[ac>>2]=+g[C>>2]*$+ +g[F>>2]*aa+ +g[I>>2]*X;g[ad>>2]=W;g[ae>>2]=V;g[ag>>2]=0.0;vK()|0;aj=52656+(ai<<4)|0;c[aj>>2]=c[af>>2];c[aj+4>>2]=c[af+4>>2];c[aj+8>>2]=c[af+8>>2];c[aj+12>>2]=c[af+12>>2];V=+g[ac>>2];W=-0.0-V;X=+g[ad>>2];aa=-0.0-X;$=+g[ae>>2];_=-0.0-$;Z=+g[F>>2]*W+ +g[G>>2]*aa+ +g[H>>2]*_;Y=+g[I>>2]*W+ +g[J>>2]*aa+ +g[K>>2]*_;g[q+(ai<<4)>>2]=+g[C>>2]*W+ +g[D>>2]*aa+ +g[E>>2]*_;g[q+(ai<<4)+4>>2]=Z;g[q+(ai<<4)+8>>2]=Y;g[q+(ai<<4)+12>>2]=0.0;Y=V*+g[O>>2]+X*+g[P>>2]+$*+g[Q>>2];Z=V*+g[R>>2]+X*+g[S>>2]+$*+g[T>>2];g[r+(ai<<4)>>2]=+g[L>>2]*V+ +g[M>>2]*X+ +g[N>>2]*$;g[r+(ai<<4)+4>>2]=Y;g[r+(ai<<4)+8>>2]=Z;g[r+(ai<<4)+12>>2]=0.0;aj=ah+1|0;if((aj|0)<(U|0)){ah=aj;ai=ai+1|0}else{break}}ak=U+42|0}else{ak=42}U=g3[c[(c[f>>2]|0)+84>>2]&511](f)|0;if((U|0)>0){ai=f;ah=t|0;ae=t+4|0;ad=t+8|0;ac=t;af=t+12|0;ag=ak;s=0;while(1){hF[c[(c[ai>>2]|0)+88>>2]&255](f,s,t);Z=+g[ah>>2];Y=+g[ae>>2];$=+g[ad>>2];X=Z*+g[M>>2]+Y*+g[P>>2]+$*+g[S>>2];V=Z*+g[N>>2]+Y*+g[Q>>2]+$*+g[T>>2];g[ah>>2]=+g[L>>2]*Z+ +g[O>>2]*Y+ +g[R>>2]*$;g[ae>>2]=X;g[ad>>2]=V;g[af>>2]=0.0;vK()|0;ab=52656+(ag<<4)|0;c[ab>>2]=c[ac>>2];c[ab+4>>2]=c[ac+4>>2];c[ab+8>>2]=c[ac+8>>2];c[ab+12>>2]=c[ac+12>>2];V=+g[ah>>2];X=-0.0-V;$=+g[ae>>2];Y=-0.0-$;Z=+g[ad>>2];_=-0.0-Z;aa=+g[F>>2]*X+ +g[G>>2]*Y+ +g[H>>2]*_;W=+g[I>>2]*X+ +g[J>>2]*Y+ +g[K>>2]*_;g[q+(ag<<4)>>2]=+g[C>>2]*X+ +g[D>>2]*Y+ +g[E>>2]*_;g[q+(ag<<4)+4>>2]=aa;g[q+(ag<<4)+8>>2]=W;g[q+(ag<<4)+12>>2]=0.0;W=V*+g[O>>2]+$*+g[P>>2]+Z*+g[Q>>2];aa=V*+g[R>>2]+$*+g[S>>2]+Z*+g[T>>2];g[r+(ag<<4)>>2]=+g[L>>2]*V+ +g[M>>2]*$+ +g[N>>2]*Z;g[r+(ag<<4)+4>>2]=W;g[r+(ag<<4)+8>>2]=aa;g[r+(ag<<4)+12>>2]=0.0;ab=s+1|0;if((ab|0)<(U|0)){ag=ag+1|0;s=ab}else{break}}al=U+ak|0}else{al=ak}hM[c[(c[e>>2]|0)+76>>2]&255](e,A,y,al);hM[c[(c[f>>2]|0)+76>>2]&255](f,B,z,al);if((al|0)>0){z=h+48|0;B=h+52|0;y=h+56|0;A=j+48|0;ak=j+52|0;U=j+56|0;if(x){aa=0.0;W=0.0;Z=0.0;x=0;$=999999984306749400.0;while(1){vK()|0;V=+g[52656+(x<<4)>>2];_=+g[52660+(x<<4)>>2];Y=+g[52668+(x<<4)>>2];do{if(V*V+_*_+0.0>.01){X=+g[b+(x<<4)>>2];am=+g[b+(x<<4)+4>>2];an=+g[b+(x<<4)+8>>2];ao=+g[p+(x<<4)>>2];ap=+g[p+(x<<4)+4>>2];aq=+g[p+(x<<4)+8>>2];ar=V*(ao*+g[L>>2]+ap*+g[O>>2]+aq*+g[R>>2]+ +g[A>>2]-(X*+g[C>>2]+am*+g[F>>2]+an*+g[I>>2]+ +g[z>>2]))+_*(ao*+g[M>>2]+ap*+g[P>>2]+aq*+g[S>>2]+ +g[ak>>2]-(X*+g[D>>2]+am*+g[G>>2]+an*+g[J>>2]+ +g[B>>2]))+0.0;if(ar>=$){as=$;at=Z;au=W;av=aa;break}as=ar;at=V;au=_;av=Y}else{as=$;at=Z;au=W;av=aa}}while(0);s=x+1|0;if((s|0)<(al|0)){aa=av;W=au;Z=at;x=s;$=as}else{aw=av;ax=0.0;ay=au;az=at;aA=as;break}}}else{as=0.0;at=0.0;au=0.0;av=0.0;x=0;$=999999984306749400.0;while(1){vK()|0;Z=+g[52656+(x<<4)>>2];W=+g[52660+(x<<4)>>2];aa=+g[52664+(x<<4)>>2];Y=+g[52668+(x<<4)>>2];do{if(Z*Z+W*W+aa*aa>.01){_=+g[b+(x<<4)>>2];V=+g[b+(x<<4)+4>>2];ar=+g[b+(x<<4)+8>>2];an=+g[p+(x<<4)>>2];am=+g[p+(x<<4)+4>>2];X=+g[p+(x<<4)+8>>2];aq=Z*(an*+g[L>>2]+am*+g[O>>2]+X*+g[R>>2]+ +g[A>>2]-(_*+g[C>>2]+V*+g[F>>2]+ar*+g[I>>2]+ +g[z>>2]))+W*(an*+g[M>>2]+am*+g[P>>2]+X*+g[S>>2]+ +g[ak>>2]-(_*+g[D>>2]+V*+g[G>>2]+ar*+g[J>>2]+ +g[B>>2]))+aa*(an*+g[N>>2]+am*+g[Q>>2]+X*+g[T>>2]+ +g[U>>2]-(_*+g[E>>2]+V*+g[H>>2]+ar*+g[K>>2]+ +g[y>>2]));if(aq>=$){aB=$;aC=av;aD=au;aE=at;aF=as;break}aB=aq;aC=Z;aD=W;aE=aa;aF=Y}else{aB=$;aC=av;aD=au;aE=at;aF=as}}while(0);s=x+1|0;if((s|0)<(al|0)){as=aF;at=aE;au=aD;av=aC;x=s;$=aB}else{aw=aF;ax=aE;ay=aD;az=aC;aA=aB;break}}}}else{aw=0.0;ax=0.0;ay=0.0;az=0.0;aA=999999984306749400.0}+nz(e);+nz(f);if(aA<0.0){aG=0;i=o;return aG|0}aB=+nz(e);aC=aA+(aB+ +nz(f)+.5);vD(u,e,f,d,0);c[v+132>>2]=0;aB=+g[h+48>>2]+az*aC;aA=+g[h+52>>2]+ay*aC;aD=+g[h+56>>2]+ax*aC;d=h;f=v;c[f>>2]=c[d>>2];c[f+4>>2]=c[d+4>>2];c[f+8>>2]=c[d+8>>2];c[f+12>>2]=c[d+12>>2];d=h+16|0;f=h+32|0;h=v+16|0;c[h>>2]=c[d>>2];c[h+4>>2]=c[d+4>>2];c[h+8>>2]=c[d+8>>2];c[h+12>>2]=c[d+12>>2];d=v+32|0;c[d>>2]=c[f>>2];c[d+4>>2]=c[f+4>>2];c[d+8>>2]=c[f+8>>2];c[d+12>>2]=c[f+12>>2];g[v+48>>2]=aB;g[v+52>>2]=aA;g[v+56>>2]=aD;g[v+60>>2]=0.0;f=v+64|0;d=j;c[f>>2]=c[d>>2];c[f+4>>2]=c[d+4>>2];c[f+8>>2]=c[d+8>>2];c[f+12>>2]=c[d+12>>2];d=v+80|0;f=j+16|0;c[d>>2]=c[f>>2];c[d+4>>2]=c[f+4>>2];c[d+8>>2]=c[f+8>>2];c[d+12>>2]=c[f+12>>2];f=v+96|0;d=j+32|0;c[f>>2]=c[d>>2];c[f+4>>2]=c[d+4>>2];c[f+8>>2]=c[d+8>>2];c[f+12>>2]=c[d+12>>2];d=v+112|0;f=j+48|0;c[d>>2]=c[f>>2];c[d+4>>2]=c[f+4>>2];c[d+8>>2]=c[f+8>>2];c[d+12>>2]=c[f+12>>2];g[v+128>>2]=999999984306749400.0;c[w>>2]=26848;f=w+40|0;a[f]=0;g[u+4>>2]=-0.0-az;g[u+8>>2]=-0.0-ay;g[u+12>>2]=-0.0-ax;g[u+16>>2]=0.0;vF(u,v,w|0,n,0);aD=aC- +g[w+36>>2];n=a[f]&1;if(n<<24>>24!=0){f=w+20|0;aC=+g[w+24>>2]-ay*aD;aA=+g[w+28>>2]-ax*aD;g[l>>2]=+g[f>>2]-az*aD;g[l+4>>2]=aC;g[l+8>>2]=aA;g[l+12>>2]=0.0;l=m;m=f;c[l>>2]=c[m>>2];c[l+4>>2]=c[m+4>>2];c[l+8>>2]=c[m+8>>2];c[l+12>>2]=c[m+12>>2];g[k>>2]=az;g[k+4>>2]=ay;g[k+8>>2]=ax;g[k+12>>2]=aw}aG=n<<24>>24!=0;i=o;return aG|0}function vK(){if((a[55528]|0)!=0){return 52656}if((bN(55528)|0)==0){return 52656}g[13164]=0.0;g[13165]=-0.0;g[13166]=-1.0;g[13167]=0.0;g[13168]=.7236080169677734;g[13169]=-.5257250070571899;g[13170]=-.44721901416778564;g[13171]=0.0;g[13172]=-.2763879895210266;g[13173]=-.8506489992141724;g[13174]=-.44721901416778564;g[13175]=0.0;g[13176]=-.8944259881973267;g[13177]=-0.0;g[13178]=-.4472160041332245;g[13179]=0.0;g[13180]=-.2763879895210266;g[13181]=.8506489992141724;g[13182]=-.44721999764442444;g[13183]=0.0;g[13184]=.7236080169677734;g[13185]=.5257250070571899;g[13186]=-.44721901416778564;g[13187]=0.0;g[13188]=.2763879895210266;g[13189]=-.8506489992141724;g[13190]=.44721999764442444;g[13191]=0.0;g[13192]=-.7236080169677734;g[13193]=-.5257250070571899;g[13194]=.44721901416778564;g[13195]=0.0;g[13196]=-.7236080169677734;g[13197]=.5257250070571899;g[13198]=.44721901416778564;g[13199]=0.0;g[13200]=.2763879895210266;g[13201]=.8506489992141724;g[13202]=.44721901416778564;g[13203]=0.0;g[13204]=.8944259881973267;g[13205]=0.0;g[13206]=.4472160041332245;g[13207]=0.0;g[13208]=-0.0;g[13209]=0.0;g[13210]=1.0;g[13211]=0.0;g[13212]=.4253230094909668;g[13213]=-.3090110123157501;g[13214]=-.8506540060043335;g[13215]=0.0;g[13216]=-.16245600581169128;g[13217]=-.49999499320983887;g[13218]=-.8506540060043335;g[13219]=0.0;g[13220]=.2628690004348755;g[13221]=-.8090119957923889;g[13222]=-.525738000869751;g[13223]=0.0;g[13224]=.4253230094909668;g[13225]=.3090110123157501;g[13226]=-.8506540060043335;g[13227]=0.0;g[13228]=.8506479859352112;g[13229]=-0.0;g[13230]=-.5257359743118286;g[13231]=0.0;g[13232]=-.5257300138473511;g[13233]=-0.0;g[13234]=-.8506519794464111;g[13235]=0.0;g[13236]=-.6881899833679199;g[13237]=-.49999698996543884;g[13238]=-.5257359743118286;g[13239]=0.0;g[13240]=-.16245600581169128;g[13241]=.49999499320983887;g[13242]=-.8506540060043335;g[13243]=0.0;g[13244]=-.6881899833679199;g[13245]=.49999698996543884;g[13246]=-.5257359743118286;g[13247]=0.0;g[13248]=.2628690004348755;g[13249]=.8090119957923889;g[13250]=-.525738000869751;g[13251]=0.0;g[13252]=.9510579705238342;g[13253]=.3090130090713501;g[13254]=0.0;g[13255]=0.0;g[13256]=.9510579705238342;g[13257]=-.3090130090713501;g[13258]=0.0;g[13259]=0.0;g[13260]=.5877860188484192;g[13261]=-.80901700258255;g[13262]=0.0;g[13263]=0.0;g[13264]=0.0;g[13265]=-1.0;g[13266]=0.0;g[13267]=0.0;g[13268]=-.5877860188484192;g[13269]=-.80901700258255;g[13270]=0.0;g[13271]=0.0;g[13272]=-.9510579705238342;g[13273]=-.3090130090713501;g[13274]=-0.0;g[13275]=0.0;g[13276]=-.9510579705238342;g[13277]=.3090130090713501;g[13278]=-0.0;g[13279]=0.0;g[13280]=-.5877860188484192;g[13281]=.80901700258255;g[13282]=-0.0;g[13283]=0.0;g[13284]=-0.0;g[13285]=1.0;g[13286]=-0.0;g[13287]=0.0;g[13288]=.5877860188484192;g[13289]=.80901700258255;g[13290]=-0.0;g[13291]=0.0;g[13292]=.6881899833679199;g[13293]=-.49999698996543884;g[13294]=.5257359743118286;g[13295]=0.0;g[13296]=-.2628690004348755;g[13297]=-.8090119957923889;g[13298]=.525738000869751;g[13299]=0.0;g[13300]=-.8506479859352112;g[13301]=0.0;g[13302]=.5257359743118286;g[13303]=0.0;g[13304]=-.2628690004348755;g[13305]=.8090119957923889;g[13306]=.525738000869751;g[13307]=0.0;g[13308]=.6881899833679199;g[13309]=.49999698996543884;g[13310]=.5257359743118286;g[13311]=0.0;g[13312]=.5257300138473511;g[13313]=0.0;g[13314]=.8506519794464111;g[13315]=0.0;g[13316]=.16245600581169128;g[13317]=-.49999499320983887;g[13318]=.8506540060043335;g[13319]=0.0;g[13320]=-.4253230094909668;g[13321]=-.3090110123157501;g[13322]=.8506540060043335;g[13323]=0.0;g[13324]=-.4253230094909668;g[13325]=.3090110123157501;g[13326]=.8506540060043335;g[13327]=0.0;g[13328]=.16245600581169128;g[13329]=.49999499320983887;g[13330]=.8506540060043335;g[13331]=0.0;return 52656}function vL(a){a=a|0;return}function vM(a){a=a|0;KU(a);return}function vN(a){a=a|0;return}function vO(a){a=a|0;KU(a);return}function vP(a,b,c){a=a|0;b=b|0;c=c|0;return}function vQ(a,b,c){a=a|0;b=b|0;c=c|0;return}function vR(b,d,e,f){b=b|0;d=d|0;e=e|0;f=+f;var h=0,i=0;h=b+4|0;i=d;c[h>>2]=c[i>>2];c[h+4>>2]=c[i+4>>2];c[h+8>>2]=c[i+8>>2];c[h+12>>2]=c[i+12>>2];i=b+20|0;h=e;c[i>>2]=c[h>>2];c[i+4>>2]=c[h+4>>2];c[i+8>>2]=c[h+8>>2];c[i+12>>2]=c[h+12>>2];g[b+36>>2]=f;a[b+40|0]=1;return}function vS(a,b){a=a|0;b=b|0;var d=0;a=b+112|0;b=c[a>>2]|0;if((b|0)==0){return}d=c[12482]|0;if((d|0)==0){return}g3[d&511](b)|0;c[a>>2]=0;return}function vT(b,c){b=b|0;c=c|0;var d=0.0,e=0.0,f=0,h=0.0,i=0,j=0,k=0,l=0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0,I=0.0,J=0.0,K=0.0,L=0.0,M=0.0,N=0.0,O=0.0,P=0.0,Q=0.0,R=0.0,S=0.0,T=0.0,U=0.0,W=0.0,X=0.0,Y=0.0,Z=0,_=0.0,$=0.0,aa=0.0,ab=0.0,ac=0.0,ad=0.0,ae=0.0,af=0.0,ag=0.0,ah=0.0,ai=0.0,aj=0.0,ak=0.0,al=0.0,am=0.0,an=0.0,ao=0.0,ap=0.0,aq=0.0,ar=0.0,as=0.0,at=0.0,au=0.0,av=0.0,aw=0.0,ax=0.0,ay=0.0,az=0.0,aA=0.0,aB=0.0,aC=0.0,aD=0.0,aE=0.0,aF=0.0,aG=0.0,aH=0.0,aI=0.0,aJ=0.0,aK=0,aL=0,aM=0,aN=0.0,aO=0,aP=0,aQ=0.0,aR=0,aS=0,aT=0.0,aU=0,aV=0,aW=0.0,aX=0.0,aY=0.0,aZ=0.0,a_=0.0,a$=0.0,a0=0.0,a1=0.0,a2=0.0,a3=0.0,a4=0.0,a5=0.0,a6=0.0,a7=0.0,a8=0.0,a9=0.0,ba=0.0,bb=0.0,bc=0.0,bd=0.0,be=0.0,bf=0.0,bg=0.0,bh=0.0,bi=0.0,bj=0.0,bk=0.0,bl=0.0,bm=0.0,bn=0.0,bo=0.0,bp=0.0,bq=0.0,br=0.0,bs=0.0,bt=0.0,bu=0.0,bv=0.0,bw=0.0;d=+g[c+80>>2];e=+g[b+84>>2];f=e<d;h=f?e:d;d=+g[b+268>>2];i=d<h;e=i?d:h;h=+g[b+452>>2];j=h<e;k=+g[b+636>>2]<(j?h:e);l=k?3:j?2:i?1:(f^1)<<31>>31;f=(l|0)!=0;e=+g[c>>2];if((a[2160]&1)==0){do{if(f){h=+g[b+188>>2];d=e-h;m=+g[c+4>>2];n=+g[b+192>>2];o=m-n;p=+g[c+8>>2];q=+g[b+196>>2];r=p-q;s=+g[b+372>>2];t=e-s;u=+g[b+376>>2];v=m-u;w=+g[b+380>>2];x=p-w;y=+g[b+556>>2];z=e-y;A=+g[b+560>>2];B=m-A;C=+g[b+564>>2];D=p-C;E=s-y;F=u-A;G=w-C;H=h-y;I=n-A;J=q-C;K=h-s;L=n-u;M=q-w;N=o*G-r*F;O=r*E-d*G;G=d*F-o*E;E=v*J-x*I;o=x*H-t*J;J=t*I-v*H;H=M*B-L*D;v=K*D-M*z;M=L*z-K*B;B=G*G+(N*N+O*O);O=J*J+(E*E+o*o);o=M*M+(H*H+v*v);v=B>O?B:O;O=v>o?v:o;if((l|0)!=1){P=O;Q=m;R=p;S=s;T=u;U=w;W=y;X=A;Y=C;Z=13;break}_=0.0;$=O;aa=m;ab=p;ac=y;ad=A;ae=C;af=s;ag=u;ah=w;ai=+g[b+4>>2];aj=+g[b+8>>2];ak=+g[b+12>>2];al=h;am=n;an=q;Z=14}else{P=0.0;Q=+g[c+4>>2];R=+g[c+8>>2];S=+g[b+372>>2];T=+g[b+376>>2];U=+g[b+380>>2];W=+g[b+556>>2];X=+g[b+560>>2];Y=+g[b+564>>2];Z=13}}while(0);if((Z|0)==13){q=+g[b+4>>2];n=e-q;h=+g[b+8>>2];w=Q-h;u=+g[b+12>>2];s=R-u;C=e-S;A=Q-T;y=R-U;p=e-W;m=Q-X;O=R-Y;o=S-W;v=T-X;B=U-Y;H=q-W;M=h-X;E=u-Y;J=q-S;N=h-T;G=u-U;K=w*B-s*v;z=s*o-n*B;B=n*v-w*o;o=A*E-y*M;w=y*H-C*E;E=C*M-A*H;H=G*m-N*O;A=J*O-G*p;G=N*p-J*m;m=B*B+(K*K+z*z);z=E*E+(o*o+w*w);w=G*G+(H*H+A*A);A=m>z?m:z;z=A>w?A:w;w=+g[b+188>>2];A=+g[b+192>>2];m=+g[b+196>>2];if((l|0)==2){ao=0.0;ap=z;aq=P;ar=q;as=Q;at=h;au=R;av=u;aw=S;ax=T;ay=U;az=w;aA=A;aB=m}else{_=z;$=P;aa=Q;ab=R;ac=W;ad=X;ae=Y;af=S;ag=T;ah=U;ai=q;aj=h;ak=u;al=w;am=A;an=m;Z=14}}do{if((Z|0)==14){m=e-ai;A=aa-aj;w=ab-ak;u=e-al;h=aa-am;q=ab-an;U=e-ac;T=aa-ad;S=ab-ae;Y=al-ac;X=am-ad;W=an-ae;R=ai-ac;Q=aj-ad;P=ak-ae;z=ai-al;H=aj-am;G=ak-an;o=A*W-w*X;E=w*Y-m*W;W=m*X-A*Y;Y=h*P-q*Q;A=q*R-u*P;P=u*Q-h*R;R=G*T-H*S;h=z*S-G*U;G=H*U-z*T;T=W*W+(o*o+E*E);E=P*P+(Y*Y+A*A);A=G*G+(R*R+h*h);h=T>E?T:E;E=h>A?h:A;if(k){aC=0.0;aD=E;aE=_;aF=$}else{ao=E;ap=_;aq=$;ar=ai;as=aa;at=aj;au=ab;av=ak;aw=af;ax=ag;ay=ah;az=al;aA=am;aB=an;break}aG=+V(+aF);aH=+V(+aE);aI=+V(+aD);aJ=+V(+aC);aK=aG>-999999984306749400.0;aL=aK^1;aM=aL<<31>>31;aN=aK?aG:-999999984306749400.0;aO=aH>aN;aP=aO?1:aM;aQ=aO?aH:aN;aR=aI>aQ;aS=aR?2:aP;aT=aR?aI:aQ;aU=aJ>aT;aV=aU?3:aS;return aV|0}}while(0);an=e-ar;am=as-at;al=au-av;ah=e-az;ag=as-aA;af=au-aB;ak=e-aw;ab=as-ax;as=au-ay;au=az-aw;aj=aA-ax;aa=aB-ay;ai=ar-aw;aw=at-ax;ax=av-ay;ay=ar-az;az=at-aA;aA=av-aB;aB=am*aa-al*aj;av=al*au-an*aa;aa=an*aj-am*au;au=ag*ax-af*aw;am=af*ai-ah*ax;ax=ah*aw-ag*ai;ai=aA*ab-az*as;ag=ay*as-aA*ak;aA=az*ak-ay*ab;ab=aa*aa+(aB*aB+av*av);av=ax*ax+(au*au+am*am);am=aA*aA+(ai*ai+ag*ag);ag=ab>av?ab:av;aC=ag>am?ag:am;aD=ao;aE=ap;aF=aq;aG=+V(+aF);aH=+V(+aE);aI=+V(+aD);aJ=+V(+aC);aK=aG>-999999984306749400.0;aL=aK^1;aM=aL<<31>>31;aN=aK?aG:-999999984306749400.0;aO=aH>aN;aP=aO?1:aM;aQ=aO?aH:aN;aR=aI>aQ;aS=aR?2:aP;aT=aR?aI:aQ;aU=aJ>aT;aV=aU?3:aS;return aV|0}else{do{if(f){aq=+g[b+188>>2];ap=e-aq;ao=+g[c+4>>2];am=+g[b+192>>2];ag=ao-am;av=+g[c+8>>2];ab=+g[b+196>>2];ai=av-ab;aA=+g[b+556>>2];au=+g[b+372>>2];ax=aA-au;aB=+g[b+560>>2];aa=+g[b+376>>2];ay=aB-aa;ak=+g[b+564>>2];az=+g[b+380>>2];as=ak-az;aw=ag*as-ai*ay;ah=ai*ax-ap*as;as=ap*ay-ag*ax;ax=as*as+(aw*aw+ah*ah);if((l|0)!=1){aW=ax;aX=ao;aY=av;aZ=aA;a_=au;a$=aB;a0=aa;a1=ak;a2=az;Z=6;break}a3=0.0;a4=ax;a5=ao;a6=av;a7=aA;a8=aB;a9=ak;ba=au;bb=aa;bc=az;bd=+g[b+4>>2];be=+g[b+8>>2];bf=+g[b+12>>2];bg=aq;bh=am;bi=ab;Z=7}else{aW=0.0;aX=+g[c+4>>2];aY=+g[c+8>>2];aZ=+g[b+556>>2];a_=+g[b+372>>2];a$=+g[b+560>>2];a0=+g[b+376>>2];a1=+g[b+564>>2];a2=+g[b+380>>2];Z=6}}while(0);if((Z|0)==6){ab=+g[b+4>>2];am=e-ab;aq=+g[b+8>>2];az=aX-aq;aa=+g[b+12>>2];au=aY-aa;ak=aZ-a_;aB=a$-a0;aA=a1-a2;av=az*aA-au*aB;ao=au*ak-am*aA;aA=am*aB-az*ak;ak=aA*aA+(av*av+ao*ao);ao=+g[b+188>>2];av=+g[b+192>>2];aA=+g[b+196>>2];if((l|0)==2){bj=0.0;bk=ak;bl=aW;bm=ab;bn=aX;bo=aq;bp=aY;bq=aa;br=a_;bs=a0;bt=a2;bu=ao;bv=av;bw=aA}else{a3=ak;a4=aW;a5=aX;a6=aY;a7=aZ;a8=a$;a9=a1;ba=a_;bb=a0;bc=a2;bd=ab;be=aq;bf=aa;bg=ao;bh=av;bi=aA;Z=7}}do{if((Z|0)==7){aA=e-bd;av=a5-be;ao=a6-bf;aa=a7-bg;aq=a8-bh;ab=a9-bi;a2=av*ab-ao*aq;a0=ao*aa-aA*ab;ab=aA*aq-av*aa;aa=ab*ab+(a2*a2+a0*a0);if(k){aC=0.0;aD=aa;aE=a3;aF=a4}else{bj=aa;bk=a3;bl=a4;bm=bd;bn=a5;bo=be;bp=a6;bq=bf;br=ba;bs=bb;bt=bc;bu=bg;bv=bh;bw=bi;break}aG=+V(+aF);aH=+V(+aE);aI=+V(+aD);aJ=+V(+aC);aK=aG>-999999984306749400.0;aL=aK^1;aM=aL<<31>>31;aN=aK?aG:-999999984306749400.0;aO=aH>aN;aP=aO?1:aM;aQ=aO?aH:aN;aR=aI>aQ;aS=aR?2:aP;aT=aR?aI:aQ;aU=aJ>aT;aV=aU?3:aS;return aV|0}}while(0);bi=e-bm;bm=bn-bo;bo=bp-bq;bq=br-bu;bu=bs-bv;bv=bt-bw;bw=bm*bv-bo*bu;bt=bo*bq-bi*bv;bv=bi*bu-bm*bq;aC=bv*bv+(bw*bw+bt*bt);aD=bj;aE=bk;aF=bl;aG=+V(+aF);aH=+V(+aE);aI=+V(+aD);aJ=+V(+aC);aK=aG>-999999984306749400.0;aL=aK^1;aM=aL<<31>>31;aN=aK?aG:-999999984306749400.0;aO=aH>aN;aP=aO?1:aM;aQ=aO?aH:aN;aR=aI>aQ;aS=aR?2:aP;aT=aR?aI:aQ;aU=aJ>aT;aV=aU?3:aS;return aV|0}return 0}function vU(a,b){a=a|0;b=b|0;var d=0.0,e=0,f=0,h=0.0,i=0.0,j=0.0,k=0,l=0.0,m=0.0,n=0.0,o=0.0,p=0,q=0,r=0;d=+g[a+752>>2];e=c[a+748>>2]|0;if((e|0)<=0){f=-1;return f|0}h=+g[b>>2];i=+g[b+4>>2];j=+g[b+8>>2];b=0;k=-1;l=d*d;while(1){d=+g[a+4+(b*184|0)>>2]-h;m=+g[a+4+(b*184|0)+4>>2]-i;n=+g[a+4+(b*184|0)+8>>2]-j;o=d*d+m*m+n*n;p=o<l;q=p?b:k;r=b+1|0;if((r|0)<(e|0)){b=r;k=q;l=p?o:l}else{f=q;break}}return f|0}function vV(a){a=a|0;return+(+g[a+752>>2])}function vW(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0;d=a+748|0;e=c[d>>2]|0;do{if((e|0)==4){f=vT(a,b)|0;g=a+4+(f*184|0)+112|0;h=c[g>>2]|0;if((h|0)==0){i=f;break}j=c[12482]|0;if((j|0)==0){i=f;break}g3[j&511](h)|0;c[g>>2]=0;i=f}else{c[d>>2]=e+1;i=e}}while(0);e=(i|0)<0?0:i;K2(a+4+(e*184|0)|0,b|0,184)|0;return e|0}function vX(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0.0,G=0.0,H=0.0,I=0.0,J=0.0,K=0.0,L=0.0,M=0.0,N=0.0,O=0,P=0;f=b+748|0;h=c[f>>2]|0;if((h|0)<=0){return}i=d|0;j=d+4|0;k=d+8|0;l=d+16|0;m=d+20|0;n=d+24|0;o=d+32|0;p=d+36|0;q=d+40|0;r=d+48|0;s=d+52|0;t=d+56|0;d=e|0;u=e+4|0;v=e+8|0;w=e+16|0;x=e+20|0;y=e+24|0;z=e+32|0;A=e+36|0;B=e+40|0;C=e+48|0;D=e+52|0;E=e+56|0;e=h;do{e=e-1|0;F=+g[b+4+(e*184|0)>>2];G=+g[b+4+(e*184|0)+4>>2];H=+g[b+4+(e*184|0)+8>>2];I=F*+g[i>>2]+G*+g[j>>2]+H*+g[k>>2]+ +g[r>>2];J=F*+g[l>>2]+G*+g[m>>2]+H*+g[n>>2]+ +g[s>>2];K=F*+g[o>>2]+G*+g[p>>2]+H*+g[q>>2]+ +g[t>>2];g[b+4+(e*184|0)+48>>2]=I;g[b+4+(e*184|0)+52>>2]=J;g[b+4+(e*184|0)+56>>2]=K;g[b+4+(e*184|0)+60>>2]=0.0;H=+g[b+4+(e*184|0)+16>>2];G=+g[b+4+(e*184|0)+20>>2];F=+g[b+4+(e*184|0)+24>>2];L=H*+g[d>>2]+G*+g[u>>2]+F*+g[v>>2]+ +g[C>>2];M=H*+g[w>>2]+G*+g[x>>2]+F*+g[y>>2]+ +g[D>>2];N=H*+g[z>>2]+G*+g[A>>2]+F*+g[B>>2]+ +g[E>>2];g[b+4+(e*184|0)+32>>2]=L;g[b+4+(e*184|0)+36>>2]=M;g[b+4+(e*184|0)+40>>2]=N;g[b+4+(e*184|0)+44>>2]=0.0;g[b+4+(e*184|0)+80>>2]=(I-L)*+g[b+4+(e*184|0)+64>>2]+(J-M)*+g[b+4+(e*184|0)+68>>2]+(K-N)*+g[b+4+(e*184|0)+72>>2];h=b+4+(e*184|0)+148|0;c[h>>2]=(c[h>>2]|0)+1;}while((e|0)>0);e=c[f>>2]|0;if((e|0)<=0){return}E=b+752|0;B=b+740|0;A=b+744|0;z=e;do{z=z-1|0;e=b+4+(z*184|0)|0;N=+g[b+4+(z*184|0)+80>>2];K=+g[E>>2];do{if(N>K){D=b+4+(z*184|0)+112|0;y=c[D>>2]|0;do{if((y|0)!=0){x=c[12482]|0;if((x|0)==0){break}g3[x&511](y)|0;c[D>>2]=0}}while(0);D=c[f>>2]|0;y=D-1|0;if((y|0)==(z|0)){O=D}else{K2(e|0,b+4+(y*184|0)|0,184)|0;c[b+4+(y*184|0)+112>>2]=0;g[b+4+(y*184|0)+120>>2]=0.0;a[b+4+(y*184|0)+116|0]=0;g[b+4+(y*184|0)+124>>2]=0.0;g[b+4+(y*184|0)+128>>2]=0.0;c[b+4+(y*184|0)+148>>2]=0;O=c[f>>2]|0}c[f>>2]=O-1}else{M=+g[b+4+(z*184|0)+32>>2]-(+g[b+4+(z*184|0)+48>>2]- +g[b+4+(z*184|0)+64>>2]*N);J=+g[b+4+(z*184|0)+36>>2]-(+g[b+4+(z*184|0)+52>>2]-N*+g[b+4+(z*184|0)+68>>2]);L=+g[b+4+(z*184|0)+40>>2]-(+g[b+4+(z*184|0)+56>>2]-N*+g[b+4+(z*184|0)+72>>2]);if(M*M+J*J+L*L<=K*K){y=c[12480]|0;if((y|0)==0){break}hd[y&127](e,c[B>>2]|0,c[A>>2]|0)|0;break}y=b+4+(z*184|0)+112|0;D=c[y>>2]|0;do{if((D|0)!=0){x=c[12482]|0;if((x|0)==0){break}g3[x&511](D)|0;c[y>>2]=0}}while(0);y=c[f>>2]|0;D=y-1|0;if((D|0)==(z|0)){P=y}else{K2(e|0,b+4+(D*184|0)|0,184)|0;c[b+4+(D*184|0)+112>>2]=0;g[b+4+(D*184|0)+120>>2]=0.0;a[b+4+(D*184|0)+116|0]=0;g[b+4+(D*184|0)+124>>2]=0.0;g[b+4+(D*184|0)+128>>2]=0.0;c[b+4+(D*184|0)+148>>2]=0;P=c[f>>2]|0}c[f>>2]=P-1}}while(0);}while((z|0)>0);return}function vY(b,d,e,f){b=b|0;d=d|0;e=e|0;f=+f;var h=0,i=0,j=0,k=0.0,l=0.0,m=0.0,n=0,o=0,p=0.0,q=0.0,r=0.0,s=0,t=0,u=0,v=0.0,w=0.0,x=0.0,y=0.0,z=0,A=0.0,B=0.0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0.0,L=0.0,M=0.0,N=0.0,O=0,P=0,Q=0,R=0,S=0.0,T=0.0,U=0.0,V=0,W=0,X=0,Y=0,Z=0,_=0;h=c[b+4>>2]|0;if((h|0)<2){return}i=h-1|0;j=b+12|0;b=c[j>>2]|0;k=+g[b+(i<<4)>>2];l=+g[b+(i<<4)+4>>2];m=+g[b+(i<<4)+8>>2];i=e|0;n=e+4|0;o=e+8|0;p=+g[n>>2];q=+g[i>>2];r=+g[o>>2];e=d+4|0;s=d+8|0;t=d+12|0;u=d+16|0;v=m;w=l;x=k;y=k*q+l*p+m*r+f;d=0;z=b;m=q;q=p;p=r;while(1){r=+g[z+(d<<4)>>2];l=+g[z+(d<<4)+4>>2];k=+g[z+(d<<4)+8>>2];A=+g[z+(d<<4)+12>>2];B=r*m+l*q+k*p+f;b=B<0.0;do{if(y<0.0){if(b){C=c[e>>2]|0;do{if((C|0)==(c[s>>2]|0)){D=(C|0)==0?1:C<<1;if((C|0)>=(D|0)){E=C;break}if((D|0)==0){F=0;G=C}else{H=zv(D<<4,16)|0;F=H;G=c[e>>2]|0}if((G|0)>0){H=0;do{I=F+(H<<4)|0;J=(c[t>>2]|0)+(H<<4)|0;c[I>>2]=c[J>>2];c[I+4>>2]=c[J+4>>2];c[I+8>>2]=c[J+8>>2];c[I+12>>2]=c[J+12>>2];H=H+1|0;}while((H|0)<(G|0))}H=c[t>>2]|0;if((H|0)!=0){if((a[u]&1)!=0){zw(H)}c[t>>2]=0}a[u]=1;c[t>>2]=F;c[s>>2]=D;E=c[e>>2]|0}else{E=C}}while(0);C=c[t>>2]|0;g[C+(E<<4)>>2]=r;g[C+(E<<4)+4>>2]=l;g[C+(E<<4)+8>>2]=k;g[C+(E<<4)+12>>2]=A;c[e>>2]=(c[e>>2]|0)+1;break}else{K=y/(y-B);L=x+(r-x)*K;M=w+(l-w)*K;N=v+(k-v)*K;C=c[e>>2]|0;do{if((C|0)==(c[s>>2]|0)){H=(C|0)==0?1:C<<1;if((C|0)>=(H|0)){O=C;break}if((H|0)==0){P=0;Q=C}else{J=zv(H<<4,16)|0;P=J;Q=c[e>>2]|0}if((Q|0)>0){J=0;do{I=P+(J<<4)|0;R=(c[t>>2]|0)+(J<<4)|0;c[I>>2]=c[R>>2];c[I+4>>2]=c[R+4>>2];c[I+8>>2]=c[R+8>>2];c[I+12>>2]=c[R+12>>2];J=J+1|0;}while((J|0)<(Q|0))}J=c[t>>2]|0;if((J|0)!=0){if((a[u]&1)!=0){zw(J)}c[t>>2]=0}a[u]=1;c[t>>2]=P;c[s>>2]=H;O=c[e>>2]|0}else{O=C}}while(0);C=c[t>>2]|0;g[C+(O<<4)>>2]=L;g[C+(O<<4)+4>>2]=M;g[C+(O<<4)+8>>2]=N;g[C+(O<<4)+12>>2]=0.0;c[e>>2]=(c[e>>2]|0)+1;break}}else{if(!b){break}K=y/(y-B);S=x+(r-x)*K;T=w+(l-w)*K;U=v+(k-v)*K;C=c[e>>2]|0;do{if((C|0)==(c[s>>2]|0)){J=(C|0)==0?1:C<<1;if((C|0)>=(J|0)){V=C;break}if((J|0)==0){W=0;X=C}else{D=zv(J<<4,16)|0;W=D;X=c[e>>2]|0}if((X|0)>0){D=0;do{R=W+(D<<4)|0;I=(c[t>>2]|0)+(D<<4)|0;c[R>>2]=c[I>>2];c[R+4>>2]=c[I+4>>2];c[R+8>>2]=c[I+8>>2];c[R+12>>2]=c[I+12>>2];D=D+1|0;}while((D|0)<(X|0))}D=c[t>>2]|0;if((D|0)!=0){if((a[u]&1)!=0){zw(D)}c[t>>2]=0}a[u]=1;c[t>>2]=W;c[s>>2]=J;V=c[e>>2]|0}else{V=C}}while(0);C=c[t>>2]|0;g[C+(V<<4)>>2]=S;g[C+(V<<4)+4>>2]=T;g[C+(V<<4)+8>>2]=U;g[C+(V<<4)+12>>2]=0.0;C=(c[e>>2]|0)+1|0;c[e>>2]=C;do{if((C|0)==(c[s>>2]|0)){D=(C|0)==0?1:C<<1;if((C|0)>=(D|0)){Y=C;break}if((D|0)==0){Z=0;_=C}else{H=zv(D<<4,16)|0;Z=H;_=c[e>>2]|0}if((_|0)>0){H=0;do{I=Z+(H<<4)|0;R=(c[t>>2]|0)+(H<<4)|0;c[I>>2]=c[R>>2];c[I+4>>2]=c[R+4>>2];c[I+8>>2]=c[R+8>>2];c[I+12>>2]=c[R+12>>2];H=H+1|0;}while((H|0)<(_|0))}H=c[t>>2]|0;if((H|0)!=0){if((a[u]&1)!=0){zw(H)}c[t>>2]=0}a[u]=1;c[t>>2]=Z;c[s>>2]=D;Y=c[e>>2]|0}else{Y=C}}while(0);C=c[t>>2]|0;g[C+(Y<<4)>>2]=r;g[C+(Y<<4)+4>>2]=l;g[C+(Y<<4)+8>>2]=k;g[C+(Y<<4)+12>>2]=A;c[e>>2]=(c[e>>2]|0)+1}}while(0);b=d+1|0;if((b|0)>=(h|0)){break}v=k;w=l;x=r;y=B;d=b;z=c[j>>2]|0;m=+g[i>>2];q=+g[n>>2];p=+g[o>>2]}return}function vZ(a,b,c,d,e,f,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;h=+h;var i=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0,I=0,J=0.0,K=0,L=0.0,M=0,N=0.0,O=0,P=0.0,Q=0.0,R=0.0,S=0.0,T=0,U=0.0,V=0;i=+g[d>>2];j=+g[d+4>>2];k=+g[d+8>>2];l=+g[c>>2]*i+ +g[c+4>>2]*j+ +g[c+8>>2]*k;m=i*+g[a>>2]+j*+g[a+16>>2]+k*+g[a+32>>2];n=i*+g[a+4>>2]+j*+g[a+20>>2]+k*+g[a+36>>2];o=i*+g[a+8>>2]+j*+g[a+24>>2]+k*+g[a+40>>2];p=i*+g[b>>2]+j*+g[b+16>>2]+k*+g[b+32>>2];q=i*+g[b+4>>2]+j*+g[b+20>>2]+k*+g[b+36>>2];r=i*+g[b+8>>2]+j*+g[b+24>>2]+k*+g[b+40>>2];k=+g[e+80>>2];if(m<0.0){s=-0.0-k}else{s=k}k=+g[e+84>>2];if(n<0.0){t=-0.0-k}else{t=k}k=+g[e+88>>2];if(o<0.0){u=-0.0-k}else{u=k}k=+g[f+80>>2];if(p<0.0){v=-0.0-k}else{v=k}k=+g[f+84>>2];if(q<0.0){w=-0.0-k}else{w=k}k=+g[f+88>>2];if(r>=0.0){x=k;y=m*s;z=n*t;A=y+z;B=o*u;C=A+B;D=p*v;E=q*w;F=D+E;G=r*x;H=F+G;I=e+96|0;J=+g[I>>2];K=C>J;L=K?C:J;M=f+96|0;N=+g[M>>2];O=H>N;P=O?H:N;Q=L+P;R=l+Q;S=Q-l;T=R<S;U=T?R:S;V=U<=h;return V|0}x=-0.0-k;y=m*s;z=n*t;A=y+z;B=o*u;C=A+B;D=p*v;E=q*w;F=D+E;G=r*x;H=F+G;I=e+96|0;J=+g[I>>2];K=C>J;L=K?C:J;M=f+96|0;N=+g[M>>2];O=H>N;P=O?H:N;Q=L+P;R=l+Q;S=Q-l;T=R<S;U=T?R:S;V=U<=h;return V|0}function v_(b,d,e,f,h,j){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,X=0,Y=0.0,Z=0,_=0.0,$=0.0,aa=0,ab=0.0,ac=0.0,ad=0,ae=0.0,af=0,ag=0.0,ah=0,ai=0.0,aj=0,ak=0.0,al=0,am=0.0,an=0,ao=0.0,ap=0,aq=0.0,ar=0.0,as=0,at=0.0,au=0,av=0.0,aw=0,ax=0,ay=0,az=0,aA=0,aB=0,aC=0,aD=0.0,aE=0.0,aF=0.0,aG=0,aH=0,aI=0,aJ=0,aK=0,aL=0,aM=0,aN=0,aO=0,aP=0.0,aQ=0.0,aR=0.0,aS=0.0,aT=0.0,aU=0,aV=0.0,aW=0.0,aX=0.0,aY=0.0,aZ=0.0,a_=0.0,a$=0,a0=0.0,a1=0.0,a2=0,a3=0.0,a4=0,a5=0.0,a6=0.0,a7=0.0,a8=0,a9=0.0,ba=0.0,bb=0.0,bc=0.0,bd=0.0,be=0.0,bf=0.0,bg=0.0,bh=0.0,bi=0.0,bj=0.0,bk=0,bl=0.0,bm=0,bn=0.0,bo=0.0,bp=0.0,bq=0.0,br=0.0,bs=0.0,bt=0.0,bu=0,bv=0,bw=0.0,bx=0.0,by=0.0,bz=0.0,bA=0.0,bB=0.0,bC=0.0,bD=0.0,bE=0.0,bF=0.0,bG=0.0,bH=0.0,bI=0.0,bJ=0.0,bK=0.0,bL=0.0,bM=0.0,bN=0.0,bO=0.0,bP=0.0,bQ=0.0,bR=0.0,bS=0.0,bT=0,bU=0.0,bV=0.0,bW=0.0,bX=0.0,bY=0.0,bZ=0.0,b_=0.0,b$=0.0,b0=0.0,b1=0,b2=0.0,b3=0.0,b4=0.0,b5=0.0,b6=0.0,b7=0.0,b8=0.0,b9=0.0,ca=0.0,cb=0.0,cc=0.0,cd=0.0,ce=0.0,cf=0.0,cg=0.0,ch=0.0,ci=0.0,cj=0.0,ck=0.0,cl=0,cm=0,cn=0.0,co=0,cp=0,cq=0.0,cr=0.0,cs=0.0,ct=0.0,cu=0.0,cv=0.0,cw=0.0,cx=0.0,cy=0.0,cz=0.0,cA=0.0,cB=0.0,cC=0,cD=0;k=i;i=i+480|0;l=k|0;m=k+8|0;n=k+16|0;o=k+24|0;p=k+32|0;q=k+48|0;r=k+64|0;s=k+80|0;t=k+96|0;u=k+104|0;v=k+112|0;w=k+120|0;x=k+128|0;y=k+144|0;z=k+160|0;A=k+176|0;B=k+192|0;C=k+200|0;D=k+208|0;E=k+216|0;F=k+224|0;G=k+240|0;H=k+256|0;I=k+272|0;J=k+288|0;K=k+304|0;L=k+320|0;M=k+336|0;N=k+352|0;O=k+368|0;P=k+384|0;Q=k+400|0;R=k+408|0;S=k+416|0;T=k+432|0;U=k+448|0;X=k+464|0;c[13828]=(c[13828]|0)+1;Y=+g[b+64>>2];Z=e|0;_=+g[Z>>2];$=+g[b+68>>2];aa=e+4|0;ab=+g[aa>>2];ac=+g[b+72>>2];ad=e+8|0;ae=+g[ad>>2];af=e+16|0;ag=+g[af>>2];ah=e+20|0;ai=+g[ah>>2];aj=e+24|0;ak=+g[aj>>2];al=e+32|0;am=+g[al>>2];an=e+36|0;ao=+g[an>>2];ap=e+40|0;aq=+g[ap>>2];ar=+g[d+64>>2];as=f|0;at=+g[d+68>>2];au=f+4|0;av=+g[d+72>>2];aw=f+8|0;ax=f+16|0;ay=f+20|0;az=f+24|0;aA=f+32|0;aB=f+36|0;aC=f+40|0;aD=Y*_+$*ab+ac*ae+ +g[e+48>>2]-(ar*+g[as>>2]+at*+g[au>>2]+av*+g[aw>>2]+ +g[f+48>>2]);aE=Y*ag+$*ai+ac*ak+ +g[e+52>>2]-(ar*+g[ax>>2]+at*+g[ay>>2]+av*+g[az>>2]+ +g[f+52>>2]);aF=Y*am+$*ao+ac*aq+ +g[e+56>>2]-(ar*+g[aA>>2]+at*+g[aB>>2]+av*+g[aC>>2]+ +g[f+56>>2]);g[J>>2]=aD;g[J+4>>2]=aE;g[J+8>>2]=aF;g[J+12>>2]=0.0;aG=c[b+28>>2]|0;L1:do{if((aG|0)>0){aH=b+36|0;aI=K|0;aJ=K+4|0;aK=K+8|0;aL=K+12|0;aM=h;aN=K;av=0.0;aO=0;at=3.4028234663852886e+38;ar=_;ac=ab;$=ae;Y=ag;aP=ai;aQ=ak;aR=am;aS=ao;aT=aq;L3:while(1){aU=c[aH>>2]|0;aV=+g[aU+(aO*36|0)+20>>2];aW=+g[aU+(aO*36|0)+24>>2];aX=+g[aU+(aO*36|0)+28>>2];aY=aV*ar+aW*ac+aX*$;aZ=aV*Y+aW*aP+aX*aQ;a_=aV*aR+aW*aS+aX*aT;g[aI>>2]=aY;g[aJ>>2]=aZ;g[aK>>2]=a_;g[aL>>2]=0.0;if(aD*aY+aE*aZ+aF*a_<0.0){g[aI>>2]=aY*-1.0;g[aJ>>2]=aZ*-1.0;g[aK>>2]=a_*-1.0}c[12476]=(c[12476]|0)+1;if((a[2144]&1)==0){a$=7}else{if(vZ(e,f,J,K,b,d,at)|0){a$=7}else{a0=at;a1=av}}do{if((a$|0)==7){a$=0;c[12488]=(c[12488]|0)+1;nq(b,e,K,l,m,p,q);nq(d,f,K,n,o,r,s);a_=+g[m>>2];aZ=+g[n>>2];do{if(a_<aZ){a2=0;a3=av}else{aY=+g[o>>2];aX=+g[l>>2];if(aY<aX){a2=0;a3=av;break}aW=a_-aZ;aV=aY-aX;a2=1;a3=aW<aV?aW:aV}}while(0);if(!a2){a4=0;break L3}if(a3>=at){a0=at;a1=a3;break}c[aM>>2]=c[aN>>2];c[aM+4>>2]=c[aN+4>>2];c[aM+8>>2]=c[aN+8>>2];c[aM+12>>2]=c[aN+12>>2];a0=a3;a1=a3}}while(0);aU=aO+1|0;if((aU|0)>=(aG|0)){a5=a0;break L1}av=a1;aO=aU;at=a0;ar=+g[Z>>2];ac=+g[aa>>2];$=+g[ad>>2];Y=+g[af>>2];aP=+g[ah>>2];aQ=+g[aj>>2];aR=+g[al>>2];aS=+g[an>>2];aT=+g[ap>>2]}i=k;return a4|0}else{a5=3.4028234663852886e+38}}while(0);aG=c[d+28>>2]|0;L22:do{if((aG|0)>0){a2=d+36|0;l=L|0;o=L+4|0;n=L+8|0;m=L+12|0;s=h;r=L;a0=0.0;K=0;a1=a5;L24:while(1){q=c[a2>>2]|0;a3=+g[q+(K*36|0)+20>>2];aq=+g[q+(K*36|0)+24>>2];ao=+g[q+(K*36|0)+28>>2];am=a3*+g[as>>2]+aq*+g[au>>2]+ao*+g[aw>>2];ak=a3*+g[ax>>2]+aq*+g[ay>>2]+ao*+g[az>>2];ai=a3*+g[aA>>2]+aq*+g[aB>>2]+ao*+g[aC>>2];g[l>>2]=am;g[o>>2]=ak;g[n>>2]=ai;g[m>>2]=0.0;if(aD*am+aE*ak+aF*ai<0.0){g[l>>2]=am*-1.0;g[o>>2]=ak*-1.0;g[n>>2]=ai*-1.0}c[12476]=(c[12476]|0)+1;if((a[2144]&1)==0){a$=23}else{if(vZ(e,f,J,L,b,d,a1)|0){a$=23}else{a6=a1;a7=a0}}do{if((a$|0)==23){a$=0;c[12488]=(c[12488]|0)+1;nq(b,e,L,t,u,x,y);nq(d,f,L,v,w,z,A);ai=+g[u>>2];ak=+g[v>>2];do{if(ai<ak){a8=0;a9=a0}else{am=+g[w>>2];ao=+g[t>>2];if(am<ao){a8=0;a9=a0;break}aq=ai-ak;a3=am-ao;a8=1;a9=aq<a3?aq:a3}}while(0);if(!a8){a4=0;break L24}if(a9>=a1){a6=a1;a7=a9;break}c[s>>2]=c[r>>2];c[s+4>>2]=c[r+4>>2];c[s+8>>2]=c[r+8>>2];c[s+12>>2]=c[r+12>>2];a6=a9;a7=a9}}while(0);q=K+1|0;if((q|0)<(aG|0)){a0=a7;K=q;a1=a6}else{ba=a6;break L22}}i=k;return a4|0}else{ba=a5}}while(0);aG=b+48|0;a8=c[aG>>2]|0;L42:do{if((a8|0)>0){t=b+56|0;w=d+48|0;v=d+56|0;u=M|0;A=M+4|0;z=M+8|0;L=M+12|0;y=M;x=h;K=G|0;r=G+4|0;s=G+8|0;n=H|0;o=H+4|0;l=H+8|0;m=F|0;a2=F+4|0;q=F+8|0;p=I|0;aO=I+4|0;aN=I+8|0;a5=0.0;a6=0.0;a7=0.0;a9=0.0;a1=0.0;a0=0.0;ak=0.0;ai=0.0;a3=0.0;aq=0.0;ao=0.0;am=0.0;ag=0.0;ae=0.0;ab=0.0;_=0.0;aT=0.0;aS=0.0;aR=0.0;aM=-1;aK=-1;aJ=0;aQ=ba;aI=c[w>>2]|0;aL=a8;L44:while(1){aH=c[t>>2]|0;aP=+g[aH+(aJ<<4)>>2];Y=+g[aH+(aJ<<4)+4>>2];$=+g[aH+(aJ<<4)+8>>2];ac=aP*+g[Z>>2]+Y*+g[aa>>2]+$*+g[ad>>2];ar=aP*+g[af>>2]+Y*+g[ah>>2]+$*+g[aj>>2];at=aP*+g[al>>2]+Y*+g[an>>2]+$*+g[ap>>2];if((aI|0)>0){$=a5;Y=a6;aP=a7;av=a9;aZ=a1;a_=a0;aV=ak;aW=ai;aX=a3;aY=aq;bb=ao;bc=am;bd=ag;be=ae;bf=ab;bg=_;bh=aT;bi=aS;bj=aR;aH=aM;aU=aK;bk=0;bl=aQ;while(1){bm=c[v>>2]|0;bn=+g[bm+(bk<<4)>>2];bo=+g[bm+(bk<<4)+4>>2];bp=+g[bm+(bk<<4)+8>>2];bq=bn*+g[as>>2]+bo*+g[au>>2]+bp*+g[aw>>2];br=bn*+g[ax>>2]+bo*+g[ay>>2]+bp*+g[az>>2];bs=bn*+g[aA>>2]+bo*+g[aB>>2]+bp*+g[aC>>2];bp=ar*bs-at*br;bo=at*bq-ac*bs;bn=ac*br-ar*bq;g[u>>2]=bp;g[A>>2]=bo;g[z>>2]=bn;g[L>>2]=0.0;do{if(+V(+bp)>1.0e-6){a$=34}else{if(+V(+bo)>1.0e-6){a$=34;break}if(+V(+bn)>1.0e-6){a$=34}else{bt=bl;bu=aU;bv=aH;bw=bj;bx=bi;by=bh;bz=bg;bA=bf;bB=be;bC=bd;bD=bc;bE=bb;bF=aY;bG=aX;bH=aW;bI=aV;bJ=a_;bK=aZ;bL=av;bM=aP;bN=Y;bO=$}}}while(0);do{if((a$|0)==34){a$=0;bP=1.0/+W(bp*bp+bo*bo+bn*bn);bQ=bp*bP;g[u>>2]=bQ;bR=bo*bP;g[A>>2]=bR;bS=bn*bP;g[z>>2]=bS;if(aD*bQ+aE*bR+aF*bS<0.0){g[u>>2]=bQ*-1.0;g[A>>2]=bR*-1.0;g[z>>2]=bS*-1.0}c[12476]=(c[12476]|0)+1;if((a[2144]&1)!=0){if(!(vZ(e,f,J,M,b,d,bl)|0)){bt=bl;bu=aU;bv=aH;bw=bj;bx=bi;by=bh;bz=bg;bA=bf;bB=be;bC=bd;bD=bc;bE=bb;bF=aY;bG=aX;bH=aW;bI=aV;bJ=a_;bK=aZ;bL=av;bM=aP;bN=Y;bO=$;break}}c[12488]=(c[12488]|0)+1;nq(b,e,M,B,C,F,G);nq(d,f,M,D,E,H,I);bS=+g[C>>2];bR=+g[D>>2];do{if(bS<bR){bT=0;bU=bj;bV=bf;bW=be;bX=bd;bY=aX;bZ=aW;b_=aV}else{bQ=+g[E>>2];bP=+g[B>>2];if(bQ<bP){bT=0;bU=bj;bV=bf;bW=be;bX=bd;bY=aX;bZ=aW;b_=aV;break}b$=bS-bR;b0=bQ-bP;if(b$<b0){bT=1;bU=b$;bV=+g[n>>2];bW=+g[o>>2];bX=+g[l>>2];bY=+g[K>>2];bZ=+g[r>>2];b_=+g[s>>2];break}else{bT=1;bU=b0;bV=+g[p>>2];bW=+g[aO>>2];bX=+g[aN>>2];bY=+g[m>>2];bZ=+g[a2>>2];b_=+g[q>>2];break}}}while(0);if(!bT){a4=0;break L44}if(bU>=bl){bt=bl;bu=aU;bv=aH;bw=bU;bx=bi;by=bh;bz=bg;bA=bV;bB=bW;bC=bX;bD=bc;bE=bb;bF=aY;bG=bY;bH=bZ;bI=b_;bJ=a_;bK=aZ;bL=av;bM=aP;bN=Y;bO=$;break}c[x>>2]=c[y>>2];c[x+4>>2]=c[y+4>>2];c[x+8>>2]=c[y+8>>2];c[x+12>>2]=c[y+12>>2];bt=bU;bu=bk;bv=aJ;bw=bU;bx=bV;by=bW;bz=bX;bA=bV;bB=bW;bC=bX;bD=bY;bE=bZ;bF=b_;bG=bY;bH=bZ;bI=b_;bJ=bq;bK=br;bL=bs;bM=ac;bN=ar;bO=at}}while(0);bm=bk+1|0;b1=c[w>>2]|0;if((bm|0)<(b1|0)){$=bO;Y=bN;aP=bM;av=bL;aZ=bK;a_=bJ;aV=bI;aW=bH;aX=bG;aY=bF;bb=bE;bc=bD;bd=bC;be=bB;bf=bA;bg=bz;bh=by;bi=bx;bj=bw;aH=bv;aU=bu;bk=bm;bl=bt}else{break}}b2=bO;b3=bN;b4=bM;b5=bL;b6=bK;b7=bJ;b8=bI;b9=bH;ca=bG;cb=bF;cc=bE;cd=bD;ce=bC;cf=bB;cg=bA;ch=bz;ci=by;cj=bx;ck=bw;cl=bv;cm=bu;cn=bt;co=b1;cp=c[aG>>2]|0}else{b2=a5;b3=a6;b4=a7;b5=a9;b6=a1;b7=a0;b8=ak;b9=ai;ca=a3;cb=aq;cc=ao;cd=am;ce=ag;cf=ae;cg=ab;ch=_;ci=aT;cj=aS;ck=aR;cl=aM;cm=aK;cn=aQ;co=aI;cp=aL}bk=aJ+1|0;if((bk|0)<(cp|0)){a5=b2;a6=b3;a7=b4;a9=b5;a1=b6;a0=b7;ak=b8;ai=b9;a3=ca;aq=cb;ao=cc;am=cd;ag=ce;ae=cf;ab=cg;_=ch;aT=ci;aS=cj;aR=ck;aM=cl;aK=cm;aJ=bk;aQ=cn;aI=co;aL=cp}else{cq=b2;cr=b3;cs=b4;ct=b5;cu=b6;cv=b7;cw=cb;cx=cc;cy=cd;cz=ch;cA=ci;cB=cj;cC=cl;cD=cm;break L42}}i=k;return a4|0}else{cq=0.0;cr=0.0;cs=0.0;ct=0.0;cu=0.0;cv=0.0;cw=0.0;cx=0.0;cy=0.0;cz=0.0;cA=0.0;cB=0.0;cC=-1;cD=-1}}while(0);do{if((cD|cC|0)>-1){g[S>>2]=cB-cy;g[S+4>>2]=cA-cx;g[S+8>>2]=cz-cw;g[S+12>>2]=0.0;g[T>>2]=cs;g[T+4>>2]=cr;g[T+8>>2]=cq;g[T+12>>2]=0.0;g[U>>2]=cv;g[U+4>>2]=cu;g[U+8>>2]=ct;g[U+12>>2]=0.0;v$(N,O,P,Q,R,S,T,1.0000000150474662e+30,U,1.0000000150474662e+30);cm=N|0;cj=+g[cm>>2];cl=N+4|0;ci=+g[cl>>2];cp=N+8|0;ch=+g[cp>>2];cd=cj*cj+ci*ci+ch*ch;if(cd<=1.1920928955078125e-7){break}cc=+W(cd);cd=1.0/cc;cb=cj*cd;g[cm>>2]=cb;cj=cd*ci;g[cl>>2]=cj;ci=cd*ch;g[cp>>2]=ci;if(cb*aD+cj*aE+ci*aF<0.0){g[cm>>2]=cb*-1.0;g[cl>>2]=cj*-1.0;g[cp>>2]=ci*-1.0}ci=cA+ +g[P+4>>2];cj=cz+ +g[P+8>>2];g[X>>2]=cB+ +g[P>>2];g[X+4>>2]=ci;g[X+8>>2]=cj;g[X+12>>2]=0.0;ha[c[(c[j>>2]|0)+16>>2]&31](j,N,X,-0.0-cc)}}while(0);X=h|0;cB=+g[X>>2];N=h+4|0;cz=+g[N>>2];j=h+8|0;cA=+g[j>>2];if(aD*cB+aE*cz+aF*cA>=0.0){a4=1;i=k;return a4|0}g[X>>2]=-0.0-cB;g[N>>2]=-0.0-cz;g[j>>2]=-0.0-cA;g[h+12>>2]=0.0;a4=1;i=k;return a4|0}function v$(a,b,c,d,e,f,h,i,j,k){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;h=h|0;i=+i;j=j|0;k=+k;var l=0,m=0.0,n=0,o=0.0,p=0,q=0.0,r=0,s=0.0,t=0,u=0.0,v=0.0,w=0.0,x=0.0,y=0,z=0.0,A=0,B=0.0,C=0.0,D=0.0,E=0.0;l=h|0;m=+g[l>>2];n=j|0;o=+g[n>>2];p=h+4|0;q=+g[p>>2];r=j+4|0;s=+g[r>>2];t=h+8|0;u=+g[t>>2];h=j+8|0;v=+g[h>>2];w=m*o+q*s+u*v;j=f|0;x=+g[j>>2];y=f+4|0;z=+g[y>>2];A=f+8|0;B=+g[A>>2];C=m*x+q*z+u*B;u=o*x+s*z+v*B;B=1.0-w*w;do{if(B==0.0){g[d>>2]=0.0;D=0.0}else{v=(C-w*u)/B;g[d>>2]=v;z=-0.0-i;if(v<z){g[d>>2]=z;D=z;break}if(v<=i){D=v;break}g[d>>2]=i;D=i}}while(0);B=w*D-u;g[e>>2]=B;u=-0.0-k;do{if(B<u){g[e>>2]=u;D=w*u+C;g[d>>2]=D;v=-0.0-i;if(D<v){g[d>>2]=v;E=v;break}if(D<=i){E=D;break}g[d>>2]=i;E=i}else{if(B<=k){E=+g[d>>2];break}g[e>>2]=k;D=w*k+C;g[d>>2]=D;v=-0.0-i;if(D<v){g[d>>2]=v;E=v;break}if(D<=i){E=D;break}g[d>>2]=i;E=i}}while(0);i=E*+g[p>>2];C=E*+g[t>>2];t=b|0;g[t>>2]=+g[l>>2]*E;l=b+4|0;g[l>>2]=i;p=b+8|0;g[p>>2]=C;g[b+12>>2]=0.0;C=+g[e>>2];i=+g[n>>2]*C;E=C*+g[r>>2];k=C*+g[h>>2];g[c>>2]=i;g[c+4>>2]=E;g[c+8>>2]=k;g[c+12>>2]=0.0;C=+g[y>>2]- +g[l>>2]+E;E=+g[A>>2]- +g[p>>2]+k;g[a>>2]=+g[j>>2]- +g[t>>2]+i;g[a+4>>2]=C;g[a+8>>2]=E;g[a+12>>2]=0.0;return}function v0(b,d,e,f,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;h=+h;j=+j;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0,I=0.0,J=0,K=0.0,L=0.0,M=0.0,N=0.0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0,ai=0,aj=0,ak=0,al=0,am=0,an=0,ao=0,ap=0,aq=0,ar=0.0,as=0.0,at=0.0,au=0.0,av=0,aw=0,ax=0,ay=0,az=0,aA=0,aB=0,aC=0,aD=0,aE=0,aF=0,aG=0,aH=0,aI=0,aJ=0,aK=0,aL=0,aM=0,aN=0;l=i;i=i+72|0;m=l|0;n=l+24|0;o=l+40|0;p=l+56|0;q=m+16|0;a[q]=1;r=m+12|0;c[r>>2]=0;c[m+4>>2]=0;s=m+8|0;c[s>>2]=0;t=c[f+4>>2]|0;if((t|0)>0){u=zv(t<<4,16)|0;a[q]=1;c[r>>2]=u;c[s>>2]=t;v=u}else{v=0}u=c[d+28>>2]|0;do{if((u|0)>0){t=c[d+36>>2]|0;w=+g[e>>2];x=+g[e+4>>2];y=+g[e+8>>2];z=+g[e+16>>2];A=+g[e+20>>2];B=+g[e+24>>2];C=+g[e+32>>2];D=+g[e+36>>2];E=+g[e+40>>2];F=+g[b>>2];G=+g[b+4>>2];H=+g[b+8>>2];s=0;I=3.4028234663852886e+38;J=-1;while(1){K=+g[t+(s*36|0)+20>>2];L=+g[t+(s*36|0)+24>>2];M=+g[t+(s*36|0)+28>>2];N=(K*w+L*x+M*y)*F+(K*z+L*A+M*B)*G+(K*C+L*D+M*E)*H;O=N<I;P=O?s:J;Q=s+1|0;if((Q|0)<(u|0)){s=Q;I=O?N:I;J=P}else{break}}if((P|0)<0){R=v;break}J=c[d+36>>2]|0;s=c[J+(P*36|0)+4>>2]|0;if((s|0)>0){t=J+(P*36|0)+12|0;O=d+16|0;Q=e|0;S=e+4|0;T=e+8|0;U=e+16|0;V=e+20|0;W=e+24|0;X=e+32|0;Y=e+36|0;Z=e+40|0;_=J+(P*36|0)+20|0;$=J+(P*36|0)+24|0;aa=J+(P*36|0)+28|0;ab=e+48|0;ac=e+52|0;ad=e+56|0;ae=n|0;af=n+4|0;ag=n+8|0;ah=n+12|0;ai=o;aj=f;ak=m;al=0;while(1){am=c[t>>2]|0;an=c[am+(al<<2)>>2]|0;ao=c[O>>2]|0;ap=al+1|0;aq=c[am+(((ap|0)==(s|0)?0:ap)<<2)>>2]|0;I=+g[ao+(an<<4)>>2];H=I- +g[ao+(aq<<4)>>2];E=+g[ao+(an<<4)+4>>2];D=E- +g[ao+(aq<<4)+4>>2];C=+g[ao+(an<<4)+8>>2];G=C- +g[ao+(aq<<4)+8>>2];B=+g[Q>>2];A=+g[S>>2];z=+g[T>>2];F=H*B+D*A+G*z;y=+g[U>>2];x=+g[V>>2];w=+g[W>>2];N=H*y+D*x+G*w;M=+g[X>>2];L=+g[Y>>2];K=+g[Z>>2];ar=H*M+D*L+G*K;G=+g[_>>2];D=+g[$>>2];H=+g[aa>>2];as=B*G+A*D+z*H;at=y*G+x*D+w*H;au=M*G+L*D+K*H;H=-0.0-(N*au-ar*at);D=-0.0-(ar*as-F*au);au=-0.0-(F*at-N*as);as=-0.0-((I*B+E*A+C*z+ +g[ab>>2])*H+(I*y+E*x+C*w+ +g[ac>>2])*D+(I*M+E*L+C*K+ +g[ad>>2])*au);g[ae>>2]=H;g[af>>2]=D;g[ag>>2]=au;g[ah>>2]=0.0;vY(aj,ak,n,as);aq=aj+4|0;ao=c[aq>>2]|0;if((ao|0)<0){an=aj+8|0;am=aj+12|0;if((c[an>>2]|0)<0){av=c[am>>2]|0;aw=aj+16|0;if((av|0)!=0){if((a[aw]&1)!=0){zw(av)}c[am>>2]=0}a[aw]=1;c[am>>2]=0;c[an>>2]=0}an=ao;do{ao=(c[am>>2]|0)+(an<<4)|0;c[ao>>2]=c[ai>>2];c[ao+4>>2]=c[ai+4>>2];c[ao+8>>2]=c[ai+8>>2];c[ao+12>>2]=c[ai+12>>2];an=an+1|0;}while((an|0)<0)}c[aq>>2]=0;if((ap|0)<(s|0)){an=aj;aj=ak;al=ap;ak=an}else{ax=ak;ay=_;az=$;aA=aa;aB=Q;aC=S;aD=T;aE=U;aF=V;aG=W;aH=X;aI=Y;aJ=Z;aK=ab;aL=ac;aM=ad;break}}}else{ax=f;ay=J+(P*36|0)+20|0;az=J+(P*36|0)+24|0;aA=J+(P*36|0)+28|0;aB=e|0;aC=e+4|0;aD=e+8|0;aE=e+16|0;aF=e+20|0;aG=e+24|0;aH=e+32|0;aI=e+36|0;aJ=e+40|0;aK=e+48|0;aL=e+52|0;aM=e+56|0}as=+g[ay>>2];au=+g[az>>2];D=+g[aA>>2];H=as*+g[aB>>2]+au*+g[aC>>2]+D*+g[aD>>2];K=as*+g[aE>>2]+au*+g[aF>>2]+D*+g[aG>>2];C=as*+g[aH>>2]+au*+g[aI>>2]+D*+g[aJ>>2];D=+g[J+(P*36|0)+32>>2]-(H*+g[aK>>2]+K*+g[aL>>2]+C*+g[aM>>2]);ad=ax+4|0;ac=c[ad>>2]|0;if((ac|0)>0){ab=ax+12|0;Z=p;Y=k;X=0;W=ac;while(1){ac=c[ab>>2]|0;V=ac+(X<<4)|0;au=D+(H*+g[V>>2]+K*+g[ac+(X<<4)+4>>2]+C*+g[ac+(X<<4)+8>>2]);as=au>h?au:h;if(as>j){aN=W}else{ac=V;c[Z>>2]=c[ac>>2];c[Z+4>>2]=c[ac+4>>2];c[Z+8>>2]=c[ac+8>>2];c[Z+12>>2]=c[ac+12>>2];ha[c[(c[Y>>2]|0)+16>>2]&31](k,b,p,as);aN=c[ad>>2]|0}ac=X+1|0;if((ac|0)<(aN|0)){X=ac;W=aN}else{break}}}R=c[r>>2]|0}else{R=v}}while(0);if((R|0)==0){i=l;return}if((a[q]&1)!=0){zw(R)}c[r>>2]=0;i=l;return}function v1(b,d,e,f,h,j,k,l){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;j=+j;k=+k;l=l|0;var m=0,n=0,o=0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0,D=0.0,E=0,F=0.0,G=0.0,H=0.0,I=0.0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0,ai=0;m=i;i=i+40|0;n=m|0;o=m+16|0;p=+g[b>>2];q=+g[b+4>>2];r=+g[b+8>>2];s=1.0/+W(p*p+q*q+r*r);t=p*s;p=q*s;q=r*s;g[n>>2]=t;g[n+4>>2]=p;g[n+8>>2]=q;g[n+12>>2]=0.0;b=c[e+28>>2]|0;u=c[e+36>>2]|0;if((b|0)>0){s=+g[h>>2];r=+g[h+4>>2];v=+g[h+8>>2];w=+g[h+16>>2];x=+g[h+20>>2];y=+g[h+24>>2];z=+g[h+32>>2];A=+g[h+36>>2];B=+g[h+40>>2];C=0;D=-3.4028234663852886e+38;E=-1;while(1){F=+g[u+(C*36|0)+20>>2];G=+g[u+(C*36|0)+24>>2];H=+g[u+(C*36|0)+28>>2];I=(F*s+G*r+H*v)*t+(F*w+G*x+H*y)*p+(F*z+G*A+H*B)*q;J=I>D;K=J?C:E;L=C+1|0;if((L|0)<(b|0)){C=L;D=J?I:D;E=K}else{M=K;break}}}else{M=-1}E=o+16|0;a[E]=1;C=o+12|0;c[C>>2]=0;b=o+4|0;c[b>>2]=0;K=o+8|0;c[K>>2]=0;J=c[u+(M*36|0)+4>>2]|0;L6:do{if((J|0)>0){L=u+(M*36|0)+12|0;N=e+16|0;O=h|0;P=h+4|0;Q=h+8|0;R=h+16|0;S=h+20|0;T=h+24|0;U=h+32|0;V=h+36|0;X=h+40|0;Y=h+48|0;Z=h+52|0;_=h+56|0;$=0;aa=0;ab=0;while(1){ac=c[(c[L>>2]|0)+($<<2)>>2]|0;ad=c[N>>2]|0;D=+g[ad+(ac<<4)>>2];q=+g[ad+(ac<<4)+4>>2];B=+g[ad+(ac<<4)+8>>2];A=D*+g[O>>2]+q*+g[P>>2]+B*+g[Q>>2]+ +g[Y>>2];z=D*+g[R>>2]+q*+g[S>>2]+B*+g[T>>2]+ +g[Z>>2];p=D*+g[U>>2]+q*+g[V>>2]+B*+g[X>>2]+ +g[_>>2];do{if((aa|0)==(ab|0)){ac=(ab|0)==0?1:ab<<1;if((ab|0)>=(ac|0)){ae=ab;break}if((ac|0)==0){af=0;ag=ab}else{ad=zv(ac<<4,16)|0;af=ad;ag=c[b>>2]|0}if((ag|0)>0){ad=0;do{ah=af+(ad<<4)|0;ai=(c[C>>2]|0)+(ad<<4)|0;c[ah>>2]=c[ai>>2];c[ah+4>>2]=c[ai+4>>2];c[ah+8>>2]=c[ai+8>>2];c[ah+12>>2]=c[ai+12>>2];ad=ad+1|0;}while((ad|0)<(ag|0))}ad=c[C>>2]|0;if((ad|0)!=0){if((a[E]&1)!=0){zw(ad)}c[C>>2]=0}a[E]=1;c[C>>2]=af;c[K>>2]=ac;ae=c[b>>2]|0}else{ae=aa}}while(0);ad=c[C>>2]|0;g[ad+(ae<<4)>>2]=A;g[ad+(ae<<4)+4>>2]=z;g[ad+(ae<<4)+8>>2]=p;g[ad+(ae<<4)+12>>2]=0.0;ad=(c[b>>2]|0)+1|0;c[b>>2]=ad;ai=$+1|0;if((ai|0)>=(J|0)){break L6}$=ai;aa=ad;ab=c[K>>2]|0}}}while(0);if((M|0)>-1){v0(n,d,f,o,j,k,l)}l=c[C>>2]|0;if((l|0)==0){i=m;return}if((a[E]&1)!=0){zw(l)}c[C>>2]=0;i=m;return}function v2(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,h=0;c[a>>2]=31648;f=a+4|0;h=b;c[f>>2]=c[h>>2];c[f+4>>2]=c[h+4>>2];c[f+8>>2]=c[h+8>>2];c[f+12>>2]=c[h+12>>2];h=a+20|0;f=d;c[h>>2]=c[f>>2];c[h+4>>2]=c[f+4>>2];c[h+8>>2]=c[f+8>>2];c[h+12>>2]=c[f+12>>2];c[a+36>>2]=e;g[a+40>>2]=1.0;return}function v3(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,h=0,j=0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0,C=0,D=0.0,E=0.0,F=0.0,G=0.0,H=0,I=0,J=0,K=0.0,L=0.0;f=i;i=i+32|0;h=f|0;j=f+16|0;k=+g[b+16>>2];l=+g[b>>2];m=k-l;n=+g[b+20>>2];o=+g[b+4>>2];p=n-o;q=+g[b+24>>2];r=+g[b+8>>2];s=q-r;t=+g[b+32>>2];u=t-l;v=+g[b+36>>2];w=v-o;x=+g[b+40>>2];y=x-r;z=p*y-s*w;A=s*u-m*y;y=m*w-p*u;b=h|0;g[b>>2]=z;B=h+4|0;g[B>>2]=A;C=h+8|0;g[C>>2]=y;g[h+12>>2]=0.0;u=l*z+o*A+r*y;p=+g[a+4>>2];w=+g[a+8>>2];m=+g[a+12>>2];s=z*p+A*w+y*m-u;D=+g[a+20>>2];E=+g[a+24>>2];F=+g[a+28>>2];G=z*D+A*E+y*F-u;if(s*G>=0.0){i=f;return}H=c[a+36>>2]|0;I=s>0.0;if(!((H&1|0)==0|I)){i=f;return}u=s/(s-G);J=a+40|0;if(u>=+g[J>>2]){i=f;return}G=z*z+A*A+y*y;s=G*-9999999747378752.0e-20;K=1.0-u;L=D*u+p*K;p=E*u+w*K;w=F*u+m*K;K=l-L;l=o-p;o=r-w;r=k-L;k=n-p;n=q-w;if(y*(K*k-l*r)+(z*(l*n-o*k)+A*(o*r-K*n))<s){i=f;return}q=t-L;L=v-p;p=x-w;if(y*(r*L-k*q)+(z*(k*p-n*L)+A*(n*q-r*p))<s){i=f;return}if(y*(l*q-K*L)+(z*(o*L-l*p)+A*(K*p-o*q))<s){i=f;return}s=1.0/+W(G);G=z*s;g[b>>2]=G;z=A*s;g[B>>2]=z;A=y*s;g[C>>2]=A;C=c[(c[a>>2]|0)+12>>2]|0;if((H&2|0)!=0|I){g[J>>2]=+hc[C&7](a,h,u,d,e);i=f;return}else{g[j>>2]=-0.0-G;g[j+4>>2]=-0.0-z;g[j+8>>2]=-0.0-A;g[j+12>>2]=0.0;g[J>>2]=+hc[C&7](a,j,u,d,e);i=f;return}}
function HM(e,f,g,h,j,k,l,m,n,o,p){e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;p=p|0;var q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0,ai=0,aj=0,ak=0,al=0,am=0,an=0,ao=0,ap=0,aq=0,ar=0,as=0,at=0,au=0,av=0,aw=0,ax=0,ay=0,az=0,aA=0,aB=0,aC=0,aD=0,aE=0,aF=0,aG=0,aH=0,aI=0,aJ=0,aK=0,aL=0,aM=0,aN=0,aO=0,aP=0,aQ=0,aR=0,aS=0,aT=0,aU=0,aV=0,aW=0,aX=0,aY=0,aZ=0,a_=0,a$=0,a0=0,a1=0,a2=0,a3=0,a4=0,a5=0,a6=0,a7=0,a8=0,a9=0,ba=0,bb=0,bc=0,bd=0,be=0,bf=0,bg=0,bh=0,bi=0,bj=0,bk=0,bl=0,bm=0,bn=0,bo=0,bp=0,bq=0,br=0,bs=0,bt=0,bu=0,bv=0,bw=0,bx=0,by=0,bz=0,bA=0,bB=0,bC=0,bD=0,bE=0,bF=0,bG=0,bH=0,bI=0,bJ=0;q=i;i=i+440|0;r=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[r>>2];r=q|0;s=q+400|0;t=q+408|0;u=q+416|0;v=q+424|0;w=v;x=i;i=i+12|0;i=i+7&-8;y=i;i=i+12|0;i=i+7&-8;z=i;i=i+12|0;i=i+7&-8;A=i;i=i+12|0;i=i+7&-8;B=i;i=i+4|0;i=i+7&-8;C=i;i=i+4|0;i=i+7&-8;D=r|0;K1(w|0,0,12)|0;E=x;F=y;G=z;H=A;K1(E|0,0,12)|0;K1(F|0,0,12)|0;K1(G|0,0,12)|0;K1(H|0,0,12)|0;HQ(g,h,s,t,u,v,x,y,z,B);h=n|0;c[o>>2]=c[h>>2];g=e|0;e=f|0;f=m+8|0;m=z+1|0;I=z+4|0;J=z+8|0;K=y+1|0;L=y+4|0;M=y+8|0;N=(j&512|0)!=0;j=x+1|0;O=x+4|0;P=x+8|0;Q=A+1|0;R=A+4|0;S=A+8|0;T=s+3|0;U=v+4|0;V=n+4|0;n=p;p=446;W=D;X=D;D=r+400|0;r=0;Y=0;L2:while(1){Z=c[g>>2]|0;do{if((Z|0)==0){_=0}else{if((c[Z+12>>2]|0)!=(c[Z+16>>2]|0)){_=Z;break}if((g3[c[(c[Z>>2]|0)+36>>2]&511](Z)|0)==-1){c[g>>2]=0;_=0;break}else{_=c[g>>2]|0;break}}}while(0);Z=(_|0)==0;$=c[e>>2]|0;do{if(($|0)==0){aa=15}else{if((c[$+12>>2]|0)!=(c[$+16>>2]|0)){if(Z){ab=$;break}else{ac=p;ad=W;ae=X;af=r;aa=274;break L2}}if((g3[c[(c[$>>2]|0)+36>>2]&511]($)|0)==-1){c[e>>2]=0;aa=15;break}else{if(Z){ab=$;break}else{ac=p;ad=W;ae=X;af=r;aa=274;break L2}}}}while(0);if((aa|0)==15){aa=0;if(Z){ac=p;ad=W;ae=X;af=r;aa=274;break}else{ab=0}}L24:do{switch(a[s+Y|0]|0){case 3:{$=a[F]|0;ag=$&255;ah=(ag&1|0)==0?ag>>>1:c[L>>2]|0;ag=a[G]|0;ai=ag&255;aj=(ai&1|0)==0?ai>>>1:c[I>>2]|0;if((ah|0)==(-aj|0)){ak=r;al=D;am=X;an=W;ao=p;ap=n;break L24}ai=(ah|0)==0;ah=c[g>>2]|0;aq=c[ah+12>>2]|0;ar=c[ah+16>>2]|0;as=(aq|0)==(ar|0);if(!(ai|(aj|0)==0)){if(as){aj=(g3[c[(c[ah>>2]|0)+36>>2]&511](ah)|0)&255;at=c[g>>2]|0;au=aj;av=a[F]|0;aw=at;ax=c[at+12>>2]|0;ay=c[at+16>>2]|0}else{au=a[aq]|0;av=$;aw=ah;ax=aq;ay=ar}ar=aw+12|0;at=(ax|0)==(ay|0);if(au<<24>>24==(a[(av&1)==0?K:c[M>>2]|0]|0)){if(at){g3[c[(c[aw>>2]|0)+40>>2]&511](aw)|0}else{c[ar>>2]=ax+1}ar=d[F]|0;ak=((ar&1|0)==0?ar>>>1:c[L>>2]|0)>>>0>1>>>0?y:r;al=D;am=X;an=W;ao=p;ap=n;break L24}if(at){az=(g3[c[(c[aw>>2]|0)+36>>2]&511](aw)|0)&255}else{az=a[ax]|0}if(az<<24>>24!=(a[(a[G]&1)==0?m:c[J>>2]|0]|0)){aa=110;break L2}at=c[g>>2]|0;ar=at+12|0;aj=c[ar>>2]|0;if((aj|0)==(c[at+16>>2]|0)){g3[c[(c[at>>2]|0)+40>>2]&511](at)|0}else{c[ar>>2]=aj+1}a[l]=1;aj=d[G]|0;ak=((aj&1|0)==0?aj>>>1:c[I>>2]|0)>>>0>1>>>0?z:r;al=D;am=X;an=W;ao=p;ap=n;break L24}if(ai){if(as){ai=(g3[c[(c[ah>>2]|0)+36>>2]&511](ah)|0)&255;aA=ai;aB=a[G]|0}else{aA=a[aq]|0;aB=ag}if(aA<<24>>24!=(a[(aB&1)==0?m:c[J>>2]|0]|0)){ak=r;al=D;am=X;an=W;ao=p;ap=n;break L24}ag=c[g>>2]|0;ai=ag+12|0;aj=c[ai>>2]|0;if((aj|0)==(c[ag+16>>2]|0)){g3[c[(c[ag>>2]|0)+40>>2]&511](ag)|0}else{c[ai>>2]=aj+1}a[l]=1;aj=d[G]|0;ak=((aj&1|0)==0?aj>>>1:c[I>>2]|0)>>>0>1>>>0?z:r;al=D;am=X;an=W;ao=p;ap=n;break L24}if(as){as=(g3[c[(c[ah>>2]|0)+36>>2]&511](ah)|0)&255;aC=as;aD=a[F]|0}else{aC=a[aq]|0;aD=$}if(aC<<24>>24!=(a[(aD&1)==0?K:c[M>>2]|0]|0)){a[l]=1;ak=r;al=D;am=X;an=W;ao=p;ap=n;break L24}$=c[g>>2]|0;aq=$+12|0;as=c[aq>>2]|0;if((as|0)==(c[$+16>>2]|0)){g3[c[(c[$>>2]|0)+40>>2]&511]($)|0}else{c[aq>>2]=as+1}as=d[F]|0;ak=((as&1|0)==0?as>>>1:c[L>>2]|0)>>>0>1>>>0?y:r;al=D;am=X;an=W;ao=p;ap=n;break};case 1:{if((Y|0)==3){ac=p;ad=W;ae=X;af=r;aa=274;break L2}as=c[g>>2]|0;aq=c[as+12>>2]|0;if((aq|0)==(c[as+16>>2]|0)){aE=(g3[c[(c[as>>2]|0)+36>>2]&511](as)|0)&255}else{aE=a[aq]|0}aq=aE<<24>>24;if((dB(aq|0)|0)==0){aa=42;break L2}if((b[(c[f>>2]|0)+(aq<<1)>>1]&8192)==0){aa=42;break L2}aq=c[g>>2]|0;as=aq+12|0;$=c[as>>2]|0;if(($|0)==(c[aq+16>>2]|0)){aF=(g3[c[(c[aq>>2]|0)+40>>2]&511](aq)|0)&255}else{c[as>>2]=$+1;aF=a[$]|0}DS(A,aF);aa=43;break};case 0:{aa=43;break};case 2:{if(!((r|0)!=0|Y>>>0<2>>>0)){if((Y|0)==2){aG=(a[T]|0)!=0}else{aG=0}if(!(N|aG)){ak=0;al=D;am=X;an=W;ao=p;ap=n;break L24}}$=a[E]|0;as=c[P>>2]|0;aq=($&1)==0?j:as;L99:do{if((Y|0)==0){aH=aq;aI=$;aJ=as}else{if((d[s+(Y-1)|0]|0)>>>0>=2>>>0){aH=aq;aI=$;aJ=as;break}ah=$&255;L102:do{if((((ah&1|0)==0?ah>>>1:c[O>>2]|0)|0)==0){aK=aq;aL=$;aM=as}else{aj=aq;while(1){ai=a[aj]|0;if((dB(ai|0)|0)==0){break}if((b[(c[f>>2]|0)+(ai<<1)>>1]&8192)==0){break}ai=aj+1|0;ag=a[E]|0;ar=c[P>>2]|0;at=ag&255;if((ai|0)==(((ag&1)==0?j:ar)+((at&1|0)==0?at>>>1:c[O>>2]|0)|0)){aK=ai;aL=ag;aM=ar;break L102}else{aj=ai}}aK=aj;aL=a[E]|0;aM=c[P>>2]|0}}while(0);ah=(aL&1)==0?j:aM;ai=aK-ah|0;ar=a[H]|0;ag=ar&255;at=(ag&1|0)==0?ag>>>1:c[R>>2]|0;if(ai>>>0>at>>>0){aH=ah;aI=aL;aJ=aM;break}ag=(ar&1)==0?Q:c[S>>2]|0;ar=ag+at|0;if((aK|0)==(ah|0)){aH=aK;aI=aL;aJ=aM;break}aN=ag+(at-ai)|0;ai=ah;while(1){if((a[aN]|0)!=(a[ai]|0)){aH=ah;aI=aL;aJ=aM;break L99}at=aN+1|0;if((at|0)==(ar|0)){aH=aK;aI=aL;aJ=aM;break}else{aN=at;ai=ai+1|0}}}}while(0);aq=aI&255;L116:do{if((aH|0)==(((aI&1)==0?j:aJ)+((aq&1|0)==0?aq>>>1:c[O>>2]|0)|0)){aO=aH}else{as=ab;$=aH;while(1){ai=c[g>>2]|0;do{if((ai|0)==0){aP=0}else{if((c[ai+12>>2]|0)!=(c[ai+16>>2]|0)){aP=ai;break}if((g3[c[(c[ai>>2]|0)+36>>2]&511](ai)|0)==-1){c[g>>2]=0;aP=0;break}else{aP=c[g>>2]|0;break}}}while(0);ai=(aP|0)==0;do{if((as|0)==0){aa=141}else{if((c[as+12>>2]|0)!=(c[as+16>>2]|0)){if(ai){aQ=as;break}else{aO=$;break L116}}if((g3[c[(c[as>>2]|0)+36>>2]&511](as)|0)==-1){c[e>>2]=0;aa=141;break}else{if(ai){aQ=as;break}else{aO=$;break L116}}}}while(0);if((aa|0)==141){aa=0;if(ai){aO=$;break L116}else{aQ=0}}aj=c[g>>2]|0;aN=c[aj+12>>2]|0;if((aN|0)==(c[aj+16>>2]|0)){aR=(g3[c[(c[aj>>2]|0)+36>>2]&511](aj)|0)&255}else{aR=a[aN]|0}if(aR<<24>>24!=(a[$]|0)){aO=$;break L116}aN=c[g>>2]|0;aj=aN+12|0;ar=c[aj>>2]|0;if((ar|0)==(c[aN+16>>2]|0)){g3[c[(c[aN>>2]|0)+40>>2]&511](aN)|0}else{c[aj>>2]=ar+1}ar=$+1|0;aj=a[E]|0;aN=aj&255;if((ar|0)==(((aj&1)==0?j:c[P>>2]|0)+((aN&1|0)==0?aN>>>1:c[O>>2]|0)|0)){aO=ar;break}else{as=aQ;$=ar}}}}while(0);if(!N){ak=r;al=D;am=X;an=W;ao=p;ap=n;break L24}aq=a[E]|0;$=aq&255;if((aO|0)==(((aq&1)==0?j:c[P>>2]|0)+(($&1|0)==0?$>>>1:c[O>>2]|0)|0)){ak=r;al=D;am=X;an=W;ao=p;ap=n}else{aa=154;break L2}break};case 4:{$=0;aq=D;as=X;ar=W;aN=p;aj=n;L151:while(1){ah=c[g>>2]|0;do{if((ah|0)==0){aS=0}else{if((c[ah+12>>2]|0)!=(c[ah+16>>2]|0)){aS=ah;break}if((g3[c[(c[ah>>2]|0)+36>>2]&511](ah)|0)==-1){c[g>>2]=0;aS=0;break}else{aS=c[g>>2]|0;break}}}while(0);ah=(aS|0)==0;at=c[e>>2]|0;do{if((at|0)==0){aa=167}else{if((c[at+12>>2]|0)!=(c[at+16>>2]|0)){if(ah){break}else{break L151}}if((g3[c[(c[at>>2]|0)+36>>2]&511](at)|0)==-1){c[e>>2]=0;aa=167;break}else{if(ah){break}else{break L151}}}}while(0);if((aa|0)==167){aa=0;if(ah){break}}at=c[g>>2]|0;ag=c[at+12>>2]|0;if((ag|0)==(c[at+16>>2]|0)){aT=(g3[c[(c[at>>2]|0)+36>>2]&511](at)|0)&255}else{aT=a[ag]|0}ag=aT<<24>>24;do{if((dB(ag|0)|0)==0){aa=187}else{if((b[(c[f>>2]|0)+(ag<<1)>>1]&2048)==0){aa=187;break}at=c[o>>2]|0;if((at|0)==(aj|0)){aU=(c[V>>2]|0)!=446;aV=c[h>>2]|0;aW=aj-aV|0;aX=aW>>>0<2147483647>>>0?aW<<1:-1;aY=KP(aU?aV:0,aX)|0;if((aY|0)==0){KZ()}do{if(aU){c[h>>2]=aY;aZ=aY}else{aV=c[h>>2]|0;c[h>>2]=aY;if((aV|0)==0){aZ=aY;break}g$[c[V>>2]&1023](aV);aZ=c[h>>2]|0}}while(0);c[V>>2]=684;aY=aZ+aW|0;c[o>>2]=aY;a_=(c[h>>2]|0)+aX|0;a$=aY}else{a_=aj;a$=at}c[o>>2]=a$+1;a[a$]=aT;a0=$+1|0;a1=aq;a2=as;a3=ar;a4=aN;a5=a_}}while(0);if((aa|0)==187){aa=0;ag=d[w]|0;if((((ag&1|0)==0?ag>>>1:c[U>>2]|0)|0)==0|($|0)==0){break}if(aT<<24>>24!=(a[u]|0)){break}if((as|0)==(aq|0)){ag=as-ar|0;ah=ag>>>0<2147483647>>>0?ag<<1:-1;if((aN|0)==446){a6=0}else{a6=ar}aY=KP(a6,ah)|0;aU=aY;if((aY|0)==0){KZ()}a7=aU+(ah>>>2<<2)|0;a8=aU+(ag>>2<<2)|0;a9=aU;ba=684}else{a7=aq;a8=as;a9=ar;ba=aN}c[a8>>2]=$;a0=0;a1=a7;a2=a8+4|0;a3=a9;a4=ba;a5=aj}aU=c[g>>2]|0;ag=aU+12|0;ah=c[ag>>2]|0;if((ah|0)==(c[aU+16>>2]|0)){g3[c[(c[aU>>2]|0)+40>>2]&511](aU)|0;$=a0;aq=a1;as=a2;ar=a3;aN=a4;aj=a5;continue}else{c[ag>>2]=ah+1;$=a0;aq=a1;as=a2;ar=a3;aN=a4;aj=a5;continue}}if((ar|0)==(as|0)|($|0)==0){bb=aq;bc=as;bd=ar;be=aN}else{if((as|0)==(aq|0)){ah=as-ar|0;ag=ah>>>0<2147483647>>>0?ah<<1:-1;if((aN|0)==446){bf=0}else{bf=ar}aU=KP(bf,ag)|0;aY=aU;if((aU|0)==0){KZ()}bg=aY+(ag>>>2<<2)|0;bh=aY+(ah>>2<<2)|0;bi=aY;bj=684}else{bg=aq;bh=as;bi=ar;bj=aN}c[bh>>2]=$;bb=bg;bc=bh+4|0;bd=bi;be=bj}if((c[B>>2]|0)>0){aY=c[g>>2]|0;do{if((aY|0)==0){bk=0}else{if((c[aY+12>>2]|0)!=(c[aY+16>>2]|0)){bk=aY;break}if((g3[c[(c[aY>>2]|0)+36>>2]&511](aY)|0)==-1){c[g>>2]=0;bk=0;break}else{bk=c[g>>2]|0;break}}}while(0);aY=(bk|0)==0;$=c[e>>2]|0;do{if(($|0)==0){aa=220}else{if((c[$+12>>2]|0)!=(c[$+16>>2]|0)){if(aY){bl=$;break}else{aa=227;break L2}}if((g3[c[(c[$>>2]|0)+36>>2]&511]($)|0)==-1){c[e>>2]=0;aa=220;break}else{if(aY){bl=$;break}else{aa=227;break L2}}}}while(0);if((aa|0)==220){aa=0;if(aY){aa=227;break L2}else{bl=0}}$=c[g>>2]|0;aN=c[$+12>>2]|0;if((aN|0)==(c[$+16>>2]|0)){bm=(g3[c[(c[$>>2]|0)+36>>2]&511]($)|0)&255}else{bm=a[aN]|0}if(bm<<24>>24!=(a[t]|0)){aa=227;break L2}aN=c[g>>2]|0;$=aN+12|0;ar=c[$>>2]|0;if((ar|0)==(c[aN+16>>2]|0)){g3[c[(c[aN>>2]|0)+40>>2]&511](aN)|0;bn=aj;bo=bl}else{c[$>>2]=ar+1;bn=aj;bo=bl}while(1){ar=c[g>>2]|0;do{if((ar|0)==0){bp=0}else{if((c[ar+12>>2]|0)!=(c[ar+16>>2]|0)){bp=ar;break}if((g3[c[(c[ar>>2]|0)+36>>2]&511](ar)|0)==-1){c[g>>2]=0;bp=0;break}else{bp=c[g>>2]|0;break}}}while(0);ar=(bp|0)==0;do{if((bo|0)==0){aa=243}else{if((c[bo+12>>2]|0)!=(c[bo+16>>2]|0)){if(ar){bq=bo;break}else{aa=252;break L2}}if((g3[c[(c[bo>>2]|0)+36>>2]&511](bo)|0)==-1){c[e>>2]=0;aa=243;break}else{if(ar){bq=bo;break}else{aa=252;break L2}}}}while(0);if((aa|0)==243){aa=0;if(ar){aa=252;break L2}else{bq=0}}$=c[g>>2]|0;aN=c[$+12>>2]|0;if((aN|0)==(c[$+16>>2]|0)){br=(g3[c[(c[$>>2]|0)+36>>2]&511]($)|0)&255}else{br=a[aN]|0}aN=br<<24>>24;if((dB(aN|0)|0)==0){aa=252;break L2}if((b[(c[f>>2]|0)+(aN<<1)>>1]&2048)==0){aa=252;break L2}aN=c[o>>2]|0;if((aN|0)==(bn|0)){$=(c[V>>2]|0)!=446;as=c[h>>2]|0;aq=bn-as|0;ah=aq>>>0<2147483647>>>0?aq<<1:-1;ag=KP($?as:0,ah)|0;if((ag|0)==0){KZ()}do{if($){c[h>>2]=ag;bs=ag}else{as=c[h>>2]|0;c[h>>2]=ag;if((as|0)==0){bs=ag;break}g$[c[V>>2]&1023](as);bs=c[h>>2]|0}}while(0);c[V>>2]=684;ag=bs+aq|0;c[o>>2]=ag;bt=(c[h>>2]|0)+ah|0;bu=ag}else{bt=bn;bu=aN}ag=c[g>>2]|0;$=c[ag+12>>2]|0;if(($|0)==(c[ag+16>>2]|0)){ar=(g3[c[(c[ag>>2]|0)+36>>2]&511](ag)|0)&255;bv=ar;bw=c[o>>2]|0}else{bv=a[$]|0;bw=bu}c[o>>2]=bw+1;a[bw]=bv;$=(c[B>>2]|0)-1|0;c[B>>2]=$;ar=c[g>>2]|0;ag=ar+12|0;as=c[ag>>2]|0;if((as|0)==(c[ar+16>>2]|0)){g3[c[(c[ar>>2]|0)+40>>2]&511](ar)|0}else{c[ag>>2]=as+1}if(($|0)>0){bn=bt;bo=bq}else{bx=bt;break}}}else{bx=aj}if((c[o>>2]|0)==(c[h>>2]|0)){aa=272;break L2}else{ak=r;al=bb;am=bc;an=bd;ao=be;ap=bx}break};default:{ak=r;al=D;am=X;an=W;ao=p;ap=n}}}while(0);L307:do{if((aa|0)==43){aa=0;if((Y|0)==3){ac=p;ad=W;ae=X;af=r;aa=274;break L2}else{by=ab}while(1){Z=c[g>>2]|0;do{if((Z|0)==0){bz=0}else{if((c[Z+12>>2]|0)!=(c[Z+16>>2]|0)){bz=Z;break}if((g3[c[(c[Z>>2]|0)+36>>2]&511](Z)|0)==-1){c[g>>2]=0;bz=0;break}else{bz=c[g>>2]|0;break}}}while(0);Z=(bz|0)==0;do{if((by|0)==0){aa=56}else{if((c[by+12>>2]|0)!=(c[by+16>>2]|0)){if(Z){bA=by;break}else{ak=r;al=D;am=X;an=W;ao=p;ap=n;break L307}}if((g3[c[(c[by>>2]|0)+36>>2]&511](by)|0)==-1){c[e>>2]=0;aa=56;break}else{if(Z){bA=by;break}else{ak=r;al=D;am=X;an=W;ao=p;ap=n;break L307}}}}while(0);if((aa|0)==56){aa=0;if(Z){ak=r;al=D;am=X;an=W;ao=p;ap=n;break L307}else{bA=0}}aN=c[g>>2]|0;ah=c[aN+12>>2]|0;if((ah|0)==(c[aN+16>>2]|0)){bB=(g3[c[(c[aN>>2]|0)+36>>2]&511](aN)|0)&255}else{bB=a[ah]|0}ah=bB<<24>>24;if((dB(ah|0)|0)==0){ak=r;al=D;am=X;an=W;ao=p;ap=n;break L307}if((b[(c[f>>2]|0)+(ah<<1)>>1]&8192)==0){ak=r;al=D;am=X;an=W;ao=p;ap=n;break L307}ah=c[g>>2]|0;aN=ah+12|0;aq=c[aN>>2]|0;if((aq|0)==(c[ah+16>>2]|0)){bC=(g3[c[(c[ah>>2]|0)+40>>2]&511](ah)|0)&255}else{c[aN>>2]=aq+1;bC=a[aq]|0}DS(A,bC);by=bA}}}while(0);aj=Y+1|0;if(aj>>>0<4>>>0){n=ap;p=ao;W=an;X=am;D=al;r=ak;Y=aj}else{ac=ao;ad=an;ae=am;af=ak;aa=274;break}}L345:do{if((aa|0)==42){c[k>>2]=c[k>>2]|4;bD=0;bE=W;bF=p}else if((aa|0)==110){c[k>>2]=c[k>>2]|4;bD=0;bE=W;bF=p}else if((aa|0)==154){c[k>>2]=c[k>>2]|4;bD=0;bE=W;bF=p}else if((aa|0)==227){c[k>>2]=c[k>>2]|4;bD=0;bE=bd;bF=be}else if((aa|0)==252){c[k>>2]=c[k>>2]|4;bD=0;bE=bd;bF=be}else if((aa|0)==272){c[k>>2]=c[k>>2]|4;bD=0;bE=bd;bF=be}else if((aa|0)==274){L353:do{if((af|0)!=0){ak=af;am=af+1|0;an=af+8|0;ao=af+4|0;Y=1;L355:while(1){r=d[ak]|0;if((r&1|0)==0){bG=r>>>1}else{bG=c[ao>>2]|0}if(Y>>>0>=bG>>>0){break L353}r=c[g>>2]|0;do{if((r|0)==0){bH=0}else{if((c[r+12>>2]|0)!=(c[r+16>>2]|0)){bH=r;break}if((g3[c[(c[r>>2]|0)+36>>2]&511](r)|0)==-1){c[g>>2]=0;bH=0;break}else{bH=c[g>>2]|0;break}}}while(0);r=(bH|0)==0;Z=c[e>>2]|0;do{if((Z|0)==0){aa=292}else{if((c[Z+12>>2]|0)!=(c[Z+16>>2]|0)){if(r){break}else{break L355}}if((g3[c[(c[Z>>2]|0)+36>>2]&511](Z)|0)==-1){c[e>>2]=0;aa=292;break}else{if(r){break}else{break L355}}}}while(0);if((aa|0)==292){aa=0;if(r){break}}Z=c[g>>2]|0;al=c[Z+12>>2]|0;if((al|0)==(c[Z+16>>2]|0)){bI=(g3[c[(c[Z>>2]|0)+36>>2]&511](Z)|0)&255}else{bI=a[al]|0}if((a[ak]&1)==0){bJ=am}else{bJ=c[an>>2]|0}if(bI<<24>>24!=(a[bJ+Y|0]|0)){break}al=Y+1|0;Z=c[g>>2]|0;D=Z+12|0;X=c[D>>2]|0;if((X|0)==(c[Z+16>>2]|0)){g3[c[(c[Z>>2]|0)+40>>2]&511](Z)|0;Y=al;continue}else{c[D>>2]=X+1;Y=al;continue}}c[k>>2]=c[k>>2]|4;bD=0;bE=ad;bF=ac;break L345}}while(0);if((ad|0)==(ae|0)){bD=1;bE=ae;bF=ac;break}c[C>>2]=0;HR(v,ad,ae,C);if((c[C>>2]|0)==0){bD=1;bE=ad;bF=ac;break}c[k>>2]=c[k>>2]|4;bD=0;bE=ad;bF=ac}}while(0);DM(A);DM(z);DM(y);DM(x);DM(v);if((bE|0)==0){i=q;return bD|0}g$[bF&1023](bE);i=q;return bD|0}function HN(a){a=a|0;var b=0;b=gJ(8)|0;Dt(b,a);eR(b|0,45576,48)}function HO(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0;d=i;i=i+160|0;l=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[l>>2];l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=d|0;m=d+16|0;n=d+120|0;o=d+128|0;p=d+136|0;q=d+144|0;r=d+152|0;s=n|0;c[s>>2]=m;t=n+4|0;c[t>>2]=446;u=m+100|0;D5(p,h);m=p|0;v=c[m>>2]|0;if((c[13666]|0)!=-1){c[l>>2]=54664;c[l+4>>2]=32;c[l+8>>2]=0;DH(54664,l,286)}l=(c[13667]|0)-1|0;w=c[v+8>>2]|0;do{if((c[v+12>>2]|0)-w>>2>>>0>l>>>0){x=c[w+(l<<2)>>2]|0;if((x|0)==0){break}y=x;a[q]=0;z=f|0;A=c[z>>2]|0;c[r>>2]=A;if(HM(e,r,g,p,c[h+4>>2]|0,j,q,y,n,o,u)|0){B=k;if((a[B]&1)==0){a[k+1|0]=0;a[B]=0}else{a[c[k+8>>2]|0]=0;c[k+4>>2]=0}B=x;if((a[q]&1)!=0){DS(k,hx[c[(c[B>>2]|0)+28>>2]&127](y,45)|0)}x=hx[c[(c[B>>2]|0)+28>>2]&127](y,48)|0;y=c[o>>2]|0;B=y-1|0;C=c[s>>2]|0;while(1){if(C>>>0>=B>>>0){break}if((a[C]|0)==x<<24>>24){C=C+1|0}else{break}}HP(k,C,y)|0}x=e|0;B=c[x>>2]|0;do{if((B|0)==0){D=0}else{if((c[B+12>>2]|0)!=(c[B+16>>2]|0)){D=B;break}if((g3[c[(c[B>>2]|0)+36>>2]&511](B)|0)!=-1){D=B;break}c[x>>2]=0;D=0}}while(0);x=(D|0)==0;do{if((A|0)==0){E=33}else{if((c[A+12>>2]|0)!=(c[A+16>>2]|0)){if(x){break}else{E=35;break}}if((g3[c[(c[A>>2]|0)+36>>2]&511](A)|0)==-1){c[z>>2]=0;E=33;break}else{if(x^(A|0)==0){break}else{E=35;break}}}}while(0);if((E|0)==33){if(x){E=35}}if((E|0)==35){c[j>>2]=c[j>>2]|2}c[b>>2]=D;Dn(c[m>>2]|0)|0;A=c[s>>2]|0;c[s>>2]=0;if((A|0)==0){i=d;return}g$[c[t>>2]&1023](A);i=d;return}}while(0);d=gJ(4)|0;Kr(d);eR(d|0,45560,458)}function HP(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;f=b;g=d;h=a[f]|0;i=h&255;if((i&1|0)==0){j=i>>>1}else{j=c[b+4>>2]|0}if((h&1)==0){k=10;l=h}else{h=c[b>>2]|0;k=(h&-2)-1|0;l=h&255}h=e-g|0;if((e|0)==(d|0)){return b|0}if((k-j|0)>>>0<h>>>0){DV(b,k,j+h-k|0,j,j,0,0);m=a[f]|0}else{m=l}if((m&1)==0){n=b+1|0}else{n=c[b+8>>2]|0}m=e+(j-g)|0;g=d;d=n+j|0;while(1){a[d]=a[g]|0;l=g+1|0;if((l|0)==(e|0)){break}else{g=l;d=d+1|0}}a[n+m|0]=0;m=j+h|0;if((a[f]&1)==0){a[f]=m<<1;return b|0}else{c[b+4>>2]=m;return b|0}return 0}function HQ(b,d,e,f,g,h,j,k,l,m){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0;n=i;i=i+56|0;o=n|0;p=n+16|0;q=n+32|0;r=n+40|0;s=r;t=i;i=i+12|0;i=i+7&-8;u=t;v=i;i=i+12|0;i=i+7&-8;w=v;x=i;i=i+12|0;i=i+7&-8;y=x;z=i;i=i+4|0;i=i+7&-8;A=i;i=i+12|0;i=i+7&-8;B=A;D=i;i=i+12|0;i=i+7&-8;E=D;F=i;i=i+12|0;i=i+7&-8;G=F;H=i;i=i+12|0;i=i+7&-8;I=H;if(b){b=c[d>>2]|0;if((c[13784]|0)!=-1){c[p>>2]=55136;c[p+4>>2]=32;c[p+8>>2]=0;DH(55136,p,286)}p=(c[13785]|0)-1|0;J=c[b+8>>2]|0;if((c[b+12>>2]|0)-J>>2>>>0<=p>>>0){K=gJ(4)|0;L=K;Kr(L);eR(K|0,45560,458)}b=c[J+(p<<2)>>2]|0;if((b|0)==0){K=gJ(4)|0;L=K;Kr(L);eR(K|0,45560,458)}K=b;g0[c[(c[b>>2]|0)+44>>2]&511](q,K);L=e;C=c[q>>2]|0;a[L]=C;C=C>>8;a[L+1|0]=C;C=C>>8;a[L+2|0]=C;C=C>>8;a[L+3|0]=C;L=b;g0[c[(c[L>>2]|0)+32>>2]&511](r,K);q=l;if((a[q]&1)==0){a[l+1|0]=0;a[q]=0}else{a[c[l+8>>2]|0]=0;c[l+4>>2]=0}DR(l,0);c[q>>2]=c[s>>2];c[q+4>>2]=c[s+4>>2];c[q+8>>2]=c[s+8>>2];K1(s|0,0,12)|0;DM(r);g0[c[(c[L>>2]|0)+28>>2]&511](t,K);r=k;if((a[r]&1)==0){a[k+1|0]=0;a[r]=0}else{a[c[k+8>>2]|0]=0;c[k+4>>2]=0}DR(k,0);c[r>>2]=c[u>>2];c[r+4>>2]=c[u+4>>2];c[r+8>>2]=c[u+8>>2];K1(u|0,0,12)|0;DM(t);t=b;a[f]=g3[c[(c[t>>2]|0)+12>>2]&511](K)|0;a[g]=g3[c[(c[t>>2]|0)+16>>2]&511](K)|0;g0[c[(c[L>>2]|0)+20>>2]&511](v,K);t=h;if((a[t]&1)==0){a[h+1|0]=0;a[t]=0}else{a[c[h+8>>2]|0]=0;c[h+4>>2]=0}DR(h,0);c[t>>2]=c[w>>2];c[t+4>>2]=c[w+4>>2];c[t+8>>2]=c[w+8>>2];K1(w|0,0,12)|0;DM(v);g0[c[(c[L>>2]|0)+24>>2]&511](x,K);L=j;if((a[L]&1)==0){a[j+1|0]=0;a[L]=0}else{a[c[j+8>>2]|0]=0;c[j+4>>2]=0}DR(j,0);c[L>>2]=c[y>>2];c[L+4>>2]=c[y+4>>2];c[L+8>>2]=c[y+8>>2];K1(y|0,0,12)|0;DM(x);M=g3[c[(c[b>>2]|0)+36>>2]&511](K)|0;c[m>>2]=M;i=n;return}else{K=c[d>>2]|0;if((c[13786]|0)!=-1){c[o>>2]=55144;c[o+4>>2]=32;c[o+8>>2]=0;DH(55144,o,286)}o=(c[13787]|0)-1|0;d=c[K+8>>2]|0;if((c[K+12>>2]|0)-d>>2>>>0<=o>>>0){N=gJ(4)|0;O=N;Kr(O);eR(N|0,45560,458)}K=c[d+(o<<2)>>2]|0;if((K|0)==0){N=gJ(4)|0;O=N;Kr(O);eR(N|0,45560,458)}N=K;g0[c[(c[K>>2]|0)+44>>2]&511](z,N);O=e;C=c[z>>2]|0;a[O]=C;C=C>>8;a[O+1|0]=C;C=C>>8;a[O+2|0]=C;C=C>>8;a[O+3|0]=C;O=K;g0[c[(c[O>>2]|0)+32>>2]&511](A,N);z=l;if((a[z]&1)==0){a[l+1|0]=0;a[z]=0}else{a[c[l+8>>2]|0]=0;c[l+4>>2]=0}DR(l,0);c[z>>2]=c[B>>2];c[z+4>>2]=c[B+4>>2];c[z+8>>2]=c[B+8>>2];K1(B|0,0,12)|0;DM(A);g0[c[(c[O>>2]|0)+28>>2]&511](D,N);A=k;if((a[A]&1)==0){a[k+1|0]=0;a[A]=0}else{a[c[k+8>>2]|0]=0;c[k+4>>2]=0}DR(k,0);c[A>>2]=c[E>>2];c[A+4>>2]=c[E+4>>2];c[A+8>>2]=c[E+8>>2];K1(E|0,0,12)|0;DM(D);D=K;a[f]=g3[c[(c[D>>2]|0)+12>>2]&511](N)|0;a[g]=g3[c[(c[D>>2]|0)+16>>2]&511](N)|0;g0[c[(c[O>>2]|0)+20>>2]&511](F,N);D=h;if((a[D]&1)==0){a[h+1|0]=0;a[D]=0}else{a[c[h+8>>2]|0]=0;c[h+4>>2]=0}DR(h,0);c[D>>2]=c[G>>2];c[D+4>>2]=c[G+4>>2];c[D+8>>2]=c[G+8>>2];K1(G|0,0,12)|0;DM(F);g0[c[(c[O>>2]|0)+24>>2]&511](H,N);O=j;if((a[O]&1)==0){a[j+1|0]=0;a[O]=0}else{a[c[j+8>>2]|0]=0;c[j+4>>2]=0}DR(j,0);c[O>>2]=c[I>>2];c[O+4>>2]=c[I+4>>2];c[O+8>>2]=c[I+8>>2];K1(I|0,0,12)|0;DM(H);M=g3[c[(c[K>>2]|0)+36>>2]&511](N)|0;c[m>>2]=M;i=n;return}}function HR(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;g=b;h=b;i=a[h]|0;j=i&255;if((j&1|0)==0){k=j>>>1}else{k=c[b+4>>2]|0}if((k|0)==0){return}do{if((d|0)==(e|0)){l=i}else{k=e-4|0;if(k>>>0>d>>>0){m=d;n=k}else{l=i;break}do{k=c[m>>2]|0;c[m>>2]=c[n>>2];c[n>>2]=k;m=m+4|0;n=n-4|0;}while(m>>>0<n>>>0);l=a[h]|0}}while(0);if((l&1)==0){o=g+1|0}else{o=c[b+8>>2]|0}g=l&255;if((g&1|0)==0){p=g>>>1}else{p=c[b+4>>2]|0}b=e-4|0;e=a[o]|0;g=e<<24>>24;l=e<<24>>24<1|e<<24>>24==127;L22:do{if(b>>>0>d>>>0){e=o+p|0;h=o;n=d;m=g;i=l;while(1){if(!i){if((m|0)!=(c[n>>2]|0)){break}}k=(e-h|0)>1?h+1|0:h;j=n+4|0;q=a[k]|0;r=q<<24>>24;s=q<<24>>24<1|q<<24>>24==127;if(j>>>0<b>>>0){h=k;n=j;m=r;i=s}else{t=r;u=s;break L22}}c[f>>2]=4;return}else{t=g;u=l}}while(0);if(u){return}u=c[b>>2]|0;if(!(t>>>0<u>>>0|(u|0)==0)){return}c[f>>2]=4;return}function HS(a){a=a|0;Dl(a|0);KU(a);return}function HT(a){a=a|0;Dl(a|0);return}function HU(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0;d=i;i=i+600|0;l=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[l>>2];l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=d|0;m=d+16|0;n=d+416|0;o=d+424|0;p=d+432|0;q=d+440|0;r=d+448|0;s=d+456|0;t=d+496|0;u=n|0;c[u>>2]=m;v=n+4|0;c[v>>2]=446;w=m+400|0;D5(p,h);m=p|0;x=c[m>>2]|0;if((c[13664]|0)!=-1){c[l>>2]=54656;c[l+4>>2]=32;c[l+8>>2]=0;DH(54656,l,286)}l=(c[13665]|0)-1|0;y=c[x+8>>2]|0;do{if((c[x+12>>2]|0)-y>>2>>>0>l>>>0){z=c[y+(l<<2)>>2]|0;if((z|0)==0){break}A=z;a[q]=0;B=f|0;c[r>>2]=c[B>>2];do{if(HV(e,r,g,p,c[h+4>>2]|0,j,q,A,n,o,w)|0){C=s|0;hD[c[(c[z>>2]|0)+48>>2]&63](A,26304,26314,C)|0;D=t|0;E=c[o>>2]|0;F=c[u>>2]|0;G=E-F|0;do{if((G|0)>392){H=KM((G>>2)+2|0)|0;if((H|0)!=0){I=H;J=H;break}KZ();I=0;J=0}else{I=D;J=0}}while(0);if((a[q]&1)==0){K=I}else{a[I]=45;K=I+1|0}if(F>>>0<E>>>0){G=s+40|0;H=s;L=K;M=F;while(1){N=C;while(1){if((N|0)==(G|0)){O=G;break}if((c[N>>2]|0)==(c[M>>2]|0)){O=N;break}else{N=N+4|0}}a[L]=a[26304+(O-H>>2)|0]|0;N=M+4|0;P=L+1|0;if(N>>>0<(c[o>>2]|0)>>>0){L=P;M=N}else{Q=P;break}}}else{Q=K}a[Q]=0;M=gu(D|0,23880,(L=i,i=i+8|0,c[L>>2]=k,L)|0)|0;i=L;if((M|0)==1){if((J|0)==0){break}KN(J);break}M=gJ(8)|0;Dt(M,23608);eR(M|0,45576,48)}}while(0);A=e|0;z=c[A>>2]|0;do{if((z|0)==0){R=0}else{M=c[z+12>>2]|0;if((M|0)==(c[z+16>>2]|0)){S=g3[c[(c[z>>2]|0)+36>>2]&511](z)|0}else{S=c[M>>2]|0}if((S|0)!=-1){R=z;break}c[A>>2]=0;R=0}}while(0);A=(R|0)==0;z=c[B>>2]|0;do{if((z|0)==0){T=46}else{M=c[z+12>>2]|0;if((M|0)==(c[z+16>>2]|0)){U=g3[c[(c[z>>2]|0)+36>>2]&511](z)|0}else{U=c[M>>2]|0}if((U|0)==-1){c[B>>2]=0;T=46;break}else{if(A^(z|0)==0){break}else{T=48;break}}}}while(0);if((T|0)==46){if(A){T=48}}if((T|0)==48){c[j>>2]=c[j>>2]|2}c[b>>2]=R;Dn(c[m>>2]|0)|0;z=c[u>>2]|0;c[u>>2]=0;if((z|0)==0){i=d;return}g$[c[v>>2]&1023](z);i=d;return}}while(0);d=gJ(4)|0;Kr(d);eR(d|0,45560,458)}function HV(b,e,f,g,h,j,k,l,m,n,o){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;var p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0,ai=0,aj=0,ak=0,al=0,am=0,an=0,ao=0,ap=0,aq=0,ar=0,as=0,at=0,au=0,av=0,aw=0,ax=0,ay=0,az=0,aA=0,aB=0,aC=0,aD=0,aE=0,aF=0,aG=0,aH=0,aI=0,aJ=0,aK=0,aL=0,aM=0,aN=0,aO=0,aP=0,aQ=0,aR=0,aS=0,aT=0,aU=0,aV=0,aW=0,aX=0,aY=0,aZ=0,a_=0,a$=0,a0=0,a1=0,a2=0,a3=0,a4=0,a5=0,a6=0,a7=0,a8=0,a9=0,ba=0,bb=0,bc=0,bd=0,be=0,bf=0,bg=0,bh=0,bi=0,bj=0,bk=0,bl=0,bm=0,bn=0,bo=0,bp=0,bq=0,br=0,bs=0,bt=0,bu=0,bv=0,bw=0,bx=0,by=0,bz=0,bA=0,bB=0,bC=0,bD=0,bE=0,bF=0,bG=0;p=i;i=i+448|0;q=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[q>>2];q=p|0;r=p+8|0;s=p+408|0;t=p+416|0;u=p+424|0;v=p+432|0;w=v;x=i;i=i+12|0;i=i+7&-8;y=i;i=i+12|0;i=i+7&-8;z=i;i=i+12|0;i=i+7&-8;A=i;i=i+12|0;i=i+7&-8;B=i;i=i+4|0;i=i+7&-8;C=i;i=i+4|0;i=i+7&-8;c[q>>2]=o;o=r|0;K1(w|0,0,12)|0;D=x;E=y;F=z;G=A;K1(D|0,0,12)|0;K1(E|0,0,12)|0;K1(F|0,0,12)|0;K1(G|0,0,12)|0;HY(f,g,s,t,u,v,x,y,z,B);g=m|0;c[n>>2]=c[g>>2];f=b|0;b=e|0;e=l;H=z+4|0;I=z+8|0;J=y+4|0;K=y+8|0;L=(h&512|0)!=0;h=x+4|0;M=x+8|0;N=A+4|0;O=A+8|0;P=s+3|0;Q=v+4|0;R=446;S=o;T=o;o=r+400|0;r=0;U=0;L2:while(1){V=c[f>>2]|0;do{if((V|0)==0){W=1}else{X=c[V+12>>2]|0;if((X|0)==(c[V+16>>2]|0)){Y=g3[c[(c[V>>2]|0)+36>>2]&511](V)|0}else{Y=c[X>>2]|0}if((Y|0)==-1){c[f>>2]=0;W=1;break}else{W=(c[f>>2]|0)==0;break}}}while(0);V=c[b>>2]|0;do{if((V|0)==0){Z=16}else{X=c[V+12>>2]|0;if((X|0)==(c[V+16>>2]|0)){_=g3[c[(c[V>>2]|0)+36>>2]&511](V)|0}else{_=c[X>>2]|0}if((_|0)==-1){c[b>>2]=0;Z=16;break}else{if(W^(V|0)==0){$=V;break}else{aa=R;ab=S;ac=T;ad=r;Z=256;break L2}}}}while(0);if((Z|0)==16){Z=0;if(W){aa=R;ab=S;ac=T;ad=r;Z=256;break}else{$=0}}L26:do{switch(a[s+U|0]|0){case 1:{if((U|0)==3){aa=R;ab=S;ac=T;ad=r;Z=256;break L2}V=c[f>>2]|0;X=c[V+12>>2]|0;if((X|0)==(c[V+16>>2]|0)){ae=g3[c[(c[V>>2]|0)+36>>2]&511](V)|0}else{ae=c[X>>2]|0}if(!(hd[c[(c[e>>2]|0)+12>>2]&127](l,8192,ae)|0)){Z=40;break L2}X=c[f>>2]|0;V=X+12|0;af=c[V>>2]|0;if((af|0)==(c[X+16>>2]|0)){ag=g3[c[(c[X>>2]|0)+40>>2]&511](X)|0}else{c[V>>2]=af+4;ag=c[af>>2]|0}D0(A,ag);Z=41;break};case 0:{Z=41;break};case 3:{af=a[E]|0;V=af&255;X=(V&1|0)==0;ah=a[F]|0;ai=ah&255;aj=(ai&1|0)==0;if(((X?V>>>1:c[J>>2]|0)|0)==(-(aj?ai>>>1:c[H>>2]|0)|0)){ak=r;al=o;am=T;an=S;ao=R;break L26}do{if(((X?V>>>1:c[J>>2]|0)|0)!=0){if(((aj?ai>>>1:c[H>>2]|0)|0)==0){break}ap=c[f>>2]|0;aq=c[ap+12>>2]|0;if((aq|0)==(c[ap+16>>2]|0)){ar=g3[c[(c[ap>>2]|0)+36>>2]&511](ap)|0;as=ar;at=a[E]|0}else{as=c[aq>>2]|0;at=af}aq=c[f>>2]|0;ar=aq+12|0;ap=c[ar>>2]|0;au=(ap|0)==(c[aq+16>>2]|0);if((as|0)==(c[((at&1)==0?J:c[K>>2]|0)>>2]|0)){if(au){g3[c[(c[aq>>2]|0)+40>>2]&511](aq)|0}else{c[ar>>2]=ap+4}ar=d[E]|0;ak=((ar&1|0)==0?ar>>>1:c[J>>2]|0)>>>0>1>>>0?y:r;al=o;am=T;an=S;ao=R;break L26}if(au){av=g3[c[(c[aq>>2]|0)+36>>2]&511](aq)|0}else{av=c[ap>>2]|0}if((av|0)!=(c[((a[F]&1)==0?H:c[I>>2]|0)>>2]|0)){Z=106;break L2}ap=c[f>>2]|0;aq=ap+12|0;au=c[aq>>2]|0;if((au|0)==(c[ap+16>>2]|0)){g3[c[(c[ap>>2]|0)+40>>2]&511](ap)|0}else{c[aq>>2]=au+4}a[k]=1;au=d[F]|0;ak=((au&1|0)==0?au>>>1:c[H>>2]|0)>>>0>1>>>0?z:r;al=o;am=T;an=S;ao=R;break L26}}while(0);ai=c[f>>2]|0;aj=c[ai+12>>2]|0;au=(aj|0)==(c[ai+16>>2]|0);if(((X?V>>>1:c[J>>2]|0)|0)==0){if(au){aq=g3[c[(c[ai>>2]|0)+36>>2]&511](ai)|0;aw=aq;ax=a[F]|0}else{aw=c[aj>>2]|0;ax=ah}if((aw|0)!=(c[((ax&1)==0?H:c[I>>2]|0)>>2]|0)){ak=r;al=o;am=T;an=S;ao=R;break L26}aq=c[f>>2]|0;ap=aq+12|0;ar=c[ap>>2]|0;if((ar|0)==(c[aq+16>>2]|0)){g3[c[(c[aq>>2]|0)+40>>2]&511](aq)|0}else{c[ap>>2]=ar+4}a[k]=1;ar=d[F]|0;ak=((ar&1|0)==0?ar>>>1:c[H>>2]|0)>>>0>1>>>0?z:r;al=o;am=T;an=S;ao=R;break L26}if(au){au=g3[c[(c[ai>>2]|0)+36>>2]&511](ai)|0;ay=au;az=a[E]|0}else{ay=c[aj>>2]|0;az=af}if((ay|0)!=(c[((az&1)==0?J:c[K>>2]|0)>>2]|0)){a[k]=1;ak=r;al=o;am=T;an=S;ao=R;break L26}aj=c[f>>2]|0;au=aj+12|0;ai=c[au>>2]|0;if((ai|0)==(c[aj+16>>2]|0)){g3[c[(c[aj>>2]|0)+40>>2]&511](aj)|0}else{c[au>>2]=ai+4}ai=d[E]|0;ak=((ai&1|0)==0?ai>>>1:c[J>>2]|0)>>>0>1>>>0?y:r;al=o;am=T;an=S;ao=R;break};case 2:{if(!((r|0)!=0|U>>>0<2>>>0)){if((U|0)==2){aA=(a[P]|0)!=0}else{aA=0}if(!(L|aA)){ak=0;al=o;am=T;an=S;ao=R;break L26}}ai=a[D]|0;au=(ai&1)==0?h:c[M>>2]|0;L98:do{if((U|0)==0){aB=au;aC=ai;aD=$}else{if((d[s+(U-1)|0]|0)>>>0<2>>>0){aE=au;aF=ai}else{aB=au;aC=ai;aD=$;break}while(1){aj=aF&255;if((aE|0)==(((aF&1)==0?h:c[M>>2]|0)+(((aj&1|0)==0?aj>>>1:c[h>>2]|0)<<2)|0)){aG=aF;break}if(!(hd[c[(c[e>>2]|0)+12>>2]&127](l,8192,c[aE>>2]|0)|0)){Z=117;break}aE=aE+4|0;aF=a[D]|0}if((Z|0)==117){Z=0;aG=a[D]|0}aj=(aG&1)==0;ar=aE-(aj?h:c[M>>2]|0)>>2;ap=a[G]|0;aq=ap&255;aH=(aq&1|0)==0;L108:do{if(ar>>>0<=(aH?aq>>>1:c[N>>2]|0)>>>0){aI=(ap&1)==0;aJ=(aI?N:c[O>>2]|0)+((aH?aq>>>1:c[N>>2]|0)-ar<<2)|0;aK=(aI?N:c[O>>2]|0)+((aH?aq>>>1:c[N>>2]|0)<<2)|0;if((aJ|0)==(aK|0)){aB=aE;aC=aG;aD=$;break L98}else{aL=aJ;aM=aj?h:c[M>>2]|0}while(1){if((c[aL>>2]|0)!=(c[aM>>2]|0)){break L108}aJ=aL+4|0;if((aJ|0)==(aK|0)){aB=aE;aC=aG;aD=$;break L98}aL=aJ;aM=aM+4|0}}}while(0);aB=aj?h:c[M>>2]|0;aC=aG;aD=$}}while(0);L115:while(1){ai=aC&255;if((aB|0)==(((aC&1)==0?h:c[M>>2]|0)+(((ai&1|0)==0?ai>>>1:c[h>>2]|0)<<2)|0)){break}ai=c[f>>2]|0;do{if((ai|0)==0){aN=1}else{au=c[ai+12>>2]|0;if((au|0)==(c[ai+16>>2]|0)){aO=g3[c[(c[ai>>2]|0)+36>>2]&511](ai)|0}else{aO=c[au>>2]|0}if((aO|0)==-1){c[f>>2]=0;aN=1;break}else{aN=(c[f>>2]|0)==0;break}}}while(0);do{if((aD|0)==0){Z=138}else{ai=c[aD+12>>2]|0;if((ai|0)==(c[aD+16>>2]|0)){aP=g3[c[(c[aD>>2]|0)+36>>2]&511](aD)|0}else{aP=c[ai>>2]|0}if((aP|0)==-1){c[b>>2]=0;Z=138;break}else{if(aN^(aD|0)==0){aQ=aD;break}else{break L115}}}}while(0);if((Z|0)==138){Z=0;if(aN){break}else{aQ=0}}ai=c[f>>2]|0;aj=c[ai+12>>2]|0;if((aj|0)==(c[ai+16>>2]|0)){aR=g3[c[(c[ai>>2]|0)+36>>2]&511](ai)|0}else{aR=c[aj>>2]|0}if((aR|0)!=(c[aB>>2]|0)){break}aj=c[f>>2]|0;ai=aj+12|0;au=c[ai>>2]|0;if((au|0)==(c[aj+16>>2]|0)){g3[c[(c[aj>>2]|0)+40>>2]&511](aj)|0}else{c[ai>>2]=au+4}aB=aB+4|0;aC=a[D]|0;aD=aQ}if(!L){ak=r;al=o;am=T;an=S;ao=R;break L26}au=a[D]|0;ai=au&255;if((aB|0)==(((au&1)==0?h:c[M>>2]|0)+(((ai&1|0)==0?ai>>>1:c[h>>2]|0)<<2)|0)){ak=r;al=o;am=T;an=S;ao=R}else{Z=150;break L2}break};case 4:{ai=0;au=o;aj=T;af=S;ah=R;L151:while(1){V=c[f>>2]|0;do{if((V|0)==0){aS=1}else{X=c[V+12>>2]|0;if((X|0)==(c[V+16>>2]|0)){aT=g3[c[(c[V>>2]|0)+36>>2]&511](V)|0}else{aT=c[X>>2]|0}if((aT|0)==-1){c[f>>2]=0;aS=1;break}else{aS=(c[f>>2]|0)==0;break}}}while(0);V=c[b>>2]|0;do{if((V|0)==0){Z=164}else{X=c[V+12>>2]|0;if((X|0)==(c[V+16>>2]|0)){aU=g3[c[(c[V>>2]|0)+36>>2]&511](V)|0}else{aU=c[X>>2]|0}if((aU|0)==-1){c[b>>2]=0;Z=164;break}else{if(aS^(V|0)==0){break}else{break L151}}}}while(0);if((Z|0)==164){Z=0;if(aS){break}}V=c[f>>2]|0;X=c[V+12>>2]|0;if((X|0)==(c[V+16>>2]|0)){aV=g3[c[(c[V>>2]|0)+36>>2]&511](V)|0}else{aV=c[X>>2]|0}if(hd[c[(c[e>>2]|0)+12>>2]&127](l,2048,aV)|0){X=c[n>>2]|0;if((X|0)==(c[q>>2]|0)){HZ(m,n,q);aW=c[n>>2]|0}else{aW=X}c[n>>2]=aW+4;c[aW>>2]=aV;aX=ai+1|0;aY=au;aZ=aj;a_=af;a$=ah}else{X=d[w]|0;if((((X&1|0)==0?X>>>1:c[Q>>2]|0)|0)==0|(ai|0)==0){break}if((aV|0)!=(c[u>>2]|0)){break}if((aj|0)==(au|0)){X=(ah|0)!=446;V=aj-af|0;aq=V>>>0<2147483647>>>0?V<<1:-1;if(X){a0=af}else{a0=0}X=KP(a0,aq)|0;aH=X;if((X|0)==0){KZ()}a1=aH+(aq>>>2<<2)|0;a2=aH+(V>>2<<2)|0;a3=aH;a4=684}else{a1=au;a2=aj;a3=af;a4=ah}c[a2>>2]=ai;aX=0;aY=a1;aZ=a2+4|0;a_=a3;a$=a4}aH=c[f>>2]|0;V=aH+12|0;aq=c[V>>2]|0;if((aq|0)==(c[aH+16>>2]|0)){g3[c[(c[aH>>2]|0)+40>>2]&511](aH)|0;ai=aX;au=aY;aj=aZ;af=a_;ah=a$;continue}else{c[V>>2]=aq+4;ai=aX;au=aY;aj=aZ;af=a_;ah=a$;continue}}if((af|0)==(aj|0)|(ai|0)==0){a5=au;a6=aj;a7=af;a8=ah}else{if((aj|0)==(au|0)){aq=(ah|0)!=446;V=aj-af|0;aH=V>>>0<2147483647>>>0?V<<1:-1;if(aq){a9=af}else{a9=0}aq=KP(a9,aH)|0;X=aq;if((aq|0)==0){KZ()}ba=X+(aH>>>2<<2)|0;bb=X+(V>>2<<2)|0;bc=X;bd=684}else{ba=au;bb=aj;bc=af;bd=ah}c[bb>>2]=ai;a5=ba;a6=bb+4|0;a7=bc;a8=bd}X=c[B>>2]|0;if((X|0)>0){V=c[f>>2]|0;do{if((V|0)==0){be=1}else{aH=c[V+12>>2]|0;if((aH|0)==(c[V+16>>2]|0)){bf=g3[c[(c[V>>2]|0)+36>>2]&511](V)|0}else{bf=c[aH>>2]|0}if((bf|0)==-1){c[f>>2]=0;be=1;break}else{be=(c[f>>2]|0)==0;break}}}while(0);V=c[b>>2]|0;do{if((V|0)==0){Z=213}else{ai=c[V+12>>2]|0;if((ai|0)==(c[V+16>>2]|0)){bg=g3[c[(c[V>>2]|0)+36>>2]&511](V)|0}else{bg=c[ai>>2]|0}if((bg|0)==-1){c[b>>2]=0;Z=213;break}else{if(be^(V|0)==0){bh=V;break}else{Z=219;break L2}}}}while(0);if((Z|0)==213){Z=0;if(be){Z=219;break L2}else{bh=0}}V=c[f>>2]|0;ai=c[V+12>>2]|0;if((ai|0)==(c[V+16>>2]|0)){bi=g3[c[(c[V>>2]|0)+36>>2]&511](V)|0}else{bi=c[ai>>2]|0}if((bi|0)!=(c[t>>2]|0)){Z=219;break L2}ai=c[f>>2]|0;V=ai+12|0;ah=c[V>>2]|0;if((ah|0)==(c[ai+16>>2]|0)){g3[c[(c[ai>>2]|0)+40>>2]&511](ai)|0;bj=bh;bk=X}else{c[V>>2]=ah+4;bj=bh;bk=X}while(1){ah=c[f>>2]|0;do{if((ah|0)==0){bl=1}else{V=c[ah+12>>2]|0;if((V|0)==(c[ah+16>>2]|0)){bm=g3[c[(c[ah>>2]|0)+36>>2]&511](ah)|0}else{bm=c[V>>2]|0}if((bm|0)==-1){c[f>>2]=0;bl=1;break}else{bl=(c[f>>2]|0)==0;break}}}while(0);do{if((bj|0)==0){Z=236}else{ah=c[bj+12>>2]|0;if((ah|0)==(c[bj+16>>2]|0)){bn=g3[c[(c[bj>>2]|0)+36>>2]&511](bj)|0}else{bn=c[ah>>2]|0}if((bn|0)==-1){c[b>>2]=0;Z=236;break}else{if(bl^(bj|0)==0){bo=bj;break}else{Z=243;break L2}}}}while(0);if((Z|0)==236){Z=0;if(bl){Z=243;break L2}else{bo=0}}ah=c[f>>2]|0;V=c[ah+12>>2]|0;if((V|0)==(c[ah+16>>2]|0)){bp=g3[c[(c[ah>>2]|0)+36>>2]&511](ah)|0}else{bp=c[V>>2]|0}if(!(hd[c[(c[e>>2]|0)+12>>2]&127](l,2048,bp)|0)){Z=243;break L2}if((c[n>>2]|0)==(c[q>>2]|0)){HZ(m,n,q)}V=c[f>>2]|0;ah=c[V+12>>2]|0;if((ah|0)==(c[V+16>>2]|0)){bq=g3[c[(c[V>>2]|0)+36>>2]&511](V)|0}else{bq=c[ah>>2]|0}ah=c[n>>2]|0;c[n>>2]=ah+4;c[ah>>2]=bq;ah=bk-1|0;c[B>>2]=ah;V=c[f>>2]|0;ai=V+12|0;af=c[ai>>2]|0;if((af|0)==(c[V+16>>2]|0)){g3[c[(c[V>>2]|0)+40>>2]&511](V)|0}else{c[ai>>2]=af+4}if((ah|0)>0){bj=bo;bk=ah}else{break}}}if((c[n>>2]|0)==(c[g>>2]|0)){Z=254;break L2}else{ak=r;al=a5;am=a6;an=a7;ao=a8}break};default:{ak=r;al=o;am=T;an=S;ao=R}}}while(0);L295:do{if((Z|0)==41){Z=0;if((U|0)==3){aa=R;ab=S;ac=T;ad=r;Z=256;break L2}else{br=$}while(1){X=c[f>>2]|0;do{if((X|0)==0){bs=1}else{ah=c[X+12>>2]|0;if((ah|0)==(c[X+16>>2]|0)){bt=g3[c[(c[X>>2]|0)+36>>2]&511](X)|0}else{bt=c[ah>>2]|0}if((bt|0)==-1){c[f>>2]=0;bs=1;break}else{bs=(c[f>>2]|0)==0;break}}}while(0);do{if((br|0)==0){Z=55}else{X=c[br+12>>2]|0;if((X|0)==(c[br+16>>2]|0)){bu=g3[c[(c[br>>2]|0)+36>>2]&511](br)|0}else{bu=c[X>>2]|0}if((bu|0)==-1){c[b>>2]=0;Z=55;break}else{if(bs^(br|0)==0){bv=br;break}else{ak=r;al=o;am=T;an=S;ao=R;break L295}}}}while(0);if((Z|0)==55){Z=0;if(bs){ak=r;al=o;am=T;an=S;ao=R;break L295}else{bv=0}}X=c[f>>2]|0;ah=c[X+12>>2]|0;if((ah|0)==(c[X+16>>2]|0)){bw=g3[c[(c[X>>2]|0)+36>>2]&511](X)|0}else{bw=c[ah>>2]|0}if(!(hd[c[(c[e>>2]|0)+12>>2]&127](l,8192,bw)|0)){ak=r;al=o;am=T;an=S;ao=R;break L295}ah=c[f>>2]|0;X=ah+12|0;af=c[X>>2]|0;if((af|0)==(c[ah+16>>2]|0)){bx=g3[c[(c[ah>>2]|0)+40>>2]&511](ah)|0}else{c[X>>2]=af+4;bx=c[af>>2]|0}D0(A,bx);br=bv}}}while(0);af=U+1|0;if(af>>>0<4>>>0){R=ao;S=an;T=am;o=al;r=ak;U=af}else{aa=ao;ab=an;ac=am;ad=ak;Z=256;break}}L332:do{if((Z|0)==40){c[j>>2]=c[j>>2]|4;by=0;bz=S;bA=R}else if((Z|0)==106){c[j>>2]=c[j>>2]|4;by=0;bz=S;bA=R}else if((Z|0)==150){c[j>>2]=c[j>>2]|4;by=0;bz=S;bA=R}else if((Z|0)==219){c[j>>2]=c[j>>2]|4;by=0;bz=a7;bA=a8}else if((Z|0)==243){c[j>>2]=c[j>>2]|4;by=0;bz=a7;bA=a8}else if((Z|0)==254){c[j>>2]=c[j>>2]|4;by=0;bz=a7;bA=a8}else if((Z|0)==256){L340:do{if((ad|0)!=0){ak=ad;am=ad+4|0;an=ad+8|0;ao=1;L342:while(1){U=d[ak]|0;if((U&1|0)==0){bB=U>>>1}else{bB=c[am>>2]|0}if(ao>>>0>=bB>>>0){break L340}U=c[f>>2]|0;do{if((U|0)==0){bC=1}else{r=c[U+12>>2]|0;if((r|0)==(c[U+16>>2]|0)){bD=g3[c[(c[U>>2]|0)+36>>2]&511](U)|0}else{bD=c[r>>2]|0}if((bD|0)==-1){c[f>>2]=0;bC=1;break}else{bC=(c[f>>2]|0)==0;break}}}while(0);U=c[b>>2]|0;do{if((U|0)==0){Z=275}else{r=c[U+12>>2]|0;if((r|0)==(c[U+16>>2]|0)){bE=g3[c[(c[U>>2]|0)+36>>2]&511](U)|0}else{bE=c[r>>2]|0}if((bE|0)==-1){c[b>>2]=0;Z=275;break}else{if(bC^(U|0)==0){break}else{break L342}}}}while(0);if((Z|0)==275){Z=0;if(bC){break}}U=c[f>>2]|0;r=c[U+12>>2]|0;if((r|0)==(c[U+16>>2]|0)){bF=g3[c[(c[U>>2]|0)+36>>2]&511](U)|0}else{bF=c[r>>2]|0}if((a[ak]&1)==0){bG=am}else{bG=c[an>>2]|0}if((bF|0)!=(c[bG+(ao<<2)>>2]|0)){break}r=ao+1|0;U=c[f>>2]|0;al=U+12|0;o=c[al>>2]|0;if((o|0)==(c[U+16>>2]|0)){g3[c[(c[U>>2]|0)+40>>2]&511](U)|0;ao=r;continue}else{c[al>>2]=o+4;ao=r;continue}}c[j>>2]=c[j>>2]|4;by=0;bz=ab;bA=aa;break L332}}while(0);if((ab|0)==(ac|0)){by=1;bz=ac;bA=aa;break}c[C>>2]=0;HR(v,ab,ac,C);if((c[C>>2]|0)==0){by=1;bz=ab;bA=aa;break}c[j>>2]=c[j>>2]|4;by=0;bz=ab;bA=aa}}while(0);DY(A);DY(z);DY(y);DY(x);DM(v);if((bz|0)==0){i=p;return by|0}g$[bA&1023](bz);i=p;return by|0}function HW(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0;d=i;i=i+456|0;l=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[l>>2];l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=d|0;m=d+16|0;n=d+416|0;o=d+424|0;p=d+432|0;q=d+440|0;r=d+448|0;s=n|0;c[s>>2]=m;t=n+4|0;c[t>>2]=446;u=m+400|0;D5(p,h);m=p|0;v=c[m>>2]|0;if((c[13664]|0)!=-1){c[l>>2]=54656;c[l+4>>2]=32;c[l+8>>2]=0;DH(54656,l,286)}l=(c[13665]|0)-1|0;w=c[v+8>>2]|0;do{if((c[v+12>>2]|0)-w>>2>>>0>l>>>0){x=c[w+(l<<2)>>2]|0;if((x|0)==0){break}y=x;a[q]=0;z=f|0;A=c[z>>2]|0;c[r>>2]=A;if(HV(e,r,g,p,c[h+4>>2]|0,j,q,y,n,o,u)|0){B=k;if((a[B]&1)==0){c[k+4>>2]=0;a[B]=0}else{c[c[k+8>>2]>>2]=0;c[k+4>>2]=0}B=x;if((a[q]&1)!=0){D0(k,hx[c[(c[B>>2]|0)+44>>2]&127](y,45)|0)}x=hx[c[(c[B>>2]|0)+44>>2]&127](y,48)|0;y=c[o>>2]|0;B=y-4|0;C=c[s>>2]|0;while(1){if(C>>>0>=B>>>0){break}if((c[C>>2]|0)==(x|0)){C=C+4|0}else{break}}HX(k,C,y)|0}x=e|0;B=c[x>>2]|0;do{if((B|0)==0){D=0}else{E=c[B+12>>2]|0;if((E|0)==(c[B+16>>2]|0)){F=g3[c[(c[B>>2]|0)+36>>2]&511](B)|0}else{F=c[E>>2]|0}if((F|0)!=-1){D=B;break}c[x>>2]=0;D=0}}while(0);x=(D|0)==0;do{if((A|0)==0){G=34}else{B=c[A+12>>2]|0;if((B|0)==(c[A+16>>2]|0)){H=g3[c[(c[A>>2]|0)+36>>2]&511](A)|0}else{H=c[B>>2]|0}if((H|0)==-1){c[z>>2]=0;G=34;break}else{if(x^(A|0)==0){break}else{G=36;break}}}}while(0);if((G|0)==34){if(x){G=36}}if((G|0)==36){c[j>>2]=c[j>>2]|2}c[b>>2]=D;Dn(c[m>>2]|0)|0;A=c[s>>2]|0;c[s>>2]=0;if((A|0)==0){i=d;return}g$[c[t>>2]&1023](A);i=d;return}}while(0);d=gJ(4)|0;Kr(d);eR(d|0,45560,458)}function HX(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;f=b;g=d;h=a[f]|0;i=h&255;if((i&1|0)==0){j=i>>>1}else{j=c[b+4>>2]|0}if((h&1)==0){k=1;l=h}else{h=c[b>>2]|0;k=(h&-2)-1|0;l=h&255}h=e-g>>2;if((h|0)==0){return b|0}if((k-j|0)>>>0<h>>>0){D2(b,k,j+h-k|0,j,j,0,0);m=a[f]|0}else{m=l}if((m&1)==0){n=b+4|0}else{n=c[b+8>>2]|0}m=n+(j<<2)|0;if((d|0)==(e|0)){o=m}else{l=j+((e-4+(-g|0)|0)>>>2)+1|0;g=d;d=m;while(1){c[d>>2]=c[g>>2];m=g+4|0;if((m|0)==(e|0)){break}else{g=m;d=d+4|0}}o=n+(l<<2)|0}c[o>>2]=0;o=j+h|0;if((a[f]&1)==0){a[f]=o<<1;return b|0}else{c[b+4>>2]=o;return b|0}return 0}function HY(b,d,e,f,g,h,j,k,l,m){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0;n=i;i=i+56|0;o=n|0;p=n+16|0;q=n+32|0;r=n+40|0;s=r;t=i;i=i+12|0;i=i+7&-8;u=t;v=i;i=i+12|0;i=i+7&-8;w=v;x=i;i=i+12|0;i=i+7&-8;y=x;z=i;i=i+4|0;i=i+7&-8;A=i;i=i+12|0;i=i+7&-8;B=A;D=i;i=i+12|0;i=i+7&-8;E=D;F=i;i=i+12|0;i=i+7&-8;G=F;H=i;i=i+12|0;i=i+7&-8;I=H;if(b){b=c[d>>2]|0;if((c[13780]|0)!=-1){c[p>>2]=55120;c[p+4>>2]=32;c[p+8>>2]=0;DH(55120,p,286)}p=(c[13781]|0)-1|0;J=c[b+8>>2]|0;if((c[b+12>>2]|0)-J>>2>>>0<=p>>>0){K=gJ(4)|0;L=K;Kr(L);eR(K|0,45560,458)}b=c[J+(p<<2)>>2]|0;if((b|0)==0){K=gJ(4)|0;L=K;Kr(L);eR(K|0,45560,458)}K=b;g0[c[(c[b>>2]|0)+44>>2]&511](q,K);L=e;C=c[q>>2]|0;a[L]=C;C=C>>8;a[L+1|0]=C;C=C>>8;a[L+2|0]=C;C=C>>8;a[L+3|0]=C;L=b;g0[c[(c[L>>2]|0)+32>>2]&511](r,K);q=l;if((a[q]&1)==0){c[l+4>>2]=0;a[q]=0}else{c[c[l+8>>2]>>2]=0;c[l+4>>2]=0}D$(l,0);c[q>>2]=c[s>>2];c[q+4>>2]=c[s+4>>2];c[q+8>>2]=c[s+8>>2];K1(s|0,0,12)|0;DY(r);g0[c[(c[L>>2]|0)+28>>2]&511](t,K);r=k;if((a[r]&1)==0){c[k+4>>2]=0;a[r]=0}else{c[c[k+8>>2]>>2]=0;c[k+4>>2]=0}D$(k,0);c[r>>2]=c[u>>2];c[r+4>>2]=c[u+4>>2];c[r+8>>2]=c[u+8>>2];K1(u|0,0,12)|0;DY(t);t=b;c[f>>2]=g3[c[(c[t>>2]|0)+12>>2]&511](K)|0;c[g>>2]=g3[c[(c[t>>2]|0)+16>>2]&511](K)|0;g0[c[(c[b>>2]|0)+20>>2]&511](v,K);b=h;if((a[b]&1)==0){a[h+1|0]=0;a[b]=0}else{a[c[h+8>>2]|0]=0;c[h+4>>2]=0}DR(h,0);c[b>>2]=c[w>>2];c[b+4>>2]=c[w+4>>2];c[b+8>>2]=c[w+8>>2];K1(w|0,0,12)|0;DM(v);g0[c[(c[L>>2]|0)+24>>2]&511](x,K);L=j;if((a[L]&1)==0){c[j+4>>2]=0;a[L]=0}else{c[c[j+8>>2]>>2]=0;c[j+4>>2]=0}D$(j,0);c[L>>2]=c[y>>2];c[L+4>>2]=c[y+4>>2];c[L+8>>2]=c[y+8>>2];K1(y|0,0,12)|0;DY(x);M=g3[c[(c[t>>2]|0)+36>>2]&511](K)|0;c[m>>2]=M;i=n;return}else{K=c[d>>2]|0;if((c[13782]|0)!=-1){c[o>>2]=55128;c[o+4>>2]=32;c[o+8>>2]=0;DH(55128,o,286)}o=(c[13783]|0)-1|0;d=c[K+8>>2]|0;if((c[K+12>>2]|0)-d>>2>>>0<=o>>>0){N=gJ(4)|0;O=N;Kr(O);eR(N|0,45560,458)}K=c[d+(o<<2)>>2]|0;if((K|0)==0){N=gJ(4)|0;O=N;Kr(O);eR(N|0,45560,458)}N=K;g0[c[(c[K>>2]|0)+44>>2]&511](z,N);O=e;C=c[z>>2]|0;a[O]=C;C=C>>8;a[O+1|0]=C;C=C>>8;a[O+2|0]=C;C=C>>8;a[O+3|0]=C;O=K;g0[c[(c[O>>2]|0)+32>>2]&511](A,N);z=l;if((a[z]&1)==0){c[l+4>>2]=0;a[z]=0}else{c[c[l+8>>2]>>2]=0;c[l+4>>2]=0}D$(l,0);c[z>>2]=c[B>>2];c[z+4>>2]=c[B+4>>2];c[z+8>>2]=c[B+8>>2];K1(B|0,0,12)|0;DY(A);g0[c[(c[O>>2]|0)+28>>2]&511](D,N);A=k;if((a[A]&1)==0){c[k+4>>2]=0;a[A]=0}else{c[c[k+8>>2]>>2]=0;c[k+4>>2]=0}D$(k,0);c[A>>2]=c[E>>2];c[A+4>>2]=c[E+4>>2];c[A+8>>2]=c[E+8>>2];K1(E|0,0,12)|0;DY(D);D=K;c[f>>2]=g3[c[(c[D>>2]|0)+12>>2]&511](N)|0;c[g>>2]=g3[c[(c[D>>2]|0)+16>>2]&511](N)|0;g0[c[(c[K>>2]|0)+20>>2]&511](F,N);K=h;if((a[K]&1)==0){a[h+1|0]=0;a[K]=0}else{a[c[h+8>>2]|0]=0;c[h+4>>2]=0}DR(h,0);c[K>>2]=c[G>>2];c[K+4>>2]=c[G+4>>2];c[K+8>>2]=c[G+8>>2];K1(G|0,0,12)|0;DM(F);g0[c[(c[O>>2]|0)+24>>2]&511](H,N);O=j;if((a[O]&1)==0){c[j+4>>2]=0;a[O]=0}else{c[c[j+8>>2]>>2]=0;c[j+4>>2]=0}D$(j,0);c[O>>2]=c[I>>2];c[O+4>>2]=c[I+4>>2];c[O+8>>2]=c[I+8>>2];K1(I|0,0,12)|0;DY(H);M=g3[c[(c[D>>2]|0)+36>>2]&511](N)|0;c[m>>2]=M;i=n;return}}function HZ(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;e=a+4|0;f=(c[e>>2]|0)!=446;g=a|0;a=c[g>>2]|0;h=a;i=(c[d>>2]|0)-h|0;j=i>>>0<2147483647>>>0?i<<1:-1;i=(c[b>>2]|0)-h>>2;if(f){k=a}else{k=0}a=KP(k,j)|0;k=a;if((a|0)==0){KZ()}do{if(f){c[g>>2]=k;l=k}else{a=c[g>>2]|0;c[g>>2]=k;if((a|0)==0){l=k;break}g$[c[e>>2]&1023](a);l=c[g>>2]|0}}while(0);c[e>>2]=684;c[b>>2]=l+(i<<2);c[d>>2]=(c[g>>2]|0)+(j>>>2<<2);return}function H_(a){a=a|0;Dl(a|0);KU(a);return}function H$(a){a=a|0;Dl(a|0);return}function H0(b,e,f,g,j,k,l){b=b|0;e=e|0;f=f|0;g=g|0;j=j|0;k=k|0;l=+l;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0;e=i;i=i+280|0;m=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[m>>2];m=e|0;n=e+120|0;o=e+232|0;p=e+240|0;q=e+248|0;r=e+256|0;s=e+264|0;t=s;u=i;i=i+12|0;i=i+7&-8;v=u;w=i;i=i+12|0;i=i+7&-8;x=w;y=i;i=i+4|0;i=i+7&-8;z=i;i=i+100|0;i=i+7&-8;A=i;i=i+4|0;i=i+7&-8;B=i;i=i+4|0;i=i+7&-8;C=i;i=i+4|0;i=i+7&-8;D=e+16|0;c[n>>2]=D;E=e+128|0;F=c3(D|0,100,23408,(D=i,i=i+8|0,h[D>>3]=l,D)|0)|0;i=D;do{if(F>>>0>99>>>0){do{if((a[55400]|0)==0){if((bN(55400)|0)==0){break}c[13026]=fM(2147483647,22888,0)|0}}while(0);G=Gc(n,c[13026]|0,23408,(D=i,i=i+8|0,h[D>>3]=l,D)|0)|0;i=D;H=c[n>>2]|0;if((H|0)==0){KZ();I=c[n>>2]|0}else{I=H}H=KM(G)|0;if((H|0)!=0){J=H;K=G;L=I;M=H;break}KZ();J=0;K=G;L=I;M=0}else{J=E;K=F;L=0;M=0}}while(0);D5(o,j);F=o|0;E=c[F>>2]|0;if((c[13666]|0)!=-1){c[m>>2]=54664;c[m+4>>2]=32;c[m+8>>2]=0;DH(54664,m,286)}m=(c[13667]|0)-1|0;I=c[E+8>>2]|0;do{if((c[E+12>>2]|0)-I>>2>>>0>m>>>0){D=c[I+(m<<2)>>2]|0;if((D|0)==0){break}G=D;H=c[n>>2]|0;hD[c[(c[D>>2]|0)+32>>2]&63](G,H,H+K|0,J)|0;if((K|0)==0){N=0}else{N=(a[c[n>>2]|0]|0)==45}K1(t|0,0,12)|0;K1(v|0,0,12)|0;K1(x|0,0,12)|0;H1(g,N,o,p,q,r,s,u,w,y);H=z|0;D=c[y>>2]|0;if((K|0)>(D|0)){O=d[x]|0;if((O&1|0)==0){P=O>>>1}else{P=c[w+4>>2]|0}O=d[v]|0;if((O&1|0)==0){Q=O>>>1}else{Q=c[u+4>>2]|0}R=(K-D<<1|1)+P+Q|0}else{O=d[x]|0;if((O&1|0)==0){S=O>>>1}else{S=c[w+4>>2]|0}O=d[v]|0;if((O&1|0)==0){T=O>>>1}else{T=c[u+4>>2]|0}R=S+2+T|0}O=R+D|0;do{if(O>>>0>100>>>0){U=KM(O)|0;if((U|0)!=0){V=U;W=U;break}KZ();V=0;W=0}else{V=H;W=0}}while(0);H2(V,A,B,c[j+4>>2]|0,J,J+K|0,G,N,p,a[q]|0,a[r]|0,s,u,w,D);c[C>>2]=c[f>>2];ip(b,C,V,c[A>>2]|0,c[B>>2]|0,j,k);if((W|0)!=0){KN(W)}DM(w);DM(u);DM(s);Dn(c[F>>2]|0)|0;if((M|0)!=0){KN(M)}if((L|0)==0){i=e;return}KN(L);i=e;return}}while(0);e=gJ(4)|0;Kr(e);eR(e|0,45560,458)}function H1(b,d,e,f,g,h,j,k,l,m){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0;n=i;i=i+40|0;o=n|0;p=n+16|0;q=n+32|0;r=q;s=i;i=i+12|0;i=i+7&-8;t=s;u=i;i=i+4|0;i=i+7&-8;v=u;w=i;i=i+12|0;i=i+7&-8;x=w;y=i;i=i+12|0;i=i+7&-8;z=y;A=i;i=i+12|0;i=i+7&-8;B=A;D=i;i=i+4|0;i=i+7&-8;E=D;F=i;i=i+12|0;i=i+7&-8;G=F;H=i;i=i+4|0;i=i+7&-8;I=H;J=i;i=i+12|0;i=i+7&-8;K=J;L=i;i=i+12|0;i=i+7&-8;M=L;N=i;i=i+12|0;i=i+7&-8;O=N;P=c[e>>2]|0;if(b){if((c[13784]|0)!=-1){c[p>>2]=55136;c[p+4>>2]=32;c[p+8>>2]=0;DH(55136,p,286)}p=(c[13785]|0)-1|0;b=c[P+8>>2]|0;if((c[P+12>>2]|0)-b>>2>>>0<=p>>>0){Q=gJ(4)|0;R=Q;Kr(R);eR(Q|0,45560,458)}e=c[b+(p<<2)>>2]|0;if((e|0)==0){Q=gJ(4)|0;R=Q;Kr(R);eR(Q|0,45560,458)}Q=e;R=c[e>>2]|0;if(d){g0[c[R+44>>2]&511](r,Q);r=f;C=c[q>>2]|0;a[r]=C;C=C>>8;a[r+1|0]=C;C=C>>8;a[r+2|0]=C;C=C>>8;a[r+3|0]=C;g0[c[(c[e>>2]|0)+32>>2]&511](s,Q);r=l;if((a[r]&1)==0){a[l+1|0]=0;a[r]=0}else{a[c[l+8>>2]|0]=0;c[l+4>>2]=0}DR(l,0);c[r>>2]=c[t>>2];c[r+4>>2]=c[t+4>>2];c[r+8>>2]=c[t+8>>2];K1(t|0,0,12)|0;DM(s)}else{g0[c[R+40>>2]&511](v,Q);v=f;C=c[u>>2]|0;a[v]=C;C=C>>8;a[v+1|0]=C;C=C>>8;a[v+2|0]=C;C=C>>8;a[v+3|0]=C;g0[c[(c[e>>2]|0)+28>>2]&511](w,Q);v=l;if((a[v]&1)==0){a[l+1|0]=0;a[v]=0}else{a[c[l+8>>2]|0]=0;c[l+4>>2]=0}DR(l,0);c[v>>2]=c[x>>2];c[v+4>>2]=c[x+4>>2];c[v+8>>2]=c[x+8>>2];K1(x|0,0,12)|0;DM(w)}w=e;a[g]=g3[c[(c[w>>2]|0)+12>>2]&511](Q)|0;a[h]=g3[c[(c[w>>2]|0)+16>>2]&511](Q)|0;w=e;g0[c[(c[w>>2]|0)+20>>2]&511](y,Q);x=j;if((a[x]&1)==0){a[j+1|0]=0;a[x]=0}else{a[c[j+8>>2]|0]=0;c[j+4>>2]=0}DR(j,0);c[x>>2]=c[z>>2];c[x+4>>2]=c[z+4>>2];c[x+8>>2]=c[z+8>>2];K1(z|0,0,12)|0;DM(y);g0[c[(c[w>>2]|0)+24>>2]&511](A,Q);w=k;if((a[w]&1)==0){a[k+1|0]=0;a[w]=0}else{a[c[k+8>>2]|0]=0;c[k+4>>2]=0}DR(k,0);c[w>>2]=c[B>>2];c[w+4>>2]=c[B+4>>2];c[w+8>>2]=c[B+8>>2];K1(B|0,0,12)|0;DM(A);S=g3[c[(c[e>>2]|0)+36>>2]&511](Q)|0;c[m>>2]=S;i=n;return}else{if((c[13786]|0)!=-1){c[o>>2]=55144;c[o+4>>2]=32;c[o+8>>2]=0;DH(55144,o,286)}o=(c[13787]|0)-1|0;Q=c[P+8>>2]|0;if((c[P+12>>2]|0)-Q>>2>>>0<=o>>>0){T=gJ(4)|0;U=T;Kr(U);eR(T|0,45560,458)}P=c[Q+(o<<2)>>2]|0;if((P|0)==0){T=gJ(4)|0;U=T;Kr(U);eR(T|0,45560,458)}T=P;U=c[P>>2]|0;if(d){g0[c[U+44>>2]&511](E,T);E=f;C=c[D>>2]|0;a[E]=C;C=C>>8;a[E+1|0]=C;C=C>>8;a[E+2|0]=C;C=C>>8;a[E+3|0]=C;g0[c[(c[P>>2]|0)+32>>2]&511](F,T);E=l;if((a[E]&1)==0){a[l+1|0]=0;a[E]=0}else{a[c[l+8>>2]|0]=0;c[l+4>>2]=0}DR(l,0);c[E>>2]=c[G>>2];c[E+4>>2]=c[G+4>>2];c[E+8>>2]=c[G+8>>2];K1(G|0,0,12)|0;DM(F)}else{g0[c[U+40>>2]&511](I,T);I=f;C=c[H>>2]|0;a[I]=C;C=C>>8;a[I+1|0]=C;C=C>>8;a[I+2|0]=C;C=C>>8;a[I+3|0]=C;g0[c[(c[P>>2]|0)+28>>2]&511](J,T);I=l;if((a[I]&1)==0){a[l+1|0]=0;a[I]=0}else{a[c[l+8>>2]|0]=0;c[l+4>>2]=0}DR(l,0);c[I>>2]=c[K>>2];c[I+4>>2]=c[K+4>>2];c[I+8>>2]=c[K+8>>2];K1(K|0,0,12)|0;DM(J)}J=P;a[g]=g3[c[(c[J>>2]|0)+12>>2]&511](T)|0;a[h]=g3[c[(c[J>>2]|0)+16>>2]&511](T)|0;J=P;g0[c[(c[J>>2]|0)+20>>2]&511](L,T);h=j;if((a[h]&1)==0){a[j+1|0]=0;a[h]=0}else{a[c[j+8>>2]|0]=0;c[j+4>>2]=0}DR(j,0);c[h>>2]=c[M>>2];c[h+4>>2]=c[M+4>>2];c[h+8>>2]=c[M+8>>2];K1(M|0,0,12)|0;DM(L);g0[c[(c[J>>2]|0)+24>>2]&511](N,T);J=k;if((a[J]&1)==0){a[k+1|0]=0;a[J]=0}else{a[c[k+8>>2]|0]=0;c[k+4>>2]=0}DR(k,0);c[J>>2]=c[O>>2];c[J+4>>2]=c[O+4>>2];c[J+8>>2]=c[O+8>>2];K1(O|0,0,12)|0;DM(N);S=g3[c[(c[P>>2]|0)+36>>2]&511](T)|0;c[m>>2]=S;i=n;return}}function H2(d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;p=p|0;q=q|0;r=r|0;var s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0,ai=0,aj=0,ak=0,al=0,am=0,an=0,ao=0,ap=0,aq=0,ar=0,as=0,at=0,au=0,av=0,aw=0,ax=0,ay=0;c[f>>2]=d;s=j;t=q;u=q+1|0;v=q+8|0;w=q+4|0;q=p;x=(g&512|0)==0;y=p+1|0;z=p+4|0;A=p+8|0;p=j+8|0;B=(r|0)>0;C=o;D=o+1|0;E=o+8|0;F=o+4|0;o=-r|0;G=h;h=0;while(1){L3:do{switch(a[l+h|0]|0){case 0:{c[e>>2]=c[f>>2];H=G;break};case 1:{c[e>>2]=c[f>>2];I=hx[c[(c[s>>2]|0)+28>>2]&127](j,32)|0;J=c[f>>2]|0;c[f>>2]=J+1;a[J]=I;H=G;break};case 3:{I=a[t]|0;J=I&255;if((J&1|0)==0){K=J>>>1}else{K=c[w>>2]|0}if((K|0)==0){H=G;break L3}if((I&1)==0){L=u}else{L=c[v>>2]|0}I=a[L]|0;J=c[f>>2]|0;c[f>>2]=J+1;a[J]=I;H=G;break};case 2:{I=a[q]|0;J=I&255;M=(J&1|0)==0;if(M){N=J>>>1}else{N=c[z>>2]|0}if((N|0)==0|x){H=G;break L3}if((I&1)==0){O=y;P=y}else{I=c[A>>2]|0;O=I;P=I}if(M){Q=J>>>1}else{Q=c[z>>2]|0}J=O+Q|0;M=c[f>>2]|0;if((P|0)==(J|0)){R=M}else{I=P;S=M;while(1){a[S]=a[I]|0;M=I+1|0;T=S+1|0;if((M|0)==(J|0)){R=T;break}else{I=M;S=T}}}c[f>>2]=R;H=G;break};case 4:{S=c[f>>2]|0;I=k?G+1|0:G;J=I;while(1){if(J>>>0>=i>>>0){break}T=a[J]|0;if(T<<24>>24<0){break}if((b[(c[p>>2]|0)+(T<<24>>24<<1)>>1]&2048)==0){break}else{J=J+1|0}}T=J;if(B){if(J>>>0>I>>>0){M=I+(-T|0)|0;T=M>>>0<o>>>0?o:M;M=T+r|0;U=J;V=r;W=S;while(1){X=U-1|0;Y=a[X]|0;c[f>>2]=W+1;a[W]=Y;Y=V-1|0;Z=(Y|0)>0;if(!(X>>>0>I>>>0&Z)){break}U=X;V=Y;W=c[f>>2]|0}W=J+T|0;if(Z){_=M;$=W;aa=34}else{ab=0;ac=M;ad=W}}else{_=r;$=J;aa=34}if((aa|0)==34){aa=0;ab=hx[c[(c[s>>2]|0)+28>>2]&127](j,48)|0;ac=_;ad=$}W=c[f>>2]|0;c[f>>2]=W+1;if((ac|0)>0){V=ac;U=W;while(1){a[U]=ab;Y=V-1|0;X=c[f>>2]|0;c[f>>2]=X+1;if((Y|0)>0){V=Y;U=X}else{ae=X;break}}}else{ae=W}a[ae]=m;af=ad}else{af=J}if((af|0)==(I|0)){U=hx[c[(c[s>>2]|0)+28>>2]&127](j,48)|0;V=c[f>>2]|0;c[f>>2]=V+1;a[V]=U}else{U=a[C]|0;V=U&255;if((V&1|0)==0){ag=V>>>1}else{ag=c[F>>2]|0}if((ag|0)==0){ah=af;ai=0;aj=0;ak=-1}else{if((U&1)==0){al=D}else{al=c[E>>2]|0}ah=af;ai=0;aj=0;ak=a[al]|0}while(1){do{if((ai|0)==(ak|0)){U=c[f>>2]|0;c[f>>2]=U+1;a[U]=n;U=aj+1|0;V=a[C]|0;M=V&255;if((M&1|0)==0){am=M>>>1}else{am=c[F>>2]|0}if(U>>>0>=am>>>0){an=ak;ao=U;ap=0;break}M=(V&1)==0;if(M){aq=D}else{aq=c[E>>2]|0}if((a[aq+U|0]|0)==127){an=-1;ao=U;ap=0;break}if(M){ar=D}else{ar=c[E>>2]|0}an=a[ar+U|0]|0;ao=U;ap=0}else{an=ak;ao=aj;ap=ai}}while(0);U=ah-1|0;M=a[U]|0;V=c[f>>2]|0;c[f>>2]=V+1;a[V]=M;if((U|0)==(I|0)){break}else{ah=U;ai=ap+1|0;aj=ao;ak=an}}}J=c[f>>2]|0;if((S|0)==(J|0)){H=I;break L3}W=J-1|0;if(S>>>0<W>>>0){as=S;at=W}else{H=I;break L3}while(1){W=a[as]|0;a[as]=a[at]|0;a[at]=W;W=as+1|0;J=at-1|0;if(W>>>0<J>>>0){as=W;at=J}else{H=I;break}}break};default:{H=G}}}while(0);I=h+1|0;if(I>>>0<4>>>0){G=H;h=I}else{break}}h=a[t]|0;t=h&255;H=(t&1|0)==0;if(H){au=t>>>1}else{au=c[w>>2]|0}if(au>>>0>1>>>0){if((h&1)==0){av=u;aw=u}else{u=c[v>>2]|0;av=u;aw=u}if(H){ax=t>>>1}else{ax=c[w>>2]|0}w=av+ax|0;ax=c[f>>2]|0;av=aw+1|0;if((av|0)==(w|0)){ay=ax}else{aw=ax;ax=av;while(1){a[aw]=a[ax]|0;av=aw+1|0;t=ax+1|0;if((t|0)==(w|0)){ay=av;break}else{aw=av;ax=t}}}c[f>>2]=ay}ay=g&176;if((ay|0)==32){c[e>>2]=c[f>>2];return}else if((ay|0)==16){return}else{c[e>>2]=d;return}}function H3(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0;e=i;i=i+64|0;l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=e|0;m=e+16|0;n=e+24|0;o=e+32|0;p=e+40|0;q=e+48|0;r=q;s=i;i=i+12|0;i=i+7&-8;t=s;u=i;i=i+12|0;i=i+7&-8;v=u;w=i;i=i+4|0;i=i+7&-8;x=i;i=i+100|0;i=i+7&-8;y=i;i=i+4|0;i=i+7&-8;z=i;i=i+4|0;i=i+7&-8;A=i;i=i+4|0;i=i+7&-8;D5(m,h);B=m|0;C=c[B>>2]|0;if((c[13666]|0)!=-1){c[l>>2]=54664;c[l+4>>2]=32;c[l+8>>2]=0;DH(54664,l,286)}l=(c[13667]|0)-1|0;D=c[C+8>>2]|0;do{if((c[C+12>>2]|0)-D>>2>>>0>l>>>0){E=c[D+(l<<2)>>2]|0;if((E|0)==0){break}F=E;G=k;H=k;I=a[H]|0;J=I&255;if((J&1|0)==0){K=J>>>1}else{K=c[k+4>>2]|0}if((K|0)==0){L=0}else{if((I&1)==0){M=G+1|0}else{M=c[k+8>>2]|0}I=a[M]|0;L=I<<24>>24==(hx[c[(c[E>>2]|0)+28>>2]&127](F,45)|0)<<24>>24}K1(r|0,0,12)|0;K1(t|0,0,12)|0;K1(v|0,0,12)|0;H1(g,L,m,n,o,p,q,s,u,w);E=x|0;I=a[H]|0;J=I&255;N=(J&1|0)==0;if(N){O=J>>>1}else{O=c[k+4>>2]|0}P=c[w>>2]|0;if((O|0)>(P|0)){if(N){Q=J>>>1}else{Q=c[k+4>>2]|0}J=d[v]|0;if((J&1|0)==0){R=J>>>1}else{R=c[u+4>>2]|0}J=d[t]|0;if((J&1|0)==0){S=J>>>1}else{S=c[s+4>>2]|0}T=(Q-P<<1|1)+R+S|0}else{J=d[v]|0;if((J&1|0)==0){U=J>>>1}else{U=c[u+4>>2]|0}J=d[t]|0;if((J&1|0)==0){V=J>>>1}else{V=c[s+4>>2]|0}T=U+2+V|0}J=T+P|0;do{if(J>>>0>100>>>0){N=KM(J)|0;if((N|0)!=0){W=N;X=N;Y=I;break}KZ();W=0;X=0;Y=a[H]|0}else{W=E;X=0;Y=I}}while(0);if((Y&1)==0){Z=G+1|0;_=G+1|0}else{I=c[k+8>>2]|0;Z=I;_=I}I=Y&255;if((I&1|0)==0){$=I>>>1}else{$=c[k+4>>2]|0}H2(W,y,z,c[h+4>>2]|0,_,Z+$|0,F,L,n,a[o]|0,a[p]|0,q,s,u,P);c[A>>2]=c[f>>2];ip(b,A,W,c[y>>2]|0,c[z>>2]|0,h,j);if((X|0)==0){DM(u);DM(s);DM(q);aa=c[B>>2]|0;ab=aa|0;ac=Dn(ab)|0;i=e;return}KN(X);DM(u);DM(s);DM(q);aa=c[B>>2]|0;ab=aa|0;ac=Dn(ab)|0;i=e;return}}while(0);e=gJ(4)|0;Kr(e);eR(e|0,45560,458)}function H4(a){a=a|0;Dl(a|0);KU(a);return}function H5(a){a=a|0;Dl(a|0);return}function H6(b,e,f,g,j,k,l){b=b|0;e=e|0;f=f|0;g=g|0;j=j|0;k=k|0;l=+l;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0;e=i;i=i+576|0;m=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[m>>2];m=e|0;n=e+120|0;o=e+528|0;p=e+536|0;q=e+544|0;r=e+552|0;s=e+560|0;t=s;u=i;i=i+12|0;i=i+7&-8;v=u;w=i;i=i+12|0;i=i+7&-8;x=w;y=i;i=i+4|0;i=i+7&-8;z=i;i=i+400|0;A=i;i=i+4|0;i=i+7&-8;B=i;i=i+4|0;i=i+7&-8;C=i;i=i+4|0;i=i+7&-8;D=e+16|0;c[n>>2]=D;E=e+128|0;F=c3(D|0,100,23408,(D=i,i=i+8|0,h[D>>3]=l,D)|0)|0;i=D;do{if(F>>>0>99>>>0){do{if((a[55400]|0)==0){if((bN(55400)|0)==0){break}c[13026]=fM(2147483647,22888,0)|0}}while(0);G=Gc(n,c[13026]|0,23408,(D=i,i=i+8|0,h[D>>3]=l,D)|0)|0;i=D;H=c[n>>2]|0;if((H|0)==0){KZ();I=c[n>>2]|0}else{I=H}H=KM(G<<2)|0;J=H;if((H|0)!=0){K=J;L=G;M=I;N=J;break}KZ();K=J;L=G;M=I;N=J}else{K=E;L=F;M=0;N=0}}while(0);D5(o,j);F=o|0;E=c[F>>2]|0;if((c[13664]|0)!=-1){c[m>>2]=54656;c[m+4>>2]=32;c[m+8>>2]=0;DH(54656,m,286)}m=(c[13665]|0)-1|0;I=c[E+8>>2]|0;do{if((c[E+12>>2]|0)-I>>2>>>0>m>>>0){D=c[I+(m<<2)>>2]|0;if((D|0)==0){break}J=D;G=c[n>>2]|0;hD[c[(c[D>>2]|0)+48>>2]&63](J,G,G+L|0,K)|0;if((L|0)==0){O=0}else{O=(a[c[n>>2]|0]|0)==45}K1(t|0,0,12)|0;K1(v|0,0,12)|0;K1(x|0,0,12)|0;H7(g,O,o,p,q,r,s,u,w,y);G=z|0;D=c[y>>2]|0;if((L|0)>(D|0)){H=d[x]|0;if((H&1|0)==0){P=H>>>1}else{P=c[w+4>>2]|0}H=d[v]|0;if((H&1|0)==0){Q=H>>>1}else{Q=c[u+4>>2]|0}R=(L-D<<1|1)+P+Q|0}else{H=d[x]|0;if((H&1|0)==0){S=H>>>1}else{S=c[w+4>>2]|0}H=d[v]|0;if((H&1|0)==0){T=H>>>1}else{T=c[u+4>>2]|0}R=S+2+T|0}H=R+D|0;do{if(H>>>0>100>>>0){U=KM(H<<2)|0;V=U;if((U|0)!=0){W=V;X=V;break}KZ();W=V;X=V}else{W=G;X=0}}while(0);H8(W,A,B,c[j+4>>2]|0,K,K+(L<<2)|0,J,O,p,c[q>>2]|0,c[r>>2]|0,s,u,w,D);c[C>>2]=c[f>>2];Gl(b,C,W,c[A>>2]|0,c[B>>2]|0,j,k);if((X|0)!=0){KN(X)}DY(w);DY(u);DM(s);Dn(c[F>>2]|0)|0;if((N|0)!=0){KN(N)}if((M|0)==0){i=e;return}KN(M);i=e;return}}while(0);e=gJ(4)|0;Kr(e);eR(e|0,45560,458)}function H7(b,d,e,f,g,h,j,k,l,m){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0;n=i;i=i+40|0;o=n|0;p=n+16|0;q=n+32|0;r=q;s=i;i=i+12|0;i=i+7&-8;t=s;u=i;i=i+4|0;i=i+7&-8;v=u;w=i;i=i+12|0;i=i+7&-8;x=w;y=i;i=i+12|0;i=i+7&-8;z=y;A=i;i=i+12|0;i=i+7&-8;B=A;D=i;i=i+4|0;i=i+7&-8;E=D;F=i;i=i+12|0;i=i+7&-8;G=F;H=i;i=i+4|0;i=i+7&-8;I=H;J=i;i=i+12|0;i=i+7&-8;K=J;L=i;i=i+12|0;i=i+7&-8;M=L;N=i;i=i+12|0;i=i+7&-8;O=N;P=c[e>>2]|0;if(b){if((c[13780]|0)!=-1){c[p>>2]=55120;c[p+4>>2]=32;c[p+8>>2]=0;DH(55120,p,286)}p=(c[13781]|0)-1|0;b=c[P+8>>2]|0;if((c[P+12>>2]|0)-b>>2>>>0<=p>>>0){Q=gJ(4)|0;R=Q;Kr(R);eR(Q|0,45560,458)}e=c[b+(p<<2)>>2]|0;if((e|0)==0){Q=gJ(4)|0;R=Q;Kr(R);eR(Q|0,45560,458)}Q=e;R=c[e>>2]|0;if(d){g0[c[R+44>>2]&511](r,Q);r=f;C=c[q>>2]|0;a[r]=C;C=C>>8;a[r+1|0]=C;C=C>>8;a[r+2|0]=C;C=C>>8;a[r+3|0]=C;g0[c[(c[e>>2]|0)+32>>2]&511](s,Q);r=l;if((a[r]&1)==0){c[l+4>>2]=0;a[r]=0}else{c[c[l+8>>2]>>2]=0;c[l+4>>2]=0}D$(l,0);c[r>>2]=c[t>>2];c[r+4>>2]=c[t+4>>2];c[r+8>>2]=c[t+8>>2];K1(t|0,0,12)|0;DY(s)}else{g0[c[R+40>>2]&511](v,Q);v=f;C=c[u>>2]|0;a[v]=C;C=C>>8;a[v+1|0]=C;C=C>>8;a[v+2|0]=C;C=C>>8;a[v+3|0]=C;g0[c[(c[e>>2]|0)+28>>2]&511](w,Q);v=l;if((a[v]&1)==0){c[l+4>>2]=0;a[v]=0}else{c[c[l+8>>2]>>2]=0;c[l+4>>2]=0}D$(l,0);c[v>>2]=c[x>>2];c[v+4>>2]=c[x+4>>2];c[v+8>>2]=c[x+8>>2];K1(x|0,0,12)|0;DY(w)}w=e;c[g>>2]=g3[c[(c[w>>2]|0)+12>>2]&511](Q)|0;c[h>>2]=g3[c[(c[w>>2]|0)+16>>2]&511](Q)|0;g0[c[(c[e>>2]|0)+20>>2]&511](y,Q);x=j;if((a[x]&1)==0){a[j+1|0]=0;a[x]=0}else{a[c[j+8>>2]|0]=0;c[j+4>>2]=0}DR(j,0);c[x>>2]=c[z>>2];c[x+4>>2]=c[z+4>>2];c[x+8>>2]=c[z+8>>2];K1(z|0,0,12)|0;DM(y);g0[c[(c[e>>2]|0)+24>>2]&511](A,Q);e=k;if((a[e]&1)==0){c[k+4>>2]=0;a[e]=0}else{c[c[k+8>>2]>>2]=0;c[k+4>>2]=0}D$(k,0);c[e>>2]=c[B>>2];c[e+4>>2]=c[B+4>>2];c[e+8>>2]=c[B+8>>2];K1(B|0,0,12)|0;DY(A);S=g3[c[(c[w>>2]|0)+36>>2]&511](Q)|0;c[m>>2]=S;i=n;return}else{if((c[13782]|0)!=-1){c[o>>2]=55128;c[o+4>>2]=32;c[o+8>>2]=0;DH(55128,o,286)}o=(c[13783]|0)-1|0;Q=c[P+8>>2]|0;if((c[P+12>>2]|0)-Q>>2>>>0<=o>>>0){T=gJ(4)|0;U=T;Kr(U);eR(T|0,45560,458)}P=c[Q+(o<<2)>>2]|0;if((P|0)==0){T=gJ(4)|0;U=T;Kr(U);eR(T|0,45560,458)}T=P;U=c[P>>2]|0;if(d){g0[c[U+44>>2]&511](E,T);E=f;C=c[D>>2]|0;a[E]=C;C=C>>8;a[E+1|0]=C;C=C>>8;a[E+2|0]=C;C=C>>8;a[E+3|0]=C;g0[c[(c[P>>2]|0)+32>>2]&511](F,T);E=l;if((a[E]&1)==0){c[l+4>>2]=0;a[E]=0}else{c[c[l+8>>2]>>2]=0;c[l+4>>2]=0}D$(l,0);c[E>>2]=c[G>>2];c[E+4>>2]=c[G+4>>2];c[E+8>>2]=c[G+8>>2];K1(G|0,0,12)|0;DY(F)}else{g0[c[U+40>>2]&511](I,T);I=f;C=c[H>>2]|0;a[I]=C;C=C>>8;a[I+1|0]=C;C=C>>8;a[I+2|0]=C;C=C>>8;a[I+3|0]=C;g0[c[(c[P>>2]|0)+28>>2]&511](J,T);I=l;if((a[I]&1)==0){c[l+4>>2]=0;a[I]=0}else{c[c[l+8>>2]>>2]=0;c[l+4>>2]=0}D$(l,0);c[I>>2]=c[K>>2];c[I+4>>2]=c[K+4>>2];c[I+8>>2]=c[K+8>>2];K1(K|0,0,12)|0;DY(J)}J=P;c[g>>2]=g3[c[(c[J>>2]|0)+12>>2]&511](T)|0;c[h>>2]=g3[c[(c[J>>2]|0)+16>>2]&511](T)|0;g0[c[(c[P>>2]|0)+20>>2]&511](L,T);h=j;if((a[h]&1)==0){a[j+1|0]=0;a[h]=0}else{a[c[j+8>>2]|0]=0;c[j+4>>2]=0}DR(j,0);c[h>>2]=c[M>>2];c[h+4>>2]=c[M+4>>2];c[h+8>>2]=c[M+8>>2];K1(M|0,0,12)|0;DM(L);g0[c[(c[P>>2]|0)+24>>2]&511](N,T);P=k;if((a[P]&1)==0){c[k+4>>2]=0;a[P]=0}else{c[c[k+8>>2]>>2]=0;c[k+4>>2]=0}D$(k,0);c[P>>2]=c[O>>2];c[P+4>>2]=c[O+4>>2];c[P+8>>2]=c[O+8>>2];K1(O|0,0,12)|0;DY(N);S=g3[c[(c[J>>2]|0)+36>>2]&511](T)|0;c[m>>2]=S;i=n;return}}function H8(b,d,e,f,g,h,i,j,k,l,m,n,o,p,q){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;p=p|0;q=q|0;var r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0,ai=0,aj=0,ak=0,al=0,am=0,an=0,ao=0,ap=0,aq=0,ar=0,as=0,at=0,au=0,av=0,aw=0;c[e>>2]=b;r=i;s=p;t=p+4|0;u=p+8|0;p=o;v=(f&512|0)==0;w=o+4|0;x=o+8|0;o=i;y=(q|0)>0;z=n;A=n+1|0;B=n+8|0;C=n+4|0;n=g;g=0;while(1){L3:do{switch(a[k+g|0]|0){case 0:{c[d>>2]=c[e>>2];D=n;break};case 1:{c[d>>2]=c[e>>2];E=hx[c[(c[r>>2]|0)+44>>2]&127](i,32)|0;F=c[e>>2]|0;c[e>>2]=F+4;c[F>>2]=E;D=n;break};case 3:{E=a[s]|0;F=E&255;if((F&1|0)==0){G=F>>>1}else{G=c[t>>2]|0}if((G|0)==0){D=n;break L3}if((E&1)==0){H=t}else{H=c[u>>2]|0}E=c[H>>2]|0;F=c[e>>2]|0;c[e>>2]=F+4;c[F>>2]=E;D=n;break};case 2:{E=a[p]|0;F=E&255;I=(F&1|0)==0;if(I){J=F>>>1}else{J=c[w>>2]|0}if((J|0)==0|v){D=n;break L3}if((E&1)==0){K=w;L=w;M=w}else{E=c[x>>2]|0;K=E;L=E;M=E}if(I){N=F>>>1}else{N=c[w>>2]|0}F=K+(N<<2)|0;I=c[e>>2]|0;if((L|0)==(F|0)){O=I}else{E=(K+(N-1<<2)+(-M|0)|0)>>>2;P=L;Q=I;while(1){c[Q>>2]=c[P>>2];R=P+4|0;if((R|0)==(F|0)){break}P=R;Q=Q+4|0}O=I+(E+1<<2)|0}c[e>>2]=O;D=n;break};case 4:{Q=c[e>>2]|0;P=j?n+4|0:n;F=P;while(1){if(F>>>0>=h>>>0){break}if(hd[c[(c[o>>2]|0)+12>>2]&127](i,2048,c[F>>2]|0)|0){F=F+4|0}else{break}}if(y){if(F>>>0>P>>>0){E=F;I=q;do{E=E-4|0;R=c[E>>2]|0;S=c[e>>2]|0;c[e>>2]=S+4;c[S>>2]=R;I=I-1|0;T=(I|0)>0;}while(E>>>0>P>>>0&T);if(T){U=I;V=E;W=35}else{X=0;Y=I;Z=E}}else{U=q;V=F;W=35}if((W|0)==35){W=0;X=hx[c[(c[r>>2]|0)+44>>2]&127](i,48)|0;Y=U;Z=V}R=c[e>>2]|0;c[e>>2]=R+4;if((Y|0)>0){S=Y;_=R;while(1){c[_>>2]=X;$=S-1|0;aa=c[e>>2]|0;c[e>>2]=aa+4;if(($|0)>0){S=$;_=aa}else{ab=aa;break}}}else{ab=R}c[ab>>2]=l;ac=Z}else{ac=F}if((ac|0)==(P|0)){_=hx[c[(c[r>>2]|0)+44>>2]&127](i,48)|0;S=c[e>>2]|0;c[e>>2]=S+4;c[S>>2]=_}else{_=a[z]|0;S=_&255;if((S&1|0)==0){ad=S>>>1}else{ad=c[C>>2]|0}if((ad|0)==0){ae=ac;af=0;ag=0;ah=-1}else{if((_&1)==0){ai=A}else{ai=c[B>>2]|0}ae=ac;af=0;ag=0;ah=a[ai]|0}while(1){do{if((af|0)==(ah|0)){_=c[e>>2]|0;c[e>>2]=_+4;c[_>>2]=m;_=ag+1|0;S=a[z]|0;E=S&255;if((E&1|0)==0){aj=E>>>1}else{aj=c[C>>2]|0}if(_>>>0>=aj>>>0){ak=ah;al=_;am=0;break}E=(S&1)==0;if(E){an=A}else{an=c[B>>2]|0}if((a[an+_|0]|0)==127){ak=-1;al=_;am=0;break}if(E){ao=A}else{ao=c[B>>2]|0}ak=a[ao+_|0]|0;al=_;am=0}else{ak=ah;al=ag;am=af}}while(0);_=ae-4|0;E=c[_>>2]|0;S=c[e>>2]|0;c[e>>2]=S+4;c[S>>2]=E;if((_|0)==(P|0)){break}else{ae=_;af=am+1|0;ag=al;ah=ak}}}F=c[e>>2]|0;if((Q|0)==(F|0)){D=P;break L3}R=F-4|0;if(Q>>>0<R>>>0){ap=Q;aq=R}else{D=P;break L3}while(1){R=c[ap>>2]|0;c[ap>>2]=c[aq>>2];c[aq>>2]=R;R=ap+4|0;F=aq-4|0;if(R>>>0<F>>>0){ap=R;aq=F}else{D=P;break}}break};default:{D=n}}}while(0);P=g+1|0;if(P>>>0<4>>>0){n=D;g=P}else{break}}g=a[s]|0;s=g&255;D=(s&1|0)==0;if(D){ar=s>>>1}else{ar=c[t>>2]|0}if(ar>>>0>1>>>0){if((g&1)==0){as=t;at=t;au=t}else{g=c[u>>2]|0;as=g;at=g;au=g}if(D){av=s>>>1}else{av=c[t>>2]|0}t=as+(av<<2)|0;s=c[e>>2]|0;D=at+4|0;if((D|0)==(t|0)){aw=s}else{at=((as+(av-2<<2)+(-au|0)|0)>>>2)+1|0;au=s;av=D;while(1){c[au>>2]=c[av>>2];D=av+4|0;if((D|0)==(t|0)){break}else{au=au+4|0;av=D}}aw=s+(at<<2)|0}c[e>>2]=aw}aw=f&176;if((aw|0)==16){return}else if((aw|0)==32){c[d>>2]=c[e>>2];return}else{c[d>>2]=b;return}}function H9(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0;e=i;i=i+64|0;l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=e|0;m=e+16|0;n=e+24|0;o=e+32|0;p=e+40|0;q=e+48|0;r=q;s=i;i=i+12|0;i=i+7&-8;t=s;u=i;i=i+12|0;i=i+7&-8;v=u;w=i;i=i+4|0;i=i+7&-8;x=i;i=i+400|0;y=i;i=i+4|0;i=i+7&-8;z=i;i=i+4|0;i=i+7&-8;A=i;i=i+4|0;i=i+7&-8;D5(m,h);B=m|0;C=c[B>>2]|0;if((c[13664]|0)!=-1){c[l>>2]=54656;c[l+4>>2]=32;c[l+8>>2]=0;DH(54656,l,286)}l=(c[13665]|0)-1|0;D=c[C+8>>2]|0;do{if((c[C+12>>2]|0)-D>>2>>>0>l>>>0){E=c[D+(l<<2)>>2]|0;if((E|0)==0){break}F=E;G=k;H=a[G]|0;I=H&255;if((I&1|0)==0){J=I>>>1}else{J=c[k+4>>2]|0}if((J|0)==0){K=0}else{if((H&1)==0){L=k+4|0}else{L=c[k+8>>2]|0}H=c[L>>2]|0;K=(H|0)==(hx[c[(c[E>>2]|0)+44>>2]&127](F,45)|0)}K1(r|0,0,12)|0;K1(t|0,0,12)|0;K1(v|0,0,12)|0;H7(g,K,m,n,o,p,q,s,u,w);E=x|0;H=a[G]|0;I=H&255;M=(I&1|0)==0;if(M){N=I>>>1}else{N=c[k+4>>2]|0}O=c[w>>2]|0;if((N|0)>(O|0)){if(M){P=I>>>1}else{P=c[k+4>>2]|0}I=d[v]|0;if((I&1|0)==0){Q=I>>>1}else{Q=c[u+4>>2]|0}I=d[t]|0;if((I&1|0)==0){R=I>>>1}else{R=c[s+4>>2]|0}S=(P-O<<1|1)+Q+R|0}else{I=d[v]|0;if((I&1|0)==0){T=I>>>1}else{T=c[u+4>>2]|0}I=d[t]|0;if((I&1|0)==0){U=I>>>1}else{U=c[s+4>>2]|0}S=T+2+U|0}I=S+O|0;do{if(I>>>0>100>>>0){M=KM(I<<2)|0;V=M;if((M|0)!=0){W=V;X=V;Y=H;break}KZ();W=V;X=V;Y=a[G]|0}else{W=E;X=0;Y=H}}while(0);if((Y&1)==0){Z=k+4|0;_=k+4|0}else{H=c[k+8>>2]|0;Z=H;_=H}H=Y&255;if((H&1|0)==0){$=H>>>1}else{$=c[k+4>>2]|0}H8(W,y,z,c[h+4>>2]|0,_,Z+($<<2)|0,F,K,n,c[o>>2]|0,c[p>>2]|0,q,s,u,O);c[A>>2]=c[f>>2];Gl(b,A,W,c[y>>2]|0,c[z>>2]|0,h,j);if((X|0)==0){DY(u);DY(s);DM(q);aa=c[B>>2]|0;ab=aa|0;ac=Dn(ab)|0;i=e;return}KN(X);DY(u);DY(s);DM(q);aa=c[B>>2]|0;ab=aa|0;ac=Dn(ab)|0;i=e;return}}while(0);e=gJ(4)|0;Kr(e);eR(e|0,45560,458)}function Ia(a){a=a|0;Dl(a|0);KU(a);return}function Ib(a){a=a|0;Dl(a|0);return}function Ic(b,d,e){b=b|0;d=d|0;e=e|0;var f=0;if((a[d]&1)==0){f=d+1|0}else{f=c[d+8>>2]|0}d=dU(f|0,1)|0;return d>>>(((d|0)!=-1|0)>>>0)|0}function Id(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;d=i;i=i+16|0;j=d|0;k=j;K1(k|0,0,12)|0;l=b;m=h;n=a[h]|0;if((n&1)==0){o=m+1|0;p=m+1|0}else{m=c[h+8>>2]|0;o=m;p=m}m=n&255;if((m&1|0)==0){q=m>>>1}else{q=c[h+4>>2]|0}h=o+q|0;do{if(p>>>0<h>>>0){q=p;do{DS(j,a[q]|0);q=q+1|0;}while(q>>>0<h>>>0);q=(e|0)==-1?-1:e<<1;if((a[k]&1)==0){r=q;s=16;break}t=c[j+8>>2]|0;u=q}else{r=(e|0)==-1?-1:e<<1;s=16}}while(0);if((s|0)==16){t=j+1|0;u=r}r=df(u|0,f|0,g|0,t|0)|0;K1(l|0,0,12)|0;l=K0(r|0)|0;t=r+l|0;if((l|0)>0){v=r}else{DM(j);i=d;return}do{DS(b,a[v]|0);v=v+1|0;}while(v>>>0<t>>>0);DM(j);i=d;return}function Ie(a,b){a=a|0;b=b|0;cl(((b|0)==-1?-1:b<<1)|0)|0;return}function If(a){a=a|0;Dl(a|0);KU(a);return}function Ig(a){a=a|0;Dl(a|0);return}function Ih(b,d,e){b=b|0;d=d|0;e=e|0;var f=0;if((a[d]&1)==0){f=d+1|0}else{f=c[d+8>>2]|0}d=dU(f|0,1)|0;return d>>>(((d|0)!=-1|0)>>>0)|0}function Ii(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;d=i;i=i+224|0;j=d|0;k=d+8|0;l=d+40|0;m=d+48|0;n=d+56|0;o=d+64|0;p=d+192|0;q=d+200|0;r=d+208|0;s=r;t=i;i=i+8|0;u=i;i=i+8|0;K1(s|0,0,12)|0;v=b;w=t|0;c[t+4>>2]=0;c[t>>2]=29200;x=a[h]|0;if((x&1)==0){y=h+4|0;z=h+4|0}else{A=c[h+8>>2]|0;y=A;z=A}A=x&255;if((A&1|0)==0){B=A>>>1}else{B=c[h+4>>2]|0}h=y+(B<<2)|0;L9:do{if(z>>>0<h>>>0){B=t;y=k|0;A=k+32|0;x=z;C=29200;while(1){c[m>>2]=x;D=(hI[c[C+12>>2]&31](w,j,x,h,m,y,A,l)|0)==2;E=c[m>>2]|0;if(D|(E|0)==(x|0)){break}if(y>>>0<(c[l>>2]|0)>>>0){D=y;do{DS(r,a[D]|0);D=D+1|0;}while(D>>>0<(c[l>>2]|0)>>>0);F=c[m>>2]|0}else{F=E}if(F>>>0>=h>>>0){break L9}x=F;C=c[B>>2]|0}B=gJ(8)|0;Dt(B,18864);eR(B|0,45576,48)}}while(0);Dl(t|0);if((a[s]&1)==0){G=r+1|0}else{G=c[r+8>>2]|0}s=df(((e|0)==-1?-1:e<<1)|0,f|0,g|0,G|0)|0;K1(v|0,0,12)|0;v=u|0;c[u+4>>2]=0;c[u>>2]=29144;G=K0(s|0)|0;g=s+G|0;if((G|0)<1){H=u|0;Dl(H);DM(r);i=d;return}G=u;f=g;e=o|0;t=o+128|0;o=s;s=29144;while(1){c[q>>2]=o;F=(hI[c[s+16>>2]&31](v,n,o,(f-o|0)>32?o+32|0:g,q,e,t,p)|0)==2;h=c[q>>2]|0;if(F|(h|0)==(o|0)){break}if(e>>>0<(c[p>>2]|0)>>>0){F=e;do{D0(b,c[F>>2]|0);F=F+4|0;}while(F>>>0<(c[p>>2]|0)>>>0);I=c[q>>2]|0}else{I=h}if(I>>>0>=g>>>0){J=50;break}o=I;s=c[G>>2]|0}if((J|0)==50){H=u|0;Dl(H);DM(r);i=d;return}d=gJ(8)|0;Dt(d,18864);eR(d|0,45576,48)}function Ij(a,b){a=a|0;b=b|0;cl(((b|0)==-1?-1:b<<1)|0)|0;return}function Ik(b){b=b|0;var d=0,e=0,f=0;c[b>>2]=28592;d=b+8|0;e=c[d>>2]|0;do{if((a[55400]|0)==0){if((bN(55400)|0)==0){break}c[13026]=fM(2147483647,22888,0)|0}}while(0);if((e|0)==(c[13026]|0)){f=b|0;Dl(f);return}ex(c[d>>2]|0);f=b|0;Dl(f);return}function Il(a){a=a|0;a=gJ(8)|0;Do(a,23160);c[a>>2]=27528;eR(a|0,45592,84)}function Im(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0;e=i;i=i+448|0;f=e|0;g=e+16|0;h=e+32|0;j=e+48|0;k=e+64|0;l=e+80|0;m=e+96|0;n=e+112|0;o=e+128|0;p=e+144|0;q=e+160|0;r=e+176|0;s=e+192|0;t=e+208|0;u=e+224|0;v=e+240|0;w=e+256|0;x=e+272|0;y=e+288|0;z=e+304|0;A=e+320|0;B=e+336|0;C=e+352|0;D=e+368|0;E=e+384|0;F=e+400|0;G=e+416|0;H=e+432|0;c[b+4>>2]=d-1;c[b>>2]=28848;d=b+8|0;I=b+12|0;a[b+136|0]=1;J=b+24|0;K=J;c[I>>2]=K;c[d>>2]=K;c[b+16>>2]=J+112;J=28;L=K;do{if((L|0)==0){M=0}else{c[L>>2]=0;M=c[I>>2]|0}L=M+4|0;c[I>>2]=L;J=J-1|0;}while((J|0)!=0);DK(b+144|0,22888,1);J=c[d>>2]|0;d=c[I>>2]|0;if((J|0)!=(d|0)){c[I>>2]=d+(~((d-4+(-J|0)|0)>>>2)<<2)}c[13059]=0;c[13058]=28552;if((c[13586]|0)!=-1){c[H>>2]=54344;c[H+4>>2]=32;c[H+8>>2]=0;DH(54344,H,286)}In(b,52232,(c[13587]|0)-1|0);c[13057]=0;c[13056]=28512;if((c[13584]|0)!=-1){c[G>>2]=54336;c[G+4>>2]=32;c[G+8>>2]=0;DH(54336,G,286)}In(b,52224,(c[13585]|0)-1|0);c[13109]=0;c[13108]=28960;c[13110]=0;a[52444]=0;c[13110]=c[(dc()|0)>>2];if((c[13666]|0)!=-1){c[F>>2]=54664;c[F+4>>2]=32;c[F+8>>2]=0;DH(54664,F,286)}In(b,52432,(c[13667]|0)-1|0);c[13107]=0;c[13106]=28880;if((c[13664]|0)!=-1){c[E>>2]=54656;c[E+4>>2]=32;c[E+8>>2]=0;DH(54656,E,286)}In(b,52424,(c[13665]|0)-1|0);c[13061]=0;c[13060]=28648;if((c[13590]|0)!=-1){c[D>>2]=54360;c[D+4>>2]=32;c[D+8>>2]=0;DH(54360,D,286)}In(b,52240,(c[13591]|0)-1|0);c[6573]=0;c[6572]=28592;do{if((a[55400]|0)==0){if((bN(55400)|0)==0){break}c[13026]=fM(2147483647,22888,0)|0}}while(0);c[6574]=c[13026];if((c[13588]|0)!=-1){c[C>>2]=54352;c[C+4>>2]=32;c[C+8>>2]=0;DH(54352,C,286)}In(b,26288,(c[13589]|0)-1|0);c[13063]=0;c[13062]=28704;if((c[13592]|0)!=-1){c[B>>2]=54368;c[B+4>>2]=32;c[B+8>>2]=0;DH(54368,B,286)}In(b,52248,(c[13593]|0)-1|0);c[13065]=0;c[13064]=28760;if((c[13594]|0)!=-1){c[A>>2]=54376;c[A+4>>2]=32;c[A+8>>2]=0;DH(54376,A,286)}In(b,52256,(c[13595]|0)-1|0);c[13039]=0;c[13038]=28056;a[52160]=46;a[52161]=44;K1(52164,0,12)|0;if((c[13570]|0)!=-1){c[z>>2]=54280;c[z+4>>2]=32;c[z+8>>2]=0;DH(54280,z,286)}In(b,52152,(c[13571]|0)-1|0);c[6565]=0;c[6564]=28008;c[6566]=46;c[6567]=44;K1(26272,0,12)|0;if((c[13568]|0)!=-1){c[y>>2]=54272;c[y+4>>2]=32;c[y+8>>2]=0;DH(54272,y,286)}In(b,26256,(c[13569]|0)-1|0);c[13055]=0;c[13054]=28440;if((c[13582]|0)!=-1){c[x>>2]=54328;c[x+4>>2]=32;c[x+8>>2]=0;DH(54328,x,286)}In(b,52216,(c[13583]|0)-1|0);c[13053]=0;c[13052]=28368;if((c[13580]|0)!=-1){c[w>>2]=54320;c[w+4>>2]=32;c[w+8>>2]=0;DH(54320,w,286)}In(b,52208,(c[13581]|0)-1|0);c[13051]=0;c[13050]=28304;if((c[13578]|0)!=-1){c[v>>2]=54312;c[v+4>>2]=32;c[v+8>>2]=0;DH(54312,v,286)}In(b,52200,(c[13579]|0)-1|0);c[13049]=0;c[13048]=28240;if((c[13576]|0)!=-1){c[u>>2]=54304;c[u+4>>2]=32;c[u+8>>2]=0;DH(54304,u,286)}In(b,52192,(c[13577]|0)-1|0);c[13119]=0;c[13118]=30032;if((c[13786]|0)!=-1){c[t>>2]=55144;c[t+4>>2]=32;c[t+8>>2]=0;DH(55144,t,286)}In(b,52472,(c[13787]|0)-1|0);c[13117]=0;c[13116]=29968;if((c[13784]|0)!=-1){c[s>>2]=55136;c[s+4>>2]=32;c[s+8>>2]=0;DH(55136,s,286)}In(b,52464,(c[13785]|0)-1|0);c[13115]=0;c[13114]=29904;if((c[13782]|0)!=-1){c[r>>2]=55128;c[r+4>>2]=32;c[r+8>>2]=0;DH(55128,r,286)}In(b,52456,(c[13783]|0)-1|0);c[13113]=0;c[13112]=29840;if((c[13780]|0)!=-1){c[q>>2]=55120;c[q+4>>2]=32;c[q+8>>2]=0;DH(55120,q,286)}In(b,52448,(c[13781]|0)-1|0);c[13037]=0;c[13036]=27712;if((c[13558]|0)!=-1){c[p>>2]=54232;c[p+4>>2]=32;c[p+8>>2]=0;DH(54232,p,286)}In(b,52144,(c[13559]|0)-1|0);c[13035]=0;c[13034]=27672;if((c[13556]|0)!=-1){c[o>>2]=54224;c[o+4>>2]=32;c[o+8>>2]=0;DH(54224,o,286)}In(b,52136,(c[13557]|0)-1|0);c[13033]=0;c[13032]=27632;if((c[13554]|0)!=-1){c[n>>2]=54216;c[n+4>>2]=32;c[n+8>>2]=0;DH(54216,n,286)}In(b,52128,(c[13555]|0)-1|0);c[13031]=0;c[13030]=27592;if((c[13552]|0)!=-1){c[m>>2]=54208;c[m+4>>2]=32;c[m+8>>2]=0;DH(54208,m,286)}In(b,52120,(c[13553]|0)-1|0);c[6561]=0;c[6560]=27912;c[6562]=27960;if((c[13566]|0)!=-1){c[l>>2]=54264;c[l+4>>2]=32;c[l+8>>2]=0;DH(54264,l,286)}In(b,26240,(c[13567]|0)-1|0);c[6557]=0;c[6556]=27816;c[6558]=27864;if((c[13564]|0)!=-1){c[k>>2]=54256;c[k+4>>2]=32;c[k+8>>2]=0;DH(54256,k,286)}In(b,26224,(c[13565]|0)-1|0);c[6553]=0;c[6552]=28816;do{if((a[55400]|0)==0){if((bN(55400)|0)==0){break}c[13026]=fM(2147483647,22888,0)|0}}while(0);c[6554]=c[13026];c[6552]=27784;if((c[13562]|0)!=-1){c[j>>2]=54248;c[j+4>>2]=32;c[j+8>>2]=0;DH(54248,j,286)}In(b,26208,(c[13563]|0)-1|0);c[6549]=0;c[6548]=28816;do{if((a[55400]|0)==0){if((bN(55400)|0)==0){break}c[13026]=fM(2147483647,22888,0)|0}}while(0);c[6550]=c[13026];c[6548]=27752;if((c[13560]|0)!=-1){c[h>>2]=54240;c[h+4>>2]=32;c[h+8>>2]=0;DH(54240,h,286)}In(b,26192,(c[13561]|0)-1|0);c[13047]=0;c[13046]=28144;if((c[13574]|0)!=-1){c[g>>2]=54296;c[g+4>>2]=32;c[g+8>>2]=0;DH(54296,g,286)}In(b,52184,(c[13575]|0)-1|0);c[13045]=0;c[13044]=28104;if((c[13572]|0)!=-1){c[f>>2]=54288;c[f+4>>2]=32;c[f+8>>2]=0;DH(54288,f,286)}In(b,52176,(c[13573]|0)-1|0);i=e;return}function In(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;Dm(b|0);e=a+8|0;f=a+12|0;a=c[f>>2]|0;g=e|0;h=c[g>>2]|0;i=a-h>>2;do{if(i>>>0>d>>>0){j=h}else{k=d+1|0;if(i>>>0<k>>>0){J7(e,k-i|0);j=c[g>>2]|0;break}if(i>>>0<=k>>>0){j=h;break}l=h+(k<<2)|0;if((l|0)==(a|0)){j=h;break}c[f>>2]=a+(~((a-4+(-l|0)|0)>>>2)<<2);j=h}}while(0);h=c[j+(d<<2)>>2]|0;if((h|0)==0){m=j;n=m+(d<<2)|0;c[n>>2]=b;return}Dn(h|0)|0;m=c[g>>2]|0;n=m+(d<<2)|0;c[n>>2]=b;return}function Io(a){a=a|0;Ip(a);KU(a);return}function Ip(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;c[b>>2]=28848;d=b+12|0;e=c[d>>2]|0;f=b+8|0;g=c[f>>2]|0;if((e|0)!=(g|0)){h=0;i=g;g=e;while(1){e=c[i+(h<<2)>>2]|0;if((e|0)==0){j=g;k=i}else{Dn(e|0)|0;j=c[d>>2]|0;k=c[f>>2]|0}e=h+1|0;if(e>>>0<j-k>>2>>>0){h=e;i=k;g=j}else{break}}}DM(b+144|0);j=c[f>>2]|0;if((j|0)==0){l=b|0;Dl(l);return}f=c[d>>2]|0;if((j|0)!=(f|0)){c[d>>2]=f+(~((f-4+(-j|0)|0)>>>2)<<2)}if((j|0)==(b+24|0)){a[b+136|0]=0;l=b|0;Dl(l);return}else{KU(j);l=b|0;Dl(l);return}}function Iq(){var b=0,d=0;if((a[55384]|0)!=0){b=c[13018]|0;return b|0}if((bN(55384)|0)==0){b=c[13018]|0;return b|0}do{if((a[55392]|0)==0){if((bN(55392)|0)==0){break}Im(52264,1);c[13022]=52264;c[13020]=52088}}while(0);d=c[c[13020]>>2]|0;c[13024]=d;Dm(d|0);c[13018]=52096;b=c[13018]|0;return b|0}function Ir(a){a=a|0;var b=0;b=c[(Iq()|0)>>2]|0;c[a>>2]=b;Dm(b|0);return}function Is(a,b){a=a|0;b=b|0;var d=0;d=c[b>>2]|0;c[a>>2]=d;Dm(d|0);return}function It(a){a=a|0;Dn(c[a>>2]|0)|0;return}function Iu(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=i;i=i+16|0;e=d|0;f=c[a>>2]|0;a=b|0;if((c[a>>2]|0)!=-1){c[e>>2]=b;c[e+4>>2]=32;c[e+8>>2]=0;DH(a,e,286)}e=(c[b+4>>2]|0)-1|0;b=c[f+8>>2]|0;if((c[f+12>>2]|0)-b>>2>>>0<=e>>>0){g=gJ(4)|0;h=g;Kr(h);eR(g|0,45560,458);return 0}f=c[b+(e<<2)>>2]|0;if((f|0)==0){g=gJ(4)|0;h=g;Kr(h);eR(g|0,45560,458);return 0}else{i=d;return f|0}return 0}function Iv(a){a=a|0;Dl(a|0);KU(a);return}function Iw(a){a=a|0;if((a|0)==0){return}g$[c[(c[a>>2]|0)+4>>2]&1023](a);return}function Ix(a){a=a|0;c[a+4>>2]=(I=c[13596]|0,c[13596]=I+1,I)+1;return}function Iy(a){a=a|0;Dl(a|0);KU(a);return}function Iz(a,d,e){a=a|0;d=d|0;e=e|0;var f=0;if(e>>>0>=128>>>0){f=0;return f|0}f=(b[(c[(dc()|0)>>2]|0)+(e<<1)>>1]&d)<<16>>16!=0;return f|0}function IA(a,d,e,f){a=a|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0;if((d|0)==(e|0)){g=d;return g|0}else{h=d;i=f}while(1){f=c[h>>2]|0;if(f>>>0<128>>>0){j=b[(c[(dc()|0)>>2]|0)+(f<<1)>>1]|0}else{j=0}b[i>>1]=j;f=h+4|0;if((f|0)==(e|0)){g=e;break}else{h=f;i=i+2|0}}return g|0}function IB(a,d,e,f){a=a|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0;if((e|0)==(f|0)){g=e;return g|0}else{h=e}while(1){e=c[h>>2]|0;if(e>>>0<128>>>0){if((b[(c[(dc()|0)>>2]|0)+(e<<1)>>1]&d)<<16>>16!=0){g=h;i=8;break}}e=h+4|0;if((e|0)==(f|0)){g=f;i=9;break}else{h=e}}if((i|0)==9){return g|0}else if((i|0)==8){return g|0}return 0}function IC(a,d,e,f){a=a|0;d=d|0;e=e|0;f=f|0;var g=0,h=0;a=e;while(1){if((a|0)==(f|0)){g=f;h=9;break}e=c[a>>2]|0;if(e>>>0>=128>>>0){g=a;h=8;break}if((b[(c[(dc()|0)>>2]|0)+(e<<1)>>1]&d)<<16>>16==0){g=a;h=10;break}else{a=a+4|0}}if((h|0)==9){return g|0}else if((h|0)==10){return g|0}else if((h|0)==8){return g|0}return 0}function ID(a,b){a=a|0;b=b|0;var d=0;if(b>>>0>=128>>>0){d=b;return d|0}d=c[(c[(gM()|0)>>2]|0)+(b<<2)>>2]|0;return d|0}function IE(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;if((b|0)==(d|0)){e=b;return e|0}else{f=b}while(1){b=c[f>>2]|0;if(b>>>0<128>>>0){g=c[(c[(gM()|0)>>2]|0)+(b<<2)>>2]|0}else{g=b}c[f>>2]=g;b=f+4|0;if((b|0)==(d|0)){e=d;break}else{f=b}}return e|0}function IF(a,b){a=a|0;b=b|0;var d=0;if(b>>>0>=128>>>0){d=b;return d|0}d=c[(c[(fp()|0)>>2]|0)+(b<<2)>>2]|0;return d|0}function IG(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;if((b|0)==(d|0)){e=b;return e|0}else{f=b}while(1){b=c[f>>2]|0;if(b>>>0<128>>>0){g=c[(c[(fp()|0)>>2]|0)+(b<<2)>>2]|0}else{g=b}c[f>>2]=g;b=f+4|0;if((b|0)==(d|0)){e=d;break}else{f=b}}return e|0}function IH(a,b){a=a|0;b=b|0;return b<<24>>24|0}function II(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0;if((d|0)==(e|0)){g=d;return g|0}else{h=d;i=f}while(1){c[i>>2]=a[h]|0;f=h+1|0;if((f|0)==(e|0)){g=e;break}else{h=f;i=i+4|0}}return g|0}function IJ(a,b,c){a=a|0;b=b|0;c=c|0;return(b>>>0<128>>>0?b&255:c)|0}function IK(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0;if((d|0)==(e|0)){h=d;return h|0}b=((e-4+(-d|0)|0)>>>2)+1|0;i=d;j=g;while(1){g=c[i>>2]|0;a[j]=g>>>0<128>>>0?g&255:f;g=i+4|0;if((g|0)==(e|0)){break}else{i=g;j=j+1|0}}h=d+(b<<2)|0;return h|0}function IL(b){b=b|0;var d=0;c[b>>2]=28960;d=c[b+8>>2]|0;do{if((d|0)!=0){if((a[b+12|0]&1)==0){break}KV(d)}}while(0);Dl(b|0);KU(b);return}function IM(b){b=b|0;var d=0;c[b>>2]=28960;d=c[b+8>>2]|0;do{if((d|0)!=0){if((a[b+12|0]&1)==0){break}KV(d)}}while(0);Dl(b|0);return}function IN(a,b){a=a|0;b=b|0;var d=0;if(b<<24>>24<0){d=b;return d|0}d=c[(c[(gM()|0)>>2]|0)+((b&255)<<2)>>2]&255;return d|0}function IO(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;if((d|0)==(e|0)){f=d;return f|0}else{g=d}while(1){d=a[g]|0;if(d<<24>>24<0){h=d}else{h=c[(c[(gM()|0)>>2]|0)+(d<<24>>24<<2)>>2]&255}a[g]=h;d=g+1|0;if((d|0)==(e|0)){f=e;break}else{g=d}}return f|0}function IP(a,b){a=a|0;b=b|0;var d=0;if(b<<24>>24<0){d=b;return d|0}d=c[(c[(fp()|0)>>2]|0)+(b<<24>>24<<2)>>2]&255;return d|0}function IQ(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;if((d|0)==(e|0)){f=d;return f|0}else{g=d}while(1){d=a[g]|0;if(d<<24>>24<0){h=d}else{h=c[(c[(fp()|0)>>2]|0)+(d<<24>>24<<2)>>2]&255}a[g]=h;d=g+1|0;if((d|0)==(e|0)){f=e;break}else{g=d}}return f|0}function IR(a,b){a=a|0;b=b|0;return b|0}function IS(b,c,d,e){b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0;if((c|0)==(d|0)){f=c;return f|0}else{g=c;h=e}while(1){a[h]=a[g]|0;e=g+1|0;if((e|0)==(d|0)){f=d;break}else{g=e;h=h+1|0}}return f|0}function IT(a,b,c){a=a|0;b=b|0;c=c|0;return(b<<24>>24<0?c:b)|0}function IU(b,c,d,e,f){b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0;if((c|0)==(d|0)){g=c;return g|0}else{h=c;i=f}while(1){f=a[h]|0;a[i]=f<<24>>24<0?e:f;f=h+1|0;if((f|0)==(d|0)){g=d;break}else{h=f;i=i+1|0}}return g|0}function IV(a){a=a|0;Dl(a|0);KU(a);return}function IW(a,b,d,e,f,g,h,i){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;c[f>>2]=d;c[i>>2]=g;return 3}function IX(a,b,d,e,f,g,h,i){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;c[f>>2]=d;c[i>>2]=g;return 3}function IY(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;c[f>>2]=d;return 3}function IZ(a){a=a|0;return 1}function I_(a){a=a|0;return 1}function I$(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;b=d-c|0;return(b>>>0<e>>>0?b:e)|0}function I0(a){a=a|0;return 1}function I1(a){a=a|0;Ik(a);KU(a);return}function I2(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0;l=i;i=i+8|0;m=l|0;n=m;o=i;i=i+4|0;i=i+7&-8;p=e;while(1){if((p|0)==(f|0)){q=f;break}if((c[p>>2]|0)==0){q=p;break}else{p=p+4|0}}c[k>>2]=h;c[g>>2]=e;L5:do{if((e|0)==(f|0)|(h|0)==(j|0)){r=e}else{p=d;s=j;t=b+8|0;u=o|0;v=h;w=e;x=q;while(1){y=c[p+4>>2]|0;c[m>>2]=c[p>>2];c[m+4>>2]=y;y=gt(c[t>>2]|0)|0;z=Kk(v,g,x-w>>2,s-v|0,d)|0;if((y|0)!=0){gt(y|0)|0}if((z|0)==(-1|0)){A=15;break}else if((z|0)==0){B=1;A=53;break}y=(c[k>>2]|0)+z|0;c[k>>2]=y;if((y|0)==(j|0)){A=48;break}if((x|0)==(f|0)){C=f;D=y;E=c[g>>2]|0}else{y=gt(c[t>>2]|0)|0;z=Kj(u,0,d)|0;if((y|0)!=0){gt(y|0)|0}if((z|0)==-1){B=2;A=51;break}y=c[k>>2]|0;if(z>>>0>(s-y|0)>>>0){B=1;A=52;break}L23:do{if((z|0)!=0){F=z;G=u;H=y;while(1){I=a[G]|0;c[k>>2]=H+1;a[H]=I;I=F-1|0;if((I|0)==0){break L23}F=I;G=G+1|0;H=c[k>>2]|0}}}while(0);y=(c[g>>2]|0)+4|0;c[g>>2]=y;z=y;while(1){if((z|0)==(f|0)){J=f;break}if((c[z>>2]|0)==0){J=z;break}else{z=z+4|0}}C=J;D=c[k>>2]|0;E=y}if((E|0)==(f|0)|(D|0)==(j|0)){r=E;break L5}else{v=D;w=E;x=C}}if((A|0)==15){c[k>>2]=v;L36:do{if((w|0)==(c[g>>2]|0)){K=w}else{x=w;u=v;while(1){s=c[x>>2]|0;p=gt(c[t>>2]|0)|0;z=Kj(u,s,n)|0;if((p|0)!=0){gt(p|0)|0}if((z|0)==-1){K=x;break L36}p=(c[k>>2]|0)+z|0;c[k>>2]=p;z=x+4|0;if((z|0)==(c[g>>2]|0)){K=z;break}else{x=z;u=p}}}}while(0);c[g>>2]=K;B=2;i=l;return B|0}else if((A|0)==48){r=c[g>>2]|0;break}else if((A|0)==51){i=l;return B|0}else if((A|0)==52){i=l;return B|0}else if((A|0)==53){i=l;return B|0}}}while(0);B=(r|0)!=(f|0)|0;i=l;return B|0}function I3(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0;l=i;i=i+8|0;m=l|0;n=m;o=e;while(1){if((o|0)==(f|0)){p=f;break}if((a[o]|0)==0){p=o;break}else{o=o+1|0}}c[k>>2]=h;c[g>>2]=e;L5:do{if((e|0)==(f|0)|(h|0)==(j|0)){q=e}else{o=d;r=j;s=b+8|0;t=h;u=e;v=p;while(1){w=c[o+4>>2]|0;c[m>>2]=c[o>>2];c[m+4>>2]=w;x=v;w=gt(c[s>>2]|0)|0;y=Kg(t,g,x-u|0,r-t>>2,d)|0;if((w|0)!=0){gt(w|0)|0}if((y|0)==(-1|0)){z=15;break}else if((y|0)==0){A=2;z=51;break}w=(c[k>>2]|0)+(y<<2)|0;c[k>>2]=w;if((w|0)==(j|0)){z=47;break}y=c[g>>2]|0;if((v|0)==(f|0)){B=f;C=w;D=y}else{E=gt(c[s>>2]|0)|0;F=Kf(w,y,1,d)|0;if((E|0)!=0){gt(E|0)|0}if((F|0)!=0){A=2;z=50;break}c[k>>2]=(c[k>>2]|0)+4;F=(c[g>>2]|0)+1|0;c[g>>2]=F;E=F;while(1){if((E|0)==(f|0)){G=f;break}if((a[E]|0)==0){G=E;break}else{E=E+1|0}}B=G;C=c[k>>2]|0;D=F}if((D|0)==(f|0)|(C|0)==(j|0)){q=D;break L5}else{t=C;u=D;v=B}}if((z|0)==15){c[k>>2]=t;L29:do{if((u|0)==(c[g>>2]|0)){H=u}else{v=t;r=u;while(1){o=gt(c[s>>2]|0)|0;E=Kf(v,r,x-r|0,n)|0;if((o|0)!=0){gt(o|0)|0}if((E|0)==0){I=r+1|0}else if((E|0)==(-1|0)){z=26;break}else if((E|0)==(-2|0)){z=27;break}else{I=r+E|0}E=(c[k>>2]|0)+4|0;c[k>>2]=E;if((I|0)==(c[g>>2]|0)){H=I;break L29}else{v=E;r=I}}if((z|0)==26){c[g>>2]=r;A=2;i=l;return A|0}else if((z|0)==27){c[g>>2]=r;A=1;i=l;return A|0}}}while(0);c[g>>2]=H;A=(H|0)!=(f|0)|0;i=l;return A|0}else if((z|0)==47){q=c[g>>2]|0;break}else if((z|0)==51){i=l;return A|0}else if((z|0)==50){i=l;return A|0}}}while(0);A=(q|0)!=(f|0)|0;i=l;return A|0}function I4(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0;h=i;i=i+8|0;c[g>>2]=e;e=h|0;j=gt(c[b+8>>2]|0)|0;b=Kj(e,0,d)|0;if((j|0)!=0){gt(j|0)|0}if((b|0)==(-1|0)|(b|0)==0){k=2;i=h;return k|0}j=b-1|0;b=c[g>>2]|0;if(j>>>0>(f-b|0)>>>0){k=1;i=h;return k|0}if((j|0)==0){k=0;i=h;return k|0}else{l=j;m=e;n=b}while(1){b=a[m]|0;c[g>>2]=n+1;a[n]=b;b=l-1|0;if((b|0)==0){k=0;break}l=b;m=m+1|0;n=c[g>>2]|0}i=h;return k|0}function I5(a){a=a|0;var b=0,d=0,e=0;b=a+8|0;a=gt(c[b>>2]|0)|0;d=Ki(0,0,4)|0;if((a|0)!=0){gt(a|0)|0}if((d|0)!=0){e=-1;return e|0}d=c[b>>2]|0;if((d|0)==0){e=1;return e|0}b=gt(d|0)|0;if((b|0)==0){e=0;return e|0}gt(b|0)|0;e=0;return e|0}function I6(a){a=a|0;return 0}function I7(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;if((f|0)==0|(d|0)==(e|0)){g=0;return g|0}h=e;i=a+8|0;a=d;d=0;j=0;while(1){k=gt(c[i>>2]|0)|0;l=Ke(a,h-a|0,b)|0;if((k|0)!=0){gt(k|0)|0}if((l|0)==0){m=1;n=a+1|0}else if((l|0)==(-1|0)|(l|0)==(-2|0)){g=d;o=16;break}else{m=l;n=a+l|0}l=m+d|0;k=j+1|0;if(k>>>0>=f>>>0|(n|0)==(e|0)){g=l;o=17;break}else{a=n;d=l;j=k}}if((o|0)==17){return g|0}else if((o|0)==16){return g|0}return 0}function I8(a){a=a|0;var b=0,d=0;b=c[a+8>>2]|0;do{if((b|0)==0){d=1}else{a=gt(b|0)|0;if((a|0)==0){d=4;break}gt(a|0)|0;d=4}}while(0);return d|0}function I9(a){a=a|0;Dl(a|0);KU(a);return}function Ja(a,b,d,e,f,g,h,j){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0;b=i;i=i+16|0;a=b|0;k=b+8|0;c[a>>2]=d;c[k>>2]=g;l=Jb(d,e,a,g,h,k,1114111,0)|0;c[f>>2]=d+((c[a>>2]|0)-d>>1<<1);c[j>>2]=g+((c[k>>2]|0)-g);i=b;return l|0}function Jb(d,f,g,h,i,j,k,l){d=d|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0;c[g>>2]=d;c[j>>2]=h;do{if((l&2|0)!=0){if((i-h|0)<3){m=1;return m|0}else{c[j>>2]=h+1;a[h]=-17;d=c[j>>2]|0;c[j>>2]=d+1;a[d]=-69;d=c[j>>2]|0;c[j>>2]=d+1;a[d]=-65;break}}}while(0);h=f;l=c[g>>2]|0;if(l>>>0>=f>>>0){m=0;return m|0}d=i;i=l;L10:while(1){l=b[i>>1]|0;n=l&65535;if(n>>>0>k>>>0){m=2;o=38;break}do{if((l&65535)>>>0<128>>>0){p=c[j>>2]|0;if((d-p|0)<1){m=1;o=39;break L10}c[j>>2]=p+1;a[p]=l}else{if((l&65535)>>>0<2048>>>0){p=c[j>>2]|0;if((d-p|0)<2){m=1;o=27;break L10}c[j>>2]=p+1;a[p]=n>>>6|192;p=c[j>>2]|0;c[j>>2]=p+1;a[p]=n&63|128;break}if((l&65535)>>>0<55296>>>0){p=c[j>>2]|0;if((d-p|0)<3){m=1;o=35;break L10}c[j>>2]=p+1;a[p]=n>>>12|224;p=c[j>>2]|0;c[j>>2]=p+1;a[p]=n>>>6&63|128;p=c[j>>2]|0;c[j>>2]=p+1;a[p]=n&63|128;break}if((l&65535)>>>0>=56320>>>0){if((l&65535)>>>0<57344>>>0){m=2;o=29;break L10}p=c[j>>2]|0;if((d-p|0)<3){m=1;o=30;break L10}c[j>>2]=p+1;a[p]=n>>>12|224;p=c[j>>2]|0;c[j>>2]=p+1;a[p]=n>>>6&63|128;p=c[j>>2]|0;c[j>>2]=p+1;a[p]=n&63|128;break}if((h-i|0)<4){m=1;o=32;break L10}p=i+2|0;q=e[p>>1]|0;if((q&64512|0)!=56320){m=2;o=37;break L10}if((d-(c[j>>2]|0)|0)<4){m=1;o=28;break L10}r=n&960;if(((r<<10)+65536|n<<10&64512|q&1023)>>>0>k>>>0){m=2;o=34;break L10}c[g>>2]=p;p=(r>>>6)+1|0;r=c[j>>2]|0;c[j>>2]=r+1;a[r]=p>>>2|240;r=c[j>>2]|0;c[j>>2]=r+1;a[r]=n>>>2&15|p<<4&48|128;p=c[j>>2]|0;c[j>>2]=p+1;a[p]=n<<4&48|q>>>6&15|128;p=c[j>>2]|0;c[j>>2]=p+1;a[p]=q&63|128}}while(0);n=(c[g>>2]|0)+2|0;c[g>>2]=n;if(n>>>0<f>>>0){i=n}else{m=0;o=31;break}}if((o|0)==27){return m|0}else if((o|0)==28){return m|0}else if((o|0)==29){return m|0}else if((o|0)==30){return m|0}else if((o|0)==31){return m|0}else if((o|0)==32){return m|0}else if((o|0)==34){return m|0}else if((o|0)==35){return m|0}else if((o|0)==37){return m|0}else if((o|0)==38){return m|0}else if((o|0)==39){return m|0}return 0}function Jc(a,b,d,e,f,g,h,j){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0;b=i;i=i+16|0;a=b|0;k=b+8|0;c[a>>2]=d;c[k>>2]=g;l=Jd(d,e,a,g,h,k,1114111,0)|0;c[f>>2]=d+((c[a>>2]|0)-d);c[j>>2]=g+((c[k>>2]|0)-g>>1<<1);i=b;return l|0}function Jd(e,f,g,h,i,j,k,l){e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;c[g>>2]=e;c[j>>2]=h;h=c[g>>2]|0;do{if((l&4|0)==0){m=h}else{if((f-h|0)<=2){m=h;break}if((a[h]|0)!=-17){m=h;break}if((a[h+1|0]|0)!=-69){m=h;break}if((a[h+2|0]|0)!=-65){m=h;break}e=h+3|0;c[g>>2]=e;m=e}}while(0);L8:do{if(m>>>0<f>>>0){h=f;l=i;e=c[j>>2]|0;n=m;L10:while(1){if(e>>>0>=i>>>0){o=n;break L8}p=a[n]|0;q=p&255;if(q>>>0>k>>>0){r=2;s=60;break}do{if(p<<24>>24>-1){b[e>>1]=p&255;c[g>>2]=(c[g>>2]|0)+1}else{if((p&255)>>>0<194>>>0){r=2;s=62;break L10}if((p&255)>>>0<224>>>0){if((h-n|0)<2){r=1;s=61;break L10}t=d[n+1|0]|0;if((t&192|0)!=128){r=2;s=45;break L10}u=t&63|q<<6&1984;if(u>>>0>k>>>0){r=2;s=58;break L10}b[e>>1]=u;c[g>>2]=(c[g>>2]|0)+2;break}if((p&255)>>>0<240>>>0){if((h-n|0)<3){r=1;s=46;break L10}u=a[n+1|0]|0;t=a[n+2|0]|0;if((q|0)==237){if((u&-32)<<24>>24!=-128){r=2;s=43;break L10}}else if((q|0)==224){if((u&-32)<<24>>24!=-96){r=2;s=48;break L10}}else{if((u&-64)<<24>>24!=-128){r=2;s=44;break L10}}v=t&255;if((v&192|0)!=128){r=2;s=53;break L10}t=(u&255)<<6&4032|q<<12|v&63;if((t&65535)>>>0>k>>>0){r=2;s=54;break L10}b[e>>1]=t;c[g>>2]=(c[g>>2]|0)+3;break}if((p&255)>>>0>=245>>>0){r=2;s=52;break L10}if((h-n|0)<4){r=1;s=55;break L10}t=a[n+1|0]|0;v=a[n+2|0]|0;u=a[n+3|0]|0;if((q|0)==240){if((t+112&255)>>>0>=48>>>0){r=2;s=47;break L10}}else if((q|0)==244){if((t&-16)<<24>>24!=-128){r=2;s=49;break L10}}else{if((t&-64)<<24>>24!=-128){r=2;s=50;break L10}}w=v&255;if((w&192|0)!=128){r=2;s=51;break L10}v=u&255;if((v&192|0)!=128){r=2;s=56;break L10}if((l-e|0)<4){r=1;s=57;break L10}u=q&7;x=t&255;t=w<<6;y=v&63;if((x<<12&258048|u<<18|t&4032|y)>>>0>k>>>0){r=2;s=59;break L10}b[e>>1]=x<<2&60|w>>>4&3|((x>>>4&3|u<<2)<<6)+16320|55296;u=(c[j>>2]|0)+2|0;c[j>>2]=u;b[u>>1]=y|t&960|56320;c[g>>2]=(c[g>>2]|0)+4}}while(0);q=(c[j>>2]|0)+2|0;c[j>>2]=q;p=c[g>>2]|0;if(p>>>0<f>>>0){e=q;n=p}else{o=p;break L8}}if((s|0)==54){return r|0}else if((s|0)==55){return r|0}else if((s|0)==56){return r|0}else if((s|0)==57){return r|0}else if((s|0)==58){return r|0}else if((s|0)==59){return r|0}else if((s|0)==60){return r|0}else if((s|0)==61){return r|0}else if((s|0)==47){return r|0}else if((s|0)==48){return r|0}else if((s|0)==49){return r|0}else if((s|0)==50){return r|0}else if((s|0)==51){return r|0}else if((s|0)==52){return r|0}else if((s|0)==53){return r|0}else if((s|0)==43){return r|0}else if((s|0)==44){return r|0}else if((s|0)==45){return r|0}else if((s|0)==46){return r|0}else if((s|0)==62){return r|0}}else{o=m}}while(0);r=o>>>0<f>>>0|0;return r|0}function Je(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;c[f>>2]=d;return 3}function Jf(a){a=a|0;return 0}function Jg(a){a=a|0;return 0}function Jh(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return Ji(c,d,e,1114111,0)|0}function Ji(b,c,e,f,g){b=b|0;c=c|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;do{if((g&4|0)==0){h=b}else{if((c-b|0)<=2){h=b;break}if((a[b]|0)!=-17){h=b;break}if((a[b+1|0]|0)!=-69){h=b;break}h=(a[b+2|0]|0)==-65?b+3|0:b}}while(0);L7:do{if(h>>>0<c>>>0&(e|0)!=0){g=c;i=0;j=h;L9:while(1){k=a[j]|0;l=k&255;if(l>>>0>f>>>0){m=j;break L7}do{if(k<<24>>24>-1){n=j+1|0;o=i}else{if((k&255)>>>0<194>>>0){m=j;break L7}if((k&255)>>>0<224>>>0){if((g-j|0)<2){m=j;break L7}p=d[j+1|0]|0;if((p&192|0)!=128){m=j;break L7}if((p&63|l<<6&1984)>>>0>f>>>0){m=j;break L7}n=j+2|0;o=i;break}if((k&255)>>>0<240>>>0){q=j;if((g-q|0)<3){m=j;break L7}p=a[j+1|0]|0;r=a[j+2|0]|0;if((l|0)==224){if((p&-32)<<24>>24!=-96){s=21;break L9}}else if((l|0)==237){if((p&-32)<<24>>24!=-128){s=23;break L9}}else{if((p&-64)<<24>>24!=-128){s=25;break L9}}t=r&255;if((t&192|0)!=128){m=j;break L7}if(((p&255)<<6&4032|l<<12&61440|t&63)>>>0>f>>>0){m=j;break L7}n=j+3|0;o=i;break}if((k&255)>>>0>=245>>>0){m=j;break L7}u=j;if((g-u|0)<4){m=j;break L7}if((e-i|0)>>>0<2>>>0){m=j;break L7}t=a[j+1|0]|0;p=a[j+2|0]|0;r=a[j+3|0]|0;if((l|0)==244){if((t&-16)<<24>>24!=-128){s=36;break L9}}else if((l|0)==240){if((t+112&255)>>>0>=48>>>0){s=34;break L9}}else{if((t&-64)<<24>>24!=-128){s=38;break L9}}v=p&255;if((v&192|0)!=128){m=j;break L7}p=r&255;if((p&192|0)!=128){m=j;break L7}if(((t&255)<<12&258048|l<<18&1835008|v<<6&4032|p&63)>>>0>f>>>0){m=j;break L7}n=j+4|0;o=i+1|0}}while(0);l=o+1|0;if(n>>>0<c>>>0&l>>>0<e>>>0){i=l;j=n}else{m=n;break L7}}if((s|0)==36){w=u-b|0;return w|0}else if((s|0)==21){w=q-b|0;return w|0}else if((s|0)==23){w=q-b|0;return w|0}else if((s|0)==25){w=q-b|0;return w|0}else if((s|0)==34){w=u-b|0;return w|0}else if((s|0)==38){w=u-b|0;return w|0}}else{m=h}}while(0);w=m-b|0;return w|0}function Jj(a){a=a|0;return 4}function Jk(a){a=a|0;Dl(a|0);KU(a);return}function Jl(a,b,d,e,f,g,h,j){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0;b=i;i=i+16|0;a=b|0;k=b+8|0;c[a>>2]=d;c[k>>2]=g;l=Jm(d,e,a,g,h,k,1114111,0)|0;c[f>>2]=d+((c[a>>2]|0)-d>>2<<2);c[j>>2]=g+((c[k>>2]|0)-g);i=b;return l|0}function Jm(b,d,e,f,g,h,i,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;var k=0,l=0,m=0,n=0;c[e>>2]=b;c[h>>2]=f;do{if((j&2|0)!=0){if((g-f|0)<3){k=1;return k|0}else{c[h>>2]=f+1;a[f]=-17;b=c[h>>2]|0;c[h>>2]=b+1;a[b]=-69;b=c[h>>2]|0;c[h>>2]=b+1;a[b]=-65;break}}}while(0);f=c[e>>2]|0;if(f>>>0>=d>>>0){k=0;return k|0}j=g;g=f;L10:while(1){f=c[g>>2]|0;if((f&-2048|0)==55296|f>>>0>i>>>0){k=2;l=23;break}do{if(f>>>0<128>>>0){b=c[h>>2]|0;if((j-b|0)<1){k=1;l=22;break L10}c[h>>2]=b+1;a[b]=f}else{if(f>>>0<2048>>>0){b=c[h>>2]|0;if((j-b|0)<2){k=1;l=21;break L10}c[h>>2]=b+1;a[b]=f>>>6|192;b=c[h>>2]|0;c[h>>2]=b+1;a[b]=f&63|128;break}b=c[h>>2]|0;m=j-b|0;if(f>>>0<65536>>>0){if((m|0)<3){k=1;l=25;break L10}c[h>>2]=b+1;a[b]=f>>>12|224;n=c[h>>2]|0;c[h>>2]=n+1;a[n]=f>>>6&63|128;n=c[h>>2]|0;c[h>>2]=n+1;a[n]=f&63|128;break}else{if((m|0)<4){k=1;l=26;break L10}c[h>>2]=b+1;a[b]=f>>>18|240;b=c[h>>2]|0;c[h>>2]=b+1;a[b]=f>>>12&63|128;b=c[h>>2]|0;c[h>>2]=b+1;a[b]=f>>>6&63|128;b=c[h>>2]|0;c[h>>2]=b+1;a[b]=f&63|128;break}}}while(0);f=(c[e>>2]|0)+4|0;c[e>>2]=f;if(f>>>0<d>>>0){g=f}else{k=0;l=27;break}}if((l|0)==21){return k|0}else if((l|0)==22){return k|0}else if((l|0)==25){return k|0}else if((l|0)==23){return k|0}else if((l|0)==26){return k|0}else if((l|0)==27){return k|0}return 0}function Jn(a,b,d,e,f,g,h,j){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0;b=i;i=i+16|0;a=b|0;k=b+8|0;c[a>>2]=d;c[k>>2]=g;l=Jo(d,e,a,g,h,k,1114111,0)|0;c[f>>2]=d+((c[a>>2]|0)-d);c[j>>2]=g+((c[k>>2]|0)-g>>2<<2);i=b;return l|0}function Jo(b,e,f,g,h,i,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;c[f>>2]=b;c[i>>2]=g;g=c[f>>2]|0;do{if((k&4|0)==0){l=g}else{if((e-g|0)<=2){l=g;break}if((a[g]|0)!=-17){l=g;break}if((a[g+1|0]|0)!=-69){l=g;break}if((a[g+2|0]|0)!=-65){l=g;break}b=g+3|0;c[f>>2]=b;l=b}}while(0);L8:do{if(l>>>0<e>>>0){g=e;k=c[i>>2]|0;b=l;L10:while(1){if(k>>>0>=h>>>0){m=b;break L8}n=a[b]|0;o=n&255;do{if(n<<24>>24>-1){if(o>>>0>j>>>0){p=2;q=47;break L10}c[k>>2]=o;c[f>>2]=(c[f>>2]|0)+1}else{if((n&255)>>>0<194>>>0){p=2;q=48;break L10}if((n&255)>>>0<224>>>0){if((g-b|0)<2){p=1;q=54;break L10}r=d[b+1|0]|0;if((r&192|0)!=128){p=2;q=51;break L10}s=r&63|o<<6&1984;if(s>>>0>j>>>0){p=2;q=50;break L10}c[k>>2]=s;c[f>>2]=(c[f>>2]|0)+2;break}if((n&255)>>>0<240>>>0){if((g-b|0)<3){p=1;q=41;break L10}s=a[b+1|0]|0;r=a[b+2|0]|0;if((o|0)==237){if((s&-32)<<24>>24!=-128){p=2;q=42;break L10}}else if((o|0)==224){if((s&-32)<<24>>24!=-96){p=2;q=55;break L10}}else{if((s&-64)<<24>>24!=-128){p=2;q=43;break L10}}t=r&255;if((t&192|0)!=128){p=2;q=49;break L10}r=(s&255)<<6&4032|o<<12&61440|t&63;if(r>>>0>j>>>0){p=2;q=57;break L10}c[k>>2]=r;c[f>>2]=(c[f>>2]|0)+3;break}if((n&255)>>>0>=245>>>0){p=2;q=46;break L10}if((g-b|0)<4){p=1;q=56;break L10}r=a[b+1|0]|0;t=a[b+2|0]|0;s=a[b+3|0]|0;if((o|0)==244){if((r&-16)<<24>>24!=-128){p=2;q=45;break L10}}else if((o|0)==240){if((r+112&255)>>>0>=48>>>0){p=2;q=60;break L10}}else{if((r&-64)<<24>>24!=-128){p=2;q=59;break L10}}u=t&255;if((u&192|0)!=128){p=2;q=58;break L10}t=s&255;if((t&192|0)!=128){p=2;q=53;break L10}s=(r&255)<<12&258048|o<<18&1835008|u<<6&4032|t&63;if(s>>>0>j>>>0){p=2;q=52;break L10}c[k>>2]=s;c[f>>2]=(c[f>>2]|0)+4}}while(0);o=(c[i>>2]|0)+4|0;c[i>>2]=o;n=c[f>>2]|0;if(n>>>0<e>>>0){k=o;b=n}else{m=n;break L8}}if((q|0)==56){return p|0}else if((q|0)==57){return p|0}else if((q|0)==58){return p|0}else if((q|0)==59){return p|0}else if((q|0)==60){return p|0}else if((q|0)==50){return p|0}else if((q|0)==51){return p|0}else if((q|0)==52){return p|0}else if((q|0)==53){return p|0}else if((q|0)==54){return p|0}else if((q|0)==55){return p|0}else if((q|0)==41){return p|0}else if((q|0)==42){return p|0}else if((q|0)==43){return p|0}else if((q|0)==45){return p|0}else if((q|0)==46){return p|0}else if((q|0)==47){return p|0}else if((q|0)==48){return p|0}else if((q|0)==49){return p|0}}else{m=l}}while(0);p=m>>>0<e>>>0|0;return p|0}function Jp(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;c[f>>2]=d;return 3}function Jq(a){a=a|0;return 0}function Jr(a){a=a|0;return 0}function Js(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return Jt(c,d,e,1114111,0)|0}function Jt(b,c,e,f,g){b=b|0;c=c|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;do{if((g&4|0)==0){h=b}else{if((c-b|0)<=2){h=b;break}if((a[b]|0)!=-17){h=b;break}if((a[b+1|0]|0)!=-69){h=b;break}h=(a[b+2|0]|0)==-65?b+3|0:b}}while(0);L7:do{if(h>>>0<c>>>0&(e|0)!=0){g=c;i=1;j=h;L9:while(1){k=a[j]|0;l=k&255;do{if(k<<24>>24>-1){if(l>>>0>f>>>0){m=j;break L7}n=j+1|0}else{if((k&255)>>>0<194>>>0){m=j;break L7}if((k&255)>>>0<224>>>0){if((g-j|0)<2){m=j;break L7}o=d[j+1|0]|0;if((o&192|0)!=128){m=j;break L7}if((o&63|l<<6&1984)>>>0>f>>>0){m=j;break L7}n=j+2|0;break}if((k&255)>>>0<240>>>0){p=j;if((g-p|0)<3){m=j;break L7}o=a[j+1|0]|0;q=a[j+2|0]|0;if((l|0)==224){if((o&-32)<<24>>24!=-96){r=21;break L9}}else if((l|0)==237){if((o&-32)<<24>>24!=-128){r=23;break L9}}else{if((o&-64)<<24>>24!=-128){r=25;break L9}}s=q&255;if((s&192|0)!=128){m=j;break L7}if(((o&255)<<6&4032|l<<12&61440|s&63)>>>0>f>>>0){m=j;break L7}n=j+3|0;break}if((k&255)>>>0>=245>>>0){m=j;break L7}t=j;if((g-t|0)<4){m=j;break L7}s=a[j+1|0]|0;o=a[j+2|0]|0;q=a[j+3|0]|0;if((l|0)==240){if((s+112&255)>>>0>=48>>>0){r=33;break L9}}else if((l|0)==244){if((s&-16)<<24>>24!=-128){r=35;break L9}}else{if((s&-64)<<24>>24!=-128){r=37;break L9}}u=o&255;if((u&192|0)!=128){m=j;break L7}o=q&255;if((o&192|0)!=128){m=j;break L7}if(((s&255)<<12&258048|l<<18&1835008|u<<6&4032|o&63)>>>0>f>>>0){m=j;break L7}n=j+4|0}}while(0);if(!(n>>>0<c>>>0&i>>>0<e>>>0)){m=n;break L7}i=i+1|0;j=n}if((r|0)==21){v=p-b|0;return v|0}else if((r|0)==23){v=p-b|0;return v|0}else if((r|0)==25){v=p-b|0;return v|0}else if((r|0)==33){v=t-b|0;return v|0}else if((r|0)==35){v=t-b|0;return v|0}else if((r|0)==37){v=t-b|0;return v|0}}else{m=h}}while(0);v=m-b|0;return v|0}function Ju(a){a=a|0;return 4}function Jv(a){a=a|0;Dl(a|0);KU(a);return}function Jw(a){a=a|0;Dl(a|0);KU(a);return}function Jx(a){a=a|0;c[a>>2]=28056;DM(a+12|0);Dl(a|0);KU(a);return}function Jy(a){a=a|0;c[a>>2]=28056;DM(a+12|0);Dl(a|0);return}function Jz(a){a=a|0;c[a>>2]=28008;DM(a+16|0);Dl(a|0);KU(a);return}function JA(a){a=a|0;c[a>>2]=28008;DM(a+16|0);Dl(a|0);return}function JB(b){b=b|0;return a[b+8|0]|0}function JC(a){a=a|0;return c[a+8>>2]|0}function JD(b){b=b|0;return a[b+9|0]|0}function JE(a){a=a|0;return c[a+12>>2]|0}function JF(a,b){a=a|0;b=b|0;DJ(a,b+12|0);return}function JG(a,b){a=a|0;b=b|0;DJ(a,b+16|0);return}function JH(a,b){a=a|0;b=b|0;DK(a,21272,4);return}function JI(a,b){a=a|0;b=b|0;DW(a,21104,Km(21104)|0);return}function JJ(a,b){a=a|0;b=b|0;DK(a,20936,5);return}function JK(a,b){a=a|0;b=b|0;DW(a,20704,Km(20704)|0);return}function JL(b){b=b|0;var d=0;if((a[55480]|0)!=0){d=c[13144]|0;return d|0}if((bN(55480)|0)==0){d=c[13144]|0;return d|0}do{if((a[55368]|0)==0){if((bN(55368)|0)==0){break}K1(51616,0,168)|0;ep(148,0,q|0)|0}}while(0);DO(51616,24320)|0;DO(51628,24184)|0;DO(51640,24176)|0;DO(51652,24160)|0;DO(51664,24144)|0;DO(51676,24136)|0;DO(51688,24120)|0;DO(51700,24112)|0;DO(51712,24104)|0;DO(51724,24048)|0;DO(51736,24008)|0;DO(51748,23896)|0;DO(51760,23856)|0;DO(51772,23848)|0;c[13144]=51616;d=c[13144]|0;return d|0}function JM(b){b=b|0;var d=0;if((a[55424]|0)!=0){d=c[13122]|0;return d|0}if((bN(55424)|0)==0){d=c[13122]|0;return d|0}do{if((a[55344]|0)==0){if((bN(55344)|0)==0){break}K1(50872,0,168)|0;ep(496,0,q|0)|0}}while(0);DZ(50872,25616)|0;DZ(50884,25584)|0;DZ(50896,25552)|0;DZ(50908,25512)|0;DZ(50920,25416)|0;DZ(50932,25192)|0;DZ(50944,24848)|0;DZ(50956,24808)|0;DZ(50968,24704)|0;DZ(50980,24648)|0;DZ(50992,24632)|0;DZ(51004,24600)|0;DZ(51016,24584)|0;DZ(51028,24480)|0;c[13122]=50872;d=c[13122]|0;return d|0}function JN(b){b=b|0;var d=0;if((a[55472]|0)!=0){d=c[13142]|0;return d|0}if((bN(55472)|0)==0){d=c[13142]|0;return d|0}do{if((a[55360]|0)==0){if((bN(55360)|0)==0){break}K1(51328,0,288)|0;ep(622,0,q|0)|0}}while(0);DO(51328,13616)|0;DO(51340,13600)|0;DO(51352,13592)|0;DO(51364,13584)|0;DO(51376,13576)|0;DO(51388,13568)|0;DO(51400,13536)|0;DO(51412,13528)|0;DO(51424,13424)|0;DO(51436,13296)|0;DO(51448,13080)|0;DO(51460,12992)|0;DO(51472,12960)|0;DO(51484,12952)|0;DO(51496,12928)|0;DO(51508,12920)|0;DO(51520,13576)|0;DO(51532,12848)|0;DO(51544,12840)|0;DO(51556,25952)|0;DO(51568,25888)|0;DO(51580,25728)|0;DO(51592,25688)|0;DO(51604,25680)|0;c[13142]=51328;d=c[13142]|0;return d|0}function JO(b){b=b|0;var d=0;if((a[55416]|0)!=0){d=c[13120]|0;return d|0}if((bN(55416)|0)==0){d=c[13120]|0;return d|0}do{if((a[55336]|0)==0){if((bN(55336)|0)==0){break}K1(50584,0,288)|0;ep(428,0,q|0)|0}}while(0);DZ(50584,16224)|0;DZ(50596,16104)|0;DZ(50608,16024)|0;DZ(50620,15872)|0;DZ(50632,14400)|0;DZ(50644,15608)|0;DZ(50656,15528)|0;DZ(50668,15464)|0;DZ(50680,15384)|0;DZ(50692,15328)|0;DZ(50704,15216)|0;DZ(50716,15072)|0;DZ(50728,14976)|0;DZ(50740,14824)|0;DZ(50752,14656)|0;DZ(50764,14480)|0;DZ(50776,14400)|0;DZ(50788,14360)|0;DZ(50800,14280)|0;DZ(50812,14232)|0;DZ(50824,14080)|0;DZ(50836,14032)|0;DZ(50848,14016)|0;DZ(50860,13936)|0;c[13120]=50584;d=c[13120]|0;return d|0}function JP(b){b=b|0;var d=0;if((a[55488]|0)!=0){d=c[13146]|0;return d|0}if((bN(55488)|0)==0){d=c[13146]|0;return d|0}do{if((a[55376]|0)==0){if((bN(55376)|0)==0){break}K1(51784,0,288)|0;ep(424,0,q|0)|0}}while(0);DO(51784,16632)|0;DO(51796,16512)|0;c[13146]=51784;d=c[13146]|0;return d|0}function JQ(b){b=b|0;var d=0;if((a[55432]|0)!=0){d=c[13124]|0;return d|0}if((bN(55432)|0)==0){d=c[13124]|0;return d|0}do{if((a[55352]|0)==0){if((bN(55352)|0)==0){break}K1(51040,0,288)|0;ep(802,0,q|0)|0}}while(0);DZ(51040,17128)|0;DZ(51052,16928)|0;c[13124]=51040;d=c[13124]|0;return d|0}function JR(b){b=b|0;if((a[55496]|0)!=0){return 52592}if((bN(55496)|0)==0){return 52592}DK(52592,20488,8);ep(862,52592,q|0)|0;return 52592}function JS(b){b=b|0;if((a[55440]|0)!=0){return 52504}if((bN(55440)|0)==0){return 52504}DW(52504,20304,Km(20304)|0);ep(340,52504,q|0)|0;return 52504}function JT(b){b=b|0;if((a[55520]|0)!=0){return 52640}if((bN(55520)|0)==0){return 52640}DK(52640,2e4,8);ep(862,52640,q|0)|0;return 52640}function JU(b){b=b|0;if((a[55464]|0)!=0){return 52552}if((bN(55464)|0)==0){return 52552}DW(52552,19880,Km(19880)|0);ep(340,52552,q|0)|0;return 52552}function JV(b){b=b|0;if((a[55512]|0)!=0){return 52624}if((bN(55512)|0)==0){return 52624}DK(52624,19744,20);ep(862,52624,q|0)|0;return 52624}function JW(b){b=b|0;if((a[55456]|0)!=0){return 52536}if((bN(55456)|0)==0){return 52536}DW(52536,19520,Km(19520)|0);ep(340,52536,q|0)|0;return 52536}function JX(b){b=b|0;if((a[55504]|0)!=0){return 52608}if((bN(55504)|0)==0){return 52608}DK(52608,19368,11);ep(862,52608,q|0)|0;return 52608}function JY(b){b=b|0;if((a[55448]|0)!=0){return 52520}if((bN(55448)|0)==0){return 52520}DW(52520,19128,Km(19128)|0);ep(340,52520,q|0)|0;return 52520}function JZ(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0.0,j=0,k=0,l=0.0;f=i;i=i+8|0;g=f|0;if((b|0)==(d|0)){c[e>>2]=4;h=0.0;i=f;return+h}j=ci()|0;k=c[j>>2]|0;c[j>>2]=0;do{if((a[55400]|0)==0){if((bN(55400)|0)==0){break}c[13026]=fM(2147483647,22888,0)|0}}while(0);l=+K$(b,g,c[13026]|0);b=c[j>>2]|0;if((b|0)==0){c[j>>2]=k}if((c[g>>2]|0)!=(d|0)){c[e>>2]=4;h=0.0;i=f;return+h}if((b|0)!=34){h=l;i=f;return+h}c[e>>2]=4;h=l;i=f;return+h}function J_(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0.0,j=0,k=0,l=0.0;f=i;i=i+8|0;g=f|0;if((b|0)==(d|0)){c[e>>2]=4;h=0.0;i=f;return+h}j=ci()|0;k=c[j>>2]|0;c[j>>2]=0;do{if((a[55400]|0)==0){if((bN(55400)|0)==0){break}c[13026]=fM(2147483647,22888,0)|0}}while(0);l=+K$(b,g,c[13026]|0);b=c[j>>2]|0;if((b|0)==0){c[j>>2]=k}if((c[g>>2]|0)!=(d|0)){c[e>>2]=4;h=0.0;i=f;return+h}if((b|0)!=34){h=l;i=f;return+h}c[e>>2]=4;h=l;i=f;return+h}function J$(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0.0,j=0,k=0,l=0.0;f=i;i=i+8|0;g=f|0;if((b|0)==(d|0)){c[e>>2]=4;h=0.0;i=f;return+h}j=ci()|0;k=c[j>>2]|0;c[j>>2]=0;do{if((a[55400]|0)==0){if((bN(55400)|0)==0){break}c[13026]=fM(2147483647,22888,0)|0}}while(0);l=+K$(b,g,c[13026]|0);b=c[j>>2]|0;if((b|0)==0){c[j>>2]=k}if((c[g>>2]|0)!=(d|0)){c[e>>2]=4;h=0.0;i=f;return+h}if((b|0)==34){c[e>>2]=4}h=l;i=f;return+h}function J0(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;g=i;i=i+8|0;h=g|0;do{if((b|0)==(d|0)){c[e>>2]=4;j=0;k=0}else{if((a[b]|0)==45){c[e>>2]=4;j=0;k=0;break}l=ci()|0;m=c[l>>2]|0;c[l>>2]=0;do{if((a[55400]|0)==0){if((bN(55400)|0)==0){break}c[13026]=fM(2147483647,22888,0)|0}}while(0);n=d5(b|0,h|0,f|0,c[13026]|0)|0;o=c[l>>2]|0;if((o|0)==0){c[l>>2]=m}if((c[h>>2]|0)!=(d|0)){c[e>>2]=4;j=0;k=0;break}if((o|0)!=34){j=K;k=n;break}c[e>>2]=4;j=-1;k=-1}}while(0);i=g;return(K=j,k)|0}function J1(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0;g=i;i=i+8|0;h=g|0;if((b|0)==(d|0)){c[e>>2]=4;j=0;i=g;return j|0}if((a[b]|0)==45){c[e>>2]=4;j=0;i=g;return j|0}k=ci()|0;l=c[k>>2]|0;c[k>>2]=0;do{if((a[55400]|0)==0){if((bN(55400)|0)==0){break}c[13026]=fM(2147483647,22888,0)|0}}while(0);m=d5(b|0,h|0,f|0,c[13026]|0)|0;f=K;b=c[k>>2]|0;if((b|0)==0){c[k>>2]=l}if((c[h>>2]|0)!=(d|0)){c[e>>2]=4;j=0;i=g;return j|0}d=0;if((b|0)==34|(f>>>0>d>>>0|f>>>0==d>>>0&m>>>0>-1>>>0)){c[e>>2]=4;j=-1;i=g;return j|0}else{j=m;i=g;return j|0}return 0}function J2(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0;g=i;i=i+8|0;h=g|0;if((b|0)==(d|0)){c[e>>2]=4;j=0;i=g;return j|0}if((a[b]|0)==45){c[e>>2]=4;j=0;i=g;return j|0}k=ci()|0;l=c[k>>2]|0;c[k>>2]=0;do{if((a[55400]|0)==0){if((bN(55400)|0)==0){break}c[13026]=fM(2147483647,22888,0)|0}}while(0);m=d5(b|0,h|0,f|0,c[13026]|0)|0;f=K;b=c[k>>2]|0;if((b|0)==0){c[k>>2]=l}if((c[h>>2]|0)!=(d|0)){c[e>>2]=4;j=0;i=g;return j|0}d=0;if((b|0)==34|(f>>>0>d>>>0|f>>>0==d>>>0&m>>>0>-1>>>0)){c[e>>2]=4;j=-1;i=g;return j|0}else{j=m;i=g;return j|0}return 0}function J3(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0;g=i;i=i+8|0;h=g|0;if((b|0)==(d|0)){c[e>>2]=4;j=0;i=g;return j|0}if((a[b]|0)==45){c[e>>2]=4;j=0;i=g;return j|0}k=ci()|0;l=c[k>>2]|0;c[k>>2]=0;do{if((a[55400]|0)==0){if((bN(55400)|0)==0){break}c[13026]=fM(2147483647,22888,0)|0}}while(0);m=d5(b|0,h|0,f|0,c[13026]|0)|0;f=K;b=c[k>>2]|0;if((b|0)==0){c[k>>2]=l}if((c[h>>2]|0)!=(d|0)){c[e>>2]=4;j=0;i=g;return j|0}d=0;if((b|0)==34|(f>>>0>d>>>0|f>>>0==d>>>0&m>>>0>65535>>>0)){c[e>>2]=4;j=-1;i=g;return j|0}else{j=m&65535;i=g;return j|0}return 0}function J4(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0;g=i;i=i+8|0;h=g|0;if((b|0)==(d|0)){c[e>>2]=4;j=0;k=0;i=g;return(K=j,k)|0}l=ci()|0;m=c[l>>2]|0;c[l>>2]=0;do{if((a[55400]|0)==0){if((bN(55400)|0)==0){break}c[13026]=fM(2147483647,22888,0)|0}}while(0);n=cv(b|0,h|0,f|0,c[13026]|0)|0;f=K;b=c[l>>2]|0;if((b|0)==0){c[l>>2]=m}if((c[h>>2]|0)!=(d|0)){c[e>>2]=4;j=0;k=0;i=g;return(K=j,k)|0}if((b|0)!=34){j=f;k=n;i=g;return(K=j,k)|0}c[e>>2]=4;e=0;b=(f|0)>(e|0)|(f|0)==(e|0)&n>>>0>0>>>0;j=b?2147483647:-2147483648;k=b?-1:0;i=g;return(K=j,k)|0}function J5(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0;g=i;i=i+8|0;h=g|0;if((b|0)==(d|0)){c[e>>2]=4;j=0;i=g;return j|0}k=ci()|0;l=c[k>>2]|0;c[k>>2]=0;do{if((a[55400]|0)==0){if((bN(55400)|0)==0){break}c[13026]=fM(2147483647,22888,0)|0}}while(0);m=cv(b|0,h|0,f|0,c[13026]|0)|0;f=K;b=c[k>>2]|0;if((b|0)==0){c[k>>2]=l}if((c[h>>2]|0)!=(d|0)){c[e>>2]=4;j=0;i=g;return j|0}d=-1;h=0;if((b|0)==34|((f|0)<(d|0)|(f|0)==(d|0)&m>>>0<-2147483648>>>0)|((f|0)>(h|0)|(f|0)==(h|0)&m>>>0>2147483647>>>0)){c[e>>2]=4;e=0;j=(f|0)>(e|0)|(f|0)==(e|0)&m>>>0>0>>>0?2147483647:-2147483648;i=g;return j|0}else{j=m;i=g;return j|0}return 0}function J6(a){a=a|0;var b=0,d=0,e=0,f=0;b=a+4|0;d=(c[a>>2]|0)+(c[b+4>>2]|0)|0;a=d;e=c[b>>2]|0;if((e&1|0)==0){f=e;g$[f&1023](a);return}else{f=c[(c[d>>2]|0)+(e-1)>>2]|0;g$[f&1023](a);return}}function J7(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;e=b+8|0;f=b+4|0;g=c[f>>2]|0;h=c[e>>2]|0;i=g;if(h-i>>2>>>0>=d>>>0){j=d;k=g;do{if((k|0)==0){l=0}else{c[k>>2]=0;l=c[f>>2]|0}k=l+4|0;c[f>>2]=k;j=j-1|0;}while((j|0)!=0);return}j=b+16|0;k=b|0;l=c[k>>2]|0;g=i-l>>2;i=g+d|0;if(i>>>0>1073741823>>>0){Il(0)}m=h-l|0;do{if(m>>2>>>0>536870910>>>0){n=1073741823;o=11}else{l=m>>1;h=l>>>0<i>>>0?i:l;if((h|0)==0){p=0;q=0;break}l=b+128|0;if(!((a[l]&1)==0&h>>>0<29>>>0)){n=h;o=11;break}a[l]=1;p=j;q=h}}while(0);if((o|0)==11){p=KS(n<<2)|0;q=n}n=d;d=p+(g<<2)|0;do{if((d|0)==0){r=0}else{c[d>>2]=0;r=d}d=r+4|0;n=n-1|0;}while((n|0)!=0);n=c[k>>2]|0;r=(c[f>>2]|0)-n|0;o=p+(g-(r>>2)<<2)|0;g=n;K2(o|0,g|0,r)|0;c[k>>2]=o;c[f>>2]=d;c[e>>2]=p+(q<<2);if((n|0)==0){return}if((n|0)==(j|0)){a[b+128|0]=0;return}else{KU(g);return}}function J8(a){a=a|0;DY(51316);DY(51304);DY(51292);DY(51280);DY(51268);DY(51256);DY(51244);DY(51232);DY(51220);DY(51208);DY(51196);DY(51184);DY(51172);DY(51160);DY(51148);DY(51136);DY(51124);DY(51112);DY(51100);DY(51088);DY(51076);DY(51064);DY(51052);DY(51040);return}function J9(a){a=a|0;DM(52060);DM(52048);DM(52036);DM(52024);DM(52012);DM(52e3);DM(51988);DM(51976);DM(51964);DM(51952);DM(51940);DM(51928);DM(51916);DM(51904);DM(51892);DM(51880);DM(51868);DM(51856);DM(51844);DM(51832);DM(51820);DM(51808);DM(51796);DM(51784);return}function Ka(a){a=a|0;DY(50860);DY(50848);DY(50836);DY(50824);DY(50812);DY(50800);DY(50788);DY(50776);DY(50764);DY(50752);DY(50740);DY(50728);DY(50716);DY(50704);DY(50692);DY(50680);DY(50668);DY(50656);DY(50644);DY(50632);DY(50620);DY(50608);DY(50596);DY(50584);return}function Kb(a){a=a|0;DM(51604);DM(51592);DM(51580);DM(51568);DM(51556);DM(51544);DM(51532);DM(51520);DM(51508);DM(51496);DM(51484);DM(51472);DM(51460);DM(51448);DM(51436);DM(51424);DM(51412);DM(51400);DM(51388);DM(51376);DM(51364);DM(51352);DM(51340);DM(51328);return}function Kc(a){a=a|0;DY(51028);DY(51016);DY(51004);DY(50992);DY(50980);DY(50968);DY(50956);DY(50944);DY(50932);DY(50920);DY(50908);DY(50896);DY(50884);DY(50872);return}function Kd(a){a=a|0;DM(51772);DM(51760);DM(51748);DM(51736);DM(51724);DM(51712);DM(51700);DM(51688);DM(51676);DM(51664);DM(51652);DM(51640);DM(51628);DM(51616);return}function Ke(a,b,c){a=a|0;b=b|0;c=c|0;return Kf(0,a,b,(c|0)!=0?c:49704)|0}function Kf(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,v=0,w=0;g=i;i=i+8|0;h=g|0;c[h>>2]=b;j=((f|0)==0?49696:f)|0;f=c[j>>2]|0;L1:do{if((d|0)==0){if((f|0)==0){k=0}else{break}i=g;return k|0}else{if((b|0)==0){l=h;c[h>>2]=l;m=l}else{m=b}if((e|0)==0){k=-2;i=g;return k|0}do{if((f|0)==0){l=a[d]|0;n=l&255;if(l<<24>>24>-1){c[m>>2]=n;k=l<<24>>24!=0|0;i=g;return k|0}else{l=n-194|0;if(l>>>0>50>>>0){break L1}o=d+1|0;p=c[u+(l<<2)>>2]|0;q=e-1|0;break}}else{o=d;p=f;q=e}}while(0);L17:do{if((q|0)==0){r=p}else{l=a[o]|0;n=(l&255)>>>3;if((n-16|n+(p>>26))>>>0>7>>>0){break L1}else{s=o;t=p;v=q;w=l}while(1){s=s+1|0;t=(w&255)-128|t<<6;v=v-1|0;if((t|0)>=0){break}if((v|0)==0){r=t;break L17}w=a[s]|0;if(((w&255)-128|0)>>>0>63>>>0){break L1}}c[j>>2]=0;c[m>>2]=t;k=e-v|0;i=g;return k|0}}while(0);c[j>>2]=r;k=-2;i=g;return k|0}}while(0);c[j>>2]=0;c[(ci()|0)>>2]=84;k=-1;i=g;return k|0}function Kg(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;g=i;i=i+1032|0;h=g|0;j=g+1024|0;k=c[b>>2]|0;c[j>>2]=k;l=(a|0)!=0;m=l?e:256;e=l?a:h|0;L1:do{if((k|0)==0|(m|0)==0){n=0;o=d;p=m;q=e;r=k}else{a=h|0;s=m;t=d;u=0;v=e;w=k;while(1){x=t>>>2;y=x>>>0>=s>>>0;if(!(y|t>>>0>131>>>0)){n=u;o=t;p=s;q=v;r=w;break L1}z=y?s:x;A=t-z|0;x=Kh(v,j,z,f)|0;if((x|0)==-1){break}if((v|0)==(a|0)){B=a;C=s}else{B=v+(x<<2)|0;C=s-x|0}z=x+u|0;x=c[j>>2]|0;if((x|0)==0|(C|0)==0){n=z;o=A;p=C;q=B;r=x;break L1}else{s=C;t=A;u=z;v=B;w=x}}n=-1;o=A;p=0;q=v;r=c[j>>2]|0}}while(0);L12:do{if((r|0)==0){D=n}else{if((p|0)==0|(o|0)==0){D=n;break}else{E=p;F=o;G=n;H=q;I=r}while(1){J=Kf(H,I,F,f)|0;if((J+2|0)>>>0<3>>>0){break}A=(c[j>>2]|0)+J|0;c[j>>2]=A;B=E-1|0;C=G+1|0;if((B|0)==0|(F|0)==(J|0)){D=C;break L12}else{E=B;F=F-J|0;G=C;H=H+4|0;I=A}}if((J|0)==(-1|0)){D=-1;break}else if((J|0)==0){c[j>>2]=0;D=G;break}else{c[f>>2]=0;D=G;break}}}while(0);if(!l){i=g;return D|0}c[b>>2]=c[j>>2];i=g;return D|0}function Kh(b,e,f,g){b=b|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0;h=c[e>>2]|0;do{if((g|0)==0){i=5}else{j=g|0;k=c[j>>2]|0;if((k|0)==0){i=5;break}if((b|0)==0){l=k;m=h;n=f;i=16;break}c[j>>2]=0;o=k;p=h;q=b;r=f;i=36}}while(0);if((i|0)==5){if((b|0)==0){s=h;t=f;i=7}else{v=h;w=b;x=f;i=6}}L7:while(1){if((i|0)==7){i=0;h=a[s]|0;do{if(((h&255)-1|0)>>>0<127>>>0){if((s&3|0)!=0){y=s;z=t;A=h;break}g=c[s>>2]|0;if(((g-16843009|g)&-2139062144|0)==0){B=t;C=s}else{y=s;z=t;A=g&255;break}do{C=C+4|0;B=B-4|0;D=c[C>>2]|0;}while(((D-16843009|D)&-2139062144|0)==0);y=C;z=B;A=D&255}else{y=s;z=t;A=h}}while(0);h=A&255;if((h-1|0)>>>0<127>>>0){s=y+1|0;t=z-1|0;i=7;continue}g=h-194|0;if(g>>>0>50>>>0){E=z;F=b;G=y;i=47;break}l=c[u+(g<<2)>>2]|0;m=y+1|0;n=z;i=16;continue}else if((i|0)==6){i=0;if((x|0)==0){H=f;i=57;break}else{I=x;J=w;K=v}while(1){g=a[K]|0;do{if(((g&255)-1|0)>>>0<127>>>0){if((K&3|0)==0&I>>>0>3>>>0){L=I;M=J;N=K}else{O=K;P=J;Q=I;R=g;break}while(1){S=c[N>>2]|0;if(((S-16843009|S)&-2139062144|0)!=0){i=30;break}c[M>>2]=S&255;c[M+4>>2]=d[N+1|0]|0;c[M+8>>2]=d[N+2|0]|0;T=N+4|0;U=M+16|0;c[M+12>>2]=d[N+3|0]|0;V=L-4|0;if(V>>>0>3>>>0){L=V;M=U;N=T}else{i=31;break}}if((i|0)==30){i=0;O=N;P=M;Q=L;R=S&255;break}else if((i|0)==31){i=0;O=T;P=U;Q=V;R=a[T]|0;break}}else{O=K;P=J;Q=I;R=g}}while(0);W=R&255;if((W-1|0)>>>0>=127>>>0){break}c[P>>2]=W;g=Q-1|0;if((g|0)==0){H=f;i=58;break L7}else{I=g;J=P+4|0;K=O+1|0}}g=W-194|0;if(g>>>0>50>>>0){E=Q;F=P;G=O;i=47;break}o=c[u+(g<<2)>>2]|0;p=O+1|0;q=P;r=Q;i=36;continue}else if((i|0)==16){i=0;g=(d[m]|0)>>>3;if((g-16|g+(l>>26))>>>0>7>>>0){i=17;break}g=m+1|0;do{if((l&33554432|0)==0){X=g}else{if(((d[g]|0)-128|0)>>>0>63>>>0){i=20;break L7}h=m+2|0;if((l&524288|0)==0){X=h;break}if(((d[h]|0)-128|0)>>>0>63>>>0){i=23;break L7}X=m+3|0}}while(0);s=X;t=n-1|0;i=7;continue}else if((i|0)==36){i=0;g=d[p]|0;h=g>>>3;if((h-16|h+(o>>26))>>>0>7>>>0){i=37;break}h=p+1|0;Y=g-128|o<<6;do{if((Y|0)<0){g=(d[h]|0)-128|0;if(g>>>0>63>>>0){i=40;break L7}k=p+2|0;Z=g|Y<<6;if((Z|0)>=0){_=Z;$=k;break}g=(d[k]|0)-128|0;if(g>>>0>63>>>0){i=43;break L7}_=g|Z<<6;$=p+3|0}else{_=Y;$=h}}while(0);c[q>>2]=_;v=$;w=q+4|0;x=r-1|0;i=6;continue}}if((i|0)==43){aa=Z;ab=p-1|0;ac=q;ad=r;i=46}else if((i|0)==40){aa=Y;ab=p-1|0;ac=q;ad=r;i=46}else if((i|0)==20){aa=l;ab=m-1|0;ac=b;ad=n;i=46}else if((i|0)==23){aa=l;ab=m-1|0;ac=b;ad=n;i=46}else if((i|0)==57){return H|0}else if((i|0)==58){return H|0}else if((i|0)==37){aa=o;ab=p-1|0;ac=q;ad=r;i=46}else if((i|0)==17){aa=l;ab=m-1|0;ac=b;ad=n;i=46}if((i|0)==46){if((aa|0)==0){E=ad;F=ac;G=ab;i=47}else{ae=ac;af=ab}}do{if((i|0)==47){if((a[G]|0)!=0){ae=F;af=G;break}if((F|0)!=0){c[F>>2]=0;c[e>>2]=0}H=f-E|0;return H|0}}while(0);c[(ci()|0)>>2]=84;if((ae|0)==0){H=-1;return H|0}c[e>>2]=af;H=-1;return H|0}function Ki(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0;g=i;i=i+8|0;h=g|0;c[h>>2]=b;if((e|0)==0){j=0;i=g;return j|0}do{if((f|0)!=0){if((b|0)==0){k=h;c[h>>2]=k;l=k}else{l=b}k=a[e]|0;m=k&255;if(k<<24>>24>-1){c[l>>2]=m;j=k<<24>>24!=0|0;i=g;return j|0}k=m-194|0;if(k>>>0>50>>>0){break}m=e+1|0;n=c[u+(k<<2)>>2]|0;if(f>>>0<4>>>0){if((n&-2147483648>>>(((f*6|0)-6|0)>>>0)|0)!=0){break}}k=d[m]|0;m=k>>>3;if((m-16|m+(n>>26))>>>0>7>>>0){break}m=k-128|n<<6;if((m|0)>=0){c[l>>2]=m;j=2;i=g;return j|0}n=(d[e+2|0]|0)-128|0;if(n>>>0>63>>>0){break}k=n|m<<6;if((k|0)>=0){c[l>>2]=k;j=3;i=g;return j|0}m=(d[e+3|0]|0)-128|0;if(m>>>0>63>>>0){break}c[l>>2]=m|k<<6;j=4;i=g;return j|0}}while(0);c[(ci()|0)>>2]=84;j=-1;i=g;return j|0}function Kj(b,d,e){b=b|0;d=d|0;e=e|0;var f=0;if((b|0)==0){f=1;return f|0}if(d>>>0<128>>>0){a[b]=d;f=1;return f|0}if(d>>>0<2048>>>0){a[b]=d>>>6|192;a[b+1|0]=d&63|128;f=2;return f|0}if(d>>>0<55296>>>0|(d-57344|0)>>>0<8192>>>0){a[b]=d>>>12|224;a[b+1|0]=d>>>6&63|128;a[b+2|0]=d&63|128;f=3;return f|0}if((d-65536|0)>>>0<1048576>>>0){a[b]=d>>>18|240;a[b+1|0]=d>>>12&63|128;a[b+2|0]=d>>>6&63|128;a[b+3|0]=d&63|128;f=4;return f|0}else{c[(ci()|0)>>2]=84;f=-1;return f|0}return 0}function Kk(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0;f=i;i=i+264|0;g=f|0;h=f+256|0;j=c[b>>2]|0;c[h>>2]=j;k=(a|0)!=0;l=k?e:256;e=k?a:g|0;L1:do{if((j|0)==0|(l|0)==0){m=0;n=d;o=l;p=e;q=j}else{a=g|0;r=l;s=d;t=0;u=e;v=j;while(1){w=s>>>0>=r>>>0;if(!(w|s>>>0>32>>>0)){m=t;n=s;o=r;p=u;q=v;break L1}x=w?r:s;y=s-x|0;w=Kl(u,h,x,0)|0;if((w|0)==-1){break}if((u|0)==(a|0)){z=a;A=r}else{z=u+w|0;A=r-w|0}x=w+t|0;w=c[h>>2]|0;if((w|0)==0|(A|0)==0){m=x;n=y;o=A;p=z;q=w;break L1}else{r=A;s=y;t=x;u=z;v=w}}m=-1;n=y;o=0;p=u;q=c[h>>2]|0}}while(0);L12:do{if((q|0)==0){B=m}else{if((o|0)==0|(n|0)==0){B=m;break}else{C=o;D=n;E=m;F=p;G=q}while(1){H=Kj(F,c[G>>2]|0,0)|0;if((H+1|0)>>>0<2>>>0){break}y=(c[h>>2]|0)+4|0;c[h>>2]=y;z=D-1|0;A=E+1|0;if((C|0)==(H|0)|(z|0)==0){B=A;break L12}else{C=C-H|0;D=z;E=A;F=F+H|0;G=y}}if((H|0)!=0){B=-1;break}c[h>>2]=0;B=E}}while(0);if(!k){i=f;return B|0}c[b>>2]=c[h>>2];i=f;return B|0}function Kl(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;f=i;i=i+8|0;g=f|0;if((b|0)==0){h=c[d>>2]|0;j=g|0;k=c[h>>2]|0;if((k|0)==0){l=0;i=f;return l|0}else{m=0;n=h;o=k}while(1){if(o>>>0>127>>>0){k=Kj(j,o,0)|0;if((k|0)==-1){l=-1;p=28;break}else{q=k}}else{q=1}k=q+m|0;h=n+4|0;r=c[h>>2]|0;if((r|0)==0){l=k;p=33;break}else{m=k;n=h;o=r}}if((p|0)==28){i=f;return l|0}else if((p|0)==33){i=f;return l|0}}L14:do{if(e>>>0>3>>>0){o=e;n=b;m=c[d>>2]|0;while(1){q=c[m>>2]|0;if((q|0)==0){s=o;t=n;break L14}if(q>>>0>127>>>0){j=Kj(n,q,0)|0;if((j|0)==-1){l=-1;break}u=n+j|0;v=o-j|0;w=m}else{a[n]=q;u=n+1|0;v=o-1|0;w=c[d>>2]|0}q=w+4|0;c[d>>2]=q;if(v>>>0>3>>>0){o=v;n=u;m=q}else{s=v;t=u;break L14}}i=f;return l|0}else{s=e;t=b}}while(0);L26:do{if((s|0)==0){x=0}else{b=g|0;u=s;v=t;w=c[d>>2]|0;while(1){m=c[w>>2]|0;if((m|0)==0){p=24;break}if(m>>>0>127>>>0){n=Kj(b,m,0)|0;if((n|0)==-1){l=-1;p=32;break}if(n>>>0>u>>>0){p=20;break}Kj(v,c[w>>2]|0,0)|0;y=v+n|0;z=u-n|0;A=w}else{a[v]=m;y=v+1|0;z=u-1|0;A=c[d>>2]|0}m=A+4|0;c[d>>2]=m;if((z|0)==0){x=0;break L26}else{u=z;v=y;w=m}}if((p|0)==20){l=e-u|0;i=f;return l|0}else if((p|0)==24){a[v]=0;x=u;break}else if((p|0)==32){i=f;return l|0}}}while(0);c[d>>2]=0;l=e-x|0;i=f;return l|0}function Km(a){a=a|0;var b=0;b=a;while(1){if((c[b>>2]|0)==0){break}else{b=b+4|0}}return b-a>>2|0}function Kn(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;if((d|0)==0){return a|0}else{e=b;f=d;g=a}while(1){d=f-1|0;c[g>>2]=c[e>>2];if((d|0)==0){break}else{e=e+4|0;f=d;g=g+4|0}}return a|0}function Ko(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;e=(d|0)==0;if(a-b>>2>>>0<d>>>0){if(e){return a|0}else{f=d}do{f=f-1|0;c[a+(f<<2)>>2]=c[b+(f<<2)>>2];}while((f|0)!=0);return a|0}else{if(e){return a|0}else{g=b;h=d;i=a}while(1){d=h-1|0;c[i>>2]=c[g>>2];if((d|0)==0){break}else{g=g+4|0;h=d;i=i+4|0}}return a|0}return 0}function Kp(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;if((d|0)==0){return a|0}else{e=d;f=a}while(1){d=e-1|0;c[f>>2]=b;if((d|0)==0){break}else{e=d;f=f+4|0}}return a|0}function Kq(a){a=a|0;return}function Kr(a){a=a|0;c[a>>2]=27464;return}function Ks(a){a=a|0;KU(a);return}function Kt(a){a=a|0;return}function Ku(a){a=a|0;return 22152}function Kv(a){a=a|0;Kq(a|0);return}function Kw(a){a=a|0;return}function Kx(a){a=a|0;return}function Ky(a){a=a|0;Kq(a|0);KU(a);return}function Kz(a){a=a|0;Kq(a|0);KU(a);return}function KA(a){a=a|0;Kq(a|0);KU(a);return}function KB(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;i=i+56|0;f=e|0;if((a|0)==(b|0)){g=1;i=e;return g|0}if((b|0)==0){g=0;i=e;return g|0}h=KF(b,47400,47384,-1)|0;b=h;if((h|0)==0){g=0;i=e;return g|0}K1(f|0,0,56)|0;c[f>>2]=b;c[f+8>>2]=a;c[f+12>>2]=-1;c[f+48>>2]=1;hM[c[(c[h>>2]|0)+28>>2]&255](b,f,c[d>>2]|0,1);if((c[f+24>>2]|0)!=1){g=0;i=e;return g|0}c[d>>2]=c[f+16>>2];g=1;i=e;return g|0}function KC(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0;if((c[d+8>>2]|0)!=(b|0)){return}b=d+16|0;g=c[b>>2]|0;if((g|0)==0){c[b>>2]=e;c[d+24>>2]=f;c[d+36>>2]=1;return}if((g|0)!=(e|0)){e=d+36|0;c[e>>2]=(c[e>>2]|0)+1;c[d+24>>2]=2;a[d+54|0]=1;return}e=d+24|0;if((c[e>>2]|0)!=2){return}c[e>>2]=f;return}function KD(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0;if((b|0)!=(c[d+8>>2]|0)){g=c[b+8>>2]|0;hM[c[(c[g>>2]|0)+28>>2]&255](g,d,e,f);return}g=d+16|0;b=c[g>>2]|0;if((b|0)==0){c[g>>2]=e;c[d+24>>2]=f;c[d+36>>2]=1;return}if((b|0)!=(e|0)){e=d+36|0;c[e>>2]=(c[e>>2]|0)+1;c[d+24>>2]=2;a[d+54|0]=1;return}e=d+24|0;if((c[e>>2]|0)!=2){return}c[e>>2]=f;return}function KE(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0;if((b|0)==(c[d+8>>2]|0)){g=d+16|0;h=c[g>>2]|0;if((h|0)==0){c[g>>2]=e;c[d+24>>2]=f;c[d+36>>2]=1;return}if((h|0)!=(e|0)){h=d+36|0;c[h>>2]=(c[h>>2]|0)+1;c[d+24>>2]=2;a[d+54|0]=1;return}h=d+24|0;if((c[h>>2]|0)!=2){return}c[h>>2]=f;return}h=c[b+12>>2]|0;g=b+16+(h<<3)|0;i=c[b+20>>2]|0;j=i>>8;if((i&1|0)==0){k=j}else{k=c[(c[e>>2]|0)+j>>2]|0}j=c[b+16>>2]|0;hM[c[(c[j>>2]|0)+28>>2]&255](j,d,e+k|0,(i&2|0)!=0?f:2);if((h|0)<=1){return}h=d+54|0;i=e;k=b+24|0;while(1){b=c[k+4>>2]|0;j=b>>8;if((b&1|0)==0){l=j}else{l=c[(c[i>>2]|0)+j>>2]|0}j=c[k>>2]|0;hM[c[(c[j>>2]|0)+28>>2]&255](j,d,e+l|0,(b&2|0)!=0?f:2);if((a[h]&1)!=0){m=19;break}b=k+8|0;if(b>>>0<g>>>0){k=b}else{m=20;break}}if((m|0)==19){return}else if((m|0)==20){return}}function KF(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;f=i;i=i+56|0;g=f|0;h=c[a>>2]|0;j=a+(c[h-8>>2]|0)|0;k=c[h-4>>2]|0;h=k;c[g>>2]=d;c[g+4>>2]=a;c[g+8>>2]=b;c[g+12>>2]=e;e=g+16|0;b=g+20|0;a=g+24|0;l=g+28|0;m=g+32|0;n=g+40|0;K1(e|0,0,39)|0;if((k|0)==(d|0)){c[g+48>>2]=1;hk[c[(c[k>>2]|0)+20>>2]&63](h,g,j,j,1,0);i=f;return((c[a>>2]|0)==1?j:0)|0}g7[c[(c[k>>2]|0)+24>>2]&127](h,g,j,1,0);j=c[g+36>>2]|0;if((j|0)==1){do{if((c[a>>2]|0)!=1){if((c[n>>2]|0)!=0){o=0;i=f;return o|0}if((c[l>>2]|0)!=1){o=0;i=f;return o|0}if((c[m>>2]|0)==1){break}else{o=0}i=f;return o|0}}while(0);o=c[e>>2]|0;i=f;return o|0}else if((j|0)==0){if((c[n>>2]|0)!=1){o=0;i=f;return o|0}if((c[l>>2]|0)!=1){o=0;i=f;return o|0}o=(c[m>>2]|0)==1?c[b>>2]|0:0;i=f;return o|0}else{o=0;i=f;return o|0}return 0}function KG(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0;h=b|0;if((h|0)==(c[d+8>>2]|0)){if((c[d+4>>2]|0)!=(e|0)){return}i=d+28|0;if((c[i>>2]|0)==1){return}c[i>>2]=f;return}if((h|0)==(c[d>>2]|0)){do{if((c[d+16>>2]|0)!=(e|0)){h=d+20|0;if((c[h>>2]|0)==(e|0)){break}c[d+32>>2]=f;i=d+44|0;if((c[i>>2]|0)==4){return}j=c[b+12>>2]|0;k=b+16+(j<<3)|0;L19:do{if((j|0)>0){l=d+52|0;m=d+53|0;n=d+54|0;o=b+8|0;p=d+24|0;q=e;r=0;s=b+16|0;t=0;L21:while(1){a[l]=0;a[m]=0;u=c[s+4>>2]|0;v=u>>8;if((u&1|0)==0){w=v}else{w=c[(c[q>>2]|0)+v>>2]|0}v=c[s>>2]|0;hk[c[(c[v>>2]|0)+20>>2]&63](v,d,e,e+w|0,2-(u>>>1&1)|0,g);if((a[n]&1)!=0){x=t;y=r;break}do{if((a[m]&1)==0){z=t;A=r}else{if((a[l]&1)==0){if((c[o>>2]&1|0)==0){x=1;y=r;break L21}else{z=1;A=r;break}}if((c[p>>2]|0)==1){B=27;break L19}if((c[o>>2]&2|0)==0){B=27;break L19}else{z=1;A=1}}}while(0);u=s+8|0;if(u>>>0<k>>>0){r=A;s=u;t=z}else{x=z;y=A;break}}if(y){C=x;B=26}else{D=x;B=23}}else{D=0;B=23}}while(0);do{if((B|0)==23){c[h>>2]=e;k=d+40|0;c[k>>2]=(c[k>>2]|0)+1;if((c[d+36>>2]|0)!=1){C=D;B=26;break}if((c[d+24>>2]|0)!=2){C=D;B=26;break}a[d+54|0]=1;if(D){B=27}else{B=28}}}while(0);if((B|0)==26){if(C){B=27}else{B=28}}if((B|0)==27){c[i>>2]=3;return}else if((B|0)==28){c[i>>2]=4;return}}}while(0);if((f|0)!=1){return}c[d+32>>2]=1;return}C=c[b+12>>2]|0;D=b+16+(C<<3)|0;x=c[b+20>>2]|0;y=x>>8;if((x&1|0)==0){E=y}else{E=c[(c[e>>2]|0)+y>>2]|0}y=c[b+16>>2]|0;g7[c[(c[y>>2]|0)+24>>2]&127](y,d,e+E|0,(x&2|0)!=0?f:2,g);x=b+24|0;if((C|0)<=1){return}C=c[b+8>>2]|0;do{if((C&2|0)==0){b=d+36|0;if((c[b>>2]|0)==1){break}if((C&1|0)==0){E=d+54|0;y=e;A=x;while(1){if((a[E]&1)!=0){B=69;break}if((c[b>>2]|0)==1){B=70;break}z=c[A+4>>2]|0;w=z>>8;if((z&1|0)==0){F=w}else{F=c[(c[y>>2]|0)+w>>2]|0}w=c[A>>2]|0;g7[c[(c[w>>2]|0)+24>>2]&127](w,d,e+F|0,(z&2|0)!=0?f:2,g);z=A+8|0;if(z>>>0<D>>>0){A=z}else{B=63;break}}if((B|0)==63){return}else if((B|0)==69){return}else if((B|0)==70){return}}A=d+24|0;y=d+54|0;E=e;i=x;while(1){if((a[y]&1)!=0){B=55;break}if((c[b>>2]|0)==1){if((c[A>>2]|0)==1){B=67;break}}z=c[i+4>>2]|0;w=z>>8;if((z&1|0)==0){G=w}else{G=c[(c[E>>2]|0)+w>>2]|0}w=c[i>>2]|0;g7[c[(c[w>>2]|0)+24>>2]&127](w,d,e+G|0,(z&2|0)!=0?f:2,g);z=i+8|0;if(z>>>0<D>>>0){i=z}else{B=68;break}}if((B|0)==55){return}else if((B|0)==67){return}else if((B|0)==68){return}}}while(0);G=d+54|0;F=e;C=x;while(1){if((a[G]&1)!=0){B=62;break}x=c[C+4>>2]|0;i=x>>8;if((x&1|0)==0){H=i}else{H=c[(c[F>>2]|0)+i>>2]|0}i=c[C>>2]|0;g7[c[(c[i>>2]|0)+24>>2]&127](i,d,e+H|0,(x&2|0)!=0?f:2,g);x=C+8|0;if(x>>>0<D>>>0){C=x}else{B=61;break}}if((B|0)==61){return}else if((B|0)==62){return}}function KH(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0;h=b|0;if((h|0)==(c[d+8>>2]|0)){if((c[d+4>>2]|0)!=(e|0)){return}i=d+28|0;if((c[i>>2]|0)==1){return}c[i>>2]=f;return}if((h|0)!=(c[d>>2]|0)){h=c[b+8>>2]|0;g7[c[(c[h>>2]|0)+24>>2]&127](h,d,e,f,g);return}do{if((c[d+16>>2]|0)!=(e|0)){h=d+20|0;if((c[h>>2]|0)==(e|0)){break}c[d+32>>2]=f;i=d+44|0;if((c[i>>2]|0)==4){return}j=d+52|0;a[j]=0;k=d+53|0;a[k]=0;l=c[b+8>>2]|0;hk[c[(c[l>>2]|0)+20>>2]&63](l,d,e,e,1,g);if((a[k]&1)==0){m=0;n=13}else{if((a[j]&1)==0){m=1;n=13}}L23:do{if((n|0)==13){c[h>>2]=e;j=d+40|0;c[j>>2]=(c[j>>2]|0)+1;do{if((c[d+36>>2]|0)==1){if((c[d+24>>2]|0)!=2){n=16;break}a[d+54|0]=1;if(m){break L23}}else{n=16}}while(0);if((n|0)==16){if(m){break}}c[i>>2]=4;return}}while(0);c[i>>2]=3;return}}while(0);if((f|0)!=1){return}c[d+32>>2]=1;return}function KI(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;if((c[d+8>>2]|0)==(b|0)){if((c[d+4>>2]|0)!=(e|0)){return}g=d+28|0;if((c[g>>2]|0)==1){return}c[g>>2]=f;return}if((c[d>>2]|0)!=(b|0)){return}do{if((c[d+16>>2]|0)!=(e|0)){b=d+20|0;if((c[b>>2]|0)==(e|0)){break}c[d+32>>2]=f;c[b>>2]=e;b=d+40|0;c[b>>2]=(c[b>>2]|0)+1;do{if((c[d+36>>2]|0)==1){if((c[d+24>>2]|0)!=2){break}a[d+54|0]=1}}while(0);c[d+44>>2]=4;return}}while(0);if((f|0)!=1){return}c[d+32>>2]=1;return}function KJ(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;if((b|0)!=(c[d+8>>2]|0)){i=d+52|0;j=a[i]&1;k=d+53|0;l=a[k]&1;m=c[b+12>>2]|0;n=b+16+(m<<3)|0;a[i]=0;a[k]=0;o=c[b+20>>2]|0;p=o>>8;if((o&1|0)==0){q=p}else{q=c[(c[f>>2]|0)+p>>2]|0}p=c[b+16>>2]|0;hk[c[(c[p>>2]|0)+20>>2]&63](p,d,e,f+q|0,(o&2|0)!=0?g:2,h);L6:do{if((m|0)>1){o=d+24|0;q=b+8|0;p=d+54|0;r=f;s=b+24|0;do{if((a[p]&1)!=0){break L6}do{if((a[i]&1)==0){if((a[k]&1)==0){break}if((c[q>>2]&1|0)==0){break L6}}else{if((c[o>>2]|0)==1){break L6}if((c[q>>2]&2|0)==0){break L6}}}while(0);a[i]=0;a[k]=0;t=c[s+4>>2]|0;u=t>>8;if((t&1|0)==0){v=u}else{v=c[(c[r>>2]|0)+u>>2]|0}u=c[s>>2]|0;hk[c[(c[u>>2]|0)+20>>2]&63](u,d,e,f+v|0,(t&2|0)!=0?g:2,h);s=s+8|0;}while(s>>>0<n>>>0)}}while(0);a[i]=j;a[k]=l;return}a[d+53|0]=1;if((c[d+4>>2]|0)!=(f|0)){return}a[d+52|0]=1;f=d+16|0;l=c[f>>2]|0;if((l|0)==0){c[f>>2]=e;c[d+24>>2]=g;c[d+36>>2]=1;if(!((c[d+48>>2]|0)==1&(g|0)==1)){return}a[d+54|0]=1;return}if((l|0)!=(e|0)){e=d+36|0;c[e>>2]=(c[e>>2]|0)+1;a[d+54|0]=1;return}e=d+24|0;l=c[e>>2]|0;if((l|0)==2){c[e>>2]=g;w=g}else{w=l}if(!((c[d+48>>2]|0)==1&(w|0)==1)){return}a[d+54|0]=1;return}function KK(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0;if((b|0)!=(c[d+8>>2]|0)){i=c[b+8>>2]|0;hk[c[(c[i>>2]|0)+20>>2]&63](i,d,e,f,g,h);return}a[d+53|0]=1;if((c[d+4>>2]|0)!=(f|0)){return}a[d+52|0]=1;f=d+16|0;h=c[f>>2]|0;if((h|0)==0){c[f>>2]=e;c[d+24>>2]=g;c[d+36>>2]=1;if(!((c[d+48>>2]|0)==1&(g|0)==1)){return}a[d+54|0]=1;return}if((h|0)!=(e|0)){e=d+36|0;c[e>>2]=(c[e>>2]|0)+1;a[d+54|0]=1;return}e=d+24|0;h=c[e>>2]|0;if((h|0)==2){c[e>>2]=g;j=g}else{j=h}if(!((c[d+48>>2]|0)==1&(j|0)==1)){return}a[d+54|0]=1;return}function KL(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0;if((c[d+8>>2]|0)!=(b|0)){return}a[d+53|0]=1;if((c[d+4>>2]|0)!=(f|0)){return}a[d+52|0]=1;f=d+16|0;b=c[f>>2]|0;if((b|0)==0){c[f>>2]=e;c[d+24>>2]=g;c[d+36>>2]=1;if(!((c[d+48>>2]|0)==1&(g|0)==1)){return}a[d+54|0]=1;return}if((b|0)!=(e|0)){e=d+36|0;c[e>>2]=(c[e>>2]|0)+1;a[d+54|0]=1;return}e=d+24|0;b=c[e>>2]|0;if((b|0)==2){c[e>>2]=g;i=g}else{i=b}if(!((c[d+48>>2]|0)==1&(i|0)==1)){return}a[d+54|0]=1;return}function KM(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0,ai=0,aj=0,ak=0,al=0,am=0,an=0,ao=0,ap=0,aq=0,ar=0,as=0,at=0,au=0,av=0,aw=0,ax=0,ay=0,az=0,aA=0,aB=0,aC=0,aD=0,aE=0,aF=0,aG=0;do{if(a>>>0<245>>>0){if(a>>>0<11>>>0){b=16}else{b=a+11&-8}d=b>>>3;e=c[12528]|0;f=e>>>(d>>>0);if((f&3|0)!=0){g=(f&1^1)+d|0;h=g<<1;i=50152+(h<<2)|0;j=50152+(h+2<<2)|0;h=c[j>>2]|0;k=h+8|0;l=c[k>>2]|0;do{if((i|0)==(l|0)){c[12528]=e&~(1<<g)}else{if(l>>>0<(c[12532]|0)>>>0){ct();return 0}m=l+12|0;if((c[m>>2]|0)==(h|0)){c[m>>2]=i;c[j>>2]=l;break}else{ct();return 0}}}while(0);l=g<<3;c[h+4>>2]=l|3;j=h+(l|4)|0;c[j>>2]=c[j>>2]|1;n=k;return n|0}if(b>>>0<=(c[12530]|0)>>>0){o=b;break}if((f|0)!=0){j=2<<d;l=f<<d&(j|-j);j=(l&-l)-1|0;l=j>>>12&16;i=j>>>(l>>>0);j=i>>>5&8;m=i>>>(j>>>0);i=m>>>2&4;p=m>>>(i>>>0);m=p>>>1&2;q=p>>>(m>>>0);p=q>>>1&1;r=(j|l|i|m|p)+(q>>>(p>>>0))|0;p=r<<1;q=50152+(p<<2)|0;m=50152+(p+2<<2)|0;p=c[m>>2]|0;i=p+8|0;l=c[i>>2]|0;do{if((q|0)==(l|0)){c[12528]=e&~(1<<r)}else{if(l>>>0<(c[12532]|0)>>>0){ct();return 0}j=l+12|0;if((c[j>>2]|0)==(p|0)){c[j>>2]=q;c[m>>2]=l;break}else{ct();return 0}}}while(0);l=r<<3;m=l-b|0;c[p+4>>2]=b|3;q=p;e=q+b|0;c[q+(b|4)>>2]=m|1;c[q+l>>2]=m;l=c[12530]|0;if((l|0)!=0){q=c[12533]|0;d=l>>>3;l=d<<1;f=50152+(l<<2)|0;k=c[12528]|0;h=1<<d;do{if((k&h|0)==0){c[12528]=k|h;s=f;t=50152+(l+2<<2)|0}else{d=50152+(l+2<<2)|0;g=c[d>>2]|0;if(g>>>0>=(c[12532]|0)>>>0){s=g;t=d;break}ct();return 0}}while(0);c[t>>2]=q;c[s+12>>2]=q;c[q+8>>2]=s;c[q+12>>2]=f}c[12530]=m;c[12533]=e;n=i;return n|0}l=c[12529]|0;if((l|0)==0){o=b;break}h=(l&-l)-1|0;l=h>>>12&16;k=h>>>(l>>>0);h=k>>>5&8;p=k>>>(h>>>0);k=p>>>2&4;r=p>>>(k>>>0);p=r>>>1&2;d=r>>>(p>>>0);r=d>>>1&1;g=c[50416+((h|l|k|p|r)+(d>>>(r>>>0))<<2)>>2]|0;r=g;d=g;p=(c[g+4>>2]&-8)-b|0;while(1){g=c[r+16>>2]|0;if((g|0)==0){k=c[r+20>>2]|0;if((k|0)==0){break}else{u=k}}else{u=g}g=(c[u+4>>2]&-8)-b|0;k=g>>>0<p>>>0;r=u;d=k?u:d;p=k?g:p}r=d;i=c[12532]|0;if(r>>>0<i>>>0){ct();return 0}e=r+b|0;m=e;if(r>>>0>=e>>>0){ct();return 0}e=c[d+24>>2]|0;f=c[d+12>>2]|0;do{if((f|0)==(d|0)){q=d+20|0;g=c[q>>2]|0;if((g|0)==0){k=d+16|0;l=c[k>>2]|0;if((l|0)==0){v=0;break}else{w=l;x=k}}else{w=g;x=q}while(1){q=w+20|0;g=c[q>>2]|0;if((g|0)!=0){w=g;x=q;continue}q=w+16|0;g=c[q>>2]|0;if((g|0)==0){break}else{w=g;x=q}}if(x>>>0<i>>>0){ct();return 0}else{c[x>>2]=0;v=w;break}}else{q=c[d+8>>2]|0;if(q>>>0<i>>>0){ct();return 0}g=q+12|0;if((c[g>>2]|0)!=(d|0)){ct();return 0}k=f+8|0;if((c[k>>2]|0)==(d|0)){c[g>>2]=f;c[k>>2]=q;v=f;break}else{ct();return 0}}}while(0);L78:do{if((e|0)!=0){f=d+28|0;i=50416+(c[f>>2]<<2)|0;do{if((d|0)==(c[i>>2]|0)){c[i>>2]=v;if((v|0)!=0){break}c[12529]=c[12529]&~(1<<c[f>>2]);break L78}else{if(e>>>0<(c[12532]|0)>>>0){ct();return 0}q=e+16|0;if((c[q>>2]|0)==(d|0)){c[q>>2]=v}else{c[e+20>>2]=v}if((v|0)==0){break L78}}}while(0);if(v>>>0<(c[12532]|0)>>>0){ct();return 0}c[v+24>>2]=e;f=c[d+16>>2]|0;do{if((f|0)!=0){if(f>>>0<(c[12532]|0)>>>0){ct();return 0}else{c[v+16>>2]=f;c[f+24>>2]=v;break}}}while(0);f=c[d+20>>2]|0;if((f|0)==0){break}if(f>>>0<(c[12532]|0)>>>0){ct();return 0}else{c[v+20>>2]=f;c[f+24>>2]=v;break}}}while(0);if(p>>>0<16>>>0){e=p+b|0;c[d+4>>2]=e|3;f=r+(e+4)|0;c[f>>2]=c[f>>2]|1}else{c[d+4>>2]=b|3;c[r+(b|4)>>2]=p|1;c[r+(p+b)>>2]=p;f=c[12530]|0;if((f|0)!=0){e=c[12533]|0;i=f>>>3;f=i<<1;q=50152+(f<<2)|0;k=c[12528]|0;g=1<<i;do{if((k&g|0)==0){c[12528]=k|g;y=q;z=50152+(f+2<<2)|0}else{i=50152+(f+2<<2)|0;l=c[i>>2]|0;if(l>>>0>=(c[12532]|0)>>>0){y=l;z=i;break}ct();return 0}}while(0);c[z>>2]=e;c[y+12>>2]=e;c[e+8>>2]=y;c[e+12>>2]=q}c[12530]=p;c[12533]=m}f=d+8|0;if((f|0)==0){o=b;break}else{n=f}return n|0}else{if(a>>>0>4294967231>>>0){o=-1;break}f=a+11|0;g=f&-8;k=c[12529]|0;if((k|0)==0){o=g;break}r=-g|0;i=f>>>8;do{if((i|0)==0){A=0}else{if(g>>>0>16777215>>>0){A=31;break}f=(i+1048320|0)>>>16&8;l=i<<f;h=(l+520192|0)>>>16&4;j=l<<h;l=(j+245760|0)>>>16&2;B=14-(h|f|l)+(j<<l>>>15)|0;A=g>>>((B+7|0)>>>0)&1|B<<1}}while(0);i=c[50416+(A<<2)>>2]|0;L126:do{if((i|0)==0){C=0;D=r;E=0}else{if((A|0)==31){F=0}else{F=25-(A>>>1)|0}d=0;m=r;p=i;q=g<<F;e=0;while(1){B=c[p+4>>2]&-8;l=B-g|0;if(l>>>0<m>>>0){if((B|0)==(g|0)){C=p;D=l;E=p;break L126}else{G=p;H=l}}else{G=d;H=m}l=c[p+20>>2]|0;B=c[p+16+(q>>>31<<2)>>2]|0;j=(l|0)==0|(l|0)==(B|0)?e:l;if((B|0)==0){C=G;D=H;E=j;break}else{d=G;m=H;p=B;q=q<<1;e=j}}}}while(0);if((E|0)==0&(C|0)==0){i=2<<A;r=k&(i|-i);if((r|0)==0){o=g;break}i=(r&-r)-1|0;r=i>>>12&16;e=i>>>(r>>>0);i=e>>>5&8;q=e>>>(i>>>0);e=q>>>2&4;p=q>>>(e>>>0);q=p>>>1&2;m=p>>>(q>>>0);p=m>>>1&1;I=c[50416+((i|r|e|q|p)+(m>>>(p>>>0))<<2)>>2]|0}else{I=E}if((I|0)==0){J=D;K=C}else{p=I;m=D;q=C;while(1){e=(c[p+4>>2]&-8)-g|0;r=e>>>0<m>>>0;i=r?e:m;e=r?p:q;r=c[p+16>>2]|0;if((r|0)!=0){p=r;m=i;q=e;continue}r=c[p+20>>2]|0;if((r|0)==0){J=i;K=e;break}else{p=r;m=i;q=e}}}if((K|0)==0){o=g;break}if(J>>>0>=((c[12530]|0)-g|0)>>>0){o=g;break}q=K;m=c[12532]|0;if(q>>>0<m>>>0){ct();return 0}p=q+g|0;k=p;if(q>>>0>=p>>>0){ct();return 0}e=c[K+24>>2]|0;i=c[K+12>>2]|0;do{if((i|0)==(K|0)){r=K+20|0;d=c[r>>2]|0;if((d|0)==0){j=K+16|0;B=c[j>>2]|0;if((B|0)==0){L=0;break}else{M=B;N=j}}else{M=d;N=r}while(1){r=M+20|0;d=c[r>>2]|0;if((d|0)!=0){M=d;N=r;continue}r=M+16|0;d=c[r>>2]|0;if((d|0)==0){break}else{M=d;N=r}}if(N>>>0<m>>>0){ct();return 0}else{c[N>>2]=0;L=M;break}}else{r=c[K+8>>2]|0;if(r>>>0<m>>>0){ct();return 0}d=r+12|0;if((c[d>>2]|0)!=(K|0)){ct();return 0}j=i+8|0;if((c[j>>2]|0)==(K|0)){c[d>>2]=i;c[j>>2]=r;L=i;break}else{ct();return 0}}}while(0);L176:do{if((e|0)!=0){i=K+28|0;m=50416+(c[i>>2]<<2)|0;do{if((K|0)==(c[m>>2]|0)){c[m>>2]=L;if((L|0)!=0){break}c[12529]=c[12529]&~(1<<c[i>>2]);break L176}else{if(e>>>0<(c[12532]|0)>>>0){ct();return 0}r=e+16|0;if((c[r>>2]|0)==(K|0)){c[r>>2]=L}else{c[e+20>>2]=L}if((L|0)==0){break L176}}}while(0);if(L>>>0<(c[12532]|0)>>>0){ct();return 0}c[L+24>>2]=e;i=c[K+16>>2]|0;do{if((i|0)!=0){if(i>>>0<(c[12532]|0)>>>0){ct();return 0}else{c[L+16>>2]=i;c[i+24>>2]=L;break}}}while(0);i=c[K+20>>2]|0;if((i|0)==0){break}if(i>>>0<(c[12532]|0)>>>0){ct();return 0}else{c[L+20>>2]=i;c[i+24>>2]=L;break}}}while(0);do{if(J>>>0<16>>>0){e=J+g|0;c[K+4>>2]=e|3;i=q+(e+4)|0;c[i>>2]=c[i>>2]|1}else{c[K+4>>2]=g|3;c[q+(g|4)>>2]=J|1;c[q+(J+g)>>2]=J;i=J>>>3;if(J>>>0<256>>>0){e=i<<1;m=50152+(e<<2)|0;r=c[12528]|0;j=1<<i;do{if((r&j|0)==0){c[12528]=r|j;O=m;P=50152+(e+2<<2)|0}else{i=50152+(e+2<<2)|0;d=c[i>>2]|0;if(d>>>0>=(c[12532]|0)>>>0){O=d;P=i;break}ct();return 0}}while(0);c[P>>2]=k;c[O+12>>2]=k;c[q+(g+8)>>2]=O;c[q+(g+12)>>2]=m;break}e=p;j=J>>>8;do{if((j|0)==0){Q=0}else{if(J>>>0>16777215>>>0){Q=31;break}r=(j+1048320|0)>>>16&8;i=j<<r;d=(i+520192|0)>>>16&4;B=i<<d;i=(B+245760|0)>>>16&2;l=14-(d|r|i)+(B<<i>>>15)|0;Q=J>>>((l+7|0)>>>0)&1|l<<1}}while(0);j=50416+(Q<<2)|0;c[q+(g+28)>>2]=Q;c[q+(g+20)>>2]=0;c[q+(g+16)>>2]=0;m=c[12529]|0;l=1<<Q;if((m&l|0)==0){c[12529]=m|l;c[j>>2]=e;c[q+(g+24)>>2]=j;c[q+(g+12)>>2]=e;c[q+(g+8)>>2]=e;break}if((Q|0)==31){R=0}else{R=25-(Q>>>1)|0}l=J<<R;m=c[j>>2]|0;while(1){if((c[m+4>>2]&-8|0)==(J|0)){break}S=m+16+(l>>>31<<2)|0;j=c[S>>2]|0;if((j|0)==0){T=151;break}else{l=l<<1;m=j}}if((T|0)==151){if(S>>>0<(c[12532]|0)>>>0){ct();return 0}else{c[S>>2]=e;c[q+(g+24)>>2]=m;c[q+(g+12)>>2]=e;c[q+(g+8)>>2]=e;break}}l=m+8|0;j=c[l>>2]|0;i=c[12532]|0;if(m>>>0<i>>>0){ct();return 0}if(j>>>0<i>>>0){ct();return 0}else{c[j+12>>2]=e;c[l>>2]=e;c[q+(g+8)>>2]=j;c[q+(g+12)>>2]=m;c[q+(g+24)>>2]=0;break}}}while(0);q=K+8|0;if((q|0)==0){o=g;break}else{n=q}return n|0}}while(0);K=c[12530]|0;if(o>>>0<=K>>>0){S=K-o|0;J=c[12533]|0;if(S>>>0>15>>>0){R=J;c[12533]=R+o;c[12530]=S;c[R+(o+4)>>2]=S|1;c[R+K>>2]=S;c[J+4>>2]=o|3}else{c[12530]=0;c[12533]=0;c[J+4>>2]=K|3;S=J+(K+4)|0;c[S>>2]=c[S>>2]|1}n=J+8|0;return n|0}J=c[12531]|0;if(o>>>0<J>>>0){S=J-o|0;c[12531]=S;J=c[12534]|0;K=J;c[12534]=K+o;c[K+(o+4)>>2]=S|1;c[J+4>>2]=o|3;n=J+8|0;return n|0}do{if((c[12358]|0)==0){J=cs(30)|0;if((J-1&J|0)==0){c[12360]=J;c[12359]=J;c[12361]=-1;c[12362]=-1;c[12363]=0;c[12639]=0;c[12358]=(gV(0)|0)&-16^1431655768;break}else{ct();return 0}}}while(0);J=o+48|0;S=c[12360]|0;K=o+47|0;R=S+K|0;Q=-S|0;S=R&Q;if(S>>>0<=o>>>0){n=0;return n|0}O=c[12638]|0;do{if((O|0)!=0){P=c[12636]|0;L=P+S|0;if(L>>>0<=P>>>0|L>>>0>O>>>0){n=0}else{break}return n|0}}while(0);L268:do{if((c[12639]&4|0)==0){O=c[12534]|0;L270:do{if((O|0)==0){T=181}else{L=O;P=50560;while(1){U=P|0;M=c[U>>2]|0;if(M>>>0<=L>>>0){V=P+4|0;if((M+(c[V>>2]|0)|0)>>>0>L>>>0){break}}M=c[P+8>>2]|0;if((M|0)==0){T=181;break L270}else{P=M}}if((P|0)==0){T=181;break}L=R-(c[12531]|0)&Q;if(L>>>0>=2147483647>>>0){W=0;break}m=gp(L|0)|0;e=(m|0)==((c[U>>2]|0)+(c[V>>2]|0)|0);X=e?m:-1;Y=e?L:0;Z=m;_=L;T=190}}while(0);do{if((T|0)==181){O=gp(0)|0;if((O|0)==-1){W=0;break}g=O;L=c[12359]|0;m=L-1|0;if((m&g|0)==0){$=S}else{$=S-g+(m+g&-L)|0}L=c[12636]|0;g=L+$|0;if(!($>>>0>o>>>0&$>>>0<2147483647>>>0)){W=0;break}m=c[12638]|0;if((m|0)!=0){if(g>>>0<=L>>>0|g>>>0>m>>>0){W=0;break}}m=gp($|0)|0;g=(m|0)==(O|0);X=g?O:-1;Y=g?$:0;Z=m;_=$;T=190}}while(0);L290:do{if((T|0)==190){m=-_|0;if((X|0)!=-1){aa=Y;ab=X;T=201;break L268}do{if((Z|0)!=-1&_>>>0<2147483647>>>0&_>>>0<J>>>0){g=c[12360]|0;O=K-_+g&-g;if(O>>>0>=2147483647>>>0){ac=_;break}if((gp(O|0)|0)==-1){gp(m|0)|0;W=Y;break L290}else{ac=O+_|0;break}}else{ac=_}}while(0);if((Z|0)==-1){W=Y}else{aa=ac;ab=Z;T=201;break L268}}}while(0);c[12639]=c[12639]|4;ad=W;T=198}else{ad=0;T=198}}while(0);do{if((T|0)==198){if(S>>>0>=2147483647>>>0){break}W=gp(S|0)|0;Z=gp(0)|0;if(!((Z|0)!=-1&(W|0)!=-1&W>>>0<Z>>>0)){break}ac=Z-W|0;Z=ac>>>0>(o+40|0)>>>0;Y=Z?W:-1;if((Y|0)!=-1){aa=Z?ac:ad;ab=Y;T=201}}}while(0);do{if((T|0)==201){ad=(c[12636]|0)+aa|0;c[12636]=ad;if(ad>>>0>(c[12637]|0)>>>0){c[12637]=ad}ad=c[12534]|0;L310:do{if((ad|0)==0){S=c[12532]|0;if((S|0)==0|ab>>>0<S>>>0){c[12532]=ab}c[12640]=ab;c[12641]=aa;c[12643]=0;c[12537]=c[12358];c[12536]=-1;S=0;do{Y=S<<1;ac=50152+(Y<<2)|0;c[50152+(Y+3<<2)>>2]=ac;c[50152+(Y+2<<2)>>2]=ac;S=S+1|0;}while(S>>>0<32>>>0);S=ab+8|0;if((S&7|0)==0){ae=0}else{ae=-S&7}S=aa-40-ae|0;c[12534]=ab+ae;c[12531]=S;c[ab+(ae+4)>>2]=S|1;c[ab+(aa-36)>>2]=40;c[12535]=c[12362]}else{S=50560;while(1){af=c[S>>2]|0;ag=S+4|0;ah=c[ag>>2]|0;if((ab|0)==(af+ah|0)){T=213;break}ac=c[S+8>>2]|0;if((ac|0)==0){break}else{S=ac}}do{if((T|0)==213){if((c[S+12>>2]&8|0)!=0){break}ac=ad;if(!(ac>>>0>=af>>>0&ac>>>0<ab>>>0)){break}c[ag>>2]=ah+aa;ac=c[12534]|0;Y=(c[12531]|0)+aa|0;Z=ac;W=ac+8|0;if((W&7|0)==0){ai=0}else{ai=-W&7}W=Y-ai|0;c[12534]=Z+ai;c[12531]=W;c[Z+(ai+4)>>2]=W|1;c[Z+(Y+4)>>2]=40;c[12535]=c[12362];break L310}}while(0);if(ab>>>0<(c[12532]|0)>>>0){c[12532]=ab}S=ab+aa|0;Y=50560;while(1){aj=Y|0;if((c[aj>>2]|0)==(S|0)){T=223;break}Z=c[Y+8>>2]|0;if((Z|0)==0){break}else{Y=Z}}do{if((T|0)==223){if((c[Y+12>>2]&8|0)!=0){break}c[aj>>2]=ab;S=Y+4|0;c[S>>2]=(c[S>>2]|0)+aa;S=ab+8|0;if((S&7|0)==0){ak=0}else{ak=-S&7}S=ab+(aa+8)|0;if((S&7|0)==0){al=0}else{al=-S&7}S=ab+(al+aa)|0;Z=S;W=ak+o|0;ac=ab+W|0;_=ac;K=S-(ab+ak)-o|0;c[ab+(ak+4)>>2]=o|3;do{if((Z|0)==(c[12534]|0)){J=(c[12531]|0)+K|0;c[12531]=J;c[12534]=_;c[ab+(W+4)>>2]=J|1}else{if((Z|0)==(c[12533]|0)){J=(c[12530]|0)+K|0;c[12530]=J;c[12533]=_;c[ab+(W+4)>>2]=J|1;c[ab+(J+W)>>2]=J;break}J=aa+4|0;X=c[ab+(J+al)>>2]|0;if((X&3|0)==1){$=X&-8;V=X>>>3;L355:do{if(X>>>0<256>>>0){U=c[ab+((al|8)+aa)>>2]|0;Q=c[ab+(aa+12+al)>>2]|0;R=50152+(V<<1<<2)|0;do{if((U|0)!=(R|0)){if(U>>>0<(c[12532]|0)>>>0){ct();return 0}if((c[U+12>>2]|0)==(Z|0)){break}ct();return 0}}while(0);if((Q|0)==(U|0)){c[12528]=c[12528]&~(1<<V);break}do{if((Q|0)==(R|0)){am=Q+8|0}else{if(Q>>>0<(c[12532]|0)>>>0){ct();return 0}m=Q+8|0;if((c[m>>2]|0)==(Z|0)){am=m;break}ct();return 0}}while(0);c[U+12>>2]=Q;c[am>>2]=U}else{R=S;m=c[ab+((al|24)+aa)>>2]|0;P=c[ab+(aa+12+al)>>2]|0;do{if((P|0)==(R|0)){O=al|16;g=ab+(J+O)|0;L=c[g>>2]|0;if((L|0)==0){e=ab+(O+aa)|0;O=c[e>>2]|0;if((O|0)==0){an=0;break}else{ao=O;ap=e}}else{ao=L;ap=g}while(1){g=ao+20|0;L=c[g>>2]|0;if((L|0)!=0){ao=L;ap=g;continue}g=ao+16|0;L=c[g>>2]|0;if((L|0)==0){break}else{ao=L;ap=g}}if(ap>>>0<(c[12532]|0)>>>0){ct();return 0}else{c[ap>>2]=0;an=ao;break}}else{g=c[ab+((al|8)+aa)>>2]|0;if(g>>>0<(c[12532]|0)>>>0){ct();return 0}L=g+12|0;if((c[L>>2]|0)!=(R|0)){ct();return 0}e=P+8|0;if((c[e>>2]|0)==(R|0)){c[L>>2]=P;c[e>>2]=g;an=P;break}else{ct();return 0}}}while(0);if((m|0)==0){break}P=ab+(aa+28+al)|0;U=50416+(c[P>>2]<<2)|0;do{if((R|0)==(c[U>>2]|0)){c[U>>2]=an;if((an|0)!=0){break}c[12529]=c[12529]&~(1<<c[P>>2]);break L355}else{if(m>>>0<(c[12532]|0)>>>0){ct();return 0}Q=m+16|0;if((c[Q>>2]|0)==(R|0)){c[Q>>2]=an}else{c[m+20>>2]=an}if((an|0)==0){break L355}}}while(0);if(an>>>0<(c[12532]|0)>>>0){ct();return 0}c[an+24>>2]=m;R=al|16;P=c[ab+(R+aa)>>2]|0;do{if((P|0)!=0){if(P>>>0<(c[12532]|0)>>>0){ct();return 0}else{c[an+16>>2]=P;c[P+24>>2]=an;break}}}while(0);P=c[ab+(J+R)>>2]|0;if((P|0)==0){break}if(P>>>0<(c[12532]|0)>>>0){ct();return 0}else{c[an+20>>2]=P;c[P+24>>2]=an;break}}}while(0);aq=ab+(($|al)+aa)|0;ar=$+K|0}else{aq=Z;ar=K}J=aq+4|0;c[J>>2]=c[J>>2]&-2;c[ab+(W+4)>>2]=ar|1;c[ab+(ar+W)>>2]=ar;J=ar>>>3;if(ar>>>0<256>>>0){V=J<<1;X=50152+(V<<2)|0;P=c[12528]|0;m=1<<J;do{if((P&m|0)==0){c[12528]=P|m;as=X;at=50152+(V+2<<2)|0}else{J=50152+(V+2<<2)|0;U=c[J>>2]|0;if(U>>>0>=(c[12532]|0)>>>0){as=U;at=J;break}ct();return 0}}while(0);c[at>>2]=_;c[as+12>>2]=_;c[ab+(W+8)>>2]=as;c[ab+(W+12)>>2]=X;break}V=ac;m=ar>>>8;do{if((m|0)==0){au=0}else{if(ar>>>0>16777215>>>0){au=31;break}P=(m+1048320|0)>>>16&8;$=m<<P;J=($+520192|0)>>>16&4;U=$<<J;$=(U+245760|0)>>>16&2;Q=14-(J|P|$)+(U<<$>>>15)|0;au=ar>>>((Q+7|0)>>>0)&1|Q<<1}}while(0);m=50416+(au<<2)|0;c[ab+(W+28)>>2]=au;c[ab+(W+20)>>2]=0;c[ab+(W+16)>>2]=0;X=c[12529]|0;Q=1<<au;if((X&Q|0)==0){c[12529]=X|Q;c[m>>2]=V;c[ab+(W+24)>>2]=m;c[ab+(W+12)>>2]=V;c[ab+(W+8)>>2]=V;break}if((au|0)==31){av=0}else{av=25-(au>>>1)|0}Q=ar<<av;X=c[m>>2]|0;while(1){if((c[X+4>>2]&-8|0)==(ar|0)){break}aw=X+16+(Q>>>31<<2)|0;m=c[aw>>2]|0;if((m|0)==0){T=296;break}else{Q=Q<<1;X=m}}if((T|0)==296){if(aw>>>0<(c[12532]|0)>>>0){ct();return 0}else{c[aw>>2]=V;c[ab+(W+24)>>2]=X;c[ab+(W+12)>>2]=V;c[ab+(W+8)>>2]=V;break}}Q=X+8|0;m=c[Q>>2]|0;$=c[12532]|0;if(X>>>0<$>>>0){ct();return 0}if(m>>>0<$>>>0){ct();return 0}else{c[m+12>>2]=V;c[Q>>2]=V;c[ab+(W+8)>>2]=m;c[ab+(W+12)>>2]=X;c[ab+(W+24)>>2]=0;break}}}while(0);n=ab+(ak|8)|0;return n|0}}while(0);Y=ad;W=50560;while(1){ax=c[W>>2]|0;if(ax>>>0<=Y>>>0){ay=c[W+4>>2]|0;az=ax+ay|0;if(az>>>0>Y>>>0){break}}W=c[W+8>>2]|0}W=ax+(ay-39)|0;if((W&7|0)==0){aA=0}else{aA=-W&7}W=ax+(ay-47+aA)|0;ac=W>>>0<(ad+16|0)>>>0?Y:W;W=ac+8|0;_=ab+8|0;if((_&7|0)==0){aB=0}else{aB=-_&7}_=aa-40-aB|0;c[12534]=ab+aB;c[12531]=_;c[ab+(aB+4)>>2]=_|1;c[ab+(aa-36)>>2]=40;c[12535]=c[12362];c[ac+4>>2]=27;c[W>>2]=c[12640];c[W+4>>2]=c[12641];c[W+8>>2]=c[12642];c[W+12>>2]=c[12643];c[12640]=ab;c[12641]=aa;c[12643]=0;c[12642]=W;W=ac+28|0;c[W>>2]=7;if((ac+32|0)>>>0<az>>>0){_=W;while(1){W=_+4|0;c[W>>2]=7;if((_+8|0)>>>0<az>>>0){_=W}else{break}}}if((ac|0)==(Y|0)){break}_=ac-ad|0;W=Y+(_+4)|0;c[W>>2]=c[W>>2]&-2;c[ad+4>>2]=_|1;c[Y+_>>2]=_;W=_>>>3;if(_>>>0<256>>>0){K=W<<1;Z=50152+(K<<2)|0;S=c[12528]|0;m=1<<W;do{if((S&m|0)==0){c[12528]=S|m;aC=Z;aD=50152+(K+2<<2)|0}else{W=50152+(K+2<<2)|0;Q=c[W>>2]|0;if(Q>>>0>=(c[12532]|0)>>>0){aC=Q;aD=W;break}ct();return 0}}while(0);c[aD>>2]=ad;c[aC+12>>2]=ad;c[ad+8>>2]=aC;c[ad+12>>2]=Z;break}K=ad;m=_>>>8;do{if((m|0)==0){aE=0}else{if(_>>>0>16777215>>>0){aE=31;break}S=(m+1048320|0)>>>16&8;Y=m<<S;ac=(Y+520192|0)>>>16&4;W=Y<<ac;Y=(W+245760|0)>>>16&2;Q=14-(ac|S|Y)+(W<<Y>>>15)|0;aE=_>>>((Q+7|0)>>>0)&1|Q<<1}}while(0);m=50416+(aE<<2)|0;c[ad+28>>2]=aE;c[ad+20>>2]=0;c[ad+16>>2]=0;Z=c[12529]|0;Q=1<<aE;if((Z&Q|0)==0){c[12529]=Z|Q;c[m>>2]=K;c[ad+24>>2]=m;c[ad+12>>2]=ad;c[ad+8>>2]=ad;break}if((aE|0)==31){aF=0}else{aF=25-(aE>>>1)|0}Q=_<<aF;Z=c[m>>2]|0;while(1){if((c[Z+4>>2]&-8|0)==(_|0)){break}aG=Z+16+(Q>>>31<<2)|0;m=c[aG>>2]|0;if((m|0)==0){T=331;break}else{Q=Q<<1;Z=m}}if((T|0)==331){if(aG>>>0<(c[12532]|0)>>>0){ct();return 0}else{c[aG>>2]=K;c[ad+24>>2]=Z;c[ad+12>>2]=ad;c[ad+8>>2]=ad;break}}Q=Z+8|0;_=c[Q>>2]|0;m=c[12532]|0;if(Z>>>0<m>>>0){ct();return 0}if(_>>>0<m>>>0){ct();return 0}else{c[_+12>>2]=K;c[Q>>2]=K;c[ad+8>>2]=_;c[ad+12>>2]=Z;c[ad+24>>2]=0;break}}}while(0);ad=c[12531]|0;if(ad>>>0<=o>>>0){break}_=ad-o|0;c[12531]=_;ad=c[12534]|0;Q=ad;c[12534]=Q+o;c[Q+(o+4)>>2]=_|1;c[ad+4>>2]=o|3;n=ad+8|0;return n|0}}while(0);c[(ci()|0)>>2]=12;n=0;return n|0}function KN(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0;if((a|0)==0){return}b=a-8|0;d=b;e=c[12532]|0;if(b>>>0<e>>>0){ct()}f=c[a-4>>2]|0;g=f&3;if((g|0)==1){ct()}h=f&-8;i=a+(h-8)|0;j=i;L10:do{if((f&1|0)==0){k=c[b>>2]|0;if((g|0)==0){return}l=-8-k|0;m=a+l|0;n=m;o=k+h|0;if(m>>>0<e>>>0){ct()}if((n|0)==(c[12533]|0)){p=a+(h-4)|0;if((c[p>>2]&3|0)!=3){q=n;r=o;break}c[12530]=o;c[p>>2]=c[p>>2]&-2;c[a+(l+4)>>2]=o|1;c[i>>2]=o;return}p=k>>>3;if(k>>>0<256>>>0){k=c[a+(l+8)>>2]|0;s=c[a+(l+12)>>2]|0;t=50152+(p<<1<<2)|0;do{if((k|0)!=(t|0)){if(k>>>0<e>>>0){ct()}if((c[k+12>>2]|0)==(n|0)){break}ct()}}while(0);if((s|0)==(k|0)){c[12528]=c[12528]&~(1<<p);q=n;r=o;break}do{if((s|0)==(t|0)){u=s+8|0}else{if(s>>>0<e>>>0){ct()}v=s+8|0;if((c[v>>2]|0)==(n|0)){u=v;break}ct()}}while(0);c[k+12>>2]=s;c[u>>2]=k;q=n;r=o;break}t=m;p=c[a+(l+24)>>2]|0;v=c[a+(l+12)>>2]|0;do{if((v|0)==(t|0)){w=a+(l+20)|0;x=c[w>>2]|0;if((x|0)==0){y=a+(l+16)|0;z=c[y>>2]|0;if((z|0)==0){A=0;break}else{B=z;C=y}}else{B=x;C=w}while(1){w=B+20|0;x=c[w>>2]|0;if((x|0)!=0){B=x;C=w;continue}w=B+16|0;x=c[w>>2]|0;if((x|0)==0){break}else{B=x;C=w}}if(C>>>0<e>>>0){ct()}else{c[C>>2]=0;A=B;break}}else{w=c[a+(l+8)>>2]|0;if(w>>>0<e>>>0){ct()}x=w+12|0;if((c[x>>2]|0)!=(t|0)){ct()}y=v+8|0;if((c[y>>2]|0)==(t|0)){c[x>>2]=v;c[y>>2]=w;A=v;break}else{ct()}}}while(0);if((p|0)==0){q=n;r=o;break}v=a+(l+28)|0;m=50416+(c[v>>2]<<2)|0;do{if((t|0)==(c[m>>2]|0)){c[m>>2]=A;if((A|0)!=0){break}c[12529]=c[12529]&~(1<<c[v>>2]);q=n;r=o;break L10}else{if(p>>>0<(c[12532]|0)>>>0){ct()}k=p+16|0;if((c[k>>2]|0)==(t|0)){c[k>>2]=A}else{c[p+20>>2]=A}if((A|0)==0){q=n;r=o;break L10}}}while(0);if(A>>>0<(c[12532]|0)>>>0){ct()}c[A+24>>2]=p;t=c[a+(l+16)>>2]|0;do{if((t|0)!=0){if(t>>>0<(c[12532]|0)>>>0){ct()}else{c[A+16>>2]=t;c[t+24>>2]=A;break}}}while(0);t=c[a+(l+20)>>2]|0;if((t|0)==0){q=n;r=o;break}if(t>>>0<(c[12532]|0)>>>0){ct()}else{c[A+20>>2]=t;c[t+24>>2]=A;q=n;r=o;break}}else{q=d;r=h}}while(0);d=q;if(d>>>0>=i>>>0){ct()}A=a+(h-4)|0;e=c[A>>2]|0;if((e&1|0)==0){ct()}do{if((e&2|0)==0){if((j|0)==(c[12534]|0)){B=(c[12531]|0)+r|0;c[12531]=B;c[12534]=q;c[q+4>>2]=B|1;if((q|0)!=(c[12533]|0)){return}c[12533]=0;c[12530]=0;return}if((j|0)==(c[12533]|0)){B=(c[12530]|0)+r|0;c[12530]=B;c[12533]=q;c[q+4>>2]=B|1;c[d+B>>2]=B;return}B=(e&-8)+r|0;C=e>>>3;L113:do{if(e>>>0<256>>>0){u=c[a+h>>2]|0;g=c[a+(h|4)>>2]|0;b=50152+(C<<1<<2)|0;do{if((u|0)!=(b|0)){if(u>>>0<(c[12532]|0)>>>0){ct()}if((c[u+12>>2]|0)==(j|0)){break}ct()}}while(0);if((g|0)==(u|0)){c[12528]=c[12528]&~(1<<C);break}do{if((g|0)==(b|0)){D=g+8|0}else{if(g>>>0<(c[12532]|0)>>>0){ct()}f=g+8|0;if((c[f>>2]|0)==(j|0)){D=f;break}ct()}}while(0);c[u+12>>2]=g;c[D>>2]=u}else{b=i;f=c[a+(h+16)>>2]|0;t=c[a+(h|4)>>2]|0;do{if((t|0)==(b|0)){p=a+(h+12)|0;v=c[p>>2]|0;if((v|0)==0){m=a+(h+8)|0;k=c[m>>2]|0;if((k|0)==0){E=0;break}else{F=k;G=m}}else{F=v;G=p}while(1){p=F+20|0;v=c[p>>2]|0;if((v|0)!=0){F=v;G=p;continue}p=F+16|0;v=c[p>>2]|0;if((v|0)==0){break}else{F=v;G=p}}if(G>>>0<(c[12532]|0)>>>0){ct()}else{c[G>>2]=0;E=F;break}}else{p=c[a+h>>2]|0;if(p>>>0<(c[12532]|0)>>>0){ct()}v=p+12|0;if((c[v>>2]|0)!=(b|0)){ct()}m=t+8|0;if((c[m>>2]|0)==(b|0)){c[v>>2]=t;c[m>>2]=p;E=t;break}else{ct()}}}while(0);if((f|0)==0){break}t=a+(h+20)|0;u=50416+(c[t>>2]<<2)|0;do{if((b|0)==(c[u>>2]|0)){c[u>>2]=E;if((E|0)!=0){break}c[12529]=c[12529]&~(1<<c[t>>2]);break L113}else{if(f>>>0<(c[12532]|0)>>>0){ct()}g=f+16|0;if((c[g>>2]|0)==(b|0)){c[g>>2]=E}else{c[f+20>>2]=E}if((E|0)==0){break L113}}}while(0);if(E>>>0<(c[12532]|0)>>>0){ct()}c[E+24>>2]=f;b=c[a+(h+8)>>2]|0;do{if((b|0)!=0){if(b>>>0<(c[12532]|0)>>>0){ct()}else{c[E+16>>2]=b;c[b+24>>2]=E;break}}}while(0);b=c[a+(h+12)>>2]|0;if((b|0)==0){break}if(b>>>0<(c[12532]|0)>>>0){ct()}else{c[E+20>>2]=b;c[b+24>>2]=E;break}}}while(0);c[q+4>>2]=B|1;c[d+B>>2]=B;if((q|0)!=(c[12533]|0)){H=B;break}c[12530]=B;return}else{c[A>>2]=e&-2;c[q+4>>2]=r|1;c[d+r>>2]=r;H=r}}while(0);r=H>>>3;if(H>>>0<256>>>0){d=r<<1;e=50152+(d<<2)|0;A=c[12528]|0;E=1<<r;do{if((A&E|0)==0){c[12528]=A|E;I=e;J=50152+(d+2<<2)|0}else{r=50152+(d+2<<2)|0;h=c[r>>2]|0;if(h>>>0>=(c[12532]|0)>>>0){I=h;J=r;break}ct()}}while(0);c[J>>2]=q;c[I+12>>2]=q;c[q+8>>2]=I;c[q+12>>2]=e;return}e=q;I=H>>>8;do{if((I|0)==0){K=0}else{if(H>>>0>16777215>>>0){K=31;break}J=(I+1048320|0)>>>16&8;d=I<<J;E=(d+520192|0)>>>16&4;A=d<<E;d=(A+245760|0)>>>16&2;r=14-(E|J|d)+(A<<d>>>15)|0;K=H>>>((r+7|0)>>>0)&1|r<<1}}while(0);I=50416+(K<<2)|0;c[q+28>>2]=K;c[q+20>>2]=0;c[q+16>>2]=0;r=c[12529]|0;d=1<<K;do{if((r&d|0)==0){c[12529]=r|d;c[I>>2]=e;c[q+24>>2]=I;c[q+12>>2]=q;c[q+8>>2]=q}else{if((K|0)==31){L=0}else{L=25-(K>>>1)|0}A=H<<L;J=c[I>>2]|0;while(1){if((c[J+4>>2]&-8|0)==(H|0)){break}M=J+16+(A>>>31<<2)|0;E=c[M>>2]|0;if((E|0)==0){N=129;break}else{A=A<<1;J=E}}if((N|0)==129){if(M>>>0<(c[12532]|0)>>>0){ct()}else{c[M>>2]=e;c[q+24>>2]=J;c[q+12>>2]=q;c[q+8>>2]=q;break}}A=J+8|0;B=c[A>>2]|0;E=c[12532]|0;if(J>>>0<E>>>0){ct()}if(B>>>0<E>>>0){ct()}else{c[B+12>>2]=e;c[A>>2]=e;c[q+8>>2]=B;c[q+12>>2]=J;c[q+24>>2]=0;break}}}while(0);q=(c[12536]|0)-1|0;c[12536]=q;if((q|0)==0){O=50568}else{return}while(1){q=c[O>>2]|0;if((q|0)==0){break}else{O=q+8|0}}c[12536]=-1;return}function KO(a,b){a=a|0;b=b|0;var d=0,e=0;do{if((a|0)==0){d=0}else{e=ag(b,a)|0;if((b|a)>>>0<=65535>>>0){d=e;break}d=((e>>>0)/(a>>>0)|0|0)==(b|0)?e:-1}}while(0);b=KM(d)|0;if((b|0)==0){return b|0}if((c[b-4>>2]&3|0)==0){return b|0}K1(b|0,0,d|0)|0;return b|0}function KP(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;if((a|0)==0){d=KM(b)|0;return d|0}if(b>>>0>4294967231>>>0){c[(ci()|0)>>2]=12;d=0;return d|0}if(b>>>0<11>>>0){e=16}else{e=b+11&-8}f=KQ(a-8|0,e)|0;if((f|0)!=0){d=f+8|0;return d|0}f=KM(b)|0;if((f|0)==0){d=0;return d|0}e=c[a-4>>2]|0;g=(e&-8)-((e&3|0)==0?8:4)|0;K2(f|0,a|0,g>>>0<b>>>0?g:b)|0;KN(a);d=f;return d|0}function KQ(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;d=a+4|0;e=c[d>>2]|0;f=e&-8;g=a;h=g+f|0;i=h;j=c[12532]|0;if(g>>>0<j>>>0){ct();return 0}k=e&3;if(!((k|0)!=1&g>>>0<h>>>0)){ct();return 0}l=g+(f|4)|0;m=c[l>>2]|0;if((m&1|0)==0){ct();return 0}if((k|0)==0){if(b>>>0<256>>>0){n=0;return n|0}do{if(f>>>0>=(b+4|0)>>>0){if((f-b|0)>>>0>c[12360]<<1>>>0){break}else{n=a}return n|0}}while(0);n=0;return n|0}if(f>>>0>=b>>>0){k=f-b|0;if(k>>>0<=15>>>0){n=a;return n|0}c[d>>2]=e&1|b|2;c[g+(b+4)>>2]=k|3;c[l>>2]=c[l>>2]|1;KR(g+b|0,k);n=a;return n|0}if((i|0)==(c[12534]|0)){k=(c[12531]|0)+f|0;if(k>>>0<=b>>>0){n=0;return n|0}l=k-b|0;c[d>>2]=e&1|b|2;c[g+(b+4)>>2]=l|1;c[12534]=g+b;c[12531]=l;n=a;return n|0}if((i|0)==(c[12533]|0)){l=(c[12530]|0)+f|0;if(l>>>0<b>>>0){n=0;return n|0}k=l-b|0;if(k>>>0>15>>>0){c[d>>2]=e&1|b|2;c[g+(b+4)>>2]=k|1;c[g+l>>2]=k;o=g+(l+4)|0;c[o>>2]=c[o>>2]&-2;p=g+b|0;q=k}else{c[d>>2]=e&1|l|2;e=g+(l+4)|0;c[e>>2]=c[e>>2]|1;p=0;q=0}c[12530]=q;c[12533]=p;n=a;return n|0}if((m&2|0)!=0){n=0;return n|0}p=(m&-8)+f|0;if(p>>>0<b>>>0){n=0;return n|0}q=p-b|0;e=m>>>3;L52:do{if(m>>>0<256>>>0){l=c[g+(f+8)>>2]|0;k=c[g+(f+12)>>2]|0;o=50152+(e<<1<<2)|0;do{if((l|0)!=(o|0)){if(l>>>0<j>>>0){ct();return 0}if((c[l+12>>2]|0)==(i|0)){break}ct();return 0}}while(0);if((k|0)==(l|0)){c[12528]=c[12528]&~(1<<e);break}do{if((k|0)==(o|0)){r=k+8|0}else{if(k>>>0<j>>>0){ct();return 0}s=k+8|0;if((c[s>>2]|0)==(i|0)){r=s;break}ct();return 0}}while(0);c[l+12>>2]=k;c[r>>2]=l}else{o=h;s=c[g+(f+24)>>2]|0;t=c[g+(f+12)>>2]|0;do{if((t|0)==(o|0)){u=g+(f+20)|0;v=c[u>>2]|0;if((v|0)==0){w=g+(f+16)|0;x=c[w>>2]|0;if((x|0)==0){y=0;break}else{z=x;A=w}}else{z=v;A=u}while(1){u=z+20|0;v=c[u>>2]|0;if((v|0)!=0){z=v;A=u;continue}u=z+16|0;v=c[u>>2]|0;if((v|0)==0){break}else{z=v;A=u}}if(A>>>0<j>>>0){ct();return 0}else{c[A>>2]=0;y=z;break}}else{u=c[g+(f+8)>>2]|0;if(u>>>0<j>>>0){ct();return 0}v=u+12|0;if((c[v>>2]|0)!=(o|0)){ct();return 0}w=t+8|0;if((c[w>>2]|0)==(o|0)){c[v>>2]=t;c[w>>2]=u;y=t;break}else{ct();return 0}}}while(0);if((s|0)==0){break}t=g+(f+28)|0;l=50416+(c[t>>2]<<2)|0;do{if((o|0)==(c[l>>2]|0)){c[l>>2]=y;if((y|0)!=0){break}c[12529]=c[12529]&~(1<<c[t>>2]);break L52}else{if(s>>>0<(c[12532]|0)>>>0){ct();return 0}k=s+16|0;if((c[k>>2]|0)==(o|0)){c[k>>2]=y}else{c[s+20>>2]=y}if((y|0)==0){break L52}}}while(0);if(y>>>0<(c[12532]|0)>>>0){ct();return 0}c[y+24>>2]=s;o=c[g+(f+16)>>2]|0;do{if((o|0)!=0){if(o>>>0<(c[12532]|0)>>>0){ct();return 0}else{c[y+16>>2]=o;c[o+24>>2]=y;break}}}while(0);o=c[g+(f+20)>>2]|0;if((o|0)==0){break}if(o>>>0<(c[12532]|0)>>>0){ct();return 0}else{c[y+20>>2]=o;c[o+24>>2]=y;break}}}while(0);if(q>>>0<16>>>0){c[d>>2]=p|c[d>>2]&1|2;y=g+(p|4)|0;c[y>>2]=c[y>>2]|1;n=a;return n|0}else{c[d>>2]=c[d>>2]&1|b|2;c[g+(b+4)>>2]=q|3;d=g+(p|4)|0;c[d>>2]=c[d>>2]|1;KR(g+b|0,q);n=a;return n|0}return 0}function KR(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0;d=a;e=d+b|0;f=e;g=c[a+4>>2]|0;L1:do{if((g&1|0)==0){h=c[a>>2]|0;if((g&3|0)==0){return}i=d+(-h|0)|0;j=i;k=h+b|0;l=c[12532]|0;if(i>>>0<l>>>0){ct()}if((j|0)==(c[12533]|0)){m=d+(b+4)|0;if((c[m>>2]&3|0)!=3){n=j;o=k;break}c[12530]=k;c[m>>2]=c[m>>2]&-2;c[d+(4-h)>>2]=k|1;c[e>>2]=k;return}m=h>>>3;if(h>>>0<256>>>0){p=c[d+(8-h)>>2]|0;q=c[d+(12-h)>>2]|0;r=50152+(m<<1<<2)|0;do{if((p|0)!=(r|0)){if(p>>>0<l>>>0){ct()}if((c[p+12>>2]|0)==(j|0)){break}ct()}}while(0);if((q|0)==(p|0)){c[12528]=c[12528]&~(1<<m);n=j;o=k;break}do{if((q|0)==(r|0)){s=q+8|0}else{if(q>>>0<l>>>0){ct()}t=q+8|0;if((c[t>>2]|0)==(j|0)){s=t;break}ct()}}while(0);c[p+12>>2]=q;c[s>>2]=p;n=j;o=k;break}r=i;m=c[d+(24-h)>>2]|0;t=c[d+(12-h)>>2]|0;do{if((t|0)==(r|0)){u=16-h|0;v=d+(u+4)|0;w=c[v>>2]|0;if((w|0)==0){x=d+u|0;u=c[x>>2]|0;if((u|0)==0){y=0;break}else{z=u;A=x}}else{z=w;A=v}while(1){v=z+20|0;w=c[v>>2]|0;if((w|0)!=0){z=w;A=v;continue}v=z+16|0;w=c[v>>2]|0;if((w|0)==0){break}else{z=w;A=v}}if(A>>>0<l>>>0){ct()}else{c[A>>2]=0;y=z;break}}else{v=c[d+(8-h)>>2]|0;if(v>>>0<l>>>0){ct()}w=v+12|0;if((c[w>>2]|0)!=(r|0)){ct()}x=t+8|0;if((c[x>>2]|0)==(r|0)){c[w>>2]=t;c[x>>2]=v;y=t;break}else{ct()}}}while(0);if((m|0)==0){n=j;o=k;break}t=d+(28-h)|0;l=50416+(c[t>>2]<<2)|0;do{if((r|0)==(c[l>>2]|0)){c[l>>2]=y;if((y|0)!=0){break}c[12529]=c[12529]&~(1<<c[t>>2]);n=j;o=k;break L1}else{if(m>>>0<(c[12532]|0)>>>0){ct()}i=m+16|0;if((c[i>>2]|0)==(r|0)){c[i>>2]=y}else{c[m+20>>2]=y}if((y|0)==0){n=j;o=k;break L1}}}while(0);if(y>>>0<(c[12532]|0)>>>0){ct()}c[y+24>>2]=m;r=16-h|0;t=c[d+r>>2]|0;do{if((t|0)!=0){if(t>>>0<(c[12532]|0)>>>0){ct()}else{c[y+16>>2]=t;c[t+24>>2]=y;break}}}while(0);t=c[d+(r+4)>>2]|0;if((t|0)==0){n=j;o=k;break}if(t>>>0<(c[12532]|0)>>>0){ct()}else{c[y+20>>2]=t;c[t+24>>2]=y;n=j;o=k;break}}else{n=a;o=b}}while(0);a=c[12532]|0;if(e>>>0<a>>>0){ct()}y=d+(b+4)|0;z=c[y>>2]|0;do{if((z&2|0)==0){if((f|0)==(c[12534]|0)){A=(c[12531]|0)+o|0;c[12531]=A;c[12534]=n;c[n+4>>2]=A|1;if((n|0)!=(c[12533]|0)){return}c[12533]=0;c[12530]=0;return}if((f|0)==(c[12533]|0)){A=(c[12530]|0)+o|0;c[12530]=A;c[12533]=n;c[n+4>>2]=A|1;c[n+A>>2]=A;return}A=(z&-8)+o|0;s=z>>>3;L101:do{if(z>>>0<256>>>0){g=c[d+(b+8)>>2]|0;t=c[d+(b+12)>>2]|0;h=50152+(s<<1<<2)|0;do{if((g|0)!=(h|0)){if(g>>>0<a>>>0){ct()}if((c[g+12>>2]|0)==(f|0)){break}ct()}}while(0);if((t|0)==(g|0)){c[12528]=c[12528]&~(1<<s);break}do{if((t|0)==(h|0)){B=t+8|0}else{if(t>>>0<a>>>0){ct()}m=t+8|0;if((c[m>>2]|0)==(f|0)){B=m;break}ct()}}while(0);c[g+12>>2]=t;c[B>>2]=g}else{h=e;m=c[d+(b+24)>>2]|0;l=c[d+(b+12)>>2]|0;do{if((l|0)==(h|0)){i=d+(b+20)|0;p=c[i>>2]|0;if((p|0)==0){q=d+(b+16)|0;v=c[q>>2]|0;if((v|0)==0){C=0;break}else{D=v;E=q}}else{D=p;E=i}while(1){i=D+20|0;p=c[i>>2]|0;if((p|0)!=0){D=p;E=i;continue}i=D+16|0;p=c[i>>2]|0;if((p|0)==0){break}else{D=p;E=i}}if(E>>>0<a>>>0){ct()}else{c[E>>2]=0;C=D;break}}else{i=c[d+(b+8)>>2]|0;if(i>>>0<a>>>0){ct()}p=i+12|0;if((c[p>>2]|0)!=(h|0)){ct()}q=l+8|0;if((c[q>>2]|0)==(h|0)){c[p>>2]=l;c[q>>2]=i;C=l;break}else{ct()}}}while(0);if((m|0)==0){break}l=d+(b+28)|0;g=50416+(c[l>>2]<<2)|0;do{if((h|0)==(c[g>>2]|0)){c[g>>2]=C;if((C|0)!=0){break}c[12529]=c[12529]&~(1<<c[l>>2]);break L101}else{if(m>>>0<(c[12532]|0)>>>0){ct()}t=m+16|0;if((c[t>>2]|0)==(h|0)){c[t>>2]=C}else{c[m+20>>2]=C}if((C|0)==0){break L101}}}while(0);if(C>>>0<(c[12532]|0)>>>0){ct()}c[C+24>>2]=m;h=c[d+(b+16)>>2]|0;do{if((h|0)!=0){if(h>>>0<(c[12532]|0)>>>0){ct()}else{c[C+16>>2]=h;c[h+24>>2]=C;break}}}while(0);h=c[d+(b+20)>>2]|0;if((h|0)==0){break}if(h>>>0<(c[12532]|0)>>>0){ct()}else{c[C+20>>2]=h;c[h+24>>2]=C;break}}}while(0);c[n+4>>2]=A|1;c[n+A>>2]=A;if((n|0)!=(c[12533]|0)){F=A;break}c[12530]=A;return}else{c[y>>2]=z&-2;c[n+4>>2]=o|1;c[n+o>>2]=o;F=o}}while(0);o=F>>>3;if(F>>>0<256>>>0){z=o<<1;y=50152+(z<<2)|0;C=c[12528]|0;b=1<<o;do{if((C&b|0)==0){c[12528]=C|b;G=y;H=50152+(z+2<<2)|0}else{o=50152+(z+2<<2)|0;d=c[o>>2]|0;if(d>>>0>=(c[12532]|0)>>>0){G=d;H=o;break}ct()}}while(0);c[H>>2]=n;c[G+12>>2]=n;c[n+8>>2]=G;c[n+12>>2]=y;return}y=n;G=F>>>8;do{if((G|0)==0){I=0}else{if(F>>>0>16777215>>>0){I=31;break}H=(G+1048320|0)>>>16&8;z=G<<H;b=(z+520192|0)>>>16&4;C=z<<b;z=(C+245760|0)>>>16&2;o=14-(b|H|z)+(C<<z>>>15)|0;I=F>>>((o+7|0)>>>0)&1|o<<1}}while(0);G=50416+(I<<2)|0;c[n+28>>2]=I;c[n+20>>2]=0;c[n+16>>2]=0;o=c[12529]|0;z=1<<I;if((o&z|0)==0){c[12529]=o|z;c[G>>2]=y;c[n+24>>2]=G;c[n+12>>2]=n;c[n+8>>2]=n;return}if((I|0)==31){J=0}else{J=25-(I>>>1)|0}I=F<<J;J=c[G>>2]|0;while(1){if((c[J+4>>2]&-8|0)==(F|0)){break}K=J+16+(I>>>31<<2)|0;G=c[K>>2]|0;if((G|0)==0){L=126;break}else{I=I<<1;J=G}}if((L|0)==126){if(K>>>0<(c[12532]|0)>>>0){ct()}c[K>>2]=y;c[n+24>>2]=J;c[n+12>>2]=n;c[n+8>>2]=n;return}K=J+8|0;L=c[K>>2]|0;I=c[12532]|0;if(J>>>0<I>>>0){ct()}if(L>>>0<I>>>0){ct()}c[L+12>>2]=y;c[K>>2]=y;c[n+8>>2]=L;c[n+12>>2]=J;c[n+24>>2]=0;return}function KS(a){a=a|0;var b=0,d=0,e=0;b=(a|0)==0?1:a;while(1){d=KM(b)|0;if((d|0)!=0){e=10;break}a=(I=c[13832]|0,c[13832]=I+0,I);if((a|0)==0){break}hH[a&15]()}if((e|0)==10){return d|0}d=gJ(4)|0;c[d>>2]=27432;eR(d|0,45544,74);return 0}function KT(a){a=a|0;return KS(a)|0}function KU(a){a=a|0;if((a|0)==0){return}KN(a);return}function KV(a){a=a|0;KU(a);return}function KW(a){a=a|0;KU(a);return}function KX(a){a=a|0;return}function KY(a){a=a|0;return 20112}function KZ(){var a=0;a=gJ(4)|0;c[a>>2]=27432;eR(a|0,45544,74)}function K_(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0.0,r=0,s=0,t=0,u=0,v=0.0,w=0,x=0,y=0,z=0.0,A=0.0,B=0,C=0,D=0,E=0.0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0.0,O=0,P=0,Q=0.0,R=0.0,S=0.0;e=b;while(1){f=e+1|0;if((bo(a[e]|0)|0)==0){break}else{e=f}}g=a[e]|0;if((g<<24>>24|0)==43){i=f;j=0}else if((g<<24>>24|0)==45){i=f;j=1}else{i=e;j=0}e=-1;f=0;g=i;while(1){k=a[g]|0;if(((k<<24>>24)-48|0)>>>0<10>>>0){l=e}else{if(k<<24>>24!=46|(e|0)>-1){break}else{l=f}}e=l;f=f+1|0;g=g+1|0}l=g+(-f|0)|0;i=(e|0)<0;m=((i^1)<<31>>31)+f|0;n=(m|0)>18;o=(n?-18:-m|0)+(i?f:e)|0;e=n?18:m;do{if((e|0)==0){p=b;q=0.0}else{if((e|0)>9){m=l;n=e;f=0;while(1){i=a[m]|0;r=m+1|0;if(i<<24>>24==46){s=a[r]|0;t=m+2|0}else{s=i;t=r}u=(f*10|0)-48+(s<<24>>24)|0;r=n-1|0;if((r|0)>9){m=t;n=r;f=u}else{break}}v=+(u|0)*1.0e9;w=9;x=t;y=14}else{if((e|0)>0){v=0.0;w=e;x=l;y=14}else{z=0.0;A=0.0}}if((y|0)==14){f=x;n=w;m=0;while(1){r=a[f]|0;i=f+1|0;if(r<<24>>24==46){B=a[i]|0;C=f+2|0}else{B=r;C=i}D=(m*10|0)-48+(B<<24>>24)|0;i=n-1|0;if((i|0)>0){f=C;n=i;m=D}else{break}}z=+(D|0);A=v}E=A+z;do{if((k<<24>>24|0)==69|(k<<24>>24|0)==101){m=g+1|0;n=a[m]|0;if((n<<24>>24|0)==43){F=g+2|0;G=0}else if((n<<24>>24|0)==45){F=g+2|0;G=1}else{F=m;G=0}m=a[F]|0;if(((m<<24>>24)-48|0)>>>0<10>>>0){H=F;I=0;J=m}else{K=0;L=F;M=G;break}while(1){m=(I*10|0)-48+(J<<24>>24)|0;n=H+1|0;f=a[n]|0;if(((f<<24>>24)-48|0)>>>0<10>>>0){H=n;I=m;J=f}else{K=m;L=n;M=G;break}}}else{K=0;L=g;M=0}}while(0);n=o+((M|0)==0?K:-K|0)|0;m=(n|0)<0?-n|0:n;if((m|0)>511){c[(ci()|0)>>2]=34;N=1.0;O=928;P=511;y=31}else{if((m|0)==0){Q=1.0}else{N=1.0;O=928;P=m;y=31}}if((y|0)==31){while(1){y=0;if((P&1|0)==0){R=N}else{R=N*+h[O>>3]}m=P>>1;if((m|0)==0){Q=R;break}else{N=R;O=O+8|0;P=m;y=31}}}if((n|0)>-1){p=L;q=E*Q;break}else{p=L;q=E/Q;break}}}while(0);if((d|0)!=0){c[d>>2]=p}if((j|0)==0){S=q;return+S}S=-0.0-q;return+S}function K$(a,b,c){a=a|0;b=b|0;c=c|0;return+(+K_(a,b))}function K0(b){b=b|0;var c=0;c=b;while(a[c]|0){c=c+1|0}return c-b|0}function K1(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;f=b+e|0;if((e|0)>=20){d=d&255;g=b&3;h=d|d<<8|d<<16|d<<24;i=f&~3;if(g){g=b+4-g|0;while((b|0)<(g|0)){a[b]=d;b=b+1|0}}while((b|0)<(i|0)){c[b>>2]=h;b=b+4|0}}while((b|0)<(f|0)){a[b]=d;b=b+1|0}return b-e|0}function K2(b,d,e){b=b|0;d=d|0;e=e|0;var f=0;f=b|0;if((b&3)==(d&3)){while(b&3){if((e|0)==0)return f|0;a[b]=a[d]|0;b=b+1|0;d=d+1|0;e=e-1|0}while((e|0)>=4){c[b>>2]=c[d>>2];b=b+4|0;d=d+4|0;e=e-4|0}}while((e|0)>0){a[b]=a[d]|0;b=b+1|0;d=d+1|0;e=e-1|0}return f|0}function K3(b,c,d){b=b|0;c=c|0;d=d|0;var e=0;if((c|0)<(b|0)&(b|0)<(c+d|0)){e=b;c=c+d|0;b=b+d|0;while((d|0)>0){b=b-1|0;c=c-1|0;d=d-1|0;a[b]=a[c]|0}b=e}else{K2(b,c,d)|0}return b|0}function K4(a,b,c){a=a|0;b=b|0;c=c|0;var e=0,f=0,g=0;while((e|0)<(c|0)){f=d[a+e|0]|0;g=d[b+e|0]|0;if((f|0)!=(g|0))return((f|0)>(g|0)?1:-1)|0;e=e+1|0}return 0}function K5(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=a+c>>>0;c=b+d>>>0;d=c>>>0<b>>>0|0;if(e>>>0<a>>>0){c=c+1>>>0;d=d|!c}return(K=c,L=d,e|0)|0}function K6(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;z=z+1|0;c[a>>2]=z;while((e|0)<40){if((c[d+(e<<2)>>2]|0)==0){c[d+(e<<2)>>2]=z;c[d+((e<<2)+4)>>2]=b;c[d+((e<<2)+8)>>2]=0;return 0}e=e+2|0}dp(116);dp(111);dp(111);dp(32);dp(109);dp(97);dp(110);dp(121);dp(32);dp(115);dp(101);dp(116);dp(106);dp(109);dp(112);dp(115);dp(32);dp(105);dp(110);dp(32);dp(97);dp(32);dp(102);dp(117);dp(110);dp(99);dp(116);dp(105);dp(111);dp(110);dp(32);dp(99);dp(97);dp(108);dp(108);dp(44);dp(32);dp(98);dp(117);dp(105);dp(108);dp(100);dp(32);dp(119);dp(105);dp(116);dp(104);dp(32);dp(97);dp(32);dp(104);dp(105);dp(103);dp(104);dp(101);dp(114);dp(32);dp(118);dp(97);dp(108);dp(117);dp(101);dp(32);dp(102);dp(111);dp(114);dp(32);dp(77);dp(65);dp(88);dp(95);dp(83);dp(69);dp(84);dp(74);dp(77);dp(80);dp(83);dp(10);ah(0);return 0}function K7(a,b){a=a|0;b=b|0;var d=0,e=0;while((d|0)<20){e=c[b+(d<<2)>>2]|0;if((e|0)==0)break;if((e|0)==(a|0)){return c[b+((d<<2)+4)>>2]|0}d=d+2|0}return 0}function K8(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=a+c>>>0;return(K=b+d+(e>>>0<a>>>0|0)>>>0,e|0)|0}function K9(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=b-d>>>0;e=b-d-(c>>>0>a>>>0|0)>>>0;return(K=e,a-c>>>0|0)|0}function La(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)<32){K=b<<c|(a&(1<<c)-1<<32-c)>>>32-c;return a<<c}K=a<<c-32;return 0}function Lb(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)<32){K=b>>>c;return a>>>c|(b&(1<<c)-1)<<32-c}K=0;return b>>>c-32|0}function Lc(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)<32){K=b>>c;return a>>>c|(b&(1<<c)-1)<<32-c}K=(b|0)<0?-1:0;return b>>c-32|0}function Ld(b){b=b|0;var c=0;c=a[n+(b>>>24)|0]|0;if((c|0)<8)return c|0;c=a[n+(b>>16&255)|0]|0;if((c|0)<8)return c+8|0;c=a[n+(b>>8&255)|0]|0;if((c|0)<8)return c+16|0;return(a[n+(b&255)|0]|0)+24|0}function Le(b){b=b|0;var c=0;c=a[m+(b&255)|0]|0;if((c|0)<8)return c|0;c=a[m+(b>>8&255)|0]|0;if((c|0)<8)return c+8|0;c=a[m+(b>>16&255)|0]|0;if((c|0)<8)return c+16|0;return(a[m+(b>>>24)|0]|0)+24|0}function Lf(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0;c=a&65535;d=b&65535;e=ag(d,c)|0;f=a>>>16;a=(e>>>16)+(ag(d,f)|0)|0;d=b>>>16;b=ag(d,c)|0;return(K=(a>>>16)+(ag(d,f)|0)+(((a&65535)+b|0)>>>16)|0,a+b<<16|e&65535|0)|0}function Lg(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;e=b>>31|((b|0)<0?-1:0)<<1;f=((b|0)<0?-1:0)>>31|((b|0)<0?-1:0)<<1;g=d>>31|((d|0)<0?-1:0)<<1;h=((d|0)<0?-1:0)>>31|((d|0)<0?-1:0)<<1;i=K9(e^a,f^b,e,f)|0;b=K;a=g^e;e=h^f;f=K9((Ll(i,b,K9(g^c,h^d,g,h)|0,K,0)|0)^a,K^e,a,e)|0;return(K=K,f)|0}function Lh(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0;f=i;i=i+8|0;g=f|0;h=b>>31|((b|0)<0?-1:0)<<1;j=((b|0)<0?-1:0)>>31|((b|0)<0?-1:0)<<1;k=e>>31|((e|0)<0?-1:0)<<1;l=((e|0)<0?-1:0)>>31|((e|0)<0?-1:0)<<1;m=K9(h^a,j^b,h,j)|0;b=K;Ll(m,b,K9(k^d,l^e,k,l)|0,K,g)|0;l=K9(c[g>>2]^h,c[g+4>>2]^j,h,j)|0;j=K;i=f;return(K=j,l)|0}function Li(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0;e=a;a=c;c=Lf(e,a)|0;f=K;return(K=(ag(b,a)|0)+(ag(d,e)|0)+f|f&0,c|0|0)|0}function Lj(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=Ll(a,b,c,d,0)|0;return(K=K,e)|0}function Lk(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;f=i;i=i+8|0;g=f|0;Ll(a,b,d,e,g)|0;i=f;return(K=c[g+4>>2]|0,c[g>>2]|0)|0}function Ll(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,L=0,M=0;g=a;h=b;i=h;j=d;k=e;l=k;if((i|0)==0){m=(f|0)!=0;if((l|0)==0){if(m){c[f>>2]=(g>>>0)%(j>>>0);c[f+4>>2]=0}n=0;o=(g>>>0)/(j>>>0)>>>0;return(K=n,o)|0}else{if(!m){n=0;o=0;return(K=n,o)|0}c[f>>2]=a|0;c[f+4>>2]=b&0;n=0;o=0;return(K=n,o)|0}}m=(l|0)==0;do{if((j|0)==0){if(m){if((f|0)!=0){c[f>>2]=(i>>>0)%(j>>>0);c[f+4>>2]=0}n=0;o=(i>>>0)/(j>>>0)>>>0;return(K=n,o)|0}if((g|0)==0){if((f|0)!=0){c[f>>2]=0;c[f+4>>2]=(i>>>0)%(l>>>0)}n=0;o=(i>>>0)/(l>>>0)>>>0;return(K=n,o)|0}p=l-1|0;if((p&l|0)==0){if((f|0)!=0){c[f>>2]=a|0;c[f+4>>2]=p&i|b&0}n=0;o=i>>>((Le(l|0)|0)>>>0);return(K=n,o)|0}p=(Ld(l|0)|0)-(Ld(i|0)|0)|0;if(p>>>0<=30){q=p+1|0;r=31-p|0;s=q;t=i<<r|g>>>(q>>>0);u=i>>>(q>>>0);v=0;w=g<<r;break}if((f|0)==0){n=0;o=0;return(K=n,o)|0}c[f>>2]=a|0;c[f+4>>2]=h|b&0;n=0;o=0;return(K=n,o)|0}else{if(!m){r=(Ld(l|0)|0)-(Ld(i|0)|0)|0;if(r>>>0<=31){q=r+1|0;p=31-r|0;x=r-31>>31;s=q;t=g>>>(q>>>0)&x|i<<p;u=i>>>(q>>>0)&x;v=0;w=g<<p;break}if((f|0)==0){n=0;o=0;return(K=n,o)|0}c[f>>2]=a|0;c[f+4>>2]=h|b&0;n=0;o=0;return(K=n,o)|0}p=j-1|0;if((p&j|0)!=0){x=(Ld(j|0)|0)+33-(Ld(i|0)|0)|0;q=64-x|0;r=32-x|0;y=r>>31;z=x-32|0;A=z>>31;s=x;t=r-1>>31&i>>>(z>>>0)|(i<<r|g>>>(x>>>0))&A;u=A&i>>>(x>>>0);v=g<<q&y;w=(i<<q|g>>>(z>>>0))&y|g<<r&x-33>>31;break}if((f|0)!=0){c[f>>2]=p&g;c[f+4>>2]=0}if((j|0)==1){n=h|b&0;o=a|0|0;return(K=n,o)|0}else{p=Le(j|0)|0;n=i>>>(p>>>0)|0;o=i<<32-p|g>>>(p>>>0)|0;return(K=n,o)|0}}}while(0);if((s|0)==0){B=w;C=v;D=u;E=t;F=0;G=0}else{g=d|0|0;d=k|e&0;e=K8(g,d,-1,-1)|0;k=K;i=w;w=v;v=u;u=t;t=s;s=0;while(1){H=w>>>31|i<<1;I=s|w<<1;j=u<<1|i>>>31|0;a=u>>>31|v<<1|0;K9(e,k,j,a)|0;b=K;h=b>>31|((b|0)<0?-1:0)<<1;J=h&1;L=K9(j,a,h&g,(((b|0)<0?-1:0)>>31|((b|0)<0?-1:0)<<1)&d)|0;M=K;b=t-1|0;if((b|0)==0){break}else{i=H;w=I;v=M;u=L;t=b;s=J}}B=H;C=I;D=M;E=L;F=0;G=J}J=C;C=0;if((f|0)!=0){c[f>>2]=E;c[f+4>>2]=D}n=(J|0)>>>31|(B|C)<<1|(C<<1|J>>>31)&0|F;o=(J<<1|0>>>31)&-2|G;return(K=n,o)|0}function Lm(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;ef(a|0,b|0,c|0,d|0,e|0)}function Ln(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;cQ(a|0,b|0,c|0,d|0,e|0)}function Lo(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;b8(a|0,b|0,c|0,d|0,e|0)}function Lp(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;e$(a|0,b|0,c|0,d|0,e|0)}function Lq(a,b){a=a|0;b=+b;ej(a|0,+b)}function Lr(a){a=a|0;c$(a|0)}function Ls(a){a=a|0;cq(a|0)}function Lt(a){a=a|0;gO(a|0)}function Lu(a){a=a|0;dS(a|0)}function Lv(a){a=a|0;fU(a|0)}function Lw(a){a=a|0;gh(a|0)}function Lx(a){a=a|0;e1(a|0)}function Ly(a){a=a|0;dL(a|0)}function Lz(a){a=a|0;dR(a|0)}function LA(a){a=a|0;d4(a|0)}function LB(a){a=a|0;dJ(a|0)}function LC(a){a=a|0;dV(a|0)}function LD(a){a=a|0;eK(a|0)}function LE(a){a=a|0;gT(a|0)}function LF(a){a=a|0;fi(a|0)}function LG(a){a=a|0;cw(a|0)}function LH(a){a=a|0;bF(a|0)}function LI(a){a=a|0;bE(a|0)}function LJ(a){a=a|0;bm(a|0)}function LK(a){a=a|0;cx(a|0)}function LL(a){a=a|0;fF(a|0)}function LM(a){a=a|0;b2(a|0)}function LN(a){a=a|0;eE(a|0)}function LO(a){a=a|0;d_(a|0)}function LP(a){a=a|0;bn(a|0)}function LQ(a){a=a|0;gw(a|0)}function LR(a,b){a=a|0;b=b|0;cn(a|0,b|0)}function LS(a,b){a=a|0;b=b|0;be(a|0,b|0)}function LT(a,b){a=a|0;b=b|0;ey(a|0,b|0)}function LU(a,b){a=a|0;b=b|0;eZ(a|0,b|0)}function LV(a,b){a=a|0;b=b|0;fs(a|0,b|0)}function LW(a,b){a=a|0;b=b|0;er(a|0,b|0)}function LX(a,b){a=a|0;b=b|0;fj(a|0,b|0)}function LY(a,b){a=a|0;b=b|0;bz(a|0,b|0)}function LZ(a,b){a=a|0;b=b|0;gi(a|0,b|0)}function L_(a,b){a=a|0;b=b|0;ch(a|0,b|0)}function L$(a,b){a=a|0;b=b|0;du(a|0,b|0)}function L0(a,b){a=a|0;b=b|0;bB(a|0,b|0)}function L1(a,b){a=a|0;b=b|0;c0(a|0,b|0)}function L2(a,b){a=a|0;b=b|0;gq(a|0,b|0)}function L3(a,b){a=a|0;b=b|0;bZ(a|0,b|0)}function L4(a,b){a=a|0;b=b|0;d$(a|0,b|0)}function L5(a,b){a=a|0;b=b|0;d6(a|0,b|0)}function L6(a,b){a=a|0;b=b|0;gn(a|0,b|0)}function L7(a,b){a=a|0;b=b|0;f0(a|0,b|0)}function L8(a,b){a=a|0;b=b|0;fl(a|0,b|0)}function L9(a,b){a=a|0;b=b|0;dx(a|0,b|0)}function Ma(a,b){a=a|0;b=b|0;fk(a|0,b|0)}function Mb(a,b){a=a|0;b=b|0;fu(a|0,b|0)}function Mc(a,b){a=a|0;b=b|0;go(a|0,b|0)}function Md(a,b){a=a|0;b=b|0;eT(a|0,b|0)}function Me(a,b){a=a|0;b=b|0;ed(a|0,b|0)}function Mf(a,b){a=a|0;b=b|0;fn(a|0,b|0)}function Mg(a,b){a=a|0;b=b|0;d9(a|0,b|0)}function Mh(a,b){a=a|0;b=b|0;cA(a|0,b|0)}function Mi(a,b){a=a|0;b=b|0;eh(a|0,b|0)}function Mj(a,b){a=a|0;b=b|0;c6(a|0,b|0)}function Mk(a,b){a=a|0;b=b|0;br(a|0,b|0)}function Ml(a,b){a=a|0;b=b|0;cJ(a|0,b|0)}function Mm(a,b){a=a|0;b=b|0;el(a|0,b|0)}function Mn(a,b){a=a|0;b=b|0;dC(a|0,b|0)}function Mo(a,b){a=a|0;b=b|0;bR(a|0,b|0)}function Mp(a,b){a=a|0;b=b|0;bw(a|0,b|0)}function Mq(a,b){a=a|0;b=b|0;gK(a|0,b|0)}function Mr(a){a=a|0;return f1(a|0)|0}function Ms(a){a=a|0;return fo(a|0)|0}function Mt(a){a=a|0;return bu(a|0)|0}function Mu(a){a=a|0;return bv(a|0)|0}function Mv(a){a=a|0;return cu(a|0)|0}function Mw(a){a=a|0;return cp(a|0)|0}function Mx(a){a=a|0;return bP(a|0)|0}function My(a){a=a|0;return b5(a|0)|0}function Mz(a){a=a|0;return gA(a|0)|0}function MA(a){a=a|0;return cm(a|0)|0}function MB(a){a=a|0;return eV(a|0)|0}function MC(a,b,c,d,e,f,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;fO(a|0,b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0)}function MD(a,b,c,d,e,f,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;en(a|0,b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0)}function ME(a,b,c,d,e,f,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;gv(a|0,b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0)}function MF(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;f5(a|0,b|0,c|0,d|0,e|0,f|0)}function MG(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;da(a|0,b|0,c|0,d|0,e|0,f|0)}function MH(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;e4(a|0,b|0,c|0,d|0,e|0,f|0,g|0)}function MI(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;ds(a|0,b|0,c|0,d|0,e|0,f|0,g|0)}function MJ(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;gR(a|0,b|0,c|0,d|0,e|0,f|0,g|0)}function MK(a,b){a=a|0;b=b|0;return fX(a|0,b|0)|0}function ML(a,b,c){a=a|0;b=b|0;c=c|0;cf(a|0,b|0,c|0)}function MM(a,b,c){a=a|0;b=b|0;c=c|0;c7(a|0,b|0,c|0)}function MN(a,b,c){a=a|0;b=b|0;c=c|0;b6(a|0,b|0,c|0)}function MO(a,b,c){a=a|0;b=b|0;c=c|0;eg(a|0,b|0,c|0)}function MP(a,b,c){a=a|0;b=b|0;c=c|0;b_(a|0,b|0,c|0)}function MQ(a,b,c){a=a|0;b=b|0;c=c|0;cU(a|0,b|0,c|0)}function MR(a,b,c){a=a|0;b=b|0;c=c|0;eG(a|0,b|0,c|0)}function MS(a,b,c){a=a|0;b=b|0;c=c|0;dD(a|0,b|0,c|0)}function MT(a,b,c){a=a|0;b=b|0;c=c|0;gB(a|0,b|0,c|0)}function MU(a,b,c){a=a|0;b=b|0;c=c|0;dm(a|0,b|0,c|0)}function MV(a,b,c){a=a|0;b=b|0;c=c|0;eo(a|0,b|0,c|0)}function MW(a,b,c){a=a|0;b=b|0;c=c|0;c9(a|0,b|0,c|0)}function MX(a,b,c){a=a|0;b=b|0;c=c|0;dr(a|0,b|0,c|0)}function MY(a,b,c){a=a|0;b=b|0;c=c|0;fY(a|0,b|0,c|0)}function MZ(a,b,c){a=a|0;b=b|0;c=c|0;dW(a|0,b|0,c|0)}function M_(a,b,c){a=a|0;b=b|0;c=c|0;fd(a|0,b|0,c|0)}function M$(a,b,c){a=a|0;b=b|0;c=c|0;fD(a|0,b|0,c|0)}function M0(a,b,c){a=a|0;b=b|0;c=c|0;ek(a|0,b|0,c|0)}function M1(a,b,c){a=a|0;b=b|0;c=c|0;cG(a|0,b|0,c|0)}function M2(a,b,c){a=a|0;b=b|0;c=c|0;cS(a|0,b|0,c|0)}function M3(a,b,c){a=a|0;b=b|0;c=c|0;gH(a|0,b|0,c|0)}function M4(a,b,c){a=a|0;b=b|0;c=c|0;dX(a|0,b|0,c|0)}function M5(a,b,c){a=a|0;b=b|0;c=c|0;f4(a|0,b|0,c|0)}function M6(a,b,c){a=a|0;b=b|0;c=c|0;f3(a|0,b|0,c|0)}function M7(a,b,c){a=a|0;b=b|0;c=c|0;fQ(a|0,b|0,c|0)}function M8(a,b,c){a=a|0;b=b|0;c=c|0;c_(a|0,b|0,c|0)}function M9(a,b,c){a=a|0;b=b|0;c=c|0;bO(a|0,b|0,c|0)}function Na(a,b,c){a=a|0;b=b|0;c=c|0;dy(a|0,b|0,c|0)}function Nb(a,b,c){a=a|0;b=b|0;c=c|0;bp(a|0,b|0,c|0)}function Nc(a,b,c){a=a|0;b=b|0;c=c|0;dA(a|0,b|0,c|0)}function Nd(){dP()}function Ne(){gc()}function Nf(){ez()}function Ng(){e_()}function Nh(){cC()}function Ni(){cR()}function Nj(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;gj(a|0,b|0,c|0,d|0)}function Nk(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;gQ(a|0,b|0,c|0,d|0)}function Nl(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;dK(a|0,b|0,c|0,d|0)}function Nm(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;bk(a|0,b|0,c|0,d|0)}function Nn(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;dT(a|0,b|0,c|0,d|0)}function No(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;eJ(a|0,b|0,c|0,d|0)}function Np(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;fz(a|0,b|0,c|0,d|0)}function Nq(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;ck(a|0,b|0,c|0,d|0)}function Nr(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;e7(a|0,b|0,c|0,d|0)}function Ns(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;fc(a|0,b|0,c|0,d|0)}function Nt(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;eD(a|0,b|0,c|0,d|0)}function Nu(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;f6(a|0,b|0,c|0,d|0)}function Nv(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;ee(a|0,b|0,c|0,d|0)}function Nw(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;bI(a|0,b|0,c|0,d|0)}function Nx(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;bA(a|0,b|0,c|0,d|0)}function Ny(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;ec(a|0,b|0,c|0,d|0)}function Nz(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;ft(a|0,b|0,c|0,d|0)}function NA(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;bG(a|0,b|0,c|0,d|0)}function NB(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;eP(a|0,b|0,c|0,d|0)}function NC(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;cZ(a|0,b|0,c|0,d|0)}function ND(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;gd(a|0,b|0,c|0,d|0)}function NE(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;dY(a|0,b|0,c|0,d|0)}function NF(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;b9(a|0,b|0,c|0,d|0)}function NG(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;cg(a|0,b|0,c|0,d|0)}function NH(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;gk(a|0,b|0,c|0,d|0)}function NI(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;eN(a|0,b|0,c|0,d|0)}function NJ(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;eX(a|0,b|0,c|0,d|0)}function NK(a,b,c,d){a=a|0;b=+b;c=+c;d=+d;bM(a|0,+b,+c,+d)}function NL(a,b,c){a=a|0;b=+b;c=+c;c8(a|0,+b,+c)}function NM(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;by(a|0,b|0,c|0,d|0,e|0,f|0,g|0,h|0)}function NN(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;dt(a|0,b|0,c|0,d|0,e|0,f|0,g|0,h|0)}function NO(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;di(a|0,b|0,c|0,d|0,e|0,f|0,g|0,h|0)}function NP(){return gl()|0}function NQ(){return fm()|0}function NR(a,b,c,d,e){a=a|0;b=+b;c=+c;d=+d;e=+e;e5(a|0,+b,+c,+d,+e)}function NS(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;return gX[a&1](b|0,c|0,d|0,e|0,f|0,g|0,h|0)|0}function NT(a,b,c){a=a|0;b=b|0;c=+c;gY[a&63](b|0,+c)}function NU(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=+d;e=e|0;f=f|0;gZ[a&3](b|0,c|0,+d,e|0,f|0)}function NV(a,b,c,d,e,f,g,h,i,j,k,l){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=+f;g=+g;h=+h;i=+i;j=+j;k=k|0;l=+l;g_[a&3](b|0,c|0,d|0,e|0,+f,+g,+h,+i,+j,k|0,+l)}function NW(a,b){a=a|0;b=b|0;g$[a&1023](b|0)}function NX(a,b,c){a=a|0;b=b|0;c=c|0;g0[a&511](b|0,c|0)}function NY(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;return g1[a&7](b|0,c|0,d|0,e|0,f|0,g|0)|0}function NZ(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=+f;g2[a&3](b|0,c|0,d|0,e|0,+f)}function N_(a,b){a=a|0;b=b|0;return g3[a&511](b|0)|0}function N$(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=+h;g4[a&7](b|0,c|0,d|0,e|0,f|0,g|0,+h)}function N0(a,b,c,d,e,f,g,h,i,j,k,l){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=+f;g=+g;h=+h;i=+i;j=j|0;k=k|0;l=+l;g5[a&3](b|0,c|0,d|0,e|0,+f,+g,+h,+i,j|0,k|0,+l)}function N1(a,b){a=a|0;b=b|0;return+g6[a&15](b|0)}function N2(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g7[a&127](b|0,c|0,d|0,e|0,f|0)}function N3(a,b,c,d,e,f){a=a|0;b=b|0;c=+c;d=+d;e=+e;f=+f;g8[a&3](b|0,+c,+d,+e,+f)}function N4(a,b,c,d,e,f,g){a=a|0;b=b|0;c=+c;d=+d;e=e|0;f=f|0;g=g|0;g9[a&7](b|0,+c,+d,e|0,f|0,g|0)}function N5(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=+e;ha[a&31](b|0,c|0,d|0,+e)}function N6(a,b,c,d,e,f,g,h,i,j,k,l){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;return+hb[a&3](b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0,j|0,k|0,l|0)}function N7(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=+d;e=e|0;f=f|0;return+hc[a&7](b|0,c|0,+d,e|0,f|0)}function N8(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return hd[a&127](b|0,c|0,d|0)|0}function N9(a,b,c){a=a|0;b=b|0;c=+c;return+he[a&3](b|0,+c)}function Oa(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=+g;hf[a&15](b|0,c|0,d|0,e|0,f|0,+g)}function Ob(a,b,c,d){a=a|0;b=b|0;c=+c;d=+d;hg[a&7](b|0,+c,+d)}function Oc(a,b,c,d){a=a|0;b=b|0;c=+c;d=d|0;hh[a&15](b|0,+c,d|0)}function Od(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=+g;hi[a&3](b|0,c|0,d|0,e|0,f|0,+g)}function Oe(a,b,c,d,e){a=a|0;b=b|0;c=+c;d=+d;e=+e;hj[a&3](b|0,+c,+d,+e)}function Of(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;hk[a&63](b|0,c|0,d|0,e|0,f|0,g|0)}function Og(a,b,c,d,e,f,g,h,i,j){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;return hl[a&7](b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0,j|0)|0}function Oh(a,b,c,d,e,f,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;hm[a&31](b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0)}function Oi(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return+hn[a&31](b|0,c|0,d|0)}function Oj(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=+e;f=f|0;g=g|0;ho[a&3](b|0,c|0,d|0,+e,f|0,g|0)}function Ok(a,b,c,d,e,f,g,h,i,j,k){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;return+hp[a&7](b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0,j|0,k|0)}function Ol(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;return+hq[a&31](b|0,c|0,d|0,e|0,f|0)}function Om(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;hr[a&127](b|0,c|0,d|0,e|0,f|0,g|0,h|0)}function On(a,b,c,d,e,f,g,h,i,j){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=+j;hs[a&3](b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0,+j)}function Oo(a,b,c,d,e,f,g,h,i,j,k,l){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;return ht[a&7](b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0,j|0,k|0,l|0)|0}function Op(a,b,c,d,e){a=a|0;b=b|0;c=+c;d=d|0;e=e|0;hu[a&3](b|0,+c,d|0,e|0)}function Oq(a,b,c,d,e,f,g,h,i,j){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;hv[a&15](b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0,j|0)}function Or(a,b,c,d,e,f,g,h,i,j,k){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;hw[a&7](b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0,j|0,k|0)}function Os(a,b,c){a=a|0;b=b|0;c=c|0;return hx[a&127](b|0,c|0)|0}function Ot(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;return hy[a&31](b|0,c|0,d|0,e|0,f|0)|0}function Ou(a,b,c,d,e,f,g,h,i,j){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=+g;h=+h;i=i|0;j=j|0;hz[a&3](b|0,c|0,d|0,e|0,f|0,+g,+h,i|0,j|0)}function Ov(a,b,c,d,e,f,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;return+hA[a&3](b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0)}function Ow(a,b,c,d,e){a=a|0;b=b|0;c=+c;d=d|0;e=+e;return hB[a&3](b|0,+c,d|0,+e)|0}function Ox(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return+hC[a&3](b|0,c|0,d|0,e|0)}function Oy(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return hD[a&63](b|0,c|0,d|0,e|0)|0}function Oz(a){a=a|0;return hE[a&7]()|0}function OA(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;hF[a&255](b|0,c|0,d|0)}function OB(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=+d;e=e|0;hG[a&15](b|0,c|0,+d,e|0)}function OC(a){a=a|0;hH[a&15]()}function OD(a,b,c,d,e,f,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;return hI[a&31](b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0)|0}function OE(a,b,c,d){a=a|0;b=b|0;c=c|0;d=+d;hJ[a&7](b|0,c|0,+d)}function OF(a,b,c,d){a=a|0;b=b|0;c=c|0;d=+d;return hK[a&7](b|0,c|0,+d)|0}function OG(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=+e;f=f|0;g=g|0;return+hL[a&7](b|0,c|0,d|0,+e,f|0,g|0)}function OH(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;hM[a&255](b|0,c|0,d|0,e|0)}function OI(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;ah(0);return 0}function OJ(a,b){a=a|0;b=+b;ah(1)}function OK(a,b,c,d,e){a=a|0;b=b|0;c=+c;d=d|0;e=e|0;ah(2)}function OL(a,b,c,d,e,f,g,h,i,j,k){a=a|0;b=b|0;c=c|0;d=d|0;e=+e;f=+f;g=+g;h=+h;i=+i;j=j|0;k=+k;ah(3)}function OM(a){a=a|0;ah(4)}function ON(a,b){a=a|0;b=b|0;ah(5)}function OO(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;ah(6);return 0}function OP(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=+e;ah(7)}function OQ(a){a=a|0;ah(8);return 0}function OR(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=+g;ah(9)}function OS(a,b,c,d,e,f,g,h,i,j,k){a=a|0;b=b|0;c=c|0;d=d|0;e=+e;f=+f;g=+g;h=+h;i=i|0;j=j|0;k=+k;ah(10)}function OT(a){a=a|0;ah(11);return 0.0}function OU(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;ah(12)}function OV(a,b,c,d,e){a=a|0;b=+b;c=+c;d=+d;e=+e;ah(13)}function OW(a,b,c,d,e,f){a=a|0;b=+b;c=+c;d=d|0;e=e|0;f=f|0;ah(14)}function OX(a,b,c,d){a=a|0;b=b|0;c=c|0;d=+d;ah(15)}function OY(a,b,c,d,e,f,g,h,i,j,k){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;ah(16);return 0.0}function OZ(a,b,c,d,e){a=a|0;b=b|0;c=+c;d=d|0;e=e|0;ah(17);return 0.0}function O_(a,b,c){a=a|0;b=b|0;c=c|0;ah(18);return 0}function O$(a,b){a=a|0;b=+b;ah(19);return 0.0}function O0(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=+f;ah(20)}function O1(a,b,c){a=a|0;b=+b;c=+c;ah(21)}function O2(a,b,c){a=a|0;b=+b;c=c|0;ah(22)}function O3(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=+f;ah(23)}function O4(a,b,c,d){a=a|0;b=+b;c=+c;d=+d;ah(24)}function O5(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;ah(25)}function O6(a,b,c,d,e,f,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;ah(26);return 0}function O7(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;ah(27)}function O8(a,b,c){a=a|0;b=b|0;c=c|0;ah(28);return 0.0}function O9(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=+d;e=e|0;f=f|0;ah(29)}function Pa(a,b,c,d,e,f,g,h,i,j){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;ah(30);return 0.0}function Pb(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;ah(31);return 0.0}function Pc(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;ah(32)}function Pd(a,b,c,d,e,f,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=+i;ah(33)}function Pe(a,b,c,d,e,f,g,h,i,j,k){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;ah(34);return 0}function Pf(a,b,c,d){a=a|0;b=+b;c=c|0;d=d|0;ah(35)}function Pg(a,b,c,d,e,f,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;ah(36)}function Ph(a,b,c,d,e,f,g,h,i,j){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;ah(37)}function Pi(a,b){a=a|0;b=b|0;ah(38);return 0}function Pj(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;ah(39);return 0}function Pk(a,b,c,d,e,f,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=+f;g=+g;h=h|0;i=i|0;ah(40)}function Pl(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;ah(41);return 0.0}function Pm(a,b,c,d){a=a|0;b=+b;c=c|0;d=+d;ah(42);return 0}function Pn(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;ah(43);return 0.0}function Po(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;ah(44);return 0}function Pp(){ah(45);return 0}function Pq(a,b,c){a=a|0;b=b|0;c=c|0;ah(46)}function Pr(a,b,c,d){a=a|0;b=b|0;c=+c;d=d|0;ah(47)}function Ps(){ah(48)}function Pt(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;ah(49);return 0}function Pu(a,b,c){a=a|0;b=b|0;c=+c;ah(50)}function Pv(a,b,c){a=a|0;b=b|0;c=+c;ah(51);return 0}function Pw(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=+d;e=e|0;f=f|0;ah(52);return 0.0}function Px(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;ah(53)}
// EMSCRIPTEN_END_FUNCS
var gX=[OI,OI];var gY=[OJ,OJ,ma,OJ,lJ,OJ,yZ,OJ,s3,OJ,mX,OJ,iX,OJ,mz,OJ,yO,OJ,nN,OJ,jz,OJ,jc,OJ,yi,OJ,op,OJ,yP,OJ,jm,OJ,yp,OJ,Lq,OJ,jL,OJ,OJ,OJ,OJ,OJ,OJ,OJ,OJ,OJ,OJ,OJ,OJ,OJ,OJ,OJ,OJ,OJ,OJ,OJ,OJ,OJ,OJ,OJ,OJ,OJ,OJ,OJ];var gZ=[OK,OK,ku,OK];var g_=[OL,OL,ko,OL];var g$=[OM,OM,Lr,OM,If,OM,uX,OM,Fb,OM,uq,OM,tN,OM,E6,OM,vm,OM,oU,OM,Dx,OM,xr,OM,Ls,OM,tH,OM,Ik,OM,uF,OM,Ix,OM,Dd,OM,C0,OM,rR,OM,o1,OM,lx,OM,Dp,OM,I9,OM,Dv,OM,FA,OM,tn,OM,EF,OM,s1,OM,mK,OM,pK,OM,v7,OM,xD,OM,up,OM,Lt,OM,E1,OM,EZ,OM,KX,OM,y3,OM,sM,OM,rw,OM,wt,OM,Dq,OM,xs,OM,lf,OM,tt,OM,IL,OM,nW,OM,vO,OM,GJ,OM,FB,OM,om,OM,xh,OM,Lu,OM,sZ,OM,rF,OM,vL,OM,n4,OM,p4,OM,Ib,OM,xw,OM,CV,OM,ir,OM,Lv,OM,oY,OM,m0,OM,nk,OM,iv,OM,ue,OM,De,OM,BQ,OM,Lw,OM,mH,OM,Gh,OM,Kd,OM,EB,OM,Fc,OM,Lx,OM,Ly,OM,u8,OM,ym,OM,Hm,OM,oN,OM,Lz,OM,uH,OM,Ip,OM,oZ,OM,LA,OM,p1,OM,r3,OM,qu,OM,ie,OM,jj,OM,is,OM,ud,OM,w3,OM,Kw,OM,ql,OM,sk,OM,ty,OM,t_,OM,sP,OM,Jx,OM,ug,OM,EX,OM,LB,OM,qP,OM,t5,OM,mE,OM,Jk,OM,LC,OM,Dv,OM,mp,OM,nc,OM,Dq,OM,k5,OM,F2,OM,E7,OM,Ia,OM,G1,OM,JA,OM,Iy,OM,r8,OM,nm,OM,uS,OM,Gu,OM,H4,OM,wc,OM,rh,OM,Jw,OM,sw,OM,tg,OM,uj,OM,LD,OM,EG,OM,v8,OM,uy,OM,qS,OM,GY,OM,tI,OM,vl,OM,Kx,OM,kS,OM,J6,OM,h5,OM,mD,OM,nY,OM,s6,OM,r$,OM,lD,OM,sQ,OM,o2,OM,u9,OM,ss,OM,h6,OM,sJ,OM,st,OM,sd,OM,qb,OM,uk,OM,xC,OM,y6,OM,qx,OM,iq,OM,pL,OM,tk,OM,l6,OM,um,OM,yd,OM,sI,OM,DY,OM,w$,OM,HJ,OM,sS,OM,la,OM,uY,OM,nJ,OM,zq,OM,un,OM,uz,OM,EA,OM,x1,OM,zs,OM,s_,OM,pq,OM,Hn,OM,LE,OM,EN,OM,l2,OM,BS,OM,v9,OM,AJ,OM,GV,OM,GI,OM,r4,OM,oM,OM,BR,OM,tw,OM,vC,OM,E_,OM,Hb,OM,wd,OM,KW,OM,LF,OM,D7,OM,vM,OM,F3,OM,ts,OM,wJ,OM,pt,OM,ni,OM,wB,OM,J9,OM,n1,OM,Ka,OM,p0,OM,ES,OM,Em,OM,n8,OM,Kz,OM,LG,OM,sX,OM,nb,OM,HL,OM,mJ,OM,LH,OM,y4,OM,LI,OM,yg,OM,Kt,OM,IV,OM,ly,OM,t8,OM,le,OM,kK,OM,vh,OM,ps,OM,EY,OM,HI,OM,CT,OM,nv,OM,nj,OM,Hx,OM,ET,OM,zX,OM,BT,OM,yl,OM,nl,OM,Kc,OM,j2,OM,LJ,OM,s0,OM,EC,OM,jW,OM,tS,OM,C6,OM,lz,OM,tZ,OM,Io,OM,wC,OM,sN,OM,It,OM,s9,OM,rs,OM,r2,OM,Hy,OM,LK,OM,GW,OM,us,OM,HT,OM,Ks,OM,mR,OM,oz,OM,H5,OM,mG,OM,p9,OM,G0,OM,Gg,OM,rN,OM,tF,OM,Iv,OM,sG,OM,sU,OM,qZ,OM,C7,OM,kT,OM,mq,OM,yL,OM,LL,OM,yh,OM,nT,OM,zZ,OM,xH,OM,mS,OM,ut,OM,I1,OM,rg,OM,rj,OM,qT,OM,vB,OM,HS,OM,pM,OM,i$,OM,sf,OM,iw,OM,Jz,OM,qq,OM,qm,OM,l1,OM,uR,OM,y5,OM,Kb,OM,l7,OM,xb,OM,n0,OM,LM,OM,Kt,OM,vg,OM,Kr,OM,C$,OM,w2,OM,x7,OM,D8,OM,iR,OM,KA,OM,sC,OM,LN,OM,vN,OM,EM,OM,io,OM,qY,OM,Ez,OM,DG,OM,n7,OM,vH,OM,sy,OM,uh,OM,pN,OM,xG,OM,qw,OM,ta,OM,it,OM,KN,OM,n3,OM,iu,OM,uI,OM,ER,OM,tJ,OM,D4,OM,EQ,OM,td,OM,zu,OM,kJ,OM,lg,OM,pe,OM,sh,OM,E0,OM,LO,OM,uJ,OM,yN,OM,v6,OM,vI,OM,EI,OM,EL,OM,DF,OM,Ir,OM,u0,OM,tj,OM,E$,OM,qQ,OM,ub,OM,tz,OM,m1,OM,GZ,OM,u6,OM,nX,OM,qo,OM,u1,OM,Jy,OM,jg,OM,Hc,OM,yn,OM,H$,OM,y$,OM,rt,OM,j1,OM,xc,OM,EH,OM,El,OM,tm,OM,EK,OM,k6,OM,on,OM,nu,OM,LP,OM,H_,OM,jb,OM,t4,OM,Jv,OM,Iw,OM,tB,OM,J8,OM,yj,OM,E2,OM,pr,OM,sT,OM,IM,OM,oA,OM,Gv,OM,wU,OM,Ky,OM,Ig,OM,lg,OM,CU,OM,oW,OM,rQ,OM,Kv,OM,tx,OM,ua,OM,u7,OM,rx,OM,r_,OM,rk,OM,ye,OM,LQ,OM,uG,OM,nI,OM,nS,OM,sj,OM,xI,OM,jX,OM,DM,OM,t7,OM,Du,OM,tT,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM,OM];var g0=[ON,ON,ig,ON,LR,ON,tf,ON,qn,ON,yF,ON,nf,ON,yD,ON,Dt,ON,JJ,ON,Ae,ON,qO,ON,yH,ON,rA,ON,HD,ON,rc,ON,qs,ON,Hf,ON,LS,ON,tD,ON,LT,ON,y9,ON,mx,ON,JG,ON,sn,ON,jY,ON,so,ON,Hw,ON,pd,ON,LU,ON,LV,ON,BO,ON,yG,ON,LW,ON,zp,ON,JF,ON,rV,ON,Hl,ON,LX,ON,LY,ON,nM,ON,CW,ON,Ie,ON,LZ,ON,L_,ON,G7,ON,L$,ON,xx,ON,s4,ON,ys,ON,tl,ON,yB,ON,jp,ON,yx,ON,nK,ON,L0,ON,lo,ON,rz,ON,Ht,ON,BK,ON,En,ON,G6,ON,qk,ON,L1,ON,L2,ON,G4,ON,yW,ON,HE,ON,L3,ON,th,ON,L4,ON,L5,ON,L6,ON,qe,ON,rH,ON,kg,ON,C8,ON,Hg,ON,u$,ON,L7,ON,rX,ON,wr,ON,l8,ON,uM,ON,HH,ON,JI,ON,yY,ON,L8,ON,r5,ON,oG,ON,oP,ON,L9,ON,HB,ON,Ma,ON,rd,ON,lm,ON,Mb,ON,Mc,ON,Md,ON,Me,ON,o9,ON,mu,ON,Mf,ON,pD,ON,oH,ON,xj,ON,Mg,ON,JK,ON,Hv,ON,Mh,ON,Is,ON,sY,ON,JH,ON,Hk,ON,qM,ON,C1,ON,iK,ON,Mi,ON,yQ,ON,D9,ON,Mj,ON,mw,ON,ru,ON,mU,ON,Mk,ON,yE,ON,wp,ON,yv,ON,qp,ON,lI,ON,tY,ON,Ij,ON,Df,ON,Hq,ON,w9,ON,wW,ON,xy,ON,Ca,ON,m8,ON,Hi,ON,Ha,ON,oK,ON,pH,ON,uA,ON,uv,ON,l3,ON,i2,ON,G5,ON,yt,ON,yI,ON,uV,ON,Hr,ON,xi,ON,p$,ON,yw,ON,Hs,ON,yC,ON,G9,ON,Ml,ON,Mm,ON,Mn,ON,rn,ON,jZ,ON,pI,ON,mW,ON,Mo,ON,wV,ON,Mp,ON,nB,ON,ki,ON,BL,ON,HC,ON,Mq,ON,tX,ON,qG,ON,AB,ON,Hh,ON,HG,ON,oJ,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON];var g1=[OO,OO,ve,OO,wb,OO,vk,OO];var g2=[OP,OP,wA,OP];var g3=[OQ,OQ,JY,OQ,n_,OQ,nL,OQ,qI,OQ,Eg,OQ,mV,OQ,I_,OQ,JO,OQ,JU,OQ,m9,OQ,Eh,OQ,m_,OQ,lL,OQ,JW,OQ,Hd,OQ,mB,OQ,lS,OQ,lH,OQ,C9,OQ,Gw,OQ,JM,OQ,mg,OQ,Dh,OQ,Ev,OQ,Cf,OQ,l9,OQ,oV,OQ,Eu,OQ,pz,OQ,Jq,OQ,yS,OQ,kk,OQ,JS,OQ,qJ,OQ,JQ,OQ,rL,OQ,HF,OQ,mY,OQ,lV,OQ,Ku,OQ,Dw,OQ,Mr,OQ,JE,OQ,t0,OQ,JB,OQ,JR,OQ,rY,OQ,t1,OQ,JC,OQ,Ed,OQ,mh,OQ,IZ,OQ,xE,OQ,JT,OQ,t2,OQ,CX,OQ,lP,OQ,He,OQ,rI,OQ,JX,OQ,pG,OQ,Ms,OQ,wG,OQ,ou,OQ,rK,OQ,m2,OQ,lR,OQ,G8,OQ,Hz,OQ,JL,OQ,Mt,OQ,Mu,OQ,Mv,OQ,C2,OQ,pb,OQ,JV,OQ,mk,OQ,wD,OQ,Jr,OQ,px,OQ,Mw,OQ,nU,OQ,EV,OQ,pB,OQ,xd,OQ,yX,OQ,Mx,OQ,Ju,OQ,lF,OQ,qL,OQ,Jg,OQ,My,OQ,C3,OQ,qK,OQ,oQ,OQ,G2,OQ,JD,OQ,qh,OQ,yR,OQ,Ee,OQ,pa,OQ,Er,OQ,sp,OQ,I0,OQ,Hj,OQ,Dg,OQ,oI,OQ,Jf,OQ,k2,OQ,xt,OQ,I6,OQ,Es,OQ,me,OQ,qi,OQ,JN,OQ,rM,OQ,my,OQ,G3,OQ,Ho,OQ,I8,OQ,Hu,OQ,t3,OQ,Hp,OQ,JP,OQ,Mz,OQ,oo,OQ,Dr,OQ,zt,OQ,w4,OQ,I5,OQ,GK,OQ,zn,OQ,iz,OQ,MA,OQ,qN,OQ,oD,OQ,py,OQ,Jj,OQ,KY,OQ,HA,OQ,MB,OQ,nvar g4=[OR,OR,H0,OR,H6,OR,OR,OR];var g5=[OS,OS,kn,OS];var g6=[OT,OT,nR,OT,oq,OT,nV,OT,mA,OT,m5,OT,lK,OT,OT,OT];var g7=[OU,OU,Lm,OU,ka,OU,uT,OU,o5,OU,ti,OU,ri,OU,vb,OU,KI,OU,tA,OU,Ln,OU,tq,OU,tb,OU,rl,OU,tV,OU,Lo,OU,kq,OU,wo,OU,uw,OU,uQ,OU,vD,OU,vF,OU,uZ,OU,qc,OU,xv,OU,l_,OU,Lp,OU,KG,OU,yf,OU,rr,OU,nw,OU,s7,OU,KH,OU,OU,OU,OU,OU,OU,OU,OU,OU,OU,OU,OU,OU,OU,OU,OU,OU,OU,OU,OU,OU,OU,OU,OU,OU,OU,OU,OU,OU,OU,OU,OU,OU,OU,OU,OU,OU,OU,OU,OU,OU,OU,OU,OU,OU,OU,OU,OU,OU,OU,OU,OU,OU,OU,OU,OU,OU,OU,OU,OU,OU,OU,OU];var g8=[OV,OV,NR,OV];var g9=[OW,OW,ks,OW,kr,OW,kt,OW];var ha=[OX,OX,tM,OX,vR,OX,sB,OX,wI,OX,lZ,OX,wu,OX,uE,OX,tG,OX,lC,OX,tQ,OX,OX,OX,OX,OX,OX,OX,OX,OX,OX,OX];var hb=[OY,OY,x0,OY];var hc=[OZ,OZ,s$,OZ,s2,OZ,OZ,OZ];var hd=[O_,O_,re,O_,rC,O_,w5,O_,E5,O_,IO,O_,IG,O_,xu,O_,mv,O_,pu,O_,Ad,O_,Aw,O_,DA,O_,KB,O_,Ic,O_,B9,O_,CL,O_,IJ,O_,Fa,O_,lM,O_,Ef,O_,B8,O_,Iz,O_,rD,O_,wE,O_,Eo,O_,Ih,O_,mZ,O_,qB,O_,xF,O_,pF,O_,qH,O_,ry,O_,ot,O_,xe,O_,IE,O_,CY,O_,nP,O_,DB,O_,m7,O_,Et,O_,IQ,O_,zo,O_,Ej,O_,t$,O_,IT,O_,kL,O_,Ea,O_,Da,O_,rU,O_,x6,O_,Ex,O_,O_,O_,O_,O_,O_,O_,O_,O_,O_,O_,O_,O_,O_,O_,O_,O_,O_,O_,O_,O_,O_,O_,O_,O_];var he=[O$,O$,m4,O$];var hf=[O0,O0,Gr,O0,Gp,O0,Ge,O0,Gb,O0,O0,O0,O0,O0,O0,O0];var hg=[O1,O1,NL,O1,mQ,O1,mM,O1];var hh=[O2,O2,nD,O2,od,O2,mP,O2,lG,O2,ol,O2,oS,O2,l5,O2];var hi=[O3,O3,ke,O3];var hj=[O4,O4,NK,O4];var hk=[O5,O5,Eb,O5,KJ,O5,w6,O5,Gn,O5,Gj,O5,Gi,O5,wK,O5,Gs,O5,MF,O5,Id,O5,Ep,O5,F4,O5,F5,O5,y7,O5,o$,O5,MG,O5,Gf,O5,p7,O5,o7,O5,uW,O5,xg,O5,F9,O5,ix,O5,KL,O5,KK,O5,Ii,O5,O5,O5,O5,O5,O5,O5,O5,O5,O5,O5];var hl=[O6,O6,o3,O6,CO,O6,p2,O6];var hm=[O7,O7,NM,O7,G_,O7,GX,O7,NN,O7,HU,O7,tR,O7,xf,O7,HK,O7,HO,O7,HW,O7,NO,O7,O7,O7,O7,O7,O7,O7,O7,O7];var hn=[O8,O8,sL,O8,xB,O8,sW,O8,i1,O8,y2,O8,y1,O8,xq,O8,w1,O8,wy,O8,O8,O8,O8,O8,O8,O8,O8,O8,O8,O8,O8,O8];var ho=[O9,O9,kf,O9];var hp=[Pa,Pa,xV,Pa,xZ,Pa,Pa,Pa];var hq=[Pb,Pb,uU,Pb,tW,Pb,rm,Pb,tr,Pb,ux,Pb,te,Pb,tC,Pb,u_,Pb,Pb,Pb,Pb,Pb,Pb,Pb,Pb,Pb,Pb,Pb,Pb,Pb,Pb,Pb];var hr=[Pc,Pc,GB,Pc,GL,Pc,Gx,Pc,GN,Pc,Ff,Pc,Go,Pc,Gm,Pc,FQ,Pc,GP,Pc,GA,Pc,FE,Pc,GO,Pc,H9,Pc,FC,Pc,MH,Pc,MI,Pc,MJ,Pc,FW,Pc,Gz,Pc,Fr,Pc,FK,Pc,Fn,Pc,GM,Pc,FO,Pc,Ga,Pc,F8,Pc,FM,Pc,FU,Pc,FG,Pc,H3,Pc,FI,Pc,Fx,Pc,FS,Pc,ox,Pc,Fd,Pc,Fl,Pc,Gy,Pc,Fp,Pc,Fh,Pc,Fj,Pc,Fv,Pc,Ft,Pc,Pc,Pc,Pc,Pc,Pc,Pc,Pc,Pc,Pc,Pc,Pc,Pc,Pc,Pc,Pc,Pc,Pc,Pc,Pc,Pc,Pc,Pc,Pc,Pc,Pc,Pc,Pc,Pc,Pc,Pc,Pc,Pc,Pc,Pc,Pc,Pc,Pc,Pc,Pc,Pc,Pc,Pc];var hs=[Pd,Pd,kd,Pd];var ht=[Pe,Pe,vJ,Pe,vA,Pe,Pe,Pe];var hu=[Pf,Pf,kj,Pf];var hv=[Pg,Pg,MC,Pg,MD,Pg,GQ,Pg,GC,Pg,ME,Pg,Pg,Pg,Pg,Pg];var hw=[Ph,Ph,oB,Ph,xY,Ph,oC,Ph];var hx=[Pi,Pi,CZ,Pi,sH,Pi,Di,Pi,qU,Pi,y0,Pi,IH,Pi,IR,Pi,p_,Pi,C4,Pi,Db,Pi,Ew,Pi,ID,Pi,MK,Pi,rJ,Pi,iB,Pi,rW,Pi,sV,Pi,sK,Pi,kM,Pi,sD,Pi,rG,Pi,zJ,Pi,rO,Pi,IP,Pi,CN,Pi,IN,Pi,wn,Pi,Ek,Pi,Cd,Pi,i0,Pi,AH,Pi,Ey,Pi,IF,Pi,pZ,Pi,jh,Pi,iA,Pi,yT,Pi,n9,Pi,qR,Pi,zr,Pi,yU,Pi,Ei,Pi,zk,Pi,Pi,Pi,Pi,Pi,Pi,Pi,Pi,Pi,Pi,Pi,Pi,Pi,Pi,Pi,Pi,Pi,Pi,Pi,Pi,Pi,Pi,Pi,Pi,Pi,Pi,Pi,Pi,Pi,Pi,Pi,Pi,Pi,Pi,Pi,Pi,Pi,Pi,Pi,Pi,Pi];var hy=[Pj,Pj,I7,Pj,I4,Pj,IK,Pj,E8,Pj,Js,Pj,Jh,Pj,IU,Pj,E3,Pj,IY,Pj,I$,Pj,Je,Pj,Jp,Pj,Pj,Pj,Pj,Pj,Pj,Pj];var hz=[Pk,Pk,vE,Pk];var hA=[Pl,Pl,ji,Pl];var hB=[Pm,Pm,yo,Pm];var hC=[Pn,Pn,x_,Pn];var hD=[Po,Po,rB,Po,BJ,Po,uu,Po,ul,Po,tE,Po,n$,Po,rb,Po,ui,Po,t9,Po,uc,Po,IB,Po,IS,Po,IA,Po,uo,Po,ur,Po,pv,Po,II,Po,qE,Po,uf,Po,t6,Po,IC,Po,Po,Po,Po,Po,Po,Po,Po,Po,Po,Po,Po,Po,Po,Po,Po,Po,Po,Po,Po,Po];var hE=[Pp,Pp,NP,Pp,NQ,Pp,Pp,Pp];var hF=[Pq,Pq,qr,Pq,ML,Pq,vQ,Pq,BP,Pq,uD,Pq,mf,Pq,pX,Pq,lQ,Pq,xa,Pq,MM,Pq,MN,Pq,oh,Pq,MO,Pq,MP,Pq,lc,Pq,MQ,Pq,yz,Pq,uL,Pq,mL,Pq,MR,Pq,Bq,Pq,qz,Pq,mn,Pq,Ah,Pq,lU,Pq,wz,Pq,MS,Pq,lA,Pq,tL,Pq,nQ,Pq,MT,Pq,MU,Pq,mF,Pq,MV,Pq,Bp,Pq,MW,Pq,ob,Pq,nh,Pq,EW,Pq,tO,Pq,MX,Pq,MY,Pq,tP,Pq,Bt,Pq,qy,Pq,jN,Pq,MZ,Pq,m3,Pq,qA,Pq,M_,Pq,M$,Pq,mN,Pq,oE,Pq,Bs,Pq,M0,Pq,CR,Pq,sz,Pq,tK,Pq,mj,Pq,nE,Pq,M1,Pq,mC,Pq,x2,Pq,M2,Pq,p5,Pq,M3,Pq,qF,Pq,mc,Pq,Br,Pq,CQ,Pq,ny,Pq,oF,Pq,M4,Pq,Dz,Pq,vc,Pq,AL,Pq,sA,Pq,lN,Pq,M5,Pq,nF,Pq,pA,Pq,kh,Pq,ro,Pq,rv,Pq,oj,Pq,mb,Pq,M6,Pq,mI,Pq,oT,Pq,m$,Pq,pC,Pq,k4,Pq,M7,Pq,s5,Pq,M8,Pq,M9,Pq,Na,Pq,pc,Pq,pw,Pq,Nb,Pq,qj,Pq,vP,Pq,tv,Pq,nx,Pq,lB,Pq,o4,Pq,Nc,Pq,pE,Pq,Pq,Pq,Pq,Pq,Pq,Pq,Pq,Pq,Pq,Pq,Pq,Pq,Pq,Pq,Pq,Pq,Pq,Pq,Pq,Pq,Pq,Pq,Pq,Pq,Pq,Pq,Pq,Pq,Pq,Pq,Pq,Pq,Pq,Pq,Pq,Pq,Pq,Pq];var hG=[Pr,Pr,wx,Pr,w0,Pr,xp,Pr,xA,Pr,kc,Pr,Pr,Pr,Pr,Pr];var hH=[Ps,Ps,Nd,Ps,Ne,Ps,Nf,Ps,Ng,Ps,Nh,Ps,Ni,Ps,h2,Ps];var hI=[Pt,Pt,I2,Pt,Jc,Pt,IX,Pt,Ja,Pt,Jn,Pt,I3,Pt,Jl,Pt,IW,Pt,Pt,Pt,Pt,Pt,Pt,Pt,Pt,Pt,Pt,Pt,Pt,Pt,Pt,Pt];var hJ=[Pu,Pu,pY,Pu,km,Pu,Pu,Pu];var hK=[Pv,Pv,lX,Pv,mm,Pv,Pv,Pv];var hL=[Pw,Pw,sO,Pw,sR,Pw,Pw,Pw];var hM=[Px,Px,Nj,Px,Nk,Px,Nl,Px,oO,Px,sx,Px,lW,Px,Nm,Px,n2,Px,oc,Px,Nn,Px,kb,Px,o_,Px,No,Px,r0,Px,je,Px,n5,Px,mT,Px,iy,Px,ng,Px,Np,Px,qa,Px,Nq,Px,mt,Px,Az,Px,iY,Px,oX,Px,Nr,Px,Ns,Px,nG,Px,Nt,Px,Nu,Px,Nv,Px,Nw,Px,sv,Px,lT,Px,KD,Px,KE,Px,Nx,Px,x3,Px,os,Px,Ny,Px,to,Px,Nz,Px,NA,Px,NB,Px,oi,Px,wa,Px,mO,Px,NC,Px,tu,Px,nC,Px,ND,Px,v3,Px,KC,Px,NE,Px,NF,Px,rE,Px,NG,Px,kl,Px,mo,Px,md,Px,l4,Px,NH,Px,lO,Px,AI,Px,Ec,Px,E9,Px,o8,Px,vj,Px,Eq,Px,oR,Px,jn,Px,Ai,Px,p6,Px,yy,Px,NI,Px,kp,Px,nd,Px,NJ,Px,nH,Px,E4,Px,ok,Px,v5,Px,lE,Px,sc,Px,ml,Px,lY,Px,si,Px,o6,Px,jA,Px,su,Px,yu,Px,mi,Px,Px,Px,Px,Px,Px,Px,Px,Px,Px,Px,Px,Px,Px,Px,Px,Px,Px,Px,Px,Px,Px,Px,Px,Px,Px,Px,Px,Px,Px,Px,Px,Px,Px,Px,Px,Px,Px,Px,Px,Px,Px,Px,Px,Px,Px,Px,Px,Px,Px,Px,Px,Px,Px,Px,Px,Px,Px,Px,Px,Px,Px,Px,Px,Px,Px,Px,Px,Px];return{__GLOBAL__I_a1039:z2,_memcmp:K4,_strlen:K0,__GLOBAL__I_a:iG,_free:KN,_main:h3,_testSetjmp:K7,_memmove:K3,_realloc:KP,_saveSetjmp:K6,_memset:K1,_malloc:KM,_memcpy:K2,__GLOBAL__I_a812:va,__GLOBAL__I_a376:lb,_llvm_uadd_with_overflow_i64:K5,_calloc:KO,__GLOBAL__I_a1878:Dk,runPostSets:h1,stackAlloc:hN,stackSave:hO,stackRestore:hP,setThrew:hQ,setTempRet0:hT,setTempRet1:hU,setTempRet2:hV,setTempRet3:hW,setTempRet4:hX,setTempRet5:hY,setTempRet6:hZ,setTempRet7:h_,setTempRet8:h$,setTempRet9:h0,dynCall_iiiiiiii:NS,dynCall_vif:NT,dynCall_viifii:NU,dynCall_viiiifffffif:NV,dynCall_vi:NW,dynCall_vii:NX,dynCall_iiiiiii:NY,dynCall_viiiif:NZ,dynCall_ii:N_,dynCall_viiiiiid:N$,dynCall_viiiiffffiif:N0,dynCall_fi:N1,dynCall_viiiii:N2,dynCall_viffff:N3,dynCall_viffiii:N4,dynCall_viiif:N5,dynCall_fiiiiiiiiiii:N6,dynCall_fiifii:N7,dynCall_iiii:N8,dynCall_fif:N9,dynCall_viiiiid:Oa,dynCall_viff:Ob,dynCall_vifi:Oc,dynCall_viiiiif:Od,dynCall_vifff:Oe,dynCall_viiiiii:Of,dynCall_iiiiiiiiii:Og,dynCall_viiiiiiii:Oh,dynCall_fiii:Oi,dynCall_viiifii:Oj,dynCall_fiiiiiiiiii:Ok,dynCall_fiiiii:Ol,dynCall_viiiiiii:Om,dynCall_viiiiiiiif:On,dynCall_iiiiiiiiiiii:Oo,dynCall_vifii:Op,dynCall_viiiiiiiii:Oq,dynCall_viiiiiiiiii:Or,dynCall_iii:Os,dynCall_iiiiii:Ot,dynCall_viiiiiffii:Ou,dynCall_fiiiiiiii:Ov,dynCall_iifif:Ow,dynCall_fiiii:Ox,dynCall_iiiii:Oy,dynCall_i:Oz,dynCall_viii:OA,dynCall_viifi:OB,dynCall_v:OC,dynCall_iiiiiiiii:OD,dynCall_viif:OE,dynCall_iiif:OF,dynCall_fiiifii:OG,dynCall_viiii:OH}})
// EMSCRIPTEN_END_ASM
({ "Math": Math, "Int8Array": Int8Array, "Int16Array": Int16Array, "Int32Array": Int32Array, "Uint8Array": Uint8Array, "Uint16Array": Uint16Array, "Uint32Array": Uint32Array, "Float32Array": Float32Array, "Float64Array": Float64Array }, { "abort": abort, "assert": assert, "asmPrintInt": asmPrintInt, "asmPrintFloat": asmPrintFloat, "min": Math_min, "invoke_iiiiiiii": invoke_iiiiiiii, "invoke_vif": invoke_vif, "invoke_viifii": invoke_viifii, "invoke_viiiifffffif": invoke_viiiifffffif, "invoke_vi": invoke_vi, "invoke_vii": invoke_vii, "invoke_iiiiiii": invoke_iiiiiii, "invoke_viiiif": invoke_viiiif, "invoke_ii": invoke_ii, "invoke_viiiiiid": invoke_viiiiiid, "invoke_viiiiffffiif": invoke_viiiiffffiif, "invoke_fi": invoke_fi, "invoke_viiiii": invoke_viiiii, "invoke_viffff": invoke_viffff, "invoke_viffiii": invoke_viffiii, "invoke_viiif": invoke_viiif, "invoke_fiiiiiiiiiii": invoke_fiiiiiiiiiii, "invoke_fiifii": invoke_fiifii, "invoke_iiii": invoke_iiii, "invoke_fif": invoke_fif, "invoke_viiiiid": invoke_viiiiid, "invoke_viff": invoke_viff, "invoke_vifi": invoke_vifi, "invoke_viiiiif": invoke_viiiiif, "invoke_vifff": invoke_vifff, "invoke_viiiiii": invoke_viiiiii, "invoke_iiiiiiiiii": invoke_iiiiiiiiii, "invoke_viiiiiiii": invoke_viiiiiiii, "invoke_fiii": invoke_fiii, "invoke_viiifii": invoke_viiifii, "invoke_fiiiiiiiiii": invoke_fiiiiiiiiii, "invoke_fiiiii": invoke_fiiiii, "invoke_viiiiiii": invoke_viiiiiii, "invoke_viiiiiiiif": invoke_viiiiiiiif, "invoke_iiiiiiiiiiii": invoke_iiiiiiiiiiii, "invoke_vifii": invoke_vifii, "invoke_viiiiiiiii": invoke_viiiiiiiii, "invoke_viiiiiiiiii": invoke_viiiiiiiiii, "invoke_iii": invoke_iii, "invoke_iiiiii": invoke_iiiiii, "invoke_viiiiiffii": invoke_viiiiiffii, "invoke_fiiiiiiii": invoke_fiiiiiiii, "invoke_iifif": invoke_iifif, "invoke_fiiii": invoke_fiiii, "invoke_iiiii": invoke_iiiii, "invoke_i": invoke_i, "invoke_viii": invoke_viii, "invoke_viifi": invoke_viifi, "invoke_v": invoke_v, "invoke_iiiiiiiii": invoke_iiiiiiiii, "invoke_viif": invoke_viif, "invoke_iiif": invoke_iiif, "invoke_fiiifii": invoke_fiiifii, "invoke_viiii": invoke_viiii, "__scanString": __scanString, "_fclose": _fclose, "_glStencilMaskSeparate": _glStencilMaskSeparate, "_pthread_mutex_lock": _pthread_mutex_lock, "___cxa_end_catch": ___cxa_end_catch, "_acosf": _acosf, "_isxdigit": _isxdigit, "_glVertex2fv": _glVertex2fv, "_glFramebufferRenderbuffer": _glFramebufferRenderbuffer, "_send": _send, "_glLineWidth": _glLineWidth, "_glCompileShader": _glCompileShader, "_isspace": _isspace, "_glGetObjectParameteriv": _glGetObjectParameteriv, "_glFogiv": _glFogiv, "_glDepthRangef": _glDepthRangef, "_glFogfv": _glFogfv, "___resumeException": ___resumeException, "_glCreateShader": _glCreateShader, "_glIsBuffer": _glIsBuffer, "_glGenRenderbuffers": _glGenRenderbuffers, "_cosf": _cosf, "_glCompressedTexImage2D": _glCompressedTexImage2D, "_glVertexAttrib1f": _glVertexAttrib1f, "_glBlendFuncSeparate": _glBlendFuncSeparate, "_glHint": _glHint, "_glTexCoord2fv": _glTexCoord2fv, "___cxa_free_exception": ___cxa_free_exception, "_glBlendEquation": _glBlendEquation, "_glDeleteProgram": _glDeleteProgram, "_glRenderbufferStorage": _glRenderbufferStorage, "_glLoadIdentity": _glLoadIdentity, "_glUniform3i": _glUniform3i, "_glColor3f": _glColor3f, "_glVertex3f": _glVertex3f, "_fmax": _fmax, "_glUniform3f": _glUniform3f, "___cxa_guard_acquire": ___cxa_guard_acquire, "_glGetBufferParameteriv": _glGetBufferParameteriv, "_glGetString": _glGetString, "_sinf": _sinf, "_glGenVertexArrays": _glGenVertexArrays, "_llvm_stacksave": _llvm_stacksave, "_glNormalPointer": _glNormalPointer, "_glFogi": _glFogi, "_glBegin": _glBegin, "_glColor3ubv": _glColor3ubv, "_printf": _printf, "_glVertexPointer": _glVertexPointer, "_glDeleteFramebuffers": _glDeleteFramebuffers, "_glDrawArrays": _glDrawArrays, "_llvm_pow_f32": _llvm_pow_f32, "__arraySum": __arraySum, "_glLightfv": _glLightfv, "_glClear": _glClear, "_gluProject": _gluProject, "__parseInt64": __parseInt64, "_glIsEnabled": _glIsEnabled, "_glStencilOp": _glStencilOp, "_SDL_GetError": _SDL_GetError, "_glFramebufferTexture2D": _glFramebufferTexture2D, "_glGetFramebufferAttachmentParameteriv": _glGetFramebufferAttachmentParameteriv, "_glTranslated": _glTranslated, "_glTexImage1D": _glTexImage1D, "_pthread_cond_broadcast": _pthread_cond_broadcast, "__ZSt9terminatev": __ZSt9terminatev, "_gettimeofday": _gettimeofday, "_glTexParameteriv": _glTexParameteriv, "_glGetShaderInfoLog": _glGetShaderInfoLog, "_glGenFramebuffers": _glGenFramebuffers, "___errno_location": ___errno_location, "_strerror": _strerror, "_glGetAttachedShaders": _glGetAttachedShaders, "_catclose": _catclose, "_glIsRenderbuffer": _glIsRenderbuffer, "_glDeleteVertexArrays": _glDeleteVertexArrays, "_fprintf": _fprintf, "_glIsVertexArray": _glIsVertexArray, "_glDisableVertexAttribArray": _glDisableVertexAttribArray, "_glTexCoord4f": _glTexCoord4f, "_sysconf": _sysconf, "_abort": _abort, "_glIsShader": _glIsShader, "_strtoll": _strtoll, "_glDisable": _glDisable, "_glEnable": _glEnable, "_glColor4fv": _glColor4fv, "_write": _write, "_glGetAttribLocation": _glGetAttribLocation, "_sin": _sin, "___cxa_pure_virtual": ___cxa_pure_virtual, "_vasprintf": _vasprintf, "_emscripten_set_main_loop": _emscripten_set_main_loop, "_glGetPointerv": _glGetPointerv, "_glGetUniformfv": _glGetUniformfv, "_gluOrtho2D": _gluOrtho2D, "_acos": _acos, "_glDepthRange": _glDepthRange, "_glFrustum": _glFrustum, "_pwrite": _pwrite, "_strerror_r": _strerror_r, "_glDrawBuffer": _glDrawBuffer, "_glPushMatrix": _glPushMatrix, "_glOrtho": _glOrtho, "_glDrawElementsInstanced": _glDrawElementsInstanced, "_glFlush": _glFlush, "_glGetRenderbufferParameteriv": _glGetRenderbufferParameteriv, "_rand": _rand, "_glGetVertexAttribPointerv": _glGetVertexAttribPointerv, "__isLeapYear": __isLeapYear, "_fwrite": _fwrite, "_gluUnProject": _gluUnProject, "_glGetTexLevelParameteriv": _glGetTexLevelParameteriv, "_glStencilFuncSeparate": _glStencilFuncSeparate, "_glUniform4iv": _glUniform4iv, "_glClearStencil": _glClearStencil, "_glGenTextures": _glGenTextures, "___cxa_rethrow": ___cxa_rethrow, "_fmod": _fmod, "_snprintf": _snprintf, "_llvm_va_end": _llvm_va_end, "_vsscanf": _vsscanf, "_glDeleteRenderbuffers": _glDeleteRenderbuffers, "_glUniform2i": _glUniform2i, "_glUniform2f": _glUniform2f, "_glGetProgramiv": _glGetProgramiv, "_glVertexAttribPointer": _glVertexAttribPointer, "_sprintf": _sprintf, "___ctype_b_loc": ___ctype_b_loc, "_atan2f": _atan2f, "_glTexEnvf": _glTexEnvf, "_catgets": _catgets, "_asprintf": _asprintf, "_ferror": _ferror, "_glCopyTexImage2D": _glCopyTexImage2D, "_glTexEnvi": _glTexEnvi, "___cxa_begin_catch": ___cxa_begin_catch, "_recv": _recv, "_glUniform2iv": _glUniform2iv, "__ZSt18uncaught_exceptionv": __ZSt18uncaught_exceptionv, "_putchar": _putchar, "_glMatrixMode": _glMatrixMode, "_glGetShaderiv": _glGetShaderiv, "_glGetActiveAttrib": _glGetActiveAttrib, "_glCopyTexSubImage2D": _glCopyTexSubImage2D, "_glPolygonOffset": _glPolygonOffset, "_SDL_SetVideoMode": _SDL_SetVideoMode, "_open": _open, "_glVertexAttrib1fv": _glVertexAttrib1fv, "_glUniform3fv": _glUniform3fv, "_glTexCoord3f": _glTexCoord3f, "_glGetVertexAttribiv": _glGetVertexAttribiv, "_isascii": _isascii, "_glVertexAttrib3fv": _glVertexAttrib3fv, "_glUniform3iv": _glUniform3iv, "_glPolygonMode": _glPolygonMode, "_llvm_pow_f64": _llvm_pow_f64, "_llvm_bswap_i32": _llvm_bswap_i32, "___cxa_guard_release": ___cxa_guard_release, "_vsnprintf": _vsnprintf, "_glUseProgram": _glUseProgram, "___assert_fail": ___assert_fail, "_glBindVertexArray": _glBindVertexArray, "_glColor4f": _glColor4f, "__addDays": __addDays, "_fseek": _fseek, "_glFinish": _glFinish, "_gluLookAt": _gluLookAt, "_glDeleteShader": _glDeleteShader, "_glCullFace": _glCullFace, "_glViewport": _glViewport, "_catopen": _catopen, "_glClearDepth": _glClearDepth, "_glTexParameterf": _glTexParameterf, "_glTexParameteri": _glTexParameteri, "_glGetShaderSource": _glGetShaderSource, "_llvm_trap": _llvm_trap, "_glValidateProgram": _glValidateProgram, "_glBindProgram": _glBindProgram, "_glColor4ub": _glColor4ub, "_lseek": _lseek, "_glColor4ui": _glColor4ui, "_glColor4us": _glColor4us, "_glLinkProgram": _glLinkProgram, "_strtoull": _strtoull, "_glBindTexture": _glBindTexture, "_fputc": _fputc, "_SDL_GL_GetProcAddress": _SDL_GL_GetProcAddress, "_glDetachShader": _glDetachShader, "_glScaled": _glScaled, "_fputs": _fputs, "_glColorMask": _glColorMask, "_glDeleteTextures": _glDeleteTextures, "_glStencilOpSeparate": _glStencilOpSeparate, "_glVertexAttrib4f": _glVertexAttrib4f, "_glGetTexParameteriv": _glGetTexParameteriv, "_glSampleCoverage": _glSampleCoverage, "_pthread_cond_wait": _pthread_cond_wait, "_glUniform1f": _glUniform1f, "_glGetVertexAttribfv": _glGetVertexAttribfv, "_glUniform1i": _glUniform1i, "_strncmp": _strncmp, "_glTexSubImage2D": _glTexSubImage2D, "_glGetUniformiv": _glGetUniformiv, "_atexit": _atexit, "_close": _close, "_glBindFramebuffer": _glBindFramebuffer, "_strchr": _strchr, "___setErrNo": ___setErrNo, "_glTexGeni": _glTexGeni, "_emscripten_GetProcAddress": _emscripten_GetProcAddress, "_eglGetProcAddress": _eglGetProcAddress, "_freelocale": _freelocale, "_glAttachShader": _glAttachShader, "_glShaderBinary": _glShaderBinary, "___cxa_is_number_type": ___cxa_is_number_type, "___cxa_does_inherit": ___cxa_does_inherit, "_emscripten_get_canvas_size": _emscripten_get_canvas_size, "_glDrawElements": _glDrawElements, "_glClientActiveTexture": _glClientActiveTexture, "_SDL_GL_SwapBuffers": _SDL_GL_SwapBuffers, "_glUniform1iv": _glUniform1iv, "_glTexEnvfv": _glTexEnvfv, "_glReadBuffer": _glReadBuffer, "_glDrawArraysInstanced": _glDrawArraysInstanced, "_glGenerateMipmap": _glGenerateMipmap, "_glLightModelfv": _glLightModelfv, "_strftime": _strftime, "_glVertexAttrib3f": _glVertexAttrib3f, "_glPopMatrix": _glPopMatrix, "_glBlendColor": _glBlendColor, "_fabsf": _fabsf, "___cxa_throw": ___cxa_throw, "_glTexCoord2i": _glTexCoord2i, "_glBindRenderbuffer": _glBindRenderbuffer, "_glVertex3fv": _glVertex3fv, "_glIsProgram": _glIsProgram, "_SDL_GL_SetAttribute": _SDL_GL_SetAttribute, "_glGetProgramInfoLog": _glGetProgramInfoLog, "_puts": _puts, "_glVertexAttrib4fv": _glVertexAttrib4fv, "_glReleaseShaderCompiler": _glReleaseShaderCompiler, "_glUniform4i": _glUniform4i, "_llvm_umul_with_overflow_i32": _llvm_umul_with_overflow_i32, "_glEnableVertexAttribArray": _glEnableVertexAttribArray, "_glRotated": _glRotated, "___cxa_find_matching_catch": ___cxa_find_matching_catch, "_glReadPixels": _glReadPixels, "_glUniform4f": _glUniform4f, "_glShadeModel": _glShadeModel, "_glUniformMatrix3fv": _glUniformMatrix3fv, "__formatString": __formatString, "_cos": _cos, "_glAlphaFunc": _glAlphaFunc, "_emscripten_procAddressTable": _emscripten_procAddressTable, "_glGetInfoLog": _glGetInfoLog, "_glStencilFunc": _glStencilFunc, "_glTexCoordPointer": _glTexCoordPointer, "_glColor4ubv": _glColor4ubv, "_glLoadTransposeMatrixd": _glLoadTransposeMatrixd, "_glLoadTransposeMatrixf": _glLoadTransposeMatrixf, "_glDeleteObject": _glDeleteObject, "_glBlendEquationSeparate": _glBlendEquationSeparate, "_glGenBuffers": _glGenBuffers, "_glBlendFunc": _glBlendFunc, "_glCreateProgram": _glCreateProgram, "_longjmp": _longjmp, "_glIsFramebuffer": _glIsFramebuffer, "___ctype_tolower_loc": ___ctype_tolower_loc, "_glTexGenfv": _glTexGenfv, "_glEnd": _glEnd, "_glDeleteBuffers": _glDeleteBuffers, "_glScissor": _glScissor, "_glGetBooleanv": _glGetBooleanv, "_glMaterialfv": _glMaterialfv, "_llvm_lifetime_end": _llvm_lifetime_end, "_glMultTransposeMatrixf": _glMultTransposeMatrixf, "_glMultTransposeMatrixd": _glMultTransposeMatrixd, "_glClearColor": _glClearColor, "_fflush": _fflush, "_llvm_stackrestore": _llvm_stackrestore, "_llvm_eh_exception": _llvm_eh_exception, "_glUniform2fv": _glUniform2fv, "_read": _read, "_glClearDepthf": _glClearDepthf, "_glNormal3f": _glNormal3f, "_glColor3uiv": _glColor3uiv, "_glColor3us": _glColor3us, "_strstr": _strstr, "_fsync": _fsync, "___cxa_guard_abort": ___cxa_guard_abort, "_newlocale": _newlocale, "___gxx_personality_v0": ___gxx_personality_v0, "_glCompressedTexSubImage2D": _glCompressedTexSubImage2D, "_glColor3ub": _glColor3ub, "_glGetTexParameterfv": _glGetTexParameterfv, "_glColor3ui": _glColor3ui, "_strcmp": _strcmp, "_fgetc": _fgetc, "_glDepthFunc": _glDepthFunc, "__getFloat": __getFloat, "_pread": _pread, "_glGetUniformLocation": _glGetUniformLocation, "_glUniform4fv": _glUniform4fv, "_glFogf": _glFogf, "_ftell": _ftell, "_exit": _exit, "_glVertexAttribDivisor": _glVertexAttribDivisor, "_glCheckFramebufferStatus": _glCheckFramebufferStatus, "_glEnableClientState": _glEnableClientState, "_glBindAttribLocation": _glBindAttribLocation, "_glVertexAttrib2f": _glVertexAttrib2f, "_glDrawRangeElements": _glDrawRangeElements, "_glBufferSubData": _glBufferSubData, "___cxa_call_unexpected": ___cxa_call_unexpected, "_SDL_Init": _SDL_Init, "_fmin": _fmin, "__exit": __exit, "_glColor3usv": _glColor3usv, "_glGetShaderPrecisionFormat": _glGetShaderPrecisionFormat, "_glShaderSource": _glShaderSource, "_fopen": _fopen, "_sqrtf": _sqrtf, "_SDL_PollEvent": _SDL_PollEvent, "_glActiveTexture": _glActiveTexture, "_glBindBuffer": _glBindBuffer, "_glUniformMatrix2fv": _glUniformMatrix2fv, "_glBufferData": _glBufferData, "_glGetError": _glGetError, "_pthread_mutex_unlock": _pthread_mutex_unlock, "_glGetFloatv": _glGetFloatv, "_glVertexAttrib2fv": _glVertexAttrib2fv, "_sbrk": _sbrk, "_glGetIntegerv": _glGetIntegerv, "_llvm_lifetime_start": _llvm_lifetime_start, "_ungetc": _ungetc, "_uselocale": _uselocale, "_sscanf": _sscanf, "_glTexImage2D": _glTexImage2D, "_glStencilMask": _glStencilMask, "_fread": _fread, "_glMultMatrixd": _glMultMatrixd, "_glMultMatrixf": _glMultMatrixf, "_glIsTexture": _glIsTexture, "_glUniform1fv": _glUniform1fv, "_glLoadMatrixf": _glLoadMatrixf, "_gluPerspective": _gluPerspective, "_glLoadMatrixd": _glLoadMatrixd, "_isdigit": _isdigit, "__reallyNegative": __reallyNegative, "_glTexParameterfv": _glTexParameterfv, "_floor": _floor, "___cxa_allocate_exception": ___cxa_allocate_exception, "_glPixelStorei": _glPixelStorei, "_asinf": _asinf, "___ctype_toupper_loc": ___ctype_toupper_loc, "_glDisableClientState": _glDisableClientState, "_glDepthMask": _glDepthMask, "_glColor3fv": _glColor3fv, "_glUniformMatrix4fv": _glUniformMatrix4fv, "_glGetActiveUniform": _glGetActiveUniform, "_glColorPointer": _glColorPointer, "_glFrontFace": _glFrontFace, "_llvm_bswap_i16": _llvm_bswap_i16, "_time": _time, "STACKTOP": STACKTOP, "STACK_MAX": STACK_MAX, "tempDoublePtr": tempDoublePtr, "ABORT": ABORT, "cttz_i8": cttz_i8, "ctlz_i8": ctlz_i8, "NaN": NaN, "Infinity": Infinity, "__ZTVN10__cxxabiv117__class_type_infoE": __ZTVN10__cxxabiv117__class_type_infoE, "_stdout": _stdout, "___dso_handle": ___dso_handle, "_stdin": _stdin, "__ZTVN10__cxxabiv120__si_class_type_infoE": __ZTVN10__cxxabiv120__si_class_type_infoE, "_stderr": _stderr, "___fsmu8": ___fsmu8 }, buffer);
var __GLOBAL__I_a1039 = Module["__GLOBAL__I_a1039"] = asm["__GLOBAL__I_a1039"];
var _memcmp = Module["_memcmp"] = asm["_memcmp"];
var _strlen = Module["_strlen"] = asm["_strlen"];
var __GLOBAL__I_a = Module["__GLOBAL__I_a"] = asm["__GLOBAL__I_a"];
var _free = Module["_free"] = asm["_free"];
var _main = Module["_main"] = asm["_main"];
var _testSetjmp = Module["_testSetjmp"] = asm["_testSetjmp"];
var _memmove = Module["_memmove"] = asm["_memmove"];
var _realloc = Module["_realloc"] = asm["_realloc"];
var _saveSetjmp = Module["_saveSetjmp"] = asm["_saveSetjmp"];
var _memset = Module["_memset"] = asm["_memset"];
var _malloc = Module["_malloc"] = asm["_malloc"];
var _memcpy = Module["_memcpy"] = asm["_memcpy"];
var __GLOBAL__I_a812 = Module["__GLOBAL__I_a812"] = asm["__GLOBAL__I_a812"];
var __GLOBAL__I_a376 = Module["__GLOBAL__I_a376"] = asm["__GLOBAL__I_a376"];
var _llvm_uadd_with_overflow_i64 = Module["_llvm_uadd_with_overflow_i64"] = asm["_llvm_uadd_with_overflow_i64"];
var _calloc = Module["_calloc"] = asm["_calloc"];
var __GLOBAL__I_a1878 = Module["__GLOBAL__I_a1878"] = asm["__GLOBAL__I_a1878"];
var runPostSets = Module["runPostSets"] = asm["runPostSets"];
var dynCall_iiiiiiii = Module["dynCall_iiiiiiii"] = asm["dynCall_iiiiiiii"];
var dynCall_vif = Module["dynCall_vif"] = asm["dynCall_vif"];
var dynCall_viifii = Module["dynCall_viifii"] = asm["dynCall_viifii"];
var dynCall_viiiifffffif = Module["dynCall_viiiifffffif"] = asm["dynCall_viiiifffffif"];
var dynCall_vi = Module["dynCall_vi"] = asm["dynCall_vi"];
var dynCall_vii = Module["dynCall_vii"] = asm["dynCall_vii"];
var dynCall_iiiiiii = Module["dynCall_iiiiiii"] = asm["dynCall_iiiiiii"];
var dynCall_viiiif = Module["dynCall_viiiif"] = asm["dynCall_viiiif"];
var dynCall_ii = Module["dynCall_ii"] = asm["dynCall_ii"];
var dynCall_viiiiiid = Module["dynCall_viiiiiid"] = asm["dynCall_viiiiiid"];
var dynCall_viiiiffffiif = Module["dynCall_viiiiffffiif"] = asm["dynCall_viiiiffffiif"];
var dynCall_fi = Module["dynCall_fi"] = asm["dynCall_fi"];
var dynCall_viiiii = Module["dynCall_viiiii"] = asm["dynCall_viiiii"];
var dynCall_viffff = Module["dynCall_viffff"] = asm["dynCall_viffff"];
var dynCall_viffiii = Module["dynCall_viffiii"] = asm["dynCall_viffiii"];
var dynCall_viiif = Module["dynCall_viiif"] = asm["dynCall_viiif"];
var dynCall_fiiiiiiiiiii = Module["dynCall_fiiiiiiiiiii"] = asm["dynCall_fiiiiiiiiiii"];
var dynCall_fiifii = Module["dynCall_fiifii"] = asm["dynCall_fiifii"];
var dynCall_iiii = Module["dynCall_iiii"] = asm["dynCall_iiii"];
var dynCall_fif = Module["dynCall_fif"] = asm["dynCall_fif"];
var dynCall_viiiiid = Module["dynCall_viiiiid"] = asm["dynCall_viiiiid"];
var dynCall_viff = Module["dynCall_viff"] = asm["dynCall_viff"];
var dynCall_vifi = Module["dynCall_vifi"] = asm["dynCall_vifi"];
var dynCall_viiiiif = Module["dynCall_viiiiif"] = asm["dynCall_viiiiif"];
var dynCall_vifff = Module["dynCall_vifff"] = asm["dynCall_vifff"];
var dynCall_viiiiii = Module["dynCall_viiiiii"] = asm["dynCall_viiiiii"];
var dynCall_iiiiiiiiii = Module["dynCall_iiiiiiiiii"] = asm["dynCall_iiiiiiiiii"];
var dynCall_viiiiiiii = Module["dynCall_viiiiiiii"] = asm["dynCall_viiiiiiii"];
var dynCall_fiii = Module["dynCall_fiii"] = asm["dynCall_fiii"];
var dynCall_viiifii = Module["dynCall_viiifii"] = asm["dynCall_viiifii"];
var dynCall_fiiiiiiiiii = Module["dynCall_fiiiiiiiiii"] = asm["dynCall_fiiiiiiiiii"];
var dynCall_fiiiii = Module["dynCall_fiiiii"] = asm["dynCall_fiiiii"];
var dynCall_viiiiiii = Module["dynCall_viiiiiii"] = asm["dynCall_viiiiiii"];
var dynCall_viiiiiiiif = Module["dynCall_viiiiiiiif"] = asm["dynCall_viiiiiiiif"];
var dynCall_iiiiiiiiiiii = Module["dynCall_iiiiiiiiiiii"] = asm["dynCall_iiiiiiiiiiii"];
var dynCall_vifii = Module["dynCall_vifii"] = asm["dynCall_vifii"];
var dynCall_viiiiiiiii = Module["dynCall_viiiiiiiii"] = asm["dynCall_viiiiiiiii"];
var dynCall_viiiiiiiiii = Module["dynCall_viiiiiiiiii"] = asm["dynCall_viiiiiiiiii"];
var dynCall_iii = Module["dynCall_iii"] = asm["dynCall_iii"];
var dynCall_iiiiii = Module["dynCall_iiiiii"] = asm["dynCall_iiiiii"];
var dynCall_viiiiiffii = Module["dynCall_viiiiiffii"] = asm["dynCall_viiiiiffii"];
var dynCall_fiiiiiiii = Module["dynCall_fiiiiiiii"] = asm["dynCall_fiiiiiiii"];
var dynCall_iifif = Module["dynCall_iifif"] = asm["dynCall_iifif"];
var dynCall_fiiii = Module["dynCall_fiiii"] = asm["dynCall_fiiii"];
var dynCall_iiiii = Module["dynCall_iiiii"] = asm["dynCall_iiiii"];
var dynCall_i = Module["dynCall_i"] = asm["dynCall_i"];
var dynCall_viii = Module["dynCall_viii"] = asm["dynCall_viii"];
var dynCall_viifi = Module["dynCall_viifi"] = asm["dynCall_viifi"];
var dynCall_v = Module["dynCall_v"] = asm["dynCall_v"];
var dynCall_iiiiiiiii = Module["dynCall_iiiiiiiii"] = asm["dynCall_iiiiiiiii"];
var dynCall_viif = Module["dynCall_viif"] = asm["dynCall_viif"];
var dynCall_iiif = Module["dynCall_iiif"] = asm["dynCall_iiif"];
var dynCall_fiiifii = Module["dynCall_fiiifii"] = asm["dynCall_fiiifii"];
var dynCall_viiii = Module["dynCall_viiii"] = asm["dynCall_viiii"];
Runtime.stackAlloc = function(size) { return asm['stackAlloc'](size) };
Runtime.stackSave = function() { return asm['stackSave']() };
Runtime.stackRestore = function(top) { asm['stackRestore'](top) };
// TODO: strip out parts of this we do not need
//======= begin closure i64 code =======
// Copyright 2009 The Closure Library Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
/**
 * @fileoverview Defines a Long class for representing a 64-bit two's-complement
 * integer value, which faithfully simulates the behavior of a Java "long". This
 * implementation is derived from LongLib in GWT.
 *
 */
var i64Math = (function() { // Emscripten wrapper
  var goog = { math: {} };
  /**
   * Constructs a 64-bit two's-complement integer, given its low and high 32-bit
   * values as *signed* integers.  See the from* functions below for more
   * convenient ways of constructing Longs.
   *
   * The internal representation of a long is the two given signed, 32-bit values.
   * We use 32-bit pieces because these are the size of integers on which
   * Javascript performs bit-operations.  For operations like addition and
   * multiplication, we split each number into 16-bit pieces, which can easily be
   * multiplied within Javascript's floating-point representation without overflow
   * or change in sign.
   *
   * In the algorithms below, we frequently reduce the negative case to the
   * positive case by negating the input(s) and then post-processing the result.
   * Note that we must ALWAYS check specially whether those values are MIN_VALUE
   * (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as
   * a positive number, it overflows back into a negative).  Not handling this
   * case would often result in infinite recursion.
   *
   * @param {number} low  The low (signed) 32 bits of the long.
   * @param {number} high  The high (signed) 32 bits of the long.
   * @constructor
   */
  goog.math.Long = function(low, high) {
    /**
     * @type {number}
     * @private
     */
    this.low_ = low | 0;  // force into 32 signed bits.
    /**
     * @type {number}
     * @private
     */
    this.high_ = high | 0;  // force into 32 signed bits.
  };
  // NOTE: Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the
  // from* methods on which they depend.
  /**
   * A cache of the Long representations of small integer values.
   * @type {!Object}
   * @private
   */
  goog.math.Long.IntCache_ = {};
  /**
   * Returns a Long representing the given (32-bit) integer value.
   * @param {number} value The 32-bit integer in question.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromInt = function(value) {
    if (-128 <= value && value < 128) {
      var cachedObj = goog.math.Long.IntCache_[value];
      if (cachedObj) {
        return cachedObj;
      }
    }
    var obj = new goog.math.Long(value | 0, value < 0 ? -1 : 0);
    if (-128 <= value && value < 128) {
      goog.math.Long.IntCache_[value] = obj;
    }
    return obj;
  };
  /**
   * Returns a Long representing the given value, provided that it is a finite
   * number.  Otherwise, zero is returned.
   * @param {number} value The number in question.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromNumber = function(value) {
    if (isNaN(value) || !isFinite(value)) {
      return goog.math.Long.ZERO;
    } else if (value <= -goog.math.Long.TWO_PWR_63_DBL_) {
      return goog.math.Long.MIN_VALUE;
    } else if (value + 1 >= goog.math.Long.TWO_PWR_63_DBL_) {
      return goog.math.Long.MAX_VALUE;
    } else if (value < 0) {
      return goog.math.Long.fromNumber(-value).negate();
    } else {
      return new goog.math.Long(
          (value % goog.math.Long.TWO_PWR_32_DBL_) | 0,
          (value / goog.math.Long.TWO_PWR_32_DBL_) | 0);
    }
  };
  /**
   * Returns a Long representing the 64-bit integer that comes by concatenating
   * the given high and low bits.  Each is assumed to use 32 bits.
   * @param {number} lowBits The low 32-bits.
   * @param {number} highBits The high 32-bits.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromBits = function(lowBits, highBits) {
    return new goog.math.Long(lowBits, highBits);
  };
  /**
   * Returns a Long representation of the given string, written using the given
   * radix.
   * @param {string} str The textual representation of the Long.
   * @param {number=} opt_radix The radix in which the text is written.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromString = function(str, opt_radix) {
    if (str.length == 0) {
      throw Error('number format error: empty string');
    }
    var radix = opt_radix || 10;
    if (radix < 2 || 36 < radix) {
      throw Error('radix out of range: ' + radix);
    }
    if (str.charAt(0) == '-') {
      return goog.math.Long.fromString(str.substring(1), radix).negate();
    } else if (str.indexOf('-') >= 0) {
      throw Error('number format error: interior "-" character: ' + str);
    }
    // Do several (8) digits each time through the loop, so as to
    // minimize the calls to the very expensive emulated div.
    var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 8));
    var result = goog.math.Long.ZERO;
    for (var i = 0; i < str.length; i += 8) {
      var size = Math.min(8, str.length - i);
      var value = parseInt(str.substring(i, i + size), radix);
      if (size < 8) {
        var power = goog.math.Long.fromNumber(Math.pow(radix, size));
        result = result.multiply(power).add(goog.math.Long.fromNumber(value));
      } else {
        result = result.multiply(radixToPower);
        result = result.add(goog.math.Long.fromNumber(value));
      }
    }
    return result;
  };
  // NOTE: the compiler should inline these constant values below and then remove
  // these variables, so there should be no runtime penalty for these.
  /**
   * Number used repeated below in calculations.  This must appear before the
   * first call to any from* function below.
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_16_DBL_ = 1 << 16;
  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_24_DBL_ = 1 << 24;
  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_32_DBL_ =
      goog.math.Long.TWO_PWR_16_DBL_ * goog.math.Long.TWO_PWR_16_DBL_;
  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_31_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ / 2;
  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_48_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ * goog.math.Long.TWO_PWR_16_DBL_;
  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_64_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ * goog.math.Long.TWO_PWR_32_DBL_;
  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_63_DBL_ =
      goog.math.Long.TWO_PWR_64_DBL_ / 2;
  /** @type {!goog.math.Long} */
  goog.math.Long.ZERO = goog.math.Long.fromInt(0);
  /** @type {!goog.math.Long} */
  goog.math.Long.ONE = goog.math.Long.fromInt(1);
  /** @type {!goog.math.Long} */
  goog.math.Long.NEG_ONE = goog.math.Long.fromInt(-1);
  /** @type {!goog.math.Long} */
  goog.math.Long.MAX_VALUE =
      goog.math.Long.fromBits(0xFFFFFFFF | 0, 0x7FFFFFFF | 0);
  /** @type {!goog.math.Long} */
  goog.math.Long.MIN_VALUE = goog.math.Long.fromBits(0, 0x80000000 | 0);
  /**
   * @type {!goog.math.Long}
   * @private
   */
  goog.math.Long.TWO_PWR_24_ = goog.math.Long.fromInt(1 << 24);
  /** @return {number} The value, assuming it is a 32-bit integer. */
  goog.math.Long.prototype.toInt = function() {
    return this.low_;
  };
  /** @return {number} The closest floating-point representation to this value. */
  goog.math.Long.prototype.toNumber = function() {
    return this.high_ * goog.math.Long.TWO_PWR_32_DBL_ +
           this.getLowBitsUnsigned();
  };
  /**
   * @param {number=} opt_radix The radix in which the text should be written.
   * @return {string} The textual representation of this value.
   */
  goog.math.Long.prototype.toString = function(opt_radix) {
    var radix = opt_radix || 10;
    if (radix < 2 || 36 < radix) {
      throw Error('radix out of range: ' + radix);
    }
    if (this.isZero()) {
      return '0';
    }
    if (this.isNegative()) {
      if (this.equals(goog.math.Long.MIN_VALUE)) {
        // We need to change the Long value before it can be negated, so we remove
        // the bottom-most digit in this base and then recurse to do the rest.
        var radixLong = goog.math.Long.fromNumber(radix);
        var div = this.div(radixLong);
        var rem = div.multiply(radixLong).subtract(this);
        return div.toString(radix) + rem.toInt().toString(radix);
      } else {
        return '-' + this.negate().toString(radix);
      }
    }
    // Do several (6) digits each time through the loop, so as to
    // minimize the calls to the very expensive emulated div.
    var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 6));
    var rem = this;
    var result = '';
    while (true) {
      var remDiv = rem.div(radixToPower);
      var intval = rem.subtract(remDiv.multiply(radixToPower)).toInt();
      var digits = intval.toString(radix);
      rem = remDiv;
      if (rem.isZero()) {
        return digits + result;
      } else {
        while (digits.length < 6) {
          digits = '0' + digits;
        }
        result = '' + digits + result;
      }
    }
  };
  /** @return {number} The high 32-bits as a signed value. */
  goog.math.Long.prototype.getHighBits = function() {
    return this.high_;
  };
  /** @return {number} The low 32-bits as a signed value. */
  goog.math.Long.prototype.getLowBits = function() {
    return this.low_;
  };
  /** @return {number} The low 32-bits as an unsigned value. */
  goog.math.Long.prototype.getLowBitsUnsigned = function() {
    return (this.low_ >= 0) ?
        this.low_ : goog.math.Long.TWO_PWR_32_DBL_ + this.low_;
  };
  /**
   * @return {number} Returns the number of bits needed to represent the absolute
   *     value of this Long.
   */
  goog.math.Long.prototype.getNumBitsAbs = function() {
    if (this.isNegative()) {
      if (this.equals(goog.math.Long.MIN_VALUE)) {
        return 64;
      } else {
        return this.negate().getNumBitsAbs();
      }
    } else {
      var val = this.high_ != 0 ? this.high_ : this.low_;
      for (var bit = 31; bit > 0; bit--) {
        if ((val & (1 << bit)) != 0) {
          break;
        }
      }
      return this.high_ != 0 ? bit + 33 : bit + 1;
    }
  };
  /** @return {boolean} Whether this value is zero. */
  goog.math.Long.prototype.isZero = function() {
    return this.high_ == 0 && this.low_ == 0;
  };
  /** @return {boolean} Whether this value is negative. */
  goog.math.Long.prototype.isNegative = function() {
    return this.high_ < 0;
  };
  /** @return {boolean} Whether this value is odd. */
  goog.math.Long.prototype.isOdd = function() {
    return (this.low_ & 1) == 1;
  };
  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long equals the other.
   */
  goog.math.Long.prototype.equals = function(other) {
    return (this.high_ == other.high_) && (this.low_ == other.low_);
  };
  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long does not equal the other.
   */
  goog.math.Long.prototype.notEquals = function(other) {
    return (this.high_ != other.high_) || (this.low_ != other.low_);
  };
  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is less than the other.
   */
  goog.math.Long.prototype.lessThan = function(other) {
    return this.compare(other) < 0;
  };
  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is less than or equal to the other.
   */
  goog.math.Long.prototype.lessThanOrEqual = function(other) {
    return this.compare(other) <= 0;
  };
  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is greater than the other.
   */
  goog.math.Long.prototype.greaterThan = function(other) {
    return this.compare(other) > 0;
  };
  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is greater than or equal to the other.
   */
  goog.math.Long.prototype.greaterThanOrEqual = function(other) {
    return this.compare(other) >= 0;
  };
  /**
   * Compares this Long with the given one.
   * @param {goog.math.Long} other Long to compare against.
   * @return {number} 0 if they are the same, 1 if the this is greater, and -1
   *     if the given one is greater.
   */
  goog.math.Long.prototype.compare = function(other) {
    if (this.equals(other)) {
      return 0;
    }
    var thisNeg = this.isNegative();
    var otherNeg = other.isNegative();
    if (thisNeg && !otherNeg) {
      return -1;
    }
    if (!thisNeg && otherNeg) {
      return 1;
    }
    // at this point, the signs are the same, so subtraction will not overflow
    if (this.subtract(other).isNegative()) {
      return -1;
    } else {
      return 1;
    }
  };
  /** @return {!goog.math.Long} The negation of this value. */
  goog.math.Long.prototype.negate = function() {
    if (this.equals(goog.math.Long.MIN_VALUE)) {
      return goog.math.Long.MIN_VALUE;
    } else {
      return this.not().add(goog.math.Long.ONE);
    }
  };
  /**
   * Returns the sum of this and the given Long.
   * @param {goog.math.Long} other Long to add to this one.
   * @return {!goog.math.Long} The sum of this and the given Long.
   */
  goog.math.Long.prototype.add = function(other) {
    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.
    var a48 = this.high_ >>> 16;
    var a32 = this.high_ & 0xFFFF;
    var a16 = this.low_ >>> 16;
    var a00 = this.low_ & 0xFFFF;
    var b48 = other.high_ >>> 16;
    var b32 = other.high_ & 0xFFFF;
    var b16 = other.low_ >>> 16;
    var b00 = other.low_ & 0xFFFF;
    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
    c00 += a00 + b00;
    c16 += c00 >>> 16;
    c00 &= 0xFFFF;
    c16 += a16 + b16;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c32 += a32 + b32;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c48 += a48 + b48;
    c48 &= 0xFFFF;
    return goog.math.Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32);
  };
  /**
   * Returns the difference of this and the given Long.
   * @param {goog.math.Long} other Long to subtract from this.
   * @return {!goog.math.Long} The difference of this and the given Long.
   */
  goog.math.Long.prototype.subtract = function(other) {
    return this.add(other.negate());
  };
  /**
   * Returns the product of this and the given long.
   * @param {goog.math.Long} other Long to multiply with this.
   * @return {!goog.math.Long} The product of this and the other.
   */
  goog.math.Long.prototype.multiply = function(other) {
    if (this.isZero()) {
      return goog.math.Long.ZERO;
    } else if (other.isZero()) {
      return goog.math.Long.ZERO;
    }
    if (this.equals(goog.math.Long.MIN_VALUE)) {
      return other.isOdd() ? goog.math.Long.MIN_VALUE : goog.math.Long.ZERO;
    } else if (other.equals(goog.math.Long.MIN_VALUE)) {
      return this.isOdd() ? goog.math.Long.MIN_VALUE : goog.math.Long.ZERO;
    }
    if (this.isNegative()) {
      if (other.isNegative()) {
        return this.negate().multiply(other.negate());
      } else {
        return this.negate().multiply(other).negate();
      }
    } else if (other.isNegative()) {
      return this.multiply(other.negate()).negate();
    }
    // If both longs are small, use float multiplication
    if (this.lessThan(goog.math.Long.TWO_PWR_24_) &&
        other.lessThan(goog.math.Long.TWO_PWR_24_)) {
      return goog.math.Long.fromNumber(this.toNumber() * other.toNumber());
    }
    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.
    // We can skip products that would overflow.
    var a48 = this.high_ >>> 16;
    var a32 = this.high_ & 0xFFFF;
    var a16 = this.low_ >>> 16;
    var a00 = this.low_ & 0xFFFF;
    var b48 = other.high_ >>> 16;
    var b32 = other.high_ & 0xFFFF;
    var b16 = other.low_ >>> 16;
    var b00 = other.low_ & 0xFFFF;
    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
    c00 += a00 * b00;
    c16 += c00 >>> 16;
    c00 &= 0xFFFF;
    c16 += a16 * b00;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c16 += a00 * b16;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c32 += a32 * b00;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c32 += a16 * b16;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c32 += a00 * b32;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;
    c48 &= 0xFFFF;
    return goog.math.Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32);
  };
  /**
   * Returns this Long divided by the given one.
   * @param {goog.math.Long} other Long by which to divide.
   * @return {!goog.math.Long} This Long divided by the given one.
   */
  goog.math.Long.prototype.div = function(other) {
    if (other.isZero()) {
      throw Error('division by zero');
    } else if (this.isZero()) {
      return goog.math.Long.ZERO;
    }
    if (this.equals(goog.math.Long.MIN_VALUE)) {
      if (other.equals(goog.math.Long.ONE) ||
          other.equals(goog.math.Long.NEG_ONE)) {
        return goog.math.Long.MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE
      } else if (other.equals(goog.math.Long.MIN_VALUE)) {
        return goog.math.Long.ONE;
      } else {
        // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.
        var halfThis = this.shiftRight(1);
        var approx = halfThis.div(other).shiftLeft(1);
        if (approx.equals(goog.math.Long.ZERO)) {
          return other.isNegative() ? goog.math.Long.ONE : goog.math.Long.NEG_ONE;
        } else {
          var rem = this.subtract(other.multiply(approx));
          var result = approx.add(rem.div(other));
          return result;
        }
      }
    } else if (other.equals(goog.math.Long.MIN_VALUE)) {
      return goog.math.Long.ZERO;
    }
    if (this.isNegative()) {
      if (other.isNegative()) {
        return this.negate().div(other.negate());
      } else {
        return this.negate().div(other).negate();
      }
    } else if (other.isNegative()) {
      return this.div(other.negate()).negate();
    }
    // Repeat the following until the remainder is less than other:  find a
    // floating-point that approximates remainder / other *from below*, add this
    // into the result, and subtract it from the remainder.  It is critical that
    // the approximate value is less than or equal to the real value so that the
    // remainder never becomes negative.
    var res = goog.math.Long.ZERO;
    var rem = this;
    while (rem.greaterThanOrEqual(other)) {
      // Approximate the result of division. This may be a little greater or
      // smaller than the actual value.
      var approx = Math.max(1, Math.floor(rem.toNumber() / other.toNumber()));
      // We will tweak the approximate result by changing it in the 48-th digit or
      // the smallest non-fractional digit, whichever is larger.
      var log2 = Math.ceil(Math.log(approx) / Math.LN2);
      var delta = (log2 <= 48) ? 1 : Math.pow(2, log2 - 48);
      // Decrease the approximation until it is smaller than the remainder.  Note
      // that if it is too large, the product overflows and is negative.
      var approxRes = goog.math.Long.fromNumber(approx);
      var approxRem = approxRes.multiply(other);
      while (approxRem.isNegative() || approxRem.greaterThan(rem)) {
        approx -= delta;
        approxRes = goog.math.Long.fromNumber(approx);
        approxRem = approxRes.multiply(other);
      }
      // We know the answer can't be zero... and actually, zero would cause
      // infinite recursion since we would make no progress.
      if (approxRes.isZero()) {
        approxRes = goog.math.Long.ONE;
      }
      res = res.add(approxRes);
      rem = rem.subtract(approxRem);
    }
    return res;
  };
  /**
   * Returns this Long modulo the given one.
   * @param {goog.math.Long} other Long by which to mod.
   * @return {!goog.math.Long} This Long modulo the given one.
   */
  goog.math.Long.prototype.modulo = function(other) {
    return this.subtract(this.div(other).multiply(other));
  };
  /** @return {!goog.math.Long} The bitwise-NOT of this value. */
  goog.math.Long.prototype.not = function() {
    return goog.math.Long.fromBits(~this.low_, ~this.high_);
  };
  /**
   * Returns the bitwise-AND of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to AND.
   * @return {!goog.math.Long} The bitwise-AND of this and the other.
   */
  goog.math.Long.prototype.and = function(other) {
    return goog.math.Long.fromBits(this.low_ & other.low_,
                                   this.high_ & other.high_);
  };
  /**
   * Returns the bitwise-OR of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to OR.
   * @return {!goog.math.Long} The bitwise-OR of this and the other.
   */
  goog.math.Long.prototype.or = function(other) {
    return goog.math.Long.fromBits(this.low_ | other.low_,
                                   this.high_ | other.high_);
  };
  /**
   * Returns the bitwise-XOR of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to XOR.
   * @return {!goog.math.Long} The bitwise-XOR of this and the other.
   */
  goog.math.Long.prototype.xor = function(other) {
    return goog.math.Long.fromBits(this.low_ ^ other.low_,
                                   this.high_ ^ other.high_);
  };
  /**
   * Returns this Long with bits shifted to the left by the given amount.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the left by the given amount.
   */
  goog.math.Long.prototype.shiftLeft = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var low = this.low_;
      if (numBits < 32) {
        var high = this.high_;
        return goog.math.Long.fromBits(
            low << numBits,
            (high << numBits) | (low >>> (32 - numBits)));
      } else {
        return goog.math.Long.fromBits(0, low << (numBits - 32));
      }
    }
  };
  /**
   * Returns this Long with bits shifted to the right by the given amount.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the right by the given amount.
   */
  goog.math.Long.prototype.shiftRight = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var high = this.high_;
      if (numBits < 32) {
        var low = this.low_;
        return goog.math.Long.fromBits(
            (low >>> numBits) | (high << (32 - numBits)),
            high >> numBits);
      } else {
        return goog.math.Long.fromBits(
            high >> (numBits - 32),
            high >= 0 ? 0 : -1);
      }
    }
  };
  /**
   * Returns this Long with bits shifted to the right by the given amount, with
   * the new top bits matching the current sign bit.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the right by the given amount, with
   *     zeros placed into the new leading bits.
   */
  goog.math.Long.prototype.shiftRightUnsigned = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var high = this.high_;
      if (numBits < 32) {
        var low = this.low_;
        return goog.math.Long.fromBits(
            (low >>> numBits) | (high << (32 - numBits)),
            high >>> numBits);
      } else if (numBits == 32) {
        return goog.math.Long.fromBits(high, 0);
      } else {
        return goog.math.Long.fromBits(high >>> (numBits - 32), 0);
      }
    }
  };
  //======= begin jsbn =======
  var navigator = { appName: 'Modern Browser' }; // polyfill a little
  // Copyright (c) 2005  Tom Wu
  // All Rights Reserved.
  // http://www-cs-students.stanford.edu/~tjw/jsbn/
  /*
   * Copyright (c) 2003-2005  Tom Wu
   * All Rights Reserved.
   *
   * Permission is hereby granted, free of charge, to any person obtaining
   * a copy of this software and associated documentation files (the
   * "Software"), to deal in the Software without restriction, including
   * without limitation the rights to use, copy, modify, merge, publish,
   * distribute, sublicense, and/or sell copies of the Software, and to
   * permit persons to whom the Software is furnished to do so, subject to
   * the following conditions:
   *
   * The above copyright notice and this permission notice shall be
   * included in all copies or substantial portions of the Software.
   *
   * THE SOFTWARE IS PROVIDED "AS-IS" AND WITHOUT WARRANTY OF ANY KIND, 
   * EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY 
   * WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  
   *
   * IN NO EVENT SHALL TOM WU BE LIABLE FOR ANY SPECIAL, INCIDENTAL,
   * INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND, OR ANY DAMAGES WHATSOEVER
   * RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER OR NOT ADVISED OF
   * THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF LIABILITY, ARISING OUT
   * OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
   *
   * In addition, the following condition applies:
   *
   * All redistributions must retain an intact copy of this copyright notice
   * and disclaimer.
   */
  // Basic JavaScript BN library - subset useful for RSA encryption.
  // Bits per digit
  var dbits;
  // JavaScript engine analysis
  var canary = 0xdeadbeefcafe;
  var j_lm = ((canary&0xffffff)==0xefcafe);
  // (public) Constructor
  function BigInteger(a,b,c) {
    if(a != null)
      if("number" == typeof a) this.fromNumber(a,b,c);
      else if(b == null && "string" != typeof a) this.fromString(a,256);
      else this.fromString(a,b);
  }
  // return new, unset BigInteger
  function nbi() { return new BigInteger(null); }
  // am: Compute w_j += (x*this_i), propagate carries,
  // c is initial carry, returns final carry.
  // c < 3*dvalue, x < 2*dvalue, this_i < dvalue
  // We need to select the fastest one that works in this environment.
  // am1: use a single mult and divide to get the high bits,
  // max digit bits should be 26 because
  // max internal value = 2*dvalue^2-2*dvalue (< 2^53)
  function am1(i,x,w,j,c,n) {
    while(--n >= 0) {
      var v = x*this[i++]+w[j]+c;
      c = Math.floor(v/0x4000000);
      w[j++] = v&0x3ffffff;
    }
    return c;
  }
  // am2 avoids a big mult-and-extract completely.
  // Max digit bits should be <= 30 because we do bitwise ops
  // on values up to 2*hdvalue^2-hdvalue-1 (< 2^31)
  function am2(i,x,w,j,c,n) {
    var xl = x&0x7fff, xh = x>>15;
    while(--n >= 0) {
      var l = this[i]&0x7fff;
      var h = this[i++]>>15;
      var m = xh*l+h*xl;
      l = xl*l+((m&0x7fff)<<15)+w[j]+(c&0x3fffffff);
      c = (l>>>30)+(m>>>15)+xh*h+(c>>>30);
      w[j++] = l&0x3fffffff;
    }
    return c;
  }
  // Alternately, set max digit bits to 28 since some
  // browsers slow down when dealing with 32-bit numbers.
  function am3(i,x,w,j,c,n) {
    var xl = x&0x3fff, xh = x>>14;
    while(--n >= 0) {
      var l = this[i]&0x3fff;
      var h = this[i++]>>14;
      var m = xh*l+h*xl;
      l = xl*l+((m&0x3fff)<<14)+w[j]+c;
      c = (l>>28)+(m>>14)+xh*h;
      w[j++] = l&0xfffffff;
    }
    return c;
  }
  if(j_lm && (navigator.appName == "Microsoft Internet Explorer")) {
    BigInteger.prototype.am = am2;
    dbits = 30;
  }
  else if(j_lm && (navigator.appName != "Netscape")) {
    BigInteger.prototype.am = am1;
    dbits = 26;
  }
  else { // Mozilla/Netscape seems to prefer am3
    BigInteger.prototype.am = am3;
    dbits = 28;
  }
  BigInteger.prototype.DB = dbits;
  BigInteger.prototype.DM = ((1<<dbits)-1);
  BigInteger.prototype.DV = (1<<dbits);
  var BI_FP = 52;
  BigInteger.prototype.FV = Math.pow(2,BI_FP);
  BigInteger.prototype.F1 = BI_FP-dbits;
  BigInteger.prototype.F2 = 2*dbits-BI_FP;
  // Digit conversions
  var BI_RM = "0123456789abcdefghijklmnopqrstuvwxyz";
  var BI_RC = new Array();
  var rr,vv;
  rr = "0".charCodeAt(0);
  for(vv = 0; vv <= 9; ++vv) BI_RC[rr++] = vv;
  rr = "a".charCodeAt(0);
  for(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;
  rr = "A".charCodeAt(0);
  for(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;
  function int2char(n) { return BI_RM.charAt(n); }
  function intAt(s,i) {
    var c = BI_RC[s.charCodeAt(i)];
    return (c==null)?-1:c;
  }
  // (protected) copy this to r
  function bnpCopyTo(r) {
    for(var i = this.t-1; i >= 0; --i) r[i] = this[i];
    r.t = this.t;
    r.s = this.s;
  }
  // (protected) set from integer value x, -DV <= x < DV
  function bnpFromInt(x) {
    this.t = 1;
    this.s = (x<0)?-1:0;
    if(x > 0) this[0] = x;
    else if(x < -1) this[0] = x+DV;
    else this.t = 0;
  }
  // return bigint initialized to value
  function nbv(i) { var r = nbi(); r.fromInt(i); return r; }
  // (protected) set from string and radix
  function bnpFromString(s,b) {
    var k;
    if(b == 16) k = 4;
    else if(b == 8) k = 3;
    else if(b == 256) k = 8; // byte array
    else if(b == 2) k = 1;
    else if(b == 32) k = 5;
    else if(b == 4) k = 2;
    else { this.fromRadix(s,b); return; }
    this.t = 0;
    this.s = 0;
    var i = s.length, mi = false, sh = 0;
    while(--i >= 0) {
      var x = (k==8)?s[i]&0xff:intAt(s,i);
      if(x < 0) {
        if(s.charAt(i) == "-") mi = true;
        continue;
      }
      mi = false;
      if(sh == 0)
        this[this.t++] = x;
      else if(sh+k > this.DB) {
        this[this.t-1] |= (x&((1<<(this.DB-sh))-1))<<sh;
        this[this.t++] = (x>>(this.DB-sh));
      }
      else
        this[this.t-1] |= x<<sh;
      sh += k;
      if(sh >= this.DB) sh -= this.DB;
    }
    if(k == 8 && (s[0]&0x80) != 0) {
      this.s = -1;
      if(sh > 0) this[this.t-1] |= ((1<<(this.DB-sh))-1)<<sh;
    }
    this.clamp();
    if(mi) BigInteger.ZERO.subTo(this,this);
  }
  // (protected) clamp off excess high words
  function bnpClamp() {
    var c = this.s&this.DM;
    while(this.t > 0 && this[this.t-1] == c) --this.t;
  }
  // (public) return string representation in given radix
  function bnToString(b) {
    if(this.s < 0) return "-"+this.negate().toString(b);
    var k;
    if(b == 16) k = 4;
    else if(b == 8) k = 3;
    else if(b == 2) k = 1;
    else if(b == 32) k = 5;
    else if(b == 4) k = 2;
    else return this.toRadix(b);
    var km = (1<<k)-1, d, m = false, r = "", i = this.t;
    var p = this.DB-(i*this.DB)%k;
    if(i-- > 0) {
      if(p < this.DB && (d = this[i]>>p) > 0) { m = true; r = int2char(d); }
      while(i >= 0) {
        if(p < k) {
          d = (this[i]&((1<<p)-1))<<(k-p);
          d |= this[--i]>>(p+=this.DB-k);
        }
        else {
          d = (this[i]>>(p-=k))&km;
          if(p <= 0) { p += this.DB; --i; }
        }
        if(d > 0) m = true;
        if(m) r += int2char(d);
      }
    }
    return m?r:"0";
  }
  // (public) -this
  function bnNegate() { var r = nbi(); BigInteger.ZERO.subTo(this,r); return r; }
  // (public) |this|
  function bnAbs() { return (this.s<0)?this.negate():this; }
  // (public) return + if this > a, - if this < a, 0 if equal
  function bnCompareTo(a) {
    var r = this.s-a.s;
    if(r != 0) return r;
    var i = this.t;
    r = i-a.t;
    if(r != 0) return (this.s<0)?-r:r;
    while(--i >= 0) if((r=this[i]-a[i]) != 0) return r;
    return 0;
  }
  // returns bit length of the integer x
  function nbits(x) {
    var r = 1, t;
    if((t=x>>>16) != 0) { x = t; r += 16; }
    if((t=x>>8) != 0) { x = t; r += 8; }
    if((t=x>>4) != 0) { x = t; r += 4; }
    if((t=x>>2) != 0) { x = t; r += 2; }
    if((t=x>>1) != 0) { x = t; r += 1; }
    return r;
  }
  // (public) return the number of bits in "this"
  function bnBitLength() {
    if(this.t <= 0) return 0;
    return this.DB*(this.t-1)+nbits(this[this.t-1]^(this.s&this.DM));
  }
  // (protected) r = this << n*DB
  function bnpDLShiftTo(n,r) {
    var i;
    for(i = this.t-1; i >= 0; --i) r[i+n] = this[i];
    for(i = n-1; i >= 0; --i) r[i] = 0;
    r.t = this.t+n;
    r.s = this.s;
  }
  // (protected) r = this >> n*DB
  function bnpDRShiftTo(n,r) {
    for(var i = n; i < this.t; ++i) r[i-n] = this[i];
    r.t = Math.max(this.t-n,0);
    r.s = this.s;
  }
  // (protected) r = this << n
  function bnpLShiftTo(n,r) {
    var bs = n%this.DB;
    var cbs = this.DB-bs;
    var bm = (1<<cbs)-1;
    var ds = Math.floor(n/this.DB), c = (this.s<<bs)&this.DM, i;
    for(i = this.t-1; i >= 0; --i) {
      r[i+ds+1] = (this[i]>>cbs)|c;
      c = (this[i]&bm)<<bs;
    }
    for(i = ds-1; i >= 0; --i) r[i] = 0;
    r[ds] = c;
    r.t = this.t+ds+1;
    r.s = this.s;
    r.clamp();
  }
  // (protected) r = this >> n
  function bnpRShiftTo(n,r) {
    r.s = this.s;
    var ds = Math.floor(n/this.DB);
    if(ds >= this.t) { r.t = 0; return; }
    var bs = n%this.DB;
    var cbs = this.DB-bs;
    var bm = (1<<bs)-1;
    r[0] = this[ds]>>bs;
    for(var i = ds+1; i < this.t; ++i) {
      r[i-ds-1] |= (this[i]&bm)<<cbs;
      r[i-ds] = this[i]>>bs;
    }
    if(bs > 0) r[this.t-ds-1] |= (this.s&bm)<<cbs;
    r.t = this.t-ds;
    r.clamp();
  }
  // (protected) r = this - a
  function bnpSubTo(a,r) {
    var i = 0, c = 0, m = Math.min(a.t,this.t);
    while(i < m) {
      c += this[i]-a[i];
      r[i++] = c&this.DM;
      c >>= this.DB;
    }
    if(a.t < this.t) {
      c -= a.s;
      while(i < this.t) {
        c += this[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += this.s;
    }
    else {
      c += this.s;
      while(i < a.t) {
        c -= a[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c -= a.s;
    }
    r.s = (c<0)?-1:0;
    if(c < -1) r[i++] = this.DV+c;
    else if(c > 0) r[i++] = c;
    r.t = i;
    r.clamp();
  }
  // (protected) r = this * a, r != this,a (HAC 14.12)
  // "this" should be the larger one if appropriate.
  function bnpMultiplyTo(a,r) {
    var x = this.abs(), y = a.abs();
    var i = x.t;
    r.t = i+y.t;
    while(--i >= 0) r[i] = 0;
    for(i = 0; i < y.t; ++i) r[i+x.t] = x.am(0,y[i],r,i,0,x.t);
    r.s = 0;
    r.clamp();
    if(this.s != a.s) BigInteger.ZERO.subTo(r,r);
  }
  // (protected) r = this^2, r != this (HAC 14.16)
  function bnpSquareTo(r) {
    var x = this.abs();
    var i = r.t = 2*x.t;
    while(--i >= 0) r[i] = 0;
    for(i = 0; i < x.t-1; ++i) {
      var c = x.am(i,x[i],r,2*i,0,1);
      if((r[i+x.t]+=x.am(i+1,2*x[i],r,2*i+1,c,x.t-i-1)) >= x.DV) {
        r[i+x.t] -= x.DV;
        r[i+x.t+1] = 1;
      }
    }
    if(r.t > 0) r[r.t-1] += x.am(i,x[i],r,2*i,0,1);
    r.s = 0;
    r.clamp();
  }
  // (protected) divide this by m, quotient and remainder to q, r (HAC 14.20)
  // r != q, this != m.  q or r may be null.
  function bnpDivRemTo(m,q,r) {
    var pm = m.abs();
    if(pm.t <= 0) return;
    var pt = this.abs();
    if(pt.t < pm.t) {
      if(q != null) q.fromInt(0);
      if(r != null) this.copyTo(r);
      return;
    }
    if(r == null) r = nbi();
    var y = nbi(), ts = this.s, ms = m.s;
    var nsh = this.DB-nbits(pm[pm.t-1]);	// normalize modulus
    if(nsh > 0) { pm.lShiftTo(nsh,y); pt.lShiftTo(nsh,r); }
    else { pm.copyTo(y); pt.copyTo(r); }
    var ys = y.t;
    var y0 = y[ys-1];
    if(y0 == 0) return;
    var yt = y0*(1<<this.F1)+((ys>1)?y[ys-2]>>this.F2:0);
    var d1 = this.FV/yt, d2 = (1<<this.F1)/yt, e = 1<<this.F2;
    var i = r.t, j = i-ys, t = (q==null)?nbi():q;
    y.dlShiftTo(j,t);
    if(r.compareTo(t) >= 0) {
      r[r.t++] = 1;
      r.subTo(t,r);
    }
    BigInteger.ONE.dlShiftTo(ys,t);
    t.subTo(y,y);	// "negative" y so we can replace sub with am later
    while(y.t < ys) y[y.t++] = 0;
    while(--j >= 0) {
      // Estimate quotient digit
      var qd = (r[--i]==y0)?this.DM:Math.floor(r[i]*d1+(r[i-1]+e)*d2);
      if((r[i]+=y.am(0,qd,r,j,0,ys)) < qd) {	// Try it out
        y.dlShiftTo(j,t);
        r.subTo(t,r);
        while(r[i] < --qd) r.subTo(t,r);
      }
    }
    if(q != null) {
      r.drShiftTo(ys,q);
      if(ts != ms) BigInteger.ZERO.subTo(q,q);
    }
    r.t = ys;
    r.clamp();
    if(nsh > 0) r.rShiftTo(nsh,r);	// Denormalize remainder
    if(ts < 0) BigInteger.ZERO.subTo(r,r);
  }
  // (public) this mod a
  function bnMod(a) {
    var r = nbi();
    this.abs().divRemTo(a,null,r);
    if(this.s < 0 && r.compareTo(BigInteger.ZERO) > 0) a.subTo(r,r);
    return r;
  }
  // Modular reduction using "classic" algorithm
  function Classic(m) { this.m = m; }
  function cConvert(x) {
    if(x.s < 0 || x.compareTo(this.m) >= 0) return x.mod(this.m);
    else return x;
  }
  function cRevert(x) { return x; }
  function cReduce(x) { x.divRemTo(this.m,null,x); }
  function cMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }
  function cSqrTo(x,r) { x.squareTo(r); this.reduce(r); }
  Classic.prototype.convert = cConvert;
  Classic.prototype.revert = cRevert;
  Classic.prototype.reduce = cReduce;
  Classic.prototype.mulTo = cMulTo;
  Classic.prototype.sqrTo = cSqrTo;
  // (protected) return "-1/this % 2^DB"; useful for Mont. reduction
  // justification:
  //         xy == 1 (mod m)
  //         xy =  1+km
  //   xy(2-xy) = (1+km)(1-km)
  // x[y(2-xy)] = 1-k^2m^2
  // x[y(2-xy)] == 1 (mod m^2)
  // if y is 1/x mod m, then y(2-xy) is 1/x mod m^2
  // should reduce x and y(2-xy) by m^2 at each step to keep size bounded.
  // JS multiply "overflows" differently from C/C++, so care is needed here.
  function bnpInvDigit() {
    if(this.t < 1) return 0;
    var x = this[0];
    if((x&1) == 0) return 0;
    var y = x&3;		// y == 1/x mod 2^2
    y = (y*(2-(x&0xf)*y))&0xf;	// y == 1/x mod 2^4
    y = (y*(2-(x&0xff)*y))&0xff;	// y == 1/x mod 2^8
    y = (y*(2-(((x&0xffff)*y)&0xffff)))&0xffff;	// y == 1/x mod 2^16
    // last step - calculate inverse mod DV directly;
    // assumes 16 < DB <= 32 and assumes ability to handle 48-bit ints
    y = (y*(2-x*y%this.DV))%this.DV;		// y == 1/x mod 2^dbits
    // we really want the negative inverse, and -DV < y < DV
    return (y>0)?this.DV-y:-y;
  }
  // Montgomery reduction
  function Montgomery(m) {
    this.m = m;
    this.mp = m.invDigit();
    this.mpl = this.mp&0x7fff;
    this.mph = this.mp>>15;
    this.um = (1<<(m.DB-15))-1;
    this.mt2 = 2*m.t;
  }
  // xR mod m
  function montConvert(x) {
    var r = nbi();
    x.abs().dlShiftTo(this.m.t,r);
    r.divRemTo(this.m,null,r);
    if(x.s < 0 && r.compareTo(BigInteger.ZERO) > 0) this.m.subTo(r,r);
    return r;
  }
  // x/R mod m
  function montRevert(x) {
    var r = nbi();
    x.copyTo(r);
    this.reduce(r);
    return r;
  }
  // x = x/R mod m (HAC 14.32)
  function montReduce(x) {
    while(x.t <= this.mt2)	// pad x so am has enough room later
      x[x.t++] = 0;
    for(var i = 0; i < this.m.t; ++i) {
      // faster way of calculating u0 = x[i]*mp mod DV
      var j = x[i]&0x7fff;
      var u0 = (j*this.mpl+(((j*this.mph+(x[i]>>15)*this.mpl)&this.um)<<15))&x.DM;
      // use am to combine the multiply-shift-add into one call
      j = i+this.m.t;
      x[j] += this.m.am(0,u0,x,i,0,this.m.t);
      // propagate carry
      while(x[j] >= x.DV) { x[j] -= x.DV; x[++j]++; }
    }
    x.clamp();
    x.drShiftTo(this.m.t,x);
    if(x.compareTo(this.m) >= 0) x.subTo(this.m,x);
  }
  // r = "x^2/R mod m"; x != r
  function montSqrTo(x,r) { x.squareTo(r); this.reduce(r); }
  // r = "xy/R mod m"; x,y != r
  function montMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }
  Montgomery.prototype.convert = montConvert;
  Montgomery.prototype.revert = montRevert;
  Montgomery.prototype.reduce = montReduce;
  Montgomery.prototype.mulTo = montMulTo;
  Montgomery.prototype.sqrTo = montSqrTo;
  // (protected) true iff this is even
  function bnpIsEven() { return ((this.t>0)?(this[0]&1):this.s) == 0; }
  // (protected) this^e, e < 2^32, doing sqr and mul with "r" (HAC 14.79)
  function bnpExp(e,z) {
    if(e > 0xffffffff || e < 1) return BigInteger.ONE;
    var r = nbi(), r2 = nbi(), g = z.convert(this), i = nbits(e)-1;
    g.copyTo(r);
    while(--i >= 0) {
      z.sqrTo(r,r2);
      if((e&(1<<i)) > 0) z.mulTo(r2,g,r);
      else { var t = r; r = r2; r2 = t; }
    }
    return z.revert(r);
  }
  // (public) this^e % m, 0 <= e < 2^32
  function bnModPowInt(e,m) {
    var z;
    if(e < 256 || m.isEven()) z = new Classic(m); else z = new Montgomery(m);
    return this.exp(e,z);
  }
  // protected
  BigInteger.prototype.copyTo = bnpCopyTo;
  BigInteger.prototype.fromInt = bnpFromInt;
  BigInteger.prototype.fromString = bnpFromString;
  BigInteger.prototype.clamp = bnpClamp;
  BigInteger.prototype.dlShiftTo = bnpDLShiftTo;
  BigInteger.prototype.drShiftTo = bnpDRShiftTo;
  BigInteger.prototype.lShiftTo = bnpLShiftTo;
  BigInteger.prototype.rShiftTo = bnpRShiftTo;
  BigInteger.prototype.subTo = bnpSubTo;
  BigInteger.prototype.multiplyTo = bnpMultiplyTo;
  BigInteger.prototype.squareTo = bnpSquareTo;
  BigInteger.prototype.divRemTo = bnpDivRemTo;
  BigInteger.prototype.invDigit = bnpInvDigit;
  BigInteger.prototype.isEven = bnpIsEven;
  BigInteger.prototype.exp = bnpExp;
  // public
  BigInteger.prototype.toString = bnToString;
  BigInteger.prototype.negate = bnNegate;
  BigInteger.prototype.abs = bnAbs;
  BigInteger.prototype.compareTo = bnCompareTo;
  BigInteger.prototype.bitLength = bnBitLength;
  BigInteger.prototype.mod = bnMod;
  BigInteger.prototype.modPowInt = bnModPowInt;
  // "constants"
  BigInteger.ZERO = nbv(0);
  BigInteger.ONE = nbv(1);
  // jsbn2 stuff
  // (protected) convert from radix string
  function bnpFromRadix(s,b) {
    this.fromInt(0);
    if(b == null) b = 10;
    var cs = this.chunkSize(b);
    var d = Math.pow(b,cs), mi = false, j = 0, w = 0;
    for(var i = 0; i < s.length; ++i) {
      var x = intAt(s,i);
      if(x < 0) {
        if(s.charAt(i) == "-" && this.signum() == 0) mi = true;
        continue;
      }
      w = b*w+x;
      if(++j >= cs) {
        this.dMultiply(d);
        this.dAddOffset(w,0);
        j = 0;
        w = 0;
      }
    }
    if(j > 0) {
      this.dMultiply(Math.pow(b,j));
      this.dAddOffset(w,0);
    }
    if(mi) BigInteger.ZERO.subTo(this,this);
  }
  // (protected) return x s.t. r^x < DV
  function bnpChunkSize(r) { return Math.floor(Math.LN2*this.DB/Math.log(r)); }
  // (public) 0 if this == 0, 1 if this > 0
  function bnSigNum() {
    if(this.s < 0) return -1;
    else if(this.t <= 0 || (this.t == 1 && this[0] <= 0)) return 0;
    else return 1;
  }
  // (protected) this *= n, this >= 0, 1 < n < DV
  function bnpDMultiply(n) {
    this[this.t] = this.am(0,n-1,this,0,0,this.t);
    ++this.t;
    this.clamp();
  }
  // (protected) this += n << w words, this >= 0
  function bnpDAddOffset(n,w) {
    if(n == 0) return;
    while(this.t <= w) this[this.t++] = 0;
    this[w] += n;
    while(this[w] >= this.DV) {
      this[w] -= this.DV;
      if(++w >= this.t) this[this.t++] = 0;
      ++this[w];
    }
  }
  // (protected) convert to radix string
  function bnpToRadix(b) {
    if(b == null) b = 10;
    if(this.signum() == 0 || b < 2 || b > 36) return "0";
    var cs = this.chunkSize(b);
    var a = Math.pow(b,cs);
    var d = nbv(a), y = nbi(), z = nbi(), r = "";
    this.divRemTo(d,y,z);
    while(y.signum() > 0) {
      r = (a+z.intValue()).toString(b).substr(1) + r;
      y.divRemTo(d,y,z);
    }
    return z.intValue().toString(b) + r;
  }
  // (public) return value as integer
  function bnIntValue() {
    if(this.s < 0) {
      if(this.t == 1) return this[0]-this.DV;
      else if(this.t == 0) return -1;
    }
    else if(this.t == 1) return this[0];
    else if(this.t == 0) return 0;
    // assumes 16 < DB < 32
    return ((this[1]&((1<<(32-this.DB))-1))<<this.DB)|this[0];
  }
  // (protected) r = this + a
  function bnpAddTo(a,r) {
    var i = 0, c = 0, m = Math.min(a.t,this.t);
    while(i < m) {
      c += this[i]+a[i];
      r[i++] = c&this.DM;
      c >>= this.DB;
    }
    if(a.t < this.t) {
      c += a.s;
      while(i < this.t) {
        c += this[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += this.s;
    }
    else {
      c += this.s;
      while(i < a.t) {
        c += a[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += a.s;
    }
    r.s = (c<0)?-1:0;
    if(c > 0) r[i++] = c;
    else if(c < -1) r[i++] = this.DV+c;
    r.t = i;
    r.clamp();
  }
  BigInteger.prototype.fromRadix = bnpFromRadix;
  BigInteger.prototype.chunkSize = bnpChunkSize;
  BigInteger.prototype.signum = bnSigNum;
  BigInteger.prototype.dMultiply = bnpDMultiply;
  BigInteger.prototype.dAddOffset = bnpDAddOffset;
  BigInteger.prototype.toRadix = bnpToRadix;
  BigInteger.prototype.intValue = bnIntValue;
  BigInteger.prototype.addTo = bnpAddTo;
  //======= end jsbn =======
  // Emscripten wrapper
  var Wrapper = {
    abs: function(l, h) {
      var x = new goog.math.Long(l, h);
      var ret;
      if (x.isNegative()) {
        ret = x.negate();
      } else {
        ret = x;
      }
      HEAP32[tempDoublePtr>>2] = ret.low_;
      HEAP32[tempDoublePtr+4>>2] = ret.high_;
    },
    ensureTemps: function() {
      if (Wrapper.ensuredTemps) return;
      Wrapper.ensuredTemps = true;
      Wrapper.two32 = new BigInteger();
      Wrapper.two32.fromString('4294967296', 10);
      Wrapper.two64 = new BigInteger();
      Wrapper.two64.fromString('18446744073709551616', 10);
      Wrapper.temp1 = new BigInteger();
      Wrapper.temp2 = new BigInteger();
    },
    lh2bignum: function(l, h) {
      var a = new BigInteger();
      a.fromString(h.toString(), 10);
      var b = new BigInteger();
      a.multiplyTo(Wrapper.two32, b);
      var c = new BigInteger();
      c.fromString(l.toString(), 10);
      var d = new BigInteger();
      c.addTo(b, d);
      return d;
    },
    stringify: function(l, h, unsigned) {
      var ret = new goog.math.Long(l, h).toString();
      if (unsigned && ret[0] == '-') {
        // unsign slowly using jsbn bignums
        Wrapper.ensureTemps();
        var bignum = new BigInteger();
        bignum.fromString(ret, 10);
        ret = new BigInteger();
        Wrapper.two64.addTo(bignum, ret);
        ret = ret.toString(10);
      }
      return ret;
    },
    fromString: function(str, base, min, max, unsigned) {
      Wrapper.ensureTemps();
      var bignum = new BigInteger();
      bignum.fromString(str, base);
      var bigmin = new BigInteger();
      bigmin.fromString(min, 10);
      var bigmax = new BigInteger();
      bigmax.fromString(max, 10);
      if (unsigned && bignum.compareTo(BigInteger.ZERO) < 0) {
        var temp = new BigInteger();
        bignum.addTo(Wrapper.two64, temp);
        bignum = temp;
      }
      var error = false;
      if (bignum.compareTo(bigmin) < 0) {
        bignum = bigmin;
        error = true;
      } else if (bignum.compareTo(bigmax) > 0) {
        bignum = bigmax;
        error = true;
      }
      var ret = goog.math.Long.fromString(bignum.toString()); // min-max checks should have clamped this to a range goog.math.Long can handle well
      HEAP32[tempDoublePtr>>2] = ret.low_;
      HEAP32[tempDoublePtr+4>>2] = ret.high_;
      if (error) throw 'range error';
    }
  };
  return Wrapper;
})();
//======= end closure i64 code =======
// === Auto-generated postamble setup entry stuff ===
if (memoryInitializer) {
  function applyData(data) {
    HEAPU8.set(data, STATIC_BASE);
  }
  if (ENVIRONMENT_IS_NODE || ENVIRONMENT_IS_SHELL) {
    applyData(Module['readBinary'](memoryInitializer));
  } else {
    addRunDependency('memory initializer');
    Browser.asyncLoad(memoryInitializer, function(data) {
      applyData(data);
      removeRunDependency('memory initializer');
    }, function(data) {
      throw 'could not load memory initializer ' + memoryInitializer;
    });
  }
}
function ExitStatus(status) {
  this.name = "ExitStatus";
  this.message = "Program terminated with exit(" + status + ")";
  this.status = status;
};
ExitStatus.prototype = new Error();
ExitStatus.prototype.constructor = ExitStatus;
var initialStackTop;
var preloadStartTime = null;
var calledMain = false;
dependenciesFulfilled = function runCaller() {
  // If run has never been called, and we should call run (INVOKE_RUN is true, and Module.noInitialRun is not false)
  if (!Module['calledRun'] && shouldRunNow) run();
  if (!Module['calledRun']) dependenciesFulfilled = runCaller; // try this again later, after new deps are fulfilled
}
Module['callMain'] = Module.callMain = function callMain(args) {
  assert(runDependencies == 0, 'cannot call main when async dependencies remain! (listen on __ATMAIN__)');
  assert(__ATPRERUN__.length == 0, 'cannot call main when preRun functions remain to be called');
  args = args || [];
  if (ENVIRONMENT_IS_WEB && preloadStartTime !== null) {
    Module.printErr('preload time: ' + (Date.now() - preloadStartTime) + ' ms');
  }
  ensureInitRuntime();
  var argc = args.length+1;
  function pad() {
    for (var i = 0; i < 4-1; i++) {
      argv.push(0);
    }
  }
  var argv = [allocate(intArrayFromString("/bin/this.program"), 'i8', ALLOC_NORMAL) ];
  pad();
  for (var i = 0; i < argc-1; i = i + 1) {
    argv.push(allocate(intArrayFromString(args[i]), 'i8', ALLOC_NORMAL));
    pad();
  }
  argv.push(0);
  argv = allocate(argv, 'i32', ALLOC_NORMAL);
  initialStackTop = STACKTOP;
  try {
    var ret = Module['_main'](argc, argv, 0);
    // if we're not running an evented main loop, it's time to exit
    if (!Module['noExitRuntime']) {
      exit(ret);
    }
  }
  catch(e) {
    if (e instanceof ExitStatus) {
      // exit() throws this once it's done to make sure execution
      // has been stopped completely
      return;
    } else if (e == 'SimulateInfiniteLoop') {
      // running an evented main loop, don't immediately exit
      Module['noExitRuntime'] = true;
      return;
    } else {
      if (e && typeof e === 'object' && e.stack) Module.printErr('exception thrown: ' + [e, e.stack]);
      throw e;
    }
  } finally {
    calledMain = true;
  }
}
function run(args) {
  args = args || Module['arguments'];
  if (preloadStartTime === null) preloadStartTime = Date.now();
  if (runDependencies > 0) {
    Module.printErr('run() called, but dependencies remain, so not running');
    return;
  }
  preRun();
  if (runDependencies > 0) {
    // a preRun added a dependency, run will be called later
    return;
  }
  function doRun() {
    ensureInitRuntime();
    preMain();
    Module['calledRun'] = true;
    if (Module['_main'] && shouldRunNow) {
      Module['callMain'](args);
    }
    postRun();
  }
  if (Module['setStatus']) {
    Module['setStatus']('Running...');
    setTimeout(function() {
      setTimeout(function() {
        Module['setStatus']('');
      }, 1);
      if (!ABORT) doRun();
    }, 1);
  } else {
    doRun();
  }
}
Module['run'] = Module.run = run;
function exit(status) {
  ABORT = true;
  EXITSTATUS = status;
  STACKTOP = initialStackTop;
  // exit the runtime
  exitRuntime();
  // TODO We should handle this differently based on environment.
  // In the browser, the best we can do is throw an exception
  // to halt execution, but in node we could process.exit and
  // I'd imagine SM shell would have something equivalent.
  // This would let us set a proper exit status (which
  // would be great for checking test exit statuses).
  // https://github.com/kripken/emscripten/issues/1371
  // throw an exception to halt the current execution
  throw new ExitStatus(status);
}
Module['exit'] = Module.exit = exit;
function abort(text) {
  if (text) {
    Module.print(text);
    Module.printErr(text);
  }
  ABORT = true;
  EXITSTATUS = 1;
  throw 'abort() at ' + stackTrace();
}
Module['abort'] = Module.abort = abort;
// {{PRE_RUN_ADDITIONS}}
if (Module['preInit']) {
  if (typeof Module['preInit'] == 'function') Module['preInit'] = [Module['preInit']];
  while (Module['preInit'].length > 0) {
    Module['preInit'].pop()();
  }
}
// shouldRunNow refers to calling main(), not run().
var shouldRunNow = true;
if (Module['noInitialRun']) {
  shouldRunNow = false;
}
run();
// {{POST_RUN_ADDITIONS}}
// {{MODULE_ADDITIONS}}
